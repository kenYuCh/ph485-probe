

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Apr 20 15:12:29 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18425
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    31                           	psect	cinit,global,class=CODE,merge=1,delta=2
    32                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    34                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    35                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    36                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    37                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    38                           	psect	inittext,global,class=CODE,delta=2
    39                           	psect	clrtext,global,class=CODE,delta=2
    40                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    41                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    42                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    43                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    44                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    45                           	psect	text1,local,class=CODE,merge=1,delta=2
    46                           	psect	text2,local,class=CODE,merge=1,delta=2
    47                           	psect	text3,local,class=CODE,merge=1,delta=2
    48                           	psect	text4,local,class=CODE,merge=1,delta=2
    49                           	psect	text5,local,class=CODE,merge=1,delta=2
    50                           	psect	text6,local,class=CODE,merge=1,delta=2
    51                           	psect	text7,local,class=CODE,merge=1,delta=2
    52                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text14,local,class=CODE,merge=1,delta=2
    59                           	psect	text15,local,class=CODE,merge=1,delta=2
    60                           	psect	text16,local,class=CODE,merge=1,delta=2
    61                           	psect	text17,local,class=CODE,merge=1,delta=2
    62                           	psect	text18,local,class=CODE,merge=1,delta=2
    63                           	psect	text19,local,class=CODE,merge=1,delta=2
    64                           	psect	text20,local,class=CODE,merge=1,delta=2
    65                           	psect	text21,local,class=CODE,merge=1,delta=2
    66                           	psect	text22,local,class=CODE,merge=1,delta=2
    67                           	psect	text23,local,class=CODE,merge=1,delta=2
    68                           	psect	text24,local,class=CODE,merge=1,delta=2
    69                           	psect	text25,local,class=CODE,merge=1,delta=2
    70                           	psect	text26,local,class=CODE,merge=1,delta=2
    71                           	psect	text27,local,class=CODE,merge=1,delta=2
    72                           	psect	text28,local,class=CODE,merge=1,delta=2
    73                           	psect	text29,local,class=CODE,merge=1,delta=2
    74                           	psect	text30,local,class=CODE,merge=1,delta=2
    75                           	psect	text31,local,class=CODE,merge=1,delta=2
    76                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    77                           	psect	text33,local,class=CODE,merge=1,delta=2
    78                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text35,local,class=CODE,merge=1,delta=2
    80                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    81                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text40,local,class=CODE,merge=1,delta=2
    85                           	psect	text41,local,class=CODE,merge=1,delta=2
    86                           	psect	text42,local,class=CODE,merge=1,delta=2
    87                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text46,local,class=CODE,merge=1,delta=2
    91                           	psect	text47,local,class=CODE,merge=1,delta=2
    92                           	psect	text48,local,class=CODE,merge=1,delta=2
    93                           	psect	text49,local,class=CODE,merge=1,delta=2
    94                           	psect	text50,local,class=CODE,merge=1,delta=2
    95                           	psect	text51,local,class=CODE,merge=1,delta=2
    96                           	psect	intentry,global,class=CODE,delta=2
    97                           	psect	text53,local,class=CODE,merge=1,delta=2
    98                           	psect	text54,local,class=CODE,merge=1,delta=2
    99                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   100                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   101                           	dabs	1,0x7E,2
   102     0000                     
   103                           ; Version 2.40
   104                           ; Generated 04/07/2022 GMT
   105                           ; 
   106                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution. Publication is not required when
   120                           ;        this file is used in an embedded application.
   121                           ; 
   122                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   123                           ;        software without specific prior written permission.
   124                           ; 
   125                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   126                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   127                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   128                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   129                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   130                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   131                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   132                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   133                           ; 
   134                           ; 
   135                           ; Code-generator required, PIC16F18425 Definitions
   136                           ; 
   137                           ; SFR Addresses
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000E                     	;# 
   152     0012                     	;# 
   153     0014                     	;# 
   154     0018                     	;# 
   155     001A                     	;# 
   156     008C                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     008E                     	;# 
   161     008F                     	;# 
   162     0090                     	;# 
   163     0090                     	;# 
   164     0091                     	;# 
   165     0092                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0094                     	;# 
   170     0095                     	;# 
   171     0096                     	;# 
   172     0096                     	;# 
   173     0097                     	;# 
   174     0098                     	;# 
   175     0099                     	;# 
   176     009A                     	;# 
   177     009B                     	;# 
   178     009B                     	;# 
   179     009C                     	;# 
   180     009D                     	;# 
   181     009D                     	;# 
   182     009E                     	;# 
   183     009F                     	;# 
   184     010C                     	;# 
   185     010C                     	;# 
   186     010D                     	;# 
   187     010E                     	;# 
   188     010F                     	;# 
   189     010F                     	;# 
   190     0110                     	;# 
   191     0111                     	;# 
   192     0112                     	;# 
   193     0113                     	;# 
   194     0114                     	;# 
   195     0115                     	;# 
   196     0116                     	;# 
   197     0117                     	;# 
   198     0118                     	;# 
   199     0119                     	;# 
   200     0119                     	;# 
   201     0119                     	;# 
   202     011A                     	;# 
   203     011A                     	;# 
   204     011A                     	;# 
   205     011B                     	;# 
   206     011B                     	;# 
   207     011B                     	;# 
   208     011B                     	;# 
   209     011B                     	;# 
   210     011C                     	;# 
   211     011C                     	;# 
   212     011C                     	;# 
   213     011D                     	;# 
   214     011D                     	;# 
   215     011D                     	;# 
   216     011E                     	;# 
   217     011E                     	;# 
   218     011E                     	;# 
   219     011F                     	;# 
   220     011F                     	;# 
   221     011F                     	;# 
   222     011F                     	;# 
   223     011F                     	;# 
   224     018C                     	;# 
   225     018D                     	;# 
   226     018E                     	;# 
   227     018F                     	;# 
   228     0190                     	;# 
   229     0191                     	;# 
   230     0192                     	;# 
   231     0196                     	;# 
   232     0197                     	;# 
   233     0198                     	;# 
   234     0199                     	;# 
   235     019A                     	;# 
   236     019B                     	;# 
   237     019C                     	;# 
   238     020C                     	;# 
   239     020D                     	;# 
   240     020E                     	;# 
   241     020E                     	;# 
   242     020F                     	;# 
   243     020F                     	;# 
   244     0210                     	;# 
   245     0210                     	;# 
   246     0211                     	;# 
   247     0211                     	;# 
   248     0212                     	;# 
   249     0213                     	;# 
   250     0214                     	;# 
   251     0214                     	;# 
   252     0215                     	;# 
   253     0215                     	;# 
   254     0216                     	;# 
   255     0216                     	;# 
   256     0217                     	;# 
   257     0217                     	;# 
   258     0218                     	;# 
   259     0219                     	;# 
   260     021A                     	;# 
   261     021A                     	;# 
   262     021B                     	;# 
   263     021B                     	;# 
   264     021C                     	;# 
   265     021C                     	;# 
   266     021D                     	;# 
   267     021D                     	;# 
   268     021E                     	;# 
   269     021F                     	;# 
   270     028C                     	;# 
   271     028C                     	;# 
   272     028D                     	;# 
   273     028D                     	;# 
   274     028E                     	;# 
   275     028F                     	;# 
   276     0290                     	;# 
   277     0291                     	;# 
   278     0292                     	;# 
   279     0292                     	;# 
   280     0293                     	;# 
   281     0293                     	;# 
   282     0294                     	;# 
   283     0295                     	;# 
   284     0296                     	;# 
   285     0297                     	;# 
   286     0298                     	;# 
   287     0298                     	;# 
   288     0299                     	;# 
   289     0299                     	;# 
   290     029A                     	;# 
   291     029B                     	;# 
   292     029C                     	;# 
   293     029D                     	;# 
   294     029F                     	;# 
   295     030C                     	;# 
   296     030C                     	;# 
   297     030D                     	;# 
   298     030E                     	;# 
   299     030F                     	;# 
   300     0310                     	;# 
   301     0310                     	;# 
   302     0311                     	;# 
   303     0312                     	;# 
   304     0313                     	;# 
   305     0314                     	;# 
   306     0314                     	;# 
   307     0315                     	;# 
   308     0316                     	;# 
   309     0317                     	;# 
   310     0318                     	;# 
   311     0318                     	;# 
   312     0319                     	;# 
   313     031A                     	;# 
   314     031B                     	;# 
   315     038C                     	;# 
   316     038C                     	;# 
   317     038D                     	;# 
   318     038E                     	;# 
   319     0390                     	;# 
   320     0390                     	;# 
   321     0391                     	;# 
   322     0392                     	;# 
   323     048C                     	;# 
   324     048C                     	;# 
   325     048D                     	;# 
   326     048E                     	;# 
   327     048F                     	;# 
   328     048F                     	;# 
   329     0490                     	;# 
   330     0491                     	;# 
   331     0492                     	;# 
   332     0492                     	;# 
   333     0493                     	;# 
   334     0494                     	;# 
   335     0495                     	;# 
   336     0495                     	;# 
   337     0496                     	;# 
   338     0497                     	;# 
   339     0498                     	;# 
   340     0499                     	;# 
   341     049A                     	;# 
   342     049B                     	;# 
   343     049C                     	;# 
   344     049D                     	;# 
   345     058C                     	;# 
   346     058C                     	;# 
   347     058D                     	;# 
   348     058E                     	;# 
   349     058F                     	;# 
   350     058F                     	;# 
   351     0590                     	;# 
   352     0591                     	;# 
   353     0592                     	;# 
   354     0593                     	;# 
   355     059C                     	;# 
   356     059C                     	;# 
   357     059D                     	;# 
   358     059D                     	;# 
   359     059E                     	;# 
   360     059F                     	;# 
   361     060C                     	;# 
   362     060C                     	;# 
   363     060D                     	;# 
   364     060D                     	;# 
   365     060E                     	;# 
   366     060F                     	;# 
   367     0610                     	;# 
   368     0611                     	;# 
   369     0612                     	;# 
   370     0613                     	;# 
   371     0614                     	;# 
   372     0616                     	;# 
   373     0616                     	;# 
   374     0617                     	;# 
   375     0617                     	;# 
   376     0618                     	;# 
   377     0619                     	;# 
   378     061A                     	;# 
   379     061B                     	;# 
   380     061C                     	;# 
   381     061D                     	;# 
   382     061E                     	;# 
   383     070C                     	;# 
   384     070D                     	;# 
   385     070E                     	;# 
   386     070F                     	;# 
   387     0710                     	;# 
   388     0711                     	;# 
   389     0712                     	;# 
   390     0713                     	;# 
   391     0714                     	;# 
   392     0716                     	;# 
   393     0717                     	;# 
   394     0718                     	;# 
   395     0719                     	;# 
   396     071A                     	;# 
   397     071B                     	;# 
   398     071C                     	;# 
   399     071D                     	;# 
   400     071E                     	;# 
   401     0796                     	;# 
   402     0797                     	;# 
   403     0798                     	;# 
   404     0799                     	;# 
   405     079A                     	;# 
   406     079B                     	;# 
   407     079C                     	;# 
   408     079D                     	;# 
   409     080C                     	;# 
   410     080D                     	;# 
   411     080E                     	;# 
   412     080F                     	;# 
   413     0810                     	;# 
   414     0811                     	;# 
   415     0812                     	;# 
   416     0813                     	;# 
   417     0814                     	;# 
   418     081A                     	;# 
   419     081A                     	;# 
   420     081B                     	;# 
   421     081C                     	;# 
   422     081C                     	;# 
   423     081D                     	;# 
   424     081E                     	;# 
   425     081F                     	;# 
   426     088C                     	;# 
   427     088D                     	;# 
   428     088E                     	;# 
   429     088F                     	;# 
   430     0890                     	;# 
   431     0891                     	;# 
   432     0892                     	;# 
   433     0893                     	;# 
   434     0895                     	;# 
   435     0896                     	;# 
   436     0897                     	;# 
   437     0898                     	;# 
   438     0899                     	;# 
   439     089A                     	;# 
   440     089B                     	;# 
   441     090C                     	;# 
   442     090E                     	;# 
   443     090F                     	;# 
   444     091F                     	;# 
   445     098F                     	;# 
   446     098F                     	;# 
   447     0990                     	;# 
   448     0991                     	;# 
   449     0992                     	;# 
   450     0993                     	;# 
   451     0994                     	;# 
   452     0995                     	;# 
   453     0996                     	;# 
   454     0997                     	;# 
   455     1E0F                     	;# 
   456     1E10                     	;# 
   457     1E11                     	;# 
   458     1E12                     	;# 
   459     1E13                     	;# 
   460     1E14                     	;# 
   461     1E15                     	;# 
   462     1E16                     	;# 
   463     1E17                     	;# 
   464     1E18                     	;# 
   465     1E19                     	;# 
   466     1E1A                     	;# 
   467     1E1B                     	;# 
   468     1E1C                     	;# 
   469     1E1D                     	;# 
   470     1E1E                     	;# 
   471     1E1F                     	;# 
   472     1E20                     	;# 
   473     1E21                     	;# 
   474     1E22                     	;# 
   475     1E23                     	;# 
   476     1E24                     	;# 
   477     1E25                     	;# 
   478     1E26                     	;# 
   479     1E27                     	;# 
   480     1E28                     	;# 
   481     1E29                     	;# 
   482     1E2A                     	;# 
   483     1E2B                     	;# 
   484     1E2C                     	;# 
   485     1E2D                     	;# 
   486     1E2E                     	;# 
   487     1E2F                     	;# 
   488     1E30                     	;# 
   489     1E31                     	;# 
   490     1E32                     	;# 
   491     1E33                     	;# 
   492     1E34                     	;# 
   493     1E35                     	;# 
   494     1E36                     	;# 
   495     1E37                     	;# 
   496     1E8F                     	;# 
   497     1E90                     	;# 
   498     1E91                     	;# 
   499     1E92                     	;# 
   500     1E93                     	;# 
   501     1E94                     	;# 
   502     1E95                     	;# 
   503     1E96                     	;# 
   504     1E97                     	;# 
   505     1E9C                     	;# 
   506     1E9D                     	;# 
   507     1E9E                     	;# 
   508     1EA1                     	;# 
   509     1EA2                     	;# 
   510     1EA3                     	;# 
   511     1EA4                     	;# 
   512     1EA9                     	;# 
   513     1EAA                     	;# 
   514     1EB1                     	;# 
   515     1EB2                     	;# 
   516     1EB8                     	;# 
   517     1EB9                     	;# 
   518     1EBA                     	;# 
   519     1EBB                     	;# 
   520     1EBC                     	;# 
   521     1EBD                     	;# 
   522     1EBE                     	;# 
   523     1EC3                     	;# 
   524     1EC5                     	;# 
   525     1EC6                     	;# 
   526     1EC7                     	;# 
   527     1EC8                     	;# 
   528     1EC9                     	;# 
   529     1ECA                     	;# 
   530     1ECB                     	;# 
   531     1ECC                     	;# 
   532     1F10                     	;# 
   533     1F11                     	;# 
   534     1F12                     	;# 
   535     1F14                     	;# 
   536     1F15                     	;# 
   537     1F20                     	;# 
   538     1F21                     	;# 
   539     1F22                     	;# 
   540     1F23                     	;# 
   541     1F24                     	;# 
   542     1F25                     	;# 
   543     1F38                     	;# 
   544     1F39                     	;# 
   545     1F3A                     	;# 
   546     1F3B                     	;# 
   547     1F3C                     	;# 
   548     1F3D                     	;# 
   549     1F3E                     	;# 
   550     1F3F                     	;# 
   551     1F4E                     	;# 
   552     1F4F                     	;# 
   553     1F50                     	;# 
   554     1F51                     	;# 
   555     1F52                     	;# 
   556     1F53                     	;# 
   557     1F54                     	;# 
   558     1F55                     	;# 
   559     1FE4                     	;# 
   560     1FE5                     	;# 
   561     1FE6                     	;# 
   562     1FE7                     	;# 
   563     1FE8                     	;# 
   564     1FE8                     	;# 
   565     1FE9                     	;# 
   566     1FEA                     	;# 
   567     1FEB                     	;# 
   568     1FED                     	;# 
   569     1FEE                     	;# 
   570     1FEF                     	;# 
   571     0000                     	;# 
   572     0001                     	;# 
   573     0002                     	;# 
   574     0003                     	;# 
   575     0004                     	;# 
   576     0005                     	;# 
   577     0006                     	;# 
   578     0007                     	;# 
   579     0008                     	;# 
   580     0009                     	;# 
   581     000A                     	;# 
   582     000B                     	;# 
   583     000C                     	;# 
   584     000E                     	;# 
   585     0012                     	;# 
   586     0014                     	;# 
   587     0018                     	;# 
   588     001A                     	;# 
   589     008C                     	;# 
   590     008C                     	;# 
   591     008D                     	;# 
   592     008E                     	;# 
   593     008E                     	;# 
   594     008F                     	;# 
   595     0090                     	;# 
   596     0090                     	;# 
   597     0091                     	;# 
   598     0092                     	;# 
   599     0092                     	;# 
   600     0093                     	;# 
   601     0094                     	;# 
   602     0094                     	;# 
   603     0095                     	;# 
   604     0096                     	;# 
   605     0096                     	;# 
   606     0097                     	;# 
   607     0098                     	;# 
   608     0099                     	;# 
   609     009A                     	;# 
   610     009B                     	;# 
   611     009B                     	;# 
   612     009C                     	;# 
   613     009D                     	;# 
   614     009D                     	;# 
   615     009E                     	;# 
   616     009F                     	;# 
   617     010C                     	;# 
   618     010C                     	;# 
   619     010D                     	;# 
   620     010E                     	;# 
   621     010F                     	;# 
   622     010F                     	;# 
   623     0110                     	;# 
   624     0111                     	;# 
   625     0112                     	;# 
   626     0113                     	;# 
   627     0114                     	;# 
   628     0115                     	;# 
   629     0116                     	;# 
   630     0117                     	;# 
   631     0118                     	;# 
   632     0119                     	;# 
   633     0119                     	;# 
   634     0119                     	;# 
   635     011A                     	;# 
   636     011A                     	;# 
   637     011A                     	;# 
   638     011B                     	;# 
   639     011B                     	;# 
   640     011B                     	;# 
   641     011B                     	;# 
   642     011B                     	;# 
   643     011C                     	;# 
   644     011C                     	;# 
   645     011C                     	;# 
   646     011D                     	;# 
   647     011D                     	;# 
   648     011D                     	;# 
   649     011E                     	;# 
   650     011E                     	;# 
   651     011E                     	;# 
   652     011F                     	;# 
   653     011F                     	;# 
   654     011F                     	;# 
   655     011F                     	;# 
   656     011F                     	;# 
   657     018C                     	;# 
   658     018D                     	;# 
   659     018E                     	;# 
   660     018F                     	;# 
   661     0190                     	;# 
   662     0191                     	;# 
   663     0192                     	;# 
   664     0196                     	;# 
   665     0197                     	;# 
   666     0198                     	;# 
   667     0199                     	;# 
   668     019A                     	;# 
   669     019B                     	;# 
   670     019C                     	;# 
   671     020C                     	;# 
   672     020D                     	;# 
   673     020E                     	;# 
   674     020E                     	;# 
   675     020F                     	;# 
   676     020F                     	;# 
   677     0210                     	;# 
   678     0210                     	;# 
   679     0211                     	;# 
   680     0211                     	;# 
   681     0212                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0216                     	;# 
   688     0216                     	;# 
   689     0217                     	;# 
   690     0217                     	;# 
   691     0218                     	;# 
   692     0219                     	;# 
   693     021A                     	;# 
   694     021A                     	;# 
   695     021B                     	;# 
   696     021B                     	;# 
   697     021C                     	;# 
   698     021C                     	;# 
   699     021D                     	;# 
   700     021D                     	;# 
   701     021E                     	;# 
   702     021F                     	;# 
   703     028C                     	;# 
   704     028C                     	;# 
   705     028D                     	;# 
   706     028D                     	;# 
   707     028E                     	;# 
   708     028F                     	;# 
   709     0290                     	;# 
   710     0291                     	;# 
   711     0292                     	;# 
   712     0292                     	;# 
   713     0293                     	;# 
   714     0293                     	;# 
   715     0294                     	;# 
   716     0295                     	;# 
   717     0296                     	;# 
   718     0297                     	;# 
   719     0298                     	;# 
   720     0298                     	;# 
   721     0299                     	;# 
   722     0299                     	;# 
   723     029A                     	;# 
   724     029B                     	;# 
   725     029C                     	;# 
   726     029D                     	;# 
   727     029F                     	;# 
   728     030C                     	;# 
   729     030C                     	;# 
   730     030D                     	;# 
   731     030E                     	;# 
   732     030F                     	;# 
   733     0310                     	;# 
   734     0310                     	;# 
   735     0311                     	;# 
   736     0312                     	;# 
   737     0313                     	;# 
   738     0314                     	;# 
   739     0314                     	;# 
   740     0315                     	;# 
   741     0316                     	;# 
   742     0317                     	;# 
   743     0318                     	;# 
   744     0318                     	;# 
   745     0319                     	;# 
   746     031A                     	;# 
   747     031B                     	;# 
   748     038C                     	;# 
   749     038C                     	;# 
   750     038D                     	;# 
   751     038E                     	;# 
   752     0390                     	;# 
   753     0390                     	;# 
   754     0391                     	;# 
   755     0392                     	;# 
   756     048C                     	;# 
   757     048C                     	;# 
   758     048D                     	;# 
   759     048E                     	;# 
   760     048F                     	;# 
   761     048F                     	;# 
   762     0490                     	;# 
   763     0491                     	;# 
   764     0492                     	;# 
   765     0492                     	;# 
   766     0493                     	;# 
   767     0494                     	;# 
   768     0495                     	;# 
   769     0495                     	;# 
   770     0496                     	;# 
   771     0497                     	;# 
   772     0498                     	;# 
   773     0499                     	;# 
   774     049A                     	;# 
   775     049B                     	;# 
   776     049C                     	;# 
   777     049D                     	;# 
   778     058C                     	;# 
   779     058C                     	;# 
   780     058D                     	;# 
   781     058E                     	;# 
   782     058F                     	;# 
   783     058F                     	;# 
   784     0590                     	;# 
   785     0591                     	;# 
   786     0592                     	;# 
   787     0593                     	;# 
   788     059C                     	;# 
   789     059C                     	;# 
   790     059D                     	;# 
   791     059D                     	;# 
   792     059E                     	;# 
   793     059F                     	;# 
   794     060C                     	;# 
   795     060C                     	;# 
   796     060D                     	;# 
   797     060D                     	;# 
   798     060E                     	;# 
   799     060F                     	;# 
   800     0610                     	;# 
   801     0611                     	;# 
   802     0612                     	;# 
   803     0613                     	;# 
   804     0614                     	;# 
   805     0616                     	;# 
   806     0616                     	;# 
   807     0617                     	;# 
   808     0617                     	;# 
   809     0618                     	;# 
   810     0619                     	;# 
   811     061A                     	;# 
   812     061B                     	;# 
   813     061C                     	;# 
   814     061D                     	;# 
   815     061E                     	;# 
   816     070C                     	;# 
   817     070D                     	;# 
   818     070E                     	;# 
   819     070F                     	;# 
   820     0710                     	;# 
   821     0711                     	;# 
   822     0712                     	;# 
   823     0713                     	;# 
   824     0714                     	;# 
   825     0716                     	;# 
   826     0717                     	;# 
   827     0718                     	;# 
   828     0719                     	;# 
   829     071A                     	;# 
   830     071B                     	;# 
   831     071C                     	;# 
   832     071D                     	;# 
   833     071E                     	;# 
   834     0796                     	;# 
   835     0797                     	;# 
   836     0798                     	;# 
   837     0799                     	;# 
   838     079A                     	;# 
   839     079B                     	;# 
   840     079C                     	;# 
   841     079D                     	;# 
   842     080C                     	;# 
   843     080D                     	;# 
   844     080E                     	;# 
   845     080F                     	;# 
   846     0810                     	;# 
   847     0811                     	;# 
   848     0812                     	;# 
   849     0813                     	;# 
   850     0814                     	;# 
   851     081A                     	;# 
   852     081A                     	;# 
   853     081B                     	;# 
   854     081C                     	;# 
   855     081C                     	;# 
   856     081D                     	;# 
   857     081E                     	;# 
   858     081F                     	;# 
   859     088C                     	;# 
   860     088D                     	;# 
   861     088E                     	;# 
   862     088F                     	;# 
   863     0890                     	;# 
   864     0891                     	;# 
   865     0892                     	;# 
   866     0893                     	;# 
   867     0895                     	;# 
   868     0896                     	;# 
   869     0897                     	;# 
   870     0898                     	;# 
   871     0899                     	;# 
   872     089A                     	;# 
   873     089B                     	;# 
   874     090C                     	;# 
   875     090E                     	;# 
   876     090F                     	;# 
   877     091F                     	;# 
   878     098F                     	;# 
   879     098F                     	;# 
   880     0990                     	;# 
   881     0991                     	;# 
   882     0992                     	;# 
   883     0993                     	;# 
   884     0994                     	;# 
   885     0995                     	;# 
   886     0996                     	;# 
   887     0997                     	;# 
   888     1E0F                     	;# 
   889     1E10                     	;# 
   890     1E11                     	;# 
   891     1E12                     	;# 
   892     1E13                     	;# 
   893     1E14                     	;# 
   894     1E15                     	;# 
   895     1E16                     	;# 
   896     1E17                     	;# 
   897     1E18                     	;# 
   898     1E19                     	;# 
   899     1E1A                     	;# 
   900     1E1B                     	;# 
   901     1E1C                     	;# 
   902     1E1D                     	;# 
   903     1E1E                     	;# 
   904     1E1F                     	;# 
   905     1E20                     	;# 
   906     1E21                     	;# 
   907     1E22                     	;# 
   908     1E23                     	;# 
   909     1E24                     	;# 
   910     1E25                     	;# 
   911     1E26                     	;# 
   912     1E27                     	;# 
   913     1E28                     	;# 
   914     1E29                     	;# 
   915     1E2A                     	;# 
   916     1E2B                     	;# 
   917     1E2C                     	;# 
   918     1E2D                     	;# 
   919     1E2E                     	;# 
   920     1E2F                     	;# 
   921     1E30                     	;# 
   922     1E31                     	;# 
   923     1E32                     	;# 
   924     1E33                     	;# 
   925     1E34                     	;# 
   926     1E35                     	;# 
   927     1E36                     	;# 
   928     1E37                     	;# 
   929     1E8F                     	;# 
   930     1E90                     	;# 
   931     1E91                     	;# 
   932     1E92                     	;# 
   933     1E93                     	;# 
   934     1E94                     	;# 
   935     1E95                     	;# 
   936     1E96                     	;# 
   937     1E97                     	;# 
   938     1E9C                     	;# 
   939     1E9D                     	;# 
   940     1E9E                     	;# 
   941     1EA1                     	;# 
   942     1EA2                     	;# 
   943     1EA3                     	;# 
   944     1EA4                     	;# 
   945     1EA9                     	;# 
   946     1EAA                     	;# 
   947     1EB1                     	;# 
   948     1EB2                     	;# 
   949     1EB8                     	;# 
   950     1EB9                     	;# 
   951     1EBA                     	;# 
   952     1EBB                     	;# 
   953     1EBC                     	;# 
   954     1EBD                     	;# 
   955     1EBE                     	;# 
   956     1EC3                     	;# 
   957     1EC5                     	;# 
   958     1EC6                     	;# 
   959     1EC7                     	;# 
   960     1EC8                     	;# 
   961     1EC9                     	;# 
   962     1ECA                     	;# 
   963     1ECB                     	;# 
   964     1ECC                     	;# 
   965     1F10                     	;# 
   966     1F11                     	;# 
   967     1F12                     	;# 
   968     1F14                     	;# 
   969     1F15                     	;# 
   970     1F20                     	;# 
   971     1F21                     	;# 
   972     1F22                     	;# 
   973     1F23                     	;# 
   974     1F24                     	;# 
   975     1F25                     	;# 
   976     1F38                     	;# 
   977     1F39                     	;# 
   978     1F3A                     	;# 
   979     1F3B                     	;# 
   980     1F3C                     	;# 
   981     1F3D                     	;# 
   982     1F3E                     	;# 
   983     1F3F                     	;# 
   984     1F4E                     	;# 
   985     1F4F                     	;# 
   986     1F50                     	;# 
   987     1F51                     	;# 
   988     1F52                     	;# 
   989     1F53                     	;# 
   990     1F54                     	;# 
   991     1F55                     	;# 
   992     1FE4                     	;# 
   993     1FE5                     	;# 
   994     1FE6                     	;# 
   995     1FE7                     	;# 
   996     1FE8                     	;# 
   997     1FE8                     	;# 
   998     1FE9                     	;# 
   999     1FEA                     	;# 
  1000     1FEB                     	;# 
  1001     1FED                     	;# 
  1002     1FEE                     	;# 
  1003     1FEF                     	;# 
  1004     0000                     	;# 
  1005     0001                     	;# 
  1006     0002                     	;# 
  1007     0003                     	;# 
  1008     0004                     	;# 
  1009     0005                     	;# 
  1010     0006                     	;# 
  1011     0007                     	;# 
  1012     0008                     	;# 
  1013     0009                     	;# 
  1014     000A                     	;# 
  1015     000B                     	;# 
  1016     000C                     	;# 
  1017     000E                     	;# 
  1018     0012                     	;# 
  1019     0014                     	;# 
  1020     0018                     	;# 
  1021     001A                     	;# 
  1022     008C                     	;# 
  1023     008C                     	;# 
  1024     008D                     	;# 
  1025     008E                     	;# 
  1026     008E                     	;# 
  1027     008F                     	;# 
  1028     0090                     	;# 
  1029     0090                     	;# 
  1030     0091                     	;# 
  1031     0092                     	;# 
  1032     0092                     	;# 
  1033     0093                     	;# 
  1034     0094                     	;# 
  1035     0094                     	;# 
  1036     0095                     	;# 
  1037     0096                     	;# 
  1038     0096                     	;# 
  1039     0097                     	;# 
  1040     0098                     	;# 
  1041     0099                     	;# 
  1042     009A                     	;# 
  1043     009B                     	;# 
  1044     009B                     	;# 
  1045     009C                     	;# 
  1046     009D                     	;# 
  1047     009D                     	;# 
  1048     009E                     	;# 
  1049     009F                     	;# 
  1050     010C                     	;# 
  1051     010C                     	;# 
  1052     010D                     	;# 
  1053     010E                     	;# 
  1054     010F                     	;# 
  1055     010F                     	;# 
  1056     0110                     	;# 
  1057     0111                     	;# 
  1058     0112                     	;# 
  1059     0113                     	;# 
  1060     0114                     	;# 
  1061     0115                     	;# 
  1062     0116                     	;# 
  1063     0117                     	;# 
  1064     0118                     	;# 
  1065     0119                     	;# 
  1066     0119                     	;# 
  1067     0119                     	;# 
  1068     011A                     	;# 
  1069     011A                     	;# 
  1070     011A                     	;# 
  1071     011B                     	;# 
  1072     011B                     	;# 
  1073     011B                     	;# 
  1074     011B                     	;# 
  1075     011B                     	;# 
  1076     011C                     	;# 
  1077     011C                     	;# 
  1078     011C                     	;# 
  1079     011D                     	;# 
  1080     011D                     	;# 
  1081     011D                     	;# 
  1082     011E                     	;# 
  1083     011E                     	;# 
  1084     011E                     	;# 
  1085     011F                     	;# 
  1086     011F                     	;# 
  1087     011F                     	;# 
  1088     011F                     	;# 
  1089     011F                     	;# 
  1090     018C                     	;# 
  1091     018D                     	;# 
  1092     018E                     	;# 
  1093     018F                     	;# 
  1094     0190                     	;# 
  1095     0191                     	;# 
  1096     0192                     	;# 
  1097     0196                     	;# 
  1098     0197                     	;# 
  1099     0198                     	;# 
  1100     0199                     	;# 
  1101     019A                     	;# 
  1102     019B                     	;# 
  1103     019C                     	;# 
  1104     020C                     	;# 
  1105     020D                     	;# 
  1106     020E                     	;# 
  1107     020E                     	;# 
  1108     020F                     	;# 
  1109     020F                     	;# 
  1110     0210                     	;# 
  1111     0210                     	;# 
  1112     0211                     	;# 
  1113     0211                     	;# 
  1114     0212                     	;# 
  1115     0213                     	;# 
  1116     0214                     	;# 
  1117     0214                     	;# 
  1118     0215                     	;# 
  1119     0215                     	;# 
  1120     0216                     	;# 
  1121     0216                     	;# 
  1122     0217                     	;# 
  1123     0217                     	;# 
  1124     0218                     	;# 
  1125     0219                     	;# 
  1126     021A                     	;# 
  1127     021A                     	;# 
  1128     021B                     	;# 
  1129     021B                     	;# 
  1130     021C                     	;# 
  1131     021C                     	;# 
  1132     021D                     	;# 
  1133     021D                     	;# 
  1134     021E                     	;# 
  1135     021F                     	;# 
  1136     028C                     	;# 
  1137     028C                     	;# 
  1138     028D                     	;# 
  1139     028D                     	;# 
  1140     028E                     	;# 
  1141     028F                     	;# 
  1142     0290                     	;# 
  1143     0291                     	;# 
  1144     0292                     	;# 
  1145     0292                     	;# 
  1146     0293                     	;# 
  1147     0293                     	;# 
  1148     0294                     	;# 
  1149     0295                     	;# 
  1150     0296                     	;# 
  1151     0297                     	;# 
  1152     0298                     	;# 
  1153     0298                     	;# 
  1154     0299                     	;# 
  1155     0299                     	;# 
  1156     029A                     	;# 
  1157     029B                     	;# 
  1158     029C                     	;# 
  1159     029D                     	;# 
  1160     029F                     	;# 
  1161     030C                     	;# 
  1162     030C                     	;# 
  1163     030D                     	;# 
  1164     030E                     	;# 
  1165     030F                     	;# 
  1166     0310                     	;# 
  1167     0310                     	;# 
  1168     0311                     	;# 
  1169     0312                     	;# 
  1170     0313                     	;# 
  1171     0314                     	;# 
  1172     0314                     	;# 
  1173     0315                     	;# 
  1174     0316                     	;# 
  1175     0317                     	;# 
  1176     0318                     	;# 
  1177     0318                     	;# 
  1178     0319                     	;# 
  1179     031A                     	;# 
  1180     031B                     	;# 
  1181     038C                     	;# 
  1182     038C                     	;# 
  1183     038D                     	;# 
  1184     038E                     	;# 
  1185     0390                     	;# 
  1186     0390                     	;# 
  1187     0391                     	;# 
  1188     0392                     	;# 
  1189     048C                     	;# 
  1190     048C                     	;# 
  1191     048D                     	;# 
  1192     048E                     	;# 
  1193     048F                     	;# 
  1194     048F                     	;# 
  1195     0490                     	;# 
  1196     0491                     	;# 
  1197     0492                     	;# 
  1198     0492                     	;# 
  1199     0493                     	;# 
  1200     0494                     	;# 
  1201     0495                     	;# 
  1202     0495                     	;# 
  1203     0496                     	;# 
  1204     0497                     	;# 
  1205     0498                     	;# 
  1206     0499                     	;# 
  1207     049A                     	;# 
  1208     049B                     	;# 
  1209     049C                     	;# 
  1210     049D                     	;# 
  1211     058C                     	;# 
  1212     058C                     	;# 
  1213     058D                     	;# 
  1214     058E                     	;# 
  1215     058F                     	;# 
  1216     058F                     	;# 
  1217     0590                     	;# 
  1218     0591                     	;# 
  1219     0592                     	;# 
  1220     0593                     	;# 
  1221     059C                     	;# 
  1222     059C                     	;# 
  1223     059D                     	;# 
  1224     059D                     	;# 
  1225     059E                     	;# 
  1226     059F                     	;# 
  1227     060C                     	;# 
  1228     060C                     	;# 
  1229     060D                     	;# 
  1230     060D                     	;# 
  1231     060E                     	;# 
  1232     060F                     	;# 
  1233     0610                     	;# 
  1234     0611                     	;# 
  1235     0612                     	;# 
  1236     0613                     	;# 
  1237     0614                     	;# 
  1238     0616                     	;# 
  1239     0616                     	;# 
  1240     0617                     	;# 
  1241     0617                     	;# 
  1242     0618                     	;# 
  1243     0619                     	;# 
  1244     061A                     	;# 
  1245     061B                     	;# 
  1246     061C                     	;# 
  1247     061D                     	;# 
  1248     061E                     	;# 
  1249     070C                     	;# 
  1250     070D                     	;# 
  1251     070E                     	;# 
  1252     070F                     	;# 
  1253     0710                     	;# 
  1254     0711                     	;# 
  1255     0712                     	;# 
  1256     0713                     	;# 
  1257     0714                     	;# 
  1258     0716                     	;# 
  1259     0717                     	;# 
  1260     0718                     	;# 
  1261     0719                     	;# 
  1262     071A                     	;# 
  1263     071B                     	;# 
  1264     071C                     	;# 
  1265     071D                     	;# 
  1266     071E                     	;# 
  1267     0796                     	;# 
  1268     0797                     	;# 
  1269     0798                     	;# 
  1270     0799                     	;# 
  1271     079A                     	;# 
  1272     079B                     	;# 
  1273     079C                     	;# 
  1274     079D                     	;# 
  1275     080C                     	;# 
  1276     080D                     	;# 
  1277     080E                     	;# 
  1278     080F                     	;# 
  1279     0810                     	;# 
  1280     0811                     	;# 
  1281     0812                     	;# 
  1282     0813                     	;# 
  1283     0814                     	;# 
  1284     081A                     	;# 
  1285     081A                     	;# 
  1286     081B                     	;# 
  1287     081C                     	;# 
  1288     081C                     	;# 
  1289     081D                     	;# 
  1290     081E                     	;# 
  1291     081F                     	;# 
  1292     088C                     	;# 
  1293     088D                     	;# 
  1294     088E                     	;# 
  1295     088F                     	;# 
  1296     0890                     	;# 
  1297     0891                     	;# 
  1298     0892                     	;# 
  1299     0893                     	;# 
  1300     0895                     	;# 
  1301     0896                     	;# 
  1302     0897                     	;# 
  1303     0898                     	;# 
  1304     0899                     	;# 
  1305     089A                     	;# 
  1306     089B                     	;# 
  1307     090C                     	;# 
  1308     090E                     	;# 
  1309     090F                     	;# 
  1310     091F                     	;# 
  1311     098F                     	;# 
  1312     098F                     	;# 
  1313     0990                     	;# 
  1314     0991                     	;# 
  1315     0992                     	;# 
  1316     0993                     	;# 
  1317     0994                     	;# 
  1318     0995                     	;# 
  1319     0996                     	;# 
  1320     0997                     	;# 
  1321     1E0F                     	;# 
  1322     1E10                     	;# 
  1323     1E11                     	;# 
  1324     1E12                     	;# 
  1325     1E13                     	;# 
  1326     1E14                     	;# 
  1327     1E15                     	;# 
  1328     1E16                     	;# 
  1329     1E17                     	;# 
  1330     1E18                     	;# 
  1331     1E19                     	;# 
  1332     1E1A                     	;# 
  1333     1E1B                     	;# 
  1334     1E1C                     	;# 
  1335     1E1D                     	;# 
  1336     1E1E                     	;# 
  1337     1E1F                     	;# 
  1338     1E20                     	;# 
  1339     1E21                     	;# 
  1340     1E22                     	;# 
  1341     1E23                     	;# 
  1342     1E24                     	;# 
  1343     1E25                     	;# 
  1344     1E26                     	;# 
  1345     1E27                     	;# 
  1346     1E28                     	;# 
  1347     1E29                     	;# 
  1348     1E2A                     	;# 
  1349     1E2B                     	;# 
  1350     1E2C                     	;# 
  1351     1E2D                     	;# 
  1352     1E2E                     	;# 
  1353     1E2F                     	;# 
  1354     1E30                     	;# 
  1355     1E31                     	;# 
  1356     1E32                     	;# 
  1357     1E33                     	;# 
  1358     1E34                     	;# 
  1359     1E35                     	;# 
  1360     1E36                     	;# 
  1361     1E37                     	;# 
  1362     1E8F                     	;# 
  1363     1E90                     	;# 
  1364     1E91                     	;# 
  1365     1E92                     	;# 
  1366     1E93                     	;# 
  1367     1E94                     	;# 
  1368     1E95                     	;# 
  1369     1E96                     	;# 
  1370     1E97                     	;# 
  1371     1E9C                     	;# 
  1372     1E9D                     	;# 
  1373     1E9E                     	;# 
  1374     1EA1                     	;# 
  1375     1EA2                     	;# 
  1376     1EA3                     	;# 
  1377     1EA4                     	;# 
  1378     1EA9                     	;# 
  1379     1EAA                     	;# 
  1380     1EB1                     	;# 
  1381     1EB2                     	;# 
  1382     1EB8                     	;# 
  1383     1EB9                     	;# 
  1384     1EBA                     	;# 
  1385     1EBB                     	;# 
  1386     1EBC                     	;# 
  1387     1EBD                     	;# 
  1388     1EBE                     	;# 
  1389     1EC3                     	;# 
  1390     1EC5                     	;# 
  1391     1EC6                     	;# 
  1392     1EC7                     	;# 
  1393     1EC8                     	;# 
  1394     1EC9                     	;# 
  1395     1ECA                     	;# 
  1396     1ECB                     	;# 
  1397     1ECC                     	;# 
  1398     1F10                     	;# 
  1399     1F11                     	;# 
  1400     1F12                     	;# 
  1401     1F14                     	;# 
  1402     1F15                     	;# 
  1403     1F20                     	;# 
  1404     1F21                     	;# 
  1405     1F22                     	;# 
  1406     1F23                     	;# 
  1407     1F24                     	;# 
  1408     1F25                     	;# 
  1409     1F38                     	;# 
  1410     1F39                     	;# 
  1411     1F3A                     	;# 
  1412     1F3B                     	;# 
  1413     1F3C                     	;# 
  1414     1F3D                     	;# 
  1415     1F3E                     	;# 
  1416     1F3F                     	;# 
  1417     1F4E                     	;# 
  1418     1F4F                     	;# 
  1419     1F50                     	;# 
  1420     1F51                     	;# 
  1421     1F52                     	;# 
  1422     1F53                     	;# 
  1423     1F54                     	;# 
  1424     1F55                     	;# 
  1425     1FE4                     	;# 
  1426     1FE5                     	;# 
  1427     1FE6                     	;# 
  1428     1FE7                     	;# 
  1429     1FE8                     	;# 
  1430     1FE8                     	;# 
  1431     1FE9                     	;# 
  1432     1FEA                     	;# 
  1433     1FEB                     	;# 
  1434     1FED                     	;# 
  1435     1FEE                     	;# 
  1436     1FEF                     	;# 
  1437     0000                     	;# 
  1438     0001                     	;# 
  1439     0002                     	;# 
  1440     0003                     	;# 
  1441     0004                     	;# 
  1442     0005                     	;# 
  1443     0006                     	;# 
  1444     0007                     	;# 
  1445     0008                     	;# 
  1446     0009                     	;# 
  1447     000A                     	;# 
  1448     000B                     	;# 
  1449     000C                     	;# 
  1450     000E                     	;# 
  1451     0012                     	;# 
  1452     0014                     	;# 
  1453     0018                     	;# 
  1454     001A                     	;# 
  1455     008C                     	;# 
  1456     008C                     	;# 
  1457     008D                     	;# 
  1458     008E                     	;# 
  1459     008E                     	;# 
  1460     008F                     	;# 
  1461     0090                     	;# 
  1462     0090                     	;# 
  1463     0091                     	;# 
  1464     0092                     	;# 
  1465     0092                     	;# 
  1466     0093                     	;# 
  1467     0094                     	;# 
  1468     0094                     	;# 
  1469     0095                     	;# 
  1470     0096                     	;# 
  1471     0096                     	;# 
  1472     0097                     	;# 
  1473     0098                     	;# 
  1474     0099                     	;# 
  1475     009A                     	;# 
  1476     009B                     	;# 
  1477     009B                     	;# 
  1478     009C                     	;# 
  1479     009D                     	;# 
  1480     009D                     	;# 
  1481     009E                     	;# 
  1482     009F                     	;# 
  1483     010C                     	;# 
  1484     010C                     	;# 
  1485     010D                     	;# 
  1486     010E                     	;# 
  1487     010F                     	;# 
  1488     010F                     	;# 
  1489     0110                     	;# 
  1490     0111                     	;# 
  1491     0112                     	;# 
  1492     0113                     	;# 
  1493     0114                     	;# 
  1494     0115                     	;# 
  1495     0116                     	;# 
  1496     0117                     	;# 
  1497     0118                     	;# 
  1498     0119                     	;# 
  1499     0119                     	;# 
  1500     0119                     	;# 
  1501     011A                     	;# 
  1502     011A                     	;# 
  1503     011A                     	;# 
  1504     011B                     	;# 
  1505     011B                     	;# 
  1506     011B                     	;# 
  1507     011B                     	;# 
  1508     011B                     	;# 
  1509     011C                     	;# 
  1510     011C                     	;# 
  1511     011C                     	;# 
  1512     011D                     	;# 
  1513     011D                     	;# 
  1514     011D                     	;# 
  1515     011E                     	;# 
  1516     011E                     	;# 
  1517     011E                     	;# 
  1518     011F                     	;# 
  1519     011F                     	;# 
  1520     011F                     	;# 
  1521     011F                     	;# 
  1522     011F                     	;# 
  1523     018C                     	;# 
  1524     018D                     	;# 
  1525     018E                     	;# 
  1526     018F                     	;# 
  1527     0190                     	;# 
  1528     0191                     	;# 
  1529     0192                     	;# 
  1530     0196                     	;# 
  1531     0197                     	;# 
  1532     0198                     	;# 
  1533     0199                     	;# 
  1534     019A                     	;# 
  1535     019B                     	;# 
  1536     019C                     	;# 
  1537     020C                     	;# 
  1538     020D                     	;# 
  1539     020E                     	;# 
  1540     020E                     	;# 
  1541     020F                     	;# 
  1542     020F                     	;# 
  1543     0210                     	;# 
  1544     0210                     	;# 
  1545     0211                     	;# 
  1546     0211                     	;# 
  1547     0212                     	;# 
  1548     0213                     	;# 
  1549     0214                     	;# 
  1550     0214                     	;# 
  1551     0215                     	;# 
  1552     0215                     	;# 
  1553     0216                     	;# 
  1554     0216                     	;# 
  1555     0217                     	;# 
  1556     0217                     	;# 
  1557     0218                     	;# 
  1558     0219                     	;# 
  1559     021A                     	;# 
  1560     021A                     	;# 
  1561     021B                     	;# 
  1562     021B                     	;# 
  1563     021C                     	;# 
  1564     021C                     	;# 
  1565     021D                     	;# 
  1566     021D                     	;# 
  1567     021E                     	;# 
  1568     021F                     	;# 
  1569     028C                     	;# 
  1570     028C                     	;# 
  1571     028D                     	;# 
  1572     028D                     	;# 
  1573     028E                     	;# 
  1574     028F                     	;# 
  1575     0290                     	;# 
  1576     0291                     	;# 
  1577     0292                     	;# 
  1578     0292                     	;# 
  1579     0293                     	;# 
  1580     0293                     	;# 
  1581     0294                     	;# 
  1582     0295                     	;# 
  1583     0296                     	;# 
  1584     0297                     	;# 
  1585     0298                     	;# 
  1586     0298                     	;# 
  1587     0299                     	;# 
  1588     0299                     	;# 
  1589     029A                     	;# 
  1590     029B                     	;# 
  1591     029C                     	;# 
  1592     029D                     	;# 
  1593     029F                     	;# 
  1594     030C                     	;# 
  1595     030C                     	;# 
  1596     030D                     	;# 
  1597     030E                     	;# 
  1598     030F                     	;# 
  1599     0310                     	;# 
  1600     0310                     	;# 
  1601     0311                     	;# 
  1602     0312                     	;# 
  1603     0313                     	;# 
  1604     0314                     	;# 
  1605     0314                     	;# 
  1606     0315                     	;# 
  1607     0316                     	;# 
  1608     0317                     	;# 
  1609     0318                     	;# 
  1610     0318                     	;# 
  1611     0319                     	;# 
  1612     031A                     	;# 
  1613     031B                     	;# 
  1614     038C                     	;# 
  1615     038C                     	;# 
  1616     038D                     	;# 
  1617     038E                     	;# 
  1618     0390                     	;# 
  1619     0390                     	;# 
  1620     0391                     	;# 
  1621     0392                     	;# 
  1622     048C                     	;# 
  1623     048C                     	;# 
  1624     048D                     	;# 
  1625     048E                     	;# 
  1626     048F                     	;# 
  1627     048F                     	;# 
  1628     0490                     	;# 
  1629     0491                     	;# 
  1630     0492                     	;# 
  1631     0492                     	;# 
  1632     0493                     	;# 
  1633     0494                     	;# 
  1634     0495                     	;# 
  1635     0495                     	;# 
  1636     0496                     	;# 
  1637     0497                     	;# 
  1638     0498                     	;# 
  1639     0499                     	;# 
  1640     049A                     	;# 
  1641     049B                     	;# 
  1642     049C                     	;# 
  1643     049D                     	;# 
  1644     058C                     	;# 
  1645     058C                     	;# 
  1646     058D                     	;# 
  1647     058E                     	;# 
  1648     058F                     	;# 
  1649     058F                     	;# 
  1650     0590                     	;# 
  1651     0591                     	;# 
  1652     0592                     	;# 
  1653     0593                     	;# 
  1654     059C                     	;# 
  1655     059C                     	;# 
  1656     059D                     	;# 
  1657     059D                     	;# 
  1658     059E                     	;# 
  1659     059F                     	;# 
  1660     060C                     	;# 
  1661     060C                     	;# 
  1662     060D                     	;# 
  1663     060D                     	;# 
  1664     060E                     	;# 
  1665     060F                     	;# 
  1666     0610                     	;# 
  1667     0611                     	;# 
  1668     0612                     	;# 
  1669     0613                     	;# 
  1670     0614                     	;# 
  1671     0616                     	;# 
  1672     0616                     	;# 
  1673     0617                     	;# 
  1674     0617                     	;# 
  1675     0618                     	;# 
  1676     0619                     	;# 
  1677     061A                     	;# 
  1678     061B                     	;# 
  1679     061C                     	;# 
  1680     061D                     	;# 
  1681     061E                     	;# 
  1682     070C                     	;# 
  1683     070D                     	;# 
  1684     070E                     	;# 
  1685     070F                     	;# 
  1686     0710                     	;# 
  1687     0711                     	;# 
  1688     0712                     	;# 
  1689     0713                     	;# 
  1690     0714                     	;# 
  1691     0716                     	;# 
  1692     0717                     	;# 
  1693     0718                     	;# 
  1694     0719                     	;# 
  1695     071A                     	;# 
  1696     071B                     	;# 
  1697     071C                     	;# 
  1698     071D                     	;# 
  1699     071E                     	;# 
  1700     0796                     	;# 
  1701     0797                     	;# 
  1702     0798                     	;# 
  1703     0799                     	;# 
  1704     079A                     	;# 
  1705     079B                     	;# 
  1706     079C                     	;# 
  1707     079D                     	;# 
  1708     080C                     	;# 
  1709     080D                     	;# 
  1710     080E                     	;# 
  1711     080F                     	;# 
  1712     0810                     	;# 
  1713     0811                     	;# 
  1714     0812                     	;# 
  1715     0813                     	;# 
  1716     0814                     	;# 
  1717     081A                     	;# 
  1718     081A                     	;# 
  1719     081B                     	;# 
  1720     081C                     	;# 
  1721     081C                     	;# 
  1722     081D                     	;# 
  1723     081E                     	;# 
  1724     081F                     	;# 
  1725     088C                     	;# 
  1726     088D                     	;# 
  1727     088E                     	;# 
  1728     088F                     	;# 
  1729     0890                     	;# 
  1730     0891                     	;# 
  1731     0892                     	;# 
  1732     0893                     	;# 
  1733     0895                     	;# 
  1734     0896                     	;# 
  1735     0897                     	;# 
  1736     0898                     	;# 
  1737     0899                     	;# 
  1738     089A                     	;# 
  1739     089B                     	;# 
  1740     090C                     	;# 
  1741     090E                     	;# 
  1742     090F                     	;# 
  1743     091F                     	;# 
  1744     098F                     	;# 
  1745     098F                     	;# 
  1746     0990                     	;# 
  1747     0991                     	;# 
  1748     0992                     	;# 
  1749     0993                     	;# 
  1750     0994                     	;# 
  1751     0995                     	;# 
  1752     0996                     	;# 
  1753     0997                     	;# 
  1754     1E0F                     	;# 
  1755     1E10                     	;# 
  1756     1E11                     	;# 
  1757     1E12                     	;# 
  1758     1E13                     	;# 
  1759     1E14                     	;# 
  1760     1E15                     	;# 
  1761     1E16                     	;# 
  1762     1E17                     	;# 
  1763     1E18                     	;# 
  1764     1E19                     	;# 
  1765     1E1A                     	;# 
  1766     1E1B                     	;# 
  1767     1E1C                     	;# 
  1768     1E1D                     	;# 
  1769     1E1E                     	;# 
  1770     1E1F                     	;# 
  1771     1E20                     	;# 
  1772     1E21                     	;# 
  1773     1E22                     	;# 
  1774     1E23                     	;# 
  1775     1E24                     	;# 
  1776     1E25                     	;# 
  1777     1E26                     	;# 
  1778     1E27                     	;# 
  1779     1E28                     	;# 
  1780     1E29                     	;# 
  1781     1E2A                     	;# 
  1782     1E2B                     	;# 
  1783     1E2C                     	;# 
  1784     1E2D                     	;# 
  1785     1E2E                     	;# 
  1786     1E2F                     	;# 
  1787     1E30                     	;# 
  1788     1E31                     	;# 
  1789     1E32                     	;# 
  1790     1E33                     	;# 
  1791     1E34                     	;# 
  1792     1E35                     	;# 
  1793     1E36                     	;# 
  1794     1E37                     	;# 
  1795     1E8F                     	;# 
  1796     1E90                     	;# 
  1797     1E91                     	;# 
  1798     1E92                     	;# 
  1799     1E93                     	;# 
  1800     1E94                     	;# 
  1801     1E95                     	;# 
  1802     1E96                     	;# 
  1803     1E97                     	;# 
  1804     1E9C                     	;# 
  1805     1E9D                     	;# 
  1806     1E9E                     	;# 
  1807     1EA1                     	;# 
  1808     1EA2                     	;# 
  1809     1EA3                     	;# 
  1810     1EA4                     	;# 
  1811     1EA9                     	;# 
  1812     1EAA                     	;# 
  1813     1EB1                     	;# 
  1814     1EB2                     	;# 
  1815     1EB8                     	;# 
  1816     1EB9                     	;# 
  1817     1EBA                     	;# 
  1818     1EBB                     	;# 
  1819     1EBC                     	;# 
  1820     1EBD                     	;# 
  1821     1EBE                     	;# 
  1822     1EC3                     	;# 
  1823     1EC5                     	;# 
  1824     1EC6                     	;# 
  1825     1EC7                     	;# 
  1826     1EC8                     	;# 
  1827     1EC9                     	;# 
  1828     1ECA                     	;# 
  1829     1ECB                     	;# 
  1830     1ECC                     	;# 
  1831     1F10                     	;# 
  1832     1F11                     	;# 
  1833     1F12                     	;# 
  1834     1F14                     	;# 
  1835     1F15                     	;# 
  1836     1F20                     	;# 
  1837     1F21                     	;# 
  1838     1F22                     	;# 
  1839     1F23                     	;# 
  1840     1F24                     	;# 
  1841     1F25                     	;# 
  1842     1F38                     	;# 
  1843     1F39                     	;# 
  1844     1F3A                     	;# 
  1845     1F3B                     	;# 
  1846     1F3C                     	;# 
  1847     1F3D                     	;# 
  1848     1F3E                     	;# 
  1849     1F3F                     	;# 
  1850     1F4E                     	;# 
  1851     1F4F                     	;# 
  1852     1F50                     	;# 
  1853     1F51                     	;# 
  1854     1F52                     	;# 
  1855     1F53                     	;# 
  1856     1F54                     	;# 
  1857     1F55                     	;# 
  1858     1FE4                     	;# 
  1859     1FE5                     	;# 
  1860     1FE6                     	;# 
  1861     1FE7                     	;# 
  1862     1FE8                     	;# 
  1863     1FE8                     	;# 
  1864     1FE9                     	;# 
  1865     1FEA                     	;# 
  1866     1FEB                     	;# 
  1867     1FED                     	;# 
  1868     1FEE                     	;# 
  1869     1FEF                     	;# 
  1870     0000                     	;# 
  1871     0001                     	;# 
  1872     0002                     	;# 
  1873     0003                     	;# 
  1874     0004                     	;# 
  1875     0005                     	;# 
  1876     0006                     	;# 
  1877     0007                     	;# 
  1878     0008                     	;# 
  1879     0009                     	;# 
  1880     000A                     	;# 
  1881     000B                     	;# 
  1882     000C                     	;# 
  1883     000E                     	;# 
  1884     0012                     	;# 
  1885     0014                     	;# 
  1886     0018                     	;# 
  1887     001A                     	;# 
  1888     008C                     	;# 
  1889     008C                     	;# 
  1890     008D                     	;# 
  1891     008E                     	;# 
  1892     008E                     	;# 
  1893     008F                     	;# 
  1894     0090                     	;# 
  1895     0090                     	;# 
  1896     0091                     	;# 
  1897     0092                     	;# 
  1898     0092                     	;# 
  1899     0093                     	;# 
  1900     0094                     	;# 
  1901     0094                     	;# 
  1902     0095                     	;# 
  1903     0096                     	;# 
  1904     0096                     	;# 
  1905     0097                     	;# 
  1906     0098                     	;# 
  1907     0099                     	;# 
  1908     009A                     	;# 
  1909     009B                     	;# 
  1910     009B                     	;# 
  1911     009C                     	;# 
  1912     009D                     	;# 
  1913     009D                     	;# 
  1914     009E                     	;# 
  1915     009F                     	;# 
  1916     010C                     	;# 
  1917     010C                     	;# 
  1918     010D                     	;# 
  1919     010E                     	;# 
  1920     010F                     	;# 
  1921     010F                     	;# 
  1922     0110                     	;# 
  1923     0111                     	;# 
  1924     0112                     	;# 
  1925     0113                     	;# 
  1926     0114                     	;# 
  1927     0115                     	;# 
  1928     0116                     	;# 
  1929     0117                     	;# 
  1930     0118                     	;# 
  1931     0119                     	;# 
  1932     0119                     	;# 
  1933     0119                     	;# 
  1934     011A                     	;# 
  1935     011A                     	;# 
  1936     011A                     	;# 
  1937     011B                     	;# 
  1938     011B                     	;# 
  1939     011B                     	;# 
  1940     011B                     	;# 
  1941     011B                     	;# 
  1942     011C                     	;# 
  1943     011C                     	;# 
  1944     011C                     	;# 
  1945     011D                     	;# 
  1946     011D                     	;# 
  1947     011D                     	;# 
  1948     011E                     	;# 
  1949     011E                     	;# 
  1950     011E                     	;# 
  1951     011F                     	;# 
  1952     011F                     	;# 
  1953     011F                     	;# 
  1954     011F                     	;# 
  1955     011F                     	;# 
  1956     018C                     	;# 
  1957     018D                     	;# 
  1958     018E                     	;# 
  1959     018F                     	;# 
  1960     0190                     	;# 
  1961     0191                     	;# 
  1962     0192                     	;# 
  1963     0196                     	;# 
  1964     0197                     	;# 
  1965     0198                     	;# 
  1966     0199                     	;# 
  1967     019A                     	;# 
  1968     019B                     	;# 
  1969     019C                     	;# 
  1970     020C                     	;# 
  1971     020D                     	;# 
  1972     020E                     	;# 
  1973     020E                     	;# 
  1974     020F                     	;# 
  1975     020F                     	;# 
  1976     0210                     	;# 
  1977     0210                     	;# 
  1978     0211                     	;# 
  1979     0211                     	;# 
  1980     0212                     	;# 
  1981     0213                     	;# 
  1982     0214                     	;# 
  1983     0214                     	;# 
  1984     0215                     	;# 
  1985     0215                     	;# 
  1986     0216                     	;# 
  1987     0216                     	;# 
  1988     0217                     	;# 
  1989     0217                     	;# 
  1990     0218                     	;# 
  1991     0219                     	;# 
  1992     021A                     	;# 
  1993     021A                     	;# 
  1994     021B                     	;# 
  1995     021B                     	;# 
  1996     021C                     	;# 
  1997     021C                     	;# 
  1998     021D                     	;# 
  1999     021D                     	;# 
  2000     021E                     	;# 
  2001     021F                     	;# 
  2002     028C                     	;# 
  2003     028C                     	;# 
  2004     028D                     	;# 
  2005     028D                     	;# 
  2006     028E                     	;# 
  2007     028F                     	;# 
  2008     0290                     	;# 
  2009     0291                     	;# 
  2010     0292                     	;# 
  2011     0292                     	;# 
  2012     0293                     	;# 
  2013     0293                     	;# 
  2014     0294                     	;# 
  2015     0295                     	;# 
  2016     0296                     	;# 
  2017     0297                     	;# 
  2018     0298                     	;# 
  2019     0298                     	;# 
  2020     0299                     	;# 
  2021     0299                     	;# 
  2022     029A                     	;# 
  2023     029B                     	;# 
  2024     029C                     	;# 
  2025     029D                     	;# 
  2026     029F                     	;# 
  2027     030C                     	;# 
  2028     030C                     	;# 
  2029     030D                     	;# 
  2030     030E                     	;# 
  2031     030F                     	;# 
  2032     0310                     	;# 
  2033     0310                     	;# 
  2034     0311                     	;# 
  2035     0312                     	;# 
  2036     0313                     	;# 
  2037     0314                     	;# 
  2038     0314                     	;# 
  2039     0315                     	;# 
  2040     0316                     	;# 
  2041     0317                     	;# 
  2042     0318                     	;# 
  2043     0318                     	;# 
  2044     0319                     	;# 
  2045     031A                     	;# 
  2046     031B                     	;# 
  2047     038C                     	;# 
  2048     038C                     	;# 
  2049     038D                     	;# 
  2050     038E                     	;# 
  2051     0390                     	;# 
  2052     0390                     	;# 
  2053     0391                     	;# 
  2054     0392                     	;# 
  2055     048C                     	;# 
  2056     048C                     	;# 
  2057     048D                     	;# 
  2058     048E                     	;# 
  2059     048F                     	;# 
  2060     048F                     	;# 
  2061     0490                     	;# 
  2062     0491                     	;# 
  2063     0492                     	;# 
  2064     0492                     	;# 
  2065     0493                     	;# 
  2066     0494                     	;# 
  2067     0495                     	;# 
  2068     0495                     	;# 
  2069     0496                     	;# 
  2070     0497                     	;# 
  2071     0498                     	;# 
  2072     0499                     	;# 
  2073     049A                     	;# 
  2074     049B                     	;# 
  2075     049C                     	;# 
  2076     049D                     	;# 
  2077     058C                     	;# 
  2078     058C                     	;# 
  2079     058D                     	;# 
  2080     058E                     	;# 
  2081     058F                     	;# 
  2082     058F                     	;# 
  2083     0590                     	;# 
  2084     0591                     	;# 
  2085     0592                     	;# 
  2086     0593                     	;# 
  2087     059C                     	;# 
  2088     059C                     	;# 
  2089     059D                     	;# 
  2090     059D                     	;# 
  2091     059E                     	;# 
  2092     059F                     	;# 
  2093     060C                     	;# 
  2094     060C                     	;# 
  2095     060D                     	;# 
  2096     060D                     	;# 
  2097     060E                     	;# 
  2098     060F                     	;# 
  2099     0610                     	;# 
  2100     0611                     	;# 
  2101     0612                     	;# 
  2102     0613                     	;# 
  2103     0614                     	;# 
  2104     0616                     	;# 
  2105     0616                     	;# 
  2106     0617                     	;# 
  2107     0617                     	;# 
  2108     0618                     	;# 
  2109     0619                     	;# 
  2110     061A                     	;# 
  2111     061B                     	;# 
  2112     061C                     	;# 
  2113     061D                     	;# 
  2114     061E                     	;# 
  2115     070C                     	;# 
  2116     070D                     	;# 
  2117     070E                     	;# 
  2118     070F                     	;# 
  2119     0710                     	;# 
  2120     0711                     	;# 
  2121     0712                     	;# 
  2122     0713                     	;# 
  2123     0714                     	;# 
  2124     0716                     	;# 
  2125     0717                     	;# 
  2126     0718                     	;# 
  2127     0719                     	;# 
  2128     071A                     	;# 
  2129     071B                     	;# 
  2130     071C                     	;# 
  2131     071D                     	;# 
  2132     071E                     	;# 
  2133     0796                     	;# 
  2134     0797                     	;# 
  2135     0798                     	;# 
  2136     0799                     	;# 
  2137     079A                     	;# 
  2138     079B                     	;# 
  2139     079C                     	;# 
  2140     079D                     	;# 
  2141     080C                     	;# 
  2142     080D                     	;# 
  2143     080E                     	;# 
  2144     080F                     	;# 
  2145     0810                     	;# 
  2146     0811                     	;# 
  2147     0812                     	;# 
  2148     0813                     	;# 
  2149     0814                     	;# 
  2150     081A                     	;# 
  2151     081A                     	;# 
  2152     081B                     	;# 
  2153     081C                     	;# 
  2154     081C                     	;# 
  2155     081D                     	;# 
  2156     081E                     	;# 
  2157     081F                     	;# 
  2158     088C                     	;# 
  2159     088D                     	;# 
  2160     088E                     	;# 
  2161     088F                     	;# 
  2162     0890                     	;# 
  2163     0891                     	;# 
  2164     0892                     	;# 
  2165     0893                     	;# 
  2166     0895                     	;# 
  2167     0896                     	;# 
  2168     0897                     	;# 
  2169     0898                     	;# 
  2170     0899                     	;# 
  2171     089A                     	;# 
  2172     089B                     	;# 
  2173     090C                     	;# 
  2174     090E                     	;# 
  2175     090F                     	;# 
  2176     091F                     	;# 
  2177     098F                     	;# 
  2178     098F                     	;# 
  2179     0990                     	;# 
  2180     0991                     	;# 
  2181     0992                     	;# 
  2182     0993                     	;# 
  2183     0994                     	;# 
  2184     0995                     	;# 
  2185     0996                     	;# 
  2186     0997                     	;# 
  2187     1E0F                     	;# 
  2188     1E10                     	;# 
  2189     1E11                     	;# 
  2190     1E12                     	;# 
  2191     1E13                     	;# 
  2192     1E14                     	;# 
  2193     1E15                     	;# 
  2194     1E16                     	;# 
  2195     1E17                     	;# 
  2196     1E18                     	;# 
  2197     1E19                     	;# 
  2198     1E1A                     	;# 
  2199     1E1B                     	;# 
  2200     1E1C                     	;# 
  2201     1E1D                     	;# 
  2202     1E1E                     	;# 
  2203     1E1F                     	;# 
  2204     1E20                     	;# 
  2205     1E21                     	;# 
  2206     1E22                     	;# 
  2207     1E23                     	;# 
  2208     1E24                     	;# 
  2209     1E25                     	;# 
  2210     1E26                     	;# 
  2211     1E27                     	;# 
  2212     1E28                     	;# 
  2213     1E29                     	;# 
  2214     1E2A                     	;# 
  2215     1E2B                     	;# 
  2216     1E2C                     	;# 
  2217     1E2D                     	;# 
  2218     1E2E                     	;# 
  2219     1E2F                     	;# 
  2220     1E30                     	;# 
  2221     1E31                     	;# 
  2222     1E32                     	;# 
  2223     1E33                     	;# 
  2224     1E34                     	;# 
  2225     1E35                     	;# 
  2226     1E36                     	;# 
  2227     1E37                     	;# 
  2228     1E8F                     	;# 
  2229     1E90                     	;# 
  2230     1E91                     	;# 
  2231     1E92                     	;# 
  2232     1E93                     	;# 
  2233     1E94                     	;# 
  2234     1E95                     	;# 
  2235     1E96                     	;# 
  2236     1E97                     	;# 
  2237     1E9C                     	;# 
  2238     1E9D                     	;# 
  2239     1E9E                     	;# 
  2240     1EA1                     	;# 
  2241     1EA2                     	;# 
  2242     1EA3                     	;# 
  2243     1EA4                     	;# 
  2244     1EA9                     	;# 
  2245     1EAA                     	;# 
  2246     1EB1                     	;# 
  2247     1EB2                     	;# 
  2248     1EB8                     	;# 
  2249     1EB9                     	;# 
  2250     1EBA                     	;# 
  2251     1EBB                     	;# 
  2252     1EBC                     	;# 
  2253     1EBD                     	;# 
  2254     1EBE                     	;# 
  2255     1EC3                     	;# 
  2256     1EC5                     	;# 
  2257     1EC6                     	;# 
  2258     1EC7                     	;# 
  2259     1EC8                     	;# 
  2260     1EC9                     	;# 
  2261     1ECA                     	;# 
  2262     1ECB                     	;# 
  2263     1ECC                     	;# 
  2264     1F10                     	;# 
  2265     1F11                     	;# 
  2266     1F12                     	;# 
  2267     1F14                     	;# 
  2268     1F15                     	;# 
  2269     1F20                     	;# 
  2270     1F21                     	;# 
  2271     1F22                     	;# 
  2272     1F23                     	;# 
  2273     1F24                     	;# 
  2274     1F25                     	;# 
  2275     1F38                     	;# 
  2276     1F39                     	;# 
  2277     1F3A                     	;# 
  2278     1F3B                     	;# 
  2279     1F3C                     	;# 
  2280     1F3D                     	;# 
  2281     1F3E                     	;# 
  2282     1F3F                     	;# 
  2283     1F4E                     	;# 
  2284     1F4F                     	;# 
  2285     1F50                     	;# 
  2286     1F51                     	;# 
  2287     1F52                     	;# 
  2288     1F53                     	;# 
  2289     1F54                     	;# 
  2290     1F55                     	;# 
  2291     1FE4                     	;# 
  2292     1FE5                     	;# 
  2293     1FE6                     	;# 
  2294     1FE7                     	;# 
  2295     1FE8                     	;# 
  2296     1FE8                     	;# 
  2297     1FE9                     	;# 
  2298     1FEA                     	;# 
  2299     1FEB                     	;# 
  2300     1FED                     	;# 
  2301     1FEE                     	;# 
  2302     1FEF                     	;# 
  2303     0000                     	;# 
  2304     0001                     	;# 
  2305     0002                     	;# 
  2306     0003                     	;# 
  2307     0004                     	;# 
  2308     0005                     	;# 
  2309     0006                     	;# 
  2310     0007                     	;# 
  2311     0008                     	;# 
  2312     0009                     	;# 
  2313     000A                     	;# 
  2314     000B                     	;# 
  2315     000C                     	;# 
  2316     000E                     	;# 
  2317     0012                     	;# 
  2318     0014                     	;# 
  2319     0018                     	;# 
  2320     001A                     	;# 
  2321     008C                     	;# 
  2322     008C                     	;# 
  2323     008D                     	;# 
  2324     008E                     	;# 
  2325     008E                     	;# 
  2326     008F                     	;# 
  2327     0090                     	;# 
  2328     0090                     	;# 
  2329     0091                     	;# 
  2330     0092                     	;# 
  2331     0092                     	;# 
  2332     0093                     	;# 
  2333     0094                     	;# 
  2334     0094                     	;# 
  2335     0095                     	;# 
  2336     0096                     	;# 
  2337     0096                     	;# 
  2338     0097                     	;# 
  2339     0098                     	;# 
  2340     0099                     	;# 
  2341     009A                     	;# 
  2342     009B                     	;# 
  2343     009B                     	;# 
  2344     009C                     	;# 
  2345     009D                     	;# 
  2346     009D                     	;# 
  2347     009E                     	;# 
  2348     009F                     	;# 
  2349     010C                     	;# 
  2350     010C                     	;# 
  2351     010D                     	;# 
  2352     010E                     	;# 
  2353     010F                     	;# 
  2354     010F                     	;# 
  2355     0110                     	;# 
  2356     0111                     	;# 
  2357     0112                     	;# 
  2358     0113                     	;# 
  2359     0114                     	;# 
  2360     0115                     	;# 
  2361     0116                     	;# 
  2362     0117                     	;# 
  2363     0118                     	;# 
  2364     0119                     	;# 
  2365     0119                     	;# 
  2366     0119                     	;# 
  2367     011A                     	;# 
  2368     011A                     	;# 
  2369     011A                     	;# 
  2370     011B                     	;# 
  2371     011B                     	;# 
  2372     011B                     	;# 
  2373     011B                     	;# 
  2374     011B                     	;# 
  2375     011C                     	;# 
  2376     011C                     	;# 
  2377     011C                     	;# 
  2378     011D                     	;# 
  2379     011D                     	;# 
  2380     011D                     	;# 
  2381     011E                     	;# 
  2382     011E                     	;# 
  2383     011E                     	;# 
  2384     011F                     	;# 
  2385     011F                     	;# 
  2386     011F                     	;# 
  2387     011F                     	;# 
  2388     011F                     	;# 
  2389     018C                     	;# 
  2390     018D                     	;# 
  2391     018E                     	;# 
  2392     018F                     	;# 
  2393     0190                     	;# 
  2394     0191                     	;# 
  2395     0192                     	;# 
  2396     0196                     	;# 
  2397     0197                     	;# 
  2398     0198                     	;# 
  2399     0199                     	;# 
  2400     019A                     	;# 
  2401     019B                     	;# 
  2402     019C                     	;# 
  2403     020C                     	;# 
  2404     020D                     	;# 
  2405     020E                     	;# 
  2406     020E                     	;# 
  2407     020F                     	;# 
  2408     020F                     	;# 
  2409     0210                     	;# 
  2410     0210                     	;# 
  2411     0211                     	;# 
  2412     0211                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0214                     	;# 
  2416     0214                     	;# 
  2417     0215                     	;# 
  2418     0215                     	;# 
  2419     0216                     	;# 
  2420     0216                     	;# 
  2421     0217                     	;# 
  2422     0217                     	;# 
  2423     0218                     	;# 
  2424     0219                     	;# 
  2425     021A                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021B                     	;# 
  2429     021C                     	;# 
  2430     021C                     	;# 
  2431     021D                     	;# 
  2432     021D                     	;# 
  2433     021E                     	;# 
  2434     021F                     	;# 
  2435     028C                     	;# 
  2436     028C                     	;# 
  2437     028D                     	;# 
  2438     028D                     	;# 
  2439     028E                     	;# 
  2440     028F                     	;# 
  2441     0290                     	;# 
  2442     0291                     	;# 
  2443     0292                     	;# 
  2444     0292                     	;# 
  2445     0293                     	;# 
  2446     0293                     	;# 
  2447     0294                     	;# 
  2448     0295                     	;# 
  2449     0296                     	;# 
  2450     0297                     	;# 
  2451     0298                     	;# 
  2452     0298                     	;# 
  2453     0299                     	;# 
  2454     0299                     	;# 
  2455     029A                     	;# 
  2456     029B                     	;# 
  2457     029C                     	;# 
  2458     029D                     	;# 
  2459     029F                     	;# 
  2460     030C                     	;# 
  2461     030C                     	;# 
  2462     030D                     	;# 
  2463     030E                     	;# 
  2464     030F                     	;# 
  2465     0310                     	;# 
  2466     0310                     	;# 
  2467     0311                     	;# 
  2468     0312                     	;# 
  2469     0313                     	;# 
  2470     0314                     	;# 
  2471     0314                     	;# 
  2472     0315                     	;# 
  2473     0316                     	;# 
  2474     0317                     	;# 
  2475     0318                     	;# 
  2476     0318                     	;# 
  2477     0319                     	;# 
  2478     031A                     	;# 
  2479     031B                     	;# 
  2480     038C                     	;# 
  2481     038C                     	;# 
  2482     038D                     	;# 
  2483     038E                     	;# 
  2484     0390                     	;# 
  2485     0390                     	;# 
  2486     0391                     	;# 
  2487     0392                     	;# 
  2488     048C                     	;# 
  2489     048C                     	;# 
  2490     048D                     	;# 
  2491     048E                     	;# 
  2492     048F                     	;# 
  2493     048F                     	;# 
  2494     0490                     	;# 
  2495     0491                     	;# 
  2496     0492                     	;# 
  2497     0492                     	;# 
  2498     0493                     	;# 
  2499     0494                     	;# 
  2500     0495                     	;# 
  2501     0495                     	;# 
  2502     0496                     	;# 
  2503     0497                     	;# 
  2504     0498                     	;# 
  2505     0499                     	;# 
  2506     049A                     	;# 
  2507     049B                     	;# 
  2508     049C                     	;# 
  2509     049D                     	;# 
  2510     058C                     	;# 
  2511     058C                     	;# 
  2512     058D                     	;# 
  2513     058E                     	;# 
  2514     058F                     	;# 
  2515     058F                     	;# 
  2516     0590                     	;# 
  2517     0591                     	;# 
  2518     0592                     	;# 
  2519     0593                     	;# 
  2520     059C                     	;# 
  2521     059C                     	;# 
  2522     059D                     	;# 
  2523     059D                     	;# 
  2524     059E                     	;# 
  2525     059F                     	;# 
  2526     060C                     	;# 
  2527     060C                     	;# 
  2528     060D                     	;# 
  2529     060D                     	;# 
  2530     060E                     	;# 
  2531     060F                     	;# 
  2532     0610                     	;# 
  2533     0611                     	;# 
  2534     0612                     	;# 
  2535     0613                     	;# 
  2536     0614                     	;# 
  2537     0616                     	;# 
  2538     0616                     	;# 
  2539     0617                     	;# 
  2540     0617                     	;# 
  2541     0618                     	;# 
  2542     0619                     	;# 
  2543     061A                     	;# 
  2544     061B                     	;# 
  2545     061C                     	;# 
  2546     061D                     	;# 
  2547     061E                     	;# 
  2548     070C                     	;# 
  2549     070D                     	;# 
  2550     070E                     	;# 
  2551     070F                     	;# 
  2552     0710                     	;# 
  2553     0711                     	;# 
  2554     0712                     	;# 
  2555     0713                     	;# 
  2556     0714                     	;# 
  2557     0716                     	;# 
  2558     0717                     	;# 
  2559     0718                     	;# 
  2560     0719                     	;# 
  2561     071A                     	;# 
  2562     071B                     	;# 
  2563     071C                     	;# 
  2564     071D                     	;# 
  2565     071E                     	;# 
  2566     0796                     	;# 
  2567     0797                     	;# 
  2568     0798                     	;# 
  2569     0799                     	;# 
  2570     079A                     	;# 
  2571     079B                     	;# 
  2572     079C                     	;# 
  2573     079D                     	;# 
  2574     080C                     	;# 
  2575     080D                     	;# 
  2576     080E                     	;# 
  2577     080F                     	;# 
  2578     0810                     	;# 
  2579     0811                     	;# 
  2580     0812                     	;# 
  2581     0813                     	;# 
  2582     0814                     	;# 
  2583     081A                     	;# 
  2584     081A                     	;# 
  2585     081B                     	;# 
  2586     081C                     	;# 
  2587     081C                     	;# 
  2588     081D                     	;# 
  2589     081E                     	;# 
  2590     081F                     	;# 
  2591     088C                     	;# 
  2592     088D                     	;# 
  2593     088E                     	;# 
  2594     088F                     	;# 
  2595     0890                     	;# 
  2596     0891                     	;# 
  2597     0892                     	;# 
  2598     0893                     	;# 
  2599     0895                     	;# 
  2600     0896                     	;# 
  2601     0897                     	;# 
  2602     0898                     	;# 
  2603     0899                     	;# 
  2604     089A                     	;# 
  2605     089B                     	;# 
  2606     090C                     	;# 
  2607     090E                     	;# 
  2608     090F                     	;# 
  2609     091F                     	;# 
  2610     098F                     	;# 
  2611     098F                     	;# 
  2612     0990                     	;# 
  2613     0991                     	;# 
  2614     0992                     	;# 
  2615     0993                     	;# 
  2616     0994                     	;# 
  2617     0995                     	;# 
  2618     0996                     	;# 
  2619     0997                     	;# 
  2620     1E0F                     	;# 
  2621     1E10                     	;# 
  2622     1E11                     	;# 
  2623     1E12                     	;# 
  2624     1E13                     	;# 
  2625     1E14                     	;# 
  2626     1E15                     	;# 
  2627     1E16                     	;# 
  2628     1E17                     	;# 
  2629     1E18                     	;# 
  2630     1E19                     	;# 
  2631     1E1A                     	;# 
  2632     1E1B                     	;# 
  2633     1E1C                     	;# 
  2634     1E1D                     	;# 
  2635     1E1E                     	;# 
  2636     1E1F                     	;# 
  2637     1E20                     	;# 
  2638     1E21                     	;# 
  2639     1E22                     	;# 
  2640     1E23                     	;# 
  2641     1E24                     	;# 
  2642     1E25                     	;# 
  2643     1E26                     	;# 
  2644     1E27                     	;# 
  2645     1E28                     	;# 
  2646     1E29                     	;# 
  2647     1E2A                     	;# 
  2648     1E2B                     	;# 
  2649     1E2C                     	;# 
  2650     1E2D                     	;# 
  2651     1E2E                     	;# 
  2652     1E2F                     	;# 
  2653     1E30                     	;# 
  2654     1E31                     	;# 
  2655     1E32                     	;# 
  2656     1E33                     	;# 
  2657     1E34                     	;# 
  2658     1E35                     	;# 
  2659     1E36                     	;# 
  2660     1E37                     	;# 
  2661     1E8F                     	;# 
  2662     1E90                     	;# 
  2663     1E91                     	;# 
  2664     1E92                     	;# 
  2665     1E93                     	;# 
  2666     1E94                     	;# 
  2667     1E95                     	;# 
  2668     1E96                     	;# 
  2669     1E97                     	;# 
  2670     1E9C                     	;# 
  2671     1E9D                     	;# 
  2672     1E9E                     	;# 
  2673     1EA1                     	;# 
  2674     1EA2                     	;# 
  2675     1EA3                     	;# 
  2676     1EA4                     	;# 
  2677     1EA9                     	;# 
  2678     1EAA                     	;# 
  2679     1EB1                     	;# 
  2680     1EB2                     	;# 
  2681     1EB8                     	;# 
  2682     1EB9                     	;# 
  2683     1EBA                     	;# 
  2684     1EBB                     	;# 
  2685     1EBC                     	;# 
  2686     1EBD                     	;# 
  2687     1EBE                     	;# 
  2688     1EC3                     	;# 
  2689     1EC5                     	;# 
  2690     1EC6                     	;# 
  2691     1EC7                     	;# 
  2692     1EC8                     	;# 
  2693     1EC9                     	;# 
  2694     1ECA                     	;# 
  2695     1ECB                     	;# 
  2696     1ECC                     	;# 
  2697     1F10                     	;# 
  2698     1F11                     	;# 
  2699     1F12                     	;# 
  2700     1F14                     	;# 
  2701     1F15                     	;# 
  2702     1F20                     	;# 
  2703     1F21                     	;# 
  2704     1F22                     	;# 
  2705     1F23                     	;# 
  2706     1F24                     	;# 
  2707     1F25                     	;# 
  2708     1F38                     	;# 
  2709     1F39                     	;# 
  2710     1F3A                     	;# 
  2711     1F3B                     	;# 
  2712     1F3C                     	;# 
  2713     1F3D                     	;# 
  2714     1F3E                     	;# 
  2715     1F3F                     	;# 
  2716     1F4E                     	;# 
  2717     1F4F                     	;# 
  2718     1F50                     	;# 
  2719     1F51                     	;# 
  2720     1F52                     	;# 
  2721     1F53                     	;# 
  2722     1F54                     	;# 
  2723     1F55                     	;# 
  2724     1FE4                     	;# 
  2725     1FE5                     	;# 
  2726     1FE6                     	;# 
  2727     1FE7                     	;# 
  2728     1FE8                     	;# 
  2729     1FE8                     	;# 
  2730     1FE9                     	;# 
  2731     1FEA                     	;# 
  2732     1FEB                     	;# 
  2733     1FED                     	;# 
  2734     1FEE                     	;# 
  2735     1FEF                     	;# 
  2736     0000                     	;# 
  2737     0001                     	;# 
  2738     0002                     	;# 
  2739     0003                     	;# 
  2740     0004                     	;# 
  2741     0005                     	;# 
  2742     0006                     	;# 
  2743     0007                     	;# 
  2744     0008                     	;# 
  2745     0009                     	;# 
  2746     000A                     	;# 
  2747     000B                     	;# 
  2748     000C                     	;# 
  2749     000E                     	;# 
  2750     0012                     	;# 
  2751     0014                     	;# 
  2752     0018                     	;# 
  2753     001A                     	;# 
  2754     008C                     	;# 
  2755     008C                     	;# 
  2756     008D                     	;# 
  2757     008E                     	;# 
  2758     008E                     	;# 
  2759     008F                     	;# 
  2760     0090                     	;# 
  2761     0090                     	;# 
  2762     0091                     	;# 
  2763     0092                     	;# 
  2764     0092                     	;# 
  2765     0093                     	;# 
  2766     0094                     	;# 
  2767     0094                     	;# 
  2768     0095                     	;# 
  2769     0096                     	;# 
  2770     0096                     	;# 
  2771     0097                     	;# 
  2772     0098                     	;# 
  2773     0099                     	;# 
  2774     009A                     	;# 
  2775     009B                     	;# 
  2776     009B                     	;# 
  2777     009C                     	;# 
  2778     009D                     	;# 
  2779     009D                     	;# 
  2780     009E                     	;# 
  2781     009F                     	;# 
  2782     010C                     	;# 
  2783     010C                     	;# 
  2784     010D                     	;# 
  2785     010E                     	;# 
  2786     010F                     	;# 
  2787     010F                     	;# 
  2788     0110                     	;# 
  2789     0111                     	;# 
  2790     0112                     	;# 
  2791     0113                     	;# 
  2792     0114                     	;# 
  2793     0115                     	;# 
  2794     0116                     	;# 
  2795     0117                     	;# 
  2796     0118                     	;# 
  2797     0119                     	;# 
  2798     0119                     	;# 
  2799     0119                     	;# 
  2800     011A                     	;# 
  2801     011A                     	;# 
  2802     011A                     	;# 
  2803     011B                     	;# 
  2804     011B                     	;# 
  2805     011B                     	;# 
  2806     011B                     	;# 
  2807     011B                     	;# 
  2808     011C                     	;# 
  2809     011C                     	;# 
  2810     011C                     	;# 
  2811     011D                     	;# 
  2812     011D                     	;# 
  2813     011D                     	;# 
  2814     011E                     	;# 
  2815     011E                     	;# 
  2816     011E                     	;# 
  2817     011F                     	;# 
  2818     011F                     	;# 
  2819     011F                     	;# 
  2820     011F                     	;# 
  2821     011F                     	;# 
  2822     018C                     	;# 
  2823     018D                     	;# 
  2824     018E                     	;# 
  2825     018F                     	;# 
  2826     0190                     	;# 
  2827     0191                     	;# 
  2828     0192                     	;# 
  2829     0196                     	;# 
  2830     0197                     	;# 
  2831     0198                     	;# 
  2832     0199                     	;# 
  2833     019A                     	;# 
  2834     019B                     	;# 
  2835     019C                     	;# 
  2836     020C                     	;# 
  2837     020D                     	;# 
  2838     020E                     	;# 
  2839     020E                     	;# 
  2840     020F                     	;# 
  2841     020F                     	;# 
  2842     0210                     	;# 
  2843     0210                     	;# 
  2844     0211                     	;# 
  2845     0211                     	;# 
  2846     0212                     	;# 
  2847     0213                     	;# 
  2848     0214                     	;# 
  2849     0214                     	;# 
  2850     0215                     	;# 
  2851     0215                     	;# 
  2852     0216                     	;# 
  2853     0216                     	;# 
  2854     0217                     	;# 
  2855     0217                     	;# 
  2856     0218                     	;# 
  2857     0219                     	;# 
  2858     021A                     	;# 
  2859     021A                     	;# 
  2860     021B                     	;# 
  2861     021B                     	;# 
  2862     021C                     	;# 
  2863     021C                     	;# 
  2864     021D                     	;# 
  2865     021D                     	;# 
  2866     021E                     	;# 
  2867     021F                     	;# 
  2868     028C                     	;# 
  2869     028C                     	;# 
  2870     028D                     	;# 
  2871     028D                     	;# 
  2872     028E                     	;# 
  2873     028F                     	;# 
  2874     0290                     	;# 
  2875     0291                     	;# 
  2876     0292                     	;# 
  2877     0292                     	;# 
  2878     0293                     	;# 
  2879     0293                     	;# 
  2880     0294                     	;# 
  2881     0295                     	;# 
  2882     0296                     	;# 
  2883     0297                     	;# 
  2884     0298                     	;# 
  2885     0298                     	;# 
  2886     0299                     	;# 
  2887     0299                     	;# 
  2888     029A                     	;# 
  2889     029B                     	;# 
  2890     029C                     	;# 
  2891     029D                     	;# 
  2892     029F                     	;# 
  2893     030C                     	;# 
  2894     030C                     	;# 
  2895     030D                     	;# 
  2896     030E                     	;# 
  2897     030F                     	;# 
  2898     0310                     	;# 
  2899     0310                     	;# 
  2900     0311                     	;# 
  2901     0312                     	;# 
  2902     0313                     	;# 
  2903     0314                     	;# 
  2904     0314                     	;# 
  2905     0315                     	;# 
  2906     0316                     	;# 
  2907     0317                     	;# 
  2908     0318                     	;# 
  2909     0318                     	;# 
  2910     0319                     	;# 
  2911     031A                     	;# 
  2912     031B                     	;# 
  2913     038C                     	;# 
  2914     038C                     	;# 
  2915     038D                     	;# 
  2916     038E                     	;# 
  2917     0390                     	;# 
  2918     0390                     	;# 
  2919     0391                     	;# 
  2920     0392                     	;# 
  2921     048C                     	;# 
  2922     048C                     	;# 
  2923     048D                     	;# 
  2924     048E                     	;# 
  2925     048F                     	;# 
  2926     048F                     	;# 
  2927     0490                     	;# 
  2928     0491                     	;# 
  2929     0492                     	;# 
  2930     0492                     	;# 
  2931     0493                     	;# 
  2932     0494                     	;# 
  2933     0495                     	;# 
  2934     0495                     	;# 
  2935     0496                     	;# 
  2936     0497                     	;# 
  2937     0498                     	;# 
  2938     0499                     	;# 
  2939     049A                     	;# 
  2940     049B                     	;# 
  2941     049C                     	;# 
  2942     049D                     	;# 
  2943     058C                     	;# 
  2944     058C                     	;# 
  2945     058D                     	;# 
  2946     058E                     	;# 
  2947     058F                     	;# 
  2948     058F                     	;# 
  2949     0590                     	;# 
  2950     0591                     	;# 
  2951     0592                     	;# 
  2952     0593                     	;# 
  2953     059C                     	;# 
  2954     059C                     	;# 
  2955     059D                     	;# 
  2956     059D                     	;# 
  2957     059E                     	;# 
  2958     059F                     	;# 
  2959     060C                     	;# 
  2960     060C                     	;# 
  2961     060D                     	;# 
  2962     060D                     	;# 
  2963     060E                     	;# 
  2964     060F                     	;# 
  2965     0610                     	;# 
  2966     0611                     	;# 
  2967     0612                     	;# 
  2968     0613                     	;# 
  2969     0614                     	;# 
  2970     0616                     	;# 
  2971     0616                     	;# 
  2972     0617                     	;# 
  2973     0617                     	;# 
  2974     0618                     	;# 
  2975     0619                     	;# 
  2976     061A                     	;# 
  2977     061B                     	;# 
  2978     061C                     	;# 
  2979     061D                     	;# 
  2980     061E                     	;# 
  2981     070C                     	;# 
  2982     070D                     	;# 
  2983     070E                     	;# 
  2984     070F                     	;# 
  2985     0710                     	;# 
  2986     0711                     	;# 
  2987     0712                     	;# 
  2988     0713                     	;# 
  2989     0714                     	;# 
  2990     0716                     	;# 
  2991     0717                     	;# 
  2992     0718                     	;# 
  2993     0719                     	;# 
  2994     071A                     	;# 
  2995     071B                     	;# 
  2996     071C                     	;# 
  2997     071D                     	;# 
  2998     071E                     	;# 
  2999     0796                     	;# 
  3000     0797                     	;# 
  3001     0798                     	;# 
  3002     0799                     	;# 
  3003     079A                     	;# 
  3004     079B                     	;# 
  3005     079C                     	;# 
  3006     079D                     	;# 
  3007     080C                     	;# 
  3008     080D                     	;# 
  3009     080E                     	;# 
  3010     080F                     	;# 
  3011     0810                     	;# 
  3012     0811                     	;# 
  3013     0812                     	;# 
  3014     0813                     	;# 
  3015     0814                     	;# 
  3016     081A                     	;# 
  3017     081A                     	;# 
  3018     081B                     	;# 
  3019     081C                     	;# 
  3020     081C                     	;# 
  3021     081D                     	;# 
  3022     081E                     	;# 
  3023     081F                     	;# 
  3024     088C                     	;# 
  3025     088D                     	;# 
  3026     088E                     	;# 
  3027     088F                     	;# 
  3028     0890                     	;# 
  3029     0891                     	;# 
  3030     0892                     	;# 
  3031     0893                     	;# 
  3032     0895                     	;# 
  3033     0896                     	;# 
  3034     0897                     	;# 
  3035     0898                     	;# 
  3036     0899                     	;# 
  3037     089A                     	;# 
  3038     089B                     	;# 
  3039     090C                     	;# 
  3040     090E                     	;# 
  3041     090F                     	;# 
  3042     091F                     	;# 
  3043     098F                     	;# 
  3044     098F                     	;# 
  3045     0990                     	;# 
  3046     0991                     	;# 
  3047     0992                     	;# 
  3048     0993                     	;# 
  3049     0994                     	;# 
  3050     0995                     	;# 
  3051     0996                     	;# 
  3052     0997                     	;# 
  3053     1E0F                     	;# 
  3054     1E10                     	;# 
  3055     1E11                     	;# 
  3056     1E12                     	;# 
  3057     1E13                     	;# 
  3058     1E14                     	;# 
  3059     1E15                     	;# 
  3060     1E16                     	;# 
  3061     1E17                     	;# 
  3062     1E18                     	;# 
  3063     1E19                     	;# 
  3064     1E1A                     	;# 
  3065     1E1B                     	;# 
  3066     1E1C                     	;# 
  3067     1E1D                     	;# 
  3068     1E1E                     	;# 
  3069     1E1F                     	;# 
  3070     1E20                     	;# 
  3071     1E21                     	;# 
  3072     1E22                     	;# 
  3073     1E23                     	;# 
  3074     1E24                     	;# 
  3075     1E25                     	;# 
  3076     1E26                     	;# 
  3077     1E27                     	;# 
  3078     1E28                     	;# 
  3079     1E29                     	;# 
  3080     1E2A                     	;# 
  3081     1E2B                     	;# 
  3082     1E2C                     	;# 
  3083     1E2D                     	;# 
  3084     1E2E                     	;# 
  3085     1E2F                     	;# 
  3086     1E30                     	;# 
  3087     1E31                     	;# 
  3088     1E32                     	;# 
  3089     1E33                     	;# 
  3090     1E34                     	;# 
  3091     1E35                     	;# 
  3092     1E36                     	;# 
  3093     1E37                     	;# 
  3094     1E8F                     	;# 
  3095     1E90                     	;# 
  3096     1E91                     	;# 
  3097     1E92                     	;# 
  3098     1E93                     	;# 
  3099     1E94                     	;# 
  3100     1E95                     	;# 
  3101     1E96                     	;# 
  3102     1E97                     	;# 
  3103     1E9C                     	;# 
  3104     1E9D                     	;# 
  3105     1E9E                     	;# 
  3106     1EA1                     	;# 
  3107     1EA2                     	;# 
  3108     1EA3                     	;# 
  3109     1EA4                     	;# 
  3110     1EA9                     	;# 
  3111     1EAA                     	;# 
  3112     1EB1                     	;# 
  3113     1EB2                     	;# 
  3114     1EB8                     	;# 
  3115     1EB9                     	;# 
  3116     1EBA                     	;# 
  3117     1EBB                     	;# 
  3118     1EBC                     	;# 
  3119     1EBD                     	;# 
  3120     1EBE                     	;# 
  3121     1EC3                     	;# 
  3122     1EC5                     	;# 
  3123     1EC6                     	;# 
  3124     1EC7                     	;# 
  3125     1EC8                     	;# 
  3126     1EC9                     	;# 
  3127     1ECA                     	;# 
  3128     1ECB                     	;# 
  3129     1ECC                     	;# 
  3130     1F10                     	;# 
  3131     1F11                     	;# 
  3132     1F12                     	;# 
  3133     1F14                     	;# 
  3134     1F15                     	;# 
  3135     1F20                     	;# 
  3136     1F21                     	;# 
  3137     1F22                     	;# 
  3138     1F23                     	;# 
  3139     1F24                     	;# 
  3140     1F25                     	;# 
  3141     1F38                     	;# 
  3142     1F39                     	;# 
  3143     1F3A                     	;# 
  3144     1F3B                     	;# 
  3145     1F3C                     	;# 
  3146     1F3D                     	;# 
  3147     1F3E                     	;# 
  3148     1F3F                     	;# 
  3149     1F4E                     	;# 
  3150     1F4F                     	;# 
  3151     1F50                     	;# 
  3152     1F51                     	;# 
  3153     1F52                     	;# 
  3154     1F53                     	;# 
  3155     1F54                     	;# 
  3156     1F55                     	;# 
  3157     1FE4                     	;# 
  3158     1FE5                     	;# 
  3159     1FE6                     	;# 
  3160     1FE7                     	;# 
  3161     1FE8                     	;# 
  3162     1FE8                     	;# 
  3163     1FE9                     	;# 
  3164     1FEA                     	;# 
  3165     1FEB                     	;# 
  3166     1FED                     	;# 
  3167     1FEE                     	;# 
  3168     1FEF                     	;# 
  3169     0000                     	;# 
  3170     0001                     	;# 
  3171     0002                     	;# 
  3172     0003                     	;# 
  3173     0004                     	;# 
  3174     0005                     	;# 
  3175     0006                     	;# 
  3176     0007                     	;# 
  3177     0008                     	;# 
  3178     0009                     	;# 
  3179     000A                     	;# 
  3180     000B                     	;# 
  3181     000C                     	;# 
  3182     000E                     	;# 
  3183     0012                     	;# 
  3184     0014                     	;# 
  3185     0018                     	;# 
  3186     001A                     	;# 
  3187     008C                     	;# 
  3188     008C                     	;# 
  3189     008D                     	;# 
  3190     008E                     	;# 
  3191     008E                     	;# 
  3192     008F                     	;# 
  3193     0090                     	;# 
  3194     0090                     	;# 
  3195     0091                     	;# 
  3196     0092                     	;# 
  3197     0092                     	;# 
  3198     0093                     	;# 
  3199     0094                     	;# 
  3200     0094                     	;# 
  3201     0095                     	;# 
  3202     0096                     	;# 
  3203     0096                     	;# 
  3204     0097                     	;# 
  3205     0098                     	;# 
  3206     0099                     	;# 
  3207     009A                     	;# 
  3208     009B                     	;# 
  3209     009B                     	;# 
  3210     009C                     	;# 
  3211     009D                     	;# 
  3212     009D                     	;# 
  3213     009E                     	;# 
  3214     009F                     	;# 
  3215     010C                     	;# 
  3216     010C                     	;# 
  3217     010D                     	;# 
  3218     010E                     	;# 
  3219     010F                     	;# 
  3220     010F                     	;# 
  3221     0110                     	;# 
  3222     0111                     	;# 
  3223     0112                     	;# 
  3224     0113                     	;# 
  3225     0114                     	;# 
  3226     0115                     	;# 
  3227     0116                     	;# 
  3228     0117                     	;# 
  3229     0118                     	;# 
  3230     0119                     	;# 
  3231     0119                     	;# 
  3232     0119                     	;# 
  3233     011A                     	;# 
  3234     011A                     	;# 
  3235     011A                     	;# 
  3236     011B                     	;# 
  3237     011B                     	;# 
  3238     011B                     	;# 
  3239     011B                     	;# 
  3240     011B                     	;# 
  3241     011C                     	;# 
  3242     011C                     	;# 
  3243     011C                     	;# 
  3244     011D                     	;# 
  3245     011D                     	;# 
  3246     011D                     	;# 
  3247     011E                     	;# 
  3248     011E                     	;# 
  3249     011E                     	;# 
  3250     011F                     	;# 
  3251     011F                     	;# 
  3252     011F                     	;# 
  3253     011F                     	;# 
  3254     011F                     	;# 
  3255     018C                     	;# 
  3256     018D                     	;# 
  3257     018E                     	;# 
  3258     018F                     	;# 
  3259     0190                     	;# 
  3260     0191                     	;# 
  3261     0192                     	;# 
  3262     0196                     	;# 
  3263     0197                     	;# 
  3264     0198                     	;# 
  3265     0199                     	;# 
  3266     019A                     	;# 
  3267     019B                     	;# 
  3268     019C                     	;# 
  3269     020C                     	;# 
  3270     020D                     	;# 
  3271     020E                     	;# 
  3272     020E                     	;# 
  3273     020F                     	;# 
  3274     020F                     	;# 
  3275     0210                     	;# 
  3276     0210                     	;# 
  3277     0211                     	;# 
  3278     0211                     	;# 
  3279     0212                     	;# 
  3280     0213                     	;# 
  3281     0214                     	;# 
  3282     0214                     	;# 
  3283     0215                     	;# 
  3284     0215                     	;# 
  3285     0216                     	;# 
  3286     0216                     	;# 
  3287     0217                     	;# 
  3288     0217                     	;# 
  3289     0218                     	;# 
  3290     0219                     	;# 
  3291     021A                     	;# 
  3292     021A                     	;# 
  3293     021B                     	;# 
  3294     021B                     	;# 
  3295     021C                     	;# 
  3296     021C                     	;# 
  3297     021D                     	;# 
  3298     021D                     	;# 
  3299     021E                     	;# 
  3300     021F                     	;# 
  3301     028C                     	;# 
  3302     028C                     	;# 
  3303     028D                     	;# 
  3304     028D                     	;# 
  3305     028E                     	;# 
  3306     028F                     	;# 
  3307     0290                     	;# 
  3308     0291                     	;# 
  3309     0292                     	;# 
  3310     0292                     	;# 
  3311     0293                     	;# 
  3312     0293                     	;# 
  3313     0294                     	;# 
  3314     0295                     	;# 
  3315     0296                     	;# 
  3316     0297                     	;# 
  3317     0298                     	;# 
  3318     0298                     	;# 
  3319     0299                     	;# 
  3320     0299                     	;# 
  3321     029A                     	;# 
  3322     029B                     	;# 
  3323     029C                     	;# 
  3324     029D                     	;# 
  3325     029F                     	;# 
  3326     030C                     	;# 
  3327     030C                     	;# 
  3328     030D                     	;# 
  3329     030E                     	;# 
  3330     030F                     	;# 
  3331     0310                     	;# 
  3332     0310                     	;# 
  3333     0311                     	;# 
  3334     0312                     	;# 
  3335     0313                     	;# 
  3336     0314                     	;# 
  3337     0314                     	;# 
  3338     0315                     	;# 
  3339     0316                     	;# 
  3340     0317                     	;# 
  3341     0318                     	;# 
  3342     0318                     	;# 
  3343     0319                     	;# 
  3344     031A                     	;# 
  3345     031B                     	;# 
  3346     038C                     	;# 
  3347     038C                     	;# 
  3348     038D                     	;# 
  3349     038E                     	;# 
  3350     0390                     	;# 
  3351     0390                     	;# 
  3352     0391                     	;# 
  3353     0392                     	;# 
  3354     048C                     	;# 
  3355     048C                     	;# 
  3356     048D                     	;# 
  3357     048E                     	;# 
  3358     048F                     	;# 
  3359     048F                     	;# 
  3360     0490                     	;# 
  3361     0491                     	;# 
  3362     0492                     	;# 
  3363     0492                     	;# 
  3364     0493                     	;# 
  3365     0494                     	;# 
  3366     0495                     	;# 
  3367     0495                     	;# 
  3368     0496                     	;# 
  3369     0497                     	;# 
  3370     0498                     	;# 
  3371     0499                     	;# 
  3372     049A                     	;# 
  3373     049B                     	;# 
  3374     049C                     	;# 
  3375     049D                     	;# 
  3376     058C                     	;# 
  3377     058C                     	;# 
  3378     058D                     	;# 
  3379     058E                     	;# 
  3380     058F                     	;# 
  3381     058F                     	;# 
  3382     0590                     	;# 
  3383     0591                     	;# 
  3384     0592                     	;# 
  3385     0593                     	;# 
  3386     059C                     	;# 
  3387     059C                     	;# 
  3388     059D                     	;# 
  3389     059D                     	;# 
  3390     059E                     	;# 
  3391     059F                     	;# 
  3392     060C                     	;# 
  3393     060C                     	;# 
  3394     060D                     	;# 
  3395     060D                     	;# 
  3396     060E                     	;# 
  3397     060F                     	;# 
  3398     0610                     	;# 
  3399     0611                     	;# 
  3400     0612                     	;# 
  3401     0613                     	;# 
  3402     0614                     	;# 
  3403     0616                     	;# 
  3404     0616                     	;# 
  3405     0617                     	;# 
  3406     0617                     	;# 
  3407     0618                     	;# 
  3408     0619                     	;# 
  3409     061A                     	;# 
  3410     061B                     	;# 
  3411     061C                     	;# 
  3412     061D                     	;# 
  3413     061E                     	;# 
  3414     070C                     	;# 
  3415     070D                     	;# 
  3416     070E                     	;# 
  3417     070F                     	;# 
  3418     0710                     	;# 
  3419     0711                     	;# 
  3420     0712                     	;# 
  3421     0713                     	;# 
  3422     0714                     	;# 
  3423     0716                     	;# 
  3424     0717                     	;# 
  3425     0718                     	;# 
  3426     0719                     	;# 
  3427     071A                     	;# 
  3428     071B                     	;# 
  3429     071C                     	;# 
  3430     071D                     	;# 
  3431     071E                     	;# 
  3432     0796                     	;# 
  3433     0797                     	;# 
  3434     0798                     	;# 
  3435     0799                     	;# 
  3436     079A                     	;# 
  3437     079B                     	;# 
  3438     079C                     	;# 
  3439     079D                     	;# 
  3440     080C                     	;# 
  3441     080D                     	;# 
  3442     080E                     	;# 
  3443     080F                     	;# 
  3444     0810                     	;# 
  3445     0811                     	;# 
  3446     0812                     	;# 
  3447     0813                     	;# 
  3448     0814                     	;# 
  3449     081A                     	;# 
  3450     081A                     	;# 
  3451     081B                     	;# 
  3452     081C                     	;# 
  3453     081C                     	;# 
  3454     081D                     	;# 
  3455     081E                     	;# 
  3456     081F                     	;# 
  3457     088C                     	;# 
  3458     088D                     	;# 
  3459     088E                     	;# 
  3460     088F                     	;# 
  3461     0890                     	;# 
  3462     0891                     	;# 
  3463     0892                     	;# 
  3464     0893                     	;# 
  3465     0895                     	;# 
  3466     0896                     	;# 
  3467     0897                     	;# 
  3468     0898                     	;# 
  3469     0899                     	;# 
  3470     089A                     	;# 
  3471     089B                     	;# 
  3472     090C                     	;# 
  3473     090E                     	;# 
  3474     090F                     	;# 
  3475     091F                     	;# 
  3476     098F                     	;# 
  3477     098F                     	;# 
  3478     0990                     	;# 
  3479     0991                     	;# 
  3480     0992                     	;# 
  3481     0993                     	;# 
  3482     0994                     	;# 
  3483     0995                     	;# 
  3484     0996                     	;# 
  3485     0997                     	;# 
  3486     1E0F                     	;# 
  3487     1E10                     	;# 
  3488     1E11                     	;# 
  3489     1E12                     	;# 
  3490     1E13                     	;# 
  3491     1E14                     	;# 
  3492     1E15                     	;# 
  3493     1E16                     	;# 
  3494     1E17                     	;# 
  3495     1E18                     	;# 
  3496     1E19                     	;# 
  3497     1E1A                     	;# 
  3498     1E1B                     	;# 
  3499     1E1C                     	;# 
  3500     1E1D                     	;# 
  3501     1E1E                     	;# 
  3502     1E1F                     	;# 
  3503     1E20                     	;# 
  3504     1E21                     	;# 
  3505     1E22                     	;# 
  3506     1E23                     	;# 
  3507     1E24                     	;# 
  3508     1E25                     	;# 
  3509     1E26                     	;# 
  3510     1E27                     	;# 
  3511     1E28                     	;# 
  3512     1E29                     	;# 
  3513     1E2A                     	;# 
  3514     1E2B                     	;# 
  3515     1E2C                     	;# 
  3516     1E2D                     	;# 
  3517     1E2E                     	;# 
  3518     1E2F                     	;# 
  3519     1E30                     	;# 
  3520     1E31                     	;# 
  3521     1E32                     	;# 
  3522     1E33                     	;# 
  3523     1E34                     	;# 
  3524     1E35                     	;# 
  3525     1E36                     	;# 
  3526     1E37                     	;# 
  3527     1E8F                     	;# 
  3528     1E90                     	;# 
  3529     1E91                     	;# 
  3530     1E92                     	;# 
  3531     1E93                     	;# 
  3532     1E94                     	;# 
  3533     1E95                     	;# 
  3534     1E96                     	;# 
  3535     1E97                     	;# 
  3536     1E9C                     	;# 
  3537     1E9D                     	;# 
  3538     1E9E                     	;# 
  3539     1EA1                     	;# 
  3540     1EA2                     	;# 
  3541     1EA3                     	;# 
  3542     1EA4                     	;# 
  3543     1EA9                     	;# 
  3544     1EAA                     	;# 
  3545     1EB1                     	;# 
  3546     1EB2                     	;# 
  3547     1EB8                     	;# 
  3548     1EB9                     	;# 
  3549     1EBA                     	;# 
  3550     1EBB                     	;# 
  3551     1EBC                     	;# 
  3552     1EBD                     	;# 
  3553     1EBE                     	;# 
  3554     1EC3                     	;# 
  3555     1EC5                     	;# 
  3556     1EC6                     	;# 
  3557     1EC7                     	;# 
  3558     1EC8                     	;# 
  3559     1EC9                     	;# 
  3560     1ECA                     	;# 
  3561     1ECB                     	;# 
  3562     1ECC                     	;# 
  3563     1F10                     	;# 
  3564     1F11                     	;# 
  3565     1F12                     	;# 
  3566     1F14                     	;# 
  3567     1F15                     	;# 
  3568     1F20                     	;# 
  3569     1F21                     	;# 
  3570     1F22                     	;# 
  3571     1F23                     	;# 
  3572     1F24                     	;# 
  3573     1F25                     	;# 
  3574     1F38                     	;# 
  3575     1F39                     	;# 
  3576     1F3A                     	;# 
  3577     1F3B                     	;# 
  3578     1F3C                     	;# 
  3579     1F3D                     	;# 
  3580     1F3E                     	;# 
  3581     1F3F                     	;# 
  3582     1F4E                     	;# 
  3583     1F4F                     	;# 
  3584     1F50                     	;# 
  3585     1F51                     	;# 
  3586     1F52                     	;# 
  3587     1F53                     	;# 
  3588     1F54                     	;# 
  3589     1F55                     	;# 
  3590     1FE4                     	;# 
  3591     1FE5                     	;# 
  3592     1FE6                     	;# 
  3593     1FE7                     	;# 
  3594     1FE8                     	;# 
  3595     1FE8                     	;# 
  3596     1FE9                     	;# 
  3597     1FEA                     	;# 
  3598     1FEB                     	;# 
  3599     1FED                     	;# 
  3600     1FEE                     	;# 
  3601     1FEF                     	;# 
  3602     0000                     	;# 
  3603     0001                     	;# 
  3604     0002                     	;# 
  3605     0003                     	;# 
  3606     0004                     	;# 
  3607     0005                     	;# 
  3608     0006                     	;# 
  3609     0007                     	;# 
  3610     0008                     	;# 
  3611     0009                     	;# 
  3612     000A                     	;# 
  3613     000B                     	;# 
  3614     000C                     	;# 
  3615     000E                     	;# 
  3616     0012                     	;# 
  3617     0014                     	;# 
  3618     0018                     	;# 
  3619     001A                     	;# 
  3620     008C                     	;# 
  3621     008C                     	;# 
  3622     008D                     	;# 
  3623     008E                     	;# 
  3624     008E                     	;# 
  3625     008F                     	;# 
  3626     0090                     	;# 
  3627     0090                     	;# 
  3628     0091                     	;# 
  3629     0092                     	;# 
  3630     0092                     	;# 
  3631     0093                     	;# 
  3632     0094                     	;# 
  3633     0094                     	;# 
  3634     0095                     	;# 
  3635     0096                     	;# 
  3636     0096                     	;# 
  3637     0097                     	;# 
  3638     0098                     	;# 
  3639     0099                     	;# 
  3640     009A                     	;# 
  3641     009B                     	;# 
  3642     009B                     	;# 
  3643     009C                     	;# 
  3644     009D                     	;# 
  3645     009D                     	;# 
  3646     009E                     	;# 
  3647     009F                     	;# 
  3648     010C                     	;# 
  3649     010C                     	;# 
  3650     010D                     	;# 
  3651     010E                     	;# 
  3652     010F                     	;# 
  3653     010F                     	;# 
  3654     0110                     	;# 
  3655     0111                     	;# 
  3656     0112                     	;# 
  3657     0113                     	;# 
  3658     0114                     	;# 
  3659     0115                     	;# 
  3660     0116                     	;# 
  3661     0117                     	;# 
  3662     0118                     	;# 
  3663     0119                     	;# 
  3664     0119                     	;# 
  3665     0119                     	;# 
  3666     011A                     	;# 
  3667     011A                     	;# 
  3668     011A                     	;# 
  3669     011B                     	;# 
  3670     011B                     	;# 
  3671     011B                     	;# 
  3672     011B                     	;# 
  3673     011B                     	;# 
  3674     011C                     	;# 
  3675     011C                     	;# 
  3676     011C                     	;# 
  3677     011D                     	;# 
  3678     011D                     	;# 
  3679     011D                     	;# 
  3680     011E                     	;# 
  3681     011E                     	;# 
  3682     011E                     	;# 
  3683     011F                     	;# 
  3684     011F                     	;# 
  3685     011F                     	;# 
  3686     011F                     	;# 
  3687     011F                     	;# 
  3688     018C                     	;# 
  3689     018D                     	;# 
  3690     018E                     	;# 
  3691     018F                     	;# 
  3692     0190                     	;# 
  3693     0191                     	;# 
  3694     0192                     	;# 
  3695     0196                     	;# 
  3696     0197                     	;# 
  3697     0198                     	;# 
  3698     0199                     	;# 
  3699     019A                     	;# 
  3700     019B                     	;# 
  3701     019C                     	;# 
  3702     020C                     	;# 
  3703     020D                     	;# 
  3704     020E                     	;# 
  3705     020E                     	;# 
  3706     020F                     	;# 
  3707     020F                     	;# 
  3708     0210                     	;# 
  3709     0210                     	;# 
  3710     0211                     	;# 
  3711     0211                     	;# 
  3712     0212                     	;# 
  3713     0213                     	;# 
  3714     0214                     	;# 
  3715     0214                     	;# 
  3716     0215                     	;# 
  3717     0215                     	;# 
  3718     0216                     	;# 
  3719     0216                     	;# 
  3720     0217                     	;# 
  3721     0217                     	;# 
  3722     0218                     	;# 
  3723     0219                     	;# 
  3724     021A                     	;# 
  3725     021A                     	;# 
  3726     021B                     	;# 
  3727     021B                     	;# 
  3728     021C                     	;# 
  3729     021C                     	;# 
  3730     021D                     	;# 
  3731     021D                     	;# 
  3732     021E                     	;# 
  3733     021F                     	;# 
  3734     028C                     	;# 
  3735     028C                     	;# 
  3736     028D                     	;# 
  3737     028D                     	;# 
  3738     028E                     	;# 
  3739     028F                     	;# 
  3740     0290                     	;# 
  3741     0291                     	;# 
  3742     0292                     	;# 
  3743     0292                     	;# 
  3744     0293                     	;# 
  3745     0293                     	;# 
  3746     0294                     	;# 
  3747     0295                     	;# 
  3748     0296                     	;# 
  3749     0297                     	;# 
  3750     0298                     	;# 
  3751     0298                     	;# 
  3752     0299                     	;# 
  3753     0299                     	;# 
  3754     029A                     	;# 
  3755     029B                     	;# 
  3756     029C                     	;# 
  3757     029D                     	;# 
  3758     029F                     	;# 
  3759     030C                     	;# 
  3760     030C                     	;# 
  3761     030D                     	;# 
  3762     030E                     	;# 
  3763     030F                     	;# 
  3764     0310                     	;# 
  3765     0310                     	;# 
  3766     0311                     	;# 
  3767     0312                     	;# 
  3768     0313                     	;# 
  3769     0314                     	;# 
  3770     0314                     	;# 
  3771     0315                     	;# 
  3772     0316                     	;# 
  3773     0317                     	;# 
  3774     0318                     	;# 
  3775     0318                     	;# 
  3776     0319                     	;# 
  3777     031A                     	;# 
  3778     031B                     	;# 
  3779     038C                     	;# 
  3780     038C                     	;# 
  3781     038D                     	;# 
  3782     038E                     	;# 
  3783     0390                     	;# 
  3784     0390                     	;# 
  3785     0391                     	;# 
  3786     0392                     	;# 
  3787     048C                     	;# 
  3788     048C                     	;# 
  3789     048D                     	;# 
  3790     048E                     	;# 
  3791     048F                     	;# 
  3792     048F                     	;# 
  3793     0490                     	;# 
  3794     0491                     	;# 
  3795     0492                     	;# 
  3796     0492                     	;# 
  3797     0493                     	;# 
  3798     0494                     	;# 
  3799     0495                     	;# 
  3800     0495                     	;# 
  3801     0496                     	;# 
  3802     0497                     	;# 
  3803     0498                     	;# 
  3804     0499                     	;# 
  3805     049A                     	;# 
  3806     049B                     	;# 
  3807     049C                     	;# 
  3808     049D                     	;# 
  3809     058C                     	;# 
  3810     058C                     	;# 
  3811     058D                     	;# 
  3812     058E                     	;# 
  3813     058F                     	;# 
  3814     058F                     	;# 
  3815     0590                     	;# 
  3816     0591                     	;# 
  3817     0592                     	;# 
  3818     0593                     	;# 
  3819     059C                     	;# 
  3820     059C                     	;# 
  3821     059D                     	;# 
  3822     059D                     	;# 
  3823     059E                     	;# 
  3824     059F                     	;# 
  3825     060C                     	;# 
  3826     060C                     	;# 
  3827     060D                     	;# 
  3828     060D                     	;# 
  3829     060E                     	;# 
  3830     060F                     	;# 
  3831     0610                     	;# 
  3832     0611                     	;# 
  3833     0612                     	;# 
  3834     0613                     	;# 
  3835     0614                     	;# 
  3836     0616                     	;# 
  3837     0616                     	;# 
  3838     0617                     	;# 
  3839     0617                     	;# 
  3840     0618                     	;# 
  3841     0619                     	;# 
  3842     061A                     	;# 
  3843     061B                     	;# 
  3844     061C                     	;# 
  3845     061D                     	;# 
  3846     061E                     	;# 
  3847     070C                     	;# 
  3848     070D                     	;# 
  3849     070E                     	;# 
  3850     070F                     	;# 
  3851     0710                     	;# 
  3852     0711                     	;# 
  3853     0712                     	;# 
  3854     0713                     	;# 
  3855     0714                     	;# 
  3856     0716                     	;# 
  3857     0717                     	;# 
  3858     0718                     	;# 
  3859     0719                     	;# 
  3860     071A                     	;# 
  3861     071B                     	;# 
  3862     071C                     	;# 
  3863     071D                     	;# 
  3864     071E                     	;# 
  3865     0796                     	;# 
  3866     0797                     	;# 
  3867     0798                     	;# 
  3868     0799                     	;# 
  3869     079A                     	;# 
  3870     079B                     	;# 
  3871     079C                     	;# 
  3872     079D                     	;# 
  3873     080C                     	;# 
  3874     080D                     	;# 
  3875     080E                     	;# 
  3876     080F                     	;# 
  3877     0810                     	;# 
  3878     0811                     	;# 
  3879     0812                     	;# 
  3880     0813                     	;# 
  3881     0814                     	;# 
  3882     081A                     	;# 
  3883     081A                     	;# 
  3884     081B                     	;# 
  3885     081C                     	;# 
  3886     081C                     	;# 
  3887     081D                     	;# 
  3888     081E                     	;# 
  3889     081F                     	;# 
  3890     088C                     	;# 
  3891     088D                     	;# 
  3892     088E                     	;# 
  3893     088F                     	;# 
  3894     0890                     	;# 
  3895     0891                     	;# 
  3896     0892                     	;# 
  3897     0893                     	;# 
  3898     0895                     	;# 
  3899     0896                     	;# 
  3900     0897                     	;# 
  3901     0898                     	;# 
  3902     0899                     	;# 
  3903     089A                     	;# 
  3904     089B                     	;# 
  3905     090C                     	;# 
  3906     090E                     	;# 
  3907     090F                     	;# 
  3908     091F                     	;# 
  3909     098F                     	;# 
  3910     098F                     	;# 
  3911     0990                     	;# 
  3912     0991                     	;# 
  3913     0992                     	;# 
  3914     0993                     	;# 
  3915     0994                     	;# 
  3916     0995                     	;# 
  3917     0996                     	;# 
  3918     0997                     	;# 
  3919     1E0F                     	;# 
  3920     1E10                     	;# 
  3921     1E11                     	;# 
  3922     1E12                     	;# 
  3923     1E13                     	;# 
  3924     1E14                     	;# 
  3925     1E15                     	;# 
  3926     1E16                     	;# 
  3927     1E17                     	;# 
  3928     1E18                     	;# 
  3929     1E19                     	;# 
  3930     1E1A                     	;# 
  3931     1E1B                     	;# 
  3932     1E1C                     	;# 
  3933     1E1D                     	;# 
  3934     1E1E                     	;# 
  3935     1E1F                     	;# 
  3936     1E20                     	;# 
  3937     1E21                     	;# 
  3938     1E22                     	;# 
  3939     1E23                     	;# 
  3940     1E24                     	;# 
  3941     1E25                     	;# 
  3942     1E26                     	;# 
  3943     1E27                     	;# 
  3944     1E28                     	;# 
  3945     1E29                     	;# 
  3946     1E2A                     	;# 
  3947     1E2B                     	;# 
  3948     1E2C                     	;# 
  3949     1E2D                     	;# 
  3950     1E2E                     	;# 
  3951     1E2F                     	;# 
  3952     1E30                     	;# 
  3953     1E31                     	;# 
  3954     1E32                     	;# 
  3955     1E33                     	;# 
  3956     1E34                     	;# 
  3957     1E35                     	;# 
  3958     1E36                     	;# 
  3959     1E37                     	;# 
  3960     1E8F                     	;# 
  3961     1E90                     	;# 
  3962     1E91                     	;# 
  3963     1E92                     	;# 
  3964     1E93                     	;# 
  3965     1E94                     	;# 
  3966     1E95                     	;# 
  3967     1E96                     	;# 
  3968     1E97                     	;# 
  3969     1E9C                     	;# 
  3970     1E9D                     	;# 
  3971     1E9E                     	;# 
  3972     1EA1                     	;# 
  3973     1EA2                     	;# 
  3974     1EA3                     	;# 
  3975     1EA4                     	;# 
  3976     1EA9                     	;# 
  3977     1EAA                     	;# 
  3978     1EB1                     	;# 
  3979     1EB2                     	;# 
  3980     1EB8                     	;# 
  3981     1EB9                     	;# 
  3982     1EBA                     	;# 
  3983     1EBB                     	;# 
  3984     1EBC                     	;# 
  3985     1EBD                     	;# 
  3986     1EBE                     	;# 
  3987     1EC3                     	;# 
  3988     1EC5                     	;# 
  3989     1EC6                     	;# 
  3990     1EC7                     	;# 
  3991     1EC8                     	;# 
  3992     1EC9                     	;# 
  3993     1ECA                     	;# 
  3994     1ECB                     	;# 
  3995     1ECC                     	;# 
  3996     1F10                     	;# 
  3997     1F11                     	;# 
  3998     1F12                     	;# 
  3999     1F14                     	;# 
  4000     1F15                     	;# 
  4001     1F20                     	;# 
  4002     1F21                     	;# 
  4003     1F22                     	;# 
  4004     1F23                     	;# 
  4005     1F24                     	;# 
  4006     1F25                     	;# 
  4007     1F38                     	;# 
  4008     1F39                     	;# 
  4009     1F3A                     	;# 
  4010     1F3B                     	;# 
  4011     1F3C                     	;# 
  4012     1F3D                     	;# 
  4013     1F3E                     	;# 
  4014     1F3F                     	;# 
  4015     1F4E                     	;# 
  4016     1F4F                     	;# 
  4017     1F50                     	;# 
  4018     1F51                     	;# 
  4019     1F52                     	;# 
  4020     1F53                     	;# 
  4021     1F54                     	;# 
  4022     1F55                     	;# 
  4023     1FE4                     	;# 
  4024     1FE5                     	;# 
  4025     1FE6                     	;# 
  4026     1FE7                     	;# 
  4027     1FE8                     	;# 
  4028     1FE8                     	;# 
  4029     1FE9                     	;# 
  4030     1FEA                     	;# 
  4031     1FEB                     	;# 
  4032     1FED                     	;# 
  4033     1FEE                     	;# 
  4034     1FEF                     	;# 
  4035     0000                     	;# 
  4036     0001                     	;# 
  4037     0002                     	;# 
  4038     0003                     	;# 
  4039     0004                     	;# 
  4040     0005                     	;# 
  4041     0006                     	;# 
  4042     0007                     	;# 
  4043     0008                     	;# 
  4044     0009                     	;# 
  4045     000A                     	;# 
  4046     000B                     	;# 
  4047     000C                     	;# 
  4048     000E                     	;# 
  4049     0012                     	;# 
  4050     0014                     	;# 
  4051     0018                     	;# 
  4052     001A                     	;# 
  4053     008C                     	;# 
  4054     008C                     	;# 
  4055     008D                     	;# 
  4056     008E                     	;# 
  4057     008E                     	;# 
  4058     008F                     	;# 
  4059     0090                     	;# 
  4060     0090                     	;# 
  4061     0091                     	;# 
  4062     0092                     	;# 
  4063     0092                     	;# 
  4064     0093                     	;# 
  4065     0094                     	;# 
  4066     0094                     	;# 
  4067     0095                     	;# 
  4068     0096                     	;# 
  4069     0096                     	;# 
  4070     0097                     	;# 
  4071     0098                     	;# 
  4072     0099                     	;# 
  4073     009A                     	;# 
  4074     009B                     	;# 
  4075     009B                     	;# 
  4076     009C                     	;# 
  4077     009D                     	;# 
  4078     009D                     	;# 
  4079     009E                     	;# 
  4080     009F                     	;# 
  4081     010C                     	;# 
  4082     010C                     	;# 
  4083     010D                     	;# 
  4084     010E                     	;# 
  4085     010F                     	;# 
  4086     010F                     	;# 
  4087     0110                     	;# 
  4088     0111                     	;# 
  4089     0112                     	;# 
  4090     0113                     	;# 
  4091     0114                     	;# 
  4092     0115                     	;# 
  4093     0116                     	;# 
  4094     0117                     	;# 
  4095     0118                     	;# 
  4096     0119                     	;# 
  4097     0119                     	;# 
  4098     0119                     	;# 
  4099     011A                     	;# 
  4100     011A                     	;# 
  4101     011A                     	;# 
  4102     011B                     	;# 
  4103     011B                     	;# 
  4104     011B                     	;# 
  4105     011B                     	;# 
  4106     011B                     	;# 
  4107     011C                     	;# 
  4108     011C                     	;# 
  4109     011C                     	;# 
  4110     011D                     	;# 
  4111     011D                     	;# 
  4112     011D                     	;# 
  4113     011E                     	;# 
  4114     011E                     	;# 
  4115     011E                     	;# 
  4116     011F                     	;# 
  4117     011F                     	;# 
  4118     011F                     	;# 
  4119     011F                     	;# 
  4120     011F                     	;# 
  4121     018C                     	;# 
  4122     018D                     	;# 
  4123     018E                     	;# 
  4124     018F                     	;# 
  4125     0190                     	;# 
  4126     0191                     	;# 
  4127     0192                     	;# 
  4128     0196                     	;# 
  4129     0197                     	;# 
  4130     0198                     	;# 
  4131     0199                     	;# 
  4132     019A                     	;# 
  4133     019B                     	;# 
  4134     019C                     	;# 
  4135     020C                     	;# 
  4136     020D                     	;# 
  4137     020E                     	;# 
  4138     020E                     	;# 
  4139     020F                     	;# 
  4140     020F                     	;# 
  4141     0210                     	;# 
  4142     0210                     	;# 
  4143     0211                     	;# 
  4144     0211                     	;# 
  4145     0212                     	;# 
  4146     0213                     	;# 
  4147     0214                     	;# 
  4148     0214                     	;# 
  4149     0215                     	;# 
  4150     0215                     	;# 
  4151     0216                     	;# 
  4152     0216                     	;# 
  4153     0217                     	;# 
  4154     0217                     	;# 
  4155     0218                     	;# 
  4156     0219                     	;# 
  4157     021A                     	;# 
  4158     021A                     	;# 
  4159     021B                     	;# 
  4160     021B                     	;# 
  4161     021C                     	;# 
  4162     021C                     	;# 
  4163     021D                     	;# 
  4164     021D                     	;# 
  4165     021E                     	;# 
  4166     021F                     	;# 
  4167     028C                     	;# 
  4168     028C                     	;# 
  4169     028D                     	;# 
  4170     028D                     	;# 
  4171     028E                     	;# 
  4172     028F                     	;# 
  4173     0290                     	;# 
  4174     0291                     	;# 
  4175     0292                     	;# 
  4176     0292                     	;# 
  4177     0293                     	;# 
  4178     0293                     	;# 
  4179     0294                     	;# 
  4180     0295                     	;# 
  4181     0296                     	;# 
  4182     0297                     	;# 
  4183     0298                     	;# 
  4184     0298                     	;# 
  4185     0299                     	;# 
  4186     0299                     	;# 
  4187     029A                     	;# 
  4188     029B                     	;# 
  4189     029C                     	;# 
  4190     029D                     	;# 
  4191     029F                     	;# 
  4192     030C                     	;# 
  4193     030C                     	;# 
  4194     030D                     	;# 
  4195     030E                     	;# 
  4196     030F                     	;# 
  4197     0310                     	;# 
  4198     0310                     	;# 
  4199     0311                     	;# 
  4200     0312                     	;# 
  4201     0313                     	;# 
  4202     0314                     	;# 
  4203     0314                     	;# 
  4204     0315                     	;# 
  4205     0316                     	;# 
  4206     0317                     	;# 
  4207     0318                     	;# 
  4208     0318                     	;# 
  4209     0319                     	;# 
  4210     031A                     	;# 
  4211     031B                     	;# 
  4212     038C                     	;# 
  4213     038C                     	;# 
  4214     038D                     	;# 
  4215     038E                     	;# 
  4216     0390                     	;# 
  4217     0390                     	;# 
  4218     0391                     	;# 
  4219     0392                     	;# 
  4220     048C                     	;# 
  4221     048C                     	;# 
  4222     048D                     	;# 
  4223     048E                     	;# 
  4224     048F                     	;# 
  4225     048F                     	;# 
  4226     0490                     	;# 
  4227     0491                     	;# 
  4228     0492                     	;# 
  4229     0492                     	;# 
  4230     0493                     	;# 
  4231     0494                     	;# 
  4232     0495                     	;# 
  4233     0495                     	;# 
  4234     0496                     	;# 
  4235     0497                     	;# 
  4236     0498                     	;# 
  4237     0499                     	;# 
  4238     049A                     	;# 
  4239     049B                     	;# 
  4240     049C                     	;# 
  4241     049D                     	;# 
  4242     058C                     	;# 
  4243     058C                     	;# 
  4244     058D                     	;# 
  4245     058E                     	;# 
  4246     058F                     	;# 
  4247     058F                     	;# 
  4248     0590                     	;# 
  4249     0591                     	;# 
  4250     0592                     	;# 
  4251     0593                     	;# 
  4252     059C                     	;# 
  4253     059C                     	;# 
  4254     059D                     	;# 
  4255     059D                     	;# 
  4256     059E                     	;# 
  4257     059F                     	;# 
  4258     060C                     	;# 
  4259     060C                     	;# 
  4260     060D                     	;# 
  4261     060D                     	;# 
  4262     060E                     	;# 
  4263     060F                     	;# 
  4264     0610                     	;# 
  4265     0611                     	;# 
  4266     0612                     	;# 
  4267     0613                     	;# 
  4268     0614                     	;# 
  4269     0616                     	;# 
  4270     0616                     	;# 
  4271     0617                     	;# 
  4272     0617                     	;# 
  4273     0618                     	;# 
  4274     0619                     	;# 
  4275     061A                     	;# 
  4276     061B                     	;# 
  4277     061C                     	;# 
  4278     061D                     	;# 
  4279     061E                     	;# 
  4280     070C                     	;# 
  4281     070D                     	;# 
  4282     070E                     	;# 
  4283     070F                     	;# 
  4284     0710                     	;# 
  4285     0711                     	;# 
  4286     0712                     	;# 
  4287     0713                     	;# 
  4288     0714                     	;# 
  4289     0716                     	;# 
  4290     0717                     	;# 
  4291     0718                     	;# 
  4292     0719                     	;# 
  4293     071A                     	;# 
  4294     071B                     	;# 
  4295     071C                     	;# 
  4296     071D                     	;# 
  4297     071E                     	;# 
  4298     0796                     	;# 
  4299     0797                     	;# 
  4300     0798                     	;# 
  4301     0799                     	;# 
  4302     079A                     	;# 
  4303     079B                     	;# 
  4304     079C                     	;# 
  4305     079D                     	;# 
  4306     080C                     	;# 
  4307     080D                     	;# 
  4308     080E                     	;# 
  4309     080F                     	;# 
  4310     0810                     	;# 
  4311     0811                     	;# 
  4312     0812                     	;# 
  4313     0813                     	;# 
  4314     0814                     	;# 
  4315     081A                     	;# 
  4316     081A                     	;# 
  4317     081B                     	;# 
  4318     081C                     	;# 
  4319     081C                     	;# 
  4320     081D                     	;# 
  4321     081E                     	;# 
  4322     081F                     	;# 
  4323     088C                     	;# 
  4324     088D                     	;# 
  4325     088E                     	;# 
  4326     088F                     	;# 
  4327     0890                     	;# 
  4328     0891                     	;# 
  4329     0892                     	;# 
  4330     0893                     	;# 
  4331     0895                     	;# 
  4332     0896                     	;# 
  4333     0897                     	;# 
  4334     0898                     	;# 
  4335     0899                     	;# 
  4336     089A                     	;# 
  4337     089B                     	;# 
  4338     090C                     	;# 
  4339     090E                     	;# 
  4340     090F                     	;# 
  4341     091F                     	;# 
  4342     098F                     	;# 
  4343     098F                     	;# 
  4344     0990                     	;# 
  4345     0991                     	;# 
  4346     0992                     	;# 
  4347     0993                     	;# 
  4348     0994                     	;# 
  4349     0995                     	;# 
  4350     0996                     	;# 
  4351     0997                     	;# 
  4352     1E0F                     	;# 
  4353     1E10                     	;# 
  4354     1E11                     	;# 
  4355     1E12                     	;# 
  4356     1E13                     	;# 
  4357     1E14                     	;# 
  4358     1E15                     	;# 
  4359     1E16                     	;# 
  4360     1E17                     	;# 
  4361     1E18                     	;# 
  4362     1E19                     	;# 
  4363     1E1A                     	;# 
  4364     1E1B                     	;# 
  4365     1E1C                     	;# 
  4366     1E1D                     	;# 
  4367     1E1E                     	;# 
  4368     1E1F                     	;# 
  4369     1E20                     	;# 
  4370     1E21                     	;# 
  4371     1E22                     	;# 
  4372     1E23                     	;# 
  4373     1E24                     	;# 
  4374     1E25                     	;# 
  4375     1E26                     	;# 
  4376     1E27                     	;# 
  4377     1E28                     	;# 
  4378     1E29                     	;# 
  4379     1E2A                     	;# 
  4380     1E2B                     	;# 
  4381     1E2C                     	;# 
  4382     1E2D                     	;# 
  4383     1E2E                     	;# 
  4384     1E2F                     	;# 
  4385     1E30                     	;# 
  4386     1E31                     	;# 
  4387     1E32                     	;# 
  4388     1E33                     	;# 
  4389     1E34                     	;# 
  4390     1E35                     	;# 
  4391     1E36                     	;# 
  4392     1E37                     	;# 
  4393     1E8F                     	;# 
  4394     1E90                     	;# 
  4395     1E91                     	;# 
  4396     1E92                     	;# 
  4397     1E93                     	;# 
  4398     1E94                     	;# 
  4399     1E95                     	;# 
  4400     1E96                     	;# 
  4401     1E97                     	;# 
  4402     1E9C                     	;# 
  4403     1E9D                     	;# 
  4404     1E9E                     	;# 
  4405     1EA1                     	;# 
  4406     1EA2                     	;# 
  4407     1EA3                     	;# 
  4408     1EA4                     	;# 
  4409     1EA9                     	;# 
  4410     1EAA                     	;# 
  4411     1EB1                     	;# 
  4412     1EB2                     	;# 
  4413     1EB8                     	;# 
  4414     1EB9                     	;# 
  4415     1EBA                     	;# 
  4416     1EBB                     	;# 
  4417     1EBC                     	;# 
  4418     1EBD                     	;# 
  4419     1EBE                     	;# 
  4420     1EC3                     	;# 
  4421     1EC5                     	;# 
  4422     1EC6                     	;# 
  4423     1EC7                     	;# 
  4424     1EC8                     	;# 
  4425     1EC9                     	;# 
  4426     1ECA                     	;# 
  4427     1ECB                     	;# 
  4428     1ECC                     	;# 
  4429     1F10                     	;# 
  4430     1F11                     	;# 
  4431     1F12                     	;# 
  4432     1F14                     	;# 
  4433     1F15                     	;# 
  4434     1F20                     	;# 
  4435     1F21                     	;# 
  4436     1F22                     	;# 
  4437     1F23                     	;# 
  4438     1F24                     	;# 
  4439     1F25                     	;# 
  4440     1F38                     	;# 
  4441     1F39                     	;# 
  4442     1F3A                     	;# 
  4443     1F3B                     	;# 
  4444     1F3C                     	;# 
  4445     1F3D                     	;# 
  4446     1F3E                     	;# 
  4447     1F3F                     	;# 
  4448     1F4E                     	;# 
  4449     1F4F                     	;# 
  4450     1F50                     	;# 
  4451     1F51                     	;# 
  4452     1F52                     	;# 
  4453     1F53                     	;# 
  4454     1F54                     	;# 
  4455     1F55                     	;# 
  4456     1FE4                     	;# 
  4457     1FE5                     	;# 
  4458     1FE6                     	;# 
  4459     1FE7                     	;# 
  4460     1FE8                     	;# 
  4461     1FE8                     	;# 
  4462     1FE9                     	;# 
  4463     1FEA                     	;# 
  4464     1FEB                     	;# 
  4465     1FED                     	;# 
  4466     1FEE                     	;# 
  4467     1FEF                     	;# 
  4468     0000                     	;# 
  4469     0001                     	;# 
  4470     0002                     	;# 
  4471     0003                     	;# 
  4472     0004                     	;# 
  4473     0005                     	;# 
  4474     0006                     	;# 
  4475     0007                     	;# 
  4476     0008                     	;# 
  4477     0009                     	;# 
  4478     000A                     	;# 
  4479     000B                     	;# 
  4480     000C                     	;# 
  4481     000E                     	;# 
  4482     0012                     	;# 
  4483     0014                     	;# 
  4484     0018                     	;# 
  4485     001A                     	;# 
  4486     008C                     	;# 
  4487     008C                     	;# 
  4488     008D                     	;# 
  4489     008E                     	;# 
  4490     008E                     	;# 
  4491     008F                     	;# 
  4492     0090                     	;# 
  4493     0090                     	;# 
  4494     0091                     	;# 
  4495     0092                     	;# 
  4496     0092                     	;# 
  4497     0093                     	;# 
  4498     0094                     	;# 
  4499     0094                     	;# 
  4500     0095                     	;# 
  4501     0096                     	;# 
  4502     0096                     	;# 
  4503     0097                     	;# 
  4504     0098                     	;# 
  4505     0099                     	;# 
  4506     009A                     	;# 
  4507     009B                     	;# 
  4508     009B                     	;# 
  4509     009C                     	;# 
  4510     009D                     	;# 
  4511     009D                     	;# 
  4512     009E                     	;# 
  4513     009F                     	;# 
  4514     010C                     	;# 
  4515     010C                     	;# 
  4516     010D                     	;# 
  4517     010E                     	;# 
  4518     010F                     	;# 
  4519     010F                     	;# 
  4520     0110                     	;# 
  4521     0111                     	;# 
  4522     0112                     	;# 
  4523     0113                     	;# 
  4524     0114                     	;# 
  4525     0115                     	;# 
  4526     0116                     	;# 
  4527     0117                     	;# 
  4528     0118                     	;# 
  4529     0119                     	;# 
  4530     0119                     	;# 
  4531     0119                     	;# 
  4532     011A                     	;# 
  4533     011A                     	;# 
  4534     011A                     	;# 
  4535     011B                     	;# 
  4536     011B                     	;# 
  4537     011B                     	;# 
  4538     011B                     	;# 
  4539     011B                     	;# 
  4540     011C                     	;# 
  4541     011C                     	;# 
  4542     011C                     	;# 
  4543     011D                     	;# 
  4544     011D                     	;# 
  4545     011D                     	;# 
  4546     011E                     	;# 
  4547     011E                     	;# 
  4548     011E                     	;# 
  4549     011F                     	;# 
  4550     011F                     	;# 
  4551     011F                     	;# 
  4552     011F                     	;# 
  4553     011F                     	;# 
  4554     018C                     	;# 
  4555     018D                     	;# 
  4556     018E                     	;# 
  4557     018F                     	;# 
  4558     0190                     	;# 
  4559     0191                     	;# 
  4560     0192                     	;# 
  4561     0196                     	;# 
  4562     0197                     	;# 
  4563     0198                     	;# 
  4564     0199                     	;# 
  4565     019A                     	;# 
  4566     019B                     	;# 
  4567     019C                     	;# 
  4568     020C                     	;# 
  4569     020D                     	;# 
  4570     020E                     	;# 
  4571     020E                     	;# 
  4572     020F                     	;# 
  4573     020F                     	;# 
  4574     0210                     	;# 
  4575     0210                     	;# 
  4576     0211                     	;# 
  4577     0211                     	;# 
  4578     0212                     	;# 
  4579     0213                     	;# 
  4580     0214                     	;# 
  4581     0214                     	;# 
  4582     0215                     	;# 
  4583     0215                     	;# 
  4584     0216                     	;# 
  4585     0216                     	;# 
  4586     0217                     	;# 
  4587     0217                     	;# 
  4588     0218                     	;# 
  4589     0219                     	;# 
  4590     021A                     	;# 
  4591     021A                     	;# 
  4592     021B                     	;# 
  4593     021B                     	;# 
  4594     021C                     	;# 
  4595     021C                     	;# 
  4596     021D                     	;# 
  4597     021D                     	;# 
  4598     021E                     	;# 
  4599     021F                     	;# 
  4600     028C                     	;# 
  4601     028C                     	;# 
  4602     028D                     	;# 
  4603     028D                     	;# 
  4604     028E                     	;# 
  4605     028F                     	;# 
  4606     0290                     	;# 
  4607     0291                     	;# 
  4608     0292                     	;# 
  4609     0292                     	;# 
  4610     0293                     	;# 
  4611     0293                     	;# 
  4612     0294                     	;# 
  4613     0295                     	;# 
  4614     0296                     	;# 
  4615     0297                     	;# 
  4616     0298                     	;# 
  4617     0298                     	;# 
  4618     0299                     	;# 
  4619     0299                     	;# 
  4620     029A                     	;# 
  4621     029B                     	;# 
  4622     029C                     	;# 
  4623     029D                     	;# 
  4624     029F                     	;# 
  4625     030C                     	;# 
  4626     030C                     	;# 
  4627     030D                     	;# 
  4628     030E                     	;# 
  4629     030F                     	;# 
  4630     0310                     	;# 
  4631     0310                     	;# 
  4632     0311                     	;# 
  4633     0312                     	;# 
  4634     0313                     	;# 
  4635     0314                     	;# 
  4636     0314                     	;# 
  4637     0315                     	;# 
  4638     0316                     	;# 
  4639     0317                     	;# 
  4640     0318                     	;# 
  4641     0318                     	;# 
  4642     0319                     	;# 
  4643     031A                     	;# 
  4644     031B                     	;# 
  4645     038C                     	;# 
  4646     038C                     	;# 
  4647     038D                     	;# 
  4648     038E                     	;# 
  4649     0390                     	;# 
  4650     0390                     	;# 
  4651     0391                     	;# 
  4652     0392                     	;# 
  4653     048C                     	;# 
  4654     048C                     	;# 
  4655     048D                     	;# 
  4656     048E                     	;# 
  4657     048F                     	;# 
  4658     048F                     	;# 
  4659     0490                     	;# 
  4660     0491                     	;# 
  4661     0492                     	;# 
  4662     0492                     	;# 
  4663     0493                     	;# 
  4664     0494                     	;# 
  4665     0495                     	;# 
  4666     0495                     	;# 
  4667     0496                     	;# 
  4668     0497                     	;# 
  4669     0498                     	;# 
  4670     0499                     	;# 
  4671     049A                     	;# 
  4672     049B                     	;# 
  4673     049C                     	;# 
  4674     049D                     	;# 
  4675     058C                     	;# 
  4676     058C                     	;# 
  4677     058D                     	;# 
  4678     058E                     	;# 
  4679     058F                     	;# 
  4680     058F                     	;# 
  4681     0590                     	;# 
  4682     0591                     	;# 
  4683     0592                     	;# 
  4684     0593                     	;# 
  4685     059C                     	;# 
  4686     059C                     	;# 
  4687     059D                     	;# 
  4688     059D                     	;# 
  4689     059E                     	;# 
  4690     059F                     	;# 
  4691     060C                     	;# 
  4692     060C                     	;# 
  4693     060D                     	;# 
  4694     060D                     	;# 
  4695     060E                     	;# 
  4696     060F                     	;# 
  4697     0610                     	;# 
  4698     0611                     	;# 
  4699     0612                     	;# 
  4700     0613                     	;# 
  4701     0614                     	;# 
  4702     0616                     	;# 
  4703     0616                     	;# 
  4704     0617                     	;# 
  4705     0617                     	;# 
  4706     0618                     	;# 
  4707     0619                     	;# 
  4708     061A                     	;# 
  4709     061B                     	;# 
  4710     061C                     	;# 
  4711     061D                     	;# 
  4712     061E                     	;# 
  4713     070C                     	;# 
  4714     070D                     	;# 
  4715     070E                     	;# 
  4716     070F                     	;# 
  4717     0710                     	;# 
  4718     0711                     	;# 
  4719     0712                     	;# 
  4720     0713                     	;# 
  4721     0714                     	;# 
  4722     0716                     	;# 
  4723     0717                     	;# 
  4724     0718                     	;# 
  4725     0719                     	;# 
  4726     071A                     	;# 
  4727     071B                     	;# 
  4728     071C                     	;# 
  4729     071D                     	;# 
  4730     071E                     	;# 
  4731     0796                     	;# 
  4732     0797                     	;# 
  4733     0798                     	;# 
  4734     0799                     	;# 
  4735     079A                     	;# 
  4736     079B                     	;# 
  4737     079C                     	;# 
  4738     079D                     	;# 
  4739     080C                     	;# 
  4740     080D                     	;# 
  4741     080E                     	;# 
  4742     080F                     	;# 
  4743     0810                     	;# 
  4744     0811                     	;# 
  4745     0812                     	;# 
  4746     0813                     	;# 
  4747     0814                     	;# 
  4748     081A                     	;# 
  4749     081A                     	;# 
  4750     081B                     	;# 
  4751     081C                     	;# 
  4752     081C                     	;# 
  4753     081D                     	;# 
  4754     081E                     	;# 
  4755     081F                     	;# 
  4756     088C                     	;# 
  4757     088D                     	;# 
  4758     088E                     	;# 
  4759     088F                     	;# 
  4760     0890                     	;# 
  4761     0891                     	;# 
  4762     0892                     	;# 
  4763     0893                     	;# 
  4764     0895                     	;# 
  4765     0896                     	;# 
  4766     0897                     	;# 
  4767     0898                     	;# 
  4768     0899                     	;# 
  4769     089A                     	;# 
  4770     089B                     	;# 
  4771     090C                     	;# 
  4772     090E                     	;# 
  4773     090F                     	;# 
  4774     091F                     	;# 
  4775     098F                     	;# 
  4776     098F                     	;# 
  4777     0990                     	;# 
  4778     0991                     	;# 
  4779     0992                     	;# 
  4780     0993                     	;# 
  4781     0994                     	;# 
  4782     0995                     	;# 
  4783     0996                     	;# 
  4784     0997                     	;# 
  4785     1E0F                     	;# 
  4786     1E10                     	;# 
  4787     1E11                     	;# 
  4788     1E12                     	;# 
  4789     1E13                     	;# 
  4790     1E14                     	;# 
  4791     1E15                     	;# 
  4792     1E16                     	;# 
  4793     1E17                     	;# 
  4794     1E18                     	;# 
  4795     1E19                     	;# 
  4796     1E1A                     	;# 
  4797     1E1B                     	;# 
  4798     1E1C                     	;# 
  4799     1E1D                     	;# 
  4800     1E1E                     	;# 
  4801     1E1F                     	;# 
  4802     1E20                     	;# 
  4803     1E21                     	;# 
  4804     1E22                     	;# 
  4805     1E23                     	;# 
  4806     1E24                     	;# 
  4807     1E25                     	;# 
  4808     1E26                     	;# 
  4809     1E27                     	;# 
  4810     1E28                     	;# 
  4811     1E29                     	;# 
  4812     1E2A                     	;# 
  4813     1E2B                     	;# 
  4814     1E2C                     	;# 
  4815     1E2D                     	;# 
  4816     1E2E                     	;# 
  4817     1E2F                     	;# 
  4818     1E30                     	;# 
  4819     1E31                     	;# 
  4820     1E32                     	;# 
  4821     1E33                     	;# 
  4822     1E34                     	;# 
  4823     1E35                     	;# 
  4824     1E36                     	;# 
  4825     1E37                     	;# 
  4826     1E8F                     	;# 
  4827     1E90                     	;# 
  4828     1E91                     	;# 
  4829     1E92                     	;# 
  4830     1E93                     	;# 
  4831     1E94                     	;# 
  4832     1E95                     	;# 
  4833     1E96                     	;# 
  4834     1E97                     	;# 
  4835     1E9C                     	;# 
  4836     1E9D                     	;# 
  4837     1E9E                     	;# 
  4838     1EA1                     	;# 
  4839     1EA2                     	;# 
  4840     1EA3                     	;# 
  4841     1EA4                     	;# 
  4842     1EA9                     	;# 
  4843     1EAA                     	;# 
  4844     1EB1                     	;# 
  4845     1EB2                     	;# 
  4846     1EB8                     	;# 
  4847     1EB9                     	;# 
  4848     1EBA                     	;# 
  4849     1EBB                     	;# 
  4850     1EBC                     	;# 
  4851     1EBD                     	;# 
  4852     1EBE                     	;# 
  4853     1EC3                     	;# 
  4854     1EC5                     	;# 
  4855     1EC6                     	;# 
  4856     1EC7                     	;# 
  4857     1EC8                     	;# 
  4858     1EC9                     	;# 
  4859     1ECA                     	;# 
  4860     1ECB                     	;# 
  4861     1ECC                     	;# 
  4862     1F10                     	;# 
  4863     1F11                     	;# 
  4864     1F12                     	;# 
  4865     1F14                     	;# 
  4866     1F15                     	;# 
  4867     1F20                     	;# 
  4868     1F21                     	;# 
  4869     1F22                     	;# 
  4870     1F23                     	;# 
  4871     1F24                     	;# 
  4872     1F25                     	;# 
  4873     1F38                     	;# 
  4874     1F39                     	;# 
  4875     1F3A                     	;# 
  4876     1F3B                     	;# 
  4877     1F3C                     	;# 
  4878     1F3D                     	;# 
  4879     1F3E                     	;# 
  4880     1F3F                     	;# 
  4881     1F4E                     	;# 
  4882     1F4F                     	;# 
  4883     1F50                     	;# 
  4884     1F51                     	;# 
  4885     1F52                     	;# 
  4886     1F53                     	;# 
  4887     1F54                     	;# 
  4888     1F55                     	;# 
  4889     1FE4                     	;# 
  4890     1FE5                     	;# 
  4891     1FE6                     	;# 
  4892     1FE7                     	;# 
  4893     1FE8                     	;# 
  4894     1FE8                     	;# 
  4895     1FE9                     	;# 
  4896     1FEA                     	;# 
  4897     1FEB                     	;# 
  4898     1FED                     	;# 
  4899     1FEE                     	;# 
  4900     1FEF                     	;# 
  4901     0000                     	;# 
  4902     0001                     	;# 
  4903     0002                     	;# 
  4904     0003                     	;# 
  4905     0004                     	;# 
  4906     0005                     	;# 
  4907     0006                     	;# 
  4908     0007                     	;# 
  4909     0008                     	;# 
  4910     0009                     	;# 
  4911     000A                     	;# 
  4912     000B                     	;# 
  4913     000C                     	;# 
  4914     000E                     	;# 
  4915     0012                     	;# 
  4916     0014                     	;# 
  4917     0018                     	;# 
  4918     001A                     	;# 
  4919     008C                     	;# 
  4920     008C                     	;# 
  4921     008D                     	;# 
  4922     008E                     	;# 
  4923     008E                     	;# 
  4924     008F                     	;# 
  4925     0090                     	;# 
  4926     0090                     	;# 
  4927     0091                     	;# 
  4928     0092                     	;# 
  4929     0092                     	;# 
  4930     0093                     	;# 
  4931     0094                     	;# 
  4932     0094                     	;# 
  4933     0095                     	;# 
  4934     0096                     	;# 
  4935     0096                     	;# 
  4936     0097                     	;# 
  4937     0098                     	;# 
  4938     0099                     	;# 
  4939     009A                     	;# 
  4940     009B                     	;# 
  4941     009B                     	;# 
  4942     009C                     	;# 
  4943     009D                     	;# 
  4944     009D                     	;# 
  4945     009E                     	;# 
  4946     009F                     	;# 
  4947     010C                     	;# 
  4948     010C                     	;# 
  4949     010D                     	;# 
  4950     010E                     	;# 
  4951     010F                     	;# 
  4952     010F                     	;# 
  4953     0110                     	;# 
  4954     0111                     	;# 
  4955     0112                     	;# 
  4956     0113                     	;# 
  4957     0114                     	;# 
  4958     0115                     	;# 
  4959     0116                     	;# 
  4960     0117                     	;# 
  4961     0118                     	;# 
  4962     0119                     	;# 
  4963     0119                     	;# 
  4964     0119                     	;# 
  4965     011A                     	;# 
  4966     011A                     	;# 
  4967     011A                     	;# 
  4968     011B                     	;# 
  4969     011B                     	;# 
  4970     011B                     	;# 
  4971     011B                     	;# 
  4972     011B                     	;# 
  4973     011C                     	;# 
  4974     011C                     	;# 
  4975     011C                     	;# 
  4976     011D                     	;# 
  4977     011D                     	;# 
  4978     011D                     	;# 
  4979     011E                     	;# 
  4980     011E                     	;# 
  4981     011E                     	;# 
  4982     011F                     	;# 
  4983     011F                     	;# 
  4984     011F                     	;# 
  4985     011F                     	;# 
  4986     011F                     	;# 
  4987     018C                     	;# 
  4988     018D                     	;# 
  4989     018E                     	;# 
  4990     018F                     	;# 
  4991     0190                     	;# 
  4992     0191                     	;# 
  4993     0192                     	;# 
  4994     0196                     	;# 
  4995     0197                     	;# 
  4996     0198                     	;# 
  4997     0199                     	;# 
  4998     019A                     	;# 
  4999     019B                     	;# 
  5000     019C                     	;# 
  5001     020C                     	;# 
  5002     020D                     	;# 
  5003     020E                     	;# 
  5004     020E                     	;# 
  5005     020F                     	;# 
  5006     020F                     	;# 
  5007     0210                     	;# 
  5008     0210                     	;# 
  5009     0211                     	;# 
  5010     0211                     	;# 
  5011     0212                     	;# 
  5012     0213                     	;# 
  5013     0214                     	;# 
  5014     0214                     	;# 
  5015     0215                     	;# 
  5016     0215                     	;# 
  5017     0216                     	;# 
  5018     0216                     	;# 
  5019     0217                     	;# 
  5020     0217                     	;# 
  5021     0218                     	;# 
  5022     0219                     	;# 
  5023     021A                     	;# 
  5024     021A                     	;# 
  5025     021B                     	;# 
  5026     021B                     	;# 
  5027     021C                     	;# 
  5028     021C                     	;# 
  5029     021D                     	;# 
  5030     021D                     	;# 
  5031     021E                     	;# 
  5032     021F                     	;# 
  5033     028C                     	;# 
  5034     028C                     	;# 
  5035     028D                     	;# 
  5036     028D                     	;# 
  5037     028E                     	;# 
  5038     028F                     	;# 
  5039     0290                     	;# 
  5040     0291                     	;# 
  5041     0292                     	;# 
  5042     0292                     	;# 
  5043     0293                     	;# 
  5044     0293                     	;# 
  5045     0294                     	;# 
  5046     0295                     	;# 
  5047     0296                     	;# 
  5048     0297                     	;# 
  5049     0298                     	;# 
  5050     0298                     	;# 
  5051     0299                     	;# 
  5052     0299                     	;# 
  5053     029A                     	;# 
  5054     029B                     	;# 
  5055     029C                     	;# 
  5056     029D                     	;# 
  5057     029F                     	;# 
  5058     030C                     	;# 
  5059     030C                     	;# 
  5060     030D                     	;# 
  5061     030E                     	;# 
  5062     030F                     	;# 
  5063     0310                     	;# 
  5064     0310                     	;# 
  5065     0311                     	;# 
  5066     0312                     	;# 
  5067     0313                     	;# 
  5068     0314                     	;# 
  5069     0314                     	;# 
  5070     0315                     	;# 
  5071     0316                     	;# 
  5072     0317                     	;# 
  5073     0318                     	;# 
  5074     0318                     	;# 
  5075     0319                     	;# 
  5076     031A                     	;# 
  5077     031B                     	;# 
  5078     038C                     	;# 
  5079     038C                     	;# 
  5080     038D                     	;# 
  5081     038E                     	;# 
  5082     0390                     	;# 
  5083     0390                     	;# 
  5084     0391                     	;# 
  5085     0392                     	;# 
  5086     048C                     	;# 
  5087     048C                     	;# 
  5088     048D                     	;# 
  5089     048E                     	;# 
  5090     048F                     	;# 
  5091     048F                     	;# 
  5092     0490                     	;# 
  5093     0491                     	;# 
  5094     0492                     	;# 
  5095     0492                     	;# 
  5096     0493                     	;# 
  5097     0494                     	;# 
  5098     0495                     	;# 
  5099     0495                     	;# 
  5100     0496                     	;# 
  5101     0497                     	;# 
  5102     0498                     	;# 
  5103     0499                     	;# 
  5104     049A                     	;# 
  5105     049B                     	;# 
  5106     049C                     	;# 
  5107     049D                     	;# 
  5108     058C                     	;# 
  5109     058C                     	;# 
  5110     058D                     	;# 
  5111     058E                     	;# 
  5112     058F                     	;# 
  5113     058F                     	;# 
  5114     0590                     	;# 
  5115     0591                     	;# 
  5116     0592                     	;# 
  5117     0593                     	;# 
  5118     059C                     	;# 
  5119     059C                     	;# 
  5120     059D                     	;# 
  5121     059D                     	;# 
  5122     059E                     	;# 
  5123     059F                     	;# 
  5124     060C                     	;# 
  5125     060C                     	;# 
  5126     060D                     	;# 
  5127     060D                     	;# 
  5128     060E                     	;# 
  5129     060F                     	;# 
  5130     0610                     	;# 
  5131     0611                     	;# 
  5132     0612                     	;# 
  5133     0613                     	;# 
  5134     0614                     	;# 
  5135     0616                     	;# 
  5136     0616                     	;# 
  5137     0617                     	;# 
  5138     0617                     	;# 
  5139     0618                     	;# 
  5140     0619                     	;# 
  5141     061A                     	;# 
  5142     061B                     	;# 
  5143     061C                     	;# 
  5144     061D                     	;# 
  5145     061E                     	;# 
  5146     070C                     	;# 
  5147     070D                     	;# 
  5148     070E                     	;# 
  5149     070F                     	;# 
  5150     0710                     	;# 
  5151     0711                     	;# 
  5152     0712                     	;# 
  5153     0713                     	;# 
  5154     0714                     	;# 
  5155     0716                     	;# 
  5156     0717                     	;# 
  5157     0718                     	;# 
  5158     0719                     	;# 
  5159     071A                     	;# 
  5160     071B                     	;# 
  5161     071C                     	;# 
  5162     071D                     	;# 
  5163     071E                     	;# 
  5164     0796                     	;# 
  5165     0797                     	;# 
  5166     0798                     	;# 
  5167     0799                     	;# 
  5168     079A                     	;# 
  5169     079B                     	;# 
  5170     079C                     	;# 
  5171     079D                     	;# 
  5172     080C                     	;# 
  5173     080D                     	;# 
  5174     080E                     	;# 
  5175     080F                     	;# 
  5176     0810                     	;# 
  5177     0811                     	;# 
  5178     0812                     	;# 
  5179     0813                     	;# 
  5180     0814                     	;# 
  5181     081A                     	;# 
  5182     081A                     	;# 
  5183     081B                     	;# 
  5184     081C                     	;# 
  5185     081C                     	;# 
  5186     081D                     	;# 
  5187     081E                     	;# 
  5188     081F                     	;# 
  5189     088C                     	;# 
  5190     088D                     	;# 
  5191     088E                     	;# 
  5192     088F                     	;# 
  5193     0890                     	;# 
  5194     0891                     	;# 
  5195     0892                     	;# 
  5196     0893                     	;# 
  5197     0895                     	;# 
  5198     0896                     	;# 
  5199     0897                     	;# 
  5200     0898                     	;# 
  5201     0899                     	;# 
  5202     089A                     	;# 
  5203     089B                     	;# 
  5204     090C                     	;# 
  5205     090E                     	;# 
  5206     090F                     	;# 
  5207     091F                     	;# 
  5208     098F                     	;# 
  5209     098F                     	;# 
  5210     0990                     	;# 
  5211     0991                     	;# 
  5212     0992                     	;# 
  5213     0993                     	;# 
  5214     0994                     	;# 
  5215     0995                     	;# 
  5216     0996                     	;# 
  5217     0997                     	;# 
  5218     1E0F                     	;# 
  5219     1E10                     	;# 
  5220     1E11                     	;# 
  5221     1E12                     	;# 
  5222     1E13                     	;# 
  5223     1E14                     	;# 
  5224     1E15                     	;# 
  5225     1E16                     	;# 
  5226     1E17                     	;# 
  5227     1E18                     	;# 
  5228     1E19                     	;# 
  5229     1E1A                     	;# 
  5230     1E1B                     	;# 
  5231     1E1C                     	;# 
  5232     1E1D                     	;# 
  5233     1E1E                     	;# 
  5234     1E1F                     	;# 
  5235     1E20                     	;# 
  5236     1E21                     	;# 
  5237     1E22                     	;# 
  5238     1E23                     	;# 
  5239     1E24                     	;# 
  5240     1E25                     	;# 
  5241     1E26                     	;# 
  5242     1E27                     	;# 
  5243     1E28                     	;# 
  5244     1E29                     	;# 
  5245     1E2A                     	;# 
  5246     1E2B                     	;# 
  5247     1E2C                     	;# 
  5248     1E2D                     	;# 
  5249     1E2E                     	;# 
  5250     1E2F                     	;# 
  5251     1E30                     	;# 
  5252     1E31                     	;# 
  5253     1E32                     	;# 
  5254     1E33                     	;# 
  5255     1E34                     	;# 
  5256     1E35                     	;# 
  5257     1E36                     	;# 
  5258     1E37                     	;# 
  5259     1E8F                     	;# 
  5260     1E90                     	;# 
  5261     1E91                     	;# 
  5262     1E92                     	;# 
  5263     1E93                     	;# 
  5264     1E94                     	;# 
  5265     1E95                     	;# 
  5266     1E96                     	;# 
  5267     1E97                     	;# 
  5268     1E9C                     	;# 
  5269     1E9D                     	;# 
  5270     1E9E                     	;# 
  5271     1EA1                     	;# 
  5272     1EA2                     	;# 
  5273     1EA3                     	;# 
  5274     1EA4                     	;# 
  5275     1EA9                     	;# 
  5276     1EAA                     	;# 
  5277     1EB1                     	;# 
  5278     1EB2                     	;# 
  5279     1EB8                     	;# 
  5280     1EB9                     	;# 
  5281     1EBA                     	;# 
  5282     1EBB                     	;# 
  5283     1EBC                     	;# 
  5284     1EBD                     	;# 
  5285     1EBE                     	;# 
  5286     1EC3                     	;# 
  5287     1EC5                     	;# 
  5288     1EC6                     	;# 
  5289     1EC7                     	;# 
  5290     1EC8                     	;# 
  5291     1EC9                     	;# 
  5292     1ECA                     	;# 
  5293     1ECB                     	;# 
  5294     1ECC                     	;# 
  5295     1F10                     	;# 
  5296     1F11                     	;# 
  5297     1F12                     	;# 
  5298     1F14                     	;# 
  5299     1F15                     	;# 
  5300     1F20                     	;# 
  5301     1F21                     	;# 
  5302     1F22                     	;# 
  5303     1F23                     	;# 
  5304     1F24                     	;# 
  5305     1F25                     	;# 
  5306     1F38                     	;# 
  5307     1F39                     	;# 
  5308     1F3A                     	;# 
  5309     1F3B                     	;# 
  5310     1F3C                     	;# 
  5311     1F3D                     	;# 
  5312     1F3E                     	;# 
  5313     1F3F                     	;# 
  5314     1F4E                     	;# 
  5315     1F4F                     	;# 
  5316     1F50                     	;# 
  5317     1F51                     	;# 
  5318     1F52                     	;# 
  5319     1F53                     	;# 
  5320     1F54                     	;# 
  5321     1F55                     	;# 
  5322     1FE4                     	;# 
  5323     1FE5                     	;# 
  5324     1FE6                     	;# 
  5325     1FE7                     	;# 
  5326     1FE8                     	;# 
  5327     1FE8                     	;# 
  5328     1FE9                     	;# 
  5329     1FEA                     	;# 
  5330     1FEB                     	;# 
  5331     1FED                     	;# 
  5332     1FEE                     	;# 
  5333     1FEF                     	;# 
  5334                           
  5335                           	psect	idataBANK3
  5336     150B                     __pidataBANK3:
  5337                           
  5338                           ;initializer for measurement@F10462
  5339     150B  3401               	retlw	1
  5340     150C  3403               	retlw	3
  5341     150D  3400               	retlw	0
  5342     150E  3401               	retlw	1
  5343     150F  3400               	retlw	0
  5344     1510  3404               	retlw	4
  5345     1511  3415               	retlw	21
  5346     1512  34C9               	retlw	201
  5347     1513  3400               	retlw	0
  5348     1514  3400               	retlw	0
  5349     1515  3400               	retlw	0
  5350     1516  3400               	retlw	0
  5351     1517  3400               	retlw	0
  5352     1518  3400               	retlw	0
  5353     1519  3400               	retlw	0
  5354     151A  3400               	retlw	0
  5355     151B  3400               	retlw	0
  5356     151C  3400               	retlw	0
  5357     151D  3400               	retlw	0
  5358     151E  3400               	retlw	0
  5359     151F  3400               	retlw	0
  5360     1520  3400               	retlw	0
  5361     1521  3400               	retlw	0
  5362     1522  3400               	retlw	0
  5363     1523  3400               	retlw	0
  5364     1524  3400               	retlw	0
  5365     1525  3400               	retlw	0
  5366     1526  3400               	retlw	0
  5367     1527  3400               	retlw	0
  5368     1528  3400               	retlw	0
  5369     1529  3400               	retlw	0
  5370     152A  3400               	retlw	0
  5371                           
  5372                           	psect	stringtext1
  5373     1846                     __pstringtext1:
  5374     1846                     _dpowers:
  5375     1846  3401               	retlw	1
  5376     1847  3400               	retlw	0
  5377     1848  3400               	retlw	0
  5378     1849  3400               	retlw	0
  5379     184A  340A               	retlw	10
  5380     184B  3400               	retlw	0
  5381     184C  3400               	retlw	0
  5382     184D  3400               	retlw	0
  5383     184E  3464               	retlw	100
  5384     184F  3400               	retlw	0
  5385     1850  3400               	retlw	0
  5386     1851  3400               	retlw	0
  5387     1852  34E8               	retlw	232
  5388     1853  3403               	retlw	3
  5389     1854  3400               	retlw	0
  5390     1855  3400               	retlw	0
  5391     1856  3410               	retlw	16
  5392     1857  3427               	retlw	39
  5393     1858  3400               	retlw	0
  5394     1859  3400               	retlw	0
  5395     185A  34A0               	retlw	160
  5396     185B  3486               	retlw	134
  5397     185C  3401               	retlw	1
  5398     185D  3400               	retlw	0
  5399     185E  3440               	retlw	64
  5400     185F  3442               	retlw	66
  5401     1860  340F               	retlw	15
  5402     1861  3400               	retlw	0
  5403     1862  3480               	retlw	128
  5404     1863  3496               	retlw	150
  5405     1864  3498               	retlw	152
  5406     1865  3400               	retlw	0
  5407     1866  3400               	retlw	0
  5408     1867  34E1               	retlw	225
  5409     1868  34F5               	retlw	245
  5410     1869  3405               	retlw	5
  5411     186A  3400               	retlw	0
  5412     186B  34CA               	retlw	202
  5413     186C  349A               	retlw	154
  5414     186D  343B               	retlw	59
  5415     186E                     __end_of_dpowers:
  5416                           
  5417                           	psect	stringtext2
  5418     1800                     __pstringtext2:
  5419     1800                     _hexpowers:
  5420     1800  3401               	retlw	1
  5421     1801  3400               	retlw	0
  5422     1802  3400               	retlw	0
  5423     1803  3400               	retlw	0
  5424     1804  3410               	retlw	16
  5425     1805  3400               	retlw	0
  5426     1806  3400               	retlw	0
  5427     1807  3400               	retlw	0
  5428     1808  3400               	retlw	0
  5429     1809  3401               	retlw	1
  5430     180A  3400               	retlw	0
  5431     180B  3400               	retlw	0
  5432     180C  3400               	retlw	0
  5433     180D  3410               	retlw	16
  5434     180E  3400               	retlw	0
  5435     180F  3400               	retlw	0
  5436     1810  3400               	retlw	0
  5437     1811  3400               	retlw	0
  5438     1812  3401               	retlw	1
  5439     1813  3400               	retlw	0
  5440     1814  3400               	retlw	0
  5441     1815  3400               	retlw	0
  5442     1816  3410               	retlw	16
  5443     1817  3400               	retlw	0
  5444     1818  3400               	retlw	0
  5445     1819  3400               	retlw	0
  5446     181A  3400               	retlw	0
  5447     181B  3401               	retlw	1
  5448     181C  3400               	retlw	0
  5449     181D  3400               	retlw	0
  5450     181E  3400               	retlw	0
  5451     181F  3410               	retlw	16
  5452     1820                     __end_of_hexpowers:
  5453     001A                     _LATCbits	set	26
  5454     000C                     _PORTAbits	set	12
  5455     0012                     _TRISAbits	set	18
  5456     000B                     _INTCONbits	set	11
  5457     0014                     _TRISC	set	20
  5458     0012                     _TRISA	set	18
  5459     001A                     _LATC	set	26
  5460     0018                     _LATA	set	24
  5461     005F                     _GIE	set	95
  5462     0119                     _RC1REG	set	281
  5463     011A                     _TX1REG	set	282
  5464     011D                     _RC1STA	set	285
  5465     011E                     _TX1STA	set	286
  5466     011C                     _SP1BRGH	set	284
  5467     011B                     _SP1BRGL	set	283
  5468     011F                     _BAUD1CON	set	287
  5469     0190                     _SSP1CON1bits	set	400
  5470     018C                     _SSP1BUF	set	396
  5471     0191                     _SSP1CON2bits	set	401
  5472     018F                     _SSP1STATbits	set	399
  5473     018E                     _SSP1MSK	set	398
  5474     018D                     _SSP1ADD	set	397
  5475     0191                     _SSP1CON2	set	401
  5476     0190                     _SSP1CON1	set	400
  5477     018F                     _SSP1STAT	set	399
  5478     059E                     _T0CON0	set	1438
  5479     059C                     _TMR0L	set	1436
  5480     059D                     _TMR0H	set	1437
  5481     059F                     _T0CON1	set	1439
  5482     0716                     _PIE0bits	set	1814
  5483     070C                     _PIR0bits	set	1804
  5484     0719                     _PIE3bits	set	1817
  5485     070F                     _PIR3bits	set	1807
  5486     079D                     _PMD7	set	1949
  5487     079C                     _PMD6	set	1948
  5488     079B                     _PMD5	set	1947
  5489     079A                     _PMD4	set	1946
  5490     0799                     _PMD3	set	1945
  5491     0798                     _PMD2	set	1944
  5492     0797                     _PMD1	set	1943
  5493     0796                     _PMD0	set	1942
  5494     0892                     _OSCTUNE	set	2194
  5495     0893                     _OSCFRQ	set	2195
  5496     0891                     _OSCEN	set	2193
  5497     088F                     _OSCCON3	set	2191
  5498     088D                     _OSCCON1	set	2189
  5499     1ECB                     _RX1DTPPS	set	7883
  5500     1EC6                     _SSP1DATPPS	set	7878
  5501     1EC5                     _SSP1CLKPPS	set	7877
  5502     1F15                     _RA5PPS	set	7957
  5503     1F38                     _ANSELAbits	set	7992
  5504     1F25                     _RC5PPS	set	7973
  5505     1F21                     _RC1PPS	set	7969
  5506     1F23                     _RC3PPS	set	7971
  5507     1F20                     _RC0PPS	set	7968
  5508     1F52                     _INLVLC	set	8018
  5509     1F3C                     _INLVLA	set	7996
  5510     1F51                     _SLRCONC	set	8017
  5511     1F3B                     _SLRCONA	set	7995
  5512     1F50                     _ODCONC	set	8016
  5513     1F3A                     _ODCONA	set	7994
  5514     1F4F                     _WPUC	set	8015
  5515     1F39                     _WPUA	set	7993
  5516     1F38                     _ANSELA	set	7992
  5517     1F4E                     _ANSELC	set	8014
  5518     1820                     STR_7:
  5519     1820  3453               	retlw	83	;'S'
  5520     1821  3454               	retlw	84	;'T'
  5521     1822  3441               	retlw	65	;'A'
  5522     1823  3454               	retlw	84	;'T'
  5523     1824  3445               	retlw	69	;'E'
  5524     1825  345F               	retlw	95	;'_'
  5525     1826  3453               	retlw	83	;'S'
  5526     1827  3441               	retlw	65	;'A'
  5527     1828  3456               	retlw	86	;'V'
  5528     1829  3445               	retlw	69	;'E'
  5529     182A  345F               	retlw	95	;'_'
  5530     182B  3442               	retlw	66	;'B'
  5531     182C  344F               	retlw	79	;'O'
  5532     182D  3454               	retlw	84	;'T'
  5533     182E  3454               	retlw	84	;'T'
  5534     182F  344F               	retlw	79	;'O'
  5535     1830  344D               	retlw	77	;'M'
  5536     1831  345F               	retlw	95	;'_'
  5537     1832  3443               	retlw	67	;'C'
  5538     1833  3441               	retlw	65	;'A'
  5539     1834  344C               	retlw	76	;'L'
  5540     1835  3449               	retlw	73	;'I'
  5541     1836  3442               	retlw	66	;'B'
  5542     1837  3452               	retlw	82	;'R'
  5543     1838  3441               	retlw	65	;'A'
  5544     1839  3454               	retlw	84	;'T'
  5545     183A  3449               	retlw	73	;'I'
  5546     183B  344F               	retlw	79	;'O'
  5547     183C  344E               	retlw	78	;'N'
  5548     183D  345F               	retlw	95	;'_'
  5549     183E  3450               	retlw	80	;'P'
  5550     183F  344F               	retlw	79	;'O'
  5551     1840  3449               	retlw	73	;'I'
  5552     1841  344E               	retlw	78	;'N'
  5553     1842  3454               	retlw	84	;'T'
  5554     1843  340D               	retlw	13
  5555     1844  340A               	retlw	10
  5556     1845  3400               	retlw	0
  5557                           
  5558                           	psect	stringtext3
  5559     186E                     __pstringtext3:
  5560     186E                     STR_4:
  5561     186E  3453               	retlw	83	;'S'
  5562     186F  3454               	retlw	84	;'T'
  5563     1870  3441               	retlw	65	;'A'
  5564     1871  3454               	retlw	84	;'T'
  5565     1872  3445               	retlw	69	;'E'
  5566     1873  345F               	retlw	95	;'_'
  5567     1874  3453               	retlw	83	;'S'
  5568     1875  3441               	retlw	65	;'A'
  5569     1876  3456               	retlw	86	;'V'
  5570     1877  3445               	retlw	69	;'E'
  5571     1878  345F               	retlw	95	;'_'
  5572     1879  3454               	retlw	84	;'T'
  5573     187A  344F               	retlw	79	;'O'
  5574     187B  3450               	retlw	80	;'P'
  5575     187C  345F               	retlw	95	;'_'
  5576     187D  3443               	retlw	67	;'C'
  5577     187E  3441               	retlw	65	;'A'
  5578     187F  344C               	retlw	76	;'L'
  5579     1880  3449               	retlw	73	;'I'
  5580     1881  3442               	retlw	66	;'B'
  5581     1882  3452               	retlw	82	;'R'
  5582     1883  3441               	retlw	65	;'A'
  5583     1884  3454               	retlw	84	;'T'
  5584     1885  3449               	retlw	73	;'I'
  5585     1886  344F               	retlw	79	;'O'
  5586     1887  344E               	retlw	78	;'N'
  5587     1888  345F               	retlw	95	;'_'
  5588     1889  3450               	retlw	80	;'P'
  5589     188A  344F               	retlw	79	;'O'
  5590     188B  3449               	retlw	73	;'I'
  5591     188C  344E               	retlw	78	;'N'
  5592     188D  3454               	retlw	84	;'T'
  5593     188E  340D               	retlw	13
  5594     188F  340A               	retlw	10
  5595     1890  3400               	retlw	0
  5596                           
  5597                           	psect	stringtext4
  5598     1891                     __pstringtext4:
  5599     1891                     STR_12:
  5600     1891  345B               	retlw	91	;'['
  5601     1892  3425               	retlw	37	;'%'
  5602     1893  346C               	retlw	108	;'l'
  5603     1894  3475               	retlw	117	;'u'
  5604     1895  345D               	retlw	93	;']'
  5605     1896  3420               	retlw	32	;' '
  5606     1897  3450               	retlw	80	;'P'
  5607     1898  3448               	retlw	72	;'H'
  5608     1899  343A               	retlw	58	;':'
  5609     189A  3420               	retlw	32	;' '
  5610     189B  3425               	retlw	37	;'%'
  5611     189C  3475               	retlw	117	;'u'
  5612     189D  3420               	retlw	32	;' '
  5613     189E  3428               	retlw	40	;'('
  5614     189F  3430               	retlw	48	;'0'
  5615     18A0  342E               	retlw	46	;'.'
  5616     18A1  3430               	retlw	48	;'0'
  5617     18A2  3431               	retlw	49	;'1'
  5618     18A3  342A               	retlw	42	;'*'
  5619     18A4  3475               	retlw	117	;'u'
  5620     18A5  346E               	retlw	110	;'n'
  5621     18A6  3469               	retlw	105	;'i'
  5622     18A7  3474               	retlw	116	;'t'
  5623     18A8  3429               	retlw	41	;')'
  5624     18A9  340D               	retlw	13
  5625     18AA  340A               	retlw	10
  5626     18AB  3400               	retlw	0
  5627                           
  5628                           	psect	stringtext5
  5629     18AC                     __pstringtext5:
  5630     18AC                     STR_26:
  5631     18AC  3462               	retlw	98	;'b'
  5632     18AD  3431               	retlw	49	;'1'
  5633     18AE  3420               	retlw	32	;' '
  5634     18AF  3463               	retlw	99	;'c'
  5635     18B0  346C               	retlw	108	;'l'
  5636     18B1  3469               	retlw	105	;'i'
  5637     18B2  3463               	retlw	99	;'c'
  5638     18B3  346B               	retlw	107	;'k'
  5639     18B4  3465               	retlw	101	;'e'
  5640     18B5  3464               	retlw	100	;'d'
  5641     18B6  3420               	retlw	32	;' '
  5642     18B7  3463               	retlw	99	;'c'
  5643     18B8  346F               	retlw	111	;'o'
  5644     18B9  3475               	retlw	117	;'u'
  5645     18BA  346E               	retlw	110	;'n'
  5646     18BB  3474               	retlw	116	;'t'
  5647     18BC  343A               	retlw	58	;':'
  5648     18BD  3420               	retlw	32	;' '
  5649     18BE  3425               	retlw	37	;'%'
  5650     18BF  3475               	retlw	117	;'u'
  5651     18C0  340D               	retlw	13
  5652     18C1  340A               	retlw	10
  5653     18C2  3400               	retlw	0
  5654                           
  5655                           	psect	stringtext6
  5656     18C3                     __pstringtext6:
  5657     18C3                     STR_27:
  5658     18C3  3462               	retlw	98	;'b'
  5659     18C4  3432               	retlw	50	;'2'
  5660     18C5  3420               	retlw	32	;' '
  5661     18C6  3463               	retlw	99	;'c'
  5662     18C7  346C               	retlw	108	;'l'
  5663     18C8  3469               	retlw	105	;'i'
  5664     18C9  3463               	retlw	99	;'c'
  5665     18CA  346B               	retlw	107	;'k'
  5666     18CB  3465               	retlw	101	;'e'
  5667     18CC  3464               	retlw	100	;'d'
  5668     18CD  3420               	retlw	32	;' '
  5669     18CE  3463               	retlw	99	;'c'
  5670     18CF  346F               	retlw	111	;'o'
  5671     18D0  3475               	retlw	117	;'u'
  5672     18D1  346E               	retlw	110	;'n'
  5673     18D2  3474               	retlw	116	;'t'
  5674     18D3  343A               	retlw	58	;':'
  5675     18D4  3420               	retlw	32	;' '
  5676     18D5  3425               	retlw	37	;'%'
  5677     18D6  3475               	retlw	117	;'u'
  5678     18D7  340D               	retlw	13
  5679     18D8  340A               	retlw	10
  5680     18D9  3400               	retlw	0
  5681                           
  5682                           	psect	stringtext7
  5683     18DA                     __pstringtext7:
  5684     18DA                     STR_1:
  5685     18DA  3450               	retlw	80	;'P'
  5686     18DB  3448               	retlw	72	;'H'
  5687     18DC  3420               	retlw	32	;' '
  5688     18DD  3450               	retlw	80	;'P'
  5689     18DE  3472               	retlw	114	;'r'
  5690     18DF  346F               	retlw	111	;'o'
  5691     18E0  3462               	retlw	98	;'b'
  5692     18E1  3465               	retlw	101	;'e'
  5693     18E2  3420               	retlw	32	;' '
  5694     18E3  3477               	retlw	119	;'w'
  5695     18E4  3469               	retlw	105	;'i'
  5696     18E5  3474               	retlw	116	;'t'
  5697     18E6  3468               	retlw	104	;'h'
  5698     18E7  3420               	retlw	32	;' '
  5699     18E8  3452               	retlw	82	;'R'
  5700     18E9  3453               	retlw	83	;'S'
  5701     18EA  3434               	retlw	52	;'4'
  5702     18EB  3438               	retlw	56	;'8'
  5703     18EC  3435               	retlw	53	;'5'
  5704     18ED  340D               	retlw	13
  5705     18EE  340A               	retlw	10
  5706     18EF  3400               	retlw	0
  5707                           
  5708                           	psect	stringtext8
  5709     18F0                     __pstringtext8:
  5710     18F0                     STR_30:
  5711     18F0  3430               	retlw	48	;'0'
  5712     18F1  3431               	retlw	49	;'1'
  5713     18F2  3432               	retlw	50	;'2'
  5714     18F3  3433               	retlw	51	;'3'
  5715     18F4  3434               	retlw	52	;'4'
  5716     18F5  3435               	retlw	53	;'5'
  5717     18F6  3436               	retlw	54	;'6'
  5718     18F7  3437               	retlw	55	;'7'
  5719     18F8  3438               	retlw	56	;'8'
  5720     18F9  3439               	retlw	57	;'9'
  5721     18FA  3441               	retlw	65	;'A'
  5722     18FB  3442               	retlw	66	;'B'
  5723     18FC  3443               	retlw	67	;'C'
  5724     18FD  3444               	retlw	68	;'D'
  5725     18FE  3445               	retlw	69	;'E'
  5726     18FF  3446               	retlw	70	;'F'
  5727     1900  3400               	retlw	0
  5728                           
  5729                           	psect	stringtext9
  5730     1901                     __pstringtext9:
  5731     1901                     STR_31:
  5732     1901  3430               	retlw	48	;'0'
  5733     1902  3431               	retlw	49	;'1'
  5734     1903  3432               	retlw	50	;'2'
  5735     1904  3433               	retlw	51	;'3'
  5736     1905  3434               	retlw	52	;'4'
  5737     1906  3435               	retlw	53	;'5'
  5738     1907  3436               	retlw	54	;'6'
  5739     1908  3437               	retlw	55	;'7'
  5740     1909  3438               	retlw	56	;'8'
  5741     190A  3439               	retlw	57	;'9'
  5742     190B  3461               	retlw	97	;'a'
  5743     190C  3462               	retlw	98	;'b'
  5744     190D  3463               	retlw	99	;'c'
  5745     190E  3464               	retlw	100	;'d'
  5746     190F  3465               	retlw	101	;'e'
  5747     1910  3466               	retlw	102	;'f'
  5748     1911  3400               	retlw	0
  5749                           
  5750                           	psect	stringtext10
  5751     1912                     __pstringtext10:
  5752     1912                     STR_25:
  5753     1912  3462               	retlw	98	;'b'
  5754     1913  3431               	retlw	49	;'1'
  5755     1914  3420               	retlw	32	;' '
  5756     1915  346C               	retlw	108	;'l'
  5757     1916  346F               	retlw	111	;'o'
  5758     1917  346E               	retlw	110	;'n'
  5759     1918  3467               	retlw	103	;'g'
  5760     1919  3420               	retlw	32	;' '
  5761     191A  3470               	retlw	112	;'p'
  5762     191B  3472               	retlw	114	;'r'
  5763     191C  3465               	retlw	101	;'e'
  5764     191D  3473               	retlw	115	;'s'
  5765     191E  3473               	retlw	115	;'s'
  5766     191F  3420               	retlw	32	;' '
  5767     1920  340D               	retlw	13
  5768     1921  340A               	retlw	10
  5769     1922  3400               	retlw	0
  5770                           
  5771                           	psect	stringtext11
  5772     1923                     __pstringtext11:
  5773     1923                     STR_28:
  5774     1923  342D               	retlw	45	;'-'
  5775     1924  342D               	retlw	45	;'-'
  5776     1925  342D               	retlw	45	;'-'
  5777     1926  3420               	retlw	32	;' '
  5778     1927  3452               	retlw	82	;'R'
  5779     1928  3465               	retlw	101	;'e'
  5780     1929  3471               	retlw	113	;'q'
  5781     192A  3475               	retlw	117	;'u'
  5782     192B  3465               	retlw	101	;'e'
  5783     192C  3473               	retlw	115	;'s'
  5784     192D  3474               	retlw	116	;'t'
  5785     192E  340D               	retlw	13
  5786     192F  340A               	retlw	10
  5787     1930  3400               	retlw	0
  5788                           
  5789                           	psect	stringtext12
  5790     1931                     __pstringtext12:
  5791     1931                     STR_6:
  5792     1931  3473               	retlw	115	;'s'
  5793     1932  3479               	retlw	121	;'y'
  5794     1933  3473               	retlw	115	;'s'
  5795     1934  3474               	retlw	116	;'t'
  5796     1935  3465               	retlw	101	;'e'
  5797     1936  346D               	retlw	109	;'m'
  5798     1937  3420               	retlw	32	;' '
  5799     1938  3468               	retlw	104	;'h'
  5800     1939  346F               	retlw	111	;'o'
  5801     193A  346C               	retlw	108	;'l'
  5802     193B  3464               	retlw	100	;'d'
  5803     193C  340D               	retlw	13
  5804     193D  340A               	retlw	10
  5805     193E  3400               	retlw	0
  5806                           
  5807                           	psect	stringtext13
  5808     193F                     __pstringtext13:
  5809     193F                     STR_23:
  5810     193F  3462               	retlw	98	;'b'
  5811     1940  3431               	retlw	49	;'1'
  5812     1941  3420               	retlw	32	;' '
  5813     1942  3463               	retlw	99	;'c'
  5814     1943  346C               	retlw	108	;'l'
  5815     1944  3469               	retlw	105	;'i'
  5816     1945  3463               	retlw	99	;'c'
  5817     1946  346B               	retlw	107	;'k'
  5818     1947  3465               	retlw	101	;'e'
  5819     1948  3464               	retlw	100	;'d'
  5820     1949  340D               	retlw	13
  5821     194A  340A               	retlw	10
  5822     194B  3400               	retlw	0
  5823                           
  5824                           	psect	stringtext14
  5825     194C                     __pstringtext14:
  5826     194C                     STR_24:
  5827     194C  3462               	retlw	98	;'b'
  5828     194D  3432               	retlw	50	;'2'
  5829     194E  3420               	retlw	32	;' '
  5830     194F  3463               	retlw	99	;'c'
  5831     1950  346C               	retlw	108	;'l'
  5832     1951  3469               	retlw	105	;'i'
  5833     1952  3463               	retlw	99	;'c'
  5834     1953  346B               	retlw	107	;'k'
  5835     1954  3465               	retlw	101	;'e'
  5836     1955  3464               	retlw	100	;'d'
  5837     1956  340D               	retlw	13
  5838     1957  340A               	retlw	10
  5839     1958  3400               	retlw	0
  5840                           
  5841                           	psect	stringtext15
  5842     1959                     __pstringtext15:
  5843     1959                     STR_11:
  5844     1959  3454               	retlw	84	;'T'
  5845     195A  3445               	retlw	69	;'E'
  5846     195B  344D               	retlw	77	;'M'
  5847     195C  3450               	retlw	80	;'P'
  5848     195D  343A               	retlw	58	;':'
  5849     195E  3420               	retlw	32	;' '
  5850     195F  3425               	retlw	37	;'%'
  5851     1960  3475               	retlw	117	;'u'
  5852     1961  340D               	retlw	13
  5853     1962  340A               	retlw	10
  5854     1963  3400               	retlw	0
  5855                           
  5856                           	psect	stringtext16
  5857     1964                     __pstringtext16:
  5858     1964                     STR_3:
  5859     1964  3430               	retlw	48	;'0'
  5860     1965  3441               	retlw	65	;'A'
  5861     1966  3430               	retlw	48	;'0'
  5862     1967  3431               	retlw	49	;'1'
  5863     1968  3438               	retlw	56	;'8'
  5864     1969  3432               	retlw	50	;'2'
  5865     196A  3430               	retlw	48	;'0'
  5866     196B  3430               	retlw	48	;'0'
  5867     196C  3430               	retlw	48	;'0'
  5868     196D  3431               	retlw	49	;'1'
  5869     196E  3400               	retlw	0
  5870                           
  5871                           	psect	stringtext17
  5872     196F                     __pstringtext17:
  5873     196F                     STR_2:
  5874     196F  3473               	retlw	115	;'s'
  5875     1970  346E               	retlw	110	;'n'
  5876     1971  343A               	retlw	58	;':'
  5877     1972  3420               	retlw	32	;' '
  5878     1973  3425               	retlw	37	;'%'
  5879     1974  3473               	retlw	115	;'s'
  5880     1975  340D               	retlw	13
  5881     1976  340A               	retlw	10
  5882     1977  3400               	retlw	0
  5883                           
  5884                           	psect	stringtext18
  5885     1978                     __pstringtext18:
  5886     1978                     STR_10:
  5887     1978  3450               	retlw	80	;'P'
  5888     1979  3448               	retlw	72	;'H'
  5889     197A  343A               	retlw	58	;':'
  5890     197B  3420               	retlw	32	;' '
  5891     197C  3425               	retlw	37	;'%'
  5892     197D  3475               	retlw	117	;'u'
  5893     197E  340D               	retlw	13
  5894     197F  340A               	retlw	10
  5895     1980  3400               	retlw	0
  5896                           
  5897                           	psect	stringtext19
  5898     1981                     __pstringtext19:
  5899     1981                     STR_5:
  5900     1981  3473               	retlw	115	;'s'
  5901     1982  3461               	retlw	97	;'a'
  5902     1983  3476               	retlw	118	;'v'
  5903     1984  3465               	retlw	101	;'e'
  5904     1985  3464               	retlw	100	;'d'
  5905     1986  340D               	retlw	13
  5906     1987  340A               	retlw	10
  5907     1988  3400               	retlw	0
  5908                           
  5909                           	psect	stringtext20
  5910     1989                     __pstringtext20:
  5911     1989                     STR_29:
  5912     1989  3428               	retlw	40	;'('
  5913     198A  346E               	retlw	110	;'n'
  5914     198B  3475               	retlw	117	;'u'
  5915     198C  346C               	retlw	108	;'l'
  5916     198D  346C               	retlw	108	;'l'
  5917     198E  3429               	retlw	41	;')'
  5918     198F  3400               	retlw	0
  5919                           
  5920                           	psect	stringtext21
  5921     1990                     __pstringtext21:
  5922     1990                     STR_19:
  5923     1990  3425               	retlw	37	;'%'
  5924     1991  3430               	retlw	48	;'0'
  5925     1992  3432               	retlw	50	;'2'
  5926     1993  3458               	retlw	88	;'X'
  5927     1994  3420               	retlw	32	;' '
  5928     1995  3400               	retlw	0
  5929                           
  5930                           	psect	stringtext22
  5931     1996                     __pstringtext22:
  5932     1996                     STR_13:
  5933     1996  3425               	retlw	37	;'%'
  5934     1997  3430               	retlw	48	;'0'
  5935     1998  3438               	retlw	56	;'8'
  5936     1999  3478               	retlw	120	;'x'
  5937     199A  343A               	retlw	58	;':'
  5938     199B  3400               	retlw	0
  5939                           
  5940                           	psect	stringtext23
  5941     199C                     __pstringtext23:
  5942     199C                     STR_14:
  5943     199C  3420               	retlw	32	;' '
  5944     199D  3425               	retlw	37	;'%'
  5945     199E  3430               	retlw	48	;'0'
  5946     199F  3432               	retlw	50	;'2'
  5947     19A0  3478               	retlw	120	;'x'
  5948     19A1  3400               	retlw	0
  5949                           
  5950                           	psect	stringtext24
  5951     19A2                     __pstringtext24:
  5952     19A2                     STR_15:
  5953     19A2  3420               	retlw	32	;' '
  5954     19A3  3420               	retlw	32	;' '
  5955     19A4  3420               	retlw	32	;' '
  5956     19A5  3400               	retlw	0
  5957                           
  5958                           	psect	stringtext25
  5959     19A6                     __pstringtext25:
  5960     19A6                     STR_17:
  5961     19A6  3425               	retlw	37	;'%'
  5962     19A7  3463               	retlw	99	;'c'
  5963     19A8  3400               	retlw	0
  5964                           
  5965                           	psect	stringtext26
  5966     0000                     __pstringtext26:
  5967     1920                     
  5968                           	psect	cinit
  5969     0069                     start_initialization:	
  5970                           ; #config settings
  5971                           
  5972     0069                     __initialization:
  5973                           
  5974                           ; Initialize objects allocated to BANK3
  5975     0069  300B               	movlw	low __pidataBANK3
  5976     006A  0084               	movwf	4
  5977     006B  3095               	movlw	(high __pidataBANK3)| (0+128)
  5978     006C  0085               	movwf	5
  5979     006D  30C0               	movlw	low __pdataBANK3
  5980     006E  0086               	movwf	6
  5981     006F  3001               	movlw	high __pdataBANK3
  5982     0070  0087               	movwf	7
  5983     0071  3020               	movlw	32
  5984     0072  3188  2002  3180   	fcall	init_ram
  5985                           
  5986                           ; Clear objects allocated to COMMON
  5987     0075  01F8               	clrf	__pbssCOMMON& (0+127)
  5988     0076  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  5989     0077  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  5990     0078  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  5991     0079  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  5992     007A  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  5993                           
  5994                           ; Clear objects allocated to BANK1
  5995     007B  30E9               	movlw	low __pbssBANK1
  5996     007C  0084               	movwf	4
  5997     007D  3000               	movlw	high __pbssBANK1
  5998     007E  0085               	movwf	5
  5999     007F  3007               	movlw	7
  6000     0080  3193  2385  3180   	fcall	clear_ram0
  6001                           
  6002                           ; Clear objects allocated to BANK2
  6003     0083  3057               	movlw	low __pbssBANK2
  6004     0084  0084               	movwf	4
  6005     0085  3001               	movlw	high __pbssBANK2
  6006     0086  0085               	movwf	5
  6007     0087  300D               	movlw	13
  6008     0088  3193  2385  3180   	fcall	clear_ram0
  6009                           
  6010                           ; Clear objects allocated to BANK3
  6011     008B  30A0               	movlw	low __pbssBANK3
  6012     008C  0084               	movwf	4
  6013     008D  3001               	movlw	high __pbssBANK3
  6014     008E  0085               	movwf	5
  6015     008F  3020               	movlw	32
  6016     0090  3193  2385  3180   	fcall	clear_ram0
  6017                           
  6018                           ; Clear objects allocated to BANK4
  6019     0093  3020               	movlw	low __pbssBANK4
  6020     0094  0084               	movwf	4
  6021     0095  3002               	movlw	high __pbssBANK4
  6022     0096  0085               	movwf	5
  6023     0097  3040               	movlw	64
  6024     0098  3193  2385  3180   	fcall	clear_ram0
  6025     009B                     end_of_initialization:	
  6026                           ;End of C runtime variable initialization code
  6027                           
  6028     009B                     __end_of__initialization:
  6029     009B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6030     009C  0140               	movlb	0
  6031     009D  3180  289F         	ljmp	_main	;jump to C main() function
  6032                           
  6033                           	psect	bssCOMMON
  6034     0078                     __pbssCOMMON:
  6035     0078                     _ticks:
  6036     0078                     	ds	4
  6037     007C                     _currentRegister:
  6038     007C                     	ds	1
  6039     007D                     _rxbuffer_index:
  6040     007D                     	ds	1
  6041                           
  6042                           	psect	bssBANK1
  6043     00E9                     __pbssBANK1:
  6044     00E9                     _uart_rx_ticks:
  6045     00E9                     	ds	4
  6046     00ED                     _currentState:
  6047     00ED                     	ds	1
  6048     00EE                     _uart_rx_states:
  6049     00EE                     	ds	1
  6050     00EF                     _tmp:
  6051     00EF                     	ds	1
  6052                           
  6053                           	psect	bssBANK2
  6054     0157                     __pbssBANK2:
  6055     0157                     delay_state@prev_ticks_delay:
  6056     0157                     	ds	4
  6057     015B                     main@prev_ticks2:
  6058     015B                     	ds	4
  6059     015F                     main@prev_ticks_btn:
  6060     015F                     	ds	4
  6061     0163                     _uart_rx_package_event:
  6062     0163                     	ds	1
  6063                           
  6064                           	psect	bssBANK3
  6065     01A0                     __pbssBANK3:
  6066     01A0                     _rxbuffer:
  6067     01A0                     	ds	32
  6068                           
  6069                           	psect	dataBANK3
  6070     01C0                     __pdataBANK3:
  6071     01C0                     measurement@F10462:
  6072     01C0                     	ds	32
  6073                           
  6074                           	psect	bssBANK4
  6075     0220                     __pbssBANK4:
  6076     0220                     _slaveData:
  6077     0220                     	ds	64
  6078                           
  6079                           	psect	inittext
  6080     0802                     init_ram:
  6081     0802  00FE               	movwf	btemp
  6082     0803                     initloop:
  6083     0803  0012               	moviw fsr0++
  6084     0804  001E               	movwi fsr1++
  6085     0805  0BFE               	decfsz	btemp,f
  6086     0806  2803               	goto	initloop
  6087     0807  3400               	retlw	0
  6088                           
  6089                           	psect	clrtext
  6090     1385                     clear_ram0:	
  6091                           ;	Called with FSR0 containing the base address, and
  6092                           ;	WREG with the size to clear
  6093                           
  6094     1385  0064               	clrwdt	;clear the watchdog before getting into this loop
  6095     1386                     clrloop0:
  6096     1386  0180               	clrf	0	;clear RAM location pointed to by FSR
  6097     1387  3101               	addfsr 0,1
  6098     1388  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6099     1389  2B86               	goto	clrloop0	;have we reached the end yet?
  6100     138A  3400               	retlw	0	;all done for this memory range, return
  6101                           
  6102                           	psect	cstackBANK2
  6103     0120                     __pcstackBANK2:
  6104     0120                     main@state:
  6105                           
  6106                           ; 1 bytes @ 0x0
  6107     0120                     	ds	1
  6108     0121                     main@b2:
  6109                           
  6110                           ; 27 bytes @ 0x1
  6111     0121                     	ds	27
  6112     013C                     main@b1:
  6113                           
  6114                           ; 27 bytes @ 0x1C
  6115     013C                     	ds	27
  6116                           
  6117                           	psect	cstackBANK1
  6118     00A0                     __pcstackBANK1:
  6119     00A0                     measurement@txbuf:
  6120                           
  6121                           ; 32 bytes @ 0x0
  6122     00A0                     	ds	32
  6123     00C0                     measurement@state:
  6124                           
  6125                           ; 1 bytes @ 0x20
  6126     00C0                     	ds	1
  6127     00C1                     ??_main:
  6128                           
  6129                           ; 1 bytes @ 0x21
  6130     00C1                     	ds	12
  6131     00CD                     main@payload:
  6132                           
  6133                           ; 4 bytes @ 0x2D
  6134     00CD                     	ds	4
  6135     00D1                     main@payload_temp:
  6136                           
  6137                           ; 4 bytes @ 0x31
  6138     00D1                     	ds	4
  6139     00D5                     main@temp_adc_value:
  6140                           
  6141                           ; 2 bytes @ 0x35
  6142     00D5                     	ds	2
  6143     00D7                     main@ph:
  6144                           
  6145                           ; 4 bytes @ 0x37
  6146     00D7                     	ds	4
  6147     00DB                     main@temp:
  6148                           
  6149                           ; 4 bytes @ 0x3B
  6150     00DB                     	ds	4
  6151     00DF                     main@temp2:
  6152                           
  6153                           ; 2 bytes @ 0x3F
  6154     00DF                     	ds	2
  6155     00E1                     main@ph2:
  6156                           
  6157                           ; 2 bytes @ 0x41
  6158     00E1                     	ds	2
  6159     00E3                     main@now:
  6160                           
  6161                           ; 4 bytes @ 0x43
  6162     00E3                     	ds	4
  6163     00E7                     main@b2_clicked_count:
  6164                           
  6165                           ; 1 bytes @ 0x47
  6166     00E7                     	ds	1
  6167     00E8                     main@b1_clicked_count:
  6168                           
  6169                           ; 1 bytes @ 0x48
  6170     00E8                     	ds	1
  6171                           
  6172                           	psect	cstackCOMMON
  6173     0070                     __pcstackCOMMON:
  6174     0070                     ?_isprint:
  6175     0070                     ?_isdigit:	
  6176                           ; 1 bit 
  6177                           
  6178     0070                     ?_isspace:	
  6179                           ; 1 bit 
  6180                           
  6181     0070                     ?_isalpha:	
  6182                           ; 1 bit 
  6183                           
  6184     0070                     ?_isupper:	
  6185                           ; 1 bit 
  6186                           
  6187     0070                     ?_PMD_Initialize:	
  6188                           ; 1 bit 
  6189                           
  6190     0070                     ?_PIN_MANAGER_Initialize:	
  6191                           ; 1 bytes @ 0x0
  6192                           
  6193     0070                     ?_OSCILLATOR_Initialize:	
  6194                           ; 1 bytes @ 0x0
  6195                           
  6196     0070                     ?_tmr0_init:	
  6197                           ; 1 bytes @ 0x0
  6198                           
  6199     0070                     ?_usart_init:	
  6200                           ; 1 bytes @ 0x0
  6201                           
  6202     0070                     ?_i2c_slave_init:	
  6203                           ; 1 bytes @ 0x0
  6204                           
  6205     0070                     ?_init_button:	
  6206                           ; 1 bytes @ 0x0
  6207                           
  6208     0070                     ?_enable_uart_printf:	
  6209                           ; 1 bytes @ 0x0
  6210                           
  6211     0070                     ?_enable_tx_transmit:	
  6212                           ; 1 bytes @ 0x0
  6213                           
  6214     0070                     ?_delay_state:	
  6215                           ; 1 bytes @ 0x0
  6216                           
  6217     0070                     ?_Enable_Global_Interrupt:	
  6218                           ; 1 bytes @ 0x0
  6219                           
  6220     0070                     ?_Disable_Global_Interrupt:	
  6221                           ; 1 bytes @ 0x0
  6222                           
  6223     0070                     ?_dump_memory_map:	
  6224                           ; 1 bytes @ 0x0
  6225                           
  6226     0070                     ?_set_device_serial_number_to_i2c_slave_memorymap:	
  6227                           ; 1 bytes @ 0x0
  6228                           
  6229     0070                     ?_toupper:	
  6230                           ; 1 bytes @ 0x0
  6231                           
  6232     0070                     ?_SYSTEM_Initialize:	
  6233                           ; 1 bytes @ 0x0
  6234                           
  6235     0070                     ?_main:	
  6236                           ; 1 bytes @ 0x0
  6237                           
  6238     0070                     ?_i2c_slave_interrupt:	
  6239                           ; 1 bytes @ 0x0
  6240                           
  6241     0070                     ??_i2c_slave_interrupt:	
  6242                           ; 1 bytes @ 0x0
  6243                           
  6244     0070                     ?_LED_flashes_three_times:	
  6245                           ; 1 bytes @ 0x0
  6246                           
  6247     0070                     ?_is_single_click:	
  6248                           ; 1 bytes @ 0x0
  6249                           
  6250     0070                     ?_is_long_press:	
  6251                           ; 1 bytes @ 0x0
  6252                           
  6253     0070                     ?_reset_single_click_flag:	
  6254                           ; 1 bytes @ 0x0
  6255                           
  6256     0070                     ?_reset_long_press_flag:	
  6257                           ; 1 bytes @ 0x0
  6258                           
  6259     0070                     ?_putch:	
  6260                           ; 1 bytes @ 0x0
  6261                           
  6262     0070                     ?_EUSART1_Write:	
  6263                           ; 1 bytes @ 0x0
  6264                           
  6265     0070                     ?_INTERRUPT_InterruptManager:	
  6266                           ; 1 bytes @ 0x0
  6267                           
  6268     0070                     ?i1_get_ticks:	
  6269                           ; 1 bytes @ 0x0
  6270                           
  6271                           
  6272                           ; 4 bytes @ 0x0
  6273     0070                     	ds	1
  6274     0071                     i2c_slave_interrupt@isRead:
  6275                           
  6276                           ; 1 bytes @ 0x1
  6277     0071                     	ds	1
  6278     0072                     i2c_slave_interrupt@isNack:
  6279                           
  6280                           ; 1 bytes @ 0x2
  6281     0072                     	ds	1
  6282     0073                     i2c_slave_interrupt@value:
  6283                           
  6284                           ; 1 bytes @ 0x3
  6285     0073                     	ds	1
  6286     0074                     ??_INTERRUPT_InterruptManager:
  6287     0074                     ??i1_get_ticks:	
  6288                           ; 1 bytes @ 0x4
  6289                           
  6290                           
  6291                           ; 1 bytes @ 0x4
  6292     0074                     	ds	4
  6293                           
  6294                           	psect	cstackBANK0
  6295     0020                     __pcstackBANK0:
  6296     0020                     ??_PMD_Initialize:
  6297     0020                     ??_PIN_MANAGER_Initialize:	
  6298                           ; 1 bytes @ 0x0
  6299                           
  6300     0020                     ??_OSCILLATOR_Initialize:	
  6301                           ; 1 bytes @ 0x0
  6302                           
  6303     0020                     ??_tmr0_init:	
  6304                           ; 1 bytes @ 0x0
  6305                           
  6306     0020                     ??_usart_init:	
  6307                           ; 1 bytes @ 0x0
  6308                           
  6309     0020                     ??_i2c_slave_init:	
  6310                           ; 1 bytes @ 0x0
  6311                           
  6312     0020                     ??_init_button:	
  6313                           ; 1 bytes @ 0x0
  6314                           
  6315     0020                     ??_enable_uart_printf:	
  6316                           ; 1 bytes @ 0x0
  6317                           
  6318     0020                     ??_enable_tx_transmit:	
  6319                           ; 1 bytes @ 0x0
  6320                           
  6321     0020                     ??_Enable_Global_Interrupt:	
  6322                           ; 1 bytes @ 0x0
  6323                           
  6324     0020                     ?_i2c_slave_set_register:	
  6325                           ; 1 bytes @ 0x0
  6326                           
  6327     0020                     ??_Disable_Global_Interrupt:	
  6328                           ; 1 bytes @ 0x0
  6329                           
  6330     0020                     ??_isprint:	
  6331                           ; 1 bytes @ 0x0
  6332                           
  6333     0020                     ??_isdigit:	
  6334                           ; 1 bytes @ 0x0
  6335                           
  6336     0020                     ??_isspace:	
  6337                           ; 1 bytes @ 0x0
  6338                           
  6339     0020                     ??_toupper:	
  6340                           ; 1 bytes @ 0x0
  6341                           
  6342     0020                     ??_isupper:	
  6343                           ; 1 bytes @ 0x0
  6344                           
  6345     0020                     ??_SYSTEM_Initialize:	
  6346                           ; 1 bytes @ 0x0
  6347                           
  6348     0020                     ??_LED_flashes_three_times:	
  6349                           ; 1 bytes @ 0x0
  6350                           
  6351     0020                     ?___is_single_click:	
  6352                           ; 1 bytes @ 0x0
  6353                           
  6354     0020                     ?___is_double_click:	
  6355                           ; 1 bytes @ 0x0
  6356                           
  6357     0020                     ?___is_long_press:	
  6358                           ; 1 bytes @ 0x0
  6359                           
  6360     0020                     ??_is_single_click:	
  6361                           ; 1 bytes @ 0x0
  6362                           
  6363     0020                     ??_is_long_press:	
  6364                           ; 1 bytes @ 0x0
  6365                           
  6366     0020                     ??_reset_single_click_flag:	
  6367                           ; 1 bytes @ 0x0
  6368                           
  6369     0020                     ??_reset_long_press_flag:	
  6370                           ; 1 bytes @ 0x0
  6371                           
  6372     0020                     ??_putch:	
  6373                           ; 1 bytes @ 0x0
  6374                           
  6375     0020                     ??_EUSART1_Write:	
  6376                           ; 1 bytes @ 0x0
  6377                           
  6378     0020                     ?__Umul8_16:	
  6379                           ; 1 bytes @ 0x0
  6380                           
  6381     0020                     ?___wmul:	
  6382                           ; 2 bytes @ 0x0
  6383                           
  6384     0020                     ?_get_ticks_with_lock:	
  6385                           ; 2 bytes @ 0x0
  6386                           
  6387     0020                     ?_get_ticks:	
  6388                           ; 4 bytes @ 0x0
  6389                           
  6390     0020                     ?___lmul:	
  6391                           ; 4 bytes @ 0x0
  6392                           
  6393     0020                     ?___lldiv:	
  6394                           ; 4 bytes @ 0x0
  6395                           
  6396     0020                     i2c_slave_set_register@value:	
  6397                           ; 4 bytes @ 0x0
  6398                           
  6399     0020                     init_button@b:	
  6400                           ; 1 bytes @ 0x0
  6401                           
  6402     0020                     is_single_click@b:	
  6403                           ; 1 bytes @ 0x0
  6404                           
  6405     0020                     is_long_press@b:	
  6406                           ; 1 bytes @ 0x0
  6407                           
  6408     0020                     reset_single_click_flag@b:	
  6409                           ; 1 bytes @ 0x0
  6410                           
  6411     0020                     reset_long_press_flag@b:	
  6412                           ; 1 bytes @ 0x0
  6413                           
  6414     0020                     putch@data:	
  6415                           ; 1 bytes @ 0x0
  6416                           
  6417     0020                     EUSART1_Write@txData:	
  6418                           ; 1 bytes @ 0x0
  6419                           
  6420     0020                     __Umul8_16@multiplicand:	
  6421                           ; 1 bytes @ 0x0
  6422                           
  6423     0020                     _isdigit$1719:	
  6424                           ; 1 bytes @ 0x0
  6425                           
  6426     0020                     _isprint$1722:	
  6427                           ; 1 bytes @ 0x0
  6428                           
  6429     0020                     _isspace$1756:	
  6430                           ; 1 bytes @ 0x0
  6431                           
  6432     0020                     _isupper$1759:	
  6433                           ; 1 bytes @ 0x0
  6434                           
  6435     0020                     ___wmul@multiplier:	
  6436                           ; 1 bytes @ 0x0
  6437                           
  6438     0020                     ___is_single_click@now:	
  6439                           ; 2 bytes @ 0x0
  6440                           
  6441     0020                     ___is_double_click@now:	
  6442                           ; 4 bytes @ 0x0
  6443                           
  6444     0020                     ___is_long_press@now:	
  6445                           ; 4 bytes @ 0x0
  6446                           
  6447     0020                     ___lmul@multiplier:	
  6448                           ; 4 bytes @ 0x0
  6449                           
  6450     0020                     ___lldiv@divisor:	
  6451                           ; 4 bytes @ 0x0
  6452                           
  6453                           
  6454                           ; 4 bytes @ 0x0
  6455     0020                     	ds	1
  6456     0021                     ??_i2c_slave_set_register:
  6457     0021                     ?_EUSART1_Write_1:	
  6458                           ; 1 bytes @ 0x1
  6459                           
  6460     0021                     i2c_slave_init@i:	
  6461                           ; 1 bytes @ 0x1
  6462                           
  6463     0021                     i2c_slave_set_register@registerAddress:	
  6464                           ; 1 bytes @ 0x1
  6465                           
  6466     0021                     EUSART1_Write_1@length:	
  6467                           ; 1 bytes @ 0x1
  6468                           
  6469     0021                     isdigit@c:	
  6470                           ; 1 bytes @ 0x1
  6471                           
  6472     0021                     isprint@c:	
  6473                           ; 1 bytes @ 0x1
  6474                           
  6475     0021                     isspace@c:	
  6476                           ; 1 bytes @ 0x1
  6477                           
  6478     0021                     isupper@c:	
  6479                           ; 1 bytes @ 0x1
  6480                           
  6481     0021                     toupper@c:	
  6482                           ; 1 bytes @ 0x1
  6483                           
  6484     0021                     LED_flashes_three_times@i:	
  6485                           ; 1 bytes @ 0x1
  6486                           
  6487                           
  6488                           ; 2 bytes @ 0x1
  6489     0021                     	ds	1
  6490     0022                     ??__Umul8_16:
  6491     0022                     ??_isalpha:	
  6492                           ; 1 bytes @ 0x2
  6493                           
  6494     0022                     ?_i2c_slave_set_register_with_lock:	
  6495                           ; 1 bytes @ 0x2
  6496                           
  6497     0022                     ??_EUSART1_Write_1:	
  6498                           ; 1 bytes @ 0x2
  6499                           
  6500     0022                     i2c_slave_set_register_with_lock@value:	
  6501                           ; 1 bytes @ 0x2
  6502                           
  6503     0022                     _isalpha$1753:	
  6504                           ; 1 bytes @ 0x2
  6505                           
  6506     0022                     ___wmul@multiplicand:	
  6507                           ; 1 bytes @ 0x2
  6508                           
  6509                           
  6510                           ; 2 bytes @ 0x2
  6511     0022                     	ds	1
  6512     0023                     ??_i2c_slave_set_register_with_lock:
  6513     0023                     i2c_slave_set_register_with_lock@registerAddress:	
  6514                           ; 1 bytes @ 0x3
  6515                           
  6516     0023                     EUSART1_Write_1@txbuf:	
  6517                           ; 1 bytes @ 0x3
  6518                           
  6519     0023                     isalpha@c:	
  6520                           ; 1 bytes @ 0x3
  6521                           
  6522                           
  6523                           ; 1 bytes @ 0x3
  6524     0023                     	ds	1
  6525     0024                     ??_get_ticks_with_lock:
  6526     0024                     ??_get_ticks:	
  6527                           ; 1 bytes @ 0x4
  6528                           
  6529     0024                     ??___is_single_click:	
  6530                           ; 1 bytes @ 0x4
  6531                           
  6532     0024                     ??___is_double_click:	
  6533                           ; 1 bytes @ 0x4
  6534                           
  6535     0024                     ??___is_long_press:	
  6536                           ; 1 bytes @ 0x4
  6537                           
  6538     0024                     ??___wmul:	
  6539                           ; 1 bytes @ 0x4
  6540                           
  6541     0024                     ?_calculate_diff:	
  6542                           ; 1 bytes @ 0x4
  6543                           
  6544     0024                     EUSART1_Write_1@i:	
  6545                           ; 4 bytes @ 0x4
  6546                           
  6547     0024                     ___wmul@product:	
  6548                           ; 1 bytes @ 0x4
  6549                           
  6550     0024                     __Umul8_16@product:	
  6551                           ; 2 bytes @ 0x4
  6552                           
  6553     0024                     get_ticks_with_lock@result:	
  6554                           ; 2 bytes @ 0x4
  6555                           
  6556     0024                     calculate_diff@now:	
  6557                           ; 4 bytes @ 0x4
  6558                           
  6559     0024                     ___lmul@multiplicand:	
  6560                           ; 4 bytes @ 0x4
  6561                           
  6562     0024                     ___lldiv@dividend:	
  6563                           ; 4 bytes @ 0x4
  6564                           
  6565                           
  6566                           ; 4 bytes @ 0x4
  6567     0024                     	ds	2
  6568     0026                     __Umul8_16@word_mpld:
  6569                           
  6570                           ; 2 bytes @ 0x6
  6571     0026                     	ds	2
  6572     0028                     ??___lmul:
  6573     0028                     ??___lldiv:	
  6574                           ; 1 bytes @ 0x8
  6575                           
  6576     0028                     __Umul8_16@multiplier:	
  6577                           ; 1 bytes @ 0x8
  6578                           
  6579     0028                     calculate_diff@prev_ticks:	
  6580                           ; 1 bytes @ 0x8
  6581                           
  6582     0028                     ___lmul@product:	
  6583                           ; 4 bytes @ 0x8
  6584                           
  6585                           
  6586                           ; 4 bytes @ 0x8
  6587     0028                     	ds	1
  6588     0029                     ?___flmul:
  6589     0029                     ___lldiv@quotient:	
  6590                           ; 4 bytes @ 0x9
  6591                           
  6592     0029                     ___flmul@b:	
  6593                           ; 4 bytes @ 0x9
  6594                           
  6595                           
  6596                           ; 4 bytes @ 0x9
  6597     0029                     	ds	3
  6598     002C                     ??_calculate_diff:
  6599     002C                     ?_strtol:	
  6600                           ; 1 bytes @ 0xC
  6601                           
  6602     002C                     ___is_single_click@condition1:	
  6603                           ; 4 bytes @ 0xC
  6604                           
  6605     002C                     ___is_double_click@condition1:	
  6606                           ; 1 bytes @ 0xC
  6607                           
  6608     002C                     ___is_long_press@condition1:	
  6609                           ; 1 bytes @ 0xC
  6610                           
  6611     002C                     strtol@endptr:	
  6612                           ; 1 bytes @ 0xC
  6613                           
  6614                           
  6615                           ; 1 bytes @ 0xC
  6616     002C                     	ds	1
  6617     002D                     ___is_single_click@condition2:
  6618     002D                     ___is_double_click@condition2:	
  6619                           ; 1 bytes @ 0xD
  6620                           
  6621     002D                     ___is_long_press@condition2:	
  6622                           ; 1 bytes @ 0xD
  6623                           
  6624     002D                     ___lldiv@counter:	
  6625                           ; 1 bytes @ 0xD
  6626                           
  6627     002D                     strtol@base:	
  6628                           ; 1 bytes @ 0xD
  6629                           
  6630     002D                     ___flmul@a:	
  6631                           ; 2 bytes @ 0xD
  6632                           
  6633                           
  6634                           ; 4 bytes @ 0xD
  6635     002D                     	ds	1
  6636     002E                     ?___llmod:
  6637     002E                     ___is_single_click@condition3:	
  6638                           ; 4 bytes @ 0xE
  6639                           
  6640     002E                     ___is_double_click@condition3:	
  6641                           ; 1 bytes @ 0xE
  6642                           
  6643     002E                     ___is_long_press@b:	
  6644                           ; 1 bytes @ 0xE
  6645                           
  6646     002E                     ___llmod@divisor:	
  6647                           ; 1 bytes @ 0xE
  6648                           
  6649                           
  6650                           ; 4 bytes @ 0xE
  6651     002E                     	ds	1
  6652     002F                     ___is_single_click@condition4:
  6653     002F                     ___is_double_click@b:	
  6654                           ; 1 bytes @ 0xF
  6655                           
  6656                           
  6657                           ; 1 bytes @ 0xF
  6658     002F                     	ds	1
  6659     0030                     ??_strtol:
  6660     0030                     ___is_single_click@b:	
  6661                           ; 1 bytes @ 0x10
  6662                           
  6663                           
  6664                           ; 1 bytes @ 0x10
  6665     0030                     	ds	1
  6666     0031                     ?_update_mybutton:
  6667     0031                     ??___flmul:	
  6668                           ; 1 bytes @ 0x11
  6669                           
  6670     0031                     update_mybutton@signal:	
  6671                           ; 1 bytes @ 0x11
  6672                           
  6673                           
  6674                           ; 1 bytes @ 0x11
  6675     0031                     	ds	1
  6676     0032                     update_mybutton@now:
  6677     0032                     ___llmod@dividend:	
  6678                           ; 4 bytes @ 0x12
  6679                           
  6680                           
  6681                           ; 4 bytes @ 0x12
  6682     0032                     	ds	2
  6683     0034                     strtol@sign:
  6684     0034                     calculate_diff@diff:	
  6685                           ; 1 bytes @ 0x14
  6686                           
  6687                           
  6688                           ; 4 bytes @ 0x14
  6689     0034                     	ds	1
  6690     0035                     strtol@a:
  6691                           
  6692                           ; 4 bytes @ 0x15
  6693     0035                     	ds	1
  6694     0036                     ??_update_mybutton:
  6695     0036                     ??___llmod:	
  6696                           ; 1 bytes @ 0x16
  6697                           
  6698     0036                     ___flmul@sign:	
  6699                           ; 1 bytes @ 0x16
  6700                           
  6701                           
  6702                           ; 1 bytes @ 0x16
  6703     0036                     	ds	1
  6704     0037                     ___llmod@counter:
  6705     0037                     ___flmul@grs:	
  6706                           ; 1 bytes @ 0x17
  6707                           
  6708                           
  6709                           ; 4 bytes @ 0x17
  6710     0037                     	ds	1
  6711     0038                     ??_delay_state:
  6712     0038                     ?_printf:	
  6713                           ; 1 bytes @ 0x18
  6714                           
  6715     0038                     delay_state@state:	
  6716                           ; 2 bytes @ 0x18
  6717                           
  6718     0038                     printf@f:	
  6719                           ; 1 bytes @ 0x18
  6720                           
  6721                           
  6722                           ; 2 bytes @ 0x18
  6723     0038                     	ds	1
  6724     0039                     strtol@s:
  6725                           
  6726                           ; 1 bytes @ 0x19
  6727     0039                     	ds	1
  6728     003A                     update_mybutton@b:
  6729     003A                     strtol@c:	
  6730                           ; 1 bytes @ 0x1A
  6731                           
  6732                           
  6733                           ; 1 bytes @ 0x1A
  6734     003A                     	ds	1
  6735     003B                     ??_set_device_serial_number_to_i2c_slave_memorymap:
  6736     003B                     ___flmul@aexp:	
  6737                           ; 1 bytes @ 0x1B
  6738                           
  6739                           
  6740                           ; 1 bytes @ 0x1B
  6741     003B                     	ds	1
  6742     003C                     ___flmul@bexp:
  6743                           
  6744                           ; 1 bytes @ 0x1C
  6745     003C                     	ds	1
  6746     003D                     set_device_serial_number_to_i2c_slave_memorymap@value:
  6747     003D                     ___flmul@prod:	
  6748                           ; 1 bytes @ 0x1D
  6749                           
  6750                           
  6751                           ; 4 bytes @ 0x1D
  6752     003D                     	ds	1
  6753     003E                     set_device_serial_number_to_i2c_slave_memorymap@buffer:
  6754                           
  6755                           ; 3 bytes @ 0x1E
  6756     003E                     	ds	2
  6757     0040                     ??_printf:
  6758                           
  6759                           ; 1 bytes @ 0x20
  6760     0040                     	ds	1
  6761     0041                     set_device_serial_number_to_i2c_slave_memorymap@i:
  6762     0041                     ___flmul@temp:	
  6763                           ; 1 bytes @ 0x21
  6764                           
  6765                           
  6766                           ; 2 bytes @ 0x21
  6767     0041                     	ds	2
  6768     0043                     ?___fltol:
  6769     0043                     ___fltol@f1:	
  6770                           ; 4 bytes @ 0x23
  6771                           
  6772                           
  6773                           ; 4 bytes @ 0x23
  6774     0043                     	ds	3
  6775     0046                     _printf$1436:
  6776                           
  6777                           ; 2 bytes @ 0x26
  6778     0046                     	ds	1
  6779     0047                     ??___fltol:
  6780                           
  6781                           ; 1 bytes @ 0x27
  6782     0047                     	ds	1
  6783     0048                     printf@idx:
  6784                           
  6785                           ; 1 bytes @ 0x28
  6786     0048                     	ds	1
  6787     0049                     printf@prec:
  6788                           
  6789                           ; 2 bytes @ 0x29
  6790     0049                     	ds	2
  6791     004B                     ___fltol@sign1:
  6792     004B                     printf@cp:	
  6793                           ; 1 bytes @ 0x2B
  6794                           
  6795                           
  6796                           ; 2 bytes @ 0x2B
  6797     004B                     	ds	1
  6798     004C                     ___fltol@exp1:
  6799                           
  6800                           ; 1 bytes @ 0x2C
  6801     004C                     	ds	1
  6802     004D                     printf@val:
  6803                           
  6804                           ; 4 bytes @ 0x2D
  6805     004D                     	ds	4
  6806     0051                     printf@len:
  6807                           
  6808                           ; 2 bytes @ 0x31
  6809     0051                     	ds	2
  6810     0053                     printf@ap:
  6811                           
  6812                           ; 1 bytes @ 0x33
  6813     0053                     	ds	1
  6814     0054                     printf@flag:
  6815                           
  6816                           ; 1 bytes @ 0x34
  6817     0054                     	ds	1
  6818     0055                     printf@width:
  6819                           
  6820                           ; 2 bytes @ 0x35
  6821     0055                     	ds	2
  6822     0057                     printf@c:
  6823                           
  6824                           ; 1 bytes @ 0x37
  6825     0057                     	ds	1
  6826     0058                     ?_monitoring_sync:
  6827     0058                     ?_measurement:	
  6828                           ; 1 bytes @ 0x38
  6829                           
  6830     0058                     ?_dispatch:	
  6831                           ; 1 bytes @ 0x38
  6832                           
  6833     0058                     ?_dump_buffer:	
  6834                           ; 1 bytes @ 0x38
  6835                           
  6836     0058                     monitoring_sync@b1:	
  6837                           ; 1 bytes @ 0x38
  6838                           
  6839     0058                     dispatch@b1:	
  6840                           ; 1 bytes @ 0x38
  6841                           
  6842     0058                     measurement@value:	
  6843                           ; 1 bytes @ 0x38
  6844                           
  6845     0058                     dump_buffer@size:	
  6846                           ; 1 bytes @ 0x38
  6847                           
  6848                           
  6849                           ; 2 bytes @ 0x38
  6850     0058                     	ds	1
  6851     0059                     ??_measurement:
  6852     0059                     monitoring_sync@b2:	
  6853                           ; 1 bytes @ 0x39
  6854                           
  6855     0059                     dispatch@b2:	
  6856                           ; 1 bytes @ 0x39
  6857                           
  6858                           
  6859                           ; 1 bytes @ 0x39
  6860     0059                     	ds	1
  6861     005A                     ??_dump_buffer:
  6862     005A                     monitoring_sync@b1_clicked_count:	
  6863                           ; 1 bytes @ 0x3A
  6864                           
  6865     005A                     dispatch@b1_clicked_count_ptr:	
  6866                           ; 1 bytes @ 0x3A
  6867                           
  6868                           
  6869                           ; 1 bytes @ 0x3A
  6870     005A                     	ds	1
  6871     005B                     monitoring_sync@b2_clicked_count:
  6872     005B                     dispatch@b2_clicked_count_ptr:	
  6873                           ; 1 bytes @ 0x3B
  6874                           
  6875                           
  6876                           ; 1 bytes @ 0x3B
  6877     005B                     	ds	1
  6878     005C                     ??_monitoring_sync:
  6879     005C                     ??_dispatch:	
  6880                           ; 1 bytes @ 0x3C
  6881                           
  6882     005C                     monitoring_sync@state:	
  6883                           ; 1 bytes @ 0x3C
  6884                           
  6885                           
  6886                           ; 1 bytes @ 0x3C
  6887     005C                     	ds	2
  6888     005E                     dispatch@state:
  6889     005E                     _dump_buffer$863:	
  6890                           ; 1 bytes @ 0x3E
  6891                           
  6892                           
  6893                           ; 2 bytes @ 0x3E
  6894     005E                     	ds	1
  6895     005F                     dispatch@b1_clicked_count:
  6896                           
  6897                           ; 1 bytes @ 0x3F
  6898     005F                     	ds	1
  6899     0060                     dump_buffer@buffer:
  6900     0060                     dispatch@b2_clicked_count:	
  6901                           ; 1 bytes @ 0x40
  6902                           
  6903                           
  6904                           ; 1 bytes @ 0x40
  6905     0060                     	ds	1
  6906     0061                     dump_buffer@p:
  6907                           
  6908                           ; 1 bytes @ 0x41
  6909     0061                     	ds	1
  6910     0062                     dump_buffer@i:
  6911                           
  6912                           ; 2 bytes @ 0x42
  6913     0062                     	ds	2
  6914     0064                     dump_buffer@j:
  6915                           
  6916                           ; 2 bytes @ 0x44
  6917     0064                     	ds	2
  6918     0066                     ??_dump_memory_map:
  6919     0066                     main@sensor_value:	
  6920                           ; 1 bytes @ 0x46
  6921                           
  6922                           
  6923                           ; 4 bytes @ 0x46
  6924     0066                     	ds	4
  6925     006A                     main@ph_temp:
  6926                           
  6927                           ; 2 bytes @ 0x4A
  6928     006A                     	ds	2
  6929     006C                     main@temp_temp:
  6930                           
  6931                           ; 2 bytes @ 0x4C
  6932     006C                     	ds	2
  6933     006E                     main@ph_adc_value:
  6934                           
  6935                           ; 2 bytes @ 0x4E
  6936     006E                     	ds	2
  6937                           
  6938                           	psect	maintext
  6939     009F                     __pmaintext:	
  6940 ;;
  6941 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  6942 ;;
  6943 ;; *************** function _main *****************
  6944 ;; Defined at:
  6945 ;;		line 33 in file "main.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;		None
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  temp            4   59[BANK1 ] float 
  6950 ;;  ph              4   55[BANK1 ] float 
  6951 ;;  payload_temp    4   49[BANK1 ] unsigned long 
  6952 ;;  payload         4   45[BANK1 ] unsigned long 
  6953 ;;  ph2             2   65[BANK1 ] unsigned int 
  6954 ;;  temp2           2   63[BANK1 ] unsigned int 
  6955 ;;  now             4   67[BANK1 ] unsigned long 
  6956 ;;  b1             27   28[BANK2 ] struct mybutton
  6957 ;;  b2             27    1[BANK2 ] struct mybutton
  6958 ;;  sensor_value    4   70[BANK0 ] struct values
  6959 ;;  temp_adc_val    2   53[BANK1 ] volatile unsigned int 
  6960 ;;  ph_adc_value    2   78[BANK0 ] volatile unsigned int 
  6961 ;;  temp_temp       2   76[BANK0 ] volatile unsigned int 
  6962 ;;  ph_temp         2   74[BANK0 ] volatile unsigned int 
  6963 ;;  state           1    0[BANK2 ] enum E10539
  6964 ;;  b1_clicked_c    1   72[BANK1 ] unsigned char 
  6965 ;;  b2_clicked_c    1   71[BANK1 ] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  1    wreg      void 
  6968 ;; Registers used:
  6969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6970 ;; Tracked objects:
  6971 ;;		On entry : B3F/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;      Locals:         0      10      28      55       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Totals:         0      10      40      55       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;Total ram usage:      105 bytes
  6980 ;; Hardware stack levels required when called: 6
  6981 ;; This function calls:
  6982 ;;		_Disable_Global_Interrupt
  6983 ;;		_Enable_Global_Interrupt
  6984 ;;		_SYSTEM_Initialize
  6985 ;;		___flmul
  6986 ;;		___fltol
  6987 ;;		_calculate_diff
  6988 ;;		_delay_state
  6989 ;;		_dispatch
  6990 ;;		_dump_memory_map
  6991 ;;		_enable_tx_transmit
  6992 ;;		_enable_uart_printf
  6993 ;;		_get_ticks
  6994 ;;		_get_ticks_with_lock
  6995 ;;		_i2c_slave_init
  6996 ;;		_i2c_slave_set_register
  6997 ;;		_init_button
  6998 ;;		_measurement
  6999 ;;		_monitoring_sync
  7000 ;;		_printf
  7001 ;;		_set_device_serial_number_to_i2c_slave_memorymap
  7002 ;;		_tmr0_init
  7003 ;;		_update_mybutton
  7004 ;;		_usart_init
  7005 ;; This function is called by:
  7006 ;;		Startup code after reset
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010     009F                     _main:	
  7011                           ;psect for function _main
  7012                           
  7013     009F                     l3829:	
  7014                           ;incstack = 0
  7015                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7016                           
  7017                           
  7018                           ;main.c: 34: SYSTEM_Initialize();
  7019     009F  3193  23CB  3180   	fcall	_SYSTEM_Initialize
  7020                           
  7021                           ;main.c: 35: tmr0_init();
  7022     00A2  3194  2416  3180   	fcall	_tmr0_init
  7023                           
  7024                           ;main.c: 36: usart_init();
  7025     00A5  3194  2423  3180   	fcall	_usart_init
  7026     00A8                     l3831:
  7027                           
  7028                           ;main.c: 37: i2c_slave_init();
  7029     00A8  3194  24EB  3180   	fcall	_i2c_slave_init
  7030     00AB                     l3833:
  7031                           
  7032                           ;main.c: 41: MyButton b1;;main.c: 42: MyButton b2;;main.c: 44: init_button(&b1);
  7033     00AB  303C               	movlw	(low (main@b1| (0+256)))& (0+255)
  7034     00AC  3189  2127  3180   	fcall	_init_button
  7035     00AF                     l3835:
  7036                           
  7037                           ;main.c: 45: init_button(&b2);
  7038     00AF  3021               	movlw	(low (main@b2| (0+256)))& (0+255)
  7039     00B0  3189  2127  3180   	fcall	_init_button
  7040     00B3                     l3837:
  7041                           
  7042                           ;main.c: 46: Sensor_value sensor_value;;main.c: 49: States state = STATE_MONITORING_POWE
      +                          R_FOR_SYNC;
  7043     00B3  0142               	movlb	2	; select bank2
  7044     00B4  01A0               	clrf	main@state^(0+256)
  7045     00B5                     l3839:
  7046                           
  7047                           ;main.c: 51: uint8_t b1_clicked_count = 0;
  7048     00B5  0141               	movlb	1	; select bank1
  7049     00B6  01E8               	clrf	main@b1_clicked_count^(0+128)
  7050     00B7                     l3841:
  7051                           
  7052                           ;main.c: 52: uint8_t b2_clicked_count = 0;
  7053     00B7  01E7               	clrf	main@b2_clicked_count^(0+128)
  7054     00B8                     l3843:
  7055                           
  7056                           ;main.c: 56: enable_uart_printf();
  7057     00B8  3193  2380  3180   	fcall	_enable_uart_printf
  7058     00BB                     l3845:
  7059                           
  7060                           ;main.c: 57: printf("PH Probe with RS485\r\n");
  7061     00BB  30DA               	movlw	low (STR_1| (0+32768))
  7062     00BC  0140               	movlb	0	; select bank0
  7063     00BD  00B8               	movwf	printf@f
  7064     00BE  3098               	movlw	high (STR_1| (0+32768))
  7065     00BF  00B9               	movwf	printf@f+1
  7066     00C0  3184  242C  3180   	fcall	_printf
  7067     00C3                     l3847:
  7068                           
  7069                           ;main.c: 58: printf("sn: %s\r\n", "0A01820001");
  7070     00C3  306F               	movlw	low (STR_2| (0+32768))
  7071     00C4  0140               	movlb	0	; select bank0
  7072     00C5  00B8               	movwf	printf@f
  7073     00C6  3099               	movlw	high (STR_2| (0+32768))
  7074     00C7  00B9               	movwf	printf@f+1
  7075     00C8  3064               	movlw	low (STR_3| (0+32768))
  7076     00C9  00BA               	movwf	low ((?_printf| 0+2))
  7077     00CA  3099               	movlw	high (STR_3| (0+32768))
  7078     00CB  00BB               	movwf	(low ((?_printf| 0+2))+1)
  7079     00CC  3184  242C  3180   	fcall	_printf
  7080     00CF                     l3849:
  7081                           
  7082                           ;main.c: 59: _delay((unsigned long)((10)*(1000000/4000.0)));
  7083     00CF  3004               	movlw	4
  7084     00D0  0141               	movlb	1	; select bank1
  7085     00D1  00C1               	movwf	??_main^(0+128)
  7086     00D2  303D               	movlw	61
  7087     00D3                     u4077:
  7088     00D3  0B89               	decfsz	9,f
  7089     00D4  28D3               	goto	u4077
  7090     00D5  0BC1               	decfsz	??_main^(0+128),f
  7091     00D6  28D3               	goto	u4077
  7092     00D7  3200               	nop2
  7093     00D8                     l3851:
  7094                           
  7095                           ;main.c: 60: enable_tx_transmit();
  7096     00D8  3193  237B  3180   	fcall	_enable_tx_transmit
  7097     00DB                     l3853:
  7098                           
  7099                           ;main.c: 62: INTCONbits.GIE = 1;
  7100     00DB  178B               	bsf	11,7	;volatile
  7101     00DC                     l3855:
  7102                           
  7103                           ;main.c: 63: INTCONbits.PEIE = 1;
  7104     00DC  170B               	bsf	11,6	;volatile
  7105     00DD                     l3857:
  7106                           
  7107                           ;main.c: 65: ANSELAbits.ANSA4 = 0;
  7108     00DD  017E               	movlb	62	; select bank62
  7109     00DE  1238               	bcf	56,4	;volatile
  7110     00DF                     l3859:
  7111                           
  7112                           ;main.c: 66: TRISAbits.TRISA4 = 1;
  7113     00DF  0140               	movlb	0	; select bank0
  7114     00E0  1612               	bsf	18,4	;volatile
  7115     00E1                     l3861:
  7116                           
  7117                           ;main.c: 67: ANSELAbits.ANSA5 = 0;
  7118     00E1  017E               	movlb	62	; select bank62
  7119     00E2  12B8               	bcf	56,5	;volatile
  7120     00E3                     l3863:
  7121                           
  7122                           ;main.c: 68: TRISAbits.TRISA5 = 1;
  7123     00E3  0140               	movlb	0	; select bank0
  7124     00E4  1692               	bsf	18,5	;volatile
  7125     00E5                     l3865:
  7126                           
  7127                           ;main.c: 71: volatile uint16_t ph_temp = 0;
  7128     00E5  01EA               	clrf	main@ph_temp	;volatile
  7129     00E6  01EB               	clrf	main@ph_temp+1	;volatile
  7130     00E7                     l3867:
  7131                           
  7132                           ;main.c: 72: volatile uint16_t temp_temp = 0;
  7133     00E7  01EC               	clrf	main@temp_temp	;volatile
  7134     00E8  01ED               	clrf	main@temp_temp+1	;volatile
  7135     00E9                     l3869:
  7136                           
  7137                           ;main.c: 73: volatile uint16_t ph_adc_value = 0;
  7138     00E9  01EE               	clrf	main@ph_adc_value	;volatile
  7139     00EA  01EF               	clrf	main@ph_adc_value+1	;volatile
  7140     00EB                     l3871:
  7141                           
  7142                           ;main.c: 74: volatile uint16_t temp_adc_value = 0;
  7143     00EB  0141               	movlb	1	; select bank1
  7144     00EC  01D5               	clrf	main@temp_adc_value^(0+128)	;volatile
  7145     00ED  01D6               	clrf	(main@temp_adc_value+1)^(0+128)	;volatile
  7146     00EE                     l3873:
  7147                           
  7148                           ;main.c: 77: uint32_t now = get_ticks_with_lock();
  7149     00EE  3194  246C  3180   	fcall	_get_ticks_with_lock
  7150     00F1  0140               	movlb	0	; select bank0
  7151     00F2  0823               	movf	?_get_ticks_with_lock+3,w
  7152     00F3  0141               	movlb	1	; select bank1
  7153     00F4  00E6               	movwf	(main@now+3)^(0+128)
  7154     00F5  0140               	movlb	0	; select bank0
  7155     00F6  0822               	movf	?_get_ticks_with_lock+2,w
  7156     00F7  0141               	movlb	1	; select bank1
  7157     00F8  00E5               	movwf	(main@now+2)^(0+128)
  7158     00F9  0140               	movlb	0	; select bank0
  7159     00FA  0821               	movf	?_get_ticks_with_lock+1,w
  7160     00FB  0141               	movlb	1	; select bank1
  7161     00FC  00E4               	movwf	(main@now+1)^(0+128)
  7162     00FD  0140               	movlb	0	; select bank0
  7163     00FE  0820               	movf	?_get_ticks_with_lock,w
  7164     00FF  0141               	movlb	1	; select bank1
  7165     0100  00E3               	movwf	main@now^(0+128)
  7166     0101                     l3875:
  7167                           
  7168                           ;main.c: 78: static uint32_t prev_ticks_btn = 0;;main.c: 83: if(calculate_diff(now, prev
      +                          _ticks_btn) >= 20){
  7169     0101  0866               	movf	(main@now+3)^(0+128),w
  7170     0102  0140               	movlb	0	; select bank0
  7171     0103  00A7               	movwf	calculate_diff@now+3
  7172     0104  0141               	movlb	1	; select bank1
  7173     0105  0865               	movf	(main@now+2)^(0+128),w
  7174     0106  0140               	movlb	0	; select bank0
  7175     0107  00A6               	movwf	calculate_diff@now+2
  7176     0108  0141               	movlb	1	; select bank1
  7177     0109  0864               	movf	(main@now+1)^(0+128),w
  7178     010A  0140               	movlb	0	; select bank0
  7179     010B  00A5               	movwf	calculate_diff@now+1
  7180     010C  0141               	movlb	1	; select bank1
  7181     010D  0863               	movf	main@now^(0+128),w
  7182     010E  0140               	movlb	0	; select bank0
  7183     010F  00A4               	movwf	calculate_diff@now
  7184     0110  0142               	movlb	2	; select bank2
  7185     0111  0862               	movf	(main@prev_ticks_btn+3)^(0+256),w
  7186     0112  0140               	movlb	0	; select bank0
  7187     0113  00AB               	movwf	calculate_diff@prev_ticks+3
  7188     0114  0142               	movlb	2	; select bank2
  7189     0115  0861               	movf	(main@prev_ticks_btn+2)^(0+256),w
  7190     0116  0140               	movlb	0	; select bank0
  7191     0117  00AA               	movwf	calculate_diff@prev_ticks+2
  7192     0118  0142               	movlb	2	; select bank2
  7193     0119  0860               	movf	(main@prev_ticks_btn+1)^(0+256),w
  7194     011A  0140               	movlb	0	; select bank0
  7195     011B  00A9               	movwf	calculate_diff@prev_ticks+1
  7196     011C  0142               	movlb	2	; select bank2
  7197     011D  085F               	movf	main@prev_ticks_btn^(0+256),w
  7198     011E  0140               	movlb	0	; select bank0
  7199     011F  00A8               	movwf	calculate_diff@prev_ticks
  7200     0120  3196  26F3  3180   	fcall	_calculate_diff
  7201     0123  0140               	movlb	0	; select bank0
  7202     0124  0827               	movf	?_calculate_diff+3,w
  7203     0125  1D03               	btfss	3,2
  7204     0126  2933               	goto	u3850
  7205     0127  0826               	movf	?_calculate_diff+2,w
  7206     0128  1D03               	btfss	3,2
  7207     0129  2933               	goto	u3850
  7208     012A  0825               	movf	?_calculate_diff+1,w
  7209     012B  1D03               	btfss	3,2
  7210     012C  2933               	goto	u3850
  7211     012D  3014               	movlw	20
  7212     012E  0224               	subwf	?_calculate_diff,w
  7213     012F  1C03               	btfss	3,0
  7214     0130  2932               	goto	u3851
  7215     0131  2933               	goto	u3850
  7216     0132                     u3851:
  7217     0132  296D               	goto	l3883
  7218     0133                     u3850:
  7219     0133                     l3877:
  7220                           
  7221                           ;main.c: 84: prev_ticks_btn = now;
  7222     0133  0141               	movlb	1	; select bank1
  7223     0134  0866               	movf	(main@now+3)^(0+128),w
  7224     0135  0142               	movlb	2	; select bank2
  7225     0136  00E2               	movwf	(main@prev_ticks_btn+3)^(0+256)
  7226     0137  0141               	movlb	1	; select bank1
  7227     0138  0865               	movf	(main@now+2)^(0+128),w
  7228     0139  0142               	movlb	2	; select bank2
  7229     013A  00E1               	movwf	(main@prev_ticks_btn+2)^(0+256)
  7230     013B  0141               	movlb	1	; select bank1
  7231     013C  0864               	movf	(main@now+1)^(0+128),w
  7232     013D  0142               	movlb	2	; select bank2
  7233     013E  00E0               	movwf	(main@prev_ticks_btn+1)^(0+256)
  7234     013F  0141               	movlb	1	; select bank1
  7235     0140  0863               	movf	main@now^(0+128),w
  7236     0141  0142               	movlb	2	; select bank2
  7237     0142  00DF               	movwf	main@prev_ticks_btn^(0+256)
  7238     0143                     l3879:
  7239                           
  7240                           ;main.c: 85: update_mybutton(&b1, PORTAbits.RA4, get_ticks_with_lock());
  7241     0143  3000               	movlw	0
  7242     0144  0140               	movlb	0	; select bank0
  7243     0145  1A0C               	btfsc	12,4	;volatile
  7244     0146  3001               	movlw	1
  7245     0147  00B1               	movwf	update_mybutton@signal
  7246     0148  3194  246C  3180   	fcall	_get_ticks_with_lock
  7247     014B  0140               	movlb	0	; select bank0
  7248     014C  0823               	movf	?_get_ticks_with_lock+3,w
  7249     014D  00B5               	movwf	update_mybutton@now+3
  7250     014E  0822               	movf	?_get_ticks_with_lock+2,w
  7251     014F  00B4               	movwf	update_mybutton@now+2
  7252     0150  0821               	movf	?_get_ticks_with_lock+1,w
  7253     0151  00B3               	movwf	update_mybutton@now+1
  7254     0152  0820               	movf	?_get_ticks_with_lock,w
  7255     0153  00B2               	movwf	update_mybutton@now
  7256     0154  303C               	movlw	(low (main@b1| (0+256)))& (0+255)
  7257     0155  318B  2307  3180   	fcall	_update_mybutton
  7258     0158                     l3881:
  7259                           
  7260                           ;main.c: 86: update_mybutton(&b2, PORTAbits.RA5, get_ticks_with_lock());
  7261     0158  3000               	movlw	0
  7262     0159  0140               	movlb	0	; select bank0
  7263     015A  1A8C               	btfsc	12,5	;volatile
  7264     015B  3001               	movlw	1
  7265     015C  00B1               	movwf	update_mybutton@signal
  7266     015D  3194  246C  3180   	fcall	_get_ticks_with_lock
  7267     0160  0140               	movlb	0	; select bank0
  7268     0161  0823               	movf	?_get_ticks_with_lock+3,w
  7269     0162  00B5               	movwf	update_mybutton@now+3
  7270     0163  0822               	movf	?_get_ticks_with_lock+2,w
  7271     0164  00B4               	movwf	update_mybutton@now+2
  7272     0165  0821               	movf	?_get_ticks_with_lock+1,w
  7273     0166  00B3               	movwf	update_mybutton@now+1
  7274     0167  0820               	movf	?_get_ticks_with_lock,w
  7275     0168  00B2               	movwf	update_mybutton@now
  7276     0169  3021               	movlw	(low (main@b2| (0+256)))& (0+255)
  7277     016A  318B  2307  3180   	fcall	_update_mybutton
  7278     016D                     l3883:
  7279                           
  7280                           ;main.c: 87: };;main.c: 89: if( STATE_MONITORING_POWER_FOR_SYNC == state ){
  7281     016D  0142               	movlb	2	; select bank2
  7282     016E  0820               	movf	main@state^(0+256),w
  7283     016F  1D03               	btfss	3,2
  7284     0170  2972               	goto	u3861
  7285     0171  2973               	goto	u3860
  7286     0172                     u3861:
  7287     0172  2990               	goto	l3893
  7288     0173                     u3860:
  7289     0173                     l3885:
  7290                           
  7291                           ;main.c: 90: enable_uart_printf();
  7292     0173  3193  2380  3180   	fcall	_enable_uart_printf
  7293     0176                     l3887:
  7294                           
  7295                           ;main.c: 91: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  7296     0176  303C               	movlw	(low (main@b1| (0+256)))& (0+255)
  7297     0177  0140               	movlb	0	; select bank0
  7298     0178  00D8               	movwf	monitoring_sync@b1
  7299     0179  3021               	movlw	(low (main@b2| (0+256)))& (0+255)
  7300     017A  00D9               	movwf	monitoring_sync@b2
  7301     017B  30E8               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  7302     017C  00DA               	movwf	monitoring_sync@b1_clicked_count
  7303     017D  30E7               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  7304     017E  00DB               	movwf	monitoring_sync@b2_clicked_count
  7305     017F  3020               	movlw	(low (main@state| (0+256)))& (0+255)
  7306     0180  3188  2046  3180   	fcall	_monitoring_sync
  7307     0183                     l3889:
  7308                           
  7309                           ;main.c: 92: _delay((unsigned long)((10)*(1000000/4000.0)));
  7310     0183  3004               	movlw	4
  7311     0184  0141               	movlb	1	; select bank1
  7312     0185  00C1               	movwf	??_main^(0+128)
  7313     0186  303D               	movlw	61
  7314     0187                     u4087:
  7315     0187  0B89               	decfsz	9,f
  7316     0188  2987               	goto	u4087
  7317     0189  0BC1               	decfsz	??_main^(0+128),f
  7318     018A  2987               	goto	u4087
  7319     018B  3200               	nop2
  7320     018C                     l3891:
  7321                           
  7322                           ;main.c: 93: enable_tx_transmit();
  7323     018C  3193  237B  3180   	fcall	_enable_tx_transmit
  7324                           
  7325                           ;main.c: 95: } else if ( STATE_DELAY == state ){
  7326     018F  2A48               	goto	l3947
  7327     0190                     l3893:
  7328     0190  0320               	decf	main@state^(0+256),w
  7329     0191  1D03               	btfss	3,2
  7330     0192  2994               	goto	u3871
  7331     0193  2995               	goto	u3870
  7332     0194                     u3871:
  7333     0194  299A               	goto	l3897
  7334     0195                     u3870:
  7335     0195                     l3895:
  7336                           
  7337                           ;main.c: 101: delay_state(&state);
  7338     0195  3020               	movlw	(low (main@state| (0+256)))& (0+255)
  7339     0196  3196  260A  3180   	fcall	_delay_state
  7340                           
  7341                           ;main.c: 103: } else if ( STATE_MEASURE == state ){
  7342     0199  2A48               	goto	l3947
  7343     019A                     l3897:
  7344     019A  3002               	movlw	2
  7345     019B  0620               	xorwf	main@state^(0+256),w
  7346     019C  1D03               	btfss	3,2
  7347     019D  299F               	goto	u3881
  7348     019E  29A0               	goto	u3880
  7349     019F                     u3881:
  7350     019F  29D1               	goto	l3911
  7351     01A0                     u3880:
  7352     01A0                     l3899:
  7353                           
  7354                           ;main.c: 104: enable_uart_printf();
  7355     01A0  3193  2380  3180   	fcall	_enable_uart_printf
  7356     01A3                     l3901:
  7357                           
  7358                           ;main.c: 105: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  7359     01A3  303C               	movlw	(low (main@b1| (0+256)))& (0+255)
  7360     01A4  0140               	movlb	0	; select bank0
  7361     01A5  00D8               	movwf	monitoring_sync@b1
  7362     01A6  3021               	movlw	(low (main@b2| (0+256)))& (0+255)
  7363     01A7  00D9               	movwf	monitoring_sync@b2
  7364     01A8  30E8               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  7365     01A9  00DA               	movwf	monitoring_sync@b1_clicked_count
  7366     01AA  30E7               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  7367     01AB  00DB               	movwf	monitoring_sync@b2_clicked_count
  7368     01AC  3020               	movlw	(low (main@state| (0+256)))& (0+255)
  7369     01AD  3188  2046  3180   	fcall	_monitoring_sync
  7370     01B0                     l3903:
  7371                           
  7372                           ;main.c: 106: _delay((unsigned long)((10)*(1000000/4000.0)));
  7373     01B0  3004               	movlw	4
  7374     01B1  0141               	movlb	1	; select bank1
  7375     01B2  00C1               	movwf	??_main^(0+128)
  7376     01B3  303D               	movlw	61
  7377     01B4                     u4097:
  7378     01B4  0B89               	decfsz	9,f
  7379     01B5  29B4               	goto	u4097
  7380     01B6  0BC1               	decfsz	??_main^(0+128),f
  7381     01B7  29B4               	goto	u4097
  7382     01B8  3200               	nop2
  7383     01B9                     l3905:
  7384                           
  7385                           ;main.c: 107: enable_tx_transmit();
  7386     01B9  3193  237B  3180   	fcall	_enable_tx_transmit
  7387     01BC                     l3907:
  7388                           
  7389                           ;main.c: 108: measurement(&state, &sensor_value);
  7390     01BC  3066               	movlw	(low (main@sensor_value| 0))& (0+255)
  7391     01BD  0140               	movlb	0	; select bank0
  7392     01BE  00D8               	movwf	measurement@value
  7393     01BF  3020               	movlw	(low (main@state| (0+256)))& (0+255)
  7394     01C0  3195  25A5  3180   	fcall	_measurement
  7395     01C3                     l3909:
  7396                           
  7397                           ;main.c: 109: dispatch(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  7398     01C3  303C               	movlw	(low (main@b1| (0+256)))& (0+255)
  7399     01C4  0140               	movlb	0	; select bank0
  7400     01C5  00D8               	movwf	dispatch@b1
  7401     01C6  3021               	movlw	(low (main@b2| (0+256)))& (0+255)
  7402     01C7  00D9               	movwf	dispatch@b2
  7403     01C8  30E8               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  7404     01C9  00DA               	movwf	dispatch@b1_clicked_count_ptr
  7405     01CA  30E7               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  7406     01CB  00DB               	movwf	dispatch@b2_clicked_count_ptr
  7407     01CC  3020               	movlw	(low (main@state| (0+256)))& (0+255)
  7408     01CD  3197  27A3  3180   	fcall	_dispatch
  7409                           
  7410                           ;main.c: 123: } else if ( STATE_DISPATCH == state ){
  7411     01D0  2A48               	goto	l3947
  7412     01D1                     l3911:
  7413     01D1  3003               	movlw	3
  7414     01D2  0620               	xorwf	main@state^(0+256),w
  7415     01D3  1D03               	btfss	3,2
  7416     01D4  29D6               	goto	u3891
  7417     01D5  29D7               	goto	u3890
  7418     01D6                     u3891:
  7419     01D6  29E5               	goto	l3915
  7420     01D7                     u3890:
  7421     01D7                     l3913:
  7422                           
  7423                           ;main.c: 124: dispatch(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  7424     01D7  303C               	movlw	(low (main@b1| (0+256)))& (0+255)
  7425     01D8  0140               	movlb	0	; select bank0
  7426     01D9  00D8               	movwf	dispatch@b1
  7427     01DA  3021               	movlw	(low (main@b2| (0+256)))& (0+255)
  7428     01DB  00D9               	movwf	dispatch@b2
  7429     01DC  30E8               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  7430     01DD  00DA               	movwf	dispatch@b1_clicked_count_ptr
  7431     01DE  30E7               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  7432     01DF  00DB               	movwf	dispatch@b2_clicked_count_ptr
  7433     01E0  3020               	movlw	(low (main@state| (0+256)))& (0+255)
  7434     01E1  3197  27A3  3180   	fcall	_dispatch
  7435                           
  7436                           ;main.c: 126: } else if ( STATE_CALIBRATE == state ){
  7437     01E4  2A48               	goto	l3947
  7438     01E5                     l3915:
  7439     01E5  3004               	movlw	4
  7440     01E6  0620               	xorwf	main@state^(0+256),w
  7441     01E7  1D03               	btfss	3,2
  7442     01E8  29EA               	goto	u3901
  7443     01E9  29EB               	goto	u3900
  7444     01EA                     u3901:
  7445     01EA  29EC               	goto	l3919
  7446     01EB                     u3900:
  7447     01EB  2A48               	goto	l3947
  7448     01EC                     l3919:
  7449     01EC  3006               	movlw	6
  7450     01ED  0620               	xorwf	main@state^(0+256),w
  7451     01EE  1D03               	btfss	3,2
  7452     01EF  29F1               	goto	u3911
  7453     01F0  29F2               	goto	u3910
  7454     01F1                     u3911:
  7455     01F1  2A1A               	goto	l3933
  7456     01F2                     u3910:
  7457     01F2                     l3921:
  7458                           
  7459                           ;main.c: 130: enable_uart_printf();
  7460     01F2  3193  2380  3180   	fcall	_enable_uart_printf
  7461     01F5                     l3923:
  7462                           
  7463                           ;main.c: 131: printf("STATE_SAVE_TOP_CALIBRATION_POINT\r\n");
  7464     01F5  306E               	movlw	low (STR_4| (0+32768))
  7465     01F6  0140               	movlb	0	; select bank0
  7466     01F7  00B8               	movwf	printf@f
  7467     01F8  3098               	movlw	high (STR_4| (0+32768))
  7468     01F9  00B9               	movwf	printf@f+1
  7469     01FA  3184  242C  3180   	fcall	_printf
  7470     01FD                     l3925:
  7471                           
  7472                           ;main.c: 133: printf("saved\r\n");
  7473     01FD  3081               	movlw	low (STR_5| (0+32768))
  7474     01FE  0140               	movlb	0	; select bank0
  7475     01FF  00B8               	movwf	printf@f
  7476     0200  3099               	movlw	high (STR_5| (0+32768))
  7477     0201  00B9               	movwf	printf@f+1
  7478     0202  3184  242C  3180   	fcall	_printf
  7479     0205                     l3927:
  7480                           
  7481                           ;main.c: 135: printf("system hold\r\n");
  7482     0205  3031               	movlw	low (STR_6| (0+32768))
  7483     0206  0140               	movlb	0	; select bank0
  7484     0207  00B8               	movwf	printf@f
  7485     0208  3099               	movlw	high (STR_6| (0+32768))
  7486     0209  00B9               	movwf	printf@f+1
  7487     020A  3184  242C  3180   	fcall	_printf
  7488     020D                     l3929:
  7489                           
  7490                           ;main.c: 136: _delay((unsigned long)((10)*(1000000/4000.0)));
  7491     020D  3004               	movlw	4
  7492     020E  0141               	movlb	1	; select bank1
  7493     020F  00C1               	movwf	??_main^(0+128)
  7494     0210  303D               	movlw	61
  7495     0211                     u4107:
  7496     0211  0B89               	decfsz	9,f
  7497     0212  2A11               	goto	u4107
  7498     0213  0BC1               	decfsz	??_main^(0+128),f
  7499     0214  2A11               	goto	u4107
  7500     0215  3200               	nop2
  7501     0216                     l3931:
  7502                           
  7503                           ;main.c: 137: enable_tx_transmit();
  7504     0216  3193  237B  3180   	fcall	_enable_tx_transmit
  7505     0219                     l181:	
  7506                           ;main.c: 138: while(1);
  7507                           
  7508     0219                     l182:
  7509     0219  2A19               	goto	l181
  7510     021A                     l3933:
  7511     021A  3007               	movlw	7
  7512     021B  0620               	xorwf	main@state^(0+256),w
  7513     021C  1D03               	btfss	3,2
  7514     021D  2A1F               	goto	u3921
  7515     021E  2A20               	goto	u3920
  7516     021F                     u3921:
  7517     021F  2A48               	goto	l177
  7518     0220                     u3920:
  7519     0220                     l3935:
  7520                           
  7521                           ;main.c: 141: enable_uart_printf();
  7522     0220  3193  2380  3180   	fcall	_enable_uart_printf
  7523     0223                     l3937:
  7524                           
  7525                           ;main.c: 142: printf("STATE_SAVE_BOTTOM_CALIBRATION_POINT\r\n");
  7526     0223  3020               	movlw	low (STR_7| (0+32768))
  7527     0224  0140               	movlb	0	; select bank0
  7528     0225  00B8               	movwf	printf@f
  7529     0226  3098               	movlw	high (STR_7| (0+32768))
  7530     0227  00B9               	movwf	printf@f+1
  7531     0228  3184  242C  3180   	fcall	_printf
  7532     022B                     l3939:
  7533                           
  7534                           ;main.c: 144: printf("saved\r\n");
  7535     022B  3081               	movlw	low (STR_5| (0+32768))
  7536     022C  0140               	movlb	0	; select bank0
  7537     022D  00B8               	movwf	printf@f
  7538     022E  3099               	movlw	high (STR_5| (0+32768))
  7539     022F  00B9               	movwf	printf@f+1
  7540     0230  3184  242C  3180   	fcall	_printf
  7541     0233                     l3941:
  7542                           
  7543                           ;main.c: 147: printf("system hold\r\n");
  7544     0233  3031               	movlw	low (STR_6| (0+32768))
  7545     0234  0140               	movlb	0	; select bank0
  7546     0235  00B8               	movwf	printf@f
  7547     0236  3099               	movlw	high (STR_6| (0+32768))
  7548     0237  00B9               	movwf	printf@f+1
  7549     0238  3184  242C  3180   	fcall	_printf
  7550     023B                     l3943:
  7551                           
  7552                           ;main.c: 148: _delay((unsigned long)((10)*(1000000/4000.0)));
  7553     023B  3004               	movlw	4
  7554     023C  0141               	movlb	1	; select bank1
  7555     023D  00C1               	movwf	??_main^(0+128)
  7556     023E  303D               	movlw	61
  7557     023F                     u4117:
  7558     023F  0B89               	decfsz	9,f
  7559     0240  2A3F               	goto	u4117
  7560     0241  0BC1               	decfsz	??_main^(0+128),f
  7561     0242  2A3F               	goto	u4117
  7562     0243  3200               	nop2
  7563     0244                     l3945:
  7564                           
  7565                           ;main.c: 149: enable_tx_transmit();
  7566     0244  3193  237B  3180   	fcall	_enable_tx_transmit
  7567     0247                     l186:	
  7568                           ;main.c: 150: while(1);
  7569                           
  7570     0247                     l187:
  7571     0247  2A47               	goto	l186
  7572     0248                     l177:
  7573     0248                     l3947:
  7574                           
  7575                           ;main.c: 152: };;main.c: 172: if(uart_rx_package_event){
  7576     0248  0142               	movlb	2	; select bank2
  7577     0249  0863               	movf	_uart_rx_package_event^(0+256),w	;volatile
  7578     024A  1903               	btfsc	3,2
  7579     024B  2A4D               	goto	u3931
  7580     024C  2A4E               	goto	u3930
  7581     024D                     u3931:
  7582     024D  2BD2               	goto	l3995
  7583     024E                     u3930:
  7584     024E                     l3949:
  7585                           
  7586                           ;main.c: 173: uart_rx_package_event = 0;
  7587     024E  01E3               	clrf	_uart_rx_package_event^(0+256)	;volatile
  7588     024F                     l3951:
  7589     024F  0140               	movlb	0	; select bank0
  7590     0250  111A               	bcf	26,2	;volatile
  7591     0251                     l191:
  7592                           
  7593                           ;main.c: 181: rxbuffer_index = 0;
  7594     0251  01FD               	clrf	_rxbuffer_index	;volatile
  7595     0252                     l3953:
  7596                           
  7597                           ;main.c: 184: float ph = 0;
  7598     0252  3000               	movlw	0
  7599     0253  0141               	movlb	1	; select bank1
  7600     0254  00DA               	movwf	(main@ph+3)^(0+128)
  7601     0255  3000               	movlw	0
  7602     0256  00D9               	movwf	(main@ph+2)^(0+128)
  7603     0257  3000               	movlw	0
  7604     0258  00D8               	movwf	(main@ph+1)^(0+128)
  7605     0259  3000               	movlw	0
  7606     025A  00D7               	movwf	main@ph^(0+128)
  7607     025B                     l3955:
  7608                           
  7609                           ;main.c: 185: uint32_t payload = ((uint32_t)rxbuffer[5] << 24) |;main.c: 186: ((uint32_t
      +                          )rxbuffer[6]) << 16 |;main.c: 187: ((uint32_t)rxbuffer[3]) << 8 |;main.c: 188: ((uint32_
      +                          t)rxbuffer[4] << 0);
  7610     025B  0143               	movlb	3	; select bank3
  7611     025C  0824               	movf	(_rxbuffer^(0+384)+4),w	;volatile
  7612     025D  0141               	movlb	1	; select bank1
  7613     025E  00C1               	movwf	??_main^(0+128)
  7614     025F  01C2               	clrf	(??_main^(0+128)+1)
  7615     0260  01C3               	clrf	(??_main^(0+128)+2)
  7616     0261  01C4               	clrf	(??_main^(0+128)+3)
  7617     0262  0143               	movlb	3	; select bank3
  7618     0263  0823               	movf	(_rxbuffer^(0+384)+3),w	;volatile
  7619     0264  0141               	movlb	1	; select bank1
  7620     0265  00C5               	movwf	(??_main+4)^(0+128)
  7621     0266  01C6               	clrf	((??_main+4)^(0+128)+1)
  7622     0267  01C7               	clrf	((??_main+4)^(0+128)+2)
  7623     0268  01C8               	clrf	((??_main+4)^(0+128)+3)
  7624     0269  3008               	movlw	8
  7625     026A                     u3945:
  7626     026A  35C5               	lslf	(??_main+4)^(0+128),f
  7627     026B  0DC6               	rlf	((??_main+4)^(0+128)+1),f
  7628     026C  0DC7               	rlf	((??_main+4)^(0+128)+2),f
  7629     026D  0DC8               	rlf	((??_main+4)^(0+128)+3),f
  7630     026E                     u3940:
  7631     026E  0B89               	decfsz	9,f
  7632     026F  2A6A               	goto	u3945
  7633     0270  0143               	movlb	3	; select bank3
  7634     0271  0826               	movf	(_rxbuffer^(0+384)+6),w	;volatile
  7635     0272  0141               	movlb	1	; select bank1
  7636     0273  00C9               	movwf	(??_main+8)^(0+128)
  7637     0274  01CA               	clrf	((??_main+8)^(0+128)+1)
  7638     0275  01CB               	clrf	((??_main+8)^(0+128)+2)
  7639     0276  01CC               	clrf	((??_main+8)^(0+128)+3)
  7640     0277  3010               	movlw	16
  7641     0278                     u3955:
  7642     0278  35C9               	lslf	(??_main+8)^(0+128),f
  7643     0279  0DCA               	rlf	((??_main+8)^(0+128)+1),f
  7644     027A  0DCB               	rlf	((??_main+8)^(0+128)+2),f
  7645     027B  0DCC               	rlf	((??_main+8)^(0+128)+3),f
  7646     027C                     u3950:
  7647     027C  0B89               	decfsz	9,f
  7648     027D  2A78               	goto	u3955
  7649     027E  0143               	movlb	3	; select bank3
  7650     027F  0825               	movf	(_rxbuffer^(0+384)+5),w	;volatile
  7651     0280  0141               	movlb	1	; select bank1
  7652     0281  04CC               	iorwf	((??_main+8)^(0+128)+3),f
  7653     0282  0849               	movf	(??_main+8)^(0+128),w
  7654     0283  04C5               	iorwf	(??_main+4)^(0+128),f
  7655     0284  084A               	movf	(??_main+9)^(0+128),w
  7656     0285  04C6               	iorwf	((??_main+4)^(0+128)+1),f
  7657     0286  084B               	movf	(??_main+10)^(0+128),w
  7658     0287  04C7               	iorwf	((??_main+4)^(0+128)+2),f
  7659     0288  084C               	movf	(??_main+11)^(0+128),w
  7660     0289  04C8               	iorwf	((??_main+4)^(0+128)+3),f
  7661     028A  0841               	movf	??_main^(0+128),w
  7662     028B  0445               	iorwf	(??_main+4)^(0+128),w
  7663     028C  00CD               	movwf	main@payload^(0+128)
  7664     028D  0842               	movf	(??_main+1)^(0+128),w
  7665     028E  0446               	iorwf	(??_main+5)^(0+128),w
  7666     028F  00CE               	movwf	(main@payload+1)^(0+128)
  7667     0290  0843               	movf	(??_main+2)^(0+128),w
  7668     0291  0447               	iorwf	(??_main+6)^(0+128),w
  7669     0292  00CF               	movwf	(main@payload+2)^(0+128)
  7670     0293  0844               	movf	(??_main+3)^(0+128),w
  7671     0294  0448               	iorwf	(??_main+7)^(0+128),w
  7672     0295  00D0               	movwf	(main@payload+3)^(0+128)
  7673     0296                     l3957:
  7674                           
  7675                           ;main.c: 189: __builtin_memcpy(&ph,&payload,sizeof(float));
  7676     0296  30D7               	movlw	low (main@ph| 0)
  7677     0297  0086               	movwf	6
  7678     0298  0187               	clrf	7
  7679     0299  2AA8               	goto	mcp0
  7680     029A                     mcp0b:
  7681     029A  30CD               	movlw	low (main@payload| 0)
  7682     029B  0084               	movwf	4
  7683     029C  0185               	clrf	5
  7684     029D  3004               	movlw	4
  7685     029E  0141               	movlb	1	; select bank1
  7686     029F  00C1               	movwf	??_main^(0+128)
  7687     02A0  0841               	movf	??_main^(0+128),w
  7688     02A1  1903               	skipnz
  7689     02A2  2AA9               	goto	mcp0z
  7690     02A3                     u396m0:
  7691     02A3  0012               	moviw fsr0++
  7692     02A4  001E               	movwi fsr1++
  7693     02A5  0BC1               	decfsz	??_main^(0+128),f
  7694     02A6  2AA3               	goto	u396m0
  7695     02A7  2AA9               	goto	u396m1
  7696     02A8                     mcp0:
  7697     02A8  2A9A               	goto	mcp0b
  7698     02A9                     u396m1:
  7699     02A9                     mcp0z:
  7700     02A9                     l3959:
  7701                           
  7702                           ;main.c: 190: uint16_t ph2 = (uint16_t)(ph * 100);
  7703     02A9  0141               	movlb	1	; select bank1
  7704     02AA  085A               	movf	(main@ph+3)^(0+128),w
  7705     02AB  0140               	movlb	0	; select bank0
  7706     02AC  00B0               	movwf	___flmul@a+3
  7707     02AD  0141               	movlb	1	; select bank1
  7708     02AE  0859               	movf	(main@ph+2)^(0+128),w
  7709     02AF  0140               	movlb	0	; select bank0
  7710     02B0  00AF               	movwf	___flmul@a+2
  7711     02B1  0141               	movlb	1	; select bank1
  7712     02B2  0858               	movf	(main@ph+1)^(0+128),w
  7713     02B3  0140               	movlb	0	; select bank0
  7714     02B4  00AE               	movwf	___flmul@a+1
  7715     02B5  0141               	movlb	1	; select bank1
  7716     02B6  0857               	movf	main@ph^(0+128),w
  7717     02B7  0140               	movlb	0	; select bank0
  7718     02B8  00AD               	movwf	___flmul@a
  7719     02B9  3042               	movlw	66
  7720     02BA  00AC               	movwf	___flmul@b+3
  7721     02BB  30C8               	movlw	200
  7722     02BC  00AB               	movwf	___flmul@b+2
  7723     02BD  3000               	movlw	0
  7724     02BE  00AA               	movwf	___flmul@b+1
  7725     02BF  3000               	movlw	0
  7726     02C0  00A9               	movwf	___flmul@b
  7727     02C1  318D  25C5  3180   	fcall	___flmul
  7728     02C4  0140               	movlb	0	; select bank0
  7729     02C5  082C               	movf	?___flmul+3,w
  7730     02C6  00C6               	movwf	___fltol@f1+3
  7731     02C7  082B               	movf	?___flmul+2,w
  7732     02C8  00C5               	movwf	___fltol@f1+2
  7733     02C9  082A               	movf	?___flmul+1,w
  7734     02CA  00C4               	movwf	___fltol@f1+1
  7735     02CB  0829               	movf	?___flmul,w
  7736     02CC  00C3               	movwf	___fltol@f1
  7737     02CD  3188  20B6  3180   	fcall	___fltol
  7738     02D0  0140               	movlb	0	; select bank0
  7739     02D1  0844               	movf	?___fltol+1,w
  7740     02D2  0141               	movlb	1	; select bank1
  7741     02D3  00E2               	movwf	(main@ph2+1)^(0+128)
  7742     02D4  0140               	movlb	0	; select bank0
  7743     02D5  0843               	movf	?___fltol,w
  7744     02D6  0141               	movlb	1	; select bank1
  7745     02D7  00E1               	movwf	main@ph2^(0+128)
  7746     02D8                     l3961:
  7747                           
  7748                           ;main.c: 191: printf("PH: %u\r\n", ph2);
  7749     02D8  3078               	movlw	low (STR_10| (0+32768))
  7750     02D9  0140               	movlb	0	; select bank0
  7751     02DA  00B8               	movwf	printf@f
  7752     02DB  3099               	movlw	high (STR_10| (0+32768))
  7753     02DC  00B9               	movwf	printf@f+1
  7754     02DD  0141               	movlb	1	; select bank1
  7755     02DE  0862               	movf	(main@ph2+1)^(0+128),w
  7756     02DF  0140               	movlb	0	; select bank0
  7757     02E0  00BB               	movwf	?_printf+3
  7758     02E1  0141               	movlb	1	; select bank1
  7759     02E2  0861               	movf	main@ph2^(0+128),w
  7760     02E3  0140               	movlb	0	; select bank0
  7761     02E4  00BA               	movwf	?_printf+2
  7762     02E5  3184  242C  3180   	fcall	_printf
  7763     02E8                     l3963:
  7764                           
  7765                           ;main.c: 194: float temp = 0;
  7766     02E8  3000               	movlw	0
  7767     02E9  0141               	movlb	1	; select bank1
  7768     02EA  00DE               	movwf	(main@temp+3)^(0+128)
  7769     02EB  3000               	movlw	0
  7770     02EC  00DD               	movwf	(main@temp+2)^(0+128)
  7771     02ED  3000               	movlw	0
  7772     02EE  00DC               	movwf	(main@temp+1)^(0+128)
  7773     02EF  3000               	movlw	0
  7774     02F0  00DB               	movwf	main@temp^(0+128)
  7775     02F1                     l3965:
  7776                           
  7777                           ;main.c: 195: uint32_t payload_temp = ((uint32_t)rxbuffer[9] << 24) |;main.c: 196: ((uin
      +                          t32_t)rxbuffer[10]) << 16 |;main.c: 197: ((uint32_t)rxbuffer[7]) << 8 |;main.c: 198: ((u
      +                          int32_t)rxbuffer[8] << 0);
  7778     02F1  0143               	movlb	3	; select bank3
  7779     02F2  0828               	movf	(_rxbuffer^(0+384)+8),w	;volatile
  7780     02F3  0141               	movlb	1	; select bank1
  7781     02F4  00C1               	movwf	??_main^(0+128)
  7782     02F5  01C2               	clrf	(??_main^(0+128)+1)
  7783     02F6  01C3               	clrf	(??_main^(0+128)+2)
  7784     02F7  01C4               	clrf	(??_main^(0+128)+3)
  7785     02F8  0143               	movlb	3	; select bank3
  7786     02F9  0827               	movf	(_rxbuffer^(0+384)+7),w	;volatile
  7787     02FA  0141               	movlb	1	; select bank1
  7788     02FB  00C5               	movwf	(??_main+4)^(0+128)
  7789     02FC  01C6               	clrf	((??_main+4)^(0+128)+1)
  7790     02FD  01C7               	clrf	((??_main+4)^(0+128)+2)
  7791     02FE  01C8               	clrf	((??_main+4)^(0+128)+3)
  7792     02FF  3008               	movlw	8
  7793     0300                     u3975:
  7794     0300  35C5               	lslf	(??_main+4)^(0+128),f
  7795     0301  0DC6               	rlf	((??_main+4)^(0+128)+1),f
  7796     0302  0DC7               	rlf	((??_main+4)^(0+128)+2),f
  7797     0303  0DC8               	rlf	((??_main+4)^(0+128)+3),f
  7798     0304                     u3970:
  7799     0304  0B89               	decfsz	9,f
  7800     0305  2B00               	goto	u3975
  7801     0306  0143               	movlb	3	; select bank3
  7802     0307  082A               	movf	(_rxbuffer^(0+384)+10),w	;volatile
  7803     0308  0141               	movlb	1	; select bank1
  7804     0309  00C9               	movwf	(??_main+8)^(0+128)
  7805     030A  01CA               	clrf	((??_main+8)^(0+128)+1)
  7806     030B  01CB               	clrf	((??_main+8)^(0+128)+2)
  7807     030C  01CC               	clrf	((??_main+8)^(0+128)+3)
  7808     030D  3010               	movlw	16
  7809     030E                     u3985:
  7810     030E  35C9               	lslf	(??_main+8)^(0+128),f
  7811     030F  0DCA               	rlf	((??_main+8)^(0+128)+1),f
  7812     0310  0DCB               	rlf	((??_main+8)^(0+128)+2),f
  7813     0311  0DCC               	rlf	((??_main+8)^(0+128)+3),f
  7814     0312                     u3980:
  7815     0312  0B89               	decfsz	9,f
  7816     0313  2B0E               	goto	u3985
  7817     0314  0143               	movlb	3	; select bank3
  7818     0315  0829               	movf	(_rxbuffer^(0+384)+9),w	;volatile
  7819     0316  0141               	movlb	1	; select bank1
  7820     0317  04CC               	iorwf	((??_main+8)^(0+128)+3),f
  7821     0318  0849               	movf	(??_main+8)^(0+128),w
  7822     0319  04C5               	iorwf	(??_main+4)^(0+128),f
  7823     031A  084A               	movf	(??_main+9)^(0+128),w
  7824     031B  04C6               	iorwf	((??_main+4)^(0+128)+1),f
  7825     031C  084B               	movf	(??_main+10)^(0+128),w
  7826     031D  04C7               	iorwf	((??_main+4)^(0+128)+2),f
  7827     031E  084C               	movf	(??_main+11)^(0+128),w
  7828     031F  04C8               	iorwf	((??_main+4)^(0+128)+3),f
  7829     0320  0841               	movf	??_main^(0+128),w
  7830     0321  0445               	iorwf	(??_main+4)^(0+128),w
  7831     0322  00D1               	movwf	main@payload_temp^(0+128)
  7832     0323  0842               	movf	(??_main+1)^(0+128),w
  7833     0324  0446               	iorwf	(??_main+5)^(0+128),w
  7834     0325  00D2               	movwf	(main@payload_temp+1)^(0+128)
  7835     0326  0843               	movf	(??_main+2)^(0+128),w
  7836     0327  0447               	iorwf	(??_main+6)^(0+128),w
  7837     0328  00D3               	movwf	(main@payload_temp+2)^(0+128)
  7838     0329  0844               	movf	(??_main+3)^(0+128),w
  7839     032A  0448               	iorwf	(??_main+7)^(0+128),w
  7840     032B  00D4               	movwf	(main@payload_temp+3)^(0+128)
  7841     032C                     l3967:
  7842                           
  7843                           ;main.c: 199: __builtin_memcpy(&temp,&payload_temp,sizeof(float));
  7844     032C  30DB               	movlw	low (main@temp| 0)
  7845     032D  0086               	movwf	6
  7846     032E  0187               	clrf	7
  7847     032F  2B3E               	goto	mcp1
  7848     0330                     mcp1b:
  7849     0330  30D1               	movlw	low (main@payload_temp| 0)
  7850     0331  0084               	movwf	4
  7851     0332  0185               	clrf	5
  7852     0333  3004               	movlw	4
  7853     0334  0141               	movlb	1	; select bank1
  7854     0335  00C1               	movwf	??_main^(0+128)
  7855     0336  0841               	movf	??_main^(0+128),w
  7856     0337  1903               	skipnz
  7857     0338  2B3F               	goto	mcp1z
  7858     0339                     u399m0:
  7859     0339  0012               	moviw fsr0++
  7860     033A  001E               	movwi fsr1++
  7861     033B  0BC1               	decfsz	??_main^(0+128),f
  7862     033C  2B39               	goto	u399m0
  7863     033D  2B3F               	goto	u399m1
  7864     033E                     mcp1:
  7865     033E  2B30               	goto	mcp1b
  7866     033F                     u399m1:
  7867     033F                     mcp1z:
  7868     033F                     l3969:
  7869                           
  7870                           ;main.c: 200: uint16_t temp2 = (uint16_t)(temp * 100);
  7871     033F  0141               	movlb	1	; select bank1
  7872     0340  085E               	movf	(main@temp+3)^(0+128),w
  7873     0341  0140               	movlb	0	; select bank0
  7874     0342  00B0               	movwf	___flmul@a+3
  7875     0343  0141               	movlb	1	; select bank1
  7876     0344  085D               	movf	(main@temp+2)^(0+128),w
  7877     0345  0140               	movlb	0	; select bank0
  7878     0346  00AF               	movwf	___flmul@a+2
  7879     0347  0141               	movlb	1	; select bank1
  7880     0348  085C               	movf	(main@temp+1)^(0+128),w
  7881     0349  0140               	movlb	0	; select bank0
  7882     034A  00AE               	movwf	___flmul@a+1
  7883     034B  0141               	movlb	1	; select bank1
  7884     034C  085B               	movf	main@temp^(0+128),w
  7885     034D  0140               	movlb	0	; select bank0
  7886     034E  00AD               	movwf	___flmul@a
  7887     034F  3042               	movlw	66
  7888     0350  00AC               	movwf	___flmul@b+3
  7889     0351  30C8               	movlw	200
  7890     0352  00AB               	movwf	___flmul@b+2
  7891     0353  3000               	movlw	0
  7892     0354  00AA               	movwf	___flmul@b+1
  7893     0355  3000               	movlw	0
  7894     0356  00A9               	movwf	___flmul@b
  7895     0357  318D  25C5  3180   	fcall	___flmul
  7896     035A  0140               	movlb	0	; select bank0
  7897     035B  082C               	movf	?___flmul+3,w
  7898     035C  00C6               	movwf	___fltol@f1+3
  7899     035D  082B               	movf	?___flmul+2,w
  7900     035E  00C5               	movwf	___fltol@f1+2
  7901     035F  082A               	movf	?___flmul+1,w
  7902     0360  00C4               	movwf	___fltol@f1+1
  7903     0361  0829               	movf	?___flmul,w
  7904     0362  00C3               	movwf	___fltol@f1
  7905     0363  3188  20B6  3180   	fcall	___fltol
  7906     0366  0140               	movlb	0	; select bank0
  7907     0367  0844               	movf	?___fltol+1,w
  7908     0368  0141               	movlb	1	; select bank1
  7909     0369  00E0               	movwf	(main@temp2+1)^(0+128)
  7910     036A  0140               	movlb	0	; select bank0
  7911     036B  0843               	movf	?___fltol,w
  7912     036C  0141               	movlb	1	; select bank1
  7913     036D  00DF               	movwf	main@temp2^(0+128)
  7914     036E                     l3971:
  7915                           
  7916                           ;main.c: 201: printf("TEMP: %u\r\n", temp2);
  7917     036E  3059               	movlw	low (STR_11| (0+32768))
  7918     036F  0140               	movlb	0	; select bank0
  7919     0370  00B8               	movwf	printf@f
  7920     0371  3099               	movlw	high (STR_11| (0+32768))
  7921     0372  00B9               	movwf	printf@f+1
  7922     0373  0141               	movlb	1	; select bank1
  7923     0374  0860               	movf	(main@temp2+1)^(0+128),w
  7924     0375  0140               	movlb	0	; select bank0
  7925     0376  00BB               	movwf	?_printf+3
  7926     0377  0141               	movlb	1	; select bank1
  7927     0378  085F               	movf	main@temp2^(0+128),w
  7928     0379  0140               	movlb	0	; select bank0
  7929     037A  00BA               	movwf	?_printf+2
  7930     037B  3184  242C  3180   	fcall	_printf
  7931     037E                     l3973:
  7932                           
  7933                           ;main.c: 205: Enable_Global_Interrupt();
  7934     037E  3180  2002  3180   	fcall	_Enable_Global_Interrupt
  7935     0381                     l3975:
  7936                           
  7937                           ;main.c: 206: i2c_slave_set_register(0x00, (uint8_t)(ph2 >> 8) & 0xFF);
  7938     0381  0141               	movlb	1	; select bank1
  7939     0382  0862               	movf	(main@ph2+1)^(0+128),w
  7940     0383  0140               	movlb	0	; select bank0
  7941     0384  00A0               	movwf	i2c_slave_set_register@value
  7942     0385  3000               	movlw	0
  7943     0386  3193  23E9  3180   	fcall	_i2c_slave_set_register
  7944     0389                     l3977:
  7945                           
  7946                           ;main.c: 207: i2c_slave_set_register(0x01, (uint8_t)(ph2 >> 0) & 0xFF);
  7947     0389  0141               	movlb	1	; select bank1
  7948     038A  0861               	movf	main@ph2^(0+128),w
  7949     038B  0140               	movlb	0	; select bank0
  7950     038C  00A0               	movwf	i2c_slave_set_register@value
  7951     038D  3001               	movlw	1
  7952     038E  3193  23E9  3180   	fcall	_i2c_slave_set_register
  7953     0391                     l3979:
  7954                           
  7955                           ;main.c: 208: i2c_slave_set_register(0x02, (uint8_t)(temp2 >> 8) & 0xFF);
  7956     0391  0141               	movlb	1	; select bank1
  7957     0392  0860               	movf	(main@temp2+1)^(0+128),w
  7958     0393  0140               	movlb	0	; select bank0
  7959     0394  00A0               	movwf	i2c_slave_set_register@value
  7960     0395  3002               	movlw	2
  7961     0396  3193  23E9  3180   	fcall	_i2c_slave_set_register
  7962     0399                     l3981:
  7963                           
  7964                           ;main.c: 209: i2c_slave_set_register(0x03, (uint8_t)(temp2 >> 0) & 0xFF);
  7965     0399  0141               	movlb	1	; select bank1
  7966     039A  085F               	movf	main@temp2^(0+128),w
  7967     039B  0140               	movlb	0	; select bank0
  7968     039C  00A0               	movwf	i2c_slave_set_register@value
  7969     039D  3003               	movlw	3
  7970     039E  3193  23E9  3180   	fcall	_i2c_slave_set_register
  7971     03A1                     l3983:
  7972                           
  7973                           ;main.c: 210: Disable_Global_Interrupt();
  7974     03A1  3188  2000  3180   	fcall	_Disable_Global_Interrupt
  7975     03A4                     l3985:
  7976                           
  7977                           ;main.c: 215: enable_uart_printf();
  7978     03A4  3193  2380  3180   	fcall	_enable_uart_printf
  7979     03A7                     l3987:
  7980                           
  7981                           ;main.c: 216: dump_memory_map();
  7982     03A7  3193  23DF  3180   	fcall	_dump_memory_map
  7983     03AA                     l3989:
  7984                           
  7985                           ;main.c: 217: printf("[%lu] PH: %u (0.01*unit)\r\n", get_ticks(), ph2);
  7986     03AA  3091               	movlw	low (STR_12| (0+32768))
  7987     03AB  0140               	movlb	0	; select bank0
  7988     03AC  00B8               	movwf	printf@f
  7989     03AD  3098               	movlw	high (STR_12| (0+32768))
  7990     03AE  00B9               	movwf	printf@f+1
  7991     03AF  3193  23D5  3180   	fcall	_get_ticks
  7992     03B2  0140               	movlb	0	; select bank0
  7993     03B3  0823               	movf	?_get_ticks+3,w
  7994     03B4  00BD               	movwf	?_printf+5
  7995     03B5  0822               	movf	?_get_ticks+2,w
  7996     03B6  00BC               	movwf	?_printf+4
  7997     03B7  0821               	movf	?_get_ticks+1,w
  7998     03B8  00BB               	movwf	?_printf+3
  7999     03B9  0820               	movf	?_get_ticks,w
  8000     03BA  00BA               	movwf	?_printf+2
  8001     03BB  0141               	movlb	1	; select bank1
  8002     03BC  0862               	movf	(main@ph2+1)^(0+128),w
  8003     03BD  0140               	movlb	0	; select bank0
  8004     03BE  00BF               	movwf	?_printf+7
  8005     03BF  0141               	movlb	1	; select bank1
  8006     03C0  0861               	movf	main@ph2^(0+128),w
  8007     03C1  0140               	movlb	0	; select bank0
  8008     03C2  00BE               	movwf	?_printf+6
  8009     03C3  3184  242C  3180   	fcall	_printf
  8010     03C6                     l3991:
  8011                           
  8012                           ;main.c: 218: _delay((unsigned long)((10)*(1000000/4000.0)));
  8013     03C6  3004               	movlw	4
  8014     03C7  0141               	movlb	1	; select bank1
  8015     03C8  00C1               	movwf	??_main^(0+128)
  8016     03C9  303D               	movlw	61
  8017     03CA                     u4127:
  8018     03CA  0B89               	decfsz	9,f
  8019     03CB  2BCA               	goto	u4127
  8020     03CC  0BC1               	decfsz	??_main^(0+128),f
  8021     03CD  2BCA               	goto	u4127
  8022     03CE  3200               	nop2
  8023     03CF                     l3993:
  8024                           
  8025                           ;main.c: 219: enable_tx_transmit();
  8026     03CF  3193  237B  3180   	fcall	_enable_tx_transmit
  8027     03D2                     l3995:
  8028                           
  8029                           ;main.c: 221: };;main.c: 223: now = get_ticks_with_lock();
  8030     03D2  3194  246C  3180   	fcall	_get_ticks_with_lock
  8031     03D5  0140               	movlb	0	; select bank0
  8032     03D6  0823               	movf	?_get_ticks_with_lock+3,w
  8033     03D7  0141               	movlb	1	; select bank1
  8034     03D8  00E6               	movwf	(main@now+3)^(0+128)
  8035     03D9  0140               	movlb	0	; select bank0
  8036     03DA  0822               	movf	?_get_ticks_with_lock+2,w
  8037     03DB  0141               	movlb	1	; select bank1
  8038     03DC  00E5               	movwf	(main@now+2)^(0+128)
  8039     03DD  0140               	movlb	0	; select bank0
  8040     03DE  0821               	movf	?_get_ticks_with_lock+1,w
  8041     03DF  0141               	movlb	1	; select bank1
  8042     03E0  00E4               	movwf	(main@now+1)^(0+128)
  8043     03E1  0140               	movlb	0	; select bank0
  8044     03E2  0820               	movf	?_get_ticks_with_lock,w
  8045     03E3  0141               	movlb	1	; select bank1
  8046     03E4  00E3               	movwf	main@now^(0+128)
  8047     03E5                     l3997:
  8048                           
  8049                           ;main.c: 224: static uint32_t prev_ticks2 = 0;;main.c: 225: if(calculate_diff(now, prev_
      +                          ticks2) >= 2000){
  8050     03E5  0866               	movf	(main@now+3)^(0+128),w
  8051     03E6  0140               	movlb	0	; select bank0
  8052     03E7  00A7               	movwf	calculate_diff@now+3
  8053     03E8  0141               	movlb	1	; select bank1
  8054     03E9  0865               	movf	(main@now+2)^(0+128),w
  8055     03EA  0140               	movlb	0	; select bank0
  8056     03EB  00A6               	movwf	calculate_diff@now+2
  8057     03EC  0141               	movlb	1	; select bank1
  8058     03ED  0864               	movf	(main@now+1)^(0+128),w
  8059     03EE  0140               	movlb	0	; select bank0
  8060     03EF  00A5               	movwf	calculate_diff@now+1
  8061     03F0  0141               	movlb	1	; select bank1
  8062     03F1  0863               	movf	main@now^(0+128),w
  8063     03F2  0140               	movlb	0	; select bank0
  8064     03F3  00A4               	movwf	calculate_diff@now
  8065     03F4  0142               	movlb	2	; select bank2
  8066     03F5  085E               	movf	(main@prev_ticks2+3)^(0+256),w
  8067     03F6  0140               	movlb	0	; select bank0
  8068     03F7  00AB               	movwf	calculate_diff@prev_ticks+3
  8069     03F8  0142               	movlb	2	; select bank2
  8070     03F9  085D               	movf	(main@prev_ticks2+2)^(0+256),w
  8071     03FA  0140               	movlb	0	; select bank0
  8072     03FB  00AA               	movwf	calculate_diff@prev_ticks+2
  8073     03FC  0142               	movlb	2	; select bank2
  8074     03FD  085C               	movf	(main@prev_ticks2+1)^(0+256),w
  8075     03FE  0140               	movlb	0	; select bank0
  8076     03FF  00A9               	movwf	calculate_diff@prev_ticks+1
  8077     0400  0142               	movlb	2	; select bank2
  8078     0401  085B               	movf	main@prev_ticks2^(0+256),w
  8079     0402  0140               	movlb	0	; select bank0
  8080     0403  00A8               	movwf	calculate_diff@prev_ticks
  8081     0404  3196  26F3  3180   	fcall	_calculate_diff
  8082     0407  0140               	movlb	0	; select bank0
  8083     0408  0827               	movf	?_calculate_diff+3,w
  8084     0409  1D03               	btfss	3,2
  8085     040A  2C16               	goto	u4000
  8086     040B  0826               	movf	?_calculate_diff+2,w
  8087     040C  1D03               	btfss	3,2
  8088     040D  2C16               	goto	u4000
  8089     040E  30D0               	movlw	208
  8090     040F  0224               	subwf	?_calculate_diff,w
  8091     0410  3007               	movlw	7
  8092     0411  3B25               	subwfb	?_calculate_diff+1,w
  8093     0412  1C03               	btfss	3,0
  8094     0413  2C15               	goto	u4001
  8095     0414  2C16               	goto	u4000
  8096     0415                     u4001:
  8097     0415  28EE               	goto	l3873
  8098     0416                     u4000:
  8099     0416                     l3999:
  8100                           
  8101                           ;main.c: 226: prev_ticks2 = now;
  8102     0416  0141               	movlb	1	; select bank1
  8103     0417  0866               	movf	(main@now+3)^(0+128),w
  8104     0418  0142               	movlb	2	; select bank2
  8105     0419  00DE               	movwf	(main@prev_ticks2+3)^(0+256)
  8106     041A  0141               	movlb	1	; select bank1
  8107     041B  0865               	movf	(main@now+2)^(0+128),w
  8108     041C  0142               	movlb	2	; select bank2
  8109     041D  00DD               	movwf	(main@prev_ticks2+2)^(0+256)
  8110     041E  0141               	movlb	1	; select bank1
  8111     041F  0864               	movf	(main@now+1)^(0+128),w
  8112     0420  0142               	movlb	2	; select bank2
  8113     0421  00DC               	movwf	(main@prev_ticks2+1)^(0+256)
  8114     0422  0141               	movlb	1	; select bank1
  8115     0423  0863               	movf	main@now^(0+128),w
  8116     0424  0142               	movlb	2	; select bank2
  8117     0425  00DB               	movwf	main@prev_ticks2^(0+256)
  8118     0426                     l4001:
  8119                           
  8120                           ;main.c: 227: set_device_serial_number_to_i2c_slave_memorymap();
  8121     0426  3188  2008  3180   	fcall	_set_device_serial_number_to_i2c_slave_memorymap
  8122     0429  28EE               	goto	l3873
  8123     042A  3180  2867         	ljmp	start
  8124     042C                     __end_of_main:
  8125                           
  8126                           	psect	text1
  8127     1423                     __ptext1:	
  8128 ;; *************** function _usart_init *****************
  8129 ;; Defined at:
  8130 ;;		line 13 in file "uart.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;		None
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;		None
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  1    wreg      void 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;Total ram usage:        0 bytes
  8149 ;; Hardware stack levels used: 1
  8150 ;; Hardware stack levels required when called: 2
  8151 ;; This function calls:
  8152 ;;		Nothing
  8153 ;; This function is called by:
  8154 ;;		_main
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158     1423                     _usart_init:	
  8159                           ;psect for function _usart_init
  8160                           
  8161     1423                     l3399:	
  8162                           ;incstack = 0
  8163                           ; Regs used in _usart_init: [wreg+status,2]
  8164                           
  8165                           
  8166                           ;uart.c: 14: PIE3bits.RC1IE = 0;
  8167     1423  014E               	movlb	14	; select bank14
  8168     1424  1299               	bcf	25,5	;volatile
  8169                           
  8170                           ;uart.c: 15: PIE3bits.TX1IE = 0;
  8171     1425  1219               	bcf	25,4	;volatile
  8172     1426                     l3401:
  8173                           
  8174                           ;uart.c: 18: BAUD1CON = 0x08;
  8175     1426  3008               	movlw	8
  8176     1427  0142               	movlb	2	; select bank2
  8177     1428  009F               	movwf	31	;volatile
  8178                           
  8179                           ;uart.c: 19: SP1BRGL = 0x19;
  8180     1429  3019               	movlw	25
  8181     142A  009B               	movwf	27	;volatile
  8182     142B                     l3403:
  8183                           
  8184                           ;uart.c: 20: SP1BRGH = 0x00;
  8185     142B  019C               	clrf	28	;volatile
  8186     142C                     l3405:
  8187                           
  8188                           ;uart.c: 22: TX1STA = 0x24;
  8189     142C  3024               	movlw	36
  8190     142D  009E               	movwf	30	;volatile
  8191     142E                     l3407:
  8192                           
  8193                           ;uart.c: 23: RC1STA = 0x90;
  8194     142E  3090               	movlw	144
  8195     142F  009D               	movwf	29	;volatile
  8196     1430                     l3409:
  8197                           
  8198                           ;uart.c: 25: PIE3bits.RC1IE = 1;
  8199     1430  014E               	movlb	14	; select bank14
  8200     1431  1699               	bsf	25,5	;volatile
  8201     1432                     l443:
  8202     1432  0008               	return
  8203     1433                     __end_of_usart_init:
  8204                           
  8205                           	psect	text2
  8206     0B07                     __ptext2:	
  8207 ;; *************** function _update_mybutton *****************
  8208 ;; Defined at:
  8209 ;;		line 100 in file "mybutton.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;  b               1    wreg     PTR struct mybutton
  8212 ;;		 -> main@b2(27), main@b1(27), 
  8213 ;;  signal          1   17[BANK0 ] unsigned char 
  8214 ;;  now             4   18[BANK0 ] unsigned long 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  b               1   26[BANK0 ] PTR struct mybutton
  8217 ;;		 -> main@b2(27), main@b1(27), 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      void 
  8220 ;; Registers used:
  8221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8227 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;Total ram usage:       10 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; Hardware stack levels required when called: 3
  8234 ;; This function calls:
  8235 ;;		___is_double_click
  8236 ;;		___is_long_press
  8237 ;;		___is_single_click
  8238 ;; This function is called by:
  8239 ;;		_main
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243     0B07                     _update_mybutton:	
  8244                           ;psect for function _update_mybutton
  8245                           
  8246                           
  8247                           ;incstack = 0
  8248                           ; Regs used in _update_mybutton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8249                           ;update_mybutton@b stored from wreg
  8250     0B07  0140               	movlb	0	; select bank0
  8251     0B08  00BA               	movwf	update_mybutton@b
  8252     0B09                     l3471:
  8253                           
  8254                           ;mybutton.c: 102: b->signals[0] = b->signals[1];
  8255     0B09  083A               	movf	update_mybutton@b,w
  8256     0B0A  0086               	movwf	6
  8257     0B0B  3001               	movlw	1	; select bank2/3
  8258     0B0C  0087               	movwf	7
  8259     0B0D  0A3A               	incf	update_mybutton@b,w
  8260     0B0E  0084               	movwf	4
  8261     0B0F  3001               	movlw	1	; select bank2/3
  8262     0B10  0085               	movwf	5
  8263     0B11  0800               	movf	0,w
  8264     0B12  0081               	movwf	1
  8265     0B13                     l3473:
  8266                           
  8267                           ;mybutton.c: 103: b->signals[1] = signal;
  8268     0B13  0A3A               	incf	update_mybutton@b,w
  8269     0B14  0086               	movwf	6
  8270     0B15  3001               	movlw	1	; select bank2/3
  8271     0B16  0087               	movwf	7
  8272     0B17  0831               	movf	update_mybutton@signal,w
  8273     0B18  0081               	movwf	1
  8274     0B19                     l3475:
  8275                           
  8276                           ;mybutton.c: 105: if( 1 == b->signals[0] && 0 == b->signals[1] ){
  8277     0B19  083A               	movf	update_mybutton@b,w
  8278     0B1A  0086               	movwf	6
  8279     0B1B  3001               	movlw	1	; select bank2/3
  8280     0B1C  0087               	movwf	7
  8281     0B1D  0301               	decf	1,w
  8282     0B1E  1D03               	btfss	3,2
  8283     0B1F  2B21               	goto	u3261
  8284     0B20  2B22               	goto	u3260
  8285     0B21                     u3261:
  8286     0B21  2B52               	goto	l363
  8287     0B22                     u3260:
  8288     0B22                     l3477:
  8289     0B22  0A3A               	incf	update_mybutton@b,w
  8290     0B23  0086               	movwf	6
  8291     0B24  3001               	movlw	1	; select bank2/3
  8292     0B25  0087               	movwf	7
  8293     0B26  0801               	movf	1,w
  8294     0B27  1D03               	btfss	3,2
  8295     0B28  2B2A               	goto	u3271
  8296     0B29  2B2B               	goto	u3270
  8297     0B2A                     u3271:
  8298     0B2A  2B52               	goto	l363
  8299     0B2B                     u3270:
  8300     0B2B                     l3479:
  8301                           
  8302                           ;mybutton.c: 106: b->falling_ts[0] = b->falling_ts[1];
  8303     0B2B  083A               	movf	update_mybutton@b,w
  8304     0B2C  3E06               	addlw	6
  8305     0B2D  0086               	movwf	6
  8306     0B2E  3001               	movlw	1	; select bank2/3
  8307     0B2F  0087               	movwf	7
  8308     0B30  3F40               	moviw [0]fsr1
  8309     0B31  00B6               	movwf	??_update_mybutton
  8310     0B32  3F41               	moviw [1]fsr1
  8311     0B33  00B7               	movwf	??_update_mybutton+1
  8312     0B34  3F42               	moviw [2]fsr1
  8313     0B35  00B8               	movwf	??_update_mybutton+2
  8314     0B36  3F43               	moviw [3]fsr1
  8315     0B37  00B9               	movwf	??_update_mybutton+3
  8316     0B38  083A               	movf	update_mybutton@b,w
  8317     0B39  3E02               	addlw	2
  8318     0B3A  0086               	movwf	6
  8319     0B3B  3001               	movlw	1	; select bank2/3
  8320     0B3C  0087               	movwf	7
  8321     0B3D  0836               	movf	??_update_mybutton,w
  8322     0B3E  3FC0               	movwi [0]fsr1
  8323     0B3F  0837               	movf	??_update_mybutton+1,w
  8324     0B40  3FC1               	movwi [1]fsr1
  8325     0B41  0838               	movf	??_update_mybutton+2,w
  8326     0B42  3FC2               	movwi [2]fsr1
  8327     0B43  0839               	movf	??_update_mybutton+3,w
  8328     0B44  3FC3               	movwi [3]fsr1
  8329                           
  8330                           ;mybutton.c: 107: b->falling_ts[1] = now;
  8331     0B45  083A               	movf	update_mybutton@b,w
  8332     0B46  3E06               	addlw	6
  8333     0B47  0086               	movwf	6
  8334     0B48  3001               	movlw	1	; select bank2/3
  8335     0B49  0087               	movwf	7
  8336     0B4A  0832               	movf	update_mybutton@now,w
  8337     0B4B  3FC0               	movwi [0]fsr1
  8338     0B4C  0833               	movf	update_mybutton@now+1,w
  8339     0B4D  3FC1               	movwi [1]fsr1
  8340     0B4E  0834               	movf	update_mybutton@now+2,w
  8341     0B4F  3FC2               	movwi [2]fsr1
  8342     0B50  0835               	movf	update_mybutton@now+3,w
  8343     0B51  3FC3               	movwi [3]fsr1
  8344     0B52                     l363:
  8345                           
  8346                           ;mybutton.c: 108: };mybutton.c: 110: if( 0 == b->signals[0] && 1 == b->signals[1] ){
  8347     0B52  083A               	movf	update_mybutton@b,w
  8348     0B53  0086               	movwf	6
  8349     0B54  3001               	movlw	1	; select bank2/3
  8350     0B55  0087               	movwf	7
  8351     0B56  0801               	movf	1,w
  8352     0B57  1D03               	btfss	3,2
  8353     0B58  2B5A               	goto	u3281
  8354     0B59  2B5B               	goto	u3280
  8355     0B5A                     u3281:
  8356     0B5A  2B8B               	goto	l3485
  8357     0B5B                     u3280:
  8358     0B5B                     l3481:
  8359     0B5B  0A3A               	incf	update_mybutton@b,w
  8360     0B5C  0086               	movwf	6
  8361     0B5D  3001               	movlw	1	; select bank2/3
  8362     0B5E  0087               	movwf	7
  8363     0B5F  0301               	decf	1,w
  8364     0B60  1D03               	btfss	3,2
  8365     0B61  2B63               	goto	u3291
  8366     0B62  2B64               	goto	u3290
  8367     0B63                     u3291:
  8368     0B63  2B8B               	goto	l3485
  8369     0B64                     u3290:
  8370     0B64                     l3483:
  8371                           
  8372                           ;mybutton.c: 111: b->rising_ts[0] = b->rising_ts[1];
  8373     0B64  083A               	movf	update_mybutton@b,w
  8374     0B65  3E0E               	addlw	14
  8375     0B66  0086               	movwf	6
  8376     0B67  3001               	movlw	1	; select bank2/3
  8377     0B68  0087               	movwf	7
  8378     0B69  3F40               	moviw [0]fsr1
  8379     0B6A  00B6               	movwf	??_update_mybutton
  8380     0B6B  3F41               	moviw [1]fsr1
  8381     0B6C  00B7               	movwf	??_update_mybutton+1
  8382     0B6D  3F42               	moviw [2]fsr1
  8383     0B6E  00B8               	movwf	??_update_mybutton+2
  8384     0B6F  3F43               	moviw [3]fsr1
  8385     0B70  00B9               	movwf	??_update_mybutton+3
  8386     0B71  083A               	movf	update_mybutton@b,w
  8387     0B72  3E0A               	addlw	10
  8388     0B73  0086               	movwf	6
  8389     0B74  3001               	movlw	1	; select bank2/3
  8390     0B75  0087               	movwf	7
  8391     0B76  0836               	movf	??_update_mybutton,w
  8392     0B77  3FC0               	movwi [0]fsr1
  8393     0B78  0837               	movf	??_update_mybutton+1,w
  8394     0B79  3FC1               	movwi [1]fsr1
  8395     0B7A  0838               	movf	??_update_mybutton+2,w
  8396     0B7B  3FC2               	movwi [2]fsr1
  8397     0B7C  0839               	movf	??_update_mybutton+3,w
  8398     0B7D  3FC3               	movwi [3]fsr1
  8399                           
  8400                           ;mybutton.c: 112: b->rising_ts[1] = now;
  8401     0B7E  083A               	movf	update_mybutton@b,w
  8402     0B7F  3E0E               	addlw	14
  8403     0B80  0086               	movwf	6
  8404     0B81  3001               	movlw	1	; select bank2/3
  8405     0B82  0087               	movwf	7
  8406     0B83  0832               	movf	update_mybutton@now,w
  8407     0B84  3FC0               	movwi [0]fsr1
  8408     0B85  0833               	movf	update_mybutton@now+1,w
  8409     0B86  3FC1               	movwi [1]fsr1
  8410     0B87  0834               	movf	update_mybutton@now+2,w
  8411     0B88  3FC2               	movwi [2]fsr1
  8412     0B89  0835               	movf	update_mybutton@now+3,w
  8413     0B8A  3FC3               	movwi [3]fsr1
  8414     0B8B                     l3485:
  8415                           
  8416                           ;mybutton.c: 113: };mybutton.c: 115: if( __is_single_click(b, now) ){
  8417     0B8B  0835               	movf	update_mybutton@now+3,w
  8418     0B8C  00A3               	movwf	___is_single_click@now+3
  8419     0B8D  0834               	movf	update_mybutton@now+2,w
  8420     0B8E  00A2               	movwf	___is_single_click@now+2
  8421     0B8F  0833               	movf	update_mybutton@now+1,w
  8422     0B90  00A1               	movwf	___is_single_click@now+1
  8423     0B91  0832               	movf	update_mybutton@now,w
  8424     0B92  00A0               	movwf	___is_single_click@now
  8425     0B93  083A               	movf	update_mybutton@b,w
  8426     0B94  3186  26D1  318B   	fcall	___is_single_click
  8427     0B97  3A00               	xorlw	0
  8428     0B98  1903               	skipnz
  8429     0B99  2B9B               	goto	u3301
  8430     0B9A  2B9C               	goto	u3300
  8431     0B9B                     u3301:
  8432     0B9B  2BA4               	goto	l3489
  8433     0B9C                     u3300:
  8434     0B9C                     l3487:
  8435                           
  8436                           ;mybutton.c: 116: b->single_clicked_flag = 1;
  8437     0B9C  0140               	movlb	0	; select bank0
  8438     0B9D  083A               	movf	update_mybutton@b,w
  8439     0B9E  3E18               	addlw	24
  8440     0B9F  0086               	movwf	6
  8441     0BA0  3001               	movlw	1	; select bank2/3
  8442     0BA1  0087               	movwf	7
  8443     0BA2  0181               	clrf	1
  8444     0BA3  0A81               	incf	1,f
  8445     0BA4                     l3489:
  8446                           
  8447                           ;mybutton.c: 117: };mybutton.c: 119: if( __is_double_click(b, now) ){
  8448     0BA4  0140               	movlb	0	; select bank0
  8449     0BA5  0835               	movf	update_mybutton@now+3,w
  8450     0BA6  00A3               	movwf	___is_double_click@now+3
  8451     0BA7  0834               	movf	update_mybutton@now+2,w
  8452     0BA8  00A2               	movwf	___is_double_click@now+2
  8453     0BA9  0833               	movf	update_mybutton@now+1,w
  8454     0BAA  00A1               	movwf	___is_double_click@now+1
  8455     0BAB  0832               	movf	update_mybutton@now,w
  8456     0BAC  00A0               	movwf	___is_double_click@now
  8457     0BAD  083A               	movf	update_mybutton@b,w
  8458     0BAE  318B  23D9  318B   	fcall	___is_double_click
  8459     0BB1  3A00               	xorlw	0
  8460     0BB2  1903               	skipnz
  8461     0BB3  2BB5               	goto	u3311
  8462     0BB4  2BB6               	goto	u3310
  8463     0BB5                     u3311:
  8464     0BB5  2BBE               	goto	l3493
  8465     0BB6                     u3310:
  8466     0BB6                     l3491:
  8467                           
  8468                           ;mybutton.c: 120: b->double_clicked_flag = 1;
  8469     0BB6  0140               	movlb	0	; select bank0
  8470     0BB7  083A               	movf	update_mybutton@b,w
  8471     0BB8  3E19               	addlw	25
  8472     0BB9  0086               	movwf	6
  8473     0BBA  3001               	movlw	1	; select bank2/3
  8474     0BBB  0087               	movwf	7
  8475     0BBC  0181               	clrf	1
  8476     0BBD  0A81               	incf	1,f
  8477     0BBE                     l3493:
  8478                           
  8479                           ;mybutton.c: 121: };mybutton.c: 123: if( __is_long_press(b, now) ){
  8480     0BBE  0140               	movlb	0	; select bank0
  8481     0BBF  0835               	movf	update_mybutton@now+3,w
  8482     0BC0  00A3               	movwf	___is_long_press@now+3
  8483     0BC1  0834               	movf	update_mybutton@now+2,w
  8484     0BC2  00A2               	movwf	___is_long_press@now+2
  8485     0BC3  0833               	movf	update_mybutton@now+1,w
  8486     0BC4  00A1               	movwf	___is_long_press@now+1
  8487     0BC5  0832               	movf	update_mybutton@now,w
  8488     0BC6  00A0               	movwf	___is_long_press@now
  8489     0BC7  083A               	movf	update_mybutton@b,w
  8490     0BC8  3189  2198  318B   	fcall	___is_long_press
  8491     0BCB  3A00               	xorlw	0
  8492     0BCC  1903               	skipnz
  8493     0BCD  2BCF               	goto	u3321
  8494     0BCE  2BD0               	goto	u3320
  8495     0BCF                     u3321:
  8496     0BCF  2BD8               	goto	l368
  8497     0BD0                     u3320:
  8498     0BD0                     l3495:
  8499                           
  8500                           ;mybutton.c: 124: b->long_press_flag = 1;
  8501     0BD0  0140               	movlb	0	; select bank0
  8502     0BD1  083A               	movf	update_mybutton@b,w
  8503     0BD2  3E1A               	addlw	26
  8504     0BD3  0086               	movwf	6
  8505     0BD4  3001               	movlw	1	; select bank2/3
  8506     0BD5  0087               	movwf	7
  8507     0BD6  0181               	clrf	1
  8508     0BD7  0A81               	incf	1,f
  8509     0BD8                     l368:
  8510     0BD8  0008               	return
  8511     0BD9                     __end_of_update_mybutton:
  8512                           
  8513                           	psect	text3
  8514     06D1                     __ptext3:	
  8515 ;; *************** function ___is_single_click *****************
  8516 ;; Defined at:
  8517 ;;		line 37 in file "mybutton.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  b               1    wreg     PTR struct mybutton
  8520 ;;		 -> main@b2(27), main@b1(27), 
  8521 ;;  now             4    0[BANK0 ] unsigned long 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  b               1   16[BANK0 ] PTR struct mybutton
  8524 ;;		 -> main@b2(27), main@b1(27), 
  8525 ;;  condition4      1   15[BANK0 ] unsigned char 
  8526 ;;  condition3      1   14[BANK0 ] unsigned char 
  8527 ;;  condition2      1   13[BANK0 ] unsigned char 
  8528 ;;  condition1      1   12[BANK0 ] unsigned char 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      unsigned char 
  8531 ;; Registers used:
  8532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8538 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;Total ram usage:       17 bytes
  8543 ;; Hardware stack levels used: 1
  8544 ;; Hardware stack levels required when called: 2
  8545 ;; This function calls:
  8546 ;;		Nothing
  8547 ;; This function is called by:
  8548 ;;		_update_mybutton
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552     06D1                     ___is_single_click:	
  8553                           ;psect for function ___is_single_click
  8554                           
  8555                           
  8556                           ;incstack = 0
  8557                           ; Regs used in ___is_single_click: [wreg-fsr1h+status,2+status,0]
  8558                           ;___is_single_click@b stored from wreg
  8559     06D1  0140               	movlb	0	; select bank0
  8560     06D2  00B0               	movwf	___is_single_click@b
  8561     06D3                     l3181:
  8562                           
  8563                           ;mybutton.c: 39: bool condition1 = (b->rising_ts[1] > b->falling_ts[1]);
  8564     06D3  0830               	movf	___is_single_click@b,w
  8565     06D4  3E0E               	addlw	14
  8566     06D5  0086               	movwf	6
  8567     06D6  3001               	movlw	1	; select bank2/3
  8568     06D7  0087               	movwf	7
  8569     06D8  3F40               	moviw [0]fsr1
  8570     06D9  00A4               	movwf	??___is_single_click
  8571     06DA  3F41               	moviw [1]fsr1
  8572     06DB  00A5               	movwf	??___is_single_click+1
  8573     06DC  3F42               	moviw [2]fsr1
  8574     06DD  00A6               	movwf	??___is_single_click+2
  8575     06DE  3F43               	moviw [3]fsr1
  8576     06DF  00A7               	movwf	??___is_single_click+3
  8577     06E0  0830               	movf	___is_single_click@b,w
  8578     06E1  3E06               	addlw	6
  8579     06E2  0086               	movwf	6
  8580     06E3  3001               	movlw	1	; select bank2/3
  8581     06E4  0087               	movwf	7
  8582     06E5  3F40               	moviw [0]fsr1
  8583     06E6  00A8               	movwf	??___is_single_click+4
  8584     06E7  3F41               	moviw [1]fsr1
  8585     06E8  00A9               	movwf	??___is_single_click+5
  8586     06E9  3F42               	moviw [2]fsr1
  8587     06EA  00AA               	movwf	??___is_single_click+6
  8588     06EB  3F43               	moviw [3]fsr1
  8589     06EC  00AB               	movwf	??___is_single_click+7
  8590     06ED  0827               	movf	??___is_single_click+3,w
  8591     06EE  022B               	subwf	??___is_single_click+7,w
  8592     06EF  1D03               	skipz
  8593     06F0  2EFB               	goto	u2735
  8594     06F1  0826               	movf	??___is_single_click+2,w
  8595     06F2  022A               	subwf	??___is_single_click+6,w
  8596     06F3  1D03               	skipz
  8597     06F4  2EFB               	goto	u2735
  8598     06F5  0825               	movf	??___is_single_click+1,w
  8599     06F6  0229               	subwf	??___is_single_click+5,w
  8600     06F7  1D03               	skipz
  8601     06F8  2EFB               	goto	u2735
  8602     06F9  0824               	movf	??___is_single_click,w
  8603     06FA  0228               	subwf	??___is_single_click+4,w
  8604     06FB                     u2735:
  8605     06FB  1C03               	skipc
  8606     06FC  2EFE               	goto	u2731
  8607     06FD  2F00               	goto	u2730
  8608     06FE                     u2731:
  8609     06FE  3001               	movlw	1
  8610     06FF  2F01               	goto	u2740
  8611     0700                     u2730:
  8612     0700  3000               	movlw	0
  8613     0701                     u2740:
  8614     0701  00AC               	movwf	___is_single_click@condition1
  8615                           
  8616                           ;mybutton.c: 40: bool condition2 = (now - b->rising_ts[1] > 200);
  8617     0702  0830               	movf	___is_single_click@b,w
  8618     0703  3E0E               	addlw	14
  8619     0704  0086               	movwf	6
  8620     0705  3001               	movlw	1	; select bank2/3
  8621     0706  0087               	movwf	7
  8622     0707  3F40               	moviw [0]fsr1
  8623     0708  00A4               	movwf	??___is_single_click
  8624     0709  3F41               	moviw [1]fsr1
  8625     070A  00A5               	movwf	??___is_single_click+1
  8626     070B  3F42               	moviw [2]fsr1
  8627     070C  00A6               	movwf	??___is_single_click+2
  8628     070D  3F43               	moviw [3]fsr1
  8629     070E  00A7               	movwf	??___is_single_click+3
  8630     070F  0820               	movf	___is_single_click@now,w
  8631     0710  00A8               	movwf	??___is_single_click+4
  8632     0711  0821               	movf	___is_single_click@now+1,w
  8633     0712  00A9               	movwf	??___is_single_click+5
  8634     0713  0822               	movf	___is_single_click@now+2,w
  8635     0714  00AA               	movwf	??___is_single_click+6
  8636     0715  0823               	movf	___is_single_click@now+3,w
  8637     0716  00AB               	movwf	??___is_single_click+7
  8638     0717  0824               	movf	??___is_single_click,w
  8639     0718  02A8               	subwf	??___is_single_click+4,f
  8640     0719  0825               	movf	??___is_single_click+1,w
  8641     071A  3BA9               	subwfb	??___is_single_click+5,f
  8642     071B  0826               	movf	??___is_single_click+2,w
  8643     071C  3BAA               	subwfb	??___is_single_click+6,f
  8644     071D  0827               	movf	??___is_single_click+3,w
  8645     071E  3BAB               	subwfb	??___is_single_click+7,f
  8646     071F  082B               	movf	??___is_single_click+7,w
  8647     0720  1D03               	btfss	3,2
  8648     0721  2F2D               	goto	u2751
  8649     0722  082A               	movf	??___is_single_click+6,w
  8650     0723  1D03               	btfss	3,2
  8651     0724  2F2D               	goto	u2751
  8652     0725  0829               	movf	??___is_single_click+5,w
  8653     0726  1D03               	btfss	3,2
  8654     0727  2F2D               	goto	u2751
  8655     0728  30C9               	movlw	201
  8656     0729  0228               	subwf	??___is_single_click+4,w
  8657     072A  1803               	btfsc	3,0
  8658     072B  2F2D               	goto	u2751
  8659     072C  2F2F               	goto	u2750
  8660     072D                     u2751:
  8661     072D  3001               	movlw	1
  8662     072E  2F30               	goto	u2760
  8663     072F                     u2750:
  8664     072F  3000               	movlw	0
  8665     0730                     u2760:
  8666     0730  0140               	movlb	0	; select bank0
  8667     0731  00AD               	movwf	___is_single_click@condition2
  8668                           
  8669                           ;mybutton.c: 41: bool condition3 = (b->rising_ts[1] - b->rising_ts[0] > 500);
  8670     0732  0830               	movf	___is_single_click@b,w
  8671     0733  3E0A               	addlw	10
  8672     0734  0086               	movwf	6
  8673     0735  3001               	movlw	1	; select bank2/3
  8674     0736  0087               	movwf	7
  8675     0737  3F40               	moviw [0]fsr1
  8676     0738  00A4               	movwf	??___is_single_click
  8677     0739  3F41               	moviw [1]fsr1
  8678     073A  00A5               	movwf	??___is_single_click+1
  8679     073B  3F42               	moviw [2]fsr1
  8680     073C  00A6               	movwf	??___is_single_click+2
  8681     073D  3F43               	moviw [3]fsr1
  8682     073E  00A7               	movwf	??___is_single_click+3
  8683     073F  0830               	movf	___is_single_click@b,w
  8684     0740  3E0E               	addlw	14
  8685     0741  0086               	movwf	6
  8686     0742  3001               	movlw	1	; select bank2/3
  8687     0743  0087               	movwf	7
  8688     0744  3F40               	moviw [0]fsr1
  8689     0745  00A8               	movwf	??___is_single_click+4
  8690     0746  3F41               	moviw [1]fsr1
  8691     0747  00A9               	movwf	??___is_single_click+5
  8692     0748  3F42               	moviw [2]fsr1
  8693     0749  00AA               	movwf	??___is_single_click+6
  8694     074A  3F43               	moviw [3]fsr1
  8695     074B  00AB               	movwf	??___is_single_click+7
  8696     074C  0824               	movf	??___is_single_click,w
  8697     074D  02A8               	subwf	??___is_single_click+4,f
  8698     074E  0825               	movf	??___is_single_click+1,w
  8699     074F  3BA9               	subwfb	??___is_single_click+5,f
  8700     0750  0826               	movf	??___is_single_click+2,w
  8701     0751  3BAA               	subwfb	??___is_single_click+6,f
  8702     0752  0827               	movf	??___is_single_click+3,w
  8703     0753  3BAB               	subwfb	??___is_single_click+7,f
  8704     0754  082B               	movf	??___is_single_click+7,w
  8705     0755  1D03               	btfss	3,2
  8706     0756  2F61               	goto	u2771
  8707     0757  082A               	movf	??___is_single_click+6,w
  8708     0758  1D03               	btfss	3,2
  8709     0759  2F61               	goto	u2771
  8710     075A  30F5               	movlw	245
  8711     075B  0228               	subwf	??___is_single_click+4,w
  8712     075C  3001               	movlw	1
  8713     075D  3B29               	subwfb	??___is_single_click+5,w
  8714     075E  1803               	btfsc	3,0
  8715     075F  2F61               	goto	u2771
  8716     0760  2F63               	goto	u2770
  8717     0761                     u2771:
  8718     0761  3001               	movlw	1
  8719     0762  2F64               	goto	u2780
  8720     0763                     u2770:
  8721     0763  3000               	movlw	0
  8722     0764                     u2780:
  8723     0764  0140               	movlb	0	; select bank0
  8724     0765  00AE               	movwf	___is_single_click@condition3
  8725                           
  8726                           ;mybutton.c: 42: bool condition4 = (now - b->falling_ts[1] < 4000);
  8727     0766  0830               	movf	___is_single_click@b,w
  8728     0767  3E06               	addlw	6
  8729     0768  0086               	movwf	6
  8730     0769  3001               	movlw	1	; select bank2/3
  8731     076A  0087               	movwf	7
  8732     076B  3F40               	moviw [0]fsr1
  8733     076C  00A4               	movwf	??___is_single_click
  8734     076D  3F41               	moviw [1]fsr1
  8735     076E  00A5               	movwf	??___is_single_click+1
  8736     076F  3F42               	moviw [2]fsr1
  8737     0770  00A6               	movwf	??___is_single_click+2
  8738     0771  3F43               	moviw [3]fsr1
  8739     0772  00A7               	movwf	??___is_single_click+3
  8740     0773  0820               	movf	___is_single_click@now,w
  8741     0774  00A8               	movwf	??___is_single_click+4
  8742     0775  0821               	movf	___is_single_click@now+1,w
  8743     0776  00A9               	movwf	??___is_single_click+5
  8744     0777  0822               	movf	___is_single_click@now+2,w
  8745     0778  00AA               	movwf	??___is_single_click+6
  8746     0779  0823               	movf	___is_single_click@now+3,w
  8747     077A  00AB               	movwf	??___is_single_click+7
  8748     077B  0824               	movf	??___is_single_click,w
  8749     077C  02A8               	subwf	??___is_single_click+4,f
  8750     077D  0825               	movf	??___is_single_click+1,w
  8751     077E  3BA9               	subwfb	??___is_single_click+5,f
  8752     077F  0826               	movf	??___is_single_click+2,w
  8753     0780  3BAA               	subwfb	??___is_single_click+6,f
  8754     0781  0827               	movf	??___is_single_click+3,w
  8755     0782  3BAB               	subwfb	??___is_single_click+7,f
  8756     0783  082B               	movf	??___is_single_click+7,w
  8757     0784  1D03               	btfss	3,2
  8758     0785  2F92               	goto	u2790
  8759     0786  082A               	movf	??___is_single_click+6,w
  8760     0787  1D03               	btfss	3,2
  8761     0788  2F92               	goto	u2790
  8762     0789  30A0               	movlw	160
  8763     078A  0228               	subwf	??___is_single_click+4,w
  8764     078B  300F               	movlw	15
  8765     078C  3B29               	subwfb	??___is_single_click+5,w
  8766     078D  1C03               	btfss	3,0
  8767     078E  2F90               	goto	u2791
  8768     078F  2F92               	goto	u2790
  8769     0790                     u2791:
  8770     0790  3001               	movlw	1
  8771     0791  2F93               	goto	u2800
  8772     0792                     u2790:
  8773     0792  3000               	movlw	0
  8774     0793                     u2800:
  8775     0793  0140               	movlb	0	; select bank0
  8776     0794  00AF               	movwf	___is_single_click@condition4
  8777     0795                     l3183:
  8778                           
  8779                           ;mybutton.c: 44: if (condition1 && condition2 && condition3 && condition4){
  8780     0795  082C               	movf	___is_single_click@condition1,w
  8781     0796  1903               	btfsc	3,2
  8782     0797  2F99               	goto	u2811
  8783     0798  2F9A               	goto	u2810
  8784     0799                     u2811:
  8785     0799  2FBD               	goto	l3195
  8786     079A                     u2810:
  8787     079A                     l3185:
  8788     079A  082D               	movf	___is_single_click@condition2,w
  8789     079B  1903               	btfsc	3,2
  8790     079C  2F9E               	goto	u2821
  8791     079D  2F9F               	goto	u2820
  8792     079E                     u2821:
  8793     079E  2FBD               	goto	l3195
  8794     079F                     u2820:
  8795     079F                     l3187:
  8796     079F  082E               	movf	___is_single_click@condition3,w
  8797     07A0  1903               	btfsc	3,2
  8798     07A1  2FA3               	goto	u2831
  8799     07A2  2FA4               	goto	u2830
  8800     07A3                     u2831:
  8801     07A3  2FBD               	goto	l3195
  8802     07A4                     u2830:
  8803     07A4                     l3189:
  8804     07A4  082F               	movf	___is_single_click@condition4,w
  8805     07A5  1903               	btfsc	3,2
  8806     07A6  2FA8               	goto	u2841
  8807     07A7  2FA9               	goto	u2840
  8808     07A8                     u2841:
  8809     07A8  2FBD               	goto	l3195
  8810     07A9                     u2840:
  8811     07A9                     l3191:
  8812                           
  8813                           ;mybutton.c: 45: b->single_click_tmps[0] = b->single_click_tmps[1];
  8814     07A9  0830               	movf	___is_single_click@b,w
  8815     07AA  3E12               	addlw	18
  8816     07AB  0086               	movwf	6
  8817     07AC  3001               	movlw	1	; select bank2/3
  8818     07AD  0087               	movwf	7
  8819     07AE  0830               	movf	___is_single_click@b,w
  8820     07AF  3E13               	addlw	19
  8821     07B0  0084               	movwf	4
  8822     07B1  3001               	movlw	1	; select bank2/3
  8823     07B2  0085               	movwf	5
  8824     07B3  0800               	movf	0,w
  8825     07B4  0081               	movwf	1
  8826     07B5                     l3193:
  8827                           
  8828                           ;mybutton.c: 46: b->single_click_tmps[1] = 1;
  8829     07B5  0830               	movf	___is_single_click@b,w
  8830     07B6  3E13               	addlw	19
  8831     07B7  0086               	movwf	6
  8832     07B8  3001               	movlw	1	; select bank2/3
  8833     07B9  0087               	movwf	7
  8834     07BA  0181               	clrf	1
  8835     07BB  0A81               	incf	1,f
  8836                           
  8837                           ;mybutton.c: 47: }else{
  8838     07BC  2FCF               	goto	l3199
  8839     07BD                     l3195:
  8840                           
  8841                           ;mybutton.c: 48: b->single_click_tmps[0] = b->single_click_tmps[1];
  8842     07BD  0830               	movf	___is_single_click@b,w
  8843     07BE  3E12               	addlw	18
  8844     07BF  0086               	movwf	6
  8845     07C0  3001               	movlw	1	; select bank2/3
  8846     07C1  0087               	movwf	7
  8847     07C2  0830               	movf	___is_single_click@b,w
  8848     07C3  3E13               	addlw	19
  8849     07C4  0084               	movwf	4
  8850     07C5  3001               	movlw	1	; select bank2/3
  8851     07C6  0085               	movwf	5
  8852     07C7  0800               	movf	0,w
  8853     07C8  0081               	movwf	1
  8854     07C9                     l3197:
  8855                           
  8856                           ;mybutton.c: 49: b->single_click_tmps[1] = 0;
  8857     07C9  0830               	movf	___is_single_click@b,w
  8858     07CA  3E13               	addlw	19
  8859     07CB  0086               	movwf	6
  8860     07CC  3001               	movlw	1	; select bank2/3
  8861     07CD  0087               	movwf	7
  8862     07CE  0181               	clrf	1
  8863     07CF                     l3199:
  8864                           
  8865                           ;mybutton.c: 50: };mybutton.c: 52: if(0 == b->single_click_tmps[0] && 1 == b->single_cli
      +                          ck_tmps[1]){
  8866     07CF  0830               	movf	___is_single_click@b,w
  8867     07D0  3E12               	addlw	18
  8868     07D1  0086               	movwf	6
  8869     07D2  3001               	movlw	1	; select bank2/3
  8870     07D3  0087               	movwf	7
  8871     07D4  0801               	movf	1,w
  8872     07D5  1D03               	btfss	3,2
  8873     07D6  2FD8               	goto	u2851
  8874     07D7  2FD9               	goto	u2850
  8875     07D8                     u2851:
  8876     07D8  2FE5               	goto	l3207
  8877     07D9                     u2850:
  8878     07D9                     l3201:
  8879     07D9  0830               	movf	___is_single_click@b,w
  8880     07DA  3E13               	addlw	19
  8881     07DB  0086               	movwf	6
  8882     07DC  3001               	movlw	1	; select bank2/3
  8883     07DD  0087               	movwf	7
  8884     07DE  0301               	decf	1,w
  8885     07DF  1D03               	btfss	3,2
  8886     07E0  2FE2               	goto	u2861
  8887     07E1  2FE3               	goto	u2860
  8888     07E2                     u2861:
  8889     07E2  2FE5               	goto	l3207
  8890     07E3                     u2860:
  8891     07E3                     l3203:
  8892                           
  8893                           ;mybutton.c: 53: return 1;
  8894     07E3  3001               	movlw	1
  8895     07E4  2FE6               	goto	l348
  8896     07E5                     l3207:
  8897                           
  8898                           ;mybutton.c: 54: };mybutton.c: 55: return 0;
  8899     07E5  3000               	movlw	0
  8900     07E6                     l348:
  8901     07E6  0008               	return
  8902     07E7                     __end_of___is_single_click:
  8903                           
  8904                           	psect	text4
  8905     0998                     __ptext4:	
  8906 ;; *************** function ___is_long_press *****************
  8907 ;; Defined at:
  8908 ;;		line 80 in file "mybutton.c"
  8909 ;; Parameters:    Size  Location     Type
  8910 ;;  b               1    wreg     PTR struct mybutton
  8911 ;;		 -> main@b2(27), main@b1(27), 
  8912 ;;  now             4    0[BANK0 ] unsigned long 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;  b               1   14[BANK0 ] PTR struct mybutton
  8915 ;;		 -> main@b2(27), main@b1(27), 
  8916 ;;  condition2      1   13[BANK0 ] unsigned char 
  8917 ;;  condition1      1   12[BANK0 ] unsigned char 
  8918 ;; Return value:  Size  Location     Type
  8919 ;;                  1    wreg      unsigned char 
  8920 ;; Registers used:
  8921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8922 ;; Tracked objects:
  8923 ;;		On entry : 0/0
  8924 ;;		On exit  : 0/0
  8925 ;;		Unchanged: 0/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;Total ram usage:       15 bytes
  8932 ;; Hardware stack levels used: 1
  8933 ;; Hardware stack levels required when called: 2
  8934 ;; This function calls:
  8935 ;;		Nothing
  8936 ;; This function is called by:
  8937 ;;		_update_mybutton
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941     0998                     ___is_long_press:	
  8942                           ;psect for function ___is_long_press
  8943                           
  8944                           
  8945                           ;incstack = 0
  8946                           ; Regs used in ___is_long_press: [wreg-fsr1h+status,2+status,0]
  8947                           ;___is_long_press@b stored from wreg
  8948     0998  0140               	movlb	0	; select bank0
  8949     0999  00AE               	movwf	___is_long_press@b
  8950     099A                     l3239:
  8951                           
  8952                           ;mybutton.c: 81: bool condition1 = (b->falling_ts[1] > b->rising_ts[1]);
  8953     099A  082E               	movf	___is_long_press@b,w
  8954     099B  3E06               	addlw	6
  8955     099C  0086               	movwf	6
  8956     099D  3001               	movlw	1	; select bank2/3
  8957     099E  0087               	movwf	7
  8958     099F  3F40               	moviw [0]fsr1
  8959     09A0  00A4               	movwf	??___is_long_press
  8960     09A1  3F41               	moviw [1]fsr1
  8961     09A2  00A5               	movwf	??___is_long_press+1
  8962     09A3  3F42               	moviw [2]fsr1
  8963     09A4  00A6               	movwf	??___is_long_press+2
  8964     09A5  3F43               	moviw [3]fsr1
  8965     09A6  00A7               	movwf	??___is_long_press+3
  8966     09A7  082E               	movf	___is_long_press@b,w
  8967     09A8  3E0E               	addlw	14
  8968     09A9  0086               	movwf	6
  8969     09AA  3001               	movlw	1	; select bank2/3
  8970     09AB  0087               	movwf	7
  8971     09AC  3F40               	moviw [0]fsr1
  8972     09AD  00A8               	movwf	??___is_long_press+4
  8973     09AE  3F41               	moviw [1]fsr1
  8974     09AF  00A9               	movwf	??___is_long_press+5
  8975     09B0  3F42               	moviw [2]fsr1
  8976     09B1  00AA               	movwf	??___is_long_press+6
  8977     09B2  3F43               	moviw [3]fsr1
  8978     09B3  00AB               	movwf	??___is_long_press+7
  8979     09B4  0827               	movf	??___is_long_press+3,w
  8980     09B5  022B               	subwf	??___is_long_press+7,w
  8981     09B6  1D03               	skipz
  8982     09B7  29C2               	goto	u2985
  8983     09B8  0826               	movf	??___is_long_press+2,w
  8984     09B9  022A               	subwf	??___is_long_press+6,w
  8985     09BA  1D03               	skipz
  8986     09BB  29C2               	goto	u2985
  8987     09BC  0825               	movf	??___is_long_press+1,w
  8988     09BD  0229               	subwf	??___is_long_press+5,w
  8989     09BE  1D03               	skipz
  8990     09BF  29C2               	goto	u2985
  8991     09C0  0824               	movf	??___is_long_press,w
  8992     09C1  0228               	subwf	??___is_long_press+4,w
  8993     09C2                     u2985:
  8994     09C2  1C03               	skipc
  8995     09C3  29C5               	goto	u2981
  8996     09C4  29C7               	goto	u2980
  8997     09C5                     u2981:
  8998     09C5  3001               	movlw	1
  8999     09C6  29C8               	goto	u2990
  9000     09C7                     u2980:
  9001     09C7  3000               	movlw	0
  9002     09C8                     u2990:
  9003     09C8  00AC               	movwf	___is_long_press@condition1
  9004                           
  9005                           ;mybutton.c: 82: bool condition2 = (now - b->falling_ts[1] > 4000);
  9006     09C9  082E               	movf	___is_long_press@b,w
  9007     09CA  3E06               	addlw	6
  9008     09CB  0086               	movwf	6
  9009     09CC  3001               	movlw	1	; select bank2/3
  9010     09CD  0087               	movwf	7
  9011     09CE  3F40               	moviw [0]fsr1
  9012     09CF  00A4               	movwf	??___is_long_press
  9013     09D0  3F41               	moviw [1]fsr1
  9014     09D1  00A5               	movwf	??___is_long_press+1
  9015     09D2  3F42               	moviw [2]fsr1
  9016     09D3  00A6               	movwf	??___is_long_press+2
  9017     09D4  3F43               	moviw [3]fsr1
  9018     09D5  00A7               	movwf	??___is_long_press+3
  9019     09D6  0820               	movf	___is_long_press@now,w
  9020     09D7  00A8               	movwf	??___is_long_press+4
  9021     09D8  0821               	movf	___is_long_press@now+1,w
  9022     09D9  00A9               	movwf	??___is_long_press+5
  9023     09DA  0822               	movf	___is_long_press@now+2,w
  9024     09DB  00AA               	movwf	??___is_long_press+6
  9025     09DC  0823               	movf	___is_long_press@now+3,w
  9026     09DD  00AB               	movwf	??___is_long_press+7
  9027     09DE  0824               	movf	??___is_long_press,w
  9028     09DF  02A8               	subwf	??___is_long_press+4,f
  9029     09E0  0825               	movf	??___is_long_press+1,w
  9030     09E1  3BA9               	subwfb	??___is_long_press+5,f
  9031     09E2  0826               	movf	??___is_long_press+2,w
  9032     09E3  3BAA               	subwfb	??___is_long_press+6,f
  9033     09E4  0827               	movf	??___is_long_press+3,w
  9034     09E5  3BAB               	subwfb	??___is_long_press+7,f
  9035     09E6  082B               	movf	??___is_long_press+7,w
  9036     09E7  1D03               	btfss	3,2
  9037     09E8  29F3               	goto	u3001
  9038     09E9  082A               	movf	??___is_long_press+6,w
  9039     09EA  1D03               	btfss	3,2
  9040     09EB  29F3               	goto	u3001
  9041     09EC  30A1               	movlw	161
  9042     09ED  0228               	subwf	??___is_long_press+4,w
  9043     09EE  300F               	movlw	15
  9044     09EF  3B29               	subwfb	??___is_long_press+5,w
  9045     09F0  1803               	btfsc	3,0
  9046     09F1  29F3               	goto	u3001
  9047     09F2  29F5               	goto	u3000
  9048     09F3                     u3001:
  9049     09F3  3001               	movlw	1
  9050     09F4  29F6               	goto	u3010
  9051     09F5                     u3000:
  9052     09F5  3000               	movlw	0
  9053     09F6                     u3010:
  9054     09F6  0140               	movlb	0	; select bank0
  9055     09F7  00AD               	movwf	___is_long_press@condition2
  9056     09F8                     l3241:
  9057                           
  9058                           ;mybutton.c: 84: if(condition1 && condition2){
  9059     09F8  082C               	movf	___is_long_press@condition1,w
  9060     09F9  1903               	btfsc	3,2
  9061     09FA  29FC               	goto	u3021
  9062     09FB  29FD               	goto	u3020
  9063     09FC                     u3021:
  9064     09FC  2A16               	goto	l3249
  9065     09FD                     u3020:
  9066     09FD                     l3243:
  9067     09FD  082D               	movf	___is_long_press@condition2,w
  9068     09FE  1903               	btfsc	3,2
  9069     09FF  2A01               	goto	u3031
  9070     0A00  2A02               	goto	u3030
  9071     0A01                     u3031:
  9072     0A01  2A16               	goto	l3249
  9073     0A02                     u3030:
  9074     0A02                     l3245:
  9075                           
  9076                           ;mybutton.c: 85: b->long_press_tmps[0] = b->long_press_tmps[1];
  9077     0A02  082E               	movf	___is_long_press@b,w
  9078     0A03  3E16               	addlw	22
  9079     0A04  0086               	movwf	6
  9080     0A05  3001               	movlw	1	; select bank2/3
  9081     0A06  0087               	movwf	7
  9082     0A07  082E               	movf	___is_long_press@b,w
  9083     0A08  3E17               	addlw	23
  9084     0A09  0084               	movwf	4
  9085     0A0A  3001               	movlw	1	; select bank2/3
  9086     0A0B  0085               	movwf	5
  9087     0A0C  0800               	movf	0,w
  9088     0A0D  0081               	movwf	1
  9089     0A0E                     l3247:
  9090                           
  9091                           ;mybutton.c: 86: b->long_press_tmps[1] = 1;
  9092     0A0E  082E               	movf	___is_long_press@b,w
  9093     0A0F  3E17               	addlw	23
  9094     0A10  0086               	movwf	6
  9095     0A11  3001               	movlw	1	; select bank2/3
  9096     0A12  0087               	movwf	7
  9097     0A13  0181               	clrf	1
  9098     0A14  0A81               	incf	1,f
  9099                           
  9100                           ;mybutton.c: 87: }else{
  9101     0A15  2A28               	goto	l3253
  9102     0A16                     l3249:
  9103                           
  9104                           ;mybutton.c: 88: b->long_press_tmps[0] = b->long_press_tmps[1];
  9105     0A16  082E               	movf	___is_long_press@b,w
  9106     0A17  3E16               	addlw	22
  9107     0A18  0086               	movwf	6
  9108     0A19  3001               	movlw	1	; select bank2/3
  9109     0A1A  0087               	movwf	7
  9110     0A1B  082E               	movf	___is_long_press@b,w
  9111     0A1C  3E17               	addlw	23
  9112     0A1D  0084               	movwf	4
  9113     0A1E  3001               	movlw	1	; select bank2/3
  9114     0A1F  0085               	movwf	5
  9115     0A20  0800               	movf	0,w
  9116     0A21  0081               	movwf	1
  9117     0A22                     l3251:
  9118                           
  9119                           ;mybutton.c: 89: b->long_press_tmps[1] = 0;
  9120     0A22  082E               	movf	___is_long_press@b,w
  9121     0A23  3E17               	addlw	23
  9122     0A24  0086               	movwf	6
  9123     0A25  3001               	movlw	1	; select bank2/3
  9124     0A26  0087               	movwf	7
  9125     0A27  0181               	clrf	1
  9126     0A28                     l3253:
  9127                           
  9128                           ;mybutton.c: 90: };mybutton.c: 92: if(0 == b->long_press_tmps[0] && 1 == b->long_press_t
      +                          mps[1]){
  9129     0A28  082E               	movf	___is_long_press@b,w
  9130     0A29  3E16               	addlw	22
  9131     0A2A  0086               	movwf	6
  9132     0A2B  3001               	movlw	1	; select bank2/3
  9133     0A2C  0087               	movwf	7
  9134     0A2D  0801               	movf	1,w
  9135     0A2E  1D03               	btfss	3,2
  9136     0A2F  2A31               	goto	u3041
  9137     0A30  2A32               	goto	u3040
  9138     0A31                     u3041:
  9139     0A31  2A3E               	goto	l3261
  9140     0A32                     u3040:
  9141     0A32                     l3255:
  9142     0A32  082E               	movf	___is_long_press@b,w
  9143     0A33  3E17               	addlw	23
  9144     0A34  0086               	movwf	6
  9145     0A35  3001               	movlw	1	; select bank2/3
  9146     0A36  0087               	movwf	7
  9147     0A37  0301               	decf	1,w
  9148     0A38  1D03               	btfss	3,2
  9149     0A39  2A3B               	goto	u3051
  9150     0A3A  2A3C               	goto	u3050
  9151     0A3B                     u3051:
  9152     0A3B  2A3E               	goto	l3261
  9153     0A3C                     u3050:
  9154     0A3C                     l3257:
  9155                           
  9156                           ;mybutton.c: 93: return 1;
  9157     0A3C  3001               	movlw	1
  9158     0A3D  2A3F               	goto	l360
  9159     0A3E                     l3261:
  9160                           
  9161                           ;mybutton.c: 94: };mybutton.c: 95: return 0;
  9162     0A3E  3000               	movlw	0
  9163     0A3F                     l360:
  9164     0A3F  0008               	return
  9165     0A40                     __end_of___is_long_press:
  9166                           
  9167                           	psect	text5
  9168     0BD9                     __ptext5:	
  9169 ;; *************** function ___is_double_click *****************
  9170 ;; Defined at:
  9171 ;;		line 59 in file "mybutton.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  b               1    wreg     PTR struct mybutton
  9174 ;;		 -> main@b2(27), main@b1(27), 
  9175 ;;  now             4    0[BANK0 ] unsigned long 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  b               1   15[BANK0 ] PTR struct mybutton
  9178 ;;		 -> main@b2(27), main@b1(27), 
  9179 ;;  condition3      1   14[BANK0 ] unsigned char 
  9180 ;;  condition2      1   13[BANK0 ] unsigned char 
  9181 ;;  condition1      1   12[BANK0 ] unsigned char 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      unsigned char 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9191 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9194 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9195 ;;Total ram usage:       16 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; Hardware stack levels required when called: 2
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_update_mybutton
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205     0BD9                     ___is_double_click:	
  9206                           ;psect for function ___is_double_click
  9207                           
  9208                           
  9209                           ;incstack = 0
  9210                           ; Regs used in ___is_double_click: [wreg-fsr1h+status,2+status,0]
  9211                           ;___is_double_click@b stored from wreg
  9212     0BD9  0140               	movlb	0	; select bank0
  9213     0BDA  00AF               	movwf	___is_double_click@b
  9214     0BDB                     l3211:
  9215                           
  9216                           ;mybutton.c: 61: bool condition1 = (b->rising_ts[1] > b->falling_ts[1]);
  9217     0BDB  082F               	movf	___is_double_click@b,w
  9218     0BDC  3E0E               	addlw	14
  9219     0BDD  0086               	movwf	6
  9220     0BDE  3001               	movlw	1	; select bank2/3
  9221     0BDF  0087               	movwf	7
  9222     0BE0  3F40               	moviw [0]fsr1
  9223     0BE1  00A4               	movwf	??___is_double_click
  9224     0BE2  3F41               	moviw [1]fsr1
  9225     0BE3  00A5               	movwf	??___is_double_click+1
  9226     0BE4  3F42               	moviw [2]fsr1
  9227     0BE5  00A6               	movwf	??___is_double_click+2
  9228     0BE6  3F43               	moviw [3]fsr1
  9229     0BE7  00A7               	movwf	??___is_double_click+3
  9230     0BE8  082F               	movf	___is_double_click@b,w
  9231     0BE9  3E06               	addlw	6
  9232     0BEA  0086               	movwf	6
  9233     0BEB  3001               	movlw	1	; select bank2/3
  9234     0BEC  0087               	movwf	7
  9235     0BED  3F40               	moviw [0]fsr1
  9236     0BEE  00A8               	movwf	??___is_double_click+4
  9237     0BEF  3F41               	moviw [1]fsr1
  9238     0BF0  00A9               	movwf	??___is_double_click+5
  9239     0BF1  3F42               	moviw [2]fsr1
  9240     0BF2  00AA               	movwf	??___is_double_click+6
  9241     0BF3  3F43               	moviw [3]fsr1
  9242     0BF4  00AB               	movwf	??___is_double_click+7
  9243     0BF5  0827               	movf	??___is_double_click+3,w
  9244     0BF6  022B               	subwf	??___is_double_click+7,w
  9245     0BF7  1D03               	skipz
  9246     0BF8  2C03               	goto	u2875
  9247     0BF9  0826               	movf	??___is_double_click+2,w
  9248     0BFA  022A               	subwf	??___is_double_click+6,w
  9249     0BFB  1D03               	skipz
  9250     0BFC  2C03               	goto	u2875
  9251     0BFD  0825               	movf	??___is_double_click+1,w
  9252     0BFE  0229               	subwf	??___is_double_click+5,w
  9253     0BFF  1D03               	skipz
  9254     0C00  2C03               	goto	u2875
  9255     0C01  0824               	movf	??___is_double_click,w
  9256     0C02  0228               	subwf	??___is_double_click+4,w
  9257     0C03                     u2875:
  9258     0C03  1C03               	skipc
  9259     0C04  2C06               	goto	u2871
  9260     0C05  2C08               	goto	u2870
  9261     0C06                     u2871:
  9262     0C06  3001               	movlw	1
  9263     0C07  2C09               	goto	u2880
  9264     0C08                     u2870:
  9265     0C08  3000               	movlw	0
  9266     0C09                     u2880:
  9267     0C09  00AC               	movwf	___is_double_click@condition1
  9268                           
  9269                           ;mybutton.c: 62: bool condition2 = (now - b->rising_ts[1] > 200);
  9270     0C0A  082F               	movf	___is_double_click@b,w
  9271     0C0B  3E0E               	addlw	14
  9272     0C0C  0086               	movwf	6
  9273     0C0D  3001               	movlw	1	; select bank2/3
  9274     0C0E  0087               	movwf	7
  9275     0C0F  3F40               	moviw [0]fsr1
  9276     0C10  00A4               	movwf	??___is_double_click
  9277     0C11  3F41               	moviw [1]fsr1
  9278     0C12  00A5               	movwf	??___is_double_click+1
  9279     0C13  3F42               	moviw [2]fsr1
  9280     0C14  00A6               	movwf	??___is_double_click+2
  9281     0C15  3F43               	moviw [3]fsr1
  9282     0C16  00A7               	movwf	??___is_double_click+3
  9283     0C17  0820               	movf	___is_double_click@now,w
  9284     0C18  00A8               	movwf	??___is_double_click+4
  9285     0C19  0821               	movf	___is_double_click@now+1,w
  9286     0C1A  00A9               	movwf	??___is_double_click+5
  9287     0C1B  0822               	movf	___is_double_click@now+2,w
  9288     0C1C  00AA               	movwf	??___is_double_click+6
  9289     0C1D  0823               	movf	___is_double_click@now+3,w
  9290     0C1E  00AB               	movwf	??___is_double_click+7
  9291     0C1F  0824               	movf	??___is_double_click,w
  9292     0C20  02A8               	subwf	??___is_double_click+4,f
  9293     0C21  0825               	movf	??___is_double_click+1,w
  9294     0C22  3BA9               	subwfb	??___is_double_click+5,f
  9295     0C23  0826               	movf	??___is_double_click+2,w
  9296     0C24  3BAA               	subwfb	??___is_double_click+6,f
  9297     0C25  0827               	movf	??___is_double_click+3,w
  9298     0C26  3BAB               	subwfb	??___is_double_click+7,f
  9299     0C27  082B               	movf	??___is_double_click+7,w
  9300     0C28  1D03               	btfss	3,2
  9301     0C29  2C35               	goto	u2891
  9302     0C2A  082A               	movf	??___is_double_click+6,w
  9303     0C2B  1D03               	btfss	3,2
  9304     0C2C  2C35               	goto	u2891
  9305     0C2D  0829               	movf	??___is_double_click+5,w
  9306     0C2E  1D03               	btfss	3,2
  9307     0C2F  2C35               	goto	u2891
  9308     0C30  30C9               	movlw	201
  9309     0C31  0228               	subwf	??___is_double_click+4,w
  9310     0C32  1803               	btfsc	3,0
  9311     0C33  2C35               	goto	u2891
  9312     0C34  2C37               	goto	u2890
  9313     0C35                     u2891:
  9314     0C35  3001               	movlw	1
  9315     0C36  2C38               	goto	u2900
  9316     0C37                     u2890:
  9317     0C37  3000               	movlw	0
  9318     0C38                     u2900:
  9319     0C38  0140               	movlb	0	; select bank0
  9320     0C39  00AD               	movwf	___is_double_click@condition2
  9321                           
  9322                           ;mybutton.c: 63: bool condition3 = (b->rising_ts[1] - b->rising_ts[0] < 500);
  9323     0C3A  082F               	movf	___is_double_click@b,w
  9324     0C3B  3E0A               	addlw	10
  9325     0C3C  0086               	movwf	6
  9326     0C3D  3001               	movlw	1	; select bank2/3
  9327     0C3E  0087               	movwf	7
  9328     0C3F  3F40               	moviw [0]fsr1
  9329     0C40  00A4               	movwf	??___is_double_click
  9330     0C41  3F41               	moviw [1]fsr1
  9331     0C42  00A5               	movwf	??___is_double_click+1
  9332     0C43  3F42               	moviw [2]fsr1
  9333     0C44  00A6               	movwf	??___is_double_click+2
  9334     0C45  3F43               	moviw [3]fsr1
  9335     0C46  00A7               	movwf	??___is_double_click+3
  9336     0C47  082F               	movf	___is_double_click@b,w
  9337     0C48  3E0E               	addlw	14
  9338     0C49  0086               	movwf	6
  9339     0C4A  3001               	movlw	1	; select bank2/3
  9340     0C4B  0087               	movwf	7
  9341     0C4C  3F40               	moviw [0]fsr1
  9342     0C4D  00A8               	movwf	??___is_double_click+4
  9343     0C4E  3F41               	moviw [1]fsr1
  9344     0C4F  00A9               	movwf	??___is_double_click+5
  9345     0C50  3F42               	moviw [2]fsr1
  9346     0C51  00AA               	movwf	??___is_double_click+6
  9347     0C52  3F43               	moviw [3]fsr1
  9348     0C53  00AB               	movwf	??___is_double_click+7
  9349     0C54  0824               	movf	??___is_double_click,w
  9350     0C55  02A8               	subwf	??___is_double_click+4,f
  9351     0C56  0825               	movf	??___is_double_click+1,w
  9352     0C57  3BA9               	subwfb	??___is_double_click+5,f
  9353     0C58  0826               	movf	??___is_double_click+2,w
  9354     0C59  3BAA               	subwfb	??___is_double_click+6,f
  9355     0C5A  0827               	movf	??___is_double_click+3,w
  9356     0C5B  3BAB               	subwfb	??___is_double_click+7,f
  9357     0C5C  082B               	movf	??___is_double_click+7,w
  9358     0C5D  1D03               	btfss	3,2
  9359     0C5E  2C6B               	goto	u2910
  9360     0C5F  082A               	movf	??___is_double_click+6,w
  9361     0C60  1D03               	btfss	3,2
  9362     0C61  2C6B               	goto	u2910
  9363     0C62  30F4               	movlw	244
  9364     0C63  0228               	subwf	??___is_double_click+4,w
  9365     0C64  3001               	movlw	1
  9366     0C65  3B29               	subwfb	??___is_double_click+5,w
  9367     0C66  1C03               	btfss	3,0
  9368     0C67  2C69               	goto	u2911
  9369     0C68  2C6B               	goto	u2910
  9370     0C69                     u2911:
  9371     0C69  3001               	movlw	1
  9372     0C6A  2C6C               	goto	u2920
  9373     0C6B                     u2910:
  9374     0C6B  3000               	movlw	0
  9375     0C6C                     u2920:
  9376     0C6C  0140               	movlb	0	; select bank0
  9377     0C6D  00AE               	movwf	___is_double_click@condition3
  9378     0C6E                     l3213:
  9379                           
  9380                           ;mybutton.c: 65: if (condition1 && condition2 && condition3){
  9381     0C6E  082C               	movf	___is_double_click@condition1,w
  9382     0C6F  1903               	btfsc	3,2
  9383     0C70  2C72               	goto	u2931
  9384     0C71  2C73               	goto	u2930
  9385     0C72                     u2931:
  9386     0C72  2C91               	goto	l3223
  9387     0C73                     u2930:
  9388     0C73                     l3215:
  9389     0C73  082D               	movf	___is_double_click@condition2,w
  9390     0C74  1903               	btfsc	3,2
  9391     0C75  2C77               	goto	u2941
  9392     0C76  2C78               	goto	u2940
  9393     0C77                     u2941:
  9394     0C77  2C91               	goto	l3223
  9395     0C78                     u2940:
  9396     0C78                     l3217:
  9397     0C78  082E               	movf	___is_double_click@condition3,w
  9398     0C79  1903               	btfsc	3,2
  9399     0C7A  2C7C               	goto	u2951
  9400     0C7B  2C7D               	goto	u2950
  9401     0C7C                     u2951:
  9402     0C7C  2C91               	goto	l3223
  9403     0C7D                     u2950:
  9404     0C7D                     l3219:
  9405                           
  9406                           ;mybutton.c: 66: b->double_click_tmps[0] = b->double_click_tmps[1];
  9407     0C7D  082F               	movf	___is_double_click@b,w
  9408     0C7E  3E14               	addlw	20
  9409     0C7F  0086               	movwf	6
  9410     0C80  3001               	movlw	1	; select bank2/3
  9411     0C81  0087               	movwf	7
  9412     0C82  082F               	movf	___is_double_click@b,w
  9413     0C83  3E15               	addlw	21
  9414     0C84  0084               	movwf	4
  9415     0C85  3001               	movlw	1	; select bank2/3
  9416     0C86  0085               	movwf	5
  9417     0C87  0800               	movf	0,w
  9418     0C88  0081               	movwf	1
  9419     0C89                     l3221:
  9420                           
  9421                           ;mybutton.c: 67: b->double_click_tmps[1] = 1;
  9422     0C89  082F               	movf	___is_double_click@b,w
  9423     0C8A  3E15               	addlw	21
  9424     0C8B  0086               	movwf	6
  9425     0C8C  3001               	movlw	1	; select bank2/3
  9426     0C8D  0087               	movwf	7
  9427     0C8E  0181               	clrf	1
  9428     0C8F  0A81               	incf	1,f
  9429                           
  9430                           ;mybutton.c: 68: }else{
  9431     0C90  2CA3               	goto	l3227
  9432     0C91                     l3223:
  9433                           
  9434                           ;mybutton.c: 69: b->double_click_tmps[0] = b->double_click_tmps[1];
  9435     0C91  082F               	movf	___is_double_click@b,w
  9436     0C92  3E14               	addlw	20
  9437     0C93  0086               	movwf	6
  9438     0C94  3001               	movlw	1	; select bank2/3
  9439     0C95  0087               	movwf	7
  9440     0C96  082F               	movf	___is_double_click@b,w
  9441     0C97  3E15               	addlw	21
  9442     0C98  0084               	movwf	4
  9443     0C99  3001               	movlw	1	; select bank2/3
  9444     0C9A  0085               	movwf	5
  9445     0C9B  0800               	movf	0,w
  9446     0C9C  0081               	movwf	1
  9447     0C9D                     l3225:
  9448                           
  9449                           ;mybutton.c: 70: b->double_click_tmps[1] = 0;
  9450     0C9D  082F               	movf	___is_double_click@b,w
  9451     0C9E  3E15               	addlw	21
  9452     0C9F  0086               	movwf	6
  9453     0CA0  3001               	movlw	1	; select bank2/3
  9454     0CA1  0087               	movwf	7
  9455     0CA2  0181               	clrf	1
  9456     0CA3                     l3227:
  9457                           
  9458                           ;mybutton.c: 71: };mybutton.c: 73: if(0 == b->double_click_tmps[0] && 1 == b->double_cli
      +                          ck_tmps[1]){
  9459     0CA3  082F               	movf	___is_double_click@b,w
  9460     0CA4  3E14               	addlw	20
  9461     0CA5  0086               	movwf	6
  9462     0CA6  3001               	movlw	1	; select bank2/3
  9463     0CA7  0087               	movwf	7
  9464     0CA8  0801               	movf	1,w
  9465     0CA9  1D03               	btfss	3,2
  9466     0CAA  2CAC               	goto	u2961
  9467     0CAB  2CAD               	goto	u2960
  9468     0CAC                     u2961:
  9469     0CAC  2CB9               	goto	l3235
  9470     0CAD                     u2960:
  9471     0CAD                     l3229:
  9472     0CAD  082F               	movf	___is_double_click@b,w
  9473     0CAE  3E15               	addlw	21
  9474     0CAF  0086               	movwf	6
  9475     0CB0  3001               	movlw	1	; select bank2/3
  9476     0CB1  0087               	movwf	7
  9477     0CB2  0301               	decf	1,w
  9478     0CB3  1D03               	btfss	3,2
  9479     0CB4  2CB6               	goto	u2971
  9480     0CB5  2CB7               	goto	u2970
  9481     0CB6                     u2971:
  9482     0CB6  2CB9               	goto	l3235
  9483     0CB7                     u2970:
  9484     0CB7                     l3231:
  9485                           
  9486                           ;mybutton.c: 74: return 1;
  9487     0CB7  3001               	movlw	1
  9488     0CB8  2CBA               	goto	l354
  9489     0CB9                     l3235:
  9490                           
  9491                           ;mybutton.c: 75: };mybutton.c: 76: return 0;
  9492     0CB9  3000               	movlw	0
  9493     0CBA                     l354:
  9494     0CBA  0008               	return
  9495     0CBB                     __end_of___is_double_click:
  9496                           
  9497                           	psect	text6
  9498     1416                     __ptext6:	
  9499 ;; *************** function _tmr0_init *****************
  9500 ;; Defined at:
  9501 ;;		line 5 in file "tmr0.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg, status,2
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;Total ram usage:        0 bytes
  9520 ;; Hardware stack levels used: 1
  9521 ;; Hardware stack levels required when called: 2
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529     1416                     _tmr0_init:	
  9530                           ;psect for function _tmr0_init
  9531                           
  9532     1416                     l3389:	
  9533                           ;incstack = 0
  9534                           ; Regs used in _tmr0_init: [wreg+status,2]
  9535                           
  9536                           
  9537                           ;tmr0.c: 8: T0CON1 = 0x40;
  9538     1416  3040               	movlw	64
  9539     1417  014B               	movlb	11	; select bank11
  9540     1418  009F               	movwf	31	;volatile
  9541                           
  9542                           ;tmr0.c: 11: TMR0H = 0xF3;
  9543     1419  30F3               	movlw	243
  9544     141A  009D               	movwf	29	;volatile
  9545     141B                     l3391:
  9546                           
  9547                           ;tmr0.c: 14: TMR0L = 0x00;
  9548     141B  019C               	clrf	28	;volatile
  9549     141C                     l3393:
  9550                           
  9551                           ;tmr0.c: 17: PIR0bits.TMR0IF = 0;
  9552     141C  014E               	movlb	14	; select bank14
  9553     141D  128C               	bcf	12,5	;volatile
  9554     141E                     l3395:
  9555                           
  9556                           ;tmr0.c: 20: PIE0bits.TMR0IE = 1;
  9557     141E  1696               	bsf	22,5	;volatile
  9558     141F                     l3397:
  9559                           
  9560                           ;tmr0.c: 23: T0CON0 = 0x80;
  9561     141F  3080               	movlw	128
  9562     1420  014B               	movlb	11	; select bank11
  9563     1421  009E               	movwf	30	;volatile
  9564     1422                     l278:
  9565     1422  0008               	return
  9566     1423                     __end_of_tmr0_init:
  9567                           
  9568                           	psect	text7
  9569     0808                     __ptext7:	
  9570 ;; *************** function _set_device_serial_number_to_i2c_slave_memorymap *****************
  9571 ;; Defined at:
  9572 ;;		line 9 in file "set_device_i2c_sn.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;		None
  9575 ;; Auto vars:     Size  Location     Type
  9576 ;;  buffer          3   30[BANK0 ] unsigned char [3]
  9577 ;;  value           1   29[BANK0 ] unsigned char 
  9578 ;;  i               1   33[BANK0 ] unsigned char 
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  1    wreg      void 
  9581 ;; Registers used:
  9582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9589 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9590 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9591 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9592 ;;Total ram usage:        7 bytes
  9593 ;; Hardware stack levels used: 1
  9594 ;; Hardware stack levels required when called: 5
  9595 ;; This function calls:
  9596 ;;		_i2c_slave_set_register_with_lock
  9597 ;;		_strtol
  9598 ;; This function is called by:
  9599 ;;		_main
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603     0808                     _set_device_serial_number_to_i2c_slave_memorymap:	
  9604                           ;psect for function _set_device_serial_number_to_i2c_slave_memorymap
  9605                           
  9606     0808                     l3585:	
  9607                           ;incstack = 0
  9608                           ; Regs used in _set_device_serial_number_to_i2c_slave_memorymap: [wreg-fsr1h+status,2+st
      +                          atus,0+pclath+cstack]
  9609                           
  9610                           
  9611                           ;set_device_i2c_sn.c: 10: for (uint8_t i = 0; i < 5; i++) {
  9612     0808  0140               	movlb	0	; select bank0
  9613     0809  01C1               	clrf	set_device_serial_number_to_i2c_slave_memorymap@i
  9614     080A                     l3591:
  9615                           
  9616                           ;set_device_i2c_sn.c: 11: char buffer[3];;set_device_i2c_sn.c: 12: buffer[0] = "0A018200
      +                          01"[i * 2];
  9617     080A  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
  9618     080B  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
  9619     080C  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
  9620     080D  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
  9621     080E  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
  9622     080F  3064               	movlw	low STR_3
  9623     0810  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
  9624     0811  0084               	movwf	4
  9625     0812  3019               	movlw	high STR_3
  9626     0813  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
  9627     0814  3880               	iorlw	128
  9628     0815  0085               	movwf	5
  9629     0816  0800               	movf	0,w	;code access
  9630     0817  00BE               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer
  9631                           
  9632                           ;set_device_i2c_sn.c: 13: buffer[1] = "0A01820001"[i * 2 + 1];
  9633     0818  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
  9634     0819  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
  9635     081A  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
  9636     081B  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
  9637     081C  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
  9638     081D  3065               	movlw	low (STR_3+1)
  9639     081E  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
  9640     081F  0084               	movwf	4
  9641     0820  3019               	movlw	high (STR_3+1)
  9642     0821  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
  9643     0822  3880               	iorlw	128
  9644     0823  0085               	movwf	5
  9645     0824  0800               	movf	0,w	;code access
  9646     0825  00BF               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer+1
  9647     0826                     l3593:
  9648                           
  9649                           ;set_device_i2c_sn.c: 14: buffer[2] = '\0';
  9650     0826  01C0               	clrf	set_device_serial_number_to_i2c_slave_memorymap@buffer+2
  9651     0827                     l3595:
  9652                           
  9653                           ;set_device_i2c_sn.c: 16: uint8_t value = (uint8_t)strtol(buffer, (0), 16);
  9654     0827  01AC               	clrf	strtol@endptr
  9655     0828  3010               	movlw	16
  9656     0829  00AD               	movwf	strtol@base
  9657     082A  3000               	movlw	0
  9658     082B  00AE               	movwf	strtol@base+1
  9659     082C  303E               	movlw	(low (set_device_serial_number_to_i2c_slave_memorymap@buffer| 0))& (0+255)
  9660     082D  318C  24BB  3188   	fcall	_strtol
  9661     0830  0140               	movlb	0	; select bank0
  9662     0831  082C               	movf	?_strtol,w
  9663     0832  00BD               	movwf	set_device_serial_number_to_i2c_slave_memorymap@value
  9664     0833                     l3597:
  9665                           
  9666                           ;set_device_i2c_sn.c: 17: i2c_slave_set_register_with_lock(57u + i, value);
  9667     0833  083D               	movf	set_device_serial_number_to_i2c_slave_memorymap@value,w
  9668     0834  00A2               	movwf	i2c_slave_set_register_with_lock@value
  9669     0835  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
  9670     0836  3E39               	addlw	57
  9671     0837  3193  23F3  3188   	fcall	_i2c_slave_set_register_with_lock
  9672     083A                     l3599:
  9673     083A  3001               	movlw	1
  9674     083B  0140               	movlb	0	; select bank0
  9675     083C  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
  9676     083D  083B               	movf	??_set_device_serial_number_to_i2c_slave_memorymap,w
  9677     083E  07C1               	addwf	set_device_serial_number_to_i2c_slave_memorymap@i,f
  9678     083F                     l3601:
  9679     083F  3005               	movlw	5
  9680     0840  0241               	subwf	set_device_serial_number_to_i2c_slave_memorymap@i,w
  9681     0841  1C03               	skipc
  9682     0842  2844               	goto	u3441
  9683     0843  2845               	goto	u3440
  9684     0844                     u3441:
  9685     0844  280A               	goto	l3591
  9686     0845                     u3440:
  9687     0845                     l491:
  9688     0845  0008               	return
  9689     0846                     __end_of_set_device_serial_number_to_i2c_slave_memorymap:
  9690                           
  9691                           	psect	text8
  9692     0CBB                     __ptext8:	
  9693 ;; *************** function _strtol *****************
  9694 ;; Defined at:
  9695 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/strtol.c"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;  s               1    wreg     PTR const unsigned char 
  9698 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
  9699 ;;  endptr          1   12[BANK0 ] PTR PTR unsigned char 
  9700 ;;		 -> NULL(0), 
  9701 ;;  base            2   13[BANK0 ] int 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  s               1   25[BANK0 ] PTR const unsigned char 
  9704 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
  9705 ;;  a               4   21[BANK0 ] long 
  9706 ;;  c               1   26[BANK0 ] unsigned char 
  9707 ;;  sign            1   20[BANK0 ] unsigned char 
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  4   12[BANK0 ] long 
  9710 ;; Registers used:
  9711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/0
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9717 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9719 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9720 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9721 ;;Total ram usage:       15 bytes
  9722 ;; Hardware stack levels used: 1
  9723 ;; Hardware stack levels required when called: 4
  9724 ;; This function calls:
  9725 ;;		___lmul
  9726 ;;		_isalpha
  9727 ;;		_isdigit
  9728 ;;		_isspace
  9729 ;;		_toupper
  9730 ;; This function is called by:
  9731 ;;		_set_device_serial_number_to_i2c_slave_memorymap
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735     0CBB                     _strtol:	
  9736                           ;psect for function _strtol
  9737                           
  9738                           
  9739                           ;incstack = 0
  9740                           ; Regs used in _strtol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9741                           ;strtol@s stored from wreg
  9742     0CBB  0140               	movlb	0	; select bank0
  9743     0CBC  00B9               	movwf	strtol@s
  9744     0CBD                     l1273:
  9745     0CBD                     l3285:
  9746     0CBD  0140               	movlb	0	; select bank0
  9747     0CBE  0839               	movf	strtol@s,w
  9748     0CBF  0086               	movwf	6
  9749     0CC0  0187               	clrf	7
  9750     0CC1  0801               	movf	1,w
  9751     0CC2  00BA               	movwf	strtol@c
  9752     0CC3                     l3287:
  9753     0CC3  3001               	movlw	1
  9754     0CC4  00B0               	movwf	??_strtol
  9755     0CC5  0830               	movf	??_strtol,w
  9756     0CC6  07B9               	addwf	strtol@s,f
  9757     0CC7                     l3289:
  9758     0CC7  083A               	movf	strtol@c,w
  9759     0CC8  3187  27E7  318C   	fcall	_isspace
  9760     0CCB  1803               	btfsc	3,0
  9761     0CCC  2CCE               	goto	u3071
  9762     0CCD  2CD0               	goto	u3070
  9763     0CCE                     u3071:
  9764     0CCE  0140               	movlb	0	; select bank0
  9765     0CCF  2CBD               	goto	l1273
  9766     0CD0                     u3070:
  9767     0CD0                     l3291:
  9768     0CD0  3000               	movlw	0
  9769     0CD1  0140               	movlb	0	; select bank0
  9770     0CD2  00B8               	movwf	strtol@a+3
  9771     0CD3  3000               	movlw	0
  9772     0CD4  00B7               	movwf	strtol@a+2
  9773     0CD5  3000               	movlw	0
  9774     0CD6  00B6               	movwf	strtol@a+1
  9775     0CD7  3000               	movlw	0
  9776     0CD8  00B5               	movwf	strtol@a
  9777     0CD9                     l3293:
  9778     0CD9  01B4               	clrf	strtol@sign
  9779     0CDA                     l3295:
  9780     0CDA  302D               	movlw	45
  9781     0CDB  063A               	xorwf	strtol@c,w
  9782     0CDC  1D03               	btfss	3,2
  9783     0CDD  2CDF               	goto	u3081
  9784     0CDE  2CE0               	goto	u3080
  9785     0CDF                     u3081:
  9786     0CDF  2CEC               	goto	l3303
  9787     0CE0                     u3080:
  9788     0CE0                     l3297:
  9789     0CE0  01B4               	clrf	strtol@sign
  9790     0CE1  0AB4               	incf	strtol@sign,f
  9791     0CE2                     l3299:
  9792     0CE2  0839               	movf	strtol@s,w
  9793     0CE3  0086               	movwf	6
  9794     0CE4  0187               	clrf	7
  9795     0CE5  0801               	movf	1,w
  9796     0CE6  00BA               	movwf	strtol@c
  9797     0CE7                     l3301:
  9798     0CE7  3001               	movlw	1
  9799     0CE8  00B0               	movwf	??_strtol
  9800     0CE9  0830               	movf	??_strtol,w
  9801     0CEA  07B9               	addwf	strtol@s,f
  9802     0CEB  2CF3               	goto	l3309
  9803     0CEC                     l3303:
  9804     0CEC  302B               	movlw	43
  9805     0CED  063A               	xorwf	strtol@c,w
  9806     0CEE  1D03               	btfss	3,2
  9807     0CEF  2CF1               	goto	u3091
  9808     0CF0  2CF2               	goto	u3090
  9809     0CF1                     u3091:
  9810     0CF1  2CF3               	goto	l3309
  9811     0CF2                     u3090:
  9812     0CF2  2CE2               	goto	l3299
  9813     0CF3                     l3309:
  9814     0CF3  3030               	movlw	48
  9815     0CF4  063A               	xorwf	strtol@c,w
  9816     0CF5  1D03               	btfss	3,2
  9817     0CF6  2CF8               	goto	u3101
  9818     0CF7  2CF9               	goto	u3100
  9819     0CF8                     u3101:
  9820     0CF8  2D33               	goto	l3333
  9821     0CF9                     u3100:
  9822     0CF9                     l3311:
  9823     0CF9  0839               	movf	strtol@s,w
  9824     0CFA  0086               	movwf	6
  9825     0CFB  0187               	clrf	7
  9826     0CFC  0801               	movf	1,w
  9827     0CFD  00BA               	movwf	strtol@c
  9828     0CFE                     l3313:
  9829     0CFE  3001               	movlw	1
  9830     0CFF  00B0               	movwf	??_strtol
  9831     0D00  0830               	movf	??_strtol,w
  9832     0D01  07B9               	addwf	strtol@s,f
  9833     0D02                     l3315:
  9834     0D02  082D               	movf	strtol@base,w
  9835     0D03  042E               	iorwf	strtol@base+1,w
  9836     0D04  1903               	btfsc	3,2
  9837     0D05  2D07               	goto	u3111
  9838     0D06  2D08               	goto	u3110
  9839     0D07                     u3111:
  9840     0D07  2D0F               	goto	l3319
  9841     0D08                     u3110:
  9842     0D08                     l3317:
  9843     0D08  3010               	movlw	16
  9844     0D09  062D               	xorwf	strtol@base,w
  9845     0D0A  042E               	iorwf	strtol@base+1,w
  9846     0D0B  1D03               	btfss	3,2
  9847     0D0C  2D0E               	goto	u3121
  9848     0D0D  2D0F               	goto	u3120
  9849     0D0E                     u3121:
  9850     0D0E  2D29               	goto	l3329
  9851     0D0F                     u3120:
  9852     0D0F                     l3319:
  9853     0D0F  3078               	movlw	120
  9854     0D10  063A               	xorwf	strtol@c,w
  9855     0D11  1903               	btfsc	3,2
  9856     0D12  2D14               	goto	u3131
  9857     0D13  2D15               	goto	u3130
  9858     0D14                     u3131:
  9859     0D14  2D1B               	goto	l3323
  9860     0D15                     u3130:
  9861     0D15                     l3321:
  9862     0D15  3058               	movlw	88
  9863     0D16  063A               	xorwf	strtol@c,w
  9864     0D17  1D03               	btfss	3,2
  9865     0D18  2D1A               	goto	u3141
  9866     0D19  2D1B               	goto	u3140
  9867     0D1A                     u3141:
  9868     0D1A  2D29               	goto	l3329
  9869     0D1B                     u3140:
  9870     0D1B                     l3323:
  9871     0D1B  3010               	movlw	16
  9872     0D1C  00AD               	movwf	strtol@base
  9873     0D1D  3000               	movlw	0
  9874     0D1E  00AE               	movwf	strtol@base+1
  9875     0D1F                     l3325:
  9876     0D1F  0839               	movf	strtol@s,w
  9877     0D20  0086               	movwf	6
  9878     0D21  0187               	clrf	7
  9879     0D22  0801               	movf	1,w
  9880     0D23  00BA               	movwf	strtol@c
  9881     0D24                     l3327:
  9882     0D24  3001               	movlw	1
  9883     0D25  00B0               	movwf	??_strtol
  9884     0D26  0830               	movf	??_strtol,w
  9885     0D27  07B9               	addwf	strtol@s,f
  9886     0D28  2D33               	goto	l3333
  9887     0D29                     l3329:
  9888     0D29  082D               	movf	strtol@base,w
  9889     0D2A  042E               	iorwf	strtol@base+1,w
  9890     0D2B  1D03               	btfss	3,2
  9891     0D2C  2D2E               	goto	u3151
  9892     0D2D  2D2F               	goto	u3150
  9893     0D2E                     u3151:
  9894     0D2E  2D33               	goto	l3333
  9895     0D2F                     u3150:
  9896     0D2F                     l3331:
  9897     0D2F  3008               	movlw	8
  9898     0D30  00AD               	movwf	strtol@base
  9899     0D31  3000               	movlw	0
  9900     0D32  00AE               	movwf	strtol@base+1
  9901     0D33                     l3333:
  9902     0D33  082D               	movf	strtol@base,w
  9903     0D34  042E               	iorwf	strtol@base+1,w
  9904     0D35  1D03               	btfss	3,2
  9905     0D36  2D38               	goto	u3161
  9906     0D37  2D39               	goto	u3160
  9907     0D38                     u3161:
  9908     0D38  2D3D               	goto	l3337
  9909     0D39                     u3160:
  9910     0D39                     l3335:
  9911     0D39  300A               	movlw	10
  9912     0D3A  00AD               	movwf	strtol@base
  9913     0D3B  3000               	movlw	0
  9914     0D3C  00AE               	movwf	strtol@base+1
  9915     0D3D                     l3337:
  9916     0D3D  083A               	movf	strtol@c,w
  9917     0D3E  3194  24AE  318C   	fcall	_isalpha
  9918     0D41  1C03               	btfss	3,0
  9919     0D42  2D44               	goto	u3171
  9920     0D43  2D45               	goto	u3170
  9921     0D44                     u3171:
  9922     0D44  2D4E               	goto	l3341
  9923     0D45                     u3170:
  9924     0D45                     l3339:
  9925     0D45  0140               	movlb	0	; select bank0
  9926     0D46  083A               	movf	strtol@c,w
  9927     0D47  3194  2480  318C   	fcall	_toupper
  9928     0D4A  3EC9               	addlw	201
  9929     0D4B  0140               	movlb	0	; select bank0
  9930     0D4C  00BA               	movwf	strtol@c
  9931     0D4D  2D5A               	goto	l3345
  9932     0D4E                     l3341:
  9933     0D4E  0140               	movlb	0	; select bank0
  9934     0D4F  083A               	movf	strtol@c,w
  9935     0D50  3194  2433  318C   	fcall	_isdigit
  9936     0D53  1C03               	btfss	3,0
  9937     0D54  2D56               	goto	u3181
  9938     0D55  2D57               	goto	u3180
  9939     0D56                     u3181:
  9940     0D56  2D9B               	goto	l3355
  9941     0D57                     u3180:
  9942     0D57                     l3343:
  9943     0D57  3030               	movlw	48
  9944     0D58  0140               	movlb	0	; select bank0
  9945     0D59  02BA               	subwf	strtol@c,f
  9946     0D5A                     l3345:
  9947     0D5A  082E               	movf	strtol@base+1,w
  9948     0D5B  3A80               	xorlw	128
  9949     0D5C  3C80               	sublw	128
  9950     0D5D  1D03               	skipz
  9951     0D5E  2D61               	goto	u3195
  9952     0D5F  082D               	movf	strtol@base,w
  9953     0D60  023A               	subwf	strtol@c,w
  9954     0D61                     u3195:
  9955     0D61  1C03               	skipc
  9956     0D62  2D64               	goto	u3191
  9957     0D63  2D65               	goto	u3190
  9958     0D64                     u3191:
  9959     0D64  2D66               	goto	l3349
  9960     0D65                     u3190:
  9961     0D65  2D9B               	goto	l3355
  9962     0D66                     l3349:
  9963     0D66  0140               	movlb	0	; select bank0
  9964     0D67  083A               	movf	strtol@c,w
  9965     0D68  00B0               	movwf	??_strtol
  9966     0D69  01B1               	clrf	??_strtol+1
  9967     0D6A  01B2               	clrf	??_strtol+2
  9968     0D6B  01B3               	clrf	??_strtol+3
  9969     0D6C  082D               	movf	strtol@base,w
  9970     0D6D  00A0               	movwf	___lmul@multiplier
  9971     0D6E  082E               	movf	strtol@base+1,w
  9972     0D6F  00A1               	movwf	___lmul@multiplier+1
  9973     0D70  0D89               	rlf	9,f
  9974     0D71  3B89               	subwfb	9,f
  9975     0D72  0989               	comf	9,f
  9976     0D73  00A2               	movwf	___lmul@multiplier+2
  9977     0D74  00A3               	movwf	___lmul@multiplier+3
  9978     0D75  0838               	movf	strtol@a+3,w
  9979     0D76  00A7               	movwf	___lmul@multiplicand+3
  9980     0D77  0837               	movf	strtol@a+2,w
  9981     0D78  00A6               	movwf	___lmul@multiplicand+2
  9982     0D79  0836               	movf	strtol@a+1,w
  9983     0D7A  00A5               	movwf	___lmul@multiplicand+1
  9984     0D7B  0835               	movf	strtol@a,w
  9985     0D7C  00A4               	movwf	___lmul@multiplicand
  9986     0D7D  3195  25D6  318C   	fcall	___lmul
  9987     0D80  0140               	movlb	0	; select bank0
  9988     0D81  0820               	movf	?___lmul,w
  9989     0D82  07B0               	addwf	??_strtol,f
  9990     0D83  0821               	movf	?___lmul+1,w
  9991     0D84  3DB1               	addwfc	??_strtol+1,f
  9992     0D85  0822               	movf	?___lmul+2,w
  9993     0D86  3DB2               	addwfc	??_strtol+2,f
  9994     0D87  0823               	movf	?___lmul+3,w
  9995     0D88  3DB3               	addwfc	??_strtol+3,f
  9996     0D89  0833               	movf	??_strtol+3,w
  9997     0D8A  00B8               	movwf	strtol@a+3
  9998     0D8B  0832               	movf	??_strtol+2,w
  9999     0D8C  00B7               	movwf	strtol@a+2
 10000     0D8D  0831               	movf	??_strtol+1,w
 10001     0D8E  00B6               	movwf	strtol@a+1
 10002     0D8F  0830               	movf	??_strtol,w
 10003     0D90  00B5               	movwf	strtol@a
 10004     0D91                     l3351:
 10005     0D91  0839               	movf	strtol@s,w
 10006     0D92  0086               	movwf	6
 10007     0D93  0187               	clrf	7
 10008     0D94  0801               	movf	1,w
 10009     0D95  00BA               	movwf	strtol@c
 10010     0D96                     l3353:
 10011     0D96  3001               	movlw	1
 10012     0D97  00B0               	movwf	??_strtol
 10013     0D98  0830               	movf	??_strtol,w
 10014     0D99  07B9               	addwf	strtol@s,f
 10015     0D9A  2D3D               	goto	l3337
 10016     0D9B                     l3355:
 10017     0D9B  0140               	movlb	0	; select bank0
 10018     0D9C  082C               	movf	strtol@endptr,w
 10019     0D9D  1903               	btfsc	3,2
 10020     0D9E  2DA0               	goto	u3201
 10021     0D9F  2DA1               	goto	u3200
 10022     0DA0                     u3201:
 10023     0DA0  2DA7               	goto	l3359
 10024     0DA1                     u3200:
 10025     0DA1                     l3357:
 10026     0DA1  082C               	movf	strtol@endptr,w
 10027     0DA2  0086               	movwf	6
 10028     0DA3  0187               	clrf	7
 10029     0DA4  0839               	movf	strtol@s,w
 10030     0DA5  3EFF               	addlw	-1
 10031     0DA6  0081               	movwf	1
 10032     0DA7                     l3359:
 10033     0DA7  0834               	movf	strtol@sign,w
 10034     0DA8  1903               	btfsc	3,2
 10035     0DA9  2DAB               	goto	u3211
 10036     0DAA  2DAC               	goto	u3210
 10037     0DAB                     u3211:
 10038     0DAB  2DBC               	goto	l3365
 10039     0DAC                     u3210:
 10040     0DAC                     l3361:
 10041     0DAC  0935               	comf	strtol@a,w
 10042     0DAD  00AC               	movwf	?_strtol
 10043     0DAE  0936               	comf	strtol@a+1,w
 10044     0DAF  00AD               	movwf	?_strtol+1
 10045     0DB0  0937               	comf	strtol@a+2,w
 10046     0DB1  00AE               	movwf	?_strtol+2
 10047     0DB2  0938               	comf	strtol@a+3,w
 10048     0DB3  00AF               	movwf	?_strtol+3
 10049     0DB4  0AAC               	incf	?_strtol,f
 10050     0DB5  1903               	skipnz
 10051     0DB6  0AAD               	incf	?_strtol+1,f
 10052     0DB7  1903               	skipnz
 10053     0DB8  0AAE               	incf	?_strtol+2,f
 10054     0DB9  1903               	skipnz
 10055     0DBA  0AAF               	incf	?_strtol+3,f
 10056     0DBB  2DC4               	goto	l1296
 10057     0DBC                     l3365:
 10058     0DBC  0838               	movf	strtol@a+3,w
 10059     0DBD  00AF               	movwf	?_strtol+3
 10060     0DBE  0837               	movf	strtol@a+2,w
 10061     0DBF  00AE               	movwf	?_strtol+2
 10062     0DC0  0836               	movf	strtol@a+1,w
 10063     0DC1  00AD               	movwf	?_strtol+1
 10064     0DC2  0835               	movf	strtol@a,w
 10065     0DC3  00AC               	movwf	?_strtol
 10066     0DC4                     l1296:
 10067     0DC4  0008               	return
 10068     0DC5                     __end_of_strtol:
 10069                           
 10070                           	psect	text9
 10071     1480                     __ptext9:	
 10072 ;; *************** function _toupper *****************
 10073 ;; Defined at:
 10074 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/toupper.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;  c               1    wreg     unsigned char 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  c               1    1[BANK0 ] unsigned char 
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      unsigned char 
 10081 ;; Registers used:
 10082 ;;		wreg, status,2, status,0
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10090 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10091 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10092 ;;Total ram usage:        2 bytes
 10093 ;; Hardware stack levels used: 1
 10094 ;; Hardware stack levels required when called: 2
 10095 ;; This function calls:
 10096 ;;		Nothing
 10097 ;; This function is called by:
 10098 ;;		_strtol
 10099 ;; This function uses a non-reentrant model
 10100 ;;
 10101                           
 10102     1480                     _toupper:	
 10103                           ;psect for function _toupper
 10104                           
 10105                           
 10106                           ;incstack = 0
 10107                           ; Regs used in _toupper: [wreg+status,2+status,0]
 10108                           ;toupper@c stored from wreg
 10109     1480  0140               	movlb	0	; select bank0
 10110     1481  00A1               	movwf	toupper@c
 10111     1482                     l3041:
 10112     1482  307B               	movlw	123
 10113     1483  0221               	subwf	toupper@c,w
 10114     1484  1803               	skipnc
 10115     1485  2C87               	goto	u2631
 10116     1486  2C88               	goto	u2630
 10117     1487                     u2631:
 10118     1487  2C92               	goto	l3047
 10119     1488                     u2630:
 10120     1488                     l3043:
 10121     1488  3061               	movlw	97
 10122     1489  0221               	subwf	toupper@c,w
 10123     148A  1C03               	skipc
 10124     148B  2C8D               	goto	u2641
 10125     148C  2C8E               	goto	u2640
 10126     148D                     u2641:
 10127     148D  2C92               	goto	l3047
 10128     148E                     u2640:
 10129     148E                     l3045:
 10130     148E  30DF               	movlw	223
 10131     148F  00A0               	movwf	??_toupper
 10132     1490  0820               	movf	??_toupper,w
 10133     1491  05A1               	andwf	toupper@c,f
 10134     1492                     l3047:
 10135     1492  0821               	movf	toupper@c,w
 10136     1493                     l1317:
 10137     1493  0008               	return
 10138     1494                     __end_of_toupper:
 10139                           
 10140                           	psect	text10
 10141     07E7                     __ptext10:	
 10142 ;; *************** function _isspace *****************
 10143 ;; Defined at:
 10144 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isspace.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  c               1    wreg     unsigned char 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  c               1    1[BANK0 ] unsigned char 
 10149 ;; Return value:  Size  Location     Type
 10150 ;;		None               void
 10151 ;; Registers used:
 10152 ;;		wreg, status,2, status,0
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10162 ;;Total ram usage:        2 bytes
 10163 ;; Hardware stack levels used: 1
 10164 ;; Hardware stack levels required when called: 2
 10165 ;; This function calls:
 10166 ;;		Nothing
 10167 ;; This function is called by:
 10168 ;;		_strtol
 10169 ;; This function uses a non-reentrant model
 10170 ;;
 10171                           
 10172     07E7                     _isspace:	
 10173                           ;psect for function _isspace
 10174                           
 10175                           
 10176                           ;incstack = 0
 10177                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10178                           ;isspace@c stored from wreg
 10179     07E7  0140               	movlb	0	; select bank0
 10180     07E8  00A1               	movwf	isspace@c
 10181     07E9                     l3013:
 10182     07E9  01A0               	clrf	_isspace$1756
 10183     07EA  0AA0               	incf	_isspace$1756,f
 10184     07EB                     l3015:
 10185     07EB  3020               	movlw	32
 10186     07EC  0621               	xorwf	isspace@c,w
 10187     07ED  1903               	btfsc	3,2
 10188     07EE  2FF0               	goto	u2571
 10189     07EF  2FF1               	goto	u2570
 10190     07F0                     u2571:
 10191     07F0  2FFE               	goto	l3023
 10192     07F1                     u2570:
 10193     07F1                     l3017:
 10194     07F1  300E               	movlw	14
 10195     07F2  0221               	subwf	isspace@c,w
 10196     07F3  1803               	skipnc
 10197     07F4  2FF6               	goto	u2581
 10198     07F5  2FF7               	goto	u2580
 10199     07F6                     u2581:
 10200     07F6  2FFD               	goto	l3021
 10201     07F7                     u2580:
 10202     07F7                     l3019:
 10203     07F7  3009               	movlw	9
 10204     07F8  0221               	subwf	isspace@c,w
 10205     07F9  1803               	skipnc
 10206     07FA  2FFC               	goto	u2591
 10207     07FB  2FFD               	goto	u2590
 10208     07FC                     u2591:
 10209     07FC  2FFE               	goto	l3023
 10210     07FD                     u2590:
 10211     07FD                     l3021:
 10212     07FD  01A0               	clrf	_isspace$1756
 10213     07FE                     l3023:
 10214     07FE  0C20               	rrf	_isspace$1756,w
 10215     07FF                     l1308:
 10216     07FF  0008               	return
 10217     0800                     __end_of_isspace:
 10218                           
 10219                           	psect	text11
 10220     14AE                     __ptext11:	
 10221 ;; *************** function _isalpha *****************
 10222 ;; Defined at:
 10223 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isalpha.c"
 10224 ;; Parameters:    Size  Location     Type
 10225 ;;  c               1    wreg     unsigned char 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  c               1    3[BANK0 ] unsigned char 
 10228 ;; Return value:  Size  Location     Type
 10229 ;;		None               void
 10230 ;; Registers used:
 10231 ;;		wreg, status,2, status,0, pclath, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;Total ram usage:        2 bytes
 10242 ;; Hardware stack levels used: 1
 10243 ;; Hardware stack levels required when called: 3
 10244 ;; This function calls:
 10245 ;;		_isupper
 10246 ;; This function is called by:
 10247 ;;		_strtol
 10248 ;; This function uses a non-reentrant model
 10249 ;;
 10250                           
 10251     14AE                     _isalpha:	
 10252                           ;psect for function _isalpha
 10253                           
 10254                           
 10255                           ;incstack = 0
 10256                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
 10257                           ;isalpha@c stored from wreg
 10258     14AE  0140               	movlb	0	; select bank0
 10259     14AF  00A3               	movwf	isalpha@c
 10260     14B0                     l3027:
 10261     14B0  01A2               	clrf	_isalpha$1753
 10262     14B1  0AA2               	incf	_isalpha$1753,f
 10263     14B2                     l3029:
 10264     14B2  307B               	movlw	123
 10265     14B3  0223               	subwf	isalpha@c,w
 10266     14B4  1803               	skipnc
 10267     14B5  2CB7               	goto	u2601
 10268     14B6  2CB8               	goto	u2600
 10269     14B7                     u2601:
 10270     14B7  2CBE               	goto	l3033
 10271     14B8                     u2600:
 10272     14B8                     l3031:
 10273     14B8  3061               	movlw	97
 10274     14B9  0223               	subwf	isalpha@c,w
 10275     14BA  1803               	skipnc
 10276     14BB  2CBD               	goto	u2611
 10277     14BC  2CBE               	goto	u2610
 10278     14BD                     u2611:
 10279     14BD  2CC8               	goto	l3037
 10280     14BE                     u2610:
 10281     14BE                     l3033:
 10282     14BE  0823               	movf	isalpha@c,w
 10283     14BF  3194  2459  3194   	fcall	_isupper
 10284     14C2  1803               	btfsc	3,0
 10285     14C3  2CC5               	goto	u2621
 10286     14C4  2CC6               	goto	u2620
 10287     14C5                     u2621:
 10288     14C5  2CC8               	goto	l3037
 10289     14C6                     u2620:
 10290     14C6                     l3035:
 10291     14C6  0140               	movlb	0	; select bank0
 10292     14C7  01A2               	clrf	_isalpha$1753
 10293     14C8                     l3037:
 10294     14C8  0140               	movlb	0	; select bank0
 10295     14C9  0C22               	rrf	_isalpha$1753,w
 10296     14CA                     l1303:
 10297     14CA  0008               	return
 10298     14CB                     __end_of_isalpha:
 10299                           
 10300                           	psect	text12
 10301     1459                     __ptext12:	
 10302 ;; *************** function _isupper *****************
 10303 ;; Defined at:
 10304 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isupper.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;  c               1    wreg     unsigned char 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;  c               1    1[BANK0 ] unsigned char 
 10309 ;; Return value:  Size  Location     Type
 10310 ;;		None               void
 10311 ;; Registers used:
 10312 ;;		wreg, status,2, status,0
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10322 ;;Total ram usage:        2 bytes
 10323 ;; Hardware stack levels used: 1
 10324 ;; Hardware stack levels required when called: 2
 10325 ;; This function calls:
 10326 ;;		Nothing
 10327 ;; This function is called by:
 10328 ;;		_isalpha
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332     1459                     _isupper:	
 10333                           ;psect for function _isupper
 10334                           
 10335                           
 10336                           ;incstack = 0
 10337                           ; Regs used in _isupper: [wreg+status,2+status,0]
 10338                           ;isupper@c stored from wreg
 10339     1459  0140               	movlb	0	; select bank0
 10340     145A  00A1               	movwf	isupper@c
 10341     145B                     l2823:
 10342     145B  01A0               	clrf	_isupper$1759
 10343     145C                     l2825:
 10344     145C  305B               	movlw	91
 10345     145D  0221               	subwf	isupper@c,w
 10346     145E  1803               	skipnc
 10347     145F  2C61               	goto	u2241
 10348     1460  2C62               	goto	u2240
 10349     1461                     u2241:
 10350     1461  2C6A               	goto	l2831
 10351     1462                     u2240:
 10352     1462                     l2827:
 10353     1462  3041               	movlw	65
 10354     1463  0221               	subwf	isupper@c,w
 10355     1464  1C03               	skipc
 10356     1465  2C67               	goto	u2251
 10357     1466  2C68               	goto	u2250
 10358     1467                     u2251:
 10359     1467  2C6A               	goto	l2831
 10360     1468                     u2250:
 10361     1468                     l2829:
 10362     1468  01A0               	clrf	_isupper$1759
 10363     1469  0AA0               	incf	_isupper$1759,f
 10364     146A                     l2831:
 10365     146A  0C20               	rrf	_isupper$1759,w
 10366     146B                     l1313:
 10367     146B  0008               	return
 10368     146C                     __end_of_isupper:
 10369                           
 10370                           	psect	text13
 10371     15D6                     __ptext13:	
 10372 ;; *************** function ___lmul *****************
 10373 ;; Defined at:
 10374 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul32.c"
 10375 ;; Parameters:    Size  Location     Type
 10376 ;;  multiplier      4    0[BANK0 ] unsigned long 
 10377 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  product         4    8[BANK0 ] unsigned long 
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  4    0[BANK0 ] unsigned long 
 10382 ;; Registers used:
 10383 ;;		wreg, status,2, status,0
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10389 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10392 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10393 ;;Total ram usage:       12 bytes
 10394 ;; Hardware stack levels used: 1
 10395 ;; Hardware stack levels required when called: 2
 10396 ;; This function calls:
 10397 ;;		Nothing
 10398 ;; This function is called by:
 10399 ;;		_strtol
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403     15D6                     ___lmul:	
 10404                           ;psect for function ___lmul
 10405                           
 10406     15D6                     l2999:	
 10407                           ;incstack = 0
 10408                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10409                           
 10410     15D6  3000               	movlw	0
 10411     15D7  0140               	movlb	0	; select bank0
 10412     15D8  00AB               	movwf	___lmul@product+3
 10413     15D9  3000               	movlw	0
 10414     15DA  00AA               	movwf	___lmul@product+2
 10415     15DB  3000               	movlw	0
 10416     15DC  00A9               	movwf	___lmul@product+1
 10417     15DD  3000               	movlw	0
 10418     15DE  00A8               	movwf	___lmul@product
 10419     15DF                     l3001:
 10420     15DF  1C20               	btfss	___lmul@multiplier,0
 10421     15E0  2DE2               	goto	u2531
 10422     15E1  2DE3               	goto	u2530
 10423     15E2                     u2531:
 10424     15E2  2DEB               	goto	l3005
 10425     15E3                     u2530:
 10426     15E3                     l3003:
 10427     15E3  0824               	movf	___lmul@multiplicand,w
 10428     15E4  07A8               	addwf	___lmul@product,f
 10429     15E5  0825               	movf	___lmul@multiplicand+1,w
 10430     15E6  3DA9               	addwfc	___lmul@product+1,f
 10431     15E7  0826               	movf	___lmul@multiplicand+2,w
 10432     15E8  3DAA               	addwfc	___lmul@product+2,f
 10433     15E9  0827               	movf	___lmul@multiplicand+3,w
 10434     15EA  3DAB               	addwfc	___lmul@product+3,f
 10435     15EB                     l3005:
 10436     15EB  3001               	movlw	1
 10437     15EC                     u2545:
 10438     15EC  35A4               	lslf	___lmul@multiplicand,f
 10439     15ED  0DA5               	rlf	___lmul@multiplicand+1,f
 10440     15EE  0DA6               	rlf	___lmul@multiplicand+2,f
 10441     15EF  0DA7               	rlf	___lmul@multiplicand+3,f
 10442     15F0  0B89               	decfsz	9,f
 10443     15F1  2DEC               	goto	u2545
 10444     15F2                     l3007:
 10445     15F2  3001               	movlw	1
 10446     15F3                     u2555:
 10447     15F3  36A3               	lsrf	___lmul@multiplier+3,f
 10448     15F4  0CA2               	rrf	___lmul@multiplier+2,f
 10449     15F5  0CA1               	rrf	___lmul@multiplier+1,f
 10450     15F6  0CA0               	rrf	___lmul@multiplier,f
 10451     15F7  0B89               	decfsz	9,f
 10452     15F8  2DF3               	goto	u2555
 10453     15F9  0823               	movf	___lmul@multiplier+3,w
 10454     15FA  0422               	iorwf	___lmul@multiplier+2,w
 10455     15FB  0421               	iorwf	___lmul@multiplier+1,w
 10456     15FC  0420               	iorwf	___lmul@multiplier,w
 10457     15FD  1D03               	skipz
 10458     15FE  2E00               	goto	u2561
 10459     15FF  2E01               	goto	u2560
 10460     1600                     u2561:
 10461     1600  2DDF               	goto	l3001
 10462     1601                     u2560:
 10463     1601                     l3009:
 10464     1601  082B               	movf	___lmul@product+3,w
 10465     1602  00A3               	movwf	?___lmul+3
 10466     1603  082A               	movf	___lmul@product+2,w
 10467     1604  00A2               	movwf	?___lmul+2
 10468     1605  0829               	movf	___lmul@product+1,w
 10469     1606  00A1               	movwf	?___lmul+1
 10470     1607  0828               	movf	___lmul@product,w
 10471     1608  00A0               	movwf	?___lmul
 10472     1609                     l818:
 10473     1609  0008               	return
 10474     160A                     __end_of___lmul:
 10475                           
 10476                           	psect	text14
 10477     13F3                     __ptext14:	
 10478 ;; *************** function _i2c_slave_set_register_with_lock *****************
 10479 ;; Defined at:
 10480 ;;		line 41 in file "i2c_slave.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  registerAddr    1    wreg     unsigned char 
 10483 ;;  value           1    2[BANK0 ] unsigned char 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;  registerAddr    1    3[BANK0 ] unsigned char 
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      void 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10495 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10499 ;;Total ram usage:        2 bytes
 10500 ;; Hardware stack levels used: 1
 10501 ;; Hardware stack levels required when called: 3
 10502 ;; This function calls:
 10503 ;;		_i2c_slave_set_register
 10504 ;; This function is called by:
 10505 ;;		_set_device_serial_number_to_i2c_slave_memorymap
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509     13F3                     _i2c_slave_set_register_with_lock:	
 10510                           ;psect for function _i2c_slave_set_register_with_lock
 10511                           
 10512                           
 10513                           ;incstack = 0
 10514                           ; Regs used in _i2c_slave_set_register_with_lock: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
 10515                           ;i2c_slave_set_register_with_lock@registerAddress stored from wreg
 10516     13F3  0140               	movlb	0	; select bank0
 10517     13F4  00A3               	movwf	i2c_slave_set_register_with_lock@registerAddress
 10518     13F5                     l3115:
 10519                           
 10520                           ;i2c_slave.c: 42: GIE = 0;
 10521     13F5  138B               	bcf	11,7	;volatile
 10522     13F6                     l3117:
 10523                           
 10524                           ;i2c_slave.c: 43: i2c_slave_set_register(registerAddress, value);
 10525     13F6  0822               	movf	i2c_slave_set_register_with_lock@value,w
 10526     13F7  00A0               	movwf	i2c_slave_set_register@value
 10527     13F8  0823               	movf	i2c_slave_set_register_with_lock@registerAddress,w
 10528     13F9  3193  23E9  3193   	fcall	_i2c_slave_set_register
 10529     13FC                     l3119:
 10530                           
 10531                           ;i2c_slave.c: 44: GIE = 1;
 10532     13FC  178B               	bsf	11,7	;volatile
 10533     13FD                     l239:
 10534     13FD  0008               	return
 10535     13FE                     __end_of_i2c_slave_set_register_with_lock:
 10536                           
 10537                           	psect	text15
 10538     13E9                     __ptext15:	
 10539 ;; *************** function _i2c_slave_set_register *****************
 10540 ;; Defined at:
 10541 ;;		line 32 in file "i2c_slave.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;  registerAddr    1    wreg     unsigned char 
 10544 ;;  value           1    0[BANK0 ] unsigned char 
 10545 ;; Auto vars:     Size  Location     Type
 10546 ;;  registerAddr    1    1[BANK0 ] unsigned char 
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  1    wreg      void 
 10549 ;; Registers used:
 10550 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10556 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;Total ram usage:        2 bytes
 10561 ;; Hardware stack levels used: 1
 10562 ;; Hardware stack levels required when called: 2
 10563 ;; This function calls:
 10564 ;;		Nothing
 10565 ;; This function is called by:
 10566 ;;		_main
 10567 ;;		_i2c_slave_set_register_with_lock
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571     13E9                     _i2c_slave_set_register:	
 10572                           ;psect for function _i2c_slave_set_register
 10573                           
 10574                           
 10575                           ;incstack = 0
 10576                           ; Regs used in _i2c_slave_set_register: [wreg+fsr1l+fsr1h+status,2+status,0]
 10577                           ;i2c_slave_set_register@registerAddress stored from wreg
 10578     13E9  0140               	movlb	0	; select bank0
 10579     13EA  00A1               	movwf	i2c_slave_set_register@registerAddress
 10580     13EB                     l2981:
 10581                           
 10582                           ;i2c_slave.c: 33: slaveData[registerAddress] = value;
 10583     13EB  0821               	movf	i2c_slave_set_register@registerAddress,w
 10584     13EC  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 10585     13ED  0086               	movwf	6
 10586     13EE  3002               	movlw	2	; select bank4/5
 10587     13EF  0087               	movwf	7
 10588     13F0  0820               	movf	i2c_slave_set_register@value,w
 10589     13F1  0081               	movwf	1
 10590     13F2                     l233:
 10591     13F2  0008               	return
 10592     13F3                     __end_of_i2c_slave_set_register:
 10593                           
 10594                           	psect	text16
 10595     0846                     __ptext16:	
 10596 ;; *************** function _monitoring_sync *****************
 10597 ;; Defined at:
 10598 ;;		line 14 in file "monitor_sync.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  state           1    wreg     PTR enum E10399
 10601 ;;		 -> main@state(1), 
 10602 ;;  b1              1   56[BANK0 ] PTR struct mybutton
 10603 ;;		 -> main@b1(27), 
 10604 ;;  b2              1   57[BANK0 ] PTR struct mybutton
 10605 ;;		 -> main@b2(27), 
 10606 ;;  b1_clicked_c    1   58[BANK0 ] PTR unsigned char 
 10607 ;;		 -> main@b1_clicked_count(1), 
 10608 ;;  b2_clicked_c    1   59[BANK0 ] PTR unsigned char 
 10609 ;;		 -> main@b2_clicked_count(1), 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  state           1   60[BANK0 ] PTR enum E10399
 10612 ;;		 -> main@state(1), 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 0/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10622 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10625 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10626 ;;Total ram usage:        5 bytes
 10627 ;; Hardware stack levels used: 1
 10628 ;; Hardware stack levels required when called: 4
 10629 ;; This function calls:
 10630 ;;		_LED_flashes_three_times
 10631 ;;		_is_long_press
 10632 ;;		_is_single_click
 10633 ;;		_printf
 10634 ;;		_reset_long_press_flag
 10635 ;;		_reset_single_click_flag
 10636 ;; This function is called by:
 10637 ;;		_main
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641     0846                     _monitoring_sync:	
 10642                           ;psect for function _monitoring_sync
 10643                           
 10644     0846                     l3497:	
 10645                           ;incstack = 0
 10646                           ; Regs used in _monitoring_sync: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10647                           
 10648                           
 10649                           ;monitor_sync.c: 21: if( is_single_click(b1) ){
 10650     0846  0140               	movlb	0	; select bank0
 10651     0847  0858               	movf	monitoring_sync@b1,w
 10652     0848  3193  23A6  3188   	fcall	_is_single_click
 10653     084B  3A00               	xorlw	0
 10654     084C  1903               	skipnz
 10655     084D  284F               	goto	u3331
 10656     084E  2850               	goto	u3330
 10657     084F                     u3331:
 10658     084F  286A               	goto	l3507
 10659     0850                     u3330:
 10660     0850                     l3499:
 10661                           
 10662                           ;monitor_sync.c: 22: printf("b1 clicked\r\n");
 10663     0850  303F               	movlw	low (STR_23| (0+32768))
 10664     0851  0140               	movlb	0	; select bank0
 10665     0852  00B8               	movwf	printf@f
 10666     0853  3099               	movlw	high (STR_23| (0+32768))
 10667     0854  00B9               	movwf	printf@f+1
 10668     0855  3184  242C  3188   	fcall	_printf
 10669     0858                     l3501:
 10670                           
 10671                           ;monitor_sync.c: 23: *b1_clicked_count = (*b1_clicked_count) + 1;
 10672     0858  0140               	movlb	0	; select bank0
 10673     0859  085A               	movf	monitoring_sync@b1_clicked_count,w
 10674     085A  0086               	movwf	6
 10675     085B  0187               	clrf	7
 10676     085C  085A               	movf	monitoring_sync@b1_clicked_count,w
 10677     085D  0084               	movwf	4
 10678     085E  0185               	clrf	5
 10679     085F  0800               	movf	0,w
 10680     0860  3E01               	addlw	1
 10681     0861  0081               	movwf	1
 10682     0862                     l3503:
 10683                           
 10684                           ;monitor_sync.c: 24: LED_flashes_three_times();
 10685     0862  3195  2579  3188   	fcall	_LED_flashes_three_times
 10686     0865                     l3505:
 10687                           
 10688                           ;monitor_sync.c: 26: reset_single_click_flag(b1);
 10689     0865  0140               	movlb	0	; select bank0
 10690     0866  0858               	movf	monitoring_sync@b1,w
 10691     0867  3193  23B8  3188   	fcall	_reset_single_click_flag
 10692     086A                     l3507:
 10693                           
 10694                           ;monitor_sync.c: 27: };;monitor_sync.c: 29: if( is_single_click(b2) ){
 10695     086A  0140               	movlb	0	; select bank0
 10696     086B  0859               	movf	monitoring_sync@b2,w
 10697     086C  3193  23A6  3188   	fcall	_is_single_click
 10698     086F  3A00               	xorlw	0
 10699     0870  1903               	skipnz
 10700     0871  2873               	goto	u3341
 10701     0872  2874               	goto	u3340
 10702     0873                     u3341:
 10703     0873  288E               	goto	l3517
 10704     0874                     u3340:
 10705     0874                     l3509:
 10706                           
 10707                           ;monitor_sync.c: 30: printf("b2 clicked\r\n");
 10708     0874  304C               	movlw	low (STR_24| (0+32768))
 10709     0875  0140               	movlb	0	; select bank0
 10710     0876  00B8               	movwf	printf@f
 10711     0877  3099               	movlw	high (STR_24| (0+32768))
 10712     0878  00B9               	movwf	printf@f+1
 10713     0879  3184  242C  3188   	fcall	_printf
 10714     087C                     l3511:
 10715                           
 10716                           ;monitor_sync.c: 31: *b2_clicked_count = (*b2_clicked_count) + 1;
 10717     087C  0140               	movlb	0	; select bank0
 10718     087D  085B               	movf	monitoring_sync@b2_clicked_count,w
 10719     087E  0086               	movwf	6
 10720     087F  0187               	clrf	7
 10721     0880  085B               	movf	monitoring_sync@b2_clicked_count,w
 10722     0881  0084               	movwf	4
 10723     0882  0185               	clrf	5
 10724     0883  0800               	movf	0,w
 10725     0884  3E01               	addlw	1
 10726     0885  0081               	movwf	1
 10727     0886                     l3513:
 10728                           
 10729                           ;monitor_sync.c: 32: LED_flashes_three_times();
 10730     0886  3195  2579  3188   	fcall	_LED_flashes_three_times
 10731     0889                     l3515:
 10732                           
 10733                           ;monitor_sync.c: 34: reset_single_click_flag(b2);
 10734     0889  0140               	movlb	0	; select bank0
 10735     088A  0859               	movf	monitoring_sync@b2,w
 10736     088B  3193  23B8  3188   	fcall	_reset_single_click_flag
 10737     088E                     l3517:
 10738                           
 10739                           ;monitor_sync.c: 35: };;monitor_sync.c: 36: if( is_long_press(b1)){
 10740     088E  0140               	movlb	0	; select bank0
 10741     088F  0858               	movf	monitoring_sync@b1,w
 10742     0890  3193  239D  3188   	fcall	_is_long_press
 10743     0893  3A00               	xorlw	0
 10744     0894  1903               	skipnz
 10745     0895  2897               	goto	u3351
 10746     0896  2898               	goto	u3350
 10747     0897                     u3351:
 10748     0897  28B5               	goto	l515
 10749     0898                     u3350:
 10750     0898                     l3519:
 10751                           
 10752                           ;monitor_sync.c: 37: printf("b1 long press \r\n");
 10753     0898  3012               	movlw	low (STR_25| (0+32768))
 10754     0899  0140               	movlb	0	; select bank0
 10755     089A  00B8               	movwf	printf@f
 10756     089B  3099               	movlw	high (STR_25| (0+32768))
 10757     089C  00B9               	movwf	printf@f+1
 10758     089D  3184  242C  3188   	fcall	_printf
 10759     08A0                     l3521:
 10760                           
 10761                           ;monitor_sync.c: 38: *b1_clicked_count = (*b1_clicked_count) + 1;
 10762     08A0  0140               	movlb	0	; select bank0
 10763     08A1  085A               	movf	monitoring_sync@b1_clicked_count,w
 10764     08A2  0086               	movwf	6
 10765     08A3  0187               	clrf	7
 10766     08A4  085A               	movf	monitoring_sync@b1_clicked_count,w
 10767     08A5  0084               	movwf	4
 10768     08A6  0185               	clrf	5
 10769     08A7  0800               	movf	0,w
 10770     08A8  3E01               	addlw	1
 10771     08A9  0081               	movwf	1
 10772     08AA                     l3523:
 10773                           
 10774                           ;monitor_sync.c: 44: LED_flashes_three_times();
 10775     08AA  3195  2579  3188   	fcall	_LED_flashes_three_times
 10776     08AD                     l3525:
 10777                           
 10778                           ;monitor_sync.c: 45: LED_flashes_three_times();
 10779     08AD  3195  2579  3188   	fcall	_LED_flashes_three_times
 10780     08B0                     l3527:
 10781                           
 10782                           ;monitor_sync.c: 47: reset_long_press_flag(b1);
 10783     08B0  0140               	movlb	0	; select bank0
 10784     08B1  0858               	movf	monitoring_sync@b1,w
 10785     08B2  3193  23AF  3188   	fcall	_reset_long_press_flag
 10786     08B5                     l515:
 10787     08B5  0008               	return
 10788     08B6                     __end_of_monitoring_sync:
 10789                           
 10790                           	psect	text17
 10791     13B8                     __ptext17:	
 10792 ;; *************** function _reset_single_click_flag *****************
 10793 ;; Defined at:
 10794 ;;		line 141 in file "mybutton.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;  b               1    wreg     PTR struct mybutton
 10797 ;;		 -> main@b2(27), main@b1(27), 
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;  b               1    0[BANK0 ] PTR struct mybutton
 10800 ;;		 -> main@b2(27), main@b1(27), 
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  1    wreg      void 
 10803 ;; Registers used:
 10804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10814 ;;Total ram usage:        1 bytes
 10815 ;; Hardware stack levels used: 1
 10816 ;; Hardware stack levels required when called: 2
 10817 ;; This function calls:
 10818 ;;		Nothing
 10819 ;; This function is called by:
 10820 ;;		_monitoring_sync
 10821 ;; This function uses a non-reentrant model
 10822 ;;
 10823                           
 10824     13B8                     _reset_single_click_flag:	
 10825                           ;psect for function _reset_single_click_flag
 10826                           
 10827                           
 10828                           ;incstack = 0
 10829                           ; Regs used in _reset_single_click_flag: [wreg+fsr1l+fsr1h+status,2+status,0]
 10830                           ;reset_single_click_flag@b stored from wreg
 10831     13B8  0140               	movlb	0	; select bank0
 10832     13B9  00A0               	movwf	reset_single_click_flag@b
 10833     13BA                     l3273:
 10834                           
 10835                           ;mybutton.c: 142: b->single_clicked_flag = 0;
 10836     13BA  0820               	movf	reset_single_click_flag@b,w
 10837     13BB  3E18               	addlw	24
 10838     13BC  0086               	movwf	6
 10839     13BD  3001               	movlw	1	; select bank2/3
 10840     13BE  0087               	movwf	7
 10841     13BF  0181               	clrf	1
 10842     13C0                     l380:
 10843     13C0  0008               	return
 10844     13C1                     __end_of_reset_single_click_flag:
 10845                           
 10846                           	psect	text18
 10847     13AF                     __ptext18:	
 10848 ;; *************** function _reset_long_press_flag *****************
 10849 ;; Defined at:
 10850 ;;		line 149 in file "mybutton.c"
 10851 ;; Parameters:    Size  Location     Type
 10852 ;;  b               1    wreg     PTR struct mybutton
 10853 ;;		 -> main@b1(27), 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  b               1    0[BANK0 ] PTR struct mybutton
 10856 ;;		 -> main@b1(27), 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;Total ram usage:        1 bytes
 10871 ;; Hardware stack levels used: 1
 10872 ;; Hardware stack levels required when called: 2
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_monitoring_sync
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880     13AF                     _reset_long_press_flag:	
 10881                           ;psect for function _reset_long_press_flag
 10882                           
 10883                           
 10884                           ;incstack = 0
 10885                           ; Regs used in _reset_long_press_flag: [wreg+fsr1l+fsr1h+status,2+status,0]
 10886                           ;reset_long_press_flag@b stored from wreg
 10887     13AF  0140               	movlb	0	; select bank0
 10888     13B0  00A0               	movwf	reset_long_press_flag@b
 10889     13B1                     l3275:
 10890                           
 10891                           ;mybutton.c: 150: b->long_press_flag = 0;
 10892     13B1  0820               	movf	reset_long_press_flag@b,w
 10893     13B2  3E1A               	addlw	26
 10894     13B3  0086               	movwf	6
 10895     13B4  3001               	movlw	1	; select bank2/3
 10896     13B5  0087               	movwf	7
 10897     13B6  0181               	clrf	1
 10898     13B7                     l386:
 10899     13B7  0008               	return
 10900     13B8                     __end_of_reset_long_press_flag:
 10901                           
 10902                           	psect	text19
 10903     13A6                     __ptext19:	
 10904 ;; *************** function _is_single_click *****************
 10905 ;; Defined at:
 10906 ;;		line 129 in file "mybutton.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;  b               1    wreg     PTR struct mybutton
 10909 ;;		 -> main@b2(27), main@b1(27), 
 10910 ;; Auto vars:     Size  Location     Type
 10911 ;;  b               1    0[BANK0 ] PTR struct mybutton
 10912 ;;		 -> main@b2(27), main@b1(27), 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      unsigned char 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10925 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10926 ;;Total ram usage:        1 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; Hardware stack levels required when called: 2
 10929 ;; This function calls:
 10930 ;;		Nothing
 10931 ;; This function is called by:
 10932 ;;		_monitoring_sync
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           
 10936     13A6                     _is_single_click:	
 10937                           ;psect for function _is_single_click
 10938                           
 10939                           
 10940                           ;incstack = 0
 10941                           ; Regs used in _is_single_click: [wreg+fsr1l+fsr1h+status,2+status,0]
 10942                           ;is_single_click@b stored from wreg
 10943     13A6  0140               	movlb	0	; select bank0
 10944     13A7  00A0               	movwf	is_single_click@b
 10945     13A8                     l3265:
 10946                           
 10947                           ;mybutton.c: 130: return b->single_clicked_flag;
 10948     13A8  0820               	movf	is_single_click@b,w
 10949     13A9  3E18               	addlw	24
 10950     13AA  0086               	movwf	6
 10951     13AB  3001               	movlw	1	; select bank2/3
 10952     13AC  0087               	movwf	7
 10953     13AD  0801               	movf	1,w
 10954     13AE                     l371:
 10955     13AE  0008               	return
 10956     13AF                     __end_of_is_single_click:
 10957                           
 10958                           	psect	text20
 10959     139D                     __ptext20:	
 10960 ;; *************** function _is_long_press *****************
 10961 ;; Defined at:
 10962 ;;		line 137 in file "mybutton.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;  b               1    wreg     PTR struct mybutton
 10965 ;;		 -> main@b1(27), 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;  b               1    0[BANK0 ] PTR struct mybutton
 10968 ;;		 -> main@b1(27), 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      unsigned char 
 10971 ;; Registers used:
 10972 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;Total ram usage:        1 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; Hardware stack levels required when called: 2
 10985 ;; This function calls:
 10986 ;;		Nothing
 10987 ;; This function is called by:
 10988 ;;		_monitoring_sync
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992     139D                     _is_long_press:	
 10993                           ;psect for function _is_long_press
 10994                           
 10995                           
 10996                           ;incstack = 0
 10997                           ; Regs used in _is_long_press: [wreg+fsr1l+fsr1h+status,2+status,0]
 10998                           ;is_long_press@b stored from wreg
 10999     139D  0140               	movlb	0	; select bank0
 11000     139E  00A0               	movwf	is_long_press@b
 11001     139F                     l3269:
 11002                           
 11003                           ;mybutton.c: 138: return b->long_press_flag;
 11004     139F  0820               	movf	is_long_press@b,w
 11005     13A0  3E1A               	addlw	26
 11006     13A1  0086               	movwf	6
 11007     13A2  3001               	movlw	1	; select bank2/3
 11008     13A3  0087               	movwf	7
 11009     13A4  0801               	movf	1,w
 11010     13A5                     l377:
 11011     13A5  0008               	return
 11012     13A6                     __end_of_is_long_press:
 11013                           
 11014                           	psect	text21
 11015     1579                     __ptext21:	
 11016 ;; *************** function _LED_flashes_three_times *****************
 11017 ;; Defined at:
 11018 ;;		line 9 in file "led.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;		None
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;  i               2    1[BANK0 ] int 
 11023 ;; Return value:  Size  Location     Type
 11024 ;;                  1    wreg      void 
 11025 ;; Registers used:
 11026 ;;		wreg, status,2
 11027 ;; Tracked objects:
 11028 ;;		On entry : 0/0
 11029 ;;		On exit  : 0/0
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11035 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11036 ;;Total ram usage:        3 bytes
 11037 ;; Hardware stack levels used: 1
 11038 ;; Hardware stack levels required when called: 2
 11039 ;; This function calls:
 11040 ;;		Nothing
 11041 ;; This function is called by:
 11042 ;;		_monitoring_sync
 11043 ;; This function uses a non-reentrant model
 11044 ;;
 11045                           
 11046     1579                     _LED_flashes_three_times:	
 11047                           ;psect for function _LED_flashes_three_times
 11048                           
 11049     1579                     l3171:	
 11050                           ;incstack = 0
 11051                           ; Regs used in _LED_flashes_three_times: [wreg+status,2]
 11052                           
 11053                           
 11054                           ;led.c: 10: for (int i = 0; i < 3; i++) {
 11055     1579  0140               	movlb	0	; select bank0
 11056     157A  01A1               	clrf	LED_flashes_three_times@i
 11057     157B  01A2               	clrf	LED_flashes_three_times@i+1
 11058     157C                     l329:	
 11059                           ;led.c: 12: do { LATCbits.LATC2 = 0; } while(0);
 11060                           
 11061     157C  0140               	movlb	0	; select bank0
 11062     157D  111A               	bcf	26,2	;volatile
 11063     157E                     l3177:
 11064                           
 11065                           ;led.c: 13: _delay((unsigned long)((50)*(1000000/4000.0)));
 11066     157E  3011               	movlw	17
 11067     157F  0140               	movlb	0	; select bank0
 11068     1580  00A0               	movwf	??_LED_flashes_three_times
 11069     1581  303A               	movlw	58
 11070     1582                     u4137:
 11071     1582  0B89               	decfsz	9,f
 11072     1583  2D82               	goto	u4137
 11073     1584  0BA0               	decfsz	??_LED_flashes_three_times,f
 11074     1585  2D82               	goto	u4137
 11075     1586  0000               	nop
 11076     1587                     l3179:
 11077     1587  0140               	movlb	0	; select bank0
 11078     1588  151A               	bsf	26,2	;volatile
 11079     1589                     l332:
 11080                           
 11081                           ;led.c: 16: _delay((unsigned long)((50)*(1000000/4000.0)));
 11082     1589  3011               	movlw	17
 11083     158A  0140               	movlb	0	; select bank0
 11084     158B  00A0               	movwf	??_LED_flashes_three_times
 11085     158C  303A               	movlw	58
 11086     158D                     u4147:
 11087     158D  0B89               	decfsz	9,f
 11088     158E  2D8D               	goto	u4147
 11089     158F  0BA0               	decfsz	??_LED_flashes_three_times,f
 11090     1590  2D8D               	goto	u4147
 11091     1591  0000               	nop
 11092     1592  3001               	movlw	1
 11093     1593  0140               	movlb	0	; select bank0
 11094     1594  07A1               	addwf	LED_flashes_three_times@i,f
 11095     1595  3000               	movlw	0
 11096     1596  3DA2               	addwfc	LED_flashes_three_times@i+1,f
 11097     1597  0822               	movf	LED_flashes_three_times@i+1,w
 11098     1598  3A80               	xorlw	128
 11099     1599  00A0               	movwf	??_LED_flashes_three_times
 11100     159A  3080               	movlw	128
 11101     159B  0220               	subwf	??_LED_flashes_three_times,w
 11102     159C  1D03               	skipz
 11103     159D  2DA0               	goto	u2725
 11104     159E  3003               	movlw	3
 11105     159F  0221               	subwf	LED_flashes_three_times@i,w
 11106     15A0                     u2725:
 11107     15A0  1C03               	skipc
 11108     15A1  2DA3               	goto	u2721
 11109     15A2  2DA4               	goto	u2720
 11110     15A3                     u2721:
 11111     15A3  2D7C               	goto	l329
 11112     15A4                     u2720:
 11113     15A4                     l333:
 11114     15A4  0008               	return
 11115     15A5                     __end_of_LED_flashes_three_times:
 11116                           
 11117                           	psect	text22
 11118     15A5                     __ptext22:	
 11119 ;; *************** function _measurement *****************
 11120 ;; Defined at:
 11121 ;;		line 12 in file "measurement.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;  state           1    wreg     PTR enum E10355
 11124 ;;		 -> main@state(1), 
 11125 ;;  value           1   56[BANK0 ] PTR struct values
 11126 ;;		 -> main@sensor_value(4), 
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;  state           1   32[BANK1 ] PTR enum E10355
 11129 ;;		 -> main@state(1), 
 11130 ;;  txbuf          32    0[BANK1 ] unsigned char [32]
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      void 
 11133 ;; Registers used:
 11134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11140 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11141 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
 11142 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11143 ;;      Totals:         0       2      33       0       0       0       0       0       0       0       0       0       
      +0       0
 11144 ;;Total ram usage:       35 bytes
 11145 ;; Hardware stack levels used: 1
 11146 ;; Hardware stack levels required when called: 4
 11147 ;; This function calls:
 11148 ;;		_EUSART1_Write_1
 11149 ;;		_enable_tx_transmit
 11150 ;;		_enable_uart_printf
 11151 ;;		_printf
 11152 ;; This function is called by:
 11153 ;;		_main
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157     15A5                     _measurement:	
 11158                           ;psect for function _measurement
 11159                           
 11160     15A5                     l554:	
 11161                           ;incstack = 0
 11162                           ; Regs used in _measurement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11163                           ;measurement.c: 13: do { LATCbits.LATC2 = 0; } while(0);
 11164                           
 11165     15A5  0140               	movlb	0	; select bank0
 11166     15A6  111A               	bcf	26,2	;volatile
 11167     15A7                     l3535:
 11168                           
 11169                           ;measurement.c: 15: enable_uart_printf();
 11170     15A7  3193  2380  3195   	fcall	_enable_uart_printf
 11171     15AA                     l3537:
 11172                           
 11173                           ;measurement.c: 16: printf("--- Request\r\n");
 11174     15AA  3023               	movlw	low (STR_28| (0+32768))
 11175     15AB  0140               	movlb	0	; select bank0
 11176     15AC  00B8               	movwf	printf@f
 11177     15AD  3099               	movlw	high (STR_28| (0+32768))
 11178     15AE  00B9               	movwf	printf@f+1
 11179     15AF  3184  242C  3195   	fcall	_printf
 11180     15B2                     l3539:
 11181                           
 11182                           ;measurement.c: 17: _delay((unsigned long)((10)*(1000000/4000.0)));
 11183     15B2  3004               	movlw	4
 11184     15B3  0140               	movlb	0	; select bank0
 11185     15B4  00D9               	movwf	??_measurement
 11186     15B5  303D               	movlw	61
 11187     15B6                     u4157:
 11188     15B6  0B89               	decfsz	9,f
 11189     15B7  2DB6               	goto	u4157
 11190     15B8  0BD9               	decfsz	??_measurement,f
 11191     15B9  2DB6               	goto	u4157
 11192     15BA  3200               	nop2
 11193     15BB                     l3541:
 11194                           
 11195                           ;measurement.c: 18: enable_tx_transmit();
 11196     15BB  3193  237B  3195   	fcall	_enable_tx_transmit
 11197     15BE                     l3543:
 11198                           
 11199                           ;measurement.c: 21: char txbuf[32] = {0x01, 0x03, 0x00, 0x01, 0x00, 0x04, 0x15, 0xC9};
 11200     15BE  30C0               	movlw	low measurement@F10462
 11201     15BF  0086               	movwf	6
 11202     15C0  3001               	movlw	high measurement@F10462
 11203     15C1  0087               	movwf	7
 11204     15C2  30A0               	movlw	low measurement@txbuf
 11205     15C3  0084               	movwf	4
 11206     15C4  3000               	movlw	high measurement@txbuf
 11207     15C5  0085               	movwf	5
 11208     15C6  3020               	movlw	32
 11209     15C7  0140               	movlb	0	; select bank0
 11210     15C8  00D9               	movwf	??_measurement
 11211     15C9                     u3370:
 11212     15C9  0016               	moviw fsr1++
 11213     15CA  001A               	movwi fsr0++
 11214     15CB  0BD9               	decfsz	??_measurement,f
 11215     15CC  2DC9               	goto	u3370
 11216     15CD                     l3545:
 11217                           
 11218                           ;measurement.c: 22: EUSART1_Write_1(txbuf, 8);
 11219     15CD  3008               	movlw	8
 11220     15CE  00A1               	movwf	EUSART1_Write_1@length
 11221     15CF  30A0               	movlw	(low (measurement@txbuf| 0))& (0+255)
 11222     15D0  3194  2494  3195   	fcall	_EUSART1_Write_1
 11223     15D3                     l3547:
 11224     15D3  0140               	movlb	0	; select bank0
 11225     15D4  151A               	bsf	26,2	;volatile
 11226     15D5                     l560:
 11227     15D5  0008               	return
 11228     15D6                     __end_of_measurement:
 11229                           
 11230                           	psect	text23
 11231     1380                     __ptext23:	
 11232 ;; *************** function _enable_uart_printf *****************
 11233 ;; Defined at:
 11234 ;;		line 106 in file "uart.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;		None
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  1    wreg      void 
 11241 ;; Registers used:
 11242 ;;		wreg, status,2
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;Total ram usage:        0 bytes
 11253 ;; Hardware stack levels used: 1
 11254 ;; Hardware stack levels required when called: 2
 11255 ;; This function calls:
 11256 ;;		Nothing
 11257 ;; This function is called by:
 11258 ;;		_main
 11259 ;;		_measurement
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263     1380                     _enable_uart_printf:	
 11264                           ;psect for function _enable_uart_printf
 11265                           
 11266     1380                     l3103:	
 11267                           ;incstack = 0
 11268                           ; Regs used in _enable_uart_printf: [wreg+status,2]
 11269                           
 11270                           
 11271                           ;uart.c: 107: (RC3PPS = 0x00);
 11272     1380  017E               	movlb	62	; select bank62
 11273     1381  01A3               	clrf	35	;volatile
 11274     1382                     l3105:
 11275                           
 11276                           ;uart.c: 108: (RA5PPS = 0x0F);
 11277     1382  300F               	movlw	15
 11278     1383  0095               	movwf	21	;volatile
 11279     1384                     l479:
 11280     1384  0008               	return
 11281     1385                     __end_of_enable_uart_printf:
 11282                           
 11283                           	psect	text24
 11284     137B                     __ptext24:	
 11285 ;; *************** function _enable_tx_transmit *****************
 11286 ;; Defined at:
 11287 ;;		line 110 in file "uart.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;		None
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;		None
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg, status,2
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11305 ;;Total ram usage:        0 bytes
 11306 ;; Hardware stack levels used: 1
 11307 ;; Hardware stack levels required when called: 2
 11308 ;; This function calls:
 11309 ;;		Nothing
 11310 ;; This function is called by:
 11311 ;;		_main
 11312 ;;		_measurement
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316     137B                     _enable_tx_transmit:	
 11317                           ;psect for function _enable_tx_transmit
 11318                           
 11319     137B                     l3107:	
 11320                           ;incstack = 0
 11321                           ; Regs used in _enable_tx_transmit: [wreg+status,2]
 11322                           
 11323                           
 11324                           ;uart.c: 111: (RC3PPS = 0x0F);
 11325     137B  300F               	movlw	15
 11326     137C  017E               	movlb	62	; select bank62
 11327     137D  00A3               	movwf	35	;volatile
 11328     137E                     l3109:
 11329                           
 11330                           ;uart.c: 112: (RA5PPS = 0x00);
 11331     137E  0195               	clrf	21	;volatile
 11332     137F                     l482:
 11333     137F  0008               	return
 11334     1380                     __end_of_enable_tx_transmit:
 11335                           
 11336                           	psect	text25
 11337     1494                     __ptext25:	
 11338 ;; *************** function _EUSART1_Write_1 *****************
 11339 ;; Defined at:
 11340 ;;		line 41 in file "uart.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  txbuf           1    wreg     PTR unsigned char 
 11343 ;;		 -> measurement@txbuf(32), 
 11344 ;;  length          1    1[BANK0 ] unsigned char 
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;  txbuf           1    3[BANK0 ] PTR unsigned char 
 11347 ;;		 -> measurement@txbuf(32), 
 11348 ;;  i               1    4[BANK0 ] unsigned char 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  1    wreg      void 
 11351 ;; Registers used:
 11352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11358 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;Total ram usage:        4 bytes
 11363 ;; Hardware stack levels used: 1
 11364 ;; Hardware stack levels required when called: 3
 11365 ;; This function calls:
 11366 ;;		_EUSART1_Write
 11367 ;; This function is called by:
 11368 ;;		_measurement
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           
 11372     1494                     _EUSART1_Write_1:	
 11373                           ;psect for function _EUSART1_Write_1
 11374                           
 11375                           
 11376                           ;incstack = 0
 11377                           ; Regs used in _EUSART1_Write_1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11378                           ;EUSART1_Write_1@txbuf stored from wreg
 11379     1494  0140               	movlb	0	; select bank0
 11380     1495  00A3               	movwf	EUSART1_Write_1@txbuf
 11381     1496                     l3277:
 11382                           
 11383                           ;uart.c: 42: for(uint8_t i=0; i<length; i++){
 11384     1496  01A4               	clrf	EUSART1_Write_1@i
 11385     1497  2CA7               	goto	l3283
 11386     1498                     l3279:
 11387                           
 11388                           ;uart.c: 43: EUSART1_Write(txbuf[i]);
 11389     1498  0824               	movf	EUSART1_Write_1@i,w
 11390     1499  0723               	addwf	EUSART1_Write_1@txbuf,w
 11391     149A  00A2               	movwf	??_EUSART1_Write_1
 11392     149B  0822               	movf	??_EUSART1_Write_1,w
 11393     149C  0086               	movwf	6
 11394     149D  0187               	clrf	7
 11395     149E  0801               	movf	1,w
 11396     149F  3194  240A  3194   	fcall	_EUSART1_Write
 11397     14A2                     l3281:
 11398     14A2  3001               	movlw	1
 11399     14A3  0140               	movlb	0	; select bank0
 11400     14A4  00A2               	movwf	??_EUSART1_Write_1
 11401     14A5  0822               	movf	??_EUSART1_Write_1,w
 11402     14A6  07A4               	addwf	EUSART1_Write_1@i,f
 11403     14A7                     l3283:
 11404     14A7  0821               	movf	EUSART1_Write_1@length,w
 11405     14A8  0224               	subwf	EUSART1_Write_1@i,w
 11406     14A9  1C03               	skipc
 11407     14AA  2CAC               	goto	u3061
 11408     14AB  2CAD               	goto	u3060
 11409     14AC                     u3061:
 11410     14AC  2C98               	goto	l3279
 11411     14AD                     u3060:
 11412     14AD                     l461:
 11413     14AD  0008               	return
 11414     14AE                     __end_of_EUSART1_Write_1:
 11415                           
 11416                           	psect	text26
 11417     140A                     __ptext26:	
 11418 ;; *************** function _EUSART1_Write *****************
 11419 ;; Defined at:
 11420 ;;		line 35 in file "uart.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  txData          1    wreg     unsigned char 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;  txData          1    0[BANK0 ] unsigned char 
 11425 ;; Return value:  Size  Location     Type
 11426 ;;                  1    wreg      void 
 11427 ;; Registers used:
 11428 ;;		wreg
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11437 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11438 ;;Total ram usage:        1 bytes
 11439 ;; Hardware stack levels used: 1
 11440 ;; Hardware stack levels required when called: 2
 11441 ;; This function calls:
 11442 ;;		Nothing
 11443 ;; This function is called by:
 11444 ;;		_EUSART1_Write_1
 11445 ;; This function uses a non-reentrant model
 11446 ;;
 11447                           
 11448     140A                     _EUSART1_Write:	
 11449                           ;psect for function _EUSART1_Write
 11450                           
 11451                           
 11452                           ;incstack = 0
 11453                           ; Regs used in _EUSART1_Write: [wreg]
 11454                           ;EUSART1_Write@txData stored from wreg
 11455     140A  0140               	movlb	0	; select bank0
 11456     140B  00A0               	movwf	EUSART1_Write@txData
 11457     140C                     l2995:
 11458     140C                     l452:	
 11459                           ;uart.c: 37: while(0 == PIR3bits.TX1IF);
 11460                           
 11461     140C  014E               	movlb	14	; select bank14
 11462     140D  1E0F               	btfss	15,4	;volatile
 11463     140E  2C10               	goto	u2521
 11464     140F  2C11               	goto	u2520
 11465     1410                     u2521:
 11466     1410  2C0C               	goto	l452
 11467     1411                     u2520:
 11468     1411                     l2997:
 11469                           
 11470                           ;uart.c: 38: TX1REG = txData;
 11471     1411  0140               	movlb	0	; select bank0
 11472     1412  0820               	movf	EUSART1_Write@txData,w
 11473     1413  0142               	movlb	2	; select bank2
 11474     1414  009A               	movwf	26	;volatile
 11475     1415                     l455:
 11476     1415  0008               	return
 11477     1416                     __end_of_EUSART1_Write:
 11478                           
 11479                           	psect	text27
 11480     0927                     __ptext27:	
 11481 ;; *************** function _init_button *****************
 11482 ;; Defined at:
 11483 ;;		line 12 in file "mybutton.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;  b               1    wreg     PTR struct mybutton
 11486 ;;		 -> main@b2(27), main@b1(27), 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;  b               1    0[BANK0 ] PTR struct mybutton
 11489 ;;		 -> main@b2(27), main@b1(27), 
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      void 
 11492 ;; Registers used:
 11493 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;Total ram usage:        1 bytes
 11504 ;; Hardware stack levels used: 1
 11505 ;; Hardware stack levels required when called: 2
 11506 ;; This function calls:
 11507 ;;		Nothing
 11508 ;; This function is called by:
 11509 ;;		_main
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513     0927                     _init_button:	
 11514                           ;psect for function _init_button
 11515                           
 11516                           
 11517                           ;incstack = 0
 11518                           ; Regs used in _init_button: [wreg+fsr1l+fsr1h+status,2+status,0]
 11519                           ;init_button@b stored from wreg
 11520     0927  0140               	movlb	0	; select bank0
 11521     0928  00A0               	movwf	init_button@b
 11522     0929                     l3435:
 11523                           
 11524                           ;mybutton.c: 14: b->signals[0] = 1;
 11525     0929  0820               	movf	init_button@b,w
 11526     092A  0086               	movwf	6
 11527     092B  3001               	movlw	1	; select bank2/3
 11528     092C  0087               	movwf	7
 11529     092D  0181               	clrf	1
 11530     092E  0A81               	incf	1,f
 11531                           
 11532                           ;mybutton.c: 15: b->signals[1] = 1;
 11533     092F  0A20               	incf	init_button@b,w
 11534     0930  0086               	movwf	6
 11535     0931  3001               	movlw	1	; select bank2/3
 11536     0932  0087               	movwf	7
 11537     0933  0181               	clrf	1
 11538     0934  0A81               	incf	1,f
 11539     0935                     l3437:
 11540                           
 11541                           ;mybutton.c: 17: b->falling_ts[0] = 1;
 11542     0935  0820               	movf	init_button@b,w
 11543     0936  3E02               	addlw	2
 11544     0937  0086               	movwf	6
 11545     0938  3001               	movlw	1	; select bank2/3
 11546     0939  0087               	movwf	7
 11547     093A  3001               	movlw	1
 11548     093B  3FC0               	movwi [0]fsr1
 11549     093C  3000               	movlw	0
 11550     093D  3FC1               	movwi [1]fsr1
 11551     093E  3FC2               	movwi [2]fsr1
 11552     093F  3FC3               	movwi [3]fsr1
 11553     0940                     l3439:
 11554                           
 11555                           ;mybutton.c: 18: b->falling_ts[1] = 1;
 11556     0940  0820               	movf	init_button@b,w
 11557     0941  3E06               	addlw	6
 11558     0942  0086               	movwf	6
 11559     0943  3001               	movlw	1	; select bank2/3
 11560     0944  0087               	movwf	7
 11561     0945  3001               	movlw	1
 11562     0946  3FC0               	movwi [0]fsr1
 11563     0947  3000               	movlw	0
 11564     0948  3FC1               	movwi [1]fsr1
 11565     0949  3FC2               	movwi [2]fsr1
 11566     094A  3FC3               	movwi [3]fsr1
 11567     094B                     l3441:
 11568                           
 11569                           ;mybutton.c: 19: b->rising_ts[0] = 1;
 11570     094B  0820               	movf	init_button@b,w
 11571     094C  3E0A               	addlw	10
 11572     094D  0086               	movwf	6
 11573     094E  3001               	movlw	1	; select bank2/3
 11574     094F  0087               	movwf	7
 11575     0950  3001               	movlw	1
 11576     0951  3FC0               	movwi [0]fsr1
 11577     0952  3000               	movlw	0
 11578     0953  3FC1               	movwi [1]fsr1
 11579     0954  3FC2               	movwi [2]fsr1
 11580     0955  3FC3               	movwi [3]fsr1
 11581     0956                     l3443:
 11582                           
 11583                           ;mybutton.c: 20: b->rising_ts[1] = 1;
 11584     0956  0820               	movf	init_button@b,w
 11585     0957  3E0E               	addlw	14
 11586     0958  0086               	movwf	6
 11587     0959  3001               	movlw	1	; select bank2/3
 11588     095A  0087               	movwf	7
 11589     095B  3001               	movlw	1
 11590     095C  3FC0               	movwi [0]fsr1
 11591     095D  3000               	movlw	0
 11592     095E  3FC1               	movwi [1]fsr1
 11593     095F  3FC2               	movwi [2]fsr1
 11594     0960  3FC3               	movwi [3]fsr1
 11595     0961                     l3445:
 11596                           
 11597                           ;mybutton.c: 22: b->single_click_tmps[0] = 0;
 11598     0961  0820               	movf	init_button@b,w
 11599     0962  3E12               	addlw	18
 11600     0963  0086               	movwf	6
 11601     0964  3001               	movlw	1	; select bank2/3
 11602     0965  0087               	movwf	7
 11603     0966  0181               	clrf	1
 11604     0967                     l3447:
 11605                           
 11606                           ;mybutton.c: 23: b->single_click_tmps[1] = 0;
 11607     0967  0820               	movf	init_button@b,w
 11608     0968  3E13               	addlw	19
 11609     0969  0086               	movwf	6
 11610     096A  3001               	movlw	1	; select bank2/3
 11611     096B  0087               	movwf	7
 11612     096C  0181               	clrf	1
 11613     096D                     l3449:
 11614                           
 11615                           ;mybutton.c: 24: b->double_click_tmps[0] = 0;
 11616     096D  0820               	movf	init_button@b,w
 11617     096E  3E14               	addlw	20
 11618     096F  0086               	movwf	6
 11619     0970  3001               	movlw	1	; select bank2/3
 11620     0971  0087               	movwf	7
 11621     0972  0181               	clrf	1
 11622     0973                     l3451:
 11623                           
 11624                           ;mybutton.c: 25: b->double_click_tmps[1] = 0;
 11625     0973  0820               	movf	init_button@b,w
 11626     0974  3E15               	addlw	21
 11627     0975  0086               	movwf	6
 11628     0976  3001               	movlw	1	; select bank2/3
 11629     0977  0087               	movwf	7
 11630     0978  0181               	clrf	1
 11631     0979                     l3453:
 11632                           
 11633                           ;mybutton.c: 26: b->long_press_tmps[0] = 0;
 11634     0979  0820               	movf	init_button@b,w
 11635     097A  3E16               	addlw	22
 11636     097B  0086               	movwf	6
 11637     097C  3001               	movlw	1	; select bank2/3
 11638     097D  0087               	movwf	7
 11639     097E  0181               	clrf	1
 11640     097F                     l3455:
 11641                           
 11642                           ;mybutton.c: 27: b->long_press_tmps[1] = 0;
 11643     097F  0820               	movf	init_button@b,w
 11644     0980  3E17               	addlw	23
 11645     0981  0086               	movwf	6
 11646     0982  3001               	movlw	1	; select bank2/3
 11647     0983  0087               	movwf	7
 11648     0984  0181               	clrf	1
 11649     0985                     l3457:
 11650                           
 11651                           ;mybutton.c: 29: b->single_clicked_flag = 0;
 11652     0985  0820               	movf	init_button@b,w
 11653     0986  3E18               	addlw	24
 11654     0987  0086               	movwf	6
 11655     0988  3001               	movlw	1	; select bank2/3
 11656     0989  0087               	movwf	7
 11657     098A  0181               	clrf	1
 11658     098B                     l3459:
 11659                           
 11660                           ;mybutton.c: 30: b->double_clicked_flag = 0;
 11661     098B  0820               	movf	init_button@b,w
 11662     098C  3E19               	addlw	25
 11663     098D  0086               	movwf	6
 11664     098E  3001               	movlw	1	; select bank2/3
 11665     098F  0087               	movwf	7
 11666     0990  0181               	clrf	1
 11667     0991                     l3461:
 11668                           
 11669                           ;mybutton.c: 31: b->long_press_flag = 0;
 11670     0991  0820               	movf	init_button@b,w
 11671     0992  3E1A               	addlw	26
 11672     0993  0086               	movwf	6
 11673     0994  3001               	movlw	1	; select bank2/3
 11674     0995  0087               	movwf	7
 11675     0996  0181               	clrf	1
 11676     0997                     l342:
 11677     0997  0008               	return
 11678     0998                     __end_of_init_button:
 11679                           
 11680                           	psect	text28
 11681     14EB                     __ptext28:	
 11682 ;; *************** function _i2c_slave_init *****************
 11683 ;; Defined at:
 11684 ;;		line 14 in file "i2c_slave.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;		None
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;  i               1    1[BANK0 ] unsigned char 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  1    wreg      void 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11702 ;;Total ram usage:        2 bytes
 11703 ;; Hardware stack levels used: 1
 11704 ;; Hardware stack levels required when called: 2
 11705 ;; This function calls:
 11706 ;;		Nothing
 11707 ;; This function is called by:
 11708 ;;		_main
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712     14EB                     _i2c_slave_init:	
 11713                           ;psect for function _i2c_slave_init
 11714                           
 11715     14EB                     l3411:	
 11716                           ;incstack = 0
 11717                           ; Regs used in _i2c_slave_init: [wreg+fsr1l+fsr1h+status,2+status,0]
 11718                           
 11719                           
 11720                           ;i2c_slave.c: 15: SSP1STAT = 0x00;
 11721     14EB  0143               	movlb	3	; select bank3
 11722     14EC  018F               	clrf	15	;volatile
 11723     14ED                     l3413:
 11724                           
 11725                           ;i2c_slave.c: 16: SSP1CON1 = 0x36;
 11726     14ED  3036               	movlw	54
 11727     14EE  0090               	movwf	16	;volatile
 11728     14EF                     l3415:
 11729                           
 11730                           ;i2c_slave.c: 17: SSP1CON2 = 0x01;
 11731     14EF  3001               	movlw	1
 11732     14F0  0091               	movwf	17	;volatile
 11733     14F1                     l3417:
 11734                           
 11735                           ;i2c_slave.c: 20: SSP1ADD = 0x68 << 1;
 11736     14F1  30D0               	movlw	208
 11737     14F2  008D               	movwf	13	;volatile
 11738     14F3                     l3419:
 11739                           
 11740                           ;i2c_slave.c: 21: SSP1MSK = 0xFF;
 11741     14F3  30FF               	movlw	255
 11742     14F4  008E               	movwf	14	;volatile
 11743     14F5                     l3421:
 11744                           
 11745                           ;i2c_slave.c: 23: PIR3bits.SSP1IF = 0;
 11746     14F5  014E               	movlb	14	; select bank14
 11747     14F6  100F               	bcf	15,0	;volatile
 11748     14F7                     l3423:
 11749                           
 11750                           ;i2c_slave.c: 24: PIE3bits.SSP1IE = 1;
 11751     14F7  1419               	bsf	25,0	;volatile
 11752                           
 11753                           ;i2c_slave.c: 27: for (uint8_t i = 0; i < 64u; i++) {
 11754     14F8  0140               	movlb	0	; select bank0
 11755     14F9  01A1               	clrf	i2c_slave_init@i
 11756     14FA                     l3429:
 11757                           
 11758                           ;i2c_slave.c: 28: slaveData[i] = 0;
 11759     14FA  0821               	movf	i2c_slave_init@i,w
 11760     14FB  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 11761     14FC  0086               	movwf	6
 11762     14FD  3002               	movlw	2	; select bank4/5
 11763     14FE  0087               	movwf	7
 11764     14FF  0181               	clrf	1
 11765     1500                     l3431:
 11766     1500  3001               	movlw	1
 11767     1501  00A0               	movwf	??_i2c_slave_init
 11768     1502  0820               	movf	??_i2c_slave_init,w
 11769     1503  07A1               	addwf	i2c_slave_init@i,f
 11770     1504                     l3433:
 11771     1504  3040               	movlw	64
 11772     1505  0221               	subwf	i2c_slave_init@i,w
 11773     1506  1C03               	skipc
 11774     1507  2D09               	goto	u3251
 11775     1508  2D0A               	goto	u3250
 11776     1509                     u3251:
 11777     1509  2CFA               	goto	l3429
 11778     150A                     u3250:
 11779     150A                     l230:
 11780     150A  0008               	return
 11781     150B                     __end_of_i2c_slave_init:
 11782                           
 11783                           	psect	text29
 11784     146C                     __ptext29:	
 11785 ;; *************** function _get_ticks_with_lock *****************
 11786 ;; Defined at:
 11787 ;;		line 12 in file "myisr.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;		None
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;  result          4    4[BANK0 ] unsigned long 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  4    0[BANK0 ] unsigned long 
 11794 ;; Registers used:
 11795 ;;		wreg
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11801 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;Total ram usage:        8 bytes
 11806 ;; Hardware stack levels used: 1
 11807 ;; Hardware stack levels required when called: 2
 11808 ;; This function calls:
 11809 ;;		Nothing
 11810 ;; This function is called by:
 11811 ;;		_main
 11812 ;;		_is_it_time_over
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816     146C                     _get_ticks_with_lock:	
 11817                           ;psect for function _get_ticks_with_lock
 11818                           
 11819     146C                     l3463:	
 11820                           ;incstack = 0
 11821                           ; Regs used in _get_ticks_with_lock: [wreg]
 11822                           
 11823                           
 11824                           ;myisr.c: 13: GIE = 0;
 11825     146C  138B               	bcf	11,7	;volatile
 11826     146D                     l3465:
 11827                           
 11828                           ;myisr.c: 14: uint32_t result = ticks;
 11829     146D  087B               	movf	_ticks+3,w	;volatile
 11830     146E  0140               	movlb	0	; select bank0
 11831     146F  00A7               	movwf	get_ticks_with_lock@result+3
 11832     1470  087A               	movf	_ticks+2,w	;volatile
 11833     1471  00A6               	movwf	get_ticks_with_lock@result+2
 11834     1472  0879               	movf	_ticks+1,w	;volatile
 11835     1473  00A5               	movwf	get_ticks_with_lock@result+1
 11836     1474  0878               	movf	_ticks,w	;volatile
 11837     1475  00A4               	movwf	get_ticks_with_lock@result
 11838     1476                     l3467:
 11839                           
 11840                           ;myisr.c: 15: GIE = 1;
 11841     1476  178B               	bsf	11,7	;volatile
 11842                           
 11843                           ;myisr.c: 16: return result;
 11844     1477  0827               	movf	get_ticks_with_lock@result+3,w
 11845     1478  00A3               	movwf	?_get_ticks_with_lock+3
 11846     1479  0826               	movf	get_ticks_with_lock@result+2,w
 11847     147A  00A2               	movwf	?_get_ticks_with_lock+2
 11848     147B  0825               	movf	get_ticks_with_lock@result+1,w
 11849     147C  00A1               	movwf	?_get_ticks_with_lock+1
 11850     147D  0824               	movf	get_ticks_with_lock@result,w
 11851     147E  00A0               	movwf	?_get_ticks_with_lock
 11852     147F                     l309:
 11853     147F  0008               	return
 11854     1480                     __end_of_get_ticks_with_lock:
 11855                           
 11856                           	psect	text30
 11857     13DF                     __ptext30:	
 11858 ;; *************** function _dump_memory_map *****************
 11859 ;; Defined at:
 11860 ;;		line 121 in file "i2c_slave.c"
 11861 ;; Parameters:    Size  Location     Type
 11862 ;;		None
 11863 ;; Auto vars:     Size  Location     Type
 11864 ;;		None
 11865 ;; Return value:  Size  Location     Type
 11866 ;;                  1    wreg      void 
 11867 ;; Registers used:
 11868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11878 ;;Total ram usage:        0 bytes
 11879 ;; Hardware stack levels used: 1
 11880 ;; Hardware stack levels required when called: 5
 11881 ;; This function calls:
 11882 ;;		_dump_buffer
 11883 ;; This function is called by:
 11884 ;;		_main
 11885 ;; This function uses a non-reentrant model
 11886 ;;
 11887                           
 11888     13DF                     _dump_memory_map:	
 11889                           ;psect for function _dump_memory_map
 11890                           
 11891     13DF                     l3583:	
 11892                           ;incstack = 0
 11893                           ; Regs used in _dump_memory_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11894                           
 11895                           
 11896                           ;i2c_slave.c: 122: dump_buffer(slaveData, sizeof(slaveData));
 11897     13DF  3040               	movlw	64
 11898     13E0  0140               	movlb	0	; select bank0
 11899     13E1  00D8               	movwf	dump_buffer@size
 11900     13E2  3000               	movlw	0
 11901     13E3  00D9               	movwf	dump_buffer@size+1
 11902     13E4  3020               	movlw	(low (_slaveData| (0+512)))& (0+255)
 11903     13E5  318A  2240  3193   	fcall	_dump_buffer
 11904     13E8                     l263:
 11905     13E8  0008               	return
 11906     13E9                     __end_of_dump_memory_map:
 11907                           
 11908                           	psect	text31
 11909     0A40                     __ptext31:	
 11910 ;; *************** function _dump_buffer *****************
 11911 ;; Defined at:
 11912 ;;		line 7 in file "my_helpers.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  buffer          1    wreg     PTR const void 
 11915 ;;		 -> slaveData(64), 
 11916 ;;  size            2   56[BANK0 ] unsigned int 
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;  buffer          1   64[BANK0 ] PTR const void 
 11919 ;;		 -> slaveData(64), 
 11920 ;;  j               2   68[BANK0 ] unsigned int 
 11921 ;;  i               2   66[BANK0 ] unsigned int 
 11922 ;;  p               1   65[BANK0 ] PTR const unsigned char 
 11923 ;;		 -> slaveData(64), 
 11924 ;; Return value:  Size  Location     Type
 11925 ;;                  1    wreg      void 
 11926 ;; Registers used:
 11927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11928 ;; Tracked objects:
 11929 ;;		On entry : 0/0
 11930 ;;		On exit  : 0/0
 11931 ;;		Unchanged: 0/0
 11932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11933 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11934 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11935 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;Total ram usage:       14 bytes
 11938 ;; Hardware stack levels used: 1
 11939 ;; Hardware stack levels required when called: 4
 11940 ;; This function calls:
 11941 ;;		_isprint
 11942 ;;		_printf
 11943 ;; This function is called by:
 11944 ;;		_dump_memory_map
 11945 ;; This function uses a non-reentrant model
 11946 ;;
 11947                           
 11948     0A40                     _dump_buffer:	
 11949                           ;psect for function _dump_buffer
 11950                           
 11951                           
 11952                           ;incstack = 0
 11953                           ; Regs used in _dump_buffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11954                           ;dump_buffer@buffer stored from wreg
 11955     0A40  0140               	movlb	0	; select bank0
 11956     0A41  00E0               	movwf	dump_buffer@buffer
 11957     0A42                     l3121:
 11958                           
 11959                           ;my_helpers.c: 8: const uint8_t *p = (const uint8_t *)buffer;
 11960     0A42  0860               	movf	dump_buffer@buffer,w
 11961     0A43  00E1               	movwf	dump_buffer@p
 11962     0A44                     l3123:
 11963                           
 11964                           ;my_helpers.c: 9: size_t i, j;;my_helpers.c: 11: for (i = 0; i < size; i += 16) {
 11965     0A44  01E2               	clrf	dump_buffer@i
 11966     0A45  01E3               	clrf	dump_buffer@i+1
 11967     0A46  2AFC               	goto	l3169
 11968     0A47                     l3125:
 11969                           
 11970                           ;my_helpers.c: 12: printf("%08x:", (unsigned int)i);
 11971     0A47  3096               	movlw	low (STR_13| (0+32768))
 11972     0A48  00B8               	movwf	printf@f
 11973     0A49  3099               	movlw	high (STR_13| (0+32768))
 11974     0A4A  00B9               	movwf	printf@f+1
 11975     0A4B  0863               	movf	dump_buffer@i+1,w
 11976     0A4C  00BB               	movwf	?_printf+3
 11977     0A4D  0862               	movf	dump_buffer@i,w
 11978     0A4E  00BA               	movwf	?_printf+2
 11979     0A4F  3184  242C  318A   	fcall	_printf
 11980     0A52                     l3127:
 11981                           
 11982                           ;my_helpers.c: 13: for (j = 0; j < 16; j++) {
 11983     0A52  0140               	movlb	0	; select bank0
 11984     0A53  01E4               	clrf	dump_buffer@j
 11985     0A54  01E5               	clrf	dump_buffer@j+1
 11986     0A55                     l3133:
 11987                           
 11988                           ;my_helpers.c: 14: if (i + j < size) {
 11989     0A55  0864               	movf	dump_buffer@j,w
 11990     0A56  0762               	addwf	dump_buffer@i,w
 11991     0A57  00DA               	movwf	??_dump_buffer
 11992     0A58  0865               	movf	dump_buffer@j+1,w
 11993     0A59  3D63               	addwfc	dump_buffer@i+1,w
 11994     0A5A  00DB               	movwf	??_dump_buffer+1
 11995     0A5B  0859               	movf	dump_buffer@size+1,w
 11996     0A5C  025B               	subwf	??_dump_buffer+1,w
 11997     0A5D  1D03               	skipz
 11998     0A5E  2A61               	goto	u2665
 11999     0A5F  0858               	movf	dump_buffer@size,w
 12000     0A60  025A               	subwf	??_dump_buffer,w
 12001     0A61                     u2665:
 12002     0A61  1803               	skipnc
 12003     0A62  2A64               	goto	u2661
 12004     0A63  2A65               	goto	u2660
 12005     0A64                     u2661:
 12006     0A64  2A7E               	goto	l3137
 12007     0A65                     u2660:
 12008     0A65                     l3135:
 12009                           
 12010                           ;my_helpers.c: 15: printf(" %02x", p[i + j]);
 12011     0A65  309C               	movlw	low (STR_14| (0+32768))
 12012     0A66  00B8               	movwf	printf@f
 12013     0A67  3099               	movlw	high (STR_14| (0+32768))
 12014     0A68  00B9               	movwf	printf@f+1
 12015     0A69  0862               	movf	dump_buffer@i,w
 12016     0A6A  0761               	addwf	dump_buffer@p,w
 12017     0A6B  00DA               	movwf	??_dump_buffer
 12018     0A6C  0864               	movf	dump_buffer@j,w
 12019     0A6D  075A               	addwf	??_dump_buffer,w
 12020     0A6E  00DB               	movwf	??_dump_buffer+1
 12021     0A6F  085B               	movf	??_dump_buffer+1,w
 12022     0A70  0086               	movwf	6
 12023     0A71  3002               	movlw	2	; select bank4/5
 12024     0A72  0087               	movwf	7
 12025     0A73  0801               	movf	1,w
 12026     0A74  00DC               	movwf	??_dump_buffer+2
 12027     0A75  01DD               	clrf	??_dump_buffer+3
 12028     0A76  085C               	movf	??_dump_buffer+2,w
 12029     0A77  00BA               	movwf	?_printf+2
 12030     0A78  085D               	movf	??_dump_buffer+3,w
 12031     0A79  00BB               	movwf	?_printf+3
 12032     0A7A  3184  242C  318A   	fcall	_printf
 12033                           
 12034                           ;my_helpers.c: 16: } else {
 12035     0A7D  2A85               	goto	l3139
 12036     0A7E                     l3137:
 12037                           
 12038                           ;my_helpers.c: 17: printf("   ");
 12039     0A7E  30A2               	movlw	low (STR_15| (0+32768))
 12040     0A7F  00B8               	movwf	printf@f
 12041     0A80  3099               	movlw	high (STR_15| (0+32768))
 12042     0A81  00B9               	movwf	printf@f+1
 12043     0A82  3184  242C  318A   	fcall	_printf
 12044     0A85                     l3139:
 12045     0A85  3001               	movlw	1
 12046     0A86  0140               	movlb	0	; select bank0
 12047     0A87  07E4               	addwf	dump_buffer@j,f
 12048     0A88  3000               	movlw	0
 12049     0A89  3DE5               	addwfc	dump_buffer@j+1,f
 12050     0A8A                     l3141:
 12051     0A8A  3000               	movlw	0
 12052     0A8B  0265               	subwf	dump_buffer@j+1,w
 12053     0A8C  3010               	movlw	16
 12054     0A8D  1903               	skipnz
 12055     0A8E  0264               	subwf	dump_buffer@j,w
 12056     0A8F  1C03               	skipc
 12057     0A90  2A92               	goto	u2671
 12058     0A91  2A93               	goto	u2670
 12059     0A92                     u2671:
 12060     0A92  2A55               	goto	l3133
 12061     0A93                     u2670:
 12062     0A93                     l3143:
 12063                           
 12064                           ;my_helpers.c: 18: };my_helpers.c: 19: };my_helpers.c: 20: printf("  ");
 12065     0A93  30A3               	movlw	low ((STR_15+1)| (0+32768))
 12066     0A94  00B8               	movwf	printf@f
 12067     0A95  3099               	movlw	high ((STR_15+1)| (0+32768))
 12068     0A96  00B9               	movwf	printf@f+1
 12069     0A97  3184  242C  318A   	fcall	_printf
 12070     0A9A                     l3145:
 12071                           
 12072                           ;my_helpers.c: 21: for (j = 0; j < 16; j++) {
 12073     0A9A  0140               	movlb	0	; select bank0
 12074     0A9B  01E4               	clrf	dump_buffer@j
 12075     0A9C  01E5               	clrf	dump_buffer@j+1
 12076     0A9D                     l3151:
 12077                           
 12078                           ;my_helpers.c: 22: if (i + j < size) {
 12079     0A9D  0864               	movf	dump_buffer@j,w
 12080     0A9E  0762               	addwf	dump_buffer@i,w
 12081     0A9F  00DA               	movwf	??_dump_buffer
 12082     0AA0  0865               	movf	dump_buffer@j+1,w
 12083     0AA1  3D63               	addwfc	dump_buffer@i+1,w
 12084     0AA2  00DB               	movwf	??_dump_buffer+1
 12085     0AA3  0859               	movf	dump_buffer@size+1,w
 12086     0AA4  025B               	subwf	??_dump_buffer+1,w
 12087     0AA5  1D03               	skipz
 12088     0AA6  2AA9               	goto	u2685
 12089     0AA7  0858               	movf	dump_buffer@size,w
 12090     0AA8  025A               	subwf	??_dump_buffer,w
 12091     0AA9                     u2685:
 12092     0AA9  1803               	skipnc
 12093     0AAA  2AAC               	goto	u2681
 12094     0AAB  2AAD               	goto	u2680
 12095     0AAC                     u2681:
 12096     0AAC  2AE2               	goto	l3161
 12097     0AAD                     u2680:
 12098     0AAD                     l3153:
 12099                           
 12100                           ;my_helpers.c: 23: printf("%c", isprint(p[i + j]) ? p[i + j] : '.');
 12101     0AAD  0862               	movf	dump_buffer@i,w
 12102     0AAE  0761               	addwf	dump_buffer@p,w
 12103     0AAF  00DA               	movwf	??_dump_buffer
 12104     0AB0  0864               	movf	dump_buffer@j,w
 12105     0AB1  075A               	addwf	??_dump_buffer,w
 12106     0AB2  00DB               	movwf	??_dump_buffer+1
 12107     0AB3  085B               	movf	??_dump_buffer+1,w
 12108     0AB4  0086               	movwf	6
 12109     0AB5  3002               	movlw	2	; select bank4/5
 12110     0AB6  0087               	movwf	7
 12111     0AB7  0801               	movf	1,w
 12112     0AB8  3194  2446  318A   	fcall	_isprint
 12113     0ABB  1803               	btfsc	3,0
 12114     0ABC  2ABE               	goto	u2691
 12115     0ABD  2ABF               	goto	u2690
 12116     0ABE                     u2691:
 12117     0ABE  2AC5               	goto	l3157
 12118     0ABF                     u2690:
 12119     0ABF                     l3155:
 12120     0ABF  302E               	movlw	46
 12121     0AC0  0140               	movlb	0	; select bank0
 12122     0AC1  00DE               	movwf	_dump_buffer$863
 12123     0AC2  3000               	movlw	0
 12124     0AC3  00DF               	movwf	_dump_buffer$863+1
 12125     0AC4  2AD7               	goto	l3159
 12126     0AC5                     l3157:
 12127     0AC5  0140               	movlb	0	; select bank0
 12128     0AC6  0862               	movf	dump_buffer@i,w
 12129     0AC7  0761               	addwf	dump_buffer@p,w
 12130     0AC8  00DA               	movwf	??_dump_buffer
 12131     0AC9  0864               	movf	dump_buffer@j,w
 12132     0ACA  075A               	addwf	??_dump_buffer,w
 12133     0ACB  00DB               	movwf	??_dump_buffer+1
 12134     0ACC  085B               	movf	??_dump_buffer+1,w
 12135     0ACD  0086               	movwf	6
 12136     0ACE  3002               	movlw	2	; select bank4/5
 12137     0ACF  0087               	movwf	7
 12138     0AD0  0801               	movf	1,w
 12139     0AD1  00DC               	movwf	??_dump_buffer+2
 12140     0AD2  01DD               	clrf	??_dump_buffer+3
 12141     0AD3  085C               	movf	??_dump_buffer+2,w
 12142     0AD4  00DE               	movwf	_dump_buffer$863
 12143     0AD5  085D               	movf	??_dump_buffer+3,w
 12144     0AD6  00DF               	movwf	_dump_buffer$863+1
 12145     0AD7                     l3159:
 12146     0AD7  30A6               	movlw	low (STR_17| (0+32768))
 12147     0AD8  00B8               	movwf	printf@f
 12148     0AD9  3099               	movlw	high (STR_17| (0+32768))
 12149     0ADA  00B9               	movwf	printf@f+1
 12150     0ADB  085F               	movf	_dump_buffer$863+1,w
 12151     0ADC  00BB               	movwf	?_printf+3
 12152     0ADD  085E               	movf	_dump_buffer$863,w
 12153     0ADE  00BA               	movwf	?_printf+2
 12154     0ADF  3184  242C  318A   	fcall	_printf
 12155     0AE2                     l3161:
 12156     0AE2  3001               	movlw	1
 12157     0AE3  0140               	movlb	0	; select bank0
 12158     0AE4  07E4               	addwf	dump_buffer@j,f
 12159     0AE5  3000               	movlw	0
 12160     0AE6  3DE5               	addwfc	dump_buffer@j+1,f
 12161     0AE7                     l3163:
 12162     0AE7  3000               	movlw	0
 12163     0AE8  0265               	subwf	dump_buffer@j+1,w
 12164     0AE9  3010               	movlw	16
 12165     0AEA  1903               	skipnz
 12166     0AEB  0264               	subwf	dump_buffer@j,w
 12167     0AEC  1C03               	skipc
 12168     0AED  2AEF               	goto	u2701
 12169     0AEE  2AF0               	goto	u2700
 12170     0AEF                     u2701:
 12171     0AEF  2A9D               	goto	l3151
 12172     0AF0                     u2700:
 12173     0AF0                     l3165:
 12174                           
 12175                           ;my_helpers.c: 24: };my_helpers.c: 25: };my_helpers.c: 26: printf("\r\n");
 12176     0AF0  3020               	movlw	low ((STR_25+14)| (0+32768))
 12177     0AF1  00B8               	movwf	printf@f
 12178     0AF2  3099               	movlw	high ((STR_25+14)| (0+32768))
 12179     0AF3  00B9               	movwf	printf@f+1
 12180     0AF4  3184  242C  318A   	fcall	_printf
 12181     0AF7                     l3167:
 12182     0AF7  3010               	movlw	16
 12183     0AF8  0140               	movlb	0	; select bank0
 12184     0AF9  07E2               	addwf	dump_buffer@i,f
 12185     0AFA  3000               	movlw	0
 12186     0AFB  3DE3               	addwfc	dump_buffer@i+1,f
 12187     0AFC                     l3169:
 12188     0AFC  0859               	movf	dump_buffer@size+1,w
 12189     0AFD  0263               	subwf	dump_buffer@i+1,w
 12190     0AFE  1D03               	skipz
 12191     0AFF  2B02               	goto	u2715
 12192     0B00  0858               	movf	dump_buffer@size,w
 12193     0B01  0262               	subwf	dump_buffer@i,w
 12194     0B02                     u2715:
 12195     0B02  1C03               	skipc
 12196     0B03  2B05               	goto	u2711
 12197     0B04  2B06               	goto	u2710
 12198     0B05                     u2711:
 12199     0B05  2A47               	goto	l3125
 12200     0B06                     u2710:
 12201     0B06                     l299:
 12202     0B06  0008               	return
 12203     0B07                     __end_of_dump_buffer:
 12204                           
 12205                           	psect	text32
 12206     1446                     __ptext32:	
 12207 ;; *************** function _isprint *****************
 12208 ;; Defined at:
 12209 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isprint.c"
 12210 ;; Parameters:    Size  Location     Type
 12211 ;;  c               1    wreg     unsigned char 
 12212 ;; Auto vars:     Size  Location     Type
 12213 ;;  c               1    1[BANK0 ] unsigned char 
 12214 ;; Return value:  Size  Location     Type
 12215 ;;		None               void
 12216 ;; Registers used:
 12217 ;;		wreg, status,2, status,0
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12227 ;;Total ram usage:        2 bytes
 12228 ;; Hardware stack levels used: 1
 12229 ;; Hardware stack levels required when called: 2
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		_dump_buffer
 12234 ;; This function uses a non-reentrant model
 12235 ;;
 12236                           
 12237     1446                     _isprint:	
 12238                           ;psect for function _isprint
 12239                           
 12240                           
 12241                           ;incstack = 0
 12242                           ; Regs used in _isprint: [wreg+status,2+status,0]
 12243                           ;isprint@c stored from wreg
 12244     1446  0140               	movlb	0	; select bank0
 12245     1447  00A1               	movwf	isprint@c
 12246     1448                     l2983:
 12247     1448  01A0               	clrf	_isprint$1722
 12248     1449                     l2985:
 12249     1449  307F               	movlw	127
 12250     144A  0221               	subwf	isprint@c,w
 12251     144B  1803               	skipnc
 12252     144C  2C4E               	goto	u2501
 12253     144D  2C4F               	goto	u2500
 12254     144E                     u2501:
 12255     144E  2C57               	goto	l2991
 12256     144F                     u2500:
 12257     144F                     l2987:
 12258     144F  3020               	movlw	32
 12259     1450  0221               	subwf	isprint@c,w
 12260     1451  1C03               	skipc
 12261     1452  2C54               	goto	u2511
 12262     1453  2C55               	goto	u2510
 12263     1454                     u2511:
 12264     1454  2C57               	goto	l2991
 12265     1455                     u2510:
 12266     1455                     l2989:
 12267     1455  01A0               	clrf	_isprint$1722
 12268     1456  0AA0               	incf	_isprint$1722,f
 12269     1457                     l2991:
 12270     1457  0C20               	rrf	_isprint$1722,w
 12271     1458                     l1262:
 12272     1458  0008               	return
 12273     1459                     __end_of_isprint:
 12274                           
 12275                           	psect	text33
 12276     17A3                     __ptext33:	
 12277 ;; *************** function _dispatch *****************
 12278 ;; Defined at:
 12279 ;;		line 55 in file "monitor_sync.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;  state           1    wreg     PTR enum E10399
 12282 ;;		 -> main@state(1), 
 12283 ;;  b1              1   56[BANK0 ] PTR struct mybutton
 12284 ;;		 -> main@b1(27), 
 12285 ;;  b2              1   57[BANK0 ] PTR struct mybutton
 12286 ;;		 -> main@b2(27), 
 12287 ;;  b1_clicked_c    1   58[BANK0 ] PTR unsigned char 
 12288 ;;		 -> main@b1_clicked_count(1), 
 12289 ;;  b2_clicked_c    1   59[BANK0 ] PTR unsigned char 
 12290 ;;		 -> main@b2_clicked_count(1), 
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;  state           1   62[BANK0 ] PTR enum E10399
 12293 ;;		 -> main@state(1), 
 12294 ;;  b2_clicked_c    1   64[BANK0 ] unsigned char 
 12295 ;;  b1_clicked_c    1   63[BANK0 ] unsigned char 
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  1    wreg      void 
 12298 ;; Registers used:
 12299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12305 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12308 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12309 ;;Total ram usage:        9 bytes
 12310 ;; Hardware stack levels used: 1
 12311 ;; Hardware stack levels required when called: 4
 12312 ;; This function calls:
 12313 ;;		_printf
 12314 ;; This function is called by:
 12315 ;;		_main
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319     17A3                     _dispatch:	
 12320                           ;psect for function _dispatch
 12321                           
 12322                           
 12323                           ;incstack = 0
 12324                           ; Regs used in _dispatch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12325                           ;dispatch@state stored from wreg
 12326     17A3  0140               	movlb	0	; select bank0
 12327     17A4  00DE               	movwf	dispatch@state
 12328     17A5                     l3549:
 12329                           
 12330                           ;monitor_sync.c: 61: uint8_t b1_clicked_count = *b1_clicked_count_ptr;
 12331     17A5  085A               	movf	dispatch@b1_clicked_count_ptr,w
 12332     17A6  0086               	movwf	6
 12333     17A7  0187               	clrf	7
 12334     17A8  0801               	movf	1,w
 12335     17A9  00DF               	movwf	dispatch@b1_clicked_count
 12336                           
 12337                           ;monitor_sync.c: 62: uint8_t b2_clicked_count = *b2_clicked_count_ptr;
 12338     17AA  085B               	movf	dispatch@b2_clicked_count_ptr,w
 12339     17AB  0086               	movwf	6
 12340     17AC  0187               	clrf	7
 12341     17AD  0801               	movf	1,w
 12342     17AE  00E0               	movwf	dispatch@b2_clicked_count
 12343     17AF                     l3551:
 12344                           
 12345                           ;monitor_sync.c: 64: printf("b1 clicked count: %u\r\n", b1_clicked_count);
 12346     17AF  30AC               	movlw	low (STR_26| (0+32768))
 12347     17B0  00B8               	movwf	printf@f
 12348     17B1  3098               	movlw	high (STR_26| (0+32768))
 12349     17B2  00B9               	movwf	printf@f+1
 12350     17B3  085F               	movf	dispatch@b1_clicked_count,w
 12351     17B4  00DC               	movwf	??_dispatch
 12352     17B5  01DD               	clrf	??_dispatch+1
 12353     17B6  085C               	movf	??_dispatch,w
 12354     17B7  00BA               	movwf	?_printf+2
 12355     17B8  085D               	movf	??_dispatch+1,w
 12356     17B9  00BB               	movwf	?_printf+3
 12357     17BA  3184  242C  3197   	fcall	_printf
 12358     17BD                     l3553:
 12359                           
 12360                           ;monitor_sync.c: 65: printf("b2 clicked count: %u\r\n", b2_clicked_count);
 12361     17BD  30C3               	movlw	low (STR_27| (0+32768))
 12362     17BE  0140               	movlb	0	; select bank0
 12363     17BF  00B8               	movwf	printf@f
 12364     17C0  3098               	movlw	high (STR_27| (0+32768))
 12365     17C1  00B9               	movwf	printf@f+1
 12366     17C2  0860               	movf	dispatch@b2_clicked_count,w
 12367     17C3  00DC               	movwf	??_dispatch
 12368     17C4  01DD               	clrf	??_dispatch+1
 12369     17C5  085C               	movf	??_dispatch,w
 12370     17C6  00BA               	movwf	?_printf+2
 12371     17C7  085D               	movf	??_dispatch+1,w
 12372     17C8  00BB               	movwf	?_printf+3
 12373     17C9  3184  242C  3197   	fcall	_printf
 12374     17CC                     l3555:
 12375                           
 12376                           ;monitor_sync.c: 67: if( 0 == b1_clicked_count && 0 == b2_clicked_count){
 12377     17CC  0140               	movlb	0	; select bank0
 12378     17CD  085F               	movf	dispatch@b1_clicked_count,w
 12379     17CE  1D03               	btfss	3,2
 12380     17CF  2FD1               	goto	u3381
 12381     17D0  2FD2               	goto	u3380
 12382     17D1                     u3381:
 12383     17D1  2FDE               	goto	l3563
 12384     17D2                     u3380:
 12385     17D2                     l3557:
 12386     17D2  0860               	movf	dispatch@b2_clicked_count,w
 12387     17D3  1D03               	btfss	3,2
 12388     17D4  2FD6               	goto	u3391
 12389     17D5  2FD7               	goto	u3390
 12390     17D6                     u3391:
 12391     17D6  2FDE               	goto	l3563
 12392     17D7                     u3390:
 12393     17D7                     l3559:
 12394                           
 12395                           ;monitor_sync.c: 68: *state = STATE_CALIBRATE;
 12396     17D7  085E               	movf	dispatch@state,w
 12397     17D8  0086               	movwf	6
 12398     17D9  3001               	movlw	1	; select bank2/3
 12399     17DA  0087               	movwf	7
 12400     17DB  3004               	movlw	4
 12401     17DC  0081               	movwf	1
 12402     17DD  2FFF               	goto	l519
 12403     17DE                     l3563:
 12404                           
 12405                           ;monitor_sync.c: 70: };monitor_sync.c: 72: if( 1 == b1_clicked_count && 0 == b2_clicked_
      +                          count){
 12406     17DE  035F               	decf	dispatch@b1_clicked_count,w
 12407     17DF  1D03               	btfss	3,2
 12408     17E0  2FE2               	goto	u3401
 12409     17E1  2FE3               	goto	u3400
 12410     17E2                     u3401:
 12411     17E2  2FEF               	goto	l3571
 12412     17E3                     u3400:
 12413     17E3                     l3565:
 12414     17E3  0860               	movf	dispatch@b2_clicked_count,w
 12415     17E4  1D03               	btfss	3,2
 12416     17E5  2FE7               	goto	u3411
 12417     17E6  2FE8               	goto	u3410
 12418     17E7                     u3411:
 12419     17E7  2FEF               	goto	l3571
 12420     17E8                     u3410:
 12421     17E8                     l3567:
 12422                           
 12423                           ;monitor_sync.c: 73: *state = STATE_SAVE_TOP_CALIBRATION_POINT;
 12424     17E8  085E               	movf	dispatch@state,w
 12425     17E9  0086               	movwf	6
 12426     17EA  3001               	movlw	1	; select bank2/3
 12427     17EB  0087               	movwf	7
 12428     17EC  3006               	movlw	6
 12429     17ED  0081               	movwf	1
 12430     17EE  2FFF               	goto	l519
 12431     17EF                     l3571:
 12432                           
 12433                           ;monitor_sync.c: 75: };monitor_sync.c: 77: if( 0 == b1_clicked_count && 1 == b2_clicked_
      +                          count){
 12434     17EF  085F               	movf	dispatch@b1_clicked_count,w
 12435     17F0  1D03               	btfss	3,2
 12436     17F1  2FF3               	goto	u3421
 12437     17F2  2FF4               	goto	u3420
 12438     17F3                     u3421:
 12439     17F3  2FFF               	goto	l519
 12440     17F4                     u3420:
 12441     17F4                     l3573:
 12442     17F4  0360               	decf	dispatch@b2_clicked_count,w
 12443     17F5  1D03               	btfss	3,2
 12444     17F6  2FF8               	goto	u3431
 12445     17F7  2FF9               	goto	u3430
 12446     17F8                     u3431:
 12447     17F8  2FFF               	goto	l519
 12448     17F9                     u3430:
 12449     17F9                     l3575:
 12450                           
 12451                           ;monitor_sync.c: 78: *state = STATE_SAVE_BOTTOM_CALIBRATION_POINT;
 12452     17F9  085E               	movf	dispatch@state,w
 12453     17FA  0086               	movwf	6
 12454     17FB  3001               	movlw	1	; select bank2/3
 12455     17FC  0087               	movwf	7
 12456     17FD  3007               	movlw	7
 12457     17FE  0081               	movwf	1
 12458     17FF                     l519:
 12459     17FF  0008               	return
 12460     1800                     __end_of_dispatch:
 12461                           
 12462                           	psect	text34
 12463     042C                     __ptext34:	
 12464 ;; *************** function _printf *****************
 12465 ;; Defined at:
 12466 ;;		line 477 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
 12467 ;; Parameters:    Size  Location     Type
 12468 ;;  f               2   24[BANK0 ] PTR const unsigned char 
 12469 ;;		 -> STR_28(14), STR_27(23), STR_26(23), STR_25(17), 
 12470 ;;		 -> STR_24(13), STR_23(13), STR_20(3), STR_19(6), 
 12471 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(4), 
 12472 ;;		 -> STR_14(6), STR_13(6), STR_12(27), STR_11(11), 
 12473 ;;		 -> STR_10(9), STR_9(14), STR_8(8), STR_7(38), 
 12474 ;;		 -> STR_6(14), STR_5(8), STR_4(35), STR_2(9), 
 12475 ;;		 -> STR_1(22), 
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;  idx             1   40[BANK0 ] unsigned char 
 12478 ;;  val             4   45[BANK0 ] unsigned long 
 12479 ;;  tmpval          4    0        struct .
 12480 ;;  width           2   53[BANK0 ] int 
 12481 ;;  len             2   49[BANK0 ] unsigned int 
 12482 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
 12483 ;;		 -> STR_29(7), printf@c(1), ?_printf(2), slaveData(64), 
 12484 ;;		 -> STR_3(11), main@b2_clicked_count(1), main@b1_clicked_count(1), 
 12485 ;;  prec            2   41[BANK0 ] int 
 12486 ;;  c               1   55[BANK0 ] unsigned char 
 12487 ;;  flag            1   52[BANK0 ] unsigned char 
 12488 ;;  ap              1   51[BANK0 ] PTR void [1]
 12489 ;;		 -> ?_printf(2), 
 12490 ;; Return value:  Size  Location     Type
 12491 ;;                  2   24[BANK0 ] int 
 12492 ;; Registers used:
 12493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12494 ;; Tracked objects:
 12495 ;;		On entry : 0/0
 12496 ;;		On exit  : 0/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12499 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12500 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12501 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12502 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12503 ;;Total ram usage:       32 bytes
 12504 ;; Hardware stack levels used: 1
 12505 ;; Hardware stack levels required when called: 3
 12506 ;; This function calls:
 12507 ;;		___lldiv
 12508 ;;		___llmod
 12509 ;;		___wmul
 12510 ;;		_isdigit
 12511 ;;		_putch
 12512 ;; This function is called by:
 12513 ;;		_main
 12514 ;;		_dump_buffer
 12515 ;;		_monitoring_sync
 12516 ;;		_dispatch
 12517 ;;		_measurement
 12518 ;;		_print_buffer
 12519 ;; This function uses a non-reentrant model
 12520 ;;
 12521                           
 12522     042C                     _printf:	
 12523                           ;psect for function _printf
 12524                           
 12525     042C                     l2835:	
 12526                           ;incstack = 0
 12527                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12528                           
 12529                           
 12530                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
 12531     042C  303A               	movlw	(low ((?_printf| 0+2)))& (0+255)
 12532     042D  0140               	movlb	0	; select bank0
 12533     042E  00D3               	movwf	printf@ap
 12534                           
 12535                           ;doprnt.c: 553: while((c = *f++)) {
 12536     042F  2EBD               	goto	l2979
 12537     0430                     l2837:
 12538                           
 12539                           ;doprnt.c: 555: if(c != '%')
 12540     0430  3025               	movlw	37
 12541     0431  0657               	xorwf	printf@c,w
 12542     0432  1903               	btfsc	3,2
 12543     0433  2C35               	goto	u2261
 12544     0434  2C36               	goto	u2260
 12545     0435                     u2261:
 12546     0435  2C3B               	goto	l2841
 12547     0436                     u2260:
 12548     0436                     l2839:
 12549                           
 12550                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
 12551     0436  0857               	movf	printf@c,w
 12552     0437  3193  23FE  3184   	fcall	_putch
 12553                           
 12554                           ;doprnt.c: 559: continue;
 12555     043A  2EBD               	goto	l2979
 12556     043B                     l2841:
 12557                           
 12558                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 12559     043B  01D5               	clrf	printf@width
 12560     043C  01D6               	clrf	printf@width+1
 12561                           
 12562                           ;doprnt.c: 565: flag = 0;
 12563     043D  01D4               	clrf	printf@flag
 12564     043E  2C44               	goto	l2847
 12565     043F                     l734:	
 12566                           ;doprnt.c: 596: case '0':
 12567                           
 12568                           
 12569                           ;doprnt.c: 597: flag |= 0x04;
 12570     043F  1554               	bsf	printf@flag,2
 12571     0440                     l2843:
 12572                           
 12573                           ;doprnt.c: 598: f++;
 12574     0440  3001               	movlw	1
 12575     0441  07B8               	addwf	printf@f,f
 12576     0442  3000               	movlw	0
 12577     0443  3DB9               	addwfc	printf@f+1,f
 12578     0444                     l2847:	
 12579                           ;doprnt.c: 599: continue;
 12580                           
 12581     0444  0838               	movf	printf@f,w
 12582     0445  0084               	movwf	4
 12583     0446  0839               	movf	printf@f+1,w
 12584     0447  0085               	movwf	5
 12585     0448  0800               	movf	0,w	;code access
 12586                           
 12587                           ; Switch size 1, requested type "simple"
 12588                           ; Number of cases is 1, Range of values is 48 to 48
 12589                           ; switch strategies available:
 12590                           ; Name         Instructions Cycles
 12591                           ; simple_byte            4     3 (average)
 12592                           ; direct_byte           11     9 (fixed)
 12593                           ; jumptable            263     9 (fixed)
 12594                           ;	Chosen strategy is simple_byte
 12595     0449  3A30               	xorlw	48	; case 48
 12596     044A  1903               	skipnz
 12597     044B  2C3F               	goto	l734
 12598     044C  2C4D               	goto	l2849
 12599     044D                     l2849:
 12600                           
 12601                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 12602     044D  0838               	movf	printf@f,w
 12603     044E  0084               	movwf	4
 12604     044F  0839               	movf	printf@f+1,w
 12605     0450  0085               	movwf	5
 12606     0451  0800               	movf	0,w	;code access
 12607     0452  3194  2433  3184   	fcall	_isdigit
 12608     0455  1C03               	btfss	3,0
 12609     0456  2C58               	goto	u2271
 12610     0457  2C59               	goto	u2270
 12611     0458                     u2271:
 12612     0458  2D0E               	goto	l2903
 12613     0459                     u2270:
 12614     0459                     l2851:
 12615                           
 12616                           ;doprnt.c: 615: width = 0;
 12617     0459  0140               	movlb	0	; select bank0
 12618     045A  01D5               	clrf	printf@width
 12619     045B  01D6               	clrf	printf@width+1
 12620     045C                     l2853:
 12621                           
 12622                           ;doprnt.c: 617: width *= 10;
 12623     045C  300A               	movlw	10
 12624     045D  0140               	movlb	0	; select bank0
 12625     045E  00A0               	movwf	___wmul@multiplier
 12626     045F  3000               	movlw	0
 12627     0460  00A1               	movwf	___wmul@multiplier+1
 12628     0461  0856               	movf	printf@width+1,w
 12629     0462  00A3               	movwf	___wmul@multiplicand+1
 12630     0463  0855               	movf	printf@width,w
 12631     0464  00A2               	movwf	___wmul@multiplicand
 12632     0465  3194  24CB  3184   	fcall	___wmul
 12633     0468  0140               	movlb	0	; select bank0
 12634     0469  0821               	movf	?___wmul+1,w
 12635     046A  00D6               	movwf	printf@width+1
 12636     046B  0820               	movf	?___wmul,w
 12637     046C  00D5               	movwf	printf@width
 12638     046D                     l2855:
 12639                           
 12640                           ;doprnt.c: 618: width += *f++ - '0';
 12641     046D  0838               	movf	printf@f,w
 12642     046E  0084               	movwf	4
 12643     046F  0839               	movf	printf@f+1,w
 12644     0470  0085               	movwf	5
 12645     0471  0800               	movf	0,w	;code access
 12646     0472  3ED0               	addlw	208
 12647     0473  00C0               	movwf	??_printf
 12648     0474  30FF               	movlw	255
 12649     0475  1803               	skipnc
 12650     0476  3000               	movlw	0
 12651     0477  00C1               	movwf	??_printf+1
 12652     0478  0840               	movf	??_printf,w
 12653     0479  07D5               	addwf	printf@width,f
 12654     047A  0841               	movf	??_printf+1,w
 12655     047B  3DD6               	addwfc	printf@width+1,f
 12656     047C                     l2857:
 12657     047C  3001               	movlw	1
 12658     047D  07B8               	addwf	printf@f,f
 12659     047E  3000               	movlw	0
 12660     047F  3DB9               	addwfc	printf@f+1,f
 12661     0480                     l2859:
 12662                           
 12663                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 12664     0480  0838               	movf	printf@f,w
 12665     0481  0084               	movwf	4
 12666     0482  0839               	movf	printf@f+1,w
 12667     0483  0085               	movwf	5
 12668     0484  0800               	movf	0,w	;code access
 12669     0485  3194  2433  3184   	fcall	_isdigit
 12670     0488  1803               	btfsc	3,0
 12671     0489  2C8B               	goto	u2281
 12672     048A  2C8C               	goto	u2280
 12673     048B                     u2281:
 12674     048B  2C5C               	goto	l2853
 12675     048C                     u2280:
 12676     048C  2D0E               	goto	l2903
 12677     048D                     l745:	
 12678                           ;doprnt.c: 667: case 'l':
 12679                           
 12680                           
 12681                           ;doprnt.c: 669: flag |= 0x10;
 12682     048D  1654               	bsf	printf@flag,4
 12683                           
 12684                           ;doprnt.c: 670: goto loop;
 12685     048E  2D0E               	goto	l2903
 12686     048F                     l746:	
 12687                           ;doprnt.c: 738: case 'X':
 12688                           
 12689                           
 12690                           ;doprnt.c: 740: flag |= 0x20;
 12691     048F  16D4               	bsf	printf@flag,5
 12692     0490                     l747:	
 12693                           ;doprnt.c: 744: case 'x':
 12694                           
 12695                           
 12696                           ;doprnt.c: 747: flag |= 0x80;
 12697     0490  17D4               	bsf	printf@flag,7
 12698                           
 12699                           ;doprnt.c: 749: break;
 12700     0491  2D32               	goto	l748
 12701     0492                     l2861:
 12702                           
 12703                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 12704     0492  0853               	movf	printf@ap,w
 12705     0493  0086               	movwf	6
 12706     0494  0187               	clrf	7
 12707     0495  3F40               	moviw [0]fsr1
 12708     0496  00CB               	movwf	printf@cp
 12709     0497  3F41               	moviw [1]fsr1
 12710     0498  00CC               	movwf	printf@cp+1
 12711     0499                     l2863:
 12712     0499  3002               	movlw	2
 12713     049A  00C0               	movwf	??_printf
 12714     049B  0840               	movf	??_printf,w
 12715     049C  07D3               	addwf	printf@ap,f
 12716     049D                     l2865:
 12717                           
 12718                           ;doprnt.c: 766: if(!cp)
 12719     049D  084B               	movf	printf@cp,w
 12720     049E  044C               	iorwf	printf@cp+1,w
 12721     049F  1D03               	btfss	3,2
 12722     04A0  2CA2               	goto	u2291
 12723     04A1  2CA3               	goto	u2290
 12724     04A2                     u2291:
 12725     04A2  2CA7               	goto	l2869
 12726     04A3                     u2290:
 12727     04A3                     l2867:
 12728                           
 12729                           ;doprnt.c: 767: cp = "(null)";
 12730     04A3  3089               	movlw	low (STR_29| (0+32768))
 12731     04A4  00CB               	movwf	printf@cp
 12732     04A5  3099               	movlw	high (STR_29| (0+32768))
 12733     04A6  00CC               	movwf	printf@cp+1
 12734     04A7                     l2869:
 12735                           
 12736                           ;doprnt.c: 771: len = 0;
 12737     04A7  01D1               	clrf	printf@len
 12738     04A8  01D2               	clrf	printf@len+1
 12739                           
 12740                           ;doprnt.c: 772: while(cp[len])
 12741     04A9  2CAE               	goto	l2873
 12742     04AA                     l2871:
 12743                           
 12744                           ;doprnt.c: 773: len++;
 12745     04AA  3001               	movlw	1
 12746     04AB  07D1               	addwf	printf@len,f
 12747     04AC  3000               	movlw	0
 12748     04AD  3DD2               	addwfc	printf@len+1,f
 12749     04AE                     l2873:
 12750     04AE  084B               	movf	printf@cp,w
 12751     04AF  0751               	addwf	printf@len,w
 12752     04B0  0084               	movwf	4
 12753     04B1  084C               	movf	printf@cp+1,w
 12754     04B2  3D52               	addwfc	printf@len+1,w
 12755     04B3  0085               	movwf	5
 12756     04B4  0012               	moviw fsr0++
 12757     04B5  1D03               	btfss	3,2
 12758     04B6  2CB8               	goto	u2301
 12759     04B7  2CB9               	goto	u2300
 12760     04B8                     u2301:
 12761     04B8  2CAA               	goto	l2871
 12762     04B9                     u2300:
 12763     04B9                     l2875:
 12764                           
 12765                           ;doprnt.c: 783: if(((unsigned)width) > len)
 12766     04B9  0856               	movf	printf@width+1,w
 12767     04BA  0252               	subwf	printf@len+1,w
 12768     04BB  1D03               	skipz
 12769     04BC  2CBF               	goto	u2315
 12770     04BD  0855               	movf	printf@width,w
 12771     04BE  0251               	subwf	printf@len,w
 12772     04BF                     u2315:
 12773     04BF  1803               	skipnc
 12774     04C0  2CC2               	goto	u2311
 12775     04C1  2CC3               	goto	u2310
 12776     04C2                     u2311:
 12777     04C2  2CC8               	goto	l2879
 12778     04C3                     u2310:
 12779     04C3                     l2877:
 12780                           
 12781                           ;doprnt.c: 784: width -= len;
 12782     04C3  0851               	movf	printf@len,w
 12783     04C4  02D5               	subwf	printf@width,f
 12784     04C5  0852               	movf	printf@len+1,w
 12785     04C6  3BD6               	subwfb	printf@width+1,f
 12786     04C7  2CCF               	goto	l2883
 12787     04C8                     l2879:
 12788                           
 12789                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
 12790     04C8  01D5               	clrf	printf@width
 12791     04C9  01D6               	clrf	printf@width+1
 12792     04CA  2CCF               	goto	l2883
 12793     04CB                     l2881:
 12794                           
 12795                           ;doprnt.c: 791: (putch(' ') );
 12796     04CB  3020               	movlw	32
 12797     04CC  3193  23FE  3184   	fcall	_putch
 12798     04CF                     l2883:
 12799     04CF  30FF               	movlw	255
 12800     04D0  0140               	movlb	0	; select bank0
 12801     04D1  07D5               	addwf	printf@width,f
 12802     04D2  30FF               	movlw	255
 12803     04D3  3DD6               	addwfc	printf@width+1,f
 12804     04D4  0A55               	incf	printf@width,w
 12805     04D5  1D03               	skipz
 12806     04D6  2CDB               	goto	u2321
 12807     04D7  0A56               	incf	printf@width+1,w
 12808     04D8  1D03               	btfss	3,2
 12809     04D9  2CDB               	goto	u2321
 12810     04DA  2CDC               	goto	u2320
 12811     04DB                     u2321:
 12812     04DB  2CCB               	goto	l2881
 12813     04DC                     u2320:
 12814     04DC  2CEA               	goto	l2889
 12815     04DD                     l2885:
 12816                           
 12817                           ;doprnt.c: 794: (putch(*cp++) );
 12818     04DD  084B               	movf	printf@cp,w
 12819     04DE  0084               	movwf	4
 12820     04DF  084C               	movf	printf@cp+1,w
 12821     04E0  0085               	movwf	5
 12822     04E1  0800               	movf	0,w	;code access
 12823     04E2  3193  23FE  3184   	fcall	_putch
 12824     04E5                     l2887:
 12825     04E5  3001               	movlw	1
 12826     04E6  0140               	movlb	0	; select bank0
 12827     04E7  07CB               	addwf	printf@cp,f
 12828     04E8  3000               	movlw	0
 12829     04E9  3DCC               	addwfc	printf@cp+1,f
 12830     04EA                     l2889:
 12831     04EA  3001               	movlw	1
 12832     04EB  02D1               	subwf	printf@len,f
 12833     04EC  3000               	movlw	0
 12834     04ED  3BD2               	subwfb	printf@len+1,f
 12835     04EE  0A51               	incf	printf@len,w
 12836     04EF  1D03               	skipz
 12837     04F0  2CF5               	goto	u2331
 12838     04F1  0A52               	incf	printf@len+1,w
 12839     04F2  1D03               	btfss	3,2
 12840     04F3  2CF5               	goto	u2331
 12841     04F4  2CF6               	goto	u2330
 12842     04F5                     u2331:
 12843     04F5  2CDD               	goto	l2885
 12844     04F6                     u2330:
 12845     04F6  2EBD               	goto	l2979
 12846     04F7                     l2891:
 12847                           
 12848                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
 12849     04F7  0853               	movf	printf@ap,w
 12850     04F8  0086               	movwf	6
 12851     04F9  0187               	clrf	7
 12852     04FA  0801               	movf	1,w
 12853     04FB  00D7               	movwf	printf@c
 12854     04FC                     l2893:
 12855     04FC  3002               	movlw	2
 12856     04FD  00C0               	movwf	??_printf
 12857     04FE  0840               	movf	??_printf,w
 12858     04FF  07D3               	addwf	printf@ap,f
 12859     0500                     l2895:
 12860                           
 12861                           ;doprnt.c: 831: cp = (char *)&c;
 12862     0500  3057               	movlw	low printf@c
 12863     0501  00CB               	movwf	printf@cp
 12864     0502  3000               	movlw	high printf@c
 12865     0503  00CC               	movwf	printf@cp+1
 12866     0504                     l2897:
 12867                           
 12868                           ;doprnt.c: 832: len = 1;
 12869     0504  3001               	movlw	1
 12870     0505  00D1               	movwf	printf@len
 12871     0506  3000               	movlw	0
 12872     0507  00D2               	movwf	printf@len+1
 12873                           
 12874                           ;doprnt.c: 833: goto dostring;
 12875     0508  2CB9               	goto	l2875
 12876     0509                     l2899:
 12877                           
 12878                           ;doprnt.c: 844: flag |= 0xC0;
 12879     0509  30C0               	movlw	192
 12880     050A  00C0               	movwf	??_printf
 12881     050B  0840               	movf	??_printf,w
 12882     050C  04D4               	iorwf	printf@flag,f
 12883                           
 12884                           ;doprnt.c: 845: break;
 12885     050D  2D32               	goto	l748
 12886     050E                     l2903:
 12887     050E  0140               	movlb	0	; select bank0
 12888     050F  0839               	movf	printf@f+1,w
 12889     0510  00C1               	movwf	??_printf+1
 12890     0511  0838               	movf	printf@f,w
 12891     0512  00C0               	movwf	??_printf
 12892     0513  0AB8               	incf	printf@f,f
 12893     0514  1903               	skipnz
 12894     0515  0AB9               	incf	printf@f+1,f
 12895     0516  0840               	movf	??_printf,w
 12896     0517  0084               	movwf	4
 12897     0518  0841               	movf	??_printf+1,w
 12898     0519  0085               	movwf	5
 12899     051A  0800               	movf	0,w	;code access
 12900     051B  00D7               	movwf	printf@c
 12901                           
 12902                           ; Switch size 1, requested type "simple"
 12903                           ; Number of cases is 7, Range of values is 0 to 120
 12904                           ; switch strategies available:
 12905                           ; Name         Instructions Cycles
 12906                           ; simple_byte           22    12 (average)
 12907                           ; direct_byte          248     6 (fixed)
 12908                           ; jumptable            260     6 (fixed)
 12909                           ;	Chosen strategy is simple_byte
 12910     051C  3A00               	xorlw	0	; case 0
 12911     051D  1903               	skipnz
 12912     051E  2ED0               	goto	l800
 12913     051F  3A58               	xorlw	88	; case 88
 12914     0520  1903               	skipnz
 12915     0521  2C8F               	goto	l746
 12916     0522  3A3B               	xorlw	59	; case 99
 12917     0523  1903               	skipnz
 12918     0524  2CF7               	goto	l2891
 12919     0525  3A0F               	xorlw	15	; case 108
 12920     0526  1903               	skipnz
 12921     0527  2C8D               	goto	l745
 12922     0528  3A1F               	xorlw	31	; case 115
 12923     0529  1903               	skipnz
 12924     052A  2C92               	goto	l2861
 12925     052B  3A06               	xorlw	6	; case 117
 12926     052C  1903               	skipnz
 12927     052D  2D09               	goto	l2899
 12928     052E  3A0D               	xorlw	13	; case 120
 12929     052F  1903               	skipnz
 12930     0530  2C90               	goto	l747
 12931     0531  2D00               	goto	l2895
 12932     0532                     l748:
 12933                           
 12934                           ;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
 12935     0532  1E54               	btfss	printf@flag,4
 12936     0533  2D35               	goto	u2341
 12937     0534  2D36               	goto	u2340
 12938     0535                     u2341:
 12939     0535  2D46               	goto	l2909
 12940     0536                     u2340:
 12941     0536                     l2905:
 12942                           
 12943                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 12944     0536  0853               	movf	printf@ap,w
 12945     0537  0086               	movwf	6
 12946     0538  0187               	clrf	7
 12947     0539  3F40               	moviw [0]fsr1
 12948     053A  00CD               	movwf	printf@val
 12949     053B  3F41               	moviw [1]fsr1
 12950     053C  00CE               	movwf	printf@val+1
 12951     053D  3F42               	moviw [2]fsr1
 12952     053E  00CF               	movwf	printf@val+2
 12953     053F  3F43               	moviw [3]fsr1
 12954     0540  00D0               	movwf	printf@val+3
 12955     0541                     l2907:
 12956     0541  3004               	movlw	4
 12957     0542  00C0               	movwf	??_printf
 12958     0543  0840               	movf	??_printf,w
 12959     0544  07D3               	addwf	printf@ap,f
 12960     0545  2DD2               	goto	l2935
 12961     0546                     l2909:
 12962                           
 12963                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
 12964     0546  0853               	movf	printf@ap,w
 12965     0547  0086               	movwf	6
 12966     0548  0187               	clrf	7
 12967     0549  3F40               	moviw [0]fsr1
 12968     054A  00C0               	movwf	??_printf
 12969     054B  3F41               	moviw [1]fsr1
 12970     054C  00C1               	movwf	??_printf+1
 12971     054D  0840               	movf	??_printf,w
 12972     054E  00CD               	movwf	printf@val
 12973     054F  0841               	movf	??_printf+1,w
 12974     0550  00CE               	movwf	printf@val+1
 12975     0551  01CF               	clrf	printf@val+2
 12976     0552  01D0               	clrf	printf@val+3
 12977     0553                     l2911:
 12978     0553  3002               	movlw	2
 12979     0554  00C0               	movwf	??_printf
 12980     0555  0840               	movf	??_printf,w
 12981     0556  07D3               	addwf	printf@ap,f
 12982     0557  2DD2               	goto	l2935
 12983     0558                     l769:	
 12984                           ;doprnt.c: 1328: case 0xC0:
 12985                           
 12986                           
 12987                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12988     0558  01D7               	clrf	printf@c
 12989     0559  0AD7               	incf	printf@c,f
 12990     055A                     l2913:
 12991     055A  300A               	movlw	10
 12992     055B  0657               	xorwf	printf@c,w
 12993     055C  1D03               	btfss	3,2
 12994     055D  2D5F               	goto	u2351
 12995     055E  2D60               	goto	u2350
 12996     055F                     u2351:
 12997     055F  2D61               	goto	l2917
 12998     0560                     u2350:
 12999     0560  2DDB               	goto	l2937
 13000     0561                     l2917:
 13001                           
 13002                           ;doprnt.c: 1332: if(val < dpowers[c])
 13003     0561  0857               	movf	printf@c,w
 13004     0562  00C0               	movwf	??_printf
 13005     0563  01C1               	clrf	??_printf+1
 13006     0564  35C0               	lslf	??_printf,f
 13007     0565  0DC1               	rlf	??_printf+1,f
 13008     0566  35C0               	lslf	??_printf,f
 13009     0567  0DC1               	rlf	??_printf+1,f
 13010     0568  3046               	movlw	low _dpowers
 13011     0569  0740               	addwf	??_printf,w
 13012     056A  0084               	movwf	4
 13013     056B  3018               	movlw	high _dpowers
 13014     056C  3D41               	addwfc	??_printf+1,w
 13015     056D  3880               	iorlw	128
 13016     056E  0085               	movwf	5
 13017     056F  3F00               	moviw [0]fsr0
 13018     0570  00C2               	movwf	??_printf+2
 13019     0571  3F01               	moviw [1]fsr0
 13020     0572  00C3               	movwf	??_printf+3
 13021     0573  3F02               	moviw [2]fsr0
 13022     0574  00C4               	movwf	??_printf+4
 13023     0575  3F03               	moviw [3]fsr0
 13024     0576  00C5               	movwf	??_printf+5
 13025     0577  0845               	movf	??_printf+5,w
 13026     0578  0250               	subwf	printf@val+3,w
 13027     0579  1D03               	skipz
 13028     057A  2D85               	goto	u2365
 13029     057B  0844               	movf	??_printf+4,w
 13030     057C  024F               	subwf	printf@val+2,w
 13031     057D  1D03               	skipz
 13032     057E  2D85               	goto	u2365
 13033     057F  0843               	movf	??_printf+3,w
 13034     0580  024E               	subwf	printf@val+1,w
 13035     0581  1D03               	skipz
 13036     0582  2D85               	goto	u2365
 13037     0583  0842               	movf	??_printf+2,w
 13038     0584  024D               	subwf	printf@val,w
 13039     0585                     u2365:
 13040     0585  1803               	skipnc
 13041     0586  2D88               	goto	u2361
 13042     0587  2D89               	goto	u2360
 13043     0588                     u2361:
 13044     0588  2D8A               	goto	l2921
 13045     0589                     u2360:
 13046     0589  2DDB               	goto	l2937
 13047     058A                     l2921:
 13048     058A  3001               	movlw	1
 13049     058B  00C0               	movwf	??_printf
 13050     058C  0840               	movf	??_printf,w
 13051     058D  07D7               	addwf	printf@c,f
 13052     058E  300A               	movlw	10
 13053     058F  0657               	xorwf	printf@c,w
 13054     0590  1D03               	btfss	3,2
 13055     0591  2D93               	goto	u2371
 13056     0592  2D94               	goto	u2370
 13057     0593                     u2371:
 13058     0593  2D61               	goto	l2917
 13059     0594                     u2370:
 13060     0594  2DDB               	goto	l2937
 13061     0595                     l774:	
 13062                           ;doprnt.c: 1340: case 0x80:
 13063                           
 13064                           
 13065                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 13066     0595  01D7               	clrf	printf@c
 13067     0596  0AD7               	incf	printf@c,f
 13068     0597                     l2923:
 13069     0597  3008               	movlw	8
 13070     0598  0657               	xorwf	printf@c,w
 13071     0599  1D03               	btfss	3,2
 13072     059A  2D9C               	goto	u2381
 13073     059B  2D9D               	goto	u2380
 13074     059C                     u2381:
 13075     059C  2D9E               	goto	l2927
 13076     059D                     u2380:
 13077     059D  2DDB               	goto	l2937
 13078     059E                     l2927:
 13079                           
 13080                           ;doprnt.c: 1343: if(val < hexpowers[c])
 13081     059E  0857               	movf	printf@c,w
 13082     059F  00C0               	movwf	??_printf
 13083     05A0  01C1               	clrf	??_printf+1
 13084     05A1  35C0               	lslf	??_printf,f
 13085     05A2  0DC1               	rlf	??_printf+1,f
 13086     05A3  35C0               	lslf	??_printf,f
 13087     05A4  0DC1               	rlf	??_printf+1,f
 13088     05A5  3000               	movlw	low _hexpowers
 13089     05A6  0740               	addwf	??_printf,w
 13090     05A7  0084               	movwf	4
 13091     05A8  3018               	movlw	high _hexpowers
 13092     05A9  3D41               	addwfc	??_printf+1,w
 13093     05AA  3880               	iorlw	128
 13094     05AB  0085               	movwf	5
 13095     05AC  3F00               	moviw [0]fsr0
 13096     05AD  00C2               	movwf	??_printf+2
 13097     05AE  3F01               	moviw [1]fsr0
 13098     05AF  00C3               	movwf	??_printf+3
 13099     05B0  3F02               	moviw [2]fsr0
 13100     05B1  00C4               	movwf	??_printf+4
 13101     05B2  3F03               	moviw [3]fsr0
 13102     05B3  00C5               	movwf	??_printf+5
 13103     05B4  0845               	movf	??_printf+5,w
 13104     05B5  0250               	subwf	printf@val+3,w
 13105     05B6  1D03               	skipz
 13106     05B7  2DC2               	goto	u2395
 13107     05B8  0844               	movf	??_printf+4,w
 13108     05B9  024F               	subwf	printf@val+2,w
 13109     05BA  1D03               	skipz
 13110     05BB  2DC2               	goto	u2395
 13111     05BC  0843               	movf	??_printf+3,w
 13112     05BD  024E               	subwf	printf@val+1,w
 13113     05BE  1D03               	skipz
 13114     05BF  2DC2               	goto	u2395
 13115     05C0  0842               	movf	??_printf+2,w
 13116     05C1  024D               	subwf	printf@val,w
 13117     05C2                     u2395:
 13118     05C2  1803               	skipnc
 13119     05C3  2DC5               	goto	u2391
 13120     05C4  2DC6               	goto	u2390
 13121     05C5                     u2391:
 13122     05C5  2DC7               	goto	l2931
 13123     05C6                     u2390:
 13124     05C6  2DDB               	goto	l2937
 13125     05C7                     l2931:
 13126     05C7  3001               	movlw	1
 13127     05C8  00C0               	movwf	??_printf
 13128     05C9  0840               	movf	??_printf,w
 13129     05CA  07D7               	addwf	printf@c,f
 13130     05CB  3008               	movlw	8
 13131     05CC  0657               	xorwf	printf@c,w
 13132     05CD  1D03               	btfss	3,2
 13133     05CE  2DD0               	goto	u2401
 13134     05CF  2DD1               	goto	u2400
 13135     05D0                     u2401:
 13136     05D0  2D9E               	goto	l2927
 13137     05D1                     u2400:
 13138     05D1  2DDB               	goto	l2937
 13139     05D2                     l2935:
 13140     05D2  0854               	movf	printf@flag,w
 13141     05D3  39C0               	andlw	192
 13142                           
 13143                           ; Switch size 1, requested type "simple"
 13144                           ; Number of cases is 2, Range of values is 128 to 192
 13145                           ; switch strategies available:
 13146                           ; Name         Instructions Cycles
 13147                           ; simple_byte            7     4 (average)
 13148                           ; direct_byte          139     9 (fixed)
 13149                           ; jumptable            263     9 (fixed)
 13150                           ;	Chosen strategy is simple_byte
 13151     05D4  3A80               	xorlw	128	; case 128
 13152     05D5  1903               	skipnz
 13153     05D6  2D95               	goto	l774
 13154     05D7  3A40               	xorlw	64	; case 192
 13155     05D8  1903               	skipnz
 13156     05D9  2D58               	goto	l769
 13157     05DA  2DDB               	goto	l2937
 13158     05DB                     l2937:
 13159                           
 13160                           ;doprnt.c: 1407: if(width > c)
 13161     05DB  0856               	movf	printf@width+1,w
 13162     05DC  3A80               	xorlw	128
 13163     05DD  3C80               	sublw	128
 13164     05DE  1D03               	skipz
 13165     05DF  2DE2               	goto	u2415
 13166     05E0  0855               	movf	printf@width,w
 13167     05E1  0257               	subwf	printf@c,w
 13168     05E2                     u2415:
 13169     05E2  1803               	skipnc
 13170     05E3  2DE5               	goto	u2411
 13171     05E4  2DE6               	goto	u2410
 13172     05E5                     u2411:
 13173     05E5  2DEF               	goto	l2941
 13174     05E6                     u2410:
 13175     05E6                     l2939:
 13176                           
 13177                           ;doprnt.c: 1408: width -= c;
 13178     05E6  0140               	movlb	0	; select bank0
 13179     05E7  0857               	movf	printf@c,w
 13180     05E8  00C0               	movwf	??_printf
 13181     05E9  01C1               	clrf	??_printf+1
 13182     05EA  0840               	movf	??_printf,w
 13183     05EB  02D5               	subwf	printf@width,f
 13184     05EC  0841               	movf	??_printf+1,w
 13185     05ED  3BD6               	subwfb	printf@width+1,f
 13186     05EE  2DF2               	goto	l2943
 13187     05EF                     l2941:
 13188                           
 13189                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 13190     05EF  0140               	movlb	0	; select bank0
 13191     05F0  01D5               	clrf	printf@width
 13192     05F1  01D6               	clrf	printf@width+1
 13193     05F2                     l2943:
 13194                           
 13195                           ;doprnt.c: 1413: if(flag & 0x04) {
 13196     05F2  1D54               	btfss	printf@flag,2
 13197     05F3  2DF5               	goto	u2421
 13198     05F4  2DF6               	goto	u2420
 13199     05F5                     u2421:
 13200     05F5  2E0C               	goto	l2951
 13201     05F6                     u2420:
 13202     05F6                     l2945:
 13203                           
 13204                           ;doprnt.c: 1441: if(width)
 13205     05F6  0855               	movf	printf@width,w
 13206     05F7  0456               	iorwf	printf@width+1,w
 13207     05F8  1903               	btfsc	3,2
 13208     05F9  2DFB               	goto	u2431
 13209     05FA  2DFC               	goto	u2430
 13210     05FB                     u2431:
 13211     05FB  2E21               	goto	l2957
 13212     05FC                     u2430:
 13213     05FC                     l2947:
 13214                           
 13215                           ;doprnt.c: 1443: (putch('0') );
 13216     05FC  3030               	movlw	48
 13217     05FD  3193  23FE  3184   	fcall	_putch
 13218     0600                     l2949:
 13219                           
 13220                           ;doprnt.c: 1444: while(--width);
 13221     0600  30FF               	movlw	255
 13222     0601  0140               	movlb	0	; select bank0
 13223     0602  07D5               	addwf	printf@width,f
 13224     0603  30FF               	movlw	255
 13225     0604  3DD6               	addwfc	printf@width+1,f
 13226     0605  0855               	movf	printf@width,w
 13227     0606  0456               	iorwf	printf@width+1,w
 13228     0607  1D03               	btfss	3,2
 13229     0608  2E0A               	goto	u2441
 13230     0609  2E0B               	goto	u2440
 13231     060A                     u2441:
 13232     060A  2DFC               	goto	l2947
 13233     060B                     u2440:
 13234     060B  2E21               	goto	l2957
 13235     060C                     l2951:
 13236                           
 13237                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 13238     060C  0855               	movf	printf@width,w
 13239     060D  0456               	iorwf	printf@width+1,w
 13240     060E  1903               	btfsc	3,2
 13241     060F  2E11               	goto	u2451
 13242     0610  2E12               	goto	u2450
 13243     0611                     u2451:
 13244     0611  2E21               	goto	l2957
 13245     0612                     u2450:
 13246     0612                     l2953:
 13247                           
 13248                           ;doprnt.c: 1456: (putch(' ') );
 13249     0612  3020               	movlw	32
 13250     0613  3193  23FE  3184   	fcall	_putch
 13251     0616                     l2955:
 13252                           
 13253                           ;doprnt.c: 1457: while(--width);
 13254     0616  30FF               	movlw	255
 13255     0617  0140               	movlb	0	; select bank0
 13256     0618  07D5               	addwf	printf@width,f
 13257     0619  30FF               	movlw	255
 13258     061A  3DD6               	addwfc	printf@width+1,f
 13259     061B  0855               	movf	printf@width,w
 13260     061C  0456               	iorwf	printf@width+1,w
 13261     061D  1D03               	btfss	3,2
 13262     061E  2E20               	goto	u2461
 13263     061F  2E21               	goto	u2460
 13264     0620                     u2461:
 13265     0620  2E12               	goto	l2953
 13266     0621                     u2460:
 13267     0621                     l2957:
 13268                           
 13269                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 13270     0621  0857               	movf	printf@c,w
 13271     0622  00C0               	movwf	??_printf
 13272     0623  01C1               	clrf	??_printf+1
 13273     0624  0840               	movf	??_printf,w
 13274     0625  00C9               	movwf	printf@prec
 13275     0626  0841               	movf	??_printf+1,w
 13276     0627  00CA               	movwf	printf@prec+1
 13277                           
 13278                           ;doprnt.c: 1500: while(prec--) {
 13279     0628  2EB0               	goto	l2977
 13280     0629                     l2959:
 13281                           
 13282                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
 13283     0629  3000               	movlw	0
 13284     062A  00B1               	movwf	___llmod@divisor+3
 13285     062B  3000               	movlw	0
 13286     062C  00B0               	movwf	___llmod@divisor+2
 13287     062D  3000               	movlw	0
 13288     062E  00AF               	movwf	___llmod@divisor+1
 13289     062F  300A               	movlw	10
 13290     0630  00AE               	movwf	___llmod@divisor
 13291     0631  084A               	movf	printf@prec+1,w
 13292     0632  0085               	movwf	5
 13293     0633  0849               	movf	printf@prec,w
 13294     0634  0084               	movwf	4
 13295     0635  3584               	lslf	4,f
 13296     0636  0D85               	rlf	5,f
 13297     0637  3584               	lslf	4,f
 13298     0638  0D85               	rlf	5,f
 13299     0639  3046               	movlw	low _dpowers
 13300     063A  0784               	addwf	4,f
 13301     063B  3018               	movlw	high _dpowers
 13302     063C  3D05               	addwfc	5,w
 13303     063D  3880               	iorlw	128
 13304     063E  0085               	movwf	5
 13305     063F  3F00               	moviw [0]fsr0
 13306     0640  00A0               	movwf	___lldiv@divisor
 13307     0641  3F01               	moviw [1]fsr0
 13308     0642  00A1               	movwf	___lldiv@divisor+1
 13309     0643  3F02               	moviw [2]fsr0
 13310     0644  00A2               	movwf	___lldiv@divisor+2
 13311     0645  3F03               	moviw [3]fsr0
 13312     0646  00A3               	movwf	___lldiv@divisor+3
 13313     0647  0850               	movf	printf@val+3,w
 13314     0648  00A7               	movwf	___lldiv@dividend+3
 13315     0649  084F               	movf	printf@val+2,w
 13316     064A  00A6               	movwf	___lldiv@dividend+2
 13317     064B  084E               	movf	printf@val+1,w
 13318     064C  00A5               	movwf	___lldiv@dividend+1
 13319     064D  084D               	movf	printf@val,w
 13320     064E  00A4               	movwf	___lldiv@dividend
 13321     064F  3197  2748  3184   	fcall	___lldiv
 13322     0652  0140               	movlb	0	; select bank0
 13323     0653  0823               	movf	?___lldiv+3,w
 13324     0654  00B5               	movwf	___llmod@dividend+3
 13325     0655  0822               	movf	?___lldiv+2,w
 13326     0656  00B4               	movwf	___llmod@dividend+2
 13327     0657  0821               	movf	?___lldiv+1,w
 13328     0658  00B3               	movwf	___llmod@dividend+1
 13329     0659  0820               	movf	?___lldiv,w
 13330     065A  00B2               	movwf	___llmod@dividend
 13331     065B  3196  2655  3184   	fcall	___llmod
 13332     065E  0140               	movlb	0	; select bank0
 13333     065F  082E               	movf	?___llmod,w
 13334     0660  3E30               	addlw	48
 13335     0661  00D7               	movwf	printf@c
 13336                           
 13337                           ;doprnt.c: 1517: break;
 13338     0662  2EAC               	goto	l2975
 13339     0663                     l2961:
 13340                           
 13341                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
 13342     0663  084A               	movf	printf@prec+1,w
 13343     0664  0085               	movwf	5
 13344     0665  0849               	movf	printf@prec,w
 13345     0666  0084               	movwf	4
 13346     0667  3584               	lslf	4,f
 13347     0668  0D85               	rlf	5,f
 13348     0669  3584               	lslf	4,f
 13349     066A  0D85               	rlf	5,f
 13350     066B  3000               	movlw	low _hexpowers
 13351     066C  0784               	addwf	4,f
 13352     066D  3018               	movlw	high _hexpowers
 13353     066E  3D05               	addwfc	5,w
 13354     066F  3880               	iorlw	128
 13355     0670  0085               	movwf	5
 13356     0671  3F00               	moviw [0]fsr0
 13357     0672  00A0               	movwf	___lldiv@divisor
 13358     0673  3F01               	moviw [1]fsr0
 13359     0674  00A1               	movwf	___lldiv@divisor+1
 13360     0675  3F02               	moviw [2]fsr0
 13361     0676  00A2               	movwf	___lldiv@divisor+2
 13362     0677  3F03               	moviw [3]fsr0
 13363     0678  00A3               	movwf	___lldiv@divisor+3
 13364     0679  0850               	movf	printf@val+3,w
 13365     067A  00A7               	movwf	___lldiv@dividend+3
 13366     067B  084F               	movf	printf@val+2,w
 13367     067C  00A6               	movwf	___lldiv@dividend+2
 13368     067D  084E               	movf	printf@val+1,w
 13369     067E  00A5               	movwf	___lldiv@dividend+1
 13370     067F  084D               	movf	printf@val,w
 13371     0680  00A4               	movwf	___lldiv@dividend
 13372     0681  3197  2748  3184   	fcall	___lldiv
 13373     0684  0140               	movlb	0	; select bank0
 13374     0685  0820               	movf	?___lldiv,w
 13375     0686  390F               	andlw	15
 13376     0687  00C8               	movwf	printf@idx
 13377     0688                     l2963:
 13378                           
 13379                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 13380     0688  1AD4               	btfsc	printf@flag,5
 13381     0689  2E8B               	goto	u2471
 13382     068A  2E8C               	goto	u2470
 13383     068B                     u2471:
 13384     068B  2E91               	goto	l2967
 13385     068C                     u2470:
 13386     068C                     l2965:
 13387     068C  3001               	movlw	low (STR_31| (0+32768))
 13388     068D  00C6               	movwf	_printf$1436
 13389     068E  3099               	movlw	high (STR_31| (0+32768))
 13390     068F  00C7               	movwf	_printf$1436+1
 13391     0690  2E95               	goto	l2969
 13392     0691                     l2967:
 13393     0691  30F0               	movlw	low (STR_30| (0+32768))
 13394     0692  00C6               	movwf	_printf$1436
 13395     0693  3098               	movlw	high (STR_30| (0+32768))
 13396     0694  00C7               	movwf	_printf$1436+1
 13397     0695                     l2969:
 13398     0695  0847               	movf	_printf$1436+1,w
 13399     0696  00C1               	movwf	??_printf+1
 13400     0697  0846               	movf	_printf$1436,w
 13401     0698  00C0               	movwf	??_printf
 13402     0699  0848               	movf	printf@idx,w
 13403     069A  0740               	addwf	??_printf,w
 13404     069B  0084               	movwf	4
 13405     069C  0841               	movf	??_printf+1,w
 13406     069D  1803               	skipnc
 13407     069E  0A41               	incf	??_printf+1,w
 13408     069F  0085               	movwf	5
 13409     06A0  0800               	movf	0,w	;code access
 13410     06A1  00D7               	movwf	printf@c
 13411                           
 13412                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
 13413     06A2  2EAC               	goto	l2975
 13414     06A3                     l2973:
 13415     06A3  0854               	movf	printf@flag,w
 13416     06A4  39C0               	andlw	192
 13417                           
 13418                           ; Switch size 1, requested type "simple"
 13419                           ; Number of cases is 2, Range of values is 128 to 192
 13420                           ; switch strategies available:
 13421                           ; Name         Instructions Cycles
 13422                           ; simple_byte            7     4 (average)
 13423                           ; direct_byte          139     9 (fixed)
 13424                           ; jumptable            263     9 (fixed)
 13425                           ;	Chosen strategy is simple_byte
 13426     06A5  3A80               	xorlw	128	; case 128
 13427     06A6  1903               	skipnz
 13428     06A7  2E63               	goto	l2961
 13429     06A8  3A40               	xorlw	64	; case 192
 13430     06A9  1903               	skipnz
 13431     06AA  2E29               	goto	l2959
 13432     06AB  2EAC               	goto	l2975
 13433     06AC                     l2975:
 13434                           
 13435                           ;doprnt.c: 1550: (putch(c) );
 13436     06AC  0857               	movf	printf@c,w
 13437     06AD  3193  23FE  3184   	fcall	_putch
 13438     06B0                     l2977:
 13439     06B0  30FF               	movlw	255
 13440     06B1  0140               	movlb	0	; select bank0
 13441     06B2  07C9               	addwf	printf@prec,f
 13442     06B3  30FF               	movlw	255
 13443     06B4  3DCA               	addwfc	printf@prec+1,f
 13444     06B5  0A49               	incf	printf@prec,w
 13445     06B6  1D03               	skipz
 13446     06B7  2EBC               	goto	u2481
 13447     06B8  0A4A               	incf	printf@prec+1,w
 13448     06B9  1D03               	btfss	3,2
 13449     06BA  2EBC               	goto	u2481
 13450     06BB  2EBD               	goto	u2480
 13451     06BC                     u2481:
 13452     06BC  2EA3               	goto	l2973
 13453     06BD                     u2480:
 13454     06BD                     l2979:
 13455     06BD  0140               	movlb	0	; select bank0
 13456     06BE  0839               	movf	printf@f+1,w
 13457     06BF  00C1               	movwf	??_printf+1
 13458     06C0  0838               	movf	printf@f,w
 13459     06C1  00C0               	movwf	??_printf
 13460     06C2  0AB8               	incf	printf@f,f
 13461     06C3  1903               	skipnz
 13462     06C4  0AB9               	incf	printf@f+1,f
 13463     06C5  0840               	movf	??_printf,w
 13464     06C6  0084               	movwf	4
 13465     06C7  0841               	movf	??_printf+1,w
 13466     06C8  0085               	movwf	5
 13467     06C9  0800               	movf	0,w	;code access
 13468     06CA  00D7               	movwf	printf@c
 13469     06CB  0857               	movf	printf@c,w
 13470     06CC  1D03               	btfss	3,2
 13471     06CD  2ECF               	goto	u2491
 13472     06CE  2ED0               	goto	u2490
 13473     06CF                     u2491:
 13474     06CF  2C30               	goto	l2837
 13475     06D0                     u2490:
 13476     06D0                     l800:
 13477     06D0  0008               	return
 13478     06D1                     __end_of_printf:
 13479                           
 13480                           	psect	text35
 13481     13FE                     __ptext35:	
 13482 ;; *************** function _putch *****************
 13483 ;; Defined at:
 13484 ;;		line 29 in file "uart.c"
 13485 ;; Parameters:    Size  Location     Type
 13486 ;;  data            1    wreg     unsigned char 
 13487 ;; Auto vars:     Size  Location     Type
 13488 ;;  data            1    0[BANK0 ] unsigned char 
 13489 ;; Return value:  Size  Location     Type
 13490 ;;                  1    wreg      void 
 13491 ;; Registers used:
 13492 ;;		wreg
 13493 ;; Tracked objects:
 13494 ;;		On entry : 0/0
 13495 ;;		On exit  : 0/0
 13496 ;;		Unchanged: 0/0
 13497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13501 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13502 ;;Total ram usage:        1 bytes
 13503 ;; Hardware stack levels used: 1
 13504 ;; Hardware stack levels required when called: 2
 13505 ;; This function calls:
 13506 ;;		Nothing
 13507 ;; This function is called by:
 13508 ;;		_printf
 13509 ;; This function uses a non-reentrant model
 13510 ;;
 13511                           
 13512     13FE                     _putch:	
 13513                           ;psect for function _putch
 13514                           
 13515                           
 13516                           ;incstack = 0
 13517                           ; Regs used in _putch: [wreg]
 13518                           ;putch@data stored from wreg
 13519     13FE  0140               	movlb	0	; select bank0
 13520     13FF  00A0               	movwf	putch@data
 13521     1400                     l2749:
 13522     1400                     l446:	
 13523                           ;uart.c: 31: while(0 == PIR3bits.TX1IF);
 13524                           
 13525     1400  014E               	movlb	14	; select bank14
 13526     1401  1E0F               	btfss	15,4	;volatile
 13527     1402  2C04               	goto	u2041
 13528     1403  2C05               	goto	u2040
 13529     1404                     u2041:
 13530     1404  2C00               	goto	l446
 13531     1405                     u2040:
 13532     1405                     l2751:
 13533                           
 13534                           ;uart.c: 32: TX1REG = data;
 13535     1405  0140               	movlb	0	; select bank0
 13536     1406  0820               	movf	putch@data,w
 13537     1407  0142               	movlb	2	; select bank2
 13538     1408  009A               	movwf	26	;volatile
 13539     1409                     l449:
 13540     1409  0008               	return
 13541     140A                     __end_of_putch:
 13542                           
 13543                           	psect	text36
 13544     1433                     __ptext36:	
 13545 ;; *************** function _isdigit *****************
 13546 ;; Defined at:
 13547 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isdigit.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;  c               1    wreg     unsigned char 
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;  c               1    1[BANK0 ] unsigned char 
 13552 ;; Return value:  Size  Location     Type
 13553 ;;		None               void
 13554 ;; Registers used:
 13555 ;;		wreg, status,2, status,0
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13562 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13564 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13565 ;;Total ram usage:        2 bytes
 13566 ;; Hardware stack levels used: 1
 13567 ;; Hardware stack levels required when called: 2
 13568 ;; This function calls:
 13569 ;;		Nothing
 13570 ;; This function is called by:
 13571 ;;		_printf
 13572 ;;		_strtol
 13573 ;; This function uses a non-reentrant model
 13574 ;;
 13575                           
 13576     1433                     _isdigit:	
 13577                           ;psect for function _isdigit
 13578                           
 13579                           
 13580                           ;incstack = 0
 13581                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13582                           ;isdigit@c stored from wreg
 13583     1433  0140               	movlb	0	; select bank0
 13584     1434  00A1               	movwf	isdigit@c
 13585     1435                     l2753:
 13586     1435  01A0               	clrf	_isdigit$1719
 13587     1436                     l2755:
 13588     1436  303A               	movlw	58
 13589     1437  0221               	subwf	isdigit@c,w
 13590     1438  1803               	skipnc
 13591     1439  2C3B               	goto	u2051
 13592     143A  2C3C               	goto	u2050
 13593     143B                     u2051:
 13594     143B  2C44               	goto	l2761
 13595     143C                     u2050:
 13596     143C                     l2757:
 13597     143C  3030               	movlw	48
 13598     143D  0221               	subwf	isdigit@c,w
 13599     143E  1C03               	skipc
 13600     143F  2C41               	goto	u2061
 13601     1440  2C42               	goto	u2060
 13602     1441                     u2061:
 13603     1441  2C44               	goto	l2761
 13604     1442                     u2060:
 13605     1442                     l2759:
 13606     1442  01A0               	clrf	_isdigit$1719
 13607     1443  0AA0               	incf	_isdigit$1719,f
 13608     1444                     l2761:
 13609     1444  0C20               	rrf	_isdigit$1719,w
 13610     1445                     l1257:
 13611     1445  0008               	return
 13612     1446                     __end_of_isdigit:
 13613                           
 13614                           	psect	text37
 13615     14CB                     __ptext37:	
 13616 ;; *************** function ___wmul *****************
 13617 ;; Defined at:
 13618 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul16.c"
 13619 ;; Parameters:    Size  Location     Type
 13620 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13621 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13622 ;; Auto vars:     Size  Location     Type
 13623 ;;  product         2    4[BANK0 ] unsigned int 
 13624 ;; Return value:  Size  Location     Type
 13625 ;;                  2    0[BANK0 ] unsigned int 
 13626 ;; Registers used:
 13627 ;;		wreg, status,2, status,0
 13628 ;; Tracked objects:
 13629 ;;		On entry : 0/0
 13630 ;;		On exit  : 0/0
 13631 ;;		Unchanged: 0/0
 13632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13633 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13634 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13636 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13637 ;;Total ram usage:        6 bytes
 13638 ;; Hardware stack levels used: 1
 13639 ;; Hardware stack levels required when called: 2
 13640 ;; This function calls:
 13641 ;;		Nothing
 13642 ;; This function is called by:
 13643 ;;		_printf
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647     14CB                     ___wmul:	
 13648                           ;psect for function ___wmul
 13649                           
 13650     14CB                     l2765:	
 13651                           ;incstack = 0
 13652                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13653                           
 13654     14CB  0140               	movlb	0	; select bank0
 13655     14CC  01A4               	clrf	___wmul@product
 13656     14CD  01A5               	clrf	___wmul@product+1
 13657     14CE                     l2767:
 13658     14CE  1C20               	btfss	___wmul@multiplier,0
 13659     14CF  2CD1               	goto	u2071
 13660     14D0  2CD2               	goto	u2070
 13661     14D1                     u2071:
 13662     14D1  2CD6               	goto	l804
 13663     14D2                     u2070:
 13664     14D2                     l2769:
 13665     14D2  0822               	movf	___wmul@multiplicand,w
 13666     14D3  07A4               	addwf	___wmul@product,f
 13667     14D4  0823               	movf	___wmul@multiplicand+1,w
 13668     14D5  3DA5               	addwfc	___wmul@product+1,f
 13669     14D6                     l804:
 13670     14D6  3001               	movlw	1
 13671     14D7                     u2085:
 13672     14D7  35A2               	lslf	___wmul@multiplicand,f
 13673     14D8  0DA3               	rlf	___wmul@multiplicand+1,f
 13674     14D9  0B89               	decfsz	9,f
 13675     14DA  2CD7               	goto	u2085
 13676     14DB                     l2771:
 13677     14DB  3001               	movlw	1
 13678     14DC                     u2095:
 13679     14DC  36A1               	lsrf	___wmul@multiplier+1,f
 13680     14DD  0CA0               	rrf	___wmul@multiplier,f
 13681     14DE  0B89               	decfsz	9,f
 13682     14DF  2CDC               	goto	u2095
 13683     14E0                     l2773:
 13684     14E0  0820               	movf	___wmul@multiplier,w
 13685     14E1  0421               	iorwf	___wmul@multiplier+1,w
 13686     14E2  1D03               	btfss	3,2
 13687     14E3  2CE5               	goto	u2101
 13688     14E4  2CE6               	goto	u2100
 13689     14E5                     u2101:
 13690     14E5  2CCE               	goto	l2767
 13691     14E6                     u2100:
 13692     14E6                     l2775:
 13693     14E6  0825               	movf	___wmul@product+1,w
 13694     14E7  00A1               	movwf	?___wmul+1
 13695     14E8  0824               	movf	___wmul@product,w
 13696     14E9  00A0               	movwf	?___wmul
 13697     14EA                     l806:
 13698     14EA  0008               	return
 13699     14EB                     __end_of___wmul:
 13700                           
 13701                           	psect	text38
 13702     1655                     __ptext38:	
 13703 ;; *************** function ___llmod *****************
 13704 ;; Defined at:
 13705 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/llmod.c"
 13706 ;; Parameters:    Size  Location     Type
 13707 ;;  divisor         4   14[BANK0 ] unsigned long 
 13708 ;;  dividend        4   18[BANK0 ] unsigned long 
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;  counter         1   23[BANK0 ] unsigned char 
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  4   14[BANK0 ] unsigned long 
 13713 ;; Registers used:
 13714 ;;		wreg, status,2, status,0
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13720 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13724 ;;Total ram usage:       10 bytes
 13725 ;; Hardware stack levels used: 1
 13726 ;; Hardware stack levels required when called: 2
 13727 ;; This function calls:
 13728 ;;		Nothing
 13729 ;; This function is called by:
 13730 ;;		_printf
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734     1655                     ___llmod:	
 13735                           ;psect for function ___llmod
 13736                           
 13737     1655                     l2803:	
 13738                           ;incstack = 0
 13739                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 13740                           
 13741     1655  0140               	movlb	0	; select bank0
 13742     1656  0831               	movf	___llmod@divisor+3,w
 13743     1657  0430               	iorwf	___llmod@divisor+2,w
 13744     1658  042F               	iorwf	___llmod@divisor+1,w
 13745     1659  042E               	iorwf	___llmod@divisor,w
 13746     165A  1903               	skipnz
 13747     165B  2E5D               	goto	u2181
 13748     165C  2E5E               	goto	u2180
 13749     165D                     u2181:
 13750     165D  2E97               	goto	l2819
 13751     165E                     u2180:
 13752     165E                     l2805:
 13753     165E  01B7               	clrf	___llmod@counter
 13754     165F  0AB7               	incf	___llmod@counter,f
 13755     1660  2E6C               	goto	l2809
 13756     1661                     l2807:
 13757     1661  3001               	movlw	1
 13758     1662                     u2195:
 13759     1662  35AE               	lslf	___llmod@divisor,f
 13760     1663  0DAF               	rlf	___llmod@divisor+1,f
 13761     1664  0DB0               	rlf	___llmod@divisor+2,f
 13762     1665  0DB1               	rlf	___llmod@divisor+3,f
 13763     1666  0B89               	decfsz	9,f
 13764     1667  2E62               	goto	u2195
 13765     1668  3001               	movlw	1
 13766     1669  00B6               	movwf	??___llmod
 13767     166A  0836               	movf	??___llmod,w
 13768     166B  07B7               	addwf	___llmod@counter,f
 13769     166C                     l2809:
 13770     166C  1FB1               	btfss	___llmod@divisor+3,7
 13771     166D  2E6F               	goto	u2201
 13772     166E  2E70               	goto	u2200
 13773     166F                     u2201:
 13774     166F  2E61               	goto	l2807
 13775     1670                     u2200:
 13776     1670                     l2811:
 13777     1670  0831               	movf	___llmod@divisor+3,w
 13778     1671  0235               	subwf	___llmod@dividend+3,w
 13779     1672  1D03               	skipz
 13780     1673  2E7E               	goto	u2215
 13781     1674  0830               	movf	___llmod@divisor+2,w
 13782     1675  0234               	subwf	___llmod@dividend+2,w
 13783     1676  1D03               	skipz
 13784     1677  2E7E               	goto	u2215
 13785     1678  082F               	movf	___llmod@divisor+1,w
 13786     1679  0233               	subwf	___llmod@dividend+1,w
 13787     167A  1D03               	skipz
 13788     167B  2E7E               	goto	u2215
 13789     167C  082E               	movf	___llmod@divisor,w
 13790     167D  0232               	subwf	___llmod@dividend,w
 13791     167E                     u2215:
 13792     167E  1C03               	skipc
 13793     167F  2E81               	goto	u2211
 13794     1680  2E82               	goto	u2210
 13795     1681                     u2211:
 13796     1681  2E8A               	goto	l2815
 13797     1682                     u2210:
 13798     1682                     l2813:
 13799     1682  082E               	movf	___llmod@divisor,w
 13800     1683  02B2               	subwf	___llmod@dividend,f
 13801     1684  082F               	movf	___llmod@divisor+1,w
 13802     1685  3BB3               	subwfb	___llmod@dividend+1,f
 13803     1686  0830               	movf	___llmod@divisor+2,w
 13804     1687  3BB4               	subwfb	___llmod@dividend+2,f
 13805     1688  0831               	movf	___llmod@divisor+3,w
 13806     1689  3BB5               	subwfb	___llmod@dividend+3,f
 13807     168A                     l2815:
 13808     168A  3001               	movlw	1
 13809     168B                     u2225:
 13810     168B  36B1               	lsrf	___llmod@divisor+3,f
 13811     168C  0CB0               	rrf	___llmod@divisor+2,f
 13812     168D  0CAF               	rrf	___llmod@divisor+1,f
 13813     168E  0CAE               	rrf	___llmod@divisor,f
 13814     168F  0B89               	decfsz	9,f
 13815     1690  2E8B               	goto	u2225
 13816     1691                     l2817:
 13817     1691  3001               	movlw	1
 13818     1692  02B7               	subwf	___llmod@counter,f
 13819     1693  1D03               	btfss	3,2
 13820     1694  2E96               	goto	u2231
 13821     1695  2E97               	goto	u2230
 13822     1696                     u2231:
 13823     1696  2E70               	goto	l2811
 13824     1697                     u2230:
 13825     1697                     l2819:
 13826     1697  0835               	movf	___llmod@dividend+3,w
 13827     1698  00B1               	movwf	?___llmod+3
 13828     1699  0834               	movf	___llmod@dividend+2,w
 13829     169A  00B0               	movwf	?___llmod+2
 13830     169B  0833               	movf	___llmod@dividend+1,w
 13831     169C  00AF               	movwf	?___llmod+1
 13832     169D  0832               	movf	___llmod@dividend,w
 13833     169E  00AE               	movwf	?___llmod
 13834     169F                     l1026:
 13835     169F  0008               	return
 13836     16A0                     __end_of___llmod:
 13837                           
 13838                           	psect	text39
 13839     1748                     __ptext39:	
 13840 ;; *************** function ___lldiv *****************
 13841 ;; Defined at:
 13842 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/__lldiv.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;  divisor         4    0[BANK0 ] unsigned long 
 13845 ;;  dividend        4    4[BANK0 ] unsigned long 
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;  quotient        4    9[BANK0 ] unsigned long 
 13848 ;;  counter         1   13[BANK0 ] unsigned char 
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  4    0[BANK0 ] unsigned long 
 13851 ;; Registers used:
 13852 ;;		wreg, status,2, status,0
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13858 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;Total ram usage:       14 bytes
 13863 ;; Hardware stack levels used: 1
 13864 ;; Hardware stack levels required when called: 2
 13865 ;; This function calls:
 13866 ;;		Nothing
 13867 ;; This function is called by:
 13868 ;;		_printf
 13869 ;; This function uses a non-reentrant model
 13870 ;;
 13871                           
 13872     1748                     ___lldiv:	
 13873                           ;psect for function ___lldiv
 13874                           
 13875     1748                     l2779:	
 13876                           ;incstack = 0
 13877                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13878                           
 13879     1748  3000               	movlw	0
 13880     1749  0140               	movlb	0	; select bank0
 13881     174A  00AC               	movwf	___lldiv@quotient+3
 13882     174B  3000               	movlw	0
 13883     174C  00AB               	movwf	___lldiv@quotient+2
 13884     174D  3000               	movlw	0
 13885     174E  00AA               	movwf	___lldiv@quotient+1
 13886     174F  3000               	movlw	0
 13887     1750  00A9               	movwf	___lldiv@quotient
 13888     1751  0823               	movf	___lldiv@divisor+3,w
 13889     1752  0422               	iorwf	___lldiv@divisor+2,w
 13890     1753  0421               	iorwf	___lldiv@divisor+1,w
 13891     1754  0420               	iorwf	___lldiv@divisor,w
 13892     1755  1903               	skipnz
 13893     1756  2F58               	goto	u2111
 13894     1757  2F59               	goto	u2110
 13895     1758                     u2111:
 13896     1758  2F9A               	goto	l2799
 13897     1759                     u2110:
 13898     1759                     l2781:
 13899     1759  01AD               	clrf	___lldiv@counter
 13900     175A  0AAD               	incf	___lldiv@counter,f
 13901     175B  2F67               	goto	l2785
 13902     175C                     l2783:
 13903     175C  3001               	movlw	1
 13904     175D                     u2125:
 13905     175D  35A0               	lslf	___lldiv@divisor,f
 13906     175E  0DA1               	rlf	___lldiv@divisor+1,f
 13907     175F  0DA2               	rlf	___lldiv@divisor+2,f
 13908     1760  0DA3               	rlf	___lldiv@divisor+3,f
 13909     1761  0B89               	decfsz	9,f
 13910     1762  2F5D               	goto	u2125
 13911     1763  3001               	movlw	1
 13912     1764  00A8               	movwf	??___lldiv
 13913     1765  0828               	movf	??___lldiv,w
 13914     1766  07AD               	addwf	___lldiv@counter,f
 13915     1767                     l2785:
 13916     1767  1FA3               	btfss	___lldiv@divisor+3,7
 13917     1768  2F6A               	goto	u2131
 13918     1769  2F6B               	goto	u2130
 13919     176A                     u2131:
 13920     176A  2F5C               	goto	l2783
 13921     176B                     u2130:
 13922     176B                     l2787:
 13923     176B  3001               	movlw	1
 13924     176C                     u2145:
 13925     176C  35A9               	lslf	___lldiv@quotient,f
 13926     176D  0DAA               	rlf	___lldiv@quotient+1,f
 13927     176E  0DAB               	rlf	___lldiv@quotient+2,f
 13928     176F  0DAC               	rlf	___lldiv@quotient+3,f
 13929     1770  0B89               	decfsz	9,f
 13930     1771  2F6C               	goto	u2145
 13931     1772                     l2789:
 13932     1772  0823               	movf	___lldiv@divisor+3,w
 13933     1773  0227               	subwf	___lldiv@dividend+3,w
 13934     1774  1D03               	skipz
 13935     1775  2F80               	goto	u2155
 13936     1776  0822               	movf	___lldiv@divisor+2,w
 13937     1777  0226               	subwf	___lldiv@dividend+2,w
 13938     1778  1D03               	skipz
 13939     1779  2F80               	goto	u2155
 13940     177A  0821               	movf	___lldiv@divisor+1,w
 13941     177B  0225               	subwf	___lldiv@dividend+1,w
 13942     177C  1D03               	skipz
 13943     177D  2F80               	goto	u2155
 13944     177E  0820               	movf	___lldiv@divisor,w
 13945     177F  0224               	subwf	___lldiv@dividend,w
 13946     1780                     u2155:
 13947     1780  1C03               	skipc
 13948     1781  2F83               	goto	u2151
 13949     1782  2F84               	goto	u2150
 13950     1783                     u2151:
 13951     1783  2F8D               	goto	l2795
 13952     1784                     u2150:
 13953     1784                     l2791:
 13954     1784  0820               	movf	___lldiv@divisor,w
 13955     1785  02A4               	subwf	___lldiv@dividend,f
 13956     1786  0821               	movf	___lldiv@divisor+1,w
 13957     1787  3BA5               	subwfb	___lldiv@dividend+1,f
 13958     1788  0822               	movf	___lldiv@divisor+2,w
 13959     1789  3BA6               	subwfb	___lldiv@dividend+2,f
 13960     178A  0823               	movf	___lldiv@divisor+3,w
 13961     178B  3BA7               	subwfb	___lldiv@dividend+3,f
 13962     178C                     l2793:
 13963     178C  1429               	bsf	___lldiv@quotient,0
 13964     178D                     l2795:
 13965     178D  3001               	movlw	1
 13966     178E                     u2165:
 13967     178E  36A3               	lsrf	___lldiv@divisor+3,f
 13968     178F  0CA2               	rrf	___lldiv@divisor+2,f
 13969     1790  0CA1               	rrf	___lldiv@divisor+1,f
 13970     1791  0CA0               	rrf	___lldiv@divisor,f
 13971     1792  0B89               	decfsz	9,f
 13972     1793  2F8E               	goto	u2165
 13973     1794                     l2797:
 13974     1794  3001               	movlw	1
 13975     1795  02AD               	subwf	___lldiv@counter,f
 13976     1796  1D03               	btfss	3,2
 13977     1797  2F99               	goto	u2171
 13978     1798  2F9A               	goto	u2170
 13979     1799                     u2171:
 13980     1799  2F6B               	goto	l2787
 13981     179A                     u2170:
 13982     179A                     l2799:
 13983     179A  082C               	movf	___lldiv@quotient+3,w
 13984     179B  00A3               	movwf	?___lldiv+3
 13985     179C  082B               	movf	___lldiv@quotient+2,w
 13986     179D  00A2               	movwf	?___lldiv+2
 13987     179E  082A               	movf	___lldiv@quotient+1,w
 13988     179F  00A1               	movwf	?___lldiv+1
 13989     17A0  0829               	movf	___lldiv@quotient,w
 13990     17A1  00A0               	movwf	?___lldiv
 13991     17A2                     l840:
 13992     17A2  0008               	return
 13993     17A3                     __end_of___lldiv:
 13994                           
 13995                           	psect	text40
 13996     160A                     __ptext40:	
 13997 ;; *************** function _delay_state *****************
 13998 ;; Defined at:
 13999 ;;		line 86 in file "monitor_sync.c"
 14000 ;; Parameters:    Size  Location     Type
 14001 ;;  state           1    wreg     PTR enum E10399
 14002 ;;		 -> main@state(1), 
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;  state           1   24[BANK0 ] PTR enum E10399
 14005 ;;		 -> main@state(1), 
 14006 ;; Return value:  Size  Location     Type
 14007 ;;                  1    wreg      void 
 14008 ;; Registers used:
 14009 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14010 ;; Tracked objects:
 14011 ;;		On entry : 0/0
 14012 ;;		On exit  : 0/0
 14013 ;;		Unchanged: 0/0
 14014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14016 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14018 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14019 ;;Total ram usage:        1 bytes
 14020 ;; Hardware stack levels used: 1
 14021 ;; Hardware stack levels required when called: 3
 14022 ;; This function calls:
 14023 ;;		_calculate_diff
 14024 ;;		_get_ticks
 14025 ;; This function is called by:
 14026 ;;		_main
 14027 ;; This function uses a non-reentrant model
 14028 ;;
 14029                           
 14030     160A                     _delay_state:	
 14031                           ;psect for function _delay_state
 14032                           
 14033                           
 14034                           ;incstack = 0
 14035                           ; Regs used in _delay_state: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14036                           ;delay_state@state stored from wreg
 14037     160A  0140               	movlb	0	; select bank0
 14038     160B  00B8               	movwf	delay_state@state
 14039     160C                     l3529:
 14040                           
 14041                           ;monitor_sync.c: 87: static uint32_t prev_ticks_delay = 0;;monitor_sync.c: 88: if(calcul
      +                          ate_diff(get_ticks(), prev_ticks_delay) >= 3000){
 14042     160C  3193  23D5  3196   	fcall	_get_ticks
 14043     160F  0140               	movlb	0	; select bank0
 14044     1610  0823               	movf	?_get_ticks+3,w
 14045     1611  00A7               	movwf	calculate_diff@now+3
 14046     1612  0822               	movf	?_get_ticks+2,w
 14047     1613  00A6               	movwf	calculate_diff@now+2
 14048     1614  0821               	movf	?_get_ticks+1,w
 14049     1615  00A5               	movwf	calculate_diff@now+1
 14050     1616  0820               	movf	?_get_ticks,w
 14051     1617  00A4               	movwf	calculate_diff@now
 14052     1618  0142               	movlb	2	; select bank2
 14053     1619  085A               	movf	(delay_state@prev_ticks_delay+3)^(0+256),w
 14054     161A  0140               	movlb	0	; select bank0
 14055     161B  00AB               	movwf	calculate_diff@prev_ticks+3
 14056     161C  0142               	movlb	2	; select bank2
 14057     161D  0859               	movf	(delay_state@prev_ticks_delay+2)^(0+256),w
 14058     161E  0140               	movlb	0	; select bank0
 14059     161F  00AA               	movwf	calculate_diff@prev_ticks+2
 14060     1620  0142               	movlb	2	; select bank2
 14061     1621  0858               	movf	(delay_state@prev_ticks_delay+1)^(0+256),w
 14062     1622  0140               	movlb	0	; select bank0
 14063     1623  00A9               	movwf	calculate_diff@prev_ticks+1
 14064     1624  0142               	movlb	2	; select bank2
 14065     1625  0857               	movf	delay_state@prev_ticks_delay^(0+256),w
 14066     1626  0140               	movlb	0	; select bank0
 14067     1627  00A8               	movwf	calculate_diff@prev_ticks
 14068     1628  3196  26F3  3196   	fcall	_calculate_diff
 14069     162B  0140               	movlb	0	; select bank0
 14070     162C  0827               	movf	?_calculate_diff+3,w
 14071     162D  1D03               	btfss	3,2
 14072     162E  2E3A               	goto	u3360
 14073     162F  0826               	movf	?_calculate_diff+2,w
 14074     1630  1D03               	btfss	3,2
 14075     1631  2E3A               	goto	u3360
 14076     1632  30B8               	movlw	184
 14077     1633  0224               	subwf	?_calculate_diff,w
 14078     1634  300B               	movlw	11
 14079     1635  3B25               	subwfb	?_calculate_diff+1,w
 14080     1636  1C03               	btfss	3,0
 14081     1637  2E39               	goto	u3361
 14082     1638  2E3A               	goto	u3360
 14083     1639                     u3361:
 14084     1639  2E54               	goto	l527
 14085     163A                     u3360:
 14086     163A                     l3531:
 14087                           
 14088                           ;monitor_sync.c: 89: prev_ticks_delay = get_ticks();
 14089     163A  3193  23D5  3196   	fcall	_get_ticks
 14090     163D  0140               	movlb	0	; select bank0
 14091     163E  0823               	movf	?_get_ticks+3,w
 14092     163F  0142               	movlb	2	; select bank2
 14093     1640  00DA               	movwf	(delay_state@prev_ticks_delay+3)^(0+256)
 14094     1641  0140               	movlb	0	; select bank0
 14095     1642  0822               	movf	?_get_ticks+2,w
 14096     1643  0142               	movlb	2	; select bank2
 14097     1644  00D9               	movwf	(delay_state@prev_ticks_delay+2)^(0+256)
 14098     1645  0140               	movlb	0	; select bank0
 14099     1646  0821               	movf	?_get_ticks+1,w
 14100     1647  0142               	movlb	2	; select bank2
 14101     1648  00D8               	movwf	(delay_state@prev_ticks_delay+1)^(0+256)
 14102     1649  0140               	movlb	0	; select bank0
 14103     164A  0820               	movf	?_get_ticks,w
 14104     164B  0142               	movlb	2	; select bank2
 14105     164C  00D7               	movwf	delay_state@prev_ticks_delay^(0+256)
 14106     164D                     l3533:
 14107                           
 14108                           ;monitor_sync.c: 90: *state = STATE_MEASURE;
 14109     164D  0140               	movlb	0	; select bank0
 14110     164E  0838               	movf	delay_state@state,w
 14111     164F  0086               	movwf	6
 14112     1650  3001               	movlw	1	; select bank2/3
 14113     1651  0087               	movwf	7
 14114     1652  3002               	movlw	2
 14115     1653  0081               	movwf	1
 14116     1654                     l527:
 14117     1654  0008               	return
 14118     1655                     __end_of_delay_state:
 14119                           
 14120                           	psect	text41
 14121     13D5                     __ptext41:	
 14122 ;; *************** function _get_ticks *****************
 14123 ;; Defined at:
 14124 ;;		line 8 in file "myisr.c"
 14125 ;; Parameters:    Size  Location     Type
 14126 ;;		None
 14127 ;; Auto vars:     Size  Location     Type
 14128 ;;		None
 14129 ;; Return value:  Size  Location     Type
 14130 ;;                  4    0[BANK0 ] unsigned long 
 14131 ;; Registers used:
 14132 ;;		wreg
 14133 ;; Tracked objects:
 14134 ;;		On entry : 0/0
 14135 ;;		On exit  : 0/0
 14136 ;;		Unchanged: 0/0
 14137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;Total ram usage:        4 bytes
 14143 ;; Hardware stack levels used: 1
 14144 ;; Hardware stack levels required when called: 2
 14145 ;; This function calls:
 14146 ;;		Nothing
 14147 ;; This function is called by:
 14148 ;;		_main
 14149 ;;		_delay_state
 14150 ;;		_is_it_time_up
 14151 ;; This function uses a non-reentrant model
 14152 ;;
 14153                           
 14154     13D5                     _get_ticks:	
 14155                           ;psect for function _get_ticks
 14156                           
 14157     13D5                     l3111:	
 14158                           ;incstack = 0
 14159                           ; Regs used in _get_ticks: [wreg]
 14160                           
 14161                           
 14162                           ;myisr.c: 9: return ticks;
 14163     13D5  087B               	movf	_ticks+3,w	;volatile
 14164     13D6  0140               	movlb	0	; select bank0
 14165     13D7  00A3               	movwf	?_get_ticks+3
 14166     13D8  087A               	movf	_ticks+2,w	;volatile
 14167     13D9  00A2               	movwf	?_get_ticks+2
 14168     13DA  0879               	movf	_ticks+1,w	;volatile
 14169     13DB  00A1               	movwf	?_get_ticks+1
 14170     13DC  0878               	movf	_ticks,w	;volatile
 14171     13DD  00A0               	movwf	?_get_ticks
 14172     13DE                     l306:
 14173     13DE  0008               	return
 14174     13DF                     __end_of_get_ticks:
 14175                           
 14176                           	psect	text42
 14177     16F3                     __ptext42:	
 14178 ;; *************** function _calculate_diff *****************
 14179 ;; Defined at:
 14180 ;;		line 19 in file "myisr.c"
 14181 ;; Parameters:    Size  Location     Type
 14182 ;;  now             4    4[BANK0 ] unsigned long 
 14183 ;;  prev_ticks      4    8[BANK0 ] unsigned long 
 14184 ;; Auto vars:     Size  Location     Type
 14185 ;;  diff            4   20[BANK0 ] unsigned long 
 14186 ;; Return value:  Size  Location     Type
 14187 ;;                  4    4[BANK0 ] unsigned long 
 14188 ;; Registers used:
 14189 ;;		wreg, status,2, status,0
 14190 ;; Tracked objects:
 14191 ;;		On entry : 0/0
 14192 ;;		On exit  : 0/0
 14193 ;;		Unchanged: 0/0
 14194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14195 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14197 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14198 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14199 ;;Total ram usage:       20 bytes
 14200 ;; Hardware stack levels used: 1
 14201 ;; Hardware stack levels required when called: 2
 14202 ;; This function calls:
 14203 ;;		Nothing
 14204 ;; This function is called by:
 14205 ;;		_main
 14206 ;;		_delay_state
 14207 ;;		_is_time_ups
 14208 ;; This function uses a non-reentrant model
 14209 ;;
 14210                           
 14211     16F3                     _calculate_diff:	
 14212                           ;psect for function _calculate_diff
 14213                           
 14214     16F3                     l3093:	
 14215                           ;incstack = 0
 14216                           ; Regs used in _calculate_diff: [wreg+status,2+status,0]
 14217                           
 14218                           
 14219                           ;myisr.c: 20: uint32_t diff;;myisr.c: 21: if (now >= prev_ticks) {
 14220     16F3  0140               	movlb	0	; select bank0
 14221     16F4  082B               	movf	calculate_diff@prev_ticks+3,w
 14222     16F5  0227               	subwf	calculate_diff@now+3,w
 14223     16F6  1D03               	skipz
 14224     16F7  2F02               	goto	u2655
 14225     16F8  082A               	movf	calculate_diff@prev_ticks+2,w
 14226     16F9  0226               	subwf	calculate_diff@now+2,w
 14227     16FA  1D03               	skipz
 14228     16FB  2F02               	goto	u2655
 14229     16FC  0829               	movf	calculate_diff@prev_ticks+1,w
 14230     16FD  0225               	subwf	calculate_diff@now+1,w
 14231     16FE  1D03               	skipz
 14232     16FF  2F02               	goto	u2655
 14233     1700  0828               	movf	calculate_diff@prev_ticks,w
 14234     1701  0224               	subwf	calculate_diff@now,w
 14235     1702                     u2655:
 14236     1702  1C03               	skipc
 14237     1703  2F05               	goto	u2651
 14238     1704  2F06               	goto	u2650
 14239     1705                     u2651:
 14240     1705  2F1B               	goto	l3097
 14241     1706                     u2650:
 14242     1706                     l3095:
 14243                           
 14244                           ;myisr.c: 22: diff = now - prev_ticks;
 14245     1706  0828               	movf	calculate_diff@prev_ticks,w
 14246     1707  0224               	subwf	calculate_diff@now,w
 14247     1708  00AC               	movwf	??_calculate_diff
 14248     1709  0829               	movf	calculate_diff@prev_ticks+1,w
 14249     170A  3B25               	subwfb	calculate_diff@now+1,w
 14250     170B  00AD               	movwf	??_calculate_diff+1
 14251     170C  082A               	movf	calculate_diff@prev_ticks+2,w
 14252     170D  3B26               	subwfb	calculate_diff@now+2,w
 14253     170E  00AE               	movwf	??_calculate_diff+2
 14254     170F  082B               	movf	calculate_diff@prev_ticks+3,w
 14255     1710  3B27               	subwfb	calculate_diff@now+3,w
 14256     1711  00AF               	movwf	??_calculate_diff+3
 14257     1712  082F               	movf	??_calculate_diff+3,w
 14258     1713  00B7               	movwf	calculate_diff@diff+3
 14259     1714  082E               	movf	??_calculate_diff+2,w
 14260     1715  00B6               	movwf	calculate_diff@diff+2
 14261     1716  082D               	movf	??_calculate_diff+1,w
 14262     1717  00B5               	movwf	calculate_diff@diff+1
 14263     1718  082C               	movf	??_calculate_diff,w
 14264     1719  00B4               	movwf	calculate_diff@diff
 14265                           
 14266                           ;myisr.c: 23: } else {
 14267     171A  2F3F               	goto	l3099
 14268     171B                     l3097:
 14269                           
 14270                           ;myisr.c: 25: diff = ((4294967295UL) - prev_ticks) + now + 1;
 14271     171B  0824               	movf	calculate_diff@now,w
 14272     171C  00AC               	movwf	??_calculate_diff
 14273     171D  0825               	movf	calculate_diff@now+1,w
 14274     171E  00AD               	movwf	??_calculate_diff+1
 14275     171F  0826               	movf	calculate_diff@now+2,w
 14276     1720  00AE               	movwf	??_calculate_diff+2
 14277     1721  0827               	movf	calculate_diff@now+3,w
 14278     1722  00AF               	movwf	??_calculate_diff+3
 14279     1723  0928               	comf	calculate_diff@prev_ticks,w
 14280     1724  00B0               	movwf	??_calculate_diff+4
 14281     1725  0929               	comf	calculate_diff@prev_ticks+1,w
 14282     1726  00B1               	movwf	??_calculate_diff+5
 14283     1727  092A               	comf	calculate_diff@prev_ticks+2,w
 14284     1728  00B2               	movwf	??_calculate_diff+6
 14285     1729  092B               	comf	calculate_diff@prev_ticks+3,w
 14286     172A  00B3               	movwf	??_calculate_diff+7
 14287     172B  0830               	movf	??_calculate_diff+4,w
 14288     172C  07AC               	addwf	??_calculate_diff,f
 14289     172D  0831               	movf	??_calculate_diff+5,w
 14290     172E  3DAD               	addwfc	??_calculate_diff+1,f
 14291     172F  0832               	movf	??_calculate_diff+6,w
 14292     1730  3DAE               	addwfc	??_calculate_diff+2,f
 14293     1731  0833               	movf	??_calculate_diff+7,w
 14294     1732  3DAF               	addwfc	??_calculate_diff+3,f
 14295     1733  3001               	movlw	1
 14296     1734  072C               	addwf	??_calculate_diff,w
 14297     1735  00B4               	movwf	calculate_diff@diff
 14298     1736  3000               	movlw	0
 14299     1737  3D2D               	addwfc	??_calculate_diff+1,w
 14300     1738  00B5               	movwf	calculate_diff@diff+1
 14301     1739  3000               	movlw	0
 14302     173A  3D2E               	addwfc	??_calculate_diff+2,w
 14303     173B  00B6               	movwf	calculate_diff@diff+2
 14304     173C  3000               	movlw	0
 14305     173D  3D2F               	addwfc	??_calculate_diff+3,w
 14306     173E  00B7               	movwf	calculate_diff@diff+3
 14307     173F                     l3099:
 14308                           
 14309                           ;myisr.c: 26: };myisr.c: 27: return diff;
 14310     173F  0837               	movf	calculate_diff@diff+3,w
 14311     1740  00A7               	movwf	?_calculate_diff+3
 14312     1741  0836               	movf	calculate_diff@diff+2,w
 14313     1742  00A6               	movwf	?_calculate_diff+2
 14314     1743  0835               	movf	calculate_diff@diff+1,w
 14315     1744  00A5               	movwf	?_calculate_diff+1
 14316     1745  0834               	movf	calculate_diff@diff,w
 14317     1746  00A4               	movwf	?_calculate_diff
 14318     1747                     l314:
 14319     1747  0008               	return
 14320     1748                     __end_of_calculate_diff:
 14321                           
 14322                           	psect	text43
 14323     08B6                     __ptext43:	
 14324 ;; *************** function ___fltol *****************
 14325 ;; Defined at:
 14326 ;;		line 43 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fltol.c"
 14327 ;; Parameters:    Size  Location     Type
 14328 ;;  f1              4   35[BANK0 ] unsigned long 
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;  exp1            1   44[BANK0 ] unsigned char 
 14331 ;;  sign1           1   43[BANK0 ] unsigned char 
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  4   35[BANK0 ] long 
 14334 ;; Registers used:
 14335 ;;		wreg, status,2, status,0
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14341 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14343 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;Total ram usage:       10 bytes
 14346 ;; Hardware stack levels used: 1
 14347 ;; Hardware stack levels required when called: 2
 14348 ;; This function calls:
 14349 ;;		Nothing
 14350 ;; This function is called by:
 14351 ;;		_main
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355     08B6                     ___fltol:	
 14356                           ;psect for function ___fltol
 14357                           
 14358     08B6                     l3641:	
 14359                           ;incstack = 0
 14360                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14361                           
 14362     08B6  1003               	clrc
 14363     08B7  0140               	movlb	0	; select bank0
 14364     08B8  0D45               	rlf	___fltol@f1+2,w
 14365     08B9  0D46               	rlf	___fltol@f1+3,w
 14366     08BA  00CC               	movwf	___fltol@exp1
 14367     08BB  084C               	movf	___fltol@exp1,w
 14368     08BC  1D03               	btfss	3,2
 14369     08BD  28BF               	goto	u3491
 14370     08BE  28C0               	goto	u3490
 14371     08BF                     u3491:
 14372     08BF  28C9               	goto	l3647
 14373     08C0                     u3490:
 14374     08C0                     l3643:
 14375     08C0  3000               	movlw	0
 14376     08C1  00C6               	movwf	?___fltol+3
 14377     08C2  3000               	movlw	0
 14378     08C3  00C5               	movwf	?___fltol+2
 14379     08C4  3000               	movlw	0
 14380     08C5  00C4               	movwf	?___fltol+1
 14381     08C6  3000               	movlw	0
 14382     08C7  00C3               	movwf	?___fltol
 14383     08C8  2926               	goto	l990
 14384     08C9                     l3647:
 14385     08C9  0843               	movf	___fltol@f1,w
 14386     08CA  00C7               	movwf	??___fltol
 14387     08CB  0844               	movf	___fltol@f1+1,w
 14388     08CC  00C8               	movwf	??___fltol+1
 14389     08CD  0845               	movf	___fltol@f1+2,w
 14390     08CE  00C9               	movwf	??___fltol+2
 14391     08CF  0846               	movf	___fltol@f1+3,w
 14392     08D0  00CA               	movwf	??___fltol+3
 14393     08D1  301F               	movlw	31
 14394     08D2                     u3505:
 14395     08D2  36CA               	lsrf	??___fltol+3,f
 14396     08D3  0CC9               	rrf	??___fltol+2,f
 14397     08D4  0CC8               	rrf	??___fltol+1,f
 14398     08D5  0CC7               	rrf	??___fltol,f
 14399     08D6                     u3500:
 14400     08D6  0B89               	decfsz	9,f
 14401     08D7  28D2               	goto	u3505
 14402     08D8  0847               	movf	??___fltol,w
 14403     08D9  00CB               	movwf	___fltol@sign1
 14404     08DA                     l3649:
 14405     08DA  17C5               	bsf	___fltol@f1+2,7
 14406     08DB                     l3651:
 14407     08DB  30FF               	movlw	255
 14408     08DC  05C3               	andwf	___fltol@f1,f
 14409     08DD  30FF               	movlw	255
 14410     08DE  05C4               	andwf	___fltol@f1+1,f
 14411     08DF  30FF               	movlw	255
 14412     08E0  05C5               	andwf	___fltol@f1+2,f
 14413     08E1  3000               	movlw	0
 14414     08E2  05C6               	andwf	___fltol@f1+3,f
 14415     08E3                     l3653:
 14416     08E3  3096               	movlw	150
 14417     08E4  02CC               	subwf	___fltol@exp1,f
 14418     08E5                     l3655:
 14419     08E5  1FCC               	btfss	___fltol@exp1,7
 14420     08E6  28E8               	goto	u3511
 14421     08E7  28E9               	goto	u3510
 14422     08E8                     u3511:
 14423     08E8  2901               	goto	l3665
 14424     08E9                     u3510:
 14425     08E9                     l3657:
 14426     08E9  084C               	movf	___fltol@exp1,w
 14427     08EA  3A80               	xorlw	128
 14428     08EB  3E97               	addlw	151
 14429     08EC  1803               	skipnc
 14430     08ED  28EF               	goto	u3521
 14431     08EE  28F0               	goto	u3520
 14432     08EF                     u3521:
 14433     08EF  28F1               	goto	l3663
 14434     08F0                     u3520:
 14435     08F0  28C0               	goto	l3643
 14436     08F1                     l3663:
 14437     08F1  3001               	movlw	1
 14438     08F2                     u3535:
 14439     08F2  36C6               	lsrf	___fltol@f1+3,f
 14440     08F3  0CC5               	rrf	___fltol@f1+2,f
 14441     08F4  0CC4               	rrf	___fltol@f1+1,f
 14442     08F5  0CC3               	rrf	___fltol@f1,f
 14443     08F6  0B89               	decfsz	9,f
 14444     08F7  28F2               	goto	u3535
 14445     08F8  3001               	movlw	1
 14446     08F9  00C7               	movwf	??___fltol
 14447     08FA  0847               	movf	??___fltol,w
 14448     08FB  07CC               	addwf	___fltol@exp1,f
 14449     08FC  1D03               	btfss	3,2
 14450     08FD  28FF               	goto	u3541
 14451     08FE  2900               	goto	u3540
 14452     08FF                     u3541:
 14453     08FF  28F1               	goto	l3663
 14454     0900                     u3540:
 14455     0900  2916               	goto	l3673
 14456     0901                     l3665:
 14457     0901  3020               	movlw	32
 14458     0902  024C               	subwf	___fltol@exp1,w
 14459     0903  1C03               	skipc
 14460     0904  2906               	goto	u3551
 14461     0905  2907               	goto	u3550
 14462     0906                     u3551:
 14463     0906  2911               	goto	l997
 14464     0907                     u3550:
 14465     0907  28C0               	goto	l3643
 14466     0908                     l3671:
 14467     0908  3001               	movlw	1
 14468     0909                     u3565:
 14469     0909  35C3               	lslf	___fltol@f1,f
 14470     090A  0DC4               	rlf	___fltol@f1+1,f
 14471     090B  0DC5               	rlf	___fltol@f1+2,f
 14472     090C  0DC6               	rlf	___fltol@f1+3,f
 14473     090D  0B89               	decfsz	9,f
 14474     090E  2909               	goto	u3565
 14475     090F  3001               	movlw	1
 14476     0910  02CC               	subwf	___fltol@exp1,f
 14477     0911                     l997:
 14478     0911  084C               	movf	___fltol@exp1,w
 14479     0912  1D03               	btfss	3,2
 14480     0913  2915               	goto	u3571
 14481     0914  2916               	goto	u3570
 14482     0915                     u3571:
 14483     0915  2908               	goto	l3671
 14484     0916                     u3570:
 14485     0916                     l3673:
 14486     0916  084B               	movf	___fltol@sign1,w
 14487     0917  1903               	btfsc	3,2
 14488     0918  291A               	goto	u3581
 14489     0919  291B               	goto	u3580
 14490     091A                     u3581:
 14491     091A  2926               	goto	l1000
 14492     091B                     u3580:
 14493     091B                     l3675:
 14494     091B  09C3               	comf	___fltol@f1,f
 14495     091C  09C4               	comf	___fltol@f1+1,f
 14496     091D  09C5               	comf	___fltol@f1+2,f
 14497     091E  09C6               	comf	___fltol@f1+3,f
 14498     091F  0AC3               	incf	___fltol@f1,f
 14499     0920  1903               	skipnz
 14500     0921  0AC4               	incf	___fltol@f1+1,f
 14501     0922  1903               	skipnz
 14502     0923  0AC5               	incf	___fltol@f1+2,f
 14503     0924  1903               	skipnz
 14504     0925  0AC6               	incf	___fltol@f1+3,f
 14505     0926                     l1000:
 14506     0926                     l990:
 14507     0926  0008               	return
 14508     0927                     __end_of___fltol:
 14509                           
 14510                           	psect	text44
 14511     0DC5                     __ptext44:	
 14512 ;; *************** function ___flmul *****************
 14513 ;; Defined at:
 14514 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcmul.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;  b               4    9[BANK0 ] long 
 14517 ;;  a               4   13[BANK0 ] long 
 14518 ;; Auto vars:     Size  Location     Type
 14519 ;;  prod            4   29[BANK0 ] struct .
 14520 ;;  grs             4   23[BANK0 ] unsigned long 
 14521 ;;  temp            2   33[BANK0 ] struct .
 14522 ;;  bexp            1   28[BANK0 ] unsigned char 
 14523 ;;  aexp            1   27[BANK0 ] unsigned char 
 14524 ;;  sign            1   22[BANK0 ] unsigned char 
 14525 ;; Return value:  Size  Location     Type
 14526 ;;                  4    9[BANK0 ] unsigned char 
 14527 ;; Registers used:
 14528 ;;		wreg, status,2, status,0, pclath, cstack
 14529 ;; Tracked objects:
 14530 ;;		On entry : 0/0
 14531 ;;		On exit  : 0/0
 14532 ;;		Unchanged: 0/0
 14533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14534 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14535 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14536 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14537 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14538 ;;Total ram usage:       26 bytes
 14539 ;; Hardware stack levels used: 1
 14540 ;; Hardware stack levels required when called: 3
 14541 ;; This function calls:
 14542 ;;		__Umul8_16
 14543 ;; This function is called by:
 14544 ;;		_main
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548     0DC5                     ___flmul:	
 14549                           ;psect for function ___flmul
 14550                           
 14551     0DC5                     l3677:	
 14552                           ;incstack = 0
 14553                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14554                           
 14555     0DC5  0140               	movlb	0	; select bank0
 14556     0DC6  082C               	movf	___flmul@b+3,w
 14557     0DC7  3980               	andlw	128
 14558     0DC8  00B6               	movwf	___flmul@sign
 14559     0DC9                     l3679:
 14560     0DC9  352C               	lslf	___flmul@b+3,w
 14561     0DCA  00BC               	movwf	___flmul@bexp
 14562     0DCB                     l3681:
 14563     0DCB  1FAB               	btfss	___flmul@b+2,7
 14564     0DCC  2DCE               	goto	u3591
 14565     0DCD  2DCF               	goto	u3590
 14566     0DCE                     u3591:
 14567     0DCE  2DD0               	goto	l3685
 14568     0DCF                     u3590:
 14569     0DCF                     l3683:
 14570     0DCF  143C               	bsf	___flmul@bexp,0
 14571     0DD0                     l3685:
 14572     0DD0  083C               	movf	___flmul@bexp,w
 14573     0DD1  1903               	btfsc	3,2
 14574     0DD2  2DD4               	goto	u3601
 14575     0DD3  2DD5               	goto	u3600
 14576     0DD4                     u3601:
 14577     0DD4  2DE4               	goto	l3693
 14578     0DD5                     u3600:
 14579     0DD5                     l3687:
 14580     0DD5  0A3C               	incf	___flmul@bexp,w
 14581     0DD6  1D03               	btfss	3,2
 14582     0DD7  2DD9               	goto	u3611
 14583     0DD8  2DDA               	goto	u3610
 14584     0DD9                     u3611:
 14585     0DD9  2DE2               	goto	l3691
 14586     0DDA                     u3610:
 14587     0DDA                     l3689:
 14588     0DDA  3000               	movlw	0
 14589     0DDB  00AC               	movwf	___flmul@b+3
 14590     0DDC  3000               	movlw	0
 14591     0DDD  00AB               	movwf	___flmul@b+2
 14592     0DDE  3000               	movlw	0
 14593     0DDF  00AA               	movwf	___flmul@b+1
 14594     0DE0  3000               	movlw	0
 14595     0DE1  00A9               	movwf	___flmul@b
 14596     0DE2                     l3691:
 14597     0DE2  17AB               	bsf	___flmul@b+2,7
 14598     0DE3  2DEC               	goto	l3695
 14599     0DE4                     l3693:
 14600     0DE4  3000               	movlw	0
 14601     0DE5  00AC               	movwf	___flmul@b+3
 14602     0DE6  3000               	movlw	0
 14603     0DE7  00AB               	movwf	___flmul@b+2
 14604     0DE8  3000               	movlw	0
 14605     0DE9  00AA               	movwf	___flmul@b+1
 14606     0DEA  3000               	movlw	0
 14607     0DEB  00A9               	movwf	___flmul@b
 14608     0DEC                     l3695:
 14609     0DEC  0830               	movf	___flmul@a+3,w
 14610     0DED  3980               	andlw	128
 14611     0DEE  00B1               	movwf	??___flmul
 14612     0DEF  0831               	movf	??___flmul,w
 14613     0DF0  06B6               	xorwf	___flmul@sign,f
 14614     0DF1                     l3697:
 14615     0DF1  3530               	lslf	___flmul@a+3,w
 14616     0DF2  00BB               	movwf	___flmul@aexp
 14617     0DF3                     l3699:
 14618     0DF3  1FAF               	btfss	___flmul@a+2,7
 14619     0DF4  2DF6               	goto	u3621
 14620     0DF5  2DF7               	goto	u3620
 14621     0DF6                     u3621:
 14622     0DF6  2DF8               	goto	l3703
 14623     0DF7                     u3620:
 14624     0DF7                     l3701:
 14625     0DF7  143B               	bsf	___flmul@aexp,0
 14626     0DF8                     l3703:
 14627     0DF8  083B               	movf	___flmul@aexp,w
 14628     0DF9  1903               	btfsc	3,2
 14629     0DFA  2DFC               	goto	u3631
 14630     0DFB  2DFD               	goto	u3630
 14631     0DFC                     u3631:
 14632     0DFC  2E0C               	goto	l3711
 14633     0DFD                     u3630:
 14634     0DFD                     l3705:
 14635     0DFD  0A3B               	incf	___flmul@aexp,w
 14636     0DFE  1D03               	btfss	3,2
 14637     0DFF  2E01               	goto	u3641
 14638     0E00  2E02               	goto	u3640
 14639     0E01                     u3641:
 14640     0E01  2E0A               	goto	l3709
 14641     0E02                     u3640:
 14642     0E02                     l3707:
 14643     0E02  3000               	movlw	0
 14644     0E03  00B0               	movwf	___flmul@a+3
 14645     0E04  3000               	movlw	0
 14646     0E05  00AF               	movwf	___flmul@a+2
 14647     0E06  3000               	movlw	0
 14648     0E07  00AE               	movwf	___flmul@a+1
 14649     0E08  3000               	movlw	0
 14650     0E09  00AD               	movwf	___flmul@a
 14651     0E0A                     l3709:
 14652     0E0A  17AF               	bsf	___flmul@a+2,7
 14653     0E0B  2E14               	goto	l3713
 14654     0E0C                     l3711:
 14655     0E0C  3000               	movlw	0
 14656     0E0D  00B0               	movwf	___flmul@a+3
 14657     0E0E  3000               	movlw	0
 14658     0E0F  00AF               	movwf	___flmul@a+2
 14659     0E10  3000               	movlw	0
 14660     0E11  00AE               	movwf	___flmul@a+1
 14661     0E12  3000               	movlw	0
 14662     0E13  00AD               	movwf	___flmul@a
 14663     0E14                     l3713:
 14664     0E14  083B               	movf	___flmul@aexp,w
 14665     0E15  1903               	btfsc	3,2
 14666     0E16  2E18               	goto	u3651
 14667     0E17  2E19               	goto	u3650
 14668     0E18                     u3651:
 14669     0E18  2E1E               	goto	l3717
 14670     0E19                     u3650:
 14671     0E19                     l3715:
 14672     0E19  083C               	movf	___flmul@bexp,w
 14673     0E1A  1D03               	btfss	3,2
 14674     0E1B  2E1D               	goto	u3661
 14675     0E1C  2E1E               	goto	u3660
 14676     0E1D                     u3661:
 14677     0E1D  2E27               	goto	l3721
 14678     0E1E                     u3660:
 14679     0E1E                     l3717:
 14680     0E1E  3000               	movlw	0
 14681     0E1F  00AC               	movwf	?___flmul+3
 14682     0E20  3000               	movlw	0
 14683     0E21  00AB               	movwf	?___flmul+2
 14684     0E22  3000               	movlw	0
 14685     0E23  00AA               	movwf	?___flmul+1
 14686     0E24  3000               	movlw	0
 14687     0E25  00A9               	movwf	?___flmul
 14688     0E26  2FFF               	goto	l1193
 14689     0E27                     l3721:
 14690     0E27  0829               	movf	___flmul@b,w
 14691     0E28  00A0               	movwf	__Umul8_16@multiplicand
 14692     0E29  082F               	movf	___flmul@a+2,w
 14693     0E2A  3195  252B  318D   	fcall	__Umul8_16
 14694     0E2D  0140               	movlb	0	; select bank0
 14695     0E2E  0821               	movf	?__Umul8_16+1,w
 14696     0E2F  00C2               	movwf	___flmul@temp+1
 14697     0E30  0820               	movf	?__Umul8_16,w
 14698     0E31  00C1               	movwf	___flmul@temp
 14699     0E32                     l3723:
 14700     0E32  0841               	movf	___flmul@temp,w
 14701     0E33  00B1               	movwf	??___flmul
 14702     0E34  01B2               	clrf	??___flmul+1
 14703     0E35  01B3               	clrf	??___flmul+2
 14704     0E36  01B4               	clrf	??___flmul+3
 14705     0E37  0834               	movf	??___flmul+3,w
 14706     0E38  00BA               	movwf	___flmul@grs+3
 14707     0E39  0833               	movf	??___flmul+2,w
 14708     0E3A  00B9               	movwf	___flmul@grs+2
 14709     0E3B  0832               	movf	??___flmul+1,w
 14710     0E3C  00B8               	movwf	___flmul@grs+1
 14711     0E3D  0831               	movf	??___flmul,w
 14712     0E3E  00B7               	movwf	___flmul@grs
 14713     0E3F                     l3725:
 14714     0E3F  0842               	movf	___flmul@temp+1,w
 14715     0E40  00B1               	movwf	??___flmul
 14716     0E41  01B2               	clrf	??___flmul+1
 14717     0E42  01B3               	clrf	??___flmul+2
 14718     0E43  01B4               	clrf	??___flmul+3
 14719     0E44  0834               	movf	??___flmul+3,w
 14720     0E45  00C0               	movwf	___flmul@prod+3
 14721     0E46  0833               	movf	??___flmul+2,w
 14722     0E47  00BF               	movwf	___flmul@prod+2
 14723     0E48  0832               	movf	??___flmul+1,w
 14724     0E49  00BE               	movwf	___flmul@prod+1
 14725     0E4A  0831               	movf	??___flmul,w
 14726     0E4B  00BD               	movwf	___flmul@prod
 14727     0E4C  082A               	movf	___flmul@b+1,w
 14728     0E4D  00A0               	movwf	__Umul8_16@multiplicand
 14729     0E4E  082E               	movf	___flmul@a+1,w
 14730     0E4F  3195  252B  318D   	fcall	__Umul8_16
 14731     0E52  0140               	movlb	0	; select bank0
 14732     0E53  0821               	movf	?__Umul8_16+1,w
 14733     0E54  00C2               	movwf	___flmul@temp+1
 14734     0E55  0820               	movf	?__Umul8_16,w
 14735     0E56  00C1               	movwf	___flmul@temp
 14736     0E57                     l3727:
 14737     0E57  0841               	movf	___flmul@temp,w
 14738     0E58  00B1               	movwf	??___flmul
 14739     0E59  01B2               	clrf	??___flmul+1
 14740     0E5A  01B3               	clrf	??___flmul+2
 14741     0E5B  01B4               	clrf	??___flmul+3
 14742     0E5C  0831               	movf	??___flmul,w
 14743     0E5D  07B7               	addwf	___flmul@grs,f
 14744     0E5E  0832               	movf	??___flmul+1,w
 14745     0E5F  3DB8               	addwfc	___flmul@grs+1,f
 14746     0E60  0833               	movf	??___flmul+2,w
 14747     0E61  3DB9               	addwfc	___flmul@grs+2,f
 14748     0E62  0834               	movf	??___flmul+3,w
 14749     0E63  3DBA               	addwfc	___flmul@grs+3,f
 14750     0E64                     l3729:
 14751     0E64  0842               	movf	___flmul@temp+1,w
 14752     0E65  00B1               	movwf	??___flmul
 14753     0E66  01B2               	clrf	??___flmul+1
 14754     0E67  01B3               	clrf	??___flmul+2
 14755     0E68  01B4               	clrf	??___flmul+3
 14756     0E69  0831               	movf	??___flmul,w
 14757     0E6A  07BD               	addwf	___flmul@prod,f
 14758     0E6B  0832               	movf	??___flmul+1,w
 14759     0E6C  3DBE               	addwfc	___flmul@prod+1,f
 14760     0E6D  0833               	movf	??___flmul+2,w
 14761     0E6E  3DBF               	addwfc	___flmul@prod+2,f
 14762     0E6F  0834               	movf	??___flmul+3,w
 14763     0E70  3DC0               	addwfc	___flmul@prod+3,f
 14764     0E71  082B               	movf	___flmul@b+2,w
 14765     0E72  00A0               	movwf	__Umul8_16@multiplicand
 14766     0E73  082D               	movf	___flmul@a,w
 14767     0E74  3195  252B  318D   	fcall	__Umul8_16
 14768     0E77  0140               	movlb	0	; select bank0
 14769     0E78  0821               	movf	?__Umul8_16+1,w
 14770     0E79  00C2               	movwf	___flmul@temp+1
 14771     0E7A  0820               	movf	?__Umul8_16,w
 14772     0E7B  00C1               	movwf	___flmul@temp
 14773     0E7C                     l3731:
 14774     0E7C  0841               	movf	___flmul@temp,w
 14775     0E7D  00B1               	movwf	??___flmul
 14776     0E7E  01B2               	clrf	??___flmul+1
 14777     0E7F  01B3               	clrf	??___flmul+2
 14778     0E80  01B4               	clrf	??___flmul+3
 14779     0E81  0831               	movf	??___flmul,w
 14780     0E82  07B7               	addwf	___flmul@grs,f
 14781     0E83  0832               	movf	??___flmul+1,w
 14782     0E84  3DB8               	addwfc	___flmul@grs+1,f
 14783     0E85  0833               	movf	??___flmul+2,w
 14784     0E86  3DB9               	addwfc	___flmul@grs+2,f
 14785     0E87  0834               	movf	??___flmul+3,w
 14786     0E88  3DBA               	addwfc	___flmul@grs+3,f
 14787     0E89                     l3733:
 14788     0E89  0842               	movf	___flmul@temp+1,w
 14789     0E8A  00B1               	movwf	??___flmul
 14790     0E8B  01B2               	clrf	??___flmul+1
 14791     0E8C  01B3               	clrf	??___flmul+2
 14792     0E8D  01B4               	clrf	??___flmul+3
 14793     0E8E  0831               	movf	??___flmul,w
 14794     0E8F  07BD               	addwf	___flmul@prod,f
 14795     0E90  0832               	movf	??___flmul+1,w
 14796     0E91  3DBE               	addwfc	___flmul@prod+1,f
 14797     0E92  0833               	movf	??___flmul+2,w
 14798     0E93  3DBF               	addwfc	___flmul@prod+2,f
 14799     0E94  0834               	movf	??___flmul+3,w
 14800     0E95  3DC0               	addwfc	___flmul@prod+3,f
 14801     0E96                     l3735:
 14802     0E96  3008               	movlw	8
 14803     0E97                     u3675:
 14804     0E97  35B7               	lslf	___flmul@grs,f
 14805     0E98  0DB8               	rlf	___flmul@grs+1,f
 14806     0E99  0DB9               	rlf	___flmul@grs+2,f
 14807     0E9A  0DBA               	rlf	___flmul@grs+3,f
 14808     0E9B  0B89               	decfsz	9,f
 14809     0E9C  2E97               	goto	u3675
 14810     0E9D                     l3737:
 14811     0E9D  082A               	movf	___flmul@b+1,w
 14812     0E9E  00A0               	movwf	__Umul8_16@multiplicand
 14813     0E9F  082D               	movf	___flmul@a,w
 14814     0EA0  3195  252B  318D   	fcall	__Umul8_16
 14815     0EA3  0140               	movlb	0	; select bank0
 14816     0EA4  0821               	movf	?__Umul8_16+1,w
 14817     0EA5  00C2               	movwf	___flmul@temp+1
 14818     0EA6  0820               	movf	?__Umul8_16,w
 14819     0EA7  00C1               	movwf	___flmul@temp
 14820     0EA8                     l3739:
 14821     0EA8  0841               	movf	___flmul@temp,w
 14822     0EA9  07B7               	addwf	___flmul@grs,f
 14823     0EAA  0842               	movf	___flmul@temp+1,w
 14824     0EAB  3DB8               	addwfc	___flmul@grs+1,f
 14825     0EAC  3000               	movlw	0
 14826     0EAD  3DB9               	addwfc	___flmul@grs+2,f
 14827     0EAE  3DBA               	addwfc	___flmul@grs+3,f
 14828     0EAF                     l3741:
 14829     0EAF  0829               	movf	___flmul@b,w
 14830     0EB0  00A0               	movwf	__Umul8_16@multiplicand
 14831     0EB1  082E               	movf	___flmul@a+1,w
 14832     0EB2  3195  252B  318D   	fcall	__Umul8_16
 14833     0EB5  0140               	movlb	0	; select bank0
 14834     0EB6  0821               	movf	?__Umul8_16+1,w
 14835     0EB7  00C2               	movwf	___flmul@temp+1
 14836     0EB8  0820               	movf	?__Umul8_16,w
 14837     0EB9  00C1               	movwf	___flmul@temp
 14838     0EBA                     l3743:
 14839     0EBA  0841               	movf	___flmul@temp,w
 14840     0EBB  07B7               	addwf	___flmul@grs,f
 14841     0EBC  0842               	movf	___flmul@temp+1,w
 14842     0EBD  3DB8               	addwfc	___flmul@grs+1,f
 14843     0EBE  3000               	movlw	0
 14844     0EBF  3DB9               	addwfc	___flmul@grs+2,f
 14845     0EC0  3DBA               	addwfc	___flmul@grs+3,f
 14846     0EC1                     l3745:
 14847     0EC1  3008               	movlw	8
 14848     0EC2                     u3685:
 14849     0EC2  35B7               	lslf	___flmul@grs,f
 14850     0EC3  0DB8               	rlf	___flmul@grs+1,f
 14851     0EC4  0DB9               	rlf	___flmul@grs+2,f
 14852     0EC5  0DBA               	rlf	___flmul@grs+3,f
 14853     0EC6  0B89               	decfsz	9,f
 14854     0EC7  2EC2               	goto	u3685
 14855     0EC8  0829               	movf	___flmul@b,w
 14856     0EC9  00A0               	movwf	__Umul8_16@multiplicand
 14857     0ECA  082D               	movf	___flmul@a,w
 14858     0ECB  3195  252B  318D   	fcall	__Umul8_16
 14859     0ECE  0140               	movlb	0	; select bank0
 14860     0ECF  0821               	movf	?__Umul8_16+1,w
 14861     0ED0  00C2               	movwf	___flmul@temp+1
 14862     0ED1  0820               	movf	?__Umul8_16,w
 14863     0ED2  00C1               	movwf	___flmul@temp
 14864     0ED3                     l3747:
 14865     0ED3  0841               	movf	___flmul@temp,w
 14866     0ED4  07B7               	addwf	___flmul@grs,f
 14867     0ED5  0842               	movf	___flmul@temp+1,w
 14868     0ED6  3DB8               	addwfc	___flmul@grs+1,f
 14869     0ED7  3000               	movlw	0
 14870     0ED8  3DB9               	addwfc	___flmul@grs+2,f
 14871     0ED9  3DBA               	addwfc	___flmul@grs+3,f
 14872     0EDA                     l3749:
 14873     0EDA  082A               	movf	___flmul@b+1,w
 14874     0EDB  00A0               	movwf	__Umul8_16@multiplicand
 14875     0EDC  082F               	movf	___flmul@a+2,w
 14876     0EDD  3195  252B  318D   	fcall	__Umul8_16
 14877     0EE0  0140               	movlb	0	; select bank0
 14878     0EE1  0821               	movf	?__Umul8_16+1,w
 14879     0EE2  00C2               	movwf	___flmul@temp+1
 14880     0EE3  0820               	movf	?__Umul8_16,w
 14881     0EE4  00C1               	movwf	___flmul@temp
 14882     0EE5  0841               	movf	___flmul@temp,w
 14883     0EE6  07BD               	addwf	___flmul@prod,f
 14884     0EE7  0842               	movf	___flmul@temp+1,w
 14885     0EE8  3DBE               	addwfc	___flmul@prod+1,f
 14886     0EE9  3000               	movlw	0
 14887     0EEA  3DBF               	addwfc	___flmul@prod+2,f
 14888     0EEB  3DC0               	addwfc	___flmul@prod+3,f
 14889     0EEC                     l3751:
 14890     0EEC  082B               	movf	___flmul@b+2,w
 14891     0EED  00A0               	movwf	__Umul8_16@multiplicand
 14892     0EEE  082E               	movf	___flmul@a+1,w
 14893     0EEF  3195  252B  318D   	fcall	__Umul8_16
 14894     0EF2  0140               	movlb	0	; select bank0
 14895     0EF3  0821               	movf	?__Umul8_16+1,w
 14896     0EF4  00C2               	movwf	___flmul@temp+1
 14897     0EF5  0820               	movf	?__Umul8_16,w
 14898     0EF6  00C1               	movwf	___flmul@temp
 14899     0EF7                     l3753:
 14900     0EF7  0841               	movf	___flmul@temp,w
 14901     0EF8  07BD               	addwf	___flmul@prod,f
 14902     0EF9  0842               	movf	___flmul@temp+1,w
 14903     0EFA  3DBE               	addwfc	___flmul@prod+1,f
 14904     0EFB  3000               	movlw	0
 14905     0EFC  3DBF               	addwfc	___flmul@prod+2,f
 14906     0EFD  3DC0               	addwfc	___flmul@prod+3,f
 14907     0EFE  082B               	movf	___flmul@b+2,w
 14908     0EFF  00A0               	movwf	__Umul8_16@multiplicand
 14909     0F00  082F               	movf	___flmul@a+2,w
 14910     0F01  3195  252B  318D   	fcall	__Umul8_16
 14911     0F04  0140               	movlb	0	; select bank0
 14912     0F05  0821               	movf	?__Umul8_16+1,w
 14913     0F06  00C2               	movwf	___flmul@temp+1
 14914     0F07  0820               	movf	?__Umul8_16,w
 14915     0F08  00C1               	movwf	___flmul@temp
 14916     0F09                     l3755:
 14917     0F09  0841               	movf	___flmul@temp,w
 14918     0F0A  00B1               	movwf	??___flmul
 14919     0F0B  0842               	movf	___flmul@temp+1,w
 14920     0F0C  00B2               	movwf	??___flmul+1
 14921     0F0D  01B3               	clrf	??___flmul+2
 14922     0F0E  01B4               	clrf	??___flmul+3
 14923     0F0F  3008               	movlw	8
 14924     0F10                     u3695:
 14925     0F10  35B1               	lslf	??___flmul,f
 14926     0F11  0DB2               	rlf	??___flmul+1,f
 14927     0F12  0DB3               	rlf	??___flmul+2,f
 14928     0F13  0DB4               	rlf	??___flmul+3,f
 14929     0F14                     u3690:
 14930     0F14  0B89               	decfsz	9,f
 14931     0F15  2F10               	goto	u3695
 14932     0F16  0831               	movf	??___flmul,w
 14933     0F17  07BD               	addwf	___flmul@prod,f
 14934     0F18  0832               	movf	??___flmul+1,w
 14935     0F19  3DBE               	addwfc	___flmul@prod+1,f
 14936     0F1A  0833               	movf	??___flmul+2,w
 14937     0F1B  3DBF               	addwfc	___flmul@prod+2,f
 14938     0F1C  0834               	movf	??___flmul+3,w
 14939     0F1D  3DC0               	addwfc	___flmul@prod+3,f
 14940     0F1E                     l3757:
 14941     0F1E  0837               	movf	___flmul@grs,w
 14942     0F1F  00B1               	movwf	??___flmul
 14943     0F20  0838               	movf	___flmul@grs+1,w
 14944     0F21  00B2               	movwf	??___flmul+1
 14945     0F22  0839               	movf	___flmul@grs+2,w
 14946     0F23  00B3               	movwf	??___flmul+2
 14947     0F24  083A               	movf	___flmul@grs+3,w
 14948     0F25  00B4               	movwf	??___flmul+3
 14949     0F26  3018               	movlw	24
 14950     0F27                     u3705:
 14951     0F27  36B4               	lsrf	??___flmul+3,f
 14952     0F28  0CB3               	rrf	??___flmul+2,f
 14953     0F29  0CB2               	rrf	??___flmul+1,f
 14954     0F2A  0CB1               	rrf	??___flmul,f
 14955     0F2B                     u3700:
 14956     0F2B  0B89               	decfsz	9,f
 14957     0F2C  2F27               	goto	u3705
 14958     0F2D  0831               	movf	??___flmul,w
 14959     0F2E  07BD               	addwf	___flmul@prod,f
 14960     0F2F  0832               	movf	??___flmul+1,w
 14961     0F30  3DBE               	addwfc	___flmul@prod+1,f
 14962     0F31  0833               	movf	??___flmul+2,w
 14963     0F32  3DBF               	addwfc	___flmul@prod+2,f
 14964     0F33  0834               	movf	??___flmul+3,w
 14965     0F34  3DC0               	addwfc	___flmul@prod+3,f
 14966     0F35                     l3759:
 14967     0F35  3008               	movlw	8
 14968     0F36                     u3715:
 14969     0F36  35B7               	lslf	___flmul@grs,f
 14970     0F37  0DB8               	rlf	___flmul@grs+1,f
 14971     0F38  0DB9               	rlf	___flmul@grs+2,f
 14972     0F39  0DBA               	rlf	___flmul@grs+3,f
 14973     0F3A  0B89               	decfsz	9,f
 14974     0F3B  2F36               	goto	u3715
 14975     0F3C                     l3761:
 14976     0F3C  083C               	movf	___flmul@bexp,w
 14977     0F3D  073B               	addwf	___flmul@aexp,w
 14978     0F3E  00B1               	movwf	??___flmul
 14979     0F3F  01B2               	clrf	??___flmul+1
 14980     0F40  0DB2               	rlf	??___flmul+1,f
 14981     0F41  0831               	movf	??___flmul,w
 14982     0F42  3E82               	addlw	130
 14983     0F43  00C1               	movwf	___flmul@temp
 14984     0F44  30FF               	movlw	255
 14985     0F45  3D32               	addwfc	??___flmul+1,w
 14986     0F46  00C2               	movwf	___flmul@temp+1
 14987     0F47  2F5F               	goto	l3773
 14988     0F48                     l3763:
 14989     0F48  3001               	movlw	1
 14990     0F49                     u3725:
 14991     0F49  35BD               	lslf	___flmul@prod,f
 14992     0F4A  0DBE               	rlf	___flmul@prod+1,f
 14993     0F4B  0DBF               	rlf	___flmul@prod+2,f
 14994     0F4C  0DC0               	rlf	___flmul@prod+3,f
 14995     0F4D  0B89               	decfsz	9,f
 14996     0F4E  2F49               	goto	u3725
 14997     0F4F                     l3765:
 14998     0F4F  1FBA               	btfss	___flmul@grs+3,7
 14999     0F50  2F52               	goto	u3731
 15000     0F51  2F53               	goto	u3730
 15001     0F52                     u3731:
 15002     0F52  2F54               	goto	l3769
 15003     0F53                     u3730:
 15004     0F53                     l3767:
 15005     0F53  143D               	bsf	___flmul@prod,0
 15006     0F54                     l3769:
 15007     0F54  3001               	movlw	1
 15008     0F55                     u3745:
 15009     0F55  35B7               	lslf	___flmul@grs,f
 15010     0F56  0DB8               	rlf	___flmul@grs+1,f
 15011     0F57  0DB9               	rlf	___flmul@grs+2,f
 15012     0F58  0DBA               	rlf	___flmul@grs+3,f
 15013     0F59  0B89               	decfsz	9,f
 15014     0F5A  2F55               	goto	u3745
 15015     0F5B                     l3771:
 15016     0F5B  30FF               	movlw	255
 15017     0F5C  07C1               	addwf	___flmul@temp,f
 15018     0F5D  30FF               	movlw	255
 15019     0F5E  3DC2               	addwfc	___flmul@temp+1,f
 15020     0F5F                     l3773:
 15021     0F5F  1FBF               	btfss	___flmul@prod+2,7
 15022     0F60  2F62               	goto	u3751
 15023     0F61  2F63               	goto	u3750
 15024     0F62                     u3751:
 15025     0F62  2F48               	goto	l3763
 15026     0F63                     u3750:
 15027     0F63                     l3775:
 15028     0F63  01BB               	clrf	___flmul@aexp
 15029     0F64                     l3777:
 15030     0F64  1FBA               	btfss	___flmul@grs+3,7
 15031     0F65  2F67               	goto	u3761
 15032     0F66  2F68               	goto	u3760
 15033     0F67                     u3761:
 15034     0F67  2F84               	goto	l3785
 15035     0F68                     u3760:
 15036     0F68                     l3779:
 15037     0F68  30FF               	movlw	255
 15038     0F69  0537               	andwf	___flmul@grs,w
 15039     0F6A  00B1               	movwf	??___flmul
 15040     0F6B  30FF               	movlw	255
 15041     0F6C  0538               	andwf	___flmul@grs+1,w
 15042     0F6D  00B2               	movwf	??___flmul+1
 15043     0F6E  30FF               	movlw	255
 15044     0F6F  0539               	andwf	___flmul@grs+2,w
 15045     0F70  00B3               	movwf	??___flmul+2
 15046     0F71  307F               	movlw	127
 15047     0F72  053A               	andwf	___flmul@grs+3,w
 15048     0F73  00B4               	movwf	??___flmul+3
 15049     0F74  0834               	movf	??___flmul+3,w
 15050     0F75  0433               	iorwf	??___flmul+2,w
 15051     0F76  0432               	iorwf	??___flmul+1,w
 15052     0F77  0431               	iorwf	??___flmul,w
 15053     0F78  1903               	skipnz
 15054     0F79  2F7B               	goto	u3771
 15055     0F7A  2F7C               	goto	u3770
 15056     0F7B                     u3771:
 15057     0F7B  2F7F               	goto	l1199
 15058     0F7C                     u3770:
 15059     0F7C                     l3781:
 15060     0F7C  01BB               	clrf	___flmul@aexp
 15061     0F7D  0ABB               	incf	___flmul@aexp,f
 15062     0F7E  2F84               	goto	l3785
 15063     0F7F                     l1199:
 15064     0F7F  1C3D               	btfss	___flmul@prod,0
 15065     0F80  2F82               	goto	u3781
 15066     0F81  2F83               	goto	u3780
 15067     0F82                     u3781:
 15068     0F82  2F84               	goto	l3785
 15069     0F83                     u3780:
 15070     0F83  2F7C               	goto	l3781
 15071     0F84                     l3785:
 15072     0F84  083B               	movf	___flmul@aexp,w
 15073     0F85  1903               	btfsc	3,2
 15074     0F86  2F88               	goto	u3791
 15075     0F87  2F89               	goto	u3790
 15076     0F88                     u3791:
 15077     0F88  2FB1               	goto	l3795
 15078     0F89                     u3790:
 15079     0F89                     l3787:
 15080     0F89  3001               	movlw	1
 15081     0F8A  07BD               	addwf	___flmul@prod,f
 15082     0F8B  3000               	movlw	0
 15083     0F8C  3DBE               	addwfc	___flmul@prod+1,f
 15084     0F8D  3000               	movlw	0
 15085     0F8E  3DBF               	addwfc	___flmul@prod+2,f
 15086     0F8F  3000               	movlw	0
 15087     0F90  3DC0               	addwfc	___flmul@prod+3,f
 15088     0F91                     l3789:
 15089     0F91  1C40               	btfss	___flmul@prod+3,0
 15090     0F92  2F94               	goto	u3801
 15091     0F93  2F95               	goto	u3800
 15092     0F94                     u3801:
 15093     0F94  2FB1               	goto	l3795
 15094     0F95                     u3800:
 15095     0F95                     l3791:
 15096     0F95  083D               	movf	___flmul@prod,w
 15097     0F96  00B1               	movwf	??___flmul
 15098     0F97  083E               	movf	___flmul@prod+1,w
 15099     0F98  00B2               	movwf	??___flmul+1
 15100     0F99  083F               	movf	___flmul@prod+2,w
 15101     0F9A  00B3               	movwf	??___flmul+2
 15102     0F9B  0840               	movf	___flmul@prod+3,w
 15103     0F9C  00B4               	movwf	??___flmul+3
 15104     0F9D  3001               	movlw	1
 15105     0F9E  00B5               	movwf	??___flmul+4
 15106     0F9F                     u3815:
 15107     0F9F  37B4               	asrf	??___flmul+3,f
 15108     0FA0  0CB3               	rrf	??___flmul+2,f
 15109     0FA1  0CB2               	rrf	??___flmul+1,f
 15110     0FA2  0CB1               	rrf	??___flmul,f
 15111     0FA3                     u3810:
 15112     0FA3  0BB5               	decfsz	??___flmul+4,f
 15113     0FA4  2F9F               	goto	u3815
 15114     0FA5  0834               	movf	??___flmul+3,w
 15115     0FA6  00C0               	movwf	___flmul@prod+3
 15116     0FA7  0833               	movf	??___flmul+2,w
 15117     0FA8  00BF               	movwf	___flmul@prod+2
 15118     0FA9  0832               	movf	??___flmul+1,w
 15119     0FAA  00BE               	movwf	___flmul@prod+1
 15120     0FAB  0831               	movf	??___flmul,w
 15121     0FAC  00BD               	movwf	___flmul@prod
 15122     0FAD                     l3793:
 15123     0FAD  3001               	movlw	1
 15124     0FAE  07C1               	addwf	___flmul@temp,f
 15125     0FAF  3000               	movlw	0
 15126     0FB0  3DC2               	addwfc	___flmul@temp+1,f
 15127     0FB1                     l3795:
 15128     0FB1  0842               	movf	___flmul@temp+1,w
 15129     0FB2  3A80               	xorlw	128
 15130     0FB3  00B1               	movwf	??___flmul
 15131     0FB4  3080               	movlw	128
 15132     0FB5  0231               	subwf	??___flmul,w
 15133     0FB6  1D03               	skipz
 15134     0FB7  2FBA               	goto	u3825
 15135     0FB8  30FF               	movlw	255
 15136     0FB9  0241               	subwf	___flmul@temp,w
 15137     0FBA                     u3825:
 15138     0FBA  1C03               	skipc
 15139     0FBB  2FBD               	goto	u3821
 15140     0FBC  2FBE               	goto	u3820
 15141     0FBD                     u3821:
 15142     0FBD  2FC8               	goto	l3799
 15143     0FBE                     u3820:
 15144     0FBE                     l3797:
 15145     0FBE  307F               	movlw	127
 15146     0FBF  0140               	movlb	0	; select bank0
 15147     0FC0  00C0               	movwf	___flmul@prod+3
 15148     0FC1  3080               	movlw	128
 15149     0FC2  00BF               	movwf	___flmul@prod+2
 15150     0FC3  3000               	movlw	0
 15151     0FC4  00BE               	movwf	___flmul@prod+1
 15152     0FC5  3000               	movlw	0
 15153     0FC6  00BD               	movwf	___flmul@prod
 15154     0FC7  2FF3               	goto	l1205
 15155     0FC8                     l3799:
 15156     0FC8  0140               	movlb	0	; select bank0
 15157     0FC9  0842               	movf	___flmul@temp+1,w
 15158     0FCA  3A80               	xorlw	128
 15159     0FCB  00B1               	movwf	??___flmul
 15160     0FCC  3080               	movlw	128
 15161     0FCD  0231               	subwf	??___flmul,w
 15162     0FCE  1D03               	skipz
 15163     0FCF  2FD2               	goto	u3835
 15164     0FD0  3001               	movlw	1
 15165     0FD1  0241               	subwf	___flmul@temp,w
 15166     0FD2                     u3835:
 15167     0FD2  1803               	skipnc
 15168     0FD3  2FD5               	goto	u3831
 15169     0FD4  2FD6               	goto	u3830
 15170     0FD5                     u3831:
 15171     0FD5  2FE1               	goto	l3805
 15172     0FD6                     u3830:
 15173     0FD6                     l3801:
 15174     0FD6  3000               	movlw	0
 15175     0FD7  0140               	movlb	0	; select bank0
 15176     0FD8  00C0               	movwf	___flmul@prod+3
 15177     0FD9  3000               	movlw	0
 15178     0FDA  00BF               	movwf	___flmul@prod+2
 15179     0FDB  3000               	movlw	0
 15180     0FDC  00BE               	movwf	___flmul@prod+1
 15181     0FDD  3000               	movlw	0
 15182     0FDE  00BD               	movwf	___flmul@prod
 15183     0FDF                     l3803:
 15184     0FDF  01B6               	clrf	___flmul@sign
 15185     0FE0  2FF3               	goto	l1205
 15186     0FE1                     l3805:
 15187     0FE1  0140               	movlb	0	; select bank0
 15188     0FE2  0841               	movf	___flmul@temp,w
 15189     0FE3  00BC               	movwf	___flmul@bexp
 15190     0FE4  30FF               	movlw	255
 15191     0FE5  05BD               	andwf	___flmul@prod,f
 15192     0FE6  30FF               	movlw	255
 15193     0FE7  05BE               	andwf	___flmul@prod+1,f
 15194     0FE8  307F               	movlw	127
 15195     0FE9  05BF               	andwf	___flmul@prod+2,f
 15196     0FEA  3000               	movlw	0
 15197     0FEB  05C0               	andwf	___flmul@prod+3,f
 15198     0FEC                     l3807:
 15199     0FEC  1C3C               	btfss	___flmul@bexp,0
 15200     0FED  2FEF               	goto	u3841
 15201     0FEE  2FF0               	goto	u3840
 15202     0FEF                     u3841:
 15203     0FEF  2FF1               	goto	l3811
 15204     0FF0                     u3840:
 15205     0FF0                     l3809:
 15206     0FF0  17BF               	bsf	___flmul@prod+2,7
 15207     0FF1                     l3811:
 15208     0FF1  363C               	lsrf	___flmul@bexp,w
 15209     0FF2  00C0               	movwf	___flmul@prod+3
 15210     0FF3                     l1205:
 15211     0FF3  0836               	movf	___flmul@sign,w
 15212     0FF4  00B1               	movwf	??___flmul
 15213     0FF5  0831               	movf	??___flmul,w
 15214     0FF6  04C0               	iorwf	___flmul@prod+3,f
 15215     0FF7                     l3813:
 15216     0FF7  0840               	movf	___flmul@prod+3,w
 15217     0FF8  00AC               	movwf	?___flmul+3
 15218     0FF9  083F               	movf	___flmul@prod+2,w
 15219     0FFA  00AB               	movwf	?___flmul+2
 15220     0FFB  083E               	movf	___flmul@prod+1,w
 15221     0FFC  00AA               	movwf	?___flmul+1
 15222     0FFD  083D               	movf	___flmul@prod,w
 15223     0FFE  00A9               	movwf	?___flmul
 15224     0FFF                     l1193:
 15225     0FFF  0008               	return
 15226     1000                     __end_of___flmul:
 15227                           
 15228                           	psect	text45
 15229     152B                     __ptext45:	
 15230 ;; *************** function __Umul8_16 *****************
 15231 ;; Defined at:
 15232 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8_16.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;  multiplier      1    wreg     unsigned char 
 15235 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15236 ;; Auto vars:     Size  Location     Type
 15237 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15238 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15239 ;;  product         2    4[BANK0 ] unsigned int 
 15240 ;; Return value:  Size  Location     Type
 15241 ;;                  2    0[BANK0 ] unsigned int 
 15242 ;; Registers used:
 15243 ;;		wreg, status,2, status,0
 15244 ;; Tracked objects:
 15245 ;;		On entry : 0/0
 15246 ;;		On exit  : 0/0
 15247 ;;		Unchanged: 0/0
 15248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15250 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15252 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15253 ;;Total ram usage:        9 bytes
 15254 ;; Hardware stack levels used: 1
 15255 ;; Hardware stack levels required when called: 2
 15256 ;; This function calls:
 15257 ;;		Nothing
 15258 ;; This function is called by:
 15259 ;;		___flmul
 15260 ;; This function uses a non-reentrant model
 15261 ;;
 15262                           
 15263     152B                     __Umul8_16:	
 15264                           ;psect for function __Umul8_16
 15265                           
 15266                           
 15267                           ;incstack = 0
 15268                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15269                           ;__Umul8_16@multiplier stored from wreg
 15270     152B  0140               	movlb	0	; select bank0
 15271     152C  00A8               	movwf	__Umul8_16@multiplier
 15272     152D                     l3369:
 15273     152D  01A4               	clrf	__Umul8_16@product
 15274     152E  01A5               	clrf	__Umul8_16@product+1
 15275     152F                     l3371:
 15276     152F  0820               	movf	__Umul8_16@multiplicand,w
 15277     1530  00A2               	movwf	??__Umul8_16
 15278     1531  01A3               	clrf	??__Umul8_16+1
 15279     1532  0822               	movf	??__Umul8_16,w
 15280     1533  00A6               	movwf	__Umul8_16@word_mpld
 15281     1534  0823               	movf	??__Umul8_16+1,w
 15282     1535  00A7               	movwf	__Umul8_16@word_mpld+1
 15283     1536                     l3373:
 15284     1536  1C28               	btfss	__Umul8_16@multiplier,0
 15285     1537  2D39               	goto	u3221
 15286     1538  2D3A               	goto	u3220
 15287     1539                     u3221:
 15288     1539  2D3E               	goto	l1212
 15289     153A                     u3220:
 15290     153A                     l3375:
 15291     153A  0826               	movf	__Umul8_16@word_mpld,w
 15292     153B  07A4               	addwf	__Umul8_16@product,f
 15293     153C  0827               	movf	__Umul8_16@word_mpld+1,w
 15294     153D  3DA5               	addwfc	__Umul8_16@product+1,f
 15295     153E                     l1212:
 15296     153E  3001               	movlw	1
 15297     153F                     u3235:
 15298     153F  35A6               	lslf	__Umul8_16@word_mpld,f
 15299     1540  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15300     1541  0B89               	decfsz	9,f
 15301     1542  2D3F               	goto	u3235
 15302     1543  1003               	clrc
 15303     1544  0CA8               	rrf	__Umul8_16@multiplier,f
 15304     1545                     l3377:
 15305     1545  0828               	movf	__Umul8_16@multiplier,w
 15306     1546  1D03               	btfss	3,2
 15307     1547  2D49               	goto	u3241
 15308     1548  2D4A               	goto	u3240
 15309     1549                     u3241:
 15310     1549  2D36               	goto	l3373
 15311     154A                     u3240:
 15312     154A                     l3379:
 15313     154A  0825               	movf	__Umul8_16@product+1,w
 15314     154B  00A1               	movwf	?__Umul8_16+1
 15315     154C  0824               	movf	__Umul8_16@product,w
 15316     154D  00A0               	movwf	?__Umul8_16
 15317     154E                     l1214:
 15318     154E  0008               	return
 15319     154F                     __end_of__Umul8_16:
 15320                           
 15321                           	psect	text46
 15322     13CB                     __ptext46:	
 15323 ;; *************** function _SYSTEM_Initialize *****************
 15324 ;; Defined at:
 15325 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15326 ;; Parameters:    Size  Location     Type
 15327 ;;		None
 15328 ;; Auto vars:     Size  Location     Type
 15329 ;;		None
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  1    wreg      void 
 15332 ;; Registers used:
 15333 ;;		wreg, status,2, status,0, pclath, cstack
 15334 ;; Tracked objects:
 15335 ;;		On entry : 0/0
 15336 ;;		On exit  : 0/0
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;Total ram usage:        0 bytes
 15344 ;; Hardware stack levels used: 1
 15345 ;; Hardware stack levels required when called: 3
 15346 ;; This function calls:
 15347 ;;		_OSCILLATOR_Initialize
 15348 ;;		_PIN_MANAGER_Initialize
 15349 ;;		_PMD_Initialize
 15350 ;; This function is called by:
 15351 ;;		_main
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355     13CB                     _SYSTEM_Initialize:	
 15356                           ;psect for function _SYSTEM_Initialize
 15357                           
 15358     13CB                     l3383:	
 15359                           ;incstack = 0
 15360                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15361                           
 15362                           
 15363                           ;mcc.c: 52: PMD_Initialize();
 15364     13CB  3193  23C1  3193   	fcall	_PMD_Initialize
 15365     13CE                     l3385:
 15366                           
 15367                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 15368     13CE  3195  254F  3193   	fcall	_PIN_MANAGER_Initialize
 15369     13D1                     l3387:
 15370                           
 15371                           ;mcc.c: 54: OSCILLATOR_Initialize();
 15372     13D1  3193  2394  3193   	fcall	_OSCILLATOR_Initialize
 15373     13D4                     l35:
 15374     13D4  0008               	return
 15375     13D5                     __end_of_SYSTEM_Initialize:
 15376                           
 15377                           	psect	text47
 15378     13C1                     __ptext47:	
 15379 ;; *************** function _PMD_Initialize *****************
 15380 ;; Defined at:
 15381 ;;		line 71 in file "mcc_generated_files/mcc.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;		None
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;		None
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  1    wreg      void 
 15388 ;; Registers used:
 15389 ;;		status,2
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;Total ram usage:        0 bytes
 15400 ;; Hardware stack levels used: 1
 15401 ;; Hardware stack levels required when called: 2
 15402 ;; This function calls:
 15403 ;;		Nothing
 15404 ;; This function is called by:
 15405 ;;		_SYSTEM_Initialize
 15406 ;; This function uses a non-reentrant model
 15407 ;;
 15408                           
 15409     13C1                     _PMD_Initialize:	
 15410                           ;psect for function _PMD_Initialize
 15411                           
 15412     13C1                     l3051:	
 15413                           ;incstack = 0
 15414                           ; Regs used in _PMD_Initialize: [status,2]
 15415                           
 15416                           
 15417                           ;mcc.c: 74: PMD0 = 0x00;
 15418     13C1  014F               	movlb	15	; select bank15
 15419     13C2  0196               	clrf	22	;volatile
 15420                           
 15421                           ;mcc.c: 76: PMD1 = 0x00;
 15422     13C3  0197               	clrf	23	;volatile
 15423                           
 15424                           ;mcc.c: 78: PMD2 = 0x00;
 15425     13C4  0198               	clrf	24	;volatile
 15426                           
 15427                           ;mcc.c: 80: PMD3 = 0x00;
 15428     13C5  0199               	clrf	25	;volatile
 15429                           
 15430                           ;mcc.c: 82: PMD4 = 0x00;
 15431     13C6  019A               	clrf	26	;volatile
 15432                           
 15433                           ;mcc.c: 84: PMD5 = 0x00;
 15434     13C7  019B               	clrf	27	;volatile
 15435                           
 15436                           ;mcc.c: 86: PMD6 = 0x00;
 15437     13C8  019C               	clrf	28	;volatile
 15438                           
 15439                           ;mcc.c: 88: PMD7 = 0x00;
 15440     13C9  019D               	clrf	29	;volatile
 15441     13CA                     l41:
 15442     13CA  0008               	return
 15443     13CB                     __end_of_PMD_Initialize:
 15444                           
 15445                           	psect	text48
 15446     154F                     __ptext48:	
 15447 ;; *************** function _PIN_MANAGER_Initialize *****************
 15448 ;; Defined at:
 15449 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15450 ;; Parameters:    Size  Location     Type
 15451 ;;		None
 15452 ;; Auto vars:     Size  Location     Type
 15453 ;;		None
 15454 ;; Return value:  Size  Location     Type
 15455 ;;                  1    wreg      void 
 15456 ;; Registers used:
 15457 ;;		wreg, status,2
 15458 ;; Tracked objects:
 15459 ;;		On entry : 0/0
 15460 ;;		On exit  : 0/0
 15461 ;;		Unchanged: 0/0
 15462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15467 ;;Total ram usage:        0 bytes
 15468 ;; Hardware stack levels used: 1
 15469 ;; Hardware stack levels required when called: 2
 15470 ;; This function calls:
 15471 ;;		Nothing
 15472 ;; This function is called by:
 15473 ;;		_SYSTEM_Initialize
 15474 ;; This function uses a non-reentrant model
 15475 ;;
 15476                           
 15477     154F                     _PIN_MANAGER_Initialize:	
 15478                           ;psect for function _PIN_MANAGER_Initialize
 15479                           
 15480     154F                     l3053:	
 15481                           ;incstack = 0
 15482                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 15483                           
 15484                           
 15485                           ;pin_manager.c: 60: LATA = 0x00;
 15486     154F  0140               	movlb	0	; select bank0
 15487     1550  0198               	clrf	24	;volatile
 15488                           
 15489                           ;pin_manager.c: 61: LATC = 0x00;
 15490     1551  019A               	clrf	26	;volatile
 15491     1552                     l3055:
 15492                           
 15493                           ;pin_manager.c: 66: TRISA = 0x3F;
 15494     1552  303F               	movlw	63
 15495     1553  0092               	movwf	18	;volatile
 15496     1554                     l3057:
 15497                           
 15498                           ;pin_manager.c: 67: TRISC = 0x13;
 15499     1554  3013               	movlw	19
 15500     1555  0094               	movwf	20	;volatile
 15501     1556                     l3059:
 15502                           
 15503                           ;pin_manager.c: 72: ANSELC = 0x2C;
 15504     1556  302C               	movlw	44
 15505     1557  017E               	movlb	62	; select bank62
 15506     1558  00CE               	movwf	78	;volatile
 15507     1559                     l3061:
 15508                           
 15509                           ;pin_manager.c: 73: ANSELA = 0x37;
 15510     1559  3037               	movlw	55
 15511     155A  00B8               	movwf	56	;volatile
 15512                           
 15513                           ;pin_manager.c: 78: WPUA = 0x00;
 15514     155B  01B9               	clrf	57	;volatile
 15515                           
 15516                           ;pin_manager.c: 79: WPUC = 0x00;
 15517     155C  01CF               	clrf	79	;volatile
 15518                           
 15519                           ;pin_manager.c: 84: ODCONA = 0x00;
 15520     155D  01BA               	clrf	58	;volatile
 15521                           
 15522                           ;pin_manager.c: 85: ODCONC = 0x00;
 15523     155E  01D0               	clrf	80	;volatile
 15524     155F                     l3063:
 15525                           
 15526                           ;pin_manager.c: 90: SLRCONA = 0x37;
 15527     155F  3037               	movlw	55
 15528     1560  00BB               	movwf	59	;volatile
 15529     1561                     l3065:
 15530                           
 15531                           ;pin_manager.c: 91: SLRCONC = 0x3F;
 15532     1561  303F               	movlw	63
 15533     1562  00D1               	movwf	81	;volatile
 15534     1563                     l3067:
 15535                           
 15536                           ;pin_manager.c: 96: INLVLA = 0x3F;
 15537     1563  303F               	movlw	63
 15538     1564  00BC               	movwf	60	;volatile
 15539     1565                     l3069:
 15540                           
 15541                           ;pin_manager.c: 97: INLVLC = 0x3F;
 15542     1565  303F               	movlw	63
 15543     1566  00D2               	movwf	82	;volatile
 15544     1567                     l3071:
 15545                           
 15546                           ;pin_manager.c: 101: RC0PPS = 0x13;
 15547     1567  3013               	movlw	19
 15548     1568  00A0               	movwf	32	;volatile
 15549     1569                     l3073:
 15550                           
 15551                           ;pin_manager.c: 102: SSP1CLKPPS = 0x10;
 15552     1569  3010               	movlw	16
 15553     156A  017D               	movlb	61	; select bank61
 15554     156B  00C5               	movwf	69	;volatile
 15555     156C                     l3075:
 15556                           
 15557                           ;pin_manager.c: 103: RC3PPS = 0x0F;
 15558     156C  300F               	movlw	15
 15559     156D  017E               	movlb	62	; select bank62
 15560     156E  00A3               	movwf	35	;volatile
 15561     156F                     l3077:
 15562                           
 15563                           ;pin_manager.c: 104: RC1PPS = 0x14;
 15564     156F  3014               	movlw	20
 15565     1570  00A1               	movwf	33	;volatile
 15566     1571                     l3079:
 15567                           
 15568                           ;pin_manager.c: 105: RC5PPS = 0x0F;
 15569     1571  300F               	movlw	15
 15570     1572  00A5               	movwf	37	;volatile
 15571     1573                     l3081:
 15572                           
 15573                           ;pin_manager.c: 106: SSP1DATPPS = 0x11;
 15574     1573  3011               	movlw	17
 15575     1574  017D               	movlb	61	; select bank61
 15576     1575  00C6               	movwf	70	;volatile
 15577     1576                     l3083:
 15578                           
 15579                           ;pin_manager.c: 107: RX1DTPPS = 0x14;
 15580     1576  3014               	movlw	20
 15581     1577  00CB               	movwf	75	;volatile
 15582     1578                     l86:
 15583     1578  0008               	return
 15584     1579                     __end_of_PIN_MANAGER_Initialize:
 15585                           
 15586                           	psect	text49
 15587     1394                     __ptext49:	
 15588 ;; *************** function _OSCILLATOR_Initialize *****************
 15589 ;; Defined at:
 15590 ;;		line 57 in file "mcc_generated_files/mcc.c"
 15591 ;; Parameters:    Size  Location     Type
 15592 ;;		None
 15593 ;; Auto vars:     Size  Location     Type
 15594 ;;		None
 15595 ;; Return value:  Size  Location     Type
 15596 ;;                  1    wreg      void 
 15597 ;; Registers used:
 15598 ;;		wreg, status,2
 15599 ;; Tracked objects:
 15600 ;;		On entry : 0/0
 15601 ;;		On exit  : 0/0
 15602 ;;		Unchanged: 0/0
 15603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15608 ;;Total ram usage:        0 bytes
 15609 ;; Hardware stack levels used: 1
 15610 ;; Hardware stack levels required when called: 2
 15611 ;; This function calls:
 15612 ;;		Nothing
 15613 ;; This function is called by:
 15614 ;;		_SYSTEM_Initialize
 15615 ;; This function uses a non-reentrant model
 15616 ;;
 15617                           
 15618     1394                     _OSCILLATOR_Initialize:	
 15619                           ;psect for function _OSCILLATOR_Initialize
 15620                           
 15621     1394                     l3085:	
 15622                           ;incstack = 0
 15623                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15624                           
 15625                           
 15626                           ;mcc.c: 60: OSCCON1 = 0x62;
 15627     1394  3062               	movlw	98
 15628     1395  0151               	movlb	17	; select bank17
 15629     1396  008D               	movwf	13	;volatile
 15630     1397                     l3087:
 15631                           
 15632                           ;mcc.c: 62: OSCCON3 = 0x00;
 15633     1397  018F               	clrf	15	;volatile
 15634     1398                     l3089:
 15635                           
 15636                           ;mcc.c: 64: OSCEN = 0x00;
 15637     1398  0191               	clrf	17	;volatile
 15638                           
 15639                           ;mcc.c: 66: OSCFRQ = 0x02;
 15640     1399  3002               	movlw	2
 15641     139A  0093               	movwf	19	;volatile
 15642     139B                     l3091:
 15643                           
 15644                           ;mcc.c: 68: OSCTUNE = 0x00;
 15645     139B  0192               	clrf	18	;volatile
 15646     139C                     l38:
 15647     139C  0008               	return
 15648     139D                     __end_of_OSCILLATOR_Initialize:
 15649                           
 15650                           	psect	text50
 15651     0002                     __ptext50:	
 15652 ;; *************** function _Enable_Global_Interrupt *****************
 15653 ;; Defined at:
 15654 ;;		line 31 in file "myisr.c"
 15655 ;; Parameters:    Size  Location     Type
 15656 ;;		None
 15657 ;; Auto vars:     Size  Location     Type
 15658 ;;		None
 15659 ;; Return value:  Size  Location     Type
 15660 ;;                  1    wreg      void 
 15661 ;; Registers used:
 15662 ;;		None
 15663 ;; Tracked objects:
 15664 ;;		On entry : 0/0
 15665 ;;		On exit  : 0/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15672 ;;Total ram usage:        0 bytes
 15673 ;; Hardware stack levels used: 1
 15674 ;; Hardware stack levels required when called: 2
 15675 ;; This function calls:
 15676 ;;		Nothing
 15677 ;; This function is called by:
 15678 ;;		_main
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           
 15682     0002                     _Enable_Global_Interrupt:	
 15683                           ;psect for function _Enable_Global_Interrupt
 15684                           
 15685     0002                     l3579:	
 15686                           ;incstack = 0
 15687                           ; Regs used in _Enable_Global_Interrupt: []
 15688                           
 15689                           
 15690                           ;myisr.c: 32: GIE=0;
 15691     0002  138B               	bcf	11,7	;volatile
 15692     0003                     l317:
 15693     0003  0008               	return
 15694     0004                     __end_of_Enable_Global_Interrupt:
 15695                           
 15696                           	psect	text51
 15697     0800                     __ptext51:	
 15698 ;; *************** function _Disable_Global_Interrupt *****************
 15699 ;; Defined at:
 15700 ;;		line 34 in file "myisr.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      void 
 15707 ;; Registers used:
 15708 ;;		None
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used: 1
 15720 ;; Hardware stack levels required when called: 2
 15721 ;; This function calls:
 15722 ;;		Nothing
 15723 ;; This function is called by:
 15724 ;;		_main
 15725 ;; This function uses a non-reentrant model
 15726 ;;
 15727                           
 15728     0800                     _Disable_Global_Interrupt:	
 15729                           ;psect for function _Disable_Global_Interrupt
 15730                           
 15731     0800                     l3581:	
 15732                           ;incstack = 0
 15733                           ; Regs used in _Disable_Global_Interrupt: []
 15734                           
 15735                           
 15736                           ;myisr.c: 35: GIE=1;
 15737     0800  178B               	bsf	11,7	;volatile
 15738     0801                     l320:
 15739     0801  0008               	return
 15740     0802                     __end_of_Disable_Global_Interrupt:
 15741                           
 15742                           	psect	intentry
 15743     0004                     __pintentry:	
 15744 ;; *************** function _INTERRUPT_InterruptManager *****************
 15745 ;; Defined at:
 15746 ;;		line 48 in file "uart.c"
 15747 ;; Parameters:    Size  Location     Type
 15748 ;;		None
 15749 ;; Auto vars:     Size  Location     Type
 15750 ;;		None
 15751 ;; Return value:  Size  Location     Type
 15752 ;;                  1    wreg      void 
 15753 ;; Registers used:
 15754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15755 ;; Tracked objects:
 15756 ;;		On entry : 0/0
 15757 ;;		On exit  : 0/0
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15764 ;;Total ram usage:        4 bytes
 15765 ;; Hardware stack levels used: 1
 15766 ;; Hardware stack levels required when called: 1
 15767 ;; This function calls:
 15768 ;;		_i2c_slave_interrupt
 15769 ;;		i1_get_ticks
 15770 ;; This function is called by:
 15771 ;;		Interrupt level 1
 15772 ;; This function uses a non-reentrant model
 15773 ;;
 15774                           
 15775     0004                     _INTERRUPT_InterruptManager:
 15776                           
 15777                           ;incstack = 0
 15778     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15779                           
 15780                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15781     0005  3180               	pagesel	$
 15782     0006                     i1l4025:
 15783                           
 15784                           ;uart.c: 53: if (PIR0bits.TMR0IF) {
 15785     0006  014E               	movlb	14	; select bank14
 15786     0007  1E8C               	btfss	12,5	;volatile
 15787     0008  280A               	goto	u401_21
 15788     0009  280B               	goto	u401_20
 15789     000A                     u401_21:
 15790     000A  283A               	goto	i1l4039
 15791     000B                     u401_20:
 15792     000B                     i1l4027:
 15793                           
 15794                           ;uart.c: 54: PIR0bits.TMR0IF = 0;
 15795     000B  128C               	bcf	12,5	;volatile
 15796     000C                     i1l4029:
 15797                           
 15798                           ;uart.c: 55: ticks++;
 15799     000C  3001               	movlw	1
 15800     000D  07F8               	addwf	_ticks,f	;volatile
 15801     000E  3000               	movlw	0
 15802     000F  3DF9               	addwfc	_ticks+1,f	;volatile
 15803     0010  3000               	movlw	0
 15804     0011  3DFA               	addwfc	_ticks+2,f	;volatile
 15805     0012  3000               	movlw	0
 15806     0013  3DFB               	addwfc	_ticks+3,f	;volatile
 15807     0014                     i1l4031:
 15808                           
 15809                           ;uart.c: 58: if((uart_rx_states == BUSY);uart.c: 59: &&;uart.c: 60: (ticks - uart_rx_tic
      +                          ks > 100))
 15810     0014  0141               	movlb	1	; select bank1
 15811     0015  036E               	decf	_uart_rx_states^(0+128),w	;volatile
 15812     0016  1D03               	btfss	3,2
 15813     0017  2819               	goto	u402_21
 15814     0018  281A               	goto	u402_20
 15815     0019                     u402_21:
 15816     0019  283A               	goto	i1l4039
 15817     001A                     u402_20:
 15818     001A                     i1l4033:
 15819     001A  0869               	movf	_uart_rx_ticks^(0+128),w	;volatile
 15820     001B  0278               	subwf	_ticks,w	;volatile
 15821     001C  00F4               	movwf	??_INTERRUPT_InterruptManager
 15822     001D  086A               	movf	(_uart_rx_ticks+1)^(0+128),w	;volatile
 15823     001E  3B79               	subwfb	_ticks+1,w	;volatile
 15824     001F  00F5               	movwf	??_INTERRUPT_InterruptManager+1
 15825     0020  086B               	movf	(_uart_rx_ticks+2)^(0+128),w	;volatile
 15826     0021  3B7A               	subwfb	_ticks+2,w	;volatile
 15827     0022  00F6               	movwf	??_INTERRUPT_InterruptManager+2
 15828     0023  086C               	movf	(_uart_rx_ticks+3)^(0+128),w	;volatile
 15829     0024  3B7B               	subwfb	_ticks+3,w	;volatile
 15830     0025  00F7               	movwf	??_INTERRUPT_InterruptManager+3
 15831     0026  0877               	movf	??_INTERRUPT_InterruptManager+3,w
 15832     0027  1D03               	btfss	3,2
 15833     0028  2835               	goto	u403_20
 15834     0029  0876               	movf	??_INTERRUPT_InterruptManager+2,w
 15835     002A  1D03               	btfss	3,2
 15836     002B  2835               	goto	u403_20
 15837     002C  0875               	movf	??_INTERRUPT_InterruptManager+1,w
 15838     002D  1D03               	btfss	3,2
 15839     002E  2835               	goto	u403_20
 15840     002F  3065               	movlw	101
 15841     0030  0274               	subwf	??_INTERRUPT_InterruptManager,w
 15842     0031  1C03               	btfss	3,0
 15843     0032  2834               	goto	u403_21
 15844     0033  2835               	goto	u403_20
 15845     0034                     u403_21:
 15846     0034  283A               	goto	i1l4039
 15847     0035                     u403_20:
 15848     0035                     i1l4035:
 15849                           
 15850                           ;uart.c: 61: {;uart.c: 62: uart_rx_states = IDLE;
 15851     0035  0141               	movlb	1	; select bank1
 15852     0036  01EE               	clrf	_uart_rx_states^(0+128)	;volatile
 15853     0037                     i1l4037:
 15854                           
 15855                           ;uart.c: 63: uart_rx_package_event = 1;
 15856     0037  3001               	movlw	1
 15857     0038  0142               	movlb	2	; select bank2
 15858     0039  00E3               	movwf	_uart_rx_package_event^(0+256)	;volatile
 15859     003A                     i1l4039:
 15860                           
 15861                           ;uart.c: 64: };uart.c: 66: };uart.c: 69: if (PIR3bits.SSP1IF) {
 15862     003A  014E               	movlb	14	; select bank14
 15863     003B  1C0F               	btfss	15,0	;volatile
 15864     003C  283E               	goto	u404_21
 15865     003D  283F               	goto	u404_20
 15866     003E                     u404_21:
 15867     003E  2843               	goto	i1l4045
 15868     003F                     u404_20:
 15869     003F                     i1l4041:
 15870                           
 15871                           ;uart.c: 70: PIR3bits.SSP1IF = 0;
 15872     003F  100F               	bcf	15,0	;volatile
 15873     0040                     i1l4043:
 15874                           
 15875                           ;uart.c: 72: i2c_slave_interrupt();
 15876     0040  3196  26A0  3180   	fcall	_i2c_slave_interrupt
 15877     0043                     i1l4045:
 15878                           
 15879                           ;uart.c: 73: };uart.c: 79: if (PIR3bits.RC1IF){
 15880     0043  014E               	movlb	14	; select bank14
 15881     0044  1E8F               	btfss	15,5	;volatile
 15882     0045  2847               	goto	u405_21
 15883     0046  2848               	goto	u405_20
 15884     0047                     u405_21:
 15885     0047  2865               	goto	i1l470
 15886     0048                     u405_20:
 15887     0048                     i1l4047:
 15888                           
 15889                           ;uart.c: 81: uart_rx_ticks = get_ticks();
 15890     0048  3193  238B  3180   	fcall	i1_get_ticks
 15891     004B  0873               	movf	?i1_get_ticks+3,w
 15892     004C  0141               	movlb	1	; select bank1
 15893     004D  00EC               	movwf	(_uart_rx_ticks+3)^(0+128)	;volatile
 15894     004E  0872               	movf	?i1_get_ticks+2,w
 15895     004F  00EB               	movwf	(_uart_rx_ticks+2)^(0+128)	;volatile
 15896     0050  0871               	movf	?i1_get_ticks+1,w
 15897     0051  00EA               	movwf	(_uart_rx_ticks+1)^(0+128)	;volatile
 15898     0052  0870               	movf	?i1_get_ticks,w
 15899     0053  00E9               	movwf	_uart_rx_ticks^(0+128)	;volatile
 15900     0054                     i1l4049:
 15901                           
 15902                           ;uart.c: 82: uart_rx_states = BUSY;
 15903     0054  3001               	movlw	1
 15904     0055  00EE               	movwf	_uart_rx_states^(0+128)	;volatile
 15905     0056                     i1l4051:
 15906                           
 15907                           ;uart.c: 83: rxbuffer[rxbuffer_index] = RC1REG;
 15908     0056  087D               	movf	_rxbuffer_index,w
 15909     0057  3EA0               	addlw	(low (_rxbuffer| (0+256)))& (0+255)
 15910     0058  0086               	movwf	6
 15911     0059  3001               	movlw	1	; select bank3/4
 15912     005A  0087               	movwf	7
 15913     005B  0142               	movlb	2	; select bank2
 15914     005C  0819               	movf	25,w	;volatile
 15915     005D  0081               	movwf	1
 15916     005E                     i1l4053:
 15917                           
 15918                           ;uart.c: 84: rxbuffer_index++;
 15919     005E  3001               	movlw	1
 15920     005F  00F4               	movwf	??_INTERRUPT_InterruptManager
 15921     0060  0874               	movf	??_INTERRUPT_InterruptManager,w
 15922     0061  07FD               	addwf	_rxbuffer_index,f	;volatile
 15923     0062                     i1l4055:
 15924                           
 15925                           ;uart.c: 85: rxbuffer_index = rxbuffer_index % 32;
 15926     0062  087D               	movf	_rxbuffer_index,w	;volatile
 15927     0063  391F               	andlw	31
 15928     0064  00FD               	movwf	_rxbuffer_index	;volatile
 15929     0065                     i1l470:
 15930     0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15931     0066  0009               	retfie
 15932     0067                     __end_of_INTERRUPT_InterruptManager:
 15933                           
 15934                           	psect	text53
 15935     138B                     __ptext53:	
 15936 ;; *************** function i1_get_ticks *****************
 15937 ;; Defined at:
 15938 ;;		line 8 in file "myisr.c"
 15939 ;; Parameters:    Size  Location     Type
 15940 ;;		None
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;		None
 15943 ;; Return value:  Size  Location     Type
 15944 ;;                  4    0[COMMON] unsigned long 
 15945 ;; Registers used:
 15946 ;;		wreg
 15947 ;; Tracked objects:
 15948 ;;		On entry : 0/0
 15949 ;;		On exit  : 0/0
 15950 ;;		Unchanged: 0/0
 15951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15955 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15956 ;;Total ram usage:        4 bytes
 15957 ;; Hardware stack levels used: 1
 15958 ;; This function calls:
 15959 ;;		Nothing
 15960 ;; This function is called by:
 15961 ;;		_INTERRUPT_InterruptManager
 15962 ;; This function uses a non-reentrant model
 15963 ;;
 15964                           
 15965     138B                     i1_get_ticks:	
 15966                           ;psect for function i1_get_ticks
 15967                           
 15968     138B                     i1l3817:	
 15969                           ;incstack = 0
 15970                           ; Regs used in i1_get_ticks: [wreg]
 15971                           
 15972                           
 15973                           ;myisr.c: 9: return ticks;
 15974     138B  087B               	movf	_ticks+3,w	;volatile
 15975     138C  00F3               	movwf	?i1_get_ticks+3
 15976     138D  087A               	movf	_ticks+2,w	;volatile
 15977     138E  00F2               	movwf	?i1_get_ticks+2
 15978     138F  0879               	movf	_ticks+1,w	;volatile
 15979     1390  00F1               	movwf	?i1_get_ticks+1
 15980     1391  0878               	movf	_ticks,w	;volatile
 15981     1392  00F0               	movwf	?i1_get_ticks
 15982     1393                     i1l306:
 15983     1393  0008               	return
 15984     1394                     __end_ofi1_get_ticks:
 15985                           
 15986                           	psect	text54
 15987     16A0                     __ptext54:	
 15988 ;; *************** function _i2c_slave_interrupt *****************
 15989 ;; Defined at:
 15990 ;;		line 65 in file "i2c_slave.c"
 15991 ;; Parameters:    Size  Location     Type
 15992 ;;		None
 15993 ;; Auto vars:     Size  Location     Type
 15994 ;;  value           1    3[COMMON] unsigned char 
 15995 ;;  isNack          1    2[COMMON] char 
 15996 ;;  isRead          1    1[COMMON] unsigned char 
 15997 ;; Return value:  Size  Location     Type
 15998 ;;                  1    wreg      void 
 15999 ;; Registers used:
 16000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 16001 ;; Tracked objects:
 16002 ;;		On entry : 0/0
 16003 ;;		On exit  : 0/0
 16004 ;;		Unchanged: 0/0
 16005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16007 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16010 ;;Total ram usage:        4 bytes
 16011 ;; Hardware stack levels used: 1
 16012 ;; This function calls:
 16013 ;;		Nothing
 16014 ;; This function is called by:
 16015 ;;		_INTERRUPT_InterruptManager
 16016 ;; This function uses a non-reentrant model
 16017 ;;
 16018                           
 16019     16A0                     _i2c_slave_interrupt:	
 16020                           ;psect for function _i2c_slave_interrupt
 16021                           
 16022     16A0                     i1l3607:	
 16023                           ;incstack = 0
 16024                           ; Regs used in _i2c_slave_interrupt: [wreg-fsr1h+status,2+status,0]
 16025                           
 16026                           
 16027                           ;i2c_slave.c: 68: uint8_t isRead = SSP1STATbits.R_nW;
 16028     16A0  3000               	movlw	0
 16029     16A1  0143               	movlb	3	; select bank3
 16030     16A2  190F               	btfsc	15,2	;volatile
 16031     16A3  3001               	movlw	1
 16032     16A4  00F1               	movwf	i2c_slave_interrupt@isRead
 16033                           
 16034                           ;i2c_slave.c: 69: int8_t isNack = SSP1CON2bits.ACKSTAT;
 16035     16A5  3000               	movlw	0
 16036     16A6  1B11               	btfsc	17,6	;volatile
 16037     16A7  3001               	movlw	1
 16038     16A8  00F2               	movwf	i2c_slave_interrupt@isNack
 16039     16A9                     i1l3609:
 16040                           
 16041                           ;i2c_slave.c: 72: if (isNack) {
 16042     16A9  0872               	movf	i2c_slave_interrupt@isNack,w
 16043     16AA  1903               	btfsc	3,2
 16044     16AB  2EAD               	goto	u345_21
 16045     16AC  2EAE               	goto	u345_20
 16046     16AD                     u345_21:
 16047     16AD  2EB1               	goto	i1l3615
 16048     16AE                     u345_20:
 16049     16AE                     i1l3611:
 16050                           
 16051                           ;i2c_slave.c: 73: currentState = 0;
 16052     16AE  0141               	movlb	1	; select bank1
 16053     16AF  01ED               	clrf	_currentState^(0+128)
 16054     16B0  2EF2               	goto	i1l250
 16055     16B1                     i1l3615:
 16056                           
 16057                           ;i2c_slave.c: 75: };i2c_slave.c: 78: if (isRead) {
 16058     16B1  0871               	movf	i2c_slave_interrupt@isRead,w
 16059     16B2  1903               	btfsc	3,2
 16060     16B3  2EB5               	goto	u346_21
 16061     16B4  2EB6               	goto	u346_20
 16062     16B5                     u346_21:
 16063     16B5  2EC9               	goto	i1l3625
 16064     16B6                     u346_20:
 16065     16B6                     i1l3617:
 16066                           
 16067                           ;i2c_slave.c: 80: SSP1BUF = slaveData[currentRegister];
 16068     16B6  087C               	movf	_currentRegister,w
 16069     16B7  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 16070     16B8  0086               	movwf	6
 16071     16B9  3002               	movlw	2	; select bank4/5
 16072     16BA  0087               	movwf	7
 16073     16BB  0801               	movf	1,w
 16074     16BC  008C               	movwf	12	;volatile
 16075     16BD                     i1l3619:
 16076                           
 16077                           ;i2c_slave.c: 82: currentRegister++;
 16078     16BD  3001               	movlw	1
 16079     16BE  00F0               	movwf	??_i2c_slave_interrupt
 16080     16BF  0870               	movf	??_i2c_slave_interrupt,w
 16081     16C0  07FC               	addwf	_currentRegister,f
 16082     16C1                     i1l3621:
 16083                           
 16084                           ;i2c_slave.c: 84: if (currentRegister >= 64u) {
 16085     16C1  3040               	movlw	64
 16086     16C2  027C               	subwf	_currentRegister,w
 16087     16C3  1C03               	skipc
 16088     16C4  2EC6               	goto	u347_21
 16089     16C5  2EC7               	goto	u347_20
 16090     16C6                     u347_21:
 16091     16C6  2EF0               	goto	i1l253
 16092     16C7                     u347_20:
 16093     16C7                     i1l3623:
 16094                           
 16095                           ;i2c_slave.c: 85: currentRegister = 0;
 16096     16C7  01FC               	clrf	_currentRegister
 16097     16C8  2EF0               	goto	i1l253
 16098     16C9                     i1l3625:
 16099                           
 16100                           ;i2c_slave.c: 90: uint8_t value = SSP1BUF;
 16101     16C9  080C               	movf	12,w	;volatile
 16102     16CA  00F3               	movwf	i2c_slave_interrupt@value
 16103                           
 16104                           ;i2c_slave.c: 92: switch (currentState) {
 16105     16CB  2EE4               	goto	i1l3639
 16106     16CC                     i1l255:	
 16107                           ;i2c_slave.c: 94: case 0:
 16108                           
 16109                           
 16110                           ;i2c_slave.c: 95: currentState = 1;
 16111     16CC  01ED               	clrf	_currentState^(0+128)
 16112     16CD  0AED               	incf	_currentState^(0+128),f
 16113                           
 16114                           ;i2c_slave.c: 96: break;
 16115     16CE  2EF0               	goto	i1l253
 16116     16CF                     i1l3627:
 16117                           
 16118                           ;i2c_slave.c: 99: currentRegister = value % 64u;
 16119     16CF  0873               	movf	i2c_slave_interrupt@value,w
 16120     16D0  393F               	andlw	63
 16121     16D1  00FC               	movwf	_currentRegister
 16122     16D2                     i1l3629:
 16123                           
 16124                           ;i2c_slave.c: 100: currentState = 2;
 16125     16D2  3002               	movlw	2
 16126     16D3  00ED               	movwf	_currentState^(0+128)
 16127                           
 16128                           ;i2c_slave.c: 101: break;
 16129     16D4  2EF0               	goto	i1l253
 16130     16D5                     i1l3631:
 16131                           
 16132                           ;i2c_slave.c: 105: if (currentRegister < 57) {
 16133     16D5  3039               	movlw	57
 16134     16D6  027C               	subwf	_currentRegister,w
 16135     16D7  1803               	skipnc
 16136     16D8  2EDA               	goto	u348_21
 16137     16D9  2EDB               	goto	u348_20
 16138     16DA                     u348_21:
 16139     16DA  2EE2               	goto	i1l3635
 16140     16DB                     u348_20:
 16141     16DB                     i1l3633:
 16142                           
 16143                           ;i2c_slave.c: 106: slaveData[currentRegister] = value;
 16144     16DB  087C               	movf	_currentRegister,w
 16145     16DC  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 16146     16DD  0086               	movwf	6
 16147     16DE  3002               	movlw	2	; select bank4/5
 16148     16DF  0087               	movwf	7
 16149     16E0  0873               	movf	i2c_slave_interrupt@value,w
 16150     16E1  0081               	movwf	1
 16151     16E2                     i1l3635:
 16152                           
 16153                           ;i2c_slave.c: 107: };i2c_slave.c: 108: currentState = 0;
 16154     16E2  01ED               	clrf	_currentState^(0+128)
 16155                           
 16156                           ;i2c_slave.c: 109: break;
 16157     16E3  2EF0               	goto	i1l253
 16158     16E4                     i1l3639:
 16159     16E4  0141               	movlb	1	; select bank1
 16160     16E5  086D               	movf	_currentState^(0+128),w
 16161                           
 16162                           ; Switch size 1, requested type "simple"
 16163                           ; Number of cases is 3, Range of values is 0 to 2
 16164                           ; switch strategies available:
 16165                           ; Name         Instructions Cycles
 16166                           ; simple_byte           10     6 (average)
 16167                           ; direct_byte           12     6 (fixed)
 16168                           ; jumptable            260     6 (fixed)
 16169                           ;	Chosen strategy is simple_byte
 16170     16E6  3A00               	xorlw	0	; case 0
 16171     16E7  1903               	skipnz
 16172     16E8  2ECC               	goto	i1l255
 16173     16E9  3A01               	xorlw	1	; case 1
 16174     16EA  1903               	skipnz
 16175     16EB  2ECF               	goto	i1l3627
 16176     16EC  3A03               	xorlw	3	; case 2
 16177     16ED  1903               	skipnz
 16178     16EE  2ED5               	goto	i1l3631
 16179     16EF  2EF0               	goto	i1l253
 16180     16F0                     i1l253:
 16181                           
 16182                           ;i2c_slave.c: 114: };i2c_slave.c: 117: SSP1CON1bits.CKP = 1;
 16183     16F0  0143               	movlb	3	; select bank3
 16184     16F1  1610               	bsf	16,4	;volatile
 16185     16F2                     i1l250:
 16186     16F2  0008               	return
 16187     16F3                     __end_of_i2c_slave_interrupt:
 16188     007E                     btemp	set	126	;btemp
 16189     007E                     int$flags	set	126
 16190     007E                     wtemp0	set	126
 16191                           
 16192                           	psect	idloc
 16193                           
 16194                           ;Config register IDLOC0 @ 0x8000
 16195                           ;	unspecified, using default values
 16196     8000                     	org	32768
 16197     8000  3FFF               	dw	16383
 16198                           
 16199                           ;Config register IDLOC1 @ 0x8001
 16200                           ;	unspecified, using default values
 16201     8001                     	org	32769
 16202     8001  3FFF               	dw	16383
 16203                           
 16204                           ;Config register IDLOC2 @ 0x8002
 16205                           ;	unspecified, using default values
 16206     8002                     	org	32770
 16207     8002  3FFF               	dw	16383
 16208                           
 16209                           ;Config register IDLOC3 @ 0x8003
 16210                           ;	unspecified, using default values
 16211     8003                     	org	32771
 16212     8003  3FFF               	dw	16383
 16213                           
 16214                           	psect	config
 16215                           
 16216                           ;Config register CONFIG1 @ 0x8007
 16217                           ;	External Oscillator mode selection bits
 16218                           ;	FEXTOSC = OFF, Oscillator not enabled
 16219                           ;	Power-up default value for COSC bits
 16220                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16221                           ;	Clock Out Enable bit
 16222                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16223                           ;	Clock Switch Enable bit
 16224                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
 16225                           ;	Fail-Safe Clock Monitor Enable bit
 16226                           ;	FCMEN = OFF, FSCM timer disabled
 16227     8007                     	org	32775
 16228     8007  17EC               	dw	6124
 16229                           
 16230                           ;Config register CONFIG2 @ 0x8008
 16231                           ;	Master Clear Enable bit
 16232                           ;	MCLRE = OFF, MCLR pin function is port defined function
 16233                           ;	Power-up Timer Enable bit
 16234                           ;	PWRTS = OFF, PWRT disabled
 16235                           ;	Low-Power BOR enable bit
 16236                           ;	LPBOREN = OFF, ULPBOR disabled
 16237                           ;	Brown-out reset enable bits
 16238                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16239                           ;	Brown-out Reset Voltage Selection
 16240                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 16241                           ;	Zero-cross detect disable
 16242                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 16243                           ;	Peripheral Pin Select one-way control
 16244                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16245                           ;	Stack Overflow/Underflow Reset Enable bit
 16246                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16247     8008                     	org	32776
 16248     8008  3FFE               	dw	16382
 16249                           
 16250                           ;Config register CONFIG3 @ 0x8009
 16251                           ;	WDT Period Select bits
 16252                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16253                           ;	WDT operating mode
 16254                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16255                           ;	WDT Window Select bits
 16256                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16257                           ;	WDT input clock selector
 16258                           ;	WDTCCS = SC, Software Control
 16259     8009                     	org	32777
 16260     8009  3F9F               	dw	16287
 16261                           
 16262                           ;Config register CONFIG4 @ 0x800A
 16263                           ;	Boot Block Size Selection bits
 16264                           ;	BBSIZE = BB512, 512 words boot block size
 16265                           ;	Boot Block Enable bit
 16266                           ;	BBEN = OFF, Boot Block disabled
 16267                           ;	SAF Enable bit
 16268                           ;	SAFEN = OFF, SAF disabled
 16269                           ;	Application Block Write Protection bit
 16270                           ;	WRTAPP = OFF, Application Block not write protected
 16271                           ;	Boot Block Write Protection bit
 16272                           ;	WRTB = OFF, Boot Block not write protected
 16273                           ;	Configuration Register Write Protection bit
 16274                           ;	WRTC = OFF, Configuration Register not write protected
 16275                           ;	Data EEPROM write protection bit
 16276                           ;	WRTD = OFF, Data EEPROM NOT write protected
 16277                           ;	Storage Area Flash Write Protection bit
 16278                           ;	WRTSAF = OFF, SAF not write protected
 16279                           ;	Low Voltage Programming Enable bit
 16280                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16281     800A                     	org	32778
 16282     800A  3FFF               	dw	16383
 16283                           
 16284                           ;Config register CONFIG5 @ 0x800B
 16285                           ;	UserNVM Program memory code protection bit
 16286                           ;	CP = ON, UserNVM code protection enabled
 16287     800B                     	org	32779
 16288     800B  3FFE               	dw	16382

Data Sizes:
    Strings     353
    Constant    72
    Data        32
    BSS         122
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     80      80
    BANK1            80     73      80
    BANK2            80     55      68
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 4
		 -> main@payload_temp(BANK1[4]), main@payload(BANK1[4]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 4
		 -> main@temp(BANK1[4]), main@ph(BANK1[4]), 

    dispatch@b2	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), 

    dispatch@b1	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK2[27]), 

    measurement@value	PTR struct values size(1) Largest target is 4
		 -> main@sensor_value(BANK0[4]), 

    measurement@state	PTR enum E10355 size(1) Largest target is 1
		 -> main@state(BANK2[1]), 

    monitoring_sync@state	PTR enum E10399 size(1) Largest target is 1
		 -> main@state(BANK2[1]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(BANK0[3]), 

    printf$1436	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_31(CODE[17]), STR_30(CODE[17]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_29(CODE[7]), printf@c(BANK0[1]), ?_printf(BANK0[2]), slaveData(BANK4[64]), 
		 -> STR_3(CODE[11]), main@b2_clicked_count(BANK1[1]), main@b1_clicked_count(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_28(CODE[14]), STR_27(CODE[23]), STR_26(CODE[23]), STR_25(CODE[17]), 
		 -> STR_24(CODE[13]), STR_23(CODE[13]), STR_20(CODE[3]), STR_19(CODE[6]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[4]), 
		 -> STR_14(CODE[6]), STR_13(CODE[6]), STR_12(CODE[27]), STR_11(CODE[11]), 
		 -> STR_10(CODE[9]), STR_9(CODE[14]), STR_8(CODE[8]), STR_7(CODE[38]), 
		 -> STR_6(CODE[14]), STR_5(CODE[8]), STR_4(CODE[35]), STR_2(CODE[9]), 
		 -> STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    delay_state@state	PTR enum E10399 size(1) Largest target is 1
		 -> main@state(BANK2[1]), 

    dispatch@state	PTR enum E10399 size(1) Largest target is 1
		 -> main@state(BANK2[1]), 

    dispatch@b2_clicked_count_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@b2_clicked_count(BANK1[1]), 

    dispatch@b1_clicked_count_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@b1_clicked_count(BANK1[1]), 

    monitoring_sync@b2_clicked_count	PTR unsigned char  size(1) Largest target is 1
		 -> main@b2_clicked_count(BANK1[1]), 

    monitoring_sync@b2	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), 

    monitoring_sync@b1_clicked_count	PTR unsigned char  size(1) Largest target is 1
		 -> main@b1_clicked_count(BANK1[1]), 

    monitoring_sync@b1	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK2[27]), 

    EUSART1_Write_1@txbuf	PTR unsigned char  size(1) Largest target is 32
		 -> measurement@txbuf(BANK1[32]), 

    reset_long_press_flag@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK2[27]), 

    reset_single_click_flag@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    is_long_press@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK2[27]), 

    is_single_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    update_mybutton@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    __is_long_press@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    __is_double_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    __is_single_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    init_button@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    dump_buffer@buffer	PTR const void  size(1) Largest target is 64
		 -> slaveData(BANK4[64]), 

    dump_buffer@p	PTR const unsigned char  size(1) Largest target is 64
		 -> slaveData(BANK4[64]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_slave_interrupt
    _INTERRUPT_InterruptManager->i1_get_ticks

Critical Paths under _main in BANK0

    _update_mybutton->___is_single_click
    _set_device_serial_number_to_i2c_slave_memorymap->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _i2c_slave_set_register_with_lock->_i2c_slave_set_register
    _monitoring_sync->_printf
    _measurement->_printf
    _EUSART1_Write_1->_EUSART1_Write
    _dump_memory_map->_dump_buffer
    _dump_buffer->_printf
    _dispatch->_printf
    _printf->___llmod
    ___llmod->___lldiv
    _delay_state->_calculate_diff
    _calculate_diff->_get_ticks
    ___fltol->___flmul
    ___flmul->__Umul8_16

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_measurement

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               105   105      0   35804
                                             70 BANK0     10    10      0
                                             33 BANK1     40    40      0
                                              0 BANK2     55    55      0
           _Disable_Global_Interrupt
            _Enable_Global_Interrupt
                  _SYSTEM_Initialize
                            ___flmul
                            ___fltol
                     _calculate_diff
                        _delay_state
                           _dispatch
                    _dump_memory_map
                 _enable_tx_transmit
                 _enable_uart_printf
                          _get_ticks
                _get_ticks_with_lock
                     _i2c_slave_init
             _i2c_slave_set_register
                        _init_button
                        _measurement
                    _monitoring_sync
                             _printf
_set_device_serial_number_to_i2c_sla
                          _tmr0_init
                    _update_mybutton
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _update_mybutton                                     10     5      5    2378
                                             17 BANK0     10     5      5
                  ___is_double_click
                    ___is_long_press
                  ___is_single_click
                _get_ticks_with_lock (ARG)
 ---------------------------------------------------------------------------------
 (2) ___is_single_click                                   17    13      4     553
                                              0 BANK0     17    13      4
 ---------------------------------------------------------------------------------
 (2) ___is_long_press                                     15    11      4     419
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (2) ___is_double_click                                   16    12      4     486
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (1) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_device_serial_number_to_i2c_slave_memorymap      7     7      0    2249
                                             27 BANK0      7     7      0
   _i2c_slave_set_register_with_lock
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                              15    11      4    1493
                                             12 BANK0     15    11      4
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isspace                                              2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isalpha                                              2     2      0     158
                                              2 BANK0      2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (4) _isupper                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_slave_set_register_with_lock                     2     1      1     544
                                              2 BANK0      2     1      1
             _i2c_slave_set_register
 ---------------------------------------------------------------------------------
 (3) _i2c_slave_set_register                               2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _monitoring_sync                                      5     1      4    5504
                                             56 BANK0      5     1      4
            _LED_flashes_three_times
                      _is_long_press
                    _is_single_click
                             _printf
              _reset_long_press_flag
            _reset_single_click_flag
 ---------------------------------------------------------------------------------
 (2) _reset_single_click_flag                              1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _reset_long_press_flag                                1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _is_single_click                                      1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _is_long_press                                        1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_flashes_three_times                              3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _measurement                                         35    34      1    4571
                                             56 BANK0      2     1      1
                                              0 BANK1     33    33      0
                    _EUSART1_Write_1
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (2) _enable_uart_printf                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enable_tx_transmit                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write_1                                      4     3      1     221
                                              1 BANK0      4     3      1
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_button                                          1     1      0     396
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_ticks_with_lock                                  8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _dump_memory_map                                      0     0      0    4914
                        _dump_buffer
 ---------------------------------------------------------------------------------
 (2) _dump_buffer                                         14    12      2    4914
                                             56 BANK0     14    12      2
                            _isprint
                             _printf
 ---------------------------------------------------------------------------------
 (3) _isprint                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             9     5      4    5162
                                             56 BANK0      9     5      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              36    28      8    4200
                                             24 BANK0     32    24      8
                            ___lldiv
                            ___llmod
                             ___wmul
                          _get_ticks (ARG)
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                             14 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _delay_state                                          1     1      0     819
                                             24 BANK0      1     1      0
                     _calculate_diff
                          _get_ticks
 ---------------------------------------------------------------------------------
 (1) _get_ticks                                            4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _calculate_diff                                      20    12      8     764
                                              4 BANK0     20    12      8
                          _get_ticks (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             35 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Enable_Global_Interrupt                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Disable_Global_Interrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           4     4      0      91
                                              4 COMMON     4     4      0
                _i2c_slave_interrupt
                        i1_get_ticks
 ---------------------------------------------------------------------------------
 (6) i1_get_ticks                                          4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _i2c_slave_interrupt                                  4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Disable_Global_Interrupt
   _Enable_Global_Interrupt
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   ___flmul
     __Umul8_16
   ___fltol
     ___flmul (ARG)
   _calculate_diff
     _get_ticks (ARG)
   _delay_state
     _calculate_diff
     _get_ticks
   _dispatch
     _printf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _get_ticks (ARG)
       _isdigit (ARG)
       _putch (ARG)
   _dump_memory_map
     _dump_buffer
       _isprint
       _printf
   _enable_tx_transmit
   _enable_uart_printf
   _get_ticks
   _get_ticks_with_lock
   _i2c_slave_init
   _i2c_slave_set_register
   _init_button
   _measurement
     _EUSART1_Write_1
       _EUSART1_Write
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _monitoring_sync
     _LED_flashes_three_times
     _is_long_press
     _is_single_click
     _printf
     _reset_long_press_flag
     _reset_single_click_flag
   _printf
   _set_device_serial_number_to_i2c_slave_memorymap
     _i2c_slave_set_register_with_lock
       _i2c_slave_set_register
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _tmr0_init
   _update_mybutton
     ___is_double_click
     ___is_long_press
     ___is_single_click
     _get_ticks_with_lock (ARG)
   _usart_init

 _INTERRUPT_InterruptManager (ROOT)
   _i2c_slave_interrupt
   i1_get_ticks

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     172       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     49      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     37      44      10       85.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     172      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Apr 20 15:12:29 2024

                                                     l41 13CA  
                                                     l35 13D4  
                                                     l38 139C  
                                                     l86 1578  
                              ??_Enable_Global_Interrupt 0020  
                                    ___wmul@multiplicand 0022  
                             __end_of_enable_tx_transmit 1380  
                                    __Umul8_16@word_mpld 0026  
                                                    l230 150A  
                                                    l320 0801  
                                                    l233 13F2  
                                                    l314 1747  
                                                    l306 13DE  
                                                    l332 1589  
                                                    l317 0003  
                                                    l309 147F  
                                                    l333 15A4  
                                                    l181 0219  
                                                    l342 0997  
                                                    l182 0219  
                                                    l263 13E8  
                                                    l239 13FD  
                                                    l191 0251  
                                                    l360 0A3F  
                                                    l329 157C  
                                                    l177 0248  
                                                    l354 0CBA  
                                                    l186 0247  
                                                    l371 13AE  
                                                    l515 08B5  
                                                    l363 0B52  
                                                    l443 1432  
                                                    l187 0247  
                                                    l452 140C  
                                                    l380 13C0  
                                                    l348 07E6  
                                                    l461 14AD  
                                                    l446 1400  
                                                    l278 1422  
                                                    l527 1654  
                                                    l519 17FF  
                                                    l455 1415  
                                                    l800 06D0  
                                                    l560 15D5  
                                                    l368 0BD8  
                                                    l449 1409  
                                                    l377 13A5  
                                                    l482 137F  
                                                    l554 15A5  
                                                    l386 13B7  
                                                    l299 0B06  
                                                    l491 0845  
                                                    l804 14D6  
                                                    l806 14EA  
                                                    l734 043F  
                                                    l479 1384  
                                                    l840 17A2  
                                                    l745 048D  
                                                    l746 048F  
                                                    l818 1609  
                                                    l747 0490  
                                                    l748 0532  
                                                    l774 0595  
                                                    l769 0558  
                                                    l990 0926  
                                                    _GIE 005F  
                                                    l997 0911  
                                                    mcp0 02A8  
                                                    mcp1 033E  
                                                    _tmp 00EF  
                                                    wreg 0009  
                                           ___flmul@aexp 003B  
                                           ___flmul@bexp 003C  
                                           ___flmul@sign 0036  
                                           ___flmul@temp 0041  
                                           ___flmul@prod 003D  
                                           ___fltol@exp1 004C  
                                                   l1000 0926  
                                                   l1026 169F  
                                                   l1212 153E  
                                                   l1205 0FF3  
                                                   l1214 154E  
                                                   l1303 14CA  
                                                   l3001 15DF  
                                                   l1313 146B  
                                                   l3003 15E3  
                                                   l1308 07FF  
                                                   l3005 15EB  
                                                   l3021 07FD  
                                                   l3013 07E9  
                                                   l1317 1493  
                                                   l1262 1458  
                                                   l3111 13D5  
                                                   l3103 1380  
                                                   l3007 15F2  
                                                   l3031 14B8  
                                                   l3023 07FE  
                                                   l3015 07EB  
                                                   l1193 0FFF  
                                                   l1257 1445  
                                                   l3121 0A42  
                                                   l3105 1382  
                                                   l3009 1601  
                                                   l3033 14BE  
                                                   l3017 07F1  
                                                   l3041 1482  
                                                   l1273 0CBD  
                                                   l3201 07D9  
                                                   l4001 0426  
                                                   l3051 13C1  
                                                   l3123 0A44  
                                                   l3107 137B  
                                                   l3115 13F5  
                                                   l3035 14C6  
                                                   l3027 14B0  
                                                   l3019 07F7  
                                                   l3043 1488  
                                                   l3211 0BDB  
                                                   l3203 07E3  
                                                   l3061 1559  
                                                   l3053 154F  
                                                   l3141 0A8A  
                                                   l3133 0A55  
                                                   l3125 0A47  
                                                   l3109 137E  
                                                   l3117 13F6  
                                                   l3037 14C8  
                                                   l3029 14B2  
                                                   l3045 148E  
                                                   l3301 0CE7  
                                                   l3221 0C89  
                                                   l3213 0C6E  
                                                   l3071 1567  
                                                   l3063 155F  
                                                   l3055 1552  
                                                   l1199 0F7F  
                                                   l3151 0A9D  
                                                   l3143 0A93  
                                                   l3135 0A65  
                                                   l3127 0A52  
                                                   l3119 13FC  
                                                   l3047 1492  
                                                   l3311 0CF9  
                                                   l3303 0CEC  
                                                   l3231 0CB7  
                                                   l3215 0C73  
                                                   l3223 0C91  
                                                   l3207 07E5  
                                                   l1296 0DC4  
                                                   l3081 1573  
                                                   l3073 1569  
                                                   l3065 1561  
                                                   l3057 1554  
                                                   l3153 0AAD  
                                                   l3161 0AE2  
                                                   l3145 0A9A  
                                                   l3137 0A7E  
                                                   l3321 0D15  
                                                   l3313 0CFE  
                                                   l3225 0C9D  
                                                   l3217 0C78  
                                                   l3241 09F8  
                                                   l3401 1426  
                                                   l3091 139B  
                                                   l3083 1576  
                                                   l3075 156C  
                                                   l3067 1563  
                                                   l3059 1556  
                                                   l3163 0AE7  
                                                   l3155 0ABF  
                                                   l3139 0A85  
                                                   l3411 14EB  
                                                   l3171 1579  
                                                   l3331 0D2F  
                                                   l3323 0D1B  
                                                   l3315 0D02  
                                                   l3235 0CB9  
                                                   l3227 0CA3  
                                                   l3219 0C7D  
                                                   l3251 0A22  
                                                   l3243 09FD  
                                                   l3403 142B  
                                                   l3085 1394  
                                                   l3077 156F  
                                                   l3069 1565  
                                                   l3093 16F3  
                                                   l3165 0AF0  
                                                   l3157 0AC5  
                                                   l3421 14F5  
                                                   l3413 14ED  
                                                   l3501 0858  
                                                   l3341 0D4E  
                                                   l3325 0D1F  
                                                   l3317 0D08  
                                                   l3333 0D33  
                                                   l3309 0CF3  
                                                   l3229 0CAD  
                                                   l3261 0A3E  
                                                   l3253 0A28  
                                                   l3245 0A02  
                                                   l3181 06D3  
                                                   l3405 142C  
                                                   l3087 1397  
                                                   l3079 1571  
                                                   l3095 1706  
                                                   l3167 0AF7  
                                                   l3159 0AD7  
                                                   l3431 1500  
                                                   l3423 14F7  
                                                   l3415 14EF  
                                                   l3511 087C  
                                                   l3503 0862  
                                                   l3351 0D91  
                                                   l3343 0D57  
                                                   l3335 0D39  
                                                   l3327 0D24  
                                                   l3319 0D0F  
                                                   l3255 0A32  
                                                   l3247 0A0E  
                                                   l3239 099A  
                                                   l3191 07A9  
                                                   l3183 0795  
                                                   l3407 142E  
                                                   l3089 1398  
                                                   l3097 171B  
                                                   l3169 0AFC  
                                                   l3433 1504  
                                                   l3417 14F1  
                                                   l3441 094B  
                                                   l3281 14A2  
                                                   l3177 157E  
                                                   l3265 13A8  
                                                   l3273 13BA  
                                                   l3521 08A0  
                                                   l3513 0886  
                                                   l3505 0865  
                                                   l3361 0DAC  
                                                   l3353 0D96  
                                                   l3345 0D5A  
                                                   l3337 0D3D  
                                                   l3329 0D29  
                                                   l3601 083F  
                                                   l3257 0A3C  
                                                   l3249 0A16  
                                                   l3193 07B5  
                                                   l3185 079A  
                                                   l3409 1430  
                                                   l3371 152F  
                                                   l3099 173F  
                                                   l3531 163A  
                                                   l2811 1670  
                                                   l2803 1655  
                                                   l3419 14F3  
                                                   l3451 0973  
                                                   l3443 0956  
                                                   l3435 0929  
                                                   l3283 14A7  
                                                   l3179 1587  
                                                   l3275 13B1  
                                                   l3523 08AA  
                                                   l3515 0889  
                                                   l3507 086A  
                                                   l3355 0D9B  
                                                   l3339 0D45  
                                                   l3291 0CD0  
                                                   l3187 079F  
                                                   l3195 07BD  
                                                   l3373 1536  
                                                   l3701 0DF7  
                                                   l3533 164D  
                                                   l2813 1682  
                                                   l2805 165E  
                                                   l3429 14FA  
                                                   l3461 0991  
                                                   l3453 0979  
                                                   l3445 0961  
                                                   l3437 0935  
                                                   l3277 1496  
                                                   l3541 15BB  
                                                   l3269 139F  
                                                   l3525 08AD  
                                                   l3509 0874  
                                                   l3517 088E  
                                                   l3365 0DBC  
                                                   l3357 0DA1  
                                                   l3349 0D66  
                                                   l3293 0CD9  
                                                   l3285 0CBD  
                                                   l3197 07C9  
                                                   l3189 07A4  
                                                   l3383 13CB  
                                                   l3375 153A  
                                                   l3711 0E0C  
                                                   l3703 0DF8  
                                                   l2815 168A  
                                                   l2807 1661  
                                                   l2751 1405  
                                                   l2911 0553  
                                                   l2903 050E  
                                                   l3551 17AF  
                                                   l3463 146C  
                                                   l3455 097F  
                                                   l3447 0967  
                                                   l3439 0940  
                                                   l3279 1498  
                                                   l3543 15BE  
                                                   l3535 15A7  
                                                   l3527 08B0  
                                                   l3519 0898  
                                                   l2831 146A  
                                                   l2823 145B  
                                                   l3359 0DA7  
                                                   l3295 0CDA  
                                                   l3287 0CC3  
                                                   l3391 141B  
                                                   l3199 07CF  
                                                   l3471 0B09  
                                                   l3385 13CE  
                                                   l3377 1545  
                                                   l3369 152D  
                                                   l3801 0FD6  
                                                   l3721 0E27  
                                                   l3713 0E14  
                                                   l3705 0DFD  
                                                   l3641 08B6  
                                                   l3529 160C  
                                                   l2817 1691  
                                                   l2809 166C  
                                                   l2761 1444  
                                                   l2753 1435  
                                                   l2921 058A  
                                                   l2913 055A  
                                                   l2905 0536  
                                                   l2841 043B  
                                                   l3553 17BD  
                                                   l3465 146D  
                                                   l3457 0985  
                                                   l3449 096D  
                                                   l3545 15CD  
                                                   l3537 15AA  
                                                   l2825 145C  
                                                   l3297 0CE0  
                                                   l3289 0CC7  
                                                   l3393 141C  
                                                   l3481 0B5B  
                                                   l3473 0B13  
                                                   l3387 13D1  
                                                   l3379 154A  
                                                   l3811 0FF1  
                                                   l3803 0FDF  
                                                   l3731 0E7C  
                                                   l3723 0E32  
                                                   l3715 0E19  
                                                   l3707 0E02  
                                                   l3651 08DB  
                                                   l3643 08C0  
                                                   l2819 1697  
                                                   l2771 14DB  
                                                   l2755 1436  
                                                   l2931 05C7  
                                                   l2923 0597  
                                                   l2907 0541  
                                                   l2851 0459  
                                                   l2843 0440  
                                                   l2835 042C  
                                                   l3571 17EF  
                                                   l3563 17DE  
                                                   l3555 17CC  
                                                   l3467 1476  
                                                   l3459 098B  
                                                   l3547 15D3  
                                                   l3539 15B2  
                                                   l2827 1462  
                                                   l3299 0CE2  
                                                   l3395 141E  
                                                   l3491 0BB6  
                                                   l3483 0B64  
                                                   l3475 0B19  
                                                   l3581 0800  
                                                   l3813 0FF7  
                                                   l3805 0FE1  
                                                   l3741 0EAF  
                                                   l3733 0E89  
                                                   l3725 0E3F  
                                                   l3717 0E1E  
                                                   l3709 0E0A  
                                                   l3653 08E3  
                                                   l2781 1759  
                                                   l2773 14E0  
                                                   l2765 14CB  
                                                   l2757 143C  
                                                   l2749 1400  
                                                   l2941 05EF  
                                                   l2917 0561  
                                                   l2909 0546  
                                                   l2861 0492  
                                                   l2853 045C  
                                                   l2837 0430  
                                                   l3573 17F4  
                                                   l3565 17E3  
                                                   l3557 17D2  
                                                   l3549 17A5  
                                                   l2829 1468  
                                                   l3397 141F  
                                                   l3389 1416  
                                                   l3493 0BBE  
                                                   l3485 0B8B  
                                                   l3477 0B22  
                                                   l3901 01A3  
                                                   l3807 0FEC  
                                                   l3751 0EEC  
                                                   l3743 0EBA  
                                                   l3735 0E96  
                                                   l3727 0E57  
                                                   l3671 0908  
                                                   l3663 08F1  
                                                   l3655 08E5  
                                                   l3647 08C9  
                                                   l2791 1784  
                                                   l2783 175C  
                                                   l2775 14E6  
                                                   l2767 14CE  
                                                   l2759 1442  
                                                   l2951 060C  
                                                   l2943 05F2  
                                                   l2927 059E  
                                                   l2935 05D2  
                                                   l2871 04AA  
                                                   l2863 0499  
                                                   l2855 046D  
                                                   l2847 0444  
                                                   l2839 0436  
                                                   l3575 17F9  
                                                   l3567 17E8  
                                                   l3559 17D7  
                                                   l3583 13DF  
                                                   l3591 080A  
                                                   l3495 0BD0  
                                                   l3487 0B9C  
                                                   l3479 0B2B  
                                                   l3399 1423  
                                                   l3903 01B0  
                                                   l3911 01D1  
                                                   l3831 00A8  
                                                   l3809 0FF0  
                                                   l3761 0F3C  
                                                   l3753 0EF7  
                                                   l3745 0EC1  
                                                   l3737 0E9D  
                                                   l3729 0E64  
                                                   l3681 0DCB  
                                                   l3673 0916  
                                                   l3657 08E9  
                                                   l3665 0901  
                                                   l3649 08DA  
                                                   l2793 178C  
                                                   l2785 1767  
                                                   l2769 14D2  
                                                   l2961 0663  
                                                   l2953 0612  
                                                   l2945 05F6  
                                                   l2937 05DB  
                                                   l2881 04CB  
                                                   l2873 04AE  
                                                   l2865 049D  
                                                   l2857 047C  
                                                   l2849 044D  
                                                   l3497 0846  
                                                   l3593 0826  
                                                   l3585 0808  
                                                   l3489 0BA4  
                                                   l3921 01F2  
                                                   l3913 01D7  
                                                   l3905 01B9  
                                                   l3841 00B7  
                                                   l3833 00AB  
                                                   l3579 0002  
                                                   l3771 0F5B  
                                                   l3763 0F48  
                                                   l3755 0F09  
                                                   l3747 0ED3  
                                                   l3739 0EA8  
                                                   l3691 0DE2  
                                                   l3683 0DCF  
                                                   l3675 091B  
                                                   l2795 178D  
                                                   l2787 176B  
                                                   l2779 1748  
                                                   l2963 0688  
                                                   l2955 0616  
                                                   l2947 05FC  
                                                   l2939 05E6  
                                                   l2891 04F7  
                                                   l2883 04CF  
                                                   l2875 04B9  
                                                   l2867 04A3  
                                                   l2859 0480  
                                                   l3499 0850  
                                                   l3595 0827  
                                                   l3931 0216  
                                                   l3923 01F5  
                                                   l3915 01E5  
                                                   l3907 01BC  
                                                   l3851 00D8  
                                                   l3843 00B8  
                                                   l3835 00AF  
                                                   l3781 0F7C  
                                                   l3765 0F4F  
                                                   l3773 0F5F  
                                                   l3757 0F1E  
                                                   l3749 0EDA  
                                                   l3693 0DE4  
                                                   l3685 0DD0  
                                                   l3677 0DC5  
                                                   l2797 1794  
                                                   l2789 1772  
                                                   l2973 06A3  
                                                   l2965 068C  
                                                   l2949 0600  
                                                   l2957 0621  
                                                   l2893 04FC  
                                                   l2885 04DD  
                                                   l2877 04C3  
                                                   l2869 04A7  
                                                   l2981 13EB  
                                                   l3597 0833  
                                                   l3941 0233  
                                                   l3925 01FD  
                                                   l3933 021A  
                                                   l3909 01C3  
                                                   l3861 00E1  
                                                   l3853 00DB  
                                                   l3845 00BB  
                                                   l3837 00B3  
                                                   l3829 009F  
                                                   l3791 0F95  
                                                   l3775 0F63  
                                                   l3767 0F53  
                                                   l3759 0F35  
                                                   l3695 0DEC  
                                                   l3687 0DD5  
                                                   l3679 0DC9  
                                                   l2799 179A  
                                                   l2967 0691  
                                                   l2975 06AC  
                                                   l2959 0629  
                                                   l2895 0500  
                                                   l2887 04E5  
                                                   l2879 04C8  
                                                   l2991 1457  
                                                   l2983 1448  
                                                   l3599 083A  
                                                   l3951 024F  
                                                   l3943 023B  
                                                   l3935 0220  
                                                   l3927 0205  
                                                   l3919 01EC  
                                                   l3871 00EB  
                                                   l3863 00E3  
                                                   l3855 00DC  
                                                   l3847 00C3  
                                                   l3839 00B5  
                                                   l3793 0FAD  
                                                   l3785 0F84  
                                                   l3777 0F64  
                                                   l3769 0F54  
                                                   l3697 0DF1  
                                                   l3689 0DDA  
                                                   l2969 0695  
                                                   l2977 06B0  
                                                   l2897 0504  
                                                   l2889 04EA  
                                                   l2985 1449  
                                                   l3961 02D8  
                                                   l3953 0252  
                                                   l3945 0244  
                                                   l3937 0223  
                                                   l3929 020D  
                                                   l3881 0158  
                                                   l3873 00EE  
                                                   l3865 00E5  
                                                   l3857 00DD  
                                                   l3849 00CF  
                                                   l3787 0F89  
                                                   l3795 0FB1  
                                                   l3779 0F68  
                                                   l3699 0DF3  
                                                   l2899 0509  
                                                   l2979 06BD  
                                                   l2987 144F  
                                                   l2995 140C  
                                                   l3971 036E  
                                                   l3963 02E8  
                                                   l3955 025B  
                                                   l3939 022B  
                                                   l3947 0248  
                                                   l3891 018C  
                                                   l3883 016D  
                                                   l3875 0101  
                                                   l3867 00E7  
                                                   l3859 00DF  
                                        ?_calculate_diff 0024  
                                                   l3797 0FBE  
                                                   l3789 0F91  
                                                   l2989 1455  
                                                   l2997 1411  
                                                   l3981 0399  
                                                   l3973 037E  
                                                   l3965 02F1  
                                                   l3957 0296  
                                                   l3949 024E  
                                                   l3885 0173  
                                                   l3893 0190  
                                                   l3877 0133  
                                                   l3869 00E9  
                                                   l3799 0FC8  
                                                   l2999 15D6  
                                                   l3991 03C6  
                                                   l3983 03A1  
                                                   l3975 0381  
                                                   l3967 032C  
                                                   l3959 02A9  
                                                   l3895 0195  
                                                   l3887 0176  
                                                   l3879 0143  
                                                   l3993 03CF  
                                                   l3985 03A4  
                                                   l3977 0389  
                                                   l3969 033F  
                                                   l3897 019A  
                                                   l3889 0183  
                                                   l3987 03A7  
                                                   l3979 0391  
                                                   l3995 03D2  
                                                   l3899 01A0  
                                                   l3997 03E5  
                                                   l3989 03AA  
                                                   l3999 0416  
                                                   STR_1 18DA  
                                                   STR_2 196F  
                                                   STR_3 1964  
                                                   STR_4 186E  
                                                   STR_5 1981  
                                                   STR_6 1931  
                                                   STR_7 1820  
                                                   STR_8 1981  
                                                   STR_9 1931  
                                                   u2100 14E6  
                                                   u2101 14E5  
                                                   u2110 1759  
                                                   u2111 1758  
                                                   u2200 1670  
                                                   u2040 1405  
                                                   u3000 09F5  
                                                   u2201 166F  
                                                   u2041 1404  
                                                   u3001 09F3  
                                                   u2130 176B  
                                                   u2210 1682  
                                                   u2050 143C  
                                                   u3010 09F6  
                                                   u2131 176A  
                                                   u2211 1681  
                                                   u2051 143B  
                                                   u2060 1442  
                                                   u2300 04B9  
                                                   u3100 0CF9  
                                                   u3020 09FD  
                                                   u2125 175D  
                                                   u2061 1441  
                                                   u2301 04B8  
                                                   u3101 0CF8  
                                                   u3021 09FC  
                                                   _LATA 0018  
                                                   u2150 1784  
                                                   u2230 1697  
                                                   u2070 14D2  
                                                   u2310 04C3  
                                                   u3110 0D08  
                                                   u3030 0A02  
                                                   u2151 1783  
                                                   u2231 1696  
                                                   u2215 167E  
                                                   u2071 14D1  
                                                   u2311 04C2  
                                                   u3111 0D07  
                                                   u3031 0A01  
                                                   _LATC 001A  
                                                   u2400 05D1  
                                                   u2320 04DC  
                                                   u2240 1462  
                                                   u3200 0DA1  
                                                   u3120 0D0F  
                                                   u3040 0A32  
                                                   u4000 0416  
                                                   u2145 176C  
                                                   u2225 168B  
                                                   u2401 05D0  
                                                   u2321 04DB  
                                                   u2241 1461  
                                                   u3201 0DA0  
                                                   u3121 0D0E  
                                                   u3041 0A31  
                                                   u4001 0415  
                                                   u2170 179A  
                                                   u2410 05E6  
                                                   u2330 04F6  
                                                   u2250 1468  
                                                   u3210 0DAC  
                                                   u3130 0D15  
                                                   u3050 0A3C  
                                                   u2171 1799  
                                                   u2155 1780  
                                                   u2411 05E5  
                                                   u2331 04F5  
                                                   u2315 04BF  
                                                   u2251 1467  
                                                   u3211 0DAB  
                                                   u3131 0D14  
                                                   u3051 0A3B  
                                                   u3220 153A  
                                                   u2180 165E  
                                                   u2420 05F6  
                                                   u2340 0536  
                                                   u2260 0436  
                                                   u2500 144F  
                                                   u3060 14AD  
                                                   u3140 0D1B  
                                                   u3300 0B9C  
                                                   u3221 1539  
                                                   u2165 178E  
                                                   u2181 165D  
                                                   u2085 14D7  
                                                   u2421 05F5  
                                                   u2341 0535  
                                                   u2261 0435  
                                                   u2501 144E  
                                                   u3061 14AC  
                                                   u3141 0D1A  
                                                   u3301 0B9B  
                                                   u2430 05FC  
                                                   u2350 0560  
                                                   u2270 0459  
                                                   u2510 1455  
                                                   u3150 0D2F  
                                                   u3070 0CD0  
                                                   u3310 0BB6  
                                                   u2095 14DC  
                                                   u2431 05FB  
                                                   u2415 05E2  
                                                   u2351 055F  
                                                   u2271 0458  
                                                   u2511 1454  
                                                   u3151 0D2E  
                                                   u3071 0CCE  
                                                   u3311 0BB5  
                                                   u3240 154A  
                                                   u2440 060B  
                                                   u2360 0589  
                                                   u2280 048C  
                                                   u3400 17E3  
                                                   u2520 1411  
                                                   u2600 14B8  
                                                   u3160 0D39  
                                                   u3080 0CE0  
                                                   u3320 0BD0  
                                                   u3241 1549  
                                                   u2441 060A  
                                                   u2361 0588  
                                                   u2281 048B  
                                                   u3401 17E2  
                                                   u2521 1410  
                                                   u2601 14B7  
                                                   u3161 0D38  
                                                   u3081 0CDF  
                                                   u3321 0BCF  
                                                   u2450 0612  
                                                   u2370 0594  
                                                   u2290 04A3  
                                                   u3410 17E8  
                                                   u3250 150A  
                                                   u3330 0850  
                                                   u2530 15E3  
                                                   u2610 14BE  
                                                   u3170 0D45  
                                                   u3090 0CF2  
                                                   u3235 153F  
                                                   u2195 1662  
                                                   u2451 0611  
                                                   u2371 0593  
                                                   u2291 04A2  
                                                   u3411 17E7  
                                                   u3251 1509  
                                                   u3331 084F  
                                                   u2531 15E2  
                                                   u2611 14BD  
                                                   u3171 0D44  
                                                   u3091 0CF1  
                                                   u4107 0211  
                                                   u3500 08D6  
                                                   u2460 0621  
                                                   u2380 059D  
                                                   u3420 17F4  
                                                   u2700 0AF0  
                                                   u3340 0874  
                                                   u2620 14C6  
                                                   u3180 0D57  
                                                   u3260 0B22  
                                                   u2461 0620  
                                                   u2381 059C  
                                                   u2365 0585  
                                                   u3421 17F3  
                                                   u2701 0AEF  
                                                   u3341 0873  
                                                   u2621 14C5  
                                                   u3181 0D56  
                                                   u3261 0B21  
                                                   u4117 023F  
                                                   u3510 08E9  
                                                   u2470 068C  
                                                   u2390 05C6  
                                                   u3430 17F9  
                                                   u2710 0B06  
                                                   u3350 0898  
                                                   u2630 1488  
                                                   u3190 0D65  
                                                   u3270 0B2B  
                                                   u3511 08E8  
                                                   u2471 068B  
                                                   u2391 05C5  
                                                   u3431 17F8  
                                                   u2711 0B05  
                                                   u3351 0897  
                                                   u2631 1487  
                                                   u3191 0D64  
                                                   u3271 0B2A  
                                                   u4127 03CA  
                                                   u3600 0DD5  
                                                   u3520 08F0  
                                                   u3360 163A  
                                                   u2480 06BD  
                                                   u2720 15A4  
                                                   u2560 1601  
                                                   u2640 148E  
                                                   u3440 0845  
                                                   u2800 0793  
                                                   u3280 0B5B  
                                                   u3601 0DD4  
                                                   u3521 08EF  
                                                   u3505 08D2  
                                                   u3361 1639  
                                                   u2481 06BC  
                                                   u2721 15A3  
                                                   u4137 1582  
                                                   u2561 1600  
                                                   u2545 15EC  
                                                   u2641 148D  
                                                   u3441 0844  
                                                   u3281 0B5A  
                                                   u3610 0DDA  
                                                   u2650 1706  
                                                   u2490 06D0  
                                                   u3370 15C9  
                                                   u2570 07F1  
                                                   u2810 079A  
                                                   u2730 0700  
                                                   u3290 0B64  
                                                   u3611 0DD9  
                                                   u2651 1705  
                                                   u2491 06CF  
                                                   u2395 05C2  
                                                   u2715 0B02  
                                                   u4147 158D  
                                                   u2555 15F3  
                                                   u2571 07F0  
                                                   u3195 0D61  
                                                   u2811 0799  
                                                   u2731 06FE  
                                                   u3291 0B63  
                                                   u3700 0F2B  
                                                   u3620 0DF7  
                                                   u3540 0900  
                                                   u3380 17D2  
                                                   u2660 0A65  
                                                   u2580 07F7  
                                                   u2900 0C38  
                                                   u2820 079F  
                                                   u2740 0701  
                                                   u3621 0DF6  
                                                   u3541 08FF  
                                                   u3381 17D1  
                                                   u2661 0A64  
                                                   u4157 15B6  
                                                   u2725 15A0  
                                                   u2581 07F6  
                                                   u2821 079E  
                                                   u4077 00D3  
                                                   u3630 0DFD  
                                                   u3550 0907  
                                                   u3390 17D7  
                                                   u2670 0A93  
                                                   u2590 07FD  
                                                   u2910 0C6B  
                                                   u2830 07A4  
                                                   u2750 072F  
                                                   u3631 0DFC  
                                                   u3551 0906  
                                                   u3535 08F2  
                                                   u2655 1702  
                                                   u3391 17D6  
                                                   u2671 0A92  
                                                   u2591 07FC  
                                                   u2911 0C69  
                                                   u2831 07A3  
                                                   u2751 072D  
                                                   u2735 06FB  
                                                   u4087 0187  
                                                   u3800 0F95  
                                                   u3640 0E02  
                                                   u2680 0AAD  
                                                   u2920 0C6C  
                                                   u2840 07A9  
                                                   u2760 0730  
                                                   u3801 0F94  
                                                   u3705 0F27  
                                                   u3641 0E01  
                                                   u2681 0AAC  
                                                   u2665 0A61  
                                                   u2841 07A8  
                                                   u4097 01B4  
                                                   u3810 0FA3  
                                                   u3730 0F53  
                                                   u3650 0E19  
                                                   u3570 0916  
                                                   u3490 08C0  
                                                   u2690 0ABF  
                                                   u2930 0C73  
                                                   u2850 07D9  
                                                   u2770 0763  
                                                   u3731 0F52  
                                                   u3715 0F36  
                                                   u3651 0E18  
                                                   u3571 0915  
                                                   u3491 08BF  
                                                   u2691 0ABE  
                                                   u2931 0C72  
                                                   u2851 07D8  
                                                   u2771 0761  
                                                   u3820 0FBE  
                                                   u3660 0E1E  
                                                   u3580 091B  
                                                   u2940 0C78  
                                                   u2860 07E3  
                                                   u2780 0764  
                                                   u3900 01EB  
                                                   _PMD0 0796  
                                                   u3821 0FBD  
                                                   u3725 0F49  
                                                   u3661 0E1D  
                                                   u3581 091A  
                                                   u3565 0909  
                                                   u2685 0AA9  
                                                   u2941 0C77  
                                                   u2861 07E2  
                                                   u3901 01EA  
                                                   _PMD1 0797  
                                                   u3830 0FD6  
                                                   u3750 0F63  
                                                   u3590 0DCF  
                                                   u2950 0C7D  
                                                   u2870 0C08  
                                                   u2790 0792  
                                                   u3910 01F2  
                                                   _PMD2 0798  
                                                   u3831 0FD5  
                                                   u3815 0F9F  
                                                   u3751 0F62  
                                                   u3591 0DCE  
                                                   u2951 0C7C  
                                                   u2871 0C06  
                                                   u2791 0790  
                                                   u3911 01F1  
                                                   _PMD3 0799  
                                                   u3840 0FF0  
                                                   u3760 0F68  
                                                   u2960 0CAD  
                                                   u2880 0C09  
                                                   u3920 0220  
                                                   _PMD4 079A  
                                                   u3841 0FEF  
                                                   u3825 0FBA  
                                                   u3761 0F67  
                                                   u3745 0F55  
                                                   u2961 0CAC  
                                                   u3921 021F  
                                                   _PMD5 079B  
                                                   u3770 0F7C  
                                                   u3690 0F14  
                                                   u2970 0CB7  
                                                   u2890 0C37  
                                                   u3930 024E  
                                                   u3850 0133  
                                                   _PMD6 079C  
                                                   u3835 0FD2  
                                                   u3771 0F7B  
                                                   u3675 0E97  
                                                   u2971 0CB6  
                                                   u2891 0C35  
                                                   u2875 0C03  
                                                   u3931 024D  
                                                   u3851 0132  
                                                   _PMD7 079D  
                                                   u3780 0F83  
                                                   u2980 09C7  
                                                   u3940 026E  
                                                   u3860 0173  
                                                   u3781 0F82  
                                                   u3685 0EC2  
                                                   u2981 09C5  
                                                   u3861 0172  
                                                   u3790 0F89  
                                                   u2990 09C8  
                                                   u3950 027C  
                                                   u3870 0195  
                                                   u3791 0F88  
                                                   u3695 0F10  
                                                   u3871 0194  
                                                   u3880 01A0  
                                                   u2985 09C2  
                                                   u3945 026A  
                                                   u3881 019F  
                                                   u3970 0304  
                                                   u3890 01D7  
                                                   u3955 0278  
                                                   u3891 01D6  
                                                   u3980 0312  
                                                   u3975 0300  
                                                   u3985 030E  
                                                   _WPUA 1F39  
                                                   _WPUC 1F4F  
                                          _EUSART1_Write 140A  
                                            main@ph_temp 006A  
                                            main@payload 00CD  
                                                   _main 009F  
                                                   mcp0b 029A  
                                                   mcp1b 0330  
                                                   mcp0z 02A9  
                                                   mcp1z 033F  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                              ??_reset_single_click_flag 0020  
                                                   start 0067  
                                        _update_mybutton 0B07  
                                            i1_get_ticks 138B  
                                           ?_dump_buffer 0058  
                                           ?_measurement 0058  
                          __end_of_OSCILLATOR_Initialize 139D  
                                          ___fltol@sign1 004B  
                                                  ?_main 0070  
                                                  STR_10 1978  
                                                  STR_11 1959  
                                                  STR_12 1891  
                                                  STR_21 1964  
                                                  STR_13 1996  
                                                  STR_22 1964  
                                                  STR_14 199C  
                                                  STR_30 18F0  
                                                  STR_15 19A2  
                                                  STR_23 193F  
                                                  STR_31 1901  
                                                  STR_16 19A3  
                                                  STR_24 194C  
                                                  STR_17 19A6  
                                                  STR_25 1912  
                                                  STR_18 1920  
                                                  STR_26 18AC  
                                                  STR_19 1990  
                                                  STR_27 18C3  
                                                  STR_28 1923  
                                                  STR_29 1989  
                                        __end_of___flmul 1000  
                                    ___is_double_click@b 002F  
                                        __end_of___fltol 0927  
                                        __end_of___lldiv 17A3  
                                        __end_of___llmod 16A0  
                                                  i1l250 16F2  
                                                  i1l306 1393  
                                                  i1l253 16F0  
                                                  i1l255 16CC  
                                                  i1l470 0065  
                                                  _OSCEN 0891  
                                                  _TMR0H 059D  
                                                  u396m0 02A3  
                                                  u396m1 02A9  
                                                  _TMR0L 059C  
                                                  u399m0 0339  
                                                  u399m1 033F  
                                                  _TRISA 0012  
                                           ?_init_button 0070  
                                                  _TRISC 0014  
                                    ___lmul@multiplicand 0024  
                                       ?_monitoring_sync 0058  
                                __end_of_dump_memory_map 13E9  
                                  update_mybutton@signal 0031  
                                        __end_of_dpowers 186E  
                                        __end_of_isalpha 14CB  
                                        __end_of_isdigit 1446  
                                                  _ticks 0078  
                                                  _putch 13FE  
                                        __end_of_isspace 0800  
                                         ?_EUSART1_Write 0070  
                                        __end_of_isprint 1459  
                                        __end_of_isupper 146C  
                                   main@b2_clicked_count 00E7  
                           ___is_double_click@condition1 002C  
                                      monitoring_sync@b1 0058  
                           ___is_double_click@condition2 002D  
                                      monitoring_sync@b2 0059  
                           ___is_double_click@condition3 002E  
                                                  status 0003  
                                                  wtemp0 007E  
                                        __end_of_toupper 1494  
                                        __initialization 0069  
                                      ??_is_single_click 0020  
                                           __end_of_main 042C  
                           ___is_single_click@condition1 002C  
                           ___is_single_click@condition2 002D  
                           ___is_single_click@condition3 002E  
                           ___is_single_click@condition4 002F  
                                      ___is_single_click 06D1  
                            ?_INTERRUPT_InterruptManager 0070  
                                     ?___is_single_click 0020  
                                                 ??_main 00C1  
                        __end_of_reset_single_click_flag 13C1  
                              i2c_slave_interrupt@isNack 0072  
                              i2c_slave_interrupt@isRead 0071  
                                         _i2c_slave_init 14EB  
                                    ??___is_single_click 0024  
                                          dispatch@state 005E  
                        monitoring_sync@b2_clicked_count 005B  
                                       ___llmod@dividend 0032  
                                                 _ANSELA 1F38  
                                                 ?_putch 0070  
                                                 _ANSELC 1F4E  
                                                 _T0CON0 059E  
                                                 _T0CON1 059F  
                                                 _RC1REG 0119  
                                                 _RC0PPS 1F20  
                                                 _RC1PPS 1F21  
                                                 _RA5PPS 1F15  
                                                 _RC1STA 011D  
                                                 _RC3PPS 1F23  
                                __end_of_update_mybutton 0BD9  
                                                 _RC5PPS 1F25  
                                                 _ODCONA 1F3A  
                                                 _ODCONC 1F50  
                                                 i1l4031 0014  
                                                 i1l4041 003F  
                                                 i1l4033 001A  
                                                 i1l4025 0006  
                                                 i1l4051 0056  
                                                 i1l4043 0040  
                                                 i1l4035 0035  
                                                 i1l4027 000B  
                                                 i1l4053 005E  
                                                 i1l4045 0043  
                                                 i1l4037 0037  
                                                 i1l4029 000C  
                                                 i1l4055 0062  
                                                 i1l4047 0048  
                                                 i1l4039 003A  
                                                 i1l4049 0054  
                                                 i1l3611 16AE  
                                                 i1l3621 16C1  
                                                 i1l3631 16D5  
                                                 i1l3623 16C7  
                                                 i1l3615 16B1  
                                                 i1l3607 16A0  
                                                 i1l3633 16DB  
                                                 i1l3617 16B6  
                                                 i1l3625 16C9  
                                                 i1l3609 16A9  
                                                 i1l3635 16E2  
                                                 i1l3627 16CF  
                                                 i1l3619 16BD  
                                                 i1l3629 16D2  
                                                 i1l3639 16E4  
                                                 i1l3817 138B  
                                                 _INLVLA 1F3C  
                                                 _INLVLC 1F52  
                                                 u401_20 000B  
                                                 u401_21 000A  
                                                 u402_20 001A  
                                                 u402_21 0019  
                                                 u403_20 0035  
                                                 u403_21 0034  
                                                 u404_20 003F  
                                                 u404_21 003E  
                                                 u405_20 0048  
                                                 u405_21 0047  
                                                 u345_20 16AE  
                                                 u345_21 16AD  
                                                 u346_20 16B6  
                                                 u346_21 16B5  
                                                 u347_20 16C7  
                                                 u347_21 16C6  
                                                 u348_20 16DB  
                                                 u348_21 16DA  
                                    _i2c_slave_interrupt 16A0  
                                                 _OSCFRQ 0893  
                                                 _TX1REG 011A  
                                                 _TX1STA 011E  
                                        _EUSART1_Write_1 1494  
                              __end_of___is_single_click 07E7  
                                     _enable_uart_printf 1380  
                                       __end_of_dispatch 1800  
                                                 ___lmul 15D6  
                                                 ___wmul 14CB  
                                              ??___flmul 0031  
                                              ??___fltol 0047  
                                              ??___lldiv 0028  
                                              ??___llmod 0036  
                           dispatch@b2_clicked_count_ptr 005B  
                                   ?_i2c_slave_interrupt 0070  
   set_device_serial_number_to_i2c_slave_memorymap@value 003D  
                                                 _printf 042C  
                                    ?_enable_uart_printf 0070  
                                                 main@b1 013C  
                                                 main@b2 0121  
                                        _currentRegister 007C  
                                 __end_of_i2c_slave_init 150B  
                                                 main@ph 00D7  
                                          main@temp_temp 006C  
                                                 _strtol 0CBB  
                                         _PMD_Initialize 13C1  
                                              ??_isalpha 0022  
                                              ??_isdigit 0020  
                                     main@prev_ticks_btn 015F  
                                              ??_isspace 0020  
                                              ??_isprint 0020  
                                              ??_isupper 0020  
                            i2c_slave_set_register@value 0020  
                                       ?_dump_memory_map 0070  
                                        ??_EUSART1_Write 0020  
                              ?_Disable_Global_Interrupt 0070  
                                              ??_toupper 0020  
                                  ___is_single_click@now 0020  
                                      _SYSTEM_Initialize 13CB  
                                   ??_enable_uart_printf 0020  
                                __end_of__initialization 009B  
                                ??_reset_long_press_flag 0020  
                                      ??___is_long_press 0024  
                                     ?_SYSTEM_Initialize 0070  
                                             ___fltol@f1 0043  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK3 150B  
                                    ??_SYSTEM_Initialize 0020  
                                  ??_i2c_slave_interrupt 0070  
                                          __end_of_putch 140A  
                                 __end_of_PMD_Initialize 13CB  
                                        ?_i2c_slave_init 0070  
                                       ??_calculate_diff 002C  
                              __end_of_SYSTEM_Initialize 13D5  
                                                ??_putch 0020  
                                          _is_long_press 139D  
                                __end_of_EUSART1_Write_1 14AE  
                                     _enable_tx_transmit 137B  
                                             __pbssBANK1 00E9  
                                             __pbssBANK2 0157  
                                             __pbssBANK3 01A0  
                                             __pbssBANK4 0220  
                                       ?_update_mybutton 0031  
                                         _rxbuffer_index 007D  
                                    ?_enable_tx_transmit 0070  
                                      __end_of__Umul8_16 154F  
                                             __pmaintext 009F  
                                           ?i1_get_ticks 0070  
                                _LED_flashes_three_times 1579  
                                                ?___lmul 0020  
                                                ?___wmul 0020  
                                             __pintentry 0004  
                                    _get_ticks_with_lock 146C  
                                         ___lmul@product 0028  
                                                ?_printf 0038  
                                        ?_PMD_Initialize 0070  
                                  ___is_double_click@now 0020  
                                                ?_strtol 002C  
                                   ??_enable_tx_transmit 0020  
                                                _SP1BRGH 011C  
                                                _SP1BRGL 011B  
                               ??_i2c_slave_set_register 0021  
                                                _OSCCON1 088D  
                                                _OSCCON3 088F  
                                           dump_buffer@i 0062  
                                           dump_buffer@j 0064  
                                           dump_buffer@p 0061  
                                                _OSCTUNE 0892  
                                                _SSP1ADD 018D  
                                                _SLRCONA 1F3B  
                                                _SLRCONC 1F51  
                                                _SSP1BUF 018C  
                                                _SSP1MSK 018E  
                                         ?_is_long_press 0070  
                                              ?_dispatch 0058  
                                   ?_get_ticks_with_lock 0020  
                                        _is_single_click 13A6  
                               ?_Enable_Global_Interrupt 0070  
                                      __end_of_get_ticks 13DF  
                                                ___flmul 0DC5  
                                                ___fltol 08B6  
                                                ___lldiv 1748  
                                                ___llmod 1655  
                                       update_mybutton@b 003A  
                                                __ptext1 1423  
                                                __ptext2 0B07  
                                                __ptext3 06D1  
                                                __ptext4 0998  
                                                __ptext5 0BD9  
                                                __ptext6 1416  
                                                __ptext7 0808  
                                                __ptext8 0CBB  
                                                __ptext9 1480  
  set_device_serial_number_to_i2c_slave_memorymap@buffer 003E  
                                      __end_of_hexpowers 1820  
                               dispatch@b1_clicked_count 005F  
                                                _dpowers 1846  
                                  _OSCILLATOR_Initialize 1394  
                                                _isalpha 14AE  
                                                _isdigit 1433  
                  i2c_slave_set_register@registerAddress 0021  
                               ??_PIN_MANAGER_Initialize 0020  
                                                _isspace 07E7  
                                                _isprint 1446  
                                                _isupper 1459  
                                                main@ph2 00E1  
                                  ??_get_ticks_with_lock 0024  
                                                clrloop0 1386  
                                                main@now 00E3  
                                             ??_dispatch 005C  
                                                _toupper 1480  
                               ?_reset_single_click_flag 0070  
                                   end_of_initialization 009B  
                                           init_button@b 0020  
                                      __end_of_tmr0_init 1423  
       set_device_serial_number_to_i2c_slave_memorymap@i 0041  
                                       ?_EUSART1_Write_1 0021  
                                                init_ram 0802  
                                                initloop 0803  
                               calculate_diff@prev_ticks 0028  
                                          ??_delay_state 0038  
                              ??_LED_flashes_three_times 0020  
                                        ___lldiv@divisor 0020  
                                        ___lldiv@counter 002D  
                                                printf@c 0057  
                                                printf@f 0038  
                               LED_flashes_three_times@i 0021  
                       __end_of_Disable_Global_Interrupt 0802  
                                                strtol@a 0035  
                                                strtol@c 003A  
                                                strtol@s 0039  
                                              _PORTAbits 000C  
                                       main@ph_adc_value 006E  
                                __end_of_is_single_click 13AF  
                                              _TRISAbits 0012  
                                        ??_is_long_press 0020  
                                        ___is_long_press 0998  
                                           strtol@endptr 002C  
                                    EUSART1_Write@txData 0020  
                                            ___flmul@grs 0037  
                                             dispatch@b1 0058  
                                             dispatch@b2 0059  
                        __end_of_Enable_Global_Interrupt 0004  
                                            printf@width 0055  
                                             _usart_init 1423  
                          __end_of_reset_long_press_flag 13B8  
                                       ??_i2c_slave_init 0020  
                                         __end_of___lmul 160A  
                                    __end_of_delay_state 1655  
                                         __end_of___wmul 14EB  
                                 ?_OSCILLATOR_Initialize 0070  
                                         __end_of_printf 06D1  
                                    ___is_single_click@b 0030  
                                         __end_of_strtol 0DC5  
                                    start_initialization 0069  
                                  __end_of_EUSART1_Write 1416  
                                        ___llmod@divisor 002E  
                                        ___llmod@counter 0037  
                  i2c_slave_set_register_with_lock@value 0022  
                            __end_of_i2c_slave_interrupt 16F3  
                                 _i2c_slave_set_register 13E9  
                                       ??_PMD_Initialize 0020  
                                               ??___lmul 0028  
                                          ??_dump_buffer 005A  
                                      ??_monitoring_sync 005C  
                                               ??___wmul 0024  
                                          ??_measurement 0059  
                                              __Umul8_16 152B  
                                            __pdataBANK3 01C0  
                                __end_of___is_long_press 0A40  
                                               ??_printf 0040  
                                               ??_strtol 0030  
                                          ??_init_button 0020  
                                       delay_state@state 0038  
                               _Disable_Global_Interrupt 0800  
                                              ___flmul@a 002D  
                                              ___flmul@b 0029  
                                            __pbssCOMMON 0078  
                                              ___latbits 0002  
                                          __pcstackBANK0 0020  
                                          __pcstackBANK1 00A0  
                                          __pcstackBANK2 0120  
                                       ?_is_single_click 0070  
                                           _isalpha$1753 0022  
                                     update_mybutton@now 0032  
                                           _isdigit$1719 0020  
                                           _currentState 00ED  
                                       main@payload_temp 00D1  
                                            ?_usart_init 0070  
                                            _delay_state 160A  
                                 _PIN_MANAGER_Initialize 154F  
                                               ?___flmul 0029  
                                               ?___fltol 0043  
                                               ?___lldiv 0020  
                                               ?___llmod 002E  
                                             ?__Umul8_16 0020  
                           ??_INTERRUPT_InterruptManager 0074  
                                              _get_ticks 13D5  
                                       is_single_click@b 0020  
                                               _BAUD1CON 011F  
                                    __end_of_dump_buffer 0B07  
                                    __end_of_measurement 15D6  
                                               ?_isalpha 0070  
                                               ?_isdigit 0070  
                               dispatch@b2_clicked_count 0060  
                                               ?_isspace 0070  
                                               ?_isprint 0070  
                                               ?_isupper 0070  
                                      dump_buffer@buffer 0060  
                                              _hexpowers 1800  
                                               ?_toupper 0070  
                                    __end_of_init_button 0998  
                                         ___wmul@product 0024  
                                               _LATCbits 001A  
                                              clear_ram0 1385  
                                              _tmr0_init 1416  
                                         _uart_rx_states 00EE  
                                               _PIE0bits 0716  
                                        i2c_slave_init@i 0021  
                                               _PIE3bits 0719  
                                               _PIR0bits 070C  
                                               _PIR3bits 070F  
                                              _slaveData 0220  
                                               _RX1DTPPS 1ECB  
                            delay_state@prev_ticks_delay 0157  
                                               _SSP1CON1 0190  
                                               _SSP1CON2 0191  
                                      ??_dump_memory_map 0066  
                                               _SSP1STAT 018F  
                                             ?_get_ticks 0020  
                                       ?___is_long_press 0020  
                                      ___wmul@multiplier 0020  
                                 reset_long_press_flag@b 0020  
                            __end_of_get_ticks_with_lock 1480  
                                             printf@flag 0054  
                                             printf@prec 0049  
                                              main@temp2 00DF  
                                              main@state 0120  
                                           _isspace$1756 0020  
                                      ___is_double_click 0BD9  
                                      ___lmul@multiplier 0020  
                                     ?___is_double_click 0020  
                                         is_long_press@b 0020  
                                       main@sensor_value 0066  
                               i2c_slave_interrupt@value 0073  
                                           _isprint$1722 0020  
                                             ?_tmr0_init 0070  
                                    ??___is_double_click 0024  
                                            _dump_buffer 0A40  
                                      measurement@F10462 01C0  
                                ??_OSCILLATOR_Initialize 0020  
                                            ??__Umul8_16 0022  
                                            _measurement 15A5  
                                      ??_update_mybutton 0036  
                                             _ANSELAbits 1F38  
                                           _isupper$1759 0020  
                                            _init_button 0927  
                              __end_of___is_double_click 0CBB  
                                               __ptext10 07E7  
                                               __ptext11 14AE  
                                               __ptext20 139D  
                                               __ptext12 1459  
                                               __ptext21 1579  
                                               __ptext13 15D6  
                                               __ptext30 13DF  
                                               __ptext22 15A5  
                                               __ptext14 13F3  
                                               __ptext31 0A40  
                                               __ptext23 1380  
                                               __ptext15 13E9  
                                               __ptext40 160A  
                                               __ptext32 1446  
                                               __ptext24 137B  
                                               __ptext16 0846  
                                               __ptext41 13D5  
                                               __ptext33 17A3  
                                               __ptext25 1494  
                                               __ptext17 13B8  
                                               __ptext50 0002  
                                               __ptext42 16F3  
                                               __ptext34 042C  
                                               __ptext26 140A  
                                               __ptext18 13AF  
                                               __ptext51 0800  
                                               __ptext43 08B6  
                                               __ptext35 13FE  
                                               __ptext27 0927  
                                               __ptext19 13A6  
                                               __ptext44 0DC5  
                                               __ptext36 1433  
                                               __ptext28 14EB  
                                               __ptext53 138B  
                                               __ptext45 152B  
                                               __ptext37 14CB  
                                               __ptext29 146C  
                                               __ptext54 16A0  
                                               __ptext46 13CB  
                                               __ptext38 1655  
                                               __ptext47 13C1  
                                               __ptext39 1748  
                                               __ptext48 154F  
                                               __ptext49 1394  
                                           _SSP1CON1bits 0190  
                                           _SSP1CON2bits 0191  
                                  __end_of_is_long_press 13A6  
                                               _dispatch 17A3  
                              get_ticks_with_lock@result 0024  
                                   main@b1_clicked_count 00E8  
                               ?_LED_flashes_three_times 0070  
                                        _monitoring_sync 0846  
                               reset_single_click_flag@b 0020  
                                ?_i2c_slave_set_register 0020  
                             ___is_long_press@condition1 002C  
                             ___is_long_press@condition2 002D  
                                          _uart_rx_ticks 00E9  
__end_of_set_device_serial_number_to_i2c_slave_memorymap 0846  
      ??_set_device_serial_number_to_i2c_slave_memorymap 003B  
       ?_set_device_serial_number_to_i2c_slave_memorymap 0070  
        _set_device_serial_number_to_i2c_slave_memorymap 0808  
                                  _uart_rx_package_event 0163  
                                          ??i1_get_ticks 0074  
                                  _reset_long_press_flag 13AF  
                                               int$flags 007E  
                                             strtol@base 002D  
                             ??_Disable_Global_Interrupt 0020  
                           dispatch@b1_clicked_count_ptr 005A  
                                             strtol@sign 0034  
                     __end_of_INTERRUPT_InterruptManager 0067  
                             _INTERRUPT_InterruptManager 0004  
                                              printf@idx 0048  
                                              printf@len 0051  
                                               _rxbuffer 01A0  
                                              printf@val 004D  
                                           _SSP1STATbits 018F  
                                               main@temp 00DB  
                                            ??_get_ticks 0024  
        i2c_slave_set_register_with_lock@registerAddress 0023  
                                _Enable_Global_Interrupt 0002  
                                              putch@data 0020  
                                             _INTCONbits 000B  
                        monitoring_sync@b1_clicked_count 005A  
                                         __pstringtext10 1912  
                                         __pstringtext11 1923  
                                         __pstringtext20 1989  
                                         __pstringtext12 1931  
                                         __pstringtext21 1990  
                                         __pstringtext13 193F  
                                         __pstringtext22 1996  
                                         __pstringtext14 194C  
                                         __pstringtext23 199C  
                                         __pstringtext15 1959  
                                         __pstringtext24 19A2  
                                         __pstringtext16 1964  
                                         __pstringtext25 19A6  
                                         __pstringtext17 196F  
                                         __pstringtext26 0000  
                                         __pstringtext18 1978  
                                         __pstringtext19 1981  
                                               isalpha@c 0023  
                                        main@prev_ticks2 015B  
                                               isdigit@c 0021  
                             __end_of_enable_uart_printf 1385  
                                               intlevel1 0000  
                                        _dump_buffer$863 005E  
                         __end_of_i2c_slave_set_register 13F3  
                                         _calculate_diff 16F3  
                                               isspace@c 0021  
                                       ___lldiv@dividend 0024  
                                ?_PIN_MANAGER_Initialize 0070  
                                               isprint@c 0021  
                                           ??_usart_init 0020  
                                            ??_tmr0_init 0020  
                                               isupper@c 0021  
                                        dump_buffer@size 0058  
                                           ?_delay_state 0070  
                                       measurement@value 0058  
                                       measurement@state 00C0  
                                _reset_single_click_flag 13B8  
                                       measurement@txbuf 00A0  
                                       EUSART1_Write_1@i 0024  
                                               printf@ap 0053  
                                               printf@cp 004B  
                                      ??_EUSART1_Write_1 0022  
                                    __end_ofi1_get_ticks 1394  
                                          __pstringtext1 1846  
                                          __pstringtext2 1800  
                                          __pstringtext3 186E  
                                          __pstringtext4 1891  
                                          __pstringtext5 18AC  
                                          __pstringtext6 18C3  
                                          __pstringtext7 18DA  
                                          __pstringtext8 18F0  
                                          __pstringtext9 1901  
               __end_of_i2c_slave_set_register_with_lock 13FE  
                     ??_i2c_slave_set_register_with_lock 0023  
                      ?_i2c_slave_set_register_with_lock 0022  
                       _i2c_slave_set_register_with_lock 13F3  
                                            _printf$1436 0046  
                                 __Umul8_16@multiplicand 0020  
                                   monitoring_sync@state 005C  
                                             _SSP1DATPPS 1EC6  
                                             _SSP1CLKPPS 1EC5  
                                       ___lldiv@quotient 0029  
                                               toupper@c 0021  
                                     main@temp_adc_value 00D5  
                                     __end_of_usart_init 1433  
                                __end_of_monitoring_sync 08B6  
                        __end_of_LED_flashes_three_times 15A5  
                                 __end_of_calculate_diff 1748  
                         __end_of_PIN_MANAGER_Initialize 1579  
                                  EUSART1_Write_1@length 0021  
                                        _dump_memory_map 13DF  
                                   __Umul8_16@multiplier 0028  
                                     calculate_diff@diff 0034  
                                   EUSART1_Write_1@txbuf 0023  
                                      calculate_diff@now 0024  
                                 ?_reset_long_press_flag 0070  
                                      __Umul8_16@product 0024  
                                      ___is_long_press@b 002E  
                                    ___is_long_press@now 0020  
