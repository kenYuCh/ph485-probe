

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Apr 21 19:35:09 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18425
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK5,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    36                           	psect	stringtext29,global,class=STRCODE,delta=2,noexec
    37                           	psect	stringtext30,global,class=STRCODE,delta=2,noexec
    38                           	psect	stringtext31,global,class=STRCODE,delta=2,noexec
    39                           	psect	cinit,global,class=CODE,merge=1,delta=2
    40                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    41                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    42                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    43                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    44                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    45                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    46                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    47                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    48                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    49                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,noexec
    50                           	psect	inittext,global,class=CODE,delta=2
    51                           	psect	clrtext,global,class=CODE,delta=2
    52                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    53                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    54                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    55                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    56                           	psect	text1,local,class=CODE,merge=1,delta=2
    57                           	psect	text2,local,class=CODE,merge=1,delta=2
    58                           	psect	text3,local,class=CODE,merge=1,delta=2
    59                           	psect	text4,local,class=CODE,merge=1,delta=2
    60                           	psect	text5,local,class=CODE,merge=1,delta=2
    61                           	psect	text6,local,class=CODE,merge=1,delta=2
    62                           	psect	text7,local,class=CODE,merge=1,delta=2
    63                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    68                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text14,local,class=CODE,merge=1,delta=2
    70                           	psect	text15,local,class=CODE,merge=1,delta=2
    71                           	psect	text16,local,class=CODE,merge=1,delta=2
    72                           	psect	text17,local,class=CODE,merge=1,delta=2
    73                           	psect	text18,local,class=CODE,merge=1,delta=2
    74                           	psect	text19,local,class=CODE,merge=1,delta=2
    75                           	psect	text20,local,class=CODE,merge=1,delta=2
    76                           	psect	text21,local,class=CODE,merge=1,delta=2
    77                           	psect	text22,local,class=CODE,merge=1,delta=2
    78                           	psect	text23,local,class=CODE,merge=1,delta=2
    79                           	psect	text24,local,class=CODE,merge=1,delta=2
    80                           	psect	text25,local,class=CODE,merge=1,delta=2
    81                           	psect	text26,local,class=CODE,merge=1,delta=2
    82                           	psect	text27,local,class=CODE,merge=1,delta=2
    83                           	psect	text28,local,class=CODE,merge=1,delta=2
    84                           	psect	text29,local,class=CODE,merge=1,delta=2
    85                           	psect	text30,local,class=CODE,merge=1,delta=2
    86                           	psect	text31,local,class=CODE,merge=1,delta=2
    87                           	psect	text32,local,class=CODE,merge=1,delta=2
    88                           	psect	text33,local,class=CODE,merge=1,delta=2
    89                           	psect	text34,local,class=CODE,merge=1,delta=2
    90                           	psect	text35,local,class=CODE,merge=1,delta=2
    91                           	psect	text36,local,class=CODE,merge=1,delta=2
    92                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text40,local,class=CODE,merge=1,delta=2
    96                           	psect	text41,local,class=CODE,merge=1,delta=2
    97                           	psect	text42,local,class=CODE,merge=1,delta=2
    98                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text44,local,class=CODE,merge=1,delta=2
   100                           	psect	text45,local,class=CODE,merge=1,delta=2,group=3
   101                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
   104                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
   105                           	psect	text50,local,class=CODE,merge=1,delta=2,group=3
   106                           	psect	text51,local,class=CODE,merge=1,delta=2
   107                           	psect	text52,local,class=CODE,merge=1,delta=2
   108                           	psect	text53,local,class=CODE,merge=1,delta=2
   109                           	psect	text54,local,class=CODE,merge=1,delta=2
   110                           	psect	text55,local,class=CODE,merge=1,delta=2
   111                           	psect	text56,local,class=CODE,merge=1,delta=2
   112                           	psect	text57,local,class=CODE,merge=1,delta=2
   113                           	psect	text58,local,class=CODE,merge=1,delta=2
   114                           	psect	intentry,global,class=CODE,delta=2
   115                           	psect	text60,local,class=CODE,merge=1,delta=2
   116                           	psect	text61,local,class=CODE,merge=1,delta=2
   117                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   118                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   119                           	dabs	1,0x7E,2
   120     0000                     
   121                           ; Version 2.40
   122                           ; Generated 04/07/2022 GMT
   123                           ; 
   124                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution. Publication is not required when
   138                           ;        this file is used in an embedded application.
   139                           ; 
   140                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   141                           ;        software without specific prior written permission.
   142                           ; 
   143                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   144                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   145                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   146                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   147                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   148                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   149                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   150                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   151                           ; 
   152                           ; 
   153                           ; Code-generator required, PIC16F18425 Definitions
   154                           ; 
   155                           ; SFR Addresses
   156     0000                     	;# 
   157     0001                     	;# 
   158     0002                     	;# 
   159     0003                     	;# 
   160     0004                     	;# 
   161     0005                     	;# 
   162     0006                     	;# 
   163     0007                     	;# 
   164     0008                     	;# 
   165     0009                     	;# 
   166     000A                     	;# 
   167     000B                     	;# 
   168     000C                     	;# 
   169     000E                     	;# 
   170     0012                     	;# 
   171     0014                     	;# 
   172     0018                     	;# 
   173     001A                     	;# 
   174     008C                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008E                     	;# 
   179     008F                     	;# 
   180     0090                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0092                     	;# 
   185     0093                     	;# 
   186     0094                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0096                     	;# 
   191     0097                     	;# 
   192     0098                     	;# 
   193     0099                     	;# 
   194     009A                     	;# 
   195     009B                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009D                     	;# 
   200     009E                     	;# 
   201     009F                     	;# 
   202     010C                     	;# 
   203     010C                     	;# 
   204     010D                     	;# 
   205     010E                     	;# 
   206     010F                     	;# 
   207     010F                     	;# 
   208     0110                     	;# 
   209     0111                     	;# 
   210     0112                     	;# 
   211     0113                     	;# 
   212     0114                     	;# 
   213     0115                     	;# 
   214     0116                     	;# 
   215     0117                     	;# 
   216     0118                     	;# 
   217     0119                     	;# 
   218     0119                     	;# 
   219     0119                     	;# 
   220     011A                     	;# 
   221     011A                     	;# 
   222     011A                     	;# 
   223     011B                     	;# 
   224     011B                     	;# 
   225     011B                     	;# 
   226     011B                     	;# 
   227     011B                     	;# 
   228     011C                     	;# 
   229     011C                     	;# 
   230     011C                     	;# 
   231     011D                     	;# 
   232     011D                     	;# 
   233     011D                     	;# 
   234     011E                     	;# 
   235     011E                     	;# 
   236     011E                     	;# 
   237     011F                     	;# 
   238     011F                     	;# 
   239     011F                     	;# 
   240     011F                     	;# 
   241     011F                     	;# 
   242     018C                     	;# 
   243     018D                     	;# 
   244     018E                     	;# 
   245     018F                     	;# 
   246     0190                     	;# 
   247     0191                     	;# 
   248     0192                     	;# 
   249     0196                     	;# 
   250     0197                     	;# 
   251     0198                     	;# 
   252     0199                     	;# 
   253     019A                     	;# 
   254     019B                     	;# 
   255     019C                     	;# 
   256     020C                     	;# 
   257     020D                     	;# 
   258     020E                     	;# 
   259     020E                     	;# 
   260     020F                     	;# 
   261     020F                     	;# 
   262     0210                     	;# 
   263     0210                     	;# 
   264     0211                     	;# 
   265     0211                     	;# 
   266     0212                     	;# 
   267     0213                     	;# 
   268     0214                     	;# 
   269     0214                     	;# 
   270     0215                     	;# 
   271     0215                     	;# 
   272     0216                     	;# 
   273     0216                     	;# 
   274     0217                     	;# 
   275     0217                     	;# 
   276     0218                     	;# 
   277     0219                     	;# 
   278     021A                     	;# 
   279     021A                     	;# 
   280     021B                     	;# 
   281     021B                     	;# 
   282     021C                     	;# 
   283     021C                     	;# 
   284     021D                     	;# 
   285     021D                     	;# 
   286     021E                     	;# 
   287     021F                     	;# 
   288     028C                     	;# 
   289     028C                     	;# 
   290     028D                     	;# 
   291     028D                     	;# 
   292     028E                     	;# 
   293     028F                     	;# 
   294     0290                     	;# 
   295     0291                     	;# 
   296     0292                     	;# 
   297     0292                     	;# 
   298     0293                     	;# 
   299     0293                     	;# 
   300     0294                     	;# 
   301     0295                     	;# 
   302     0296                     	;# 
   303     0297                     	;# 
   304     0298                     	;# 
   305     0298                     	;# 
   306     0299                     	;# 
   307     0299                     	;# 
   308     029A                     	;# 
   309     029B                     	;# 
   310     029C                     	;# 
   311     029D                     	;# 
   312     029F                     	;# 
   313     030C                     	;# 
   314     030C                     	;# 
   315     030D                     	;# 
   316     030E                     	;# 
   317     030F                     	;# 
   318     0310                     	;# 
   319     0310                     	;# 
   320     0311                     	;# 
   321     0312                     	;# 
   322     0313                     	;# 
   323     0314                     	;# 
   324     0314                     	;# 
   325     0315                     	;# 
   326     0316                     	;# 
   327     0317                     	;# 
   328     0318                     	;# 
   329     0318                     	;# 
   330     0319                     	;# 
   331     031A                     	;# 
   332     031B                     	;# 
   333     038C                     	;# 
   334     038C                     	;# 
   335     038D                     	;# 
   336     038E                     	;# 
   337     0390                     	;# 
   338     0390                     	;# 
   339     0391                     	;# 
   340     0392                     	;# 
   341     048C                     	;# 
   342     048C                     	;# 
   343     048D                     	;# 
   344     048E                     	;# 
   345     048F                     	;# 
   346     048F                     	;# 
   347     0490                     	;# 
   348     0491                     	;# 
   349     0492                     	;# 
   350     0492                     	;# 
   351     0493                     	;# 
   352     0494                     	;# 
   353     0495                     	;# 
   354     0495                     	;# 
   355     0496                     	;# 
   356     0497                     	;# 
   357     0498                     	;# 
   358     0499                     	;# 
   359     049A                     	;# 
   360     049B                     	;# 
   361     049C                     	;# 
   362     049D                     	;# 
   363     058C                     	;# 
   364     058C                     	;# 
   365     058D                     	;# 
   366     058E                     	;# 
   367     058F                     	;# 
   368     058F                     	;# 
   369     0590                     	;# 
   370     0591                     	;# 
   371     0592                     	;# 
   372     0593                     	;# 
   373     059C                     	;# 
   374     059C                     	;# 
   375     059D                     	;# 
   376     059D                     	;# 
   377     059E                     	;# 
   378     059F                     	;# 
   379     060C                     	;# 
   380     060C                     	;# 
   381     060D                     	;# 
   382     060D                     	;# 
   383     060E                     	;# 
   384     060F                     	;# 
   385     0610                     	;# 
   386     0611                     	;# 
   387     0612                     	;# 
   388     0613                     	;# 
   389     0614                     	;# 
   390     0616                     	;# 
   391     0616                     	;# 
   392     0617                     	;# 
   393     0617                     	;# 
   394     0618                     	;# 
   395     0619                     	;# 
   396     061A                     	;# 
   397     061B                     	;# 
   398     061C                     	;# 
   399     061D                     	;# 
   400     061E                     	;# 
   401     070C                     	;# 
   402     070D                     	;# 
   403     070E                     	;# 
   404     070F                     	;# 
   405     0710                     	;# 
   406     0711                     	;# 
   407     0712                     	;# 
   408     0713                     	;# 
   409     0714                     	;# 
   410     0716                     	;# 
   411     0717                     	;# 
   412     0718                     	;# 
   413     0719                     	;# 
   414     071A                     	;# 
   415     071B                     	;# 
   416     071C                     	;# 
   417     071D                     	;# 
   418     071E                     	;# 
   419     0796                     	;# 
   420     0797                     	;# 
   421     0798                     	;# 
   422     0799                     	;# 
   423     079A                     	;# 
   424     079B                     	;# 
   425     079C                     	;# 
   426     079D                     	;# 
   427     080C                     	;# 
   428     080D                     	;# 
   429     080E                     	;# 
   430     080F                     	;# 
   431     0810                     	;# 
   432     0811                     	;# 
   433     0812                     	;# 
   434     0813                     	;# 
   435     0814                     	;# 
   436     081A                     	;# 
   437     081A                     	;# 
   438     081B                     	;# 
   439     081C                     	;# 
   440     081C                     	;# 
   441     081D                     	;# 
   442     081E                     	;# 
   443     081F                     	;# 
   444     088C                     	;# 
   445     088D                     	;# 
   446     088E                     	;# 
   447     088F                     	;# 
   448     0890                     	;# 
   449     0891                     	;# 
   450     0892                     	;# 
   451     0893                     	;# 
   452     0895                     	;# 
   453     0896                     	;# 
   454     0897                     	;# 
   455     0898                     	;# 
   456     0899                     	;# 
   457     089A                     	;# 
   458     089B                     	;# 
   459     090C                     	;# 
   460     090E                     	;# 
   461     090F                     	;# 
   462     091F                     	;# 
   463     098F                     	;# 
   464     098F                     	;# 
   465     0990                     	;# 
   466     0991                     	;# 
   467     0992                     	;# 
   468     0993                     	;# 
   469     0994                     	;# 
   470     0995                     	;# 
   471     0996                     	;# 
   472     0997                     	;# 
   473     1E0F                     	;# 
   474     1E10                     	;# 
   475     1E11                     	;# 
   476     1E12                     	;# 
   477     1E13                     	;# 
   478     1E14                     	;# 
   479     1E15                     	;# 
   480     1E16                     	;# 
   481     1E17                     	;# 
   482     1E18                     	;# 
   483     1E19                     	;# 
   484     1E1A                     	;# 
   485     1E1B                     	;# 
   486     1E1C                     	;# 
   487     1E1D                     	;# 
   488     1E1E                     	;# 
   489     1E1F                     	;# 
   490     1E20                     	;# 
   491     1E21                     	;# 
   492     1E22                     	;# 
   493     1E23                     	;# 
   494     1E24                     	;# 
   495     1E25                     	;# 
   496     1E26                     	;# 
   497     1E27                     	;# 
   498     1E28                     	;# 
   499     1E29                     	;# 
   500     1E2A                     	;# 
   501     1E2B                     	;# 
   502     1E2C                     	;# 
   503     1E2D                     	;# 
   504     1E2E                     	;# 
   505     1E2F                     	;# 
   506     1E30                     	;# 
   507     1E31                     	;# 
   508     1E32                     	;# 
   509     1E33                     	;# 
   510     1E34                     	;# 
   511     1E35                     	;# 
   512     1E36                     	;# 
   513     1E37                     	;# 
   514     1E8F                     	;# 
   515     1E90                     	;# 
   516     1E91                     	;# 
   517     1E92                     	;# 
   518     1E93                     	;# 
   519     1E94                     	;# 
   520     1E95                     	;# 
   521     1E96                     	;# 
   522     1E97                     	;# 
   523     1E9C                     	;# 
   524     1E9D                     	;# 
   525     1E9E                     	;# 
   526     1EA1                     	;# 
   527     1EA2                     	;# 
   528     1EA3                     	;# 
   529     1EA4                     	;# 
   530     1EA9                     	;# 
   531     1EAA                     	;# 
   532     1EB1                     	;# 
   533     1EB2                     	;# 
   534     1EB8                     	;# 
   535     1EB9                     	;# 
   536     1EBA                     	;# 
   537     1EBB                     	;# 
   538     1EBC                     	;# 
   539     1EBD                     	;# 
   540     1EBE                     	;# 
   541     1EC3                     	;# 
   542     1EC5                     	;# 
   543     1EC6                     	;# 
   544     1EC7                     	;# 
   545     1EC8                     	;# 
   546     1EC9                     	;# 
   547     1ECA                     	;# 
   548     1ECB                     	;# 
   549     1ECC                     	;# 
   550     1F10                     	;# 
   551     1F11                     	;# 
   552     1F12                     	;# 
   553     1F14                     	;# 
   554     1F15                     	;# 
   555     1F20                     	;# 
   556     1F21                     	;# 
   557     1F22                     	;# 
   558     1F23                     	;# 
   559     1F24                     	;# 
   560     1F25                     	;# 
   561     1F38                     	;# 
   562     1F39                     	;# 
   563     1F3A                     	;# 
   564     1F3B                     	;# 
   565     1F3C                     	;# 
   566     1F3D                     	;# 
   567     1F3E                     	;# 
   568     1F3F                     	;# 
   569     1F4E                     	;# 
   570     1F4F                     	;# 
   571     1F50                     	;# 
   572     1F51                     	;# 
   573     1F52                     	;# 
   574     1F53                     	;# 
   575     1F54                     	;# 
   576     1F55                     	;# 
   577     1FE4                     	;# 
   578     1FE5                     	;# 
   579     1FE6                     	;# 
   580     1FE7                     	;# 
   581     1FE8                     	;# 
   582     1FE8                     	;# 
   583     1FE9                     	;# 
   584     1FEA                     	;# 
   585     1FEB                     	;# 
   586     1FED                     	;# 
   587     1FEE                     	;# 
   588     1FEF                     	;# 
   589     0000                     	;# 
   590     0001                     	;# 
   591     0002                     	;# 
   592     0003                     	;# 
   593     0004                     	;# 
   594     0005                     	;# 
   595     0006                     	;# 
   596     0007                     	;# 
   597     0008                     	;# 
   598     0009                     	;# 
   599     000A                     	;# 
   600     000B                     	;# 
   601     000C                     	;# 
   602     000E                     	;# 
   603     0012                     	;# 
   604     0014                     	;# 
   605     0018                     	;# 
   606     001A                     	;# 
   607     008C                     	;# 
   608     008C                     	;# 
   609     008D                     	;# 
   610     008E                     	;# 
   611     008E                     	;# 
   612     008F                     	;# 
   613     0090                     	;# 
   614     0090                     	;# 
   615     0091                     	;# 
   616     0092                     	;# 
   617     0092                     	;# 
   618     0093                     	;# 
   619     0094                     	;# 
   620     0094                     	;# 
   621     0095                     	;# 
   622     0096                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009D                     	;# 
   633     009E                     	;# 
   634     009F                     	;# 
   635     010C                     	;# 
   636     010C                     	;# 
   637     010D                     	;# 
   638     010E                     	;# 
   639     010F                     	;# 
   640     010F                     	;# 
   641     0110                     	;# 
   642     0111                     	;# 
   643     0112                     	;# 
   644     0113                     	;# 
   645     0114                     	;# 
   646     0115                     	;# 
   647     0116                     	;# 
   648     0117                     	;# 
   649     0118                     	;# 
   650     0119                     	;# 
   651     0119                     	;# 
   652     0119                     	;# 
   653     011A                     	;# 
   654     011A                     	;# 
   655     011A                     	;# 
   656     011B                     	;# 
   657     011B                     	;# 
   658     011B                     	;# 
   659     011B                     	;# 
   660     011B                     	;# 
   661     011C                     	;# 
   662     011C                     	;# 
   663     011C                     	;# 
   664     011D                     	;# 
   665     011D                     	;# 
   666     011D                     	;# 
   667     011E                     	;# 
   668     011E                     	;# 
   669     011E                     	;# 
   670     011F                     	;# 
   671     011F                     	;# 
   672     011F                     	;# 
   673     011F                     	;# 
   674     011F                     	;# 
   675     018C                     	;# 
   676     018D                     	;# 
   677     018E                     	;# 
   678     018F                     	;# 
   679     0190                     	;# 
   680     0191                     	;# 
   681     0192                     	;# 
   682     0196                     	;# 
   683     0197                     	;# 
   684     0198                     	;# 
   685     0199                     	;# 
   686     019A                     	;# 
   687     019B                     	;# 
   688     019C                     	;# 
   689     020C                     	;# 
   690     020D                     	;# 
   691     020E                     	;# 
   692     020E                     	;# 
   693     020F                     	;# 
   694     020F                     	;# 
   695     0210                     	;# 
   696     0210                     	;# 
   697     0211                     	;# 
   698     0211                     	;# 
   699     0212                     	;# 
   700     0213                     	;# 
   701     0214                     	;# 
   702     0214                     	;# 
   703     0215                     	;# 
   704     0215                     	;# 
   705     0216                     	;# 
   706     0216                     	;# 
   707     0217                     	;# 
   708     0217                     	;# 
   709     0218                     	;# 
   710     0219                     	;# 
   711     021A                     	;# 
   712     021A                     	;# 
   713     021B                     	;# 
   714     021B                     	;# 
   715     021C                     	;# 
   716     021C                     	;# 
   717     021D                     	;# 
   718     021D                     	;# 
   719     021E                     	;# 
   720     021F                     	;# 
   721     028C                     	;# 
   722     028C                     	;# 
   723     028D                     	;# 
   724     028D                     	;# 
   725     028E                     	;# 
   726     028F                     	;# 
   727     0290                     	;# 
   728     0291                     	;# 
   729     0292                     	;# 
   730     0292                     	;# 
   731     0293                     	;# 
   732     0293                     	;# 
   733     0294                     	;# 
   734     0295                     	;# 
   735     0296                     	;# 
   736     0297                     	;# 
   737     0298                     	;# 
   738     0298                     	;# 
   739     0299                     	;# 
   740     0299                     	;# 
   741     029A                     	;# 
   742     029B                     	;# 
   743     029C                     	;# 
   744     029D                     	;# 
   745     029F                     	;# 
   746     030C                     	;# 
   747     030C                     	;# 
   748     030D                     	;# 
   749     030E                     	;# 
   750     030F                     	;# 
   751     0310                     	;# 
   752     0310                     	;# 
   753     0311                     	;# 
   754     0312                     	;# 
   755     0313                     	;# 
   756     0314                     	;# 
   757     0314                     	;# 
   758     0315                     	;# 
   759     0316                     	;# 
   760     0317                     	;# 
   761     0318                     	;# 
   762     0318                     	;# 
   763     0319                     	;# 
   764     031A                     	;# 
   765     031B                     	;# 
   766     038C                     	;# 
   767     038C                     	;# 
   768     038D                     	;# 
   769     038E                     	;# 
   770     0390                     	;# 
   771     0390                     	;# 
   772     0391                     	;# 
   773     0392                     	;# 
   774     048C                     	;# 
   775     048C                     	;# 
   776     048D                     	;# 
   777     048E                     	;# 
   778     048F                     	;# 
   779     048F                     	;# 
   780     0490                     	;# 
   781     0491                     	;# 
   782     0492                     	;# 
   783     0492                     	;# 
   784     0493                     	;# 
   785     0494                     	;# 
   786     0495                     	;# 
   787     0495                     	;# 
   788     0496                     	;# 
   789     0497                     	;# 
   790     0498                     	;# 
   791     0499                     	;# 
   792     049A                     	;# 
   793     049B                     	;# 
   794     049C                     	;# 
   795     049D                     	;# 
   796     058C                     	;# 
   797     058C                     	;# 
   798     058D                     	;# 
   799     058E                     	;# 
   800     058F                     	;# 
   801     058F                     	;# 
   802     0590                     	;# 
   803     0591                     	;# 
   804     0592                     	;# 
   805     0593                     	;# 
   806     059C                     	;# 
   807     059C                     	;# 
   808     059D                     	;# 
   809     059D                     	;# 
   810     059E                     	;# 
   811     059F                     	;# 
   812     060C                     	;# 
   813     060C                     	;# 
   814     060D                     	;# 
   815     060D                     	;# 
   816     060E                     	;# 
   817     060F                     	;# 
   818     0610                     	;# 
   819     0611                     	;# 
   820     0612                     	;# 
   821     0613                     	;# 
   822     0614                     	;# 
   823     0616                     	;# 
   824     0616                     	;# 
   825     0617                     	;# 
   826     0617                     	;# 
   827     0618                     	;# 
   828     0619                     	;# 
   829     061A                     	;# 
   830     061B                     	;# 
   831     061C                     	;# 
   832     061D                     	;# 
   833     061E                     	;# 
   834     070C                     	;# 
   835     070D                     	;# 
   836     070E                     	;# 
   837     070F                     	;# 
   838     0710                     	;# 
   839     0711                     	;# 
   840     0712                     	;# 
   841     0713                     	;# 
   842     0714                     	;# 
   843     0716                     	;# 
   844     0717                     	;# 
   845     0718                     	;# 
   846     0719                     	;# 
   847     071A                     	;# 
   848     071B                     	;# 
   849     071C                     	;# 
   850     071D                     	;# 
   851     071E                     	;# 
   852     0796                     	;# 
   853     0797                     	;# 
   854     0798                     	;# 
   855     0799                     	;# 
   856     079A                     	;# 
   857     079B                     	;# 
   858     079C                     	;# 
   859     079D                     	;# 
   860     080C                     	;# 
   861     080D                     	;# 
   862     080E                     	;# 
   863     080F                     	;# 
   864     0810                     	;# 
   865     0811                     	;# 
   866     0812                     	;# 
   867     0813                     	;# 
   868     0814                     	;# 
   869     081A                     	;# 
   870     081A                     	;# 
   871     081B                     	;# 
   872     081C                     	;# 
   873     081C                     	;# 
   874     081D                     	;# 
   875     081E                     	;# 
   876     081F                     	;# 
   877     088C                     	;# 
   878     088D                     	;# 
   879     088E                     	;# 
   880     088F                     	;# 
   881     0890                     	;# 
   882     0891                     	;# 
   883     0892                     	;# 
   884     0893                     	;# 
   885     0895                     	;# 
   886     0896                     	;# 
   887     0897                     	;# 
   888     0898                     	;# 
   889     0899                     	;# 
   890     089A                     	;# 
   891     089B                     	;# 
   892     090C                     	;# 
   893     090E                     	;# 
   894     090F                     	;# 
   895     091F                     	;# 
   896     098F                     	;# 
   897     098F                     	;# 
   898     0990                     	;# 
   899     0991                     	;# 
   900     0992                     	;# 
   901     0993                     	;# 
   902     0994                     	;# 
   903     0995                     	;# 
   904     0996                     	;# 
   905     0997                     	;# 
   906     1E0F                     	;# 
   907     1E10                     	;# 
   908     1E11                     	;# 
   909     1E12                     	;# 
   910     1E13                     	;# 
   911     1E14                     	;# 
   912     1E15                     	;# 
   913     1E16                     	;# 
   914     1E17                     	;# 
   915     1E18                     	;# 
   916     1E19                     	;# 
   917     1E1A                     	;# 
   918     1E1B                     	;# 
   919     1E1C                     	;# 
   920     1E1D                     	;# 
   921     1E1E                     	;# 
   922     1E1F                     	;# 
   923     1E20                     	;# 
   924     1E21                     	;# 
   925     1E22                     	;# 
   926     1E23                     	;# 
   927     1E24                     	;# 
   928     1E25                     	;# 
   929     1E26                     	;# 
   930     1E27                     	;# 
   931     1E28                     	;# 
   932     1E29                     	;# 
   933     1E2A                     	;# 
   934     1E2B                     	;# 
   935     1E2C                     	;# 
   936     1E2D                     	;# 
   937     1E2E                     	;# 
   938     1E2F                     	;# 
   939     1E30                     	;# 
   940     1E31                     	;# 
   941     1E32                     	;# 
   942     1E33                     	;# 
   943     1E34                     	;# 
   944     1E35                     	;# 
   945     1E36                     	;# 
   946     1E37                     	;# 
   947     1E8F                     	;# 
   948     1E90                     	;# 
   949     1E91                     	;# 
   950     1E92                     	;# 
   951     1E93                     	;# 
   952     1E94                     	;# 
   953     1E95                     	;# 
   954     1E96                     	;# 
   955     1E97                     	;# 
   956     1E9C                     	;# 
   957     1E9D                     	;# 
   958     1E9E                     	;# 
   959     1EA1                     	;# 
   960     1EA2                     	;# 
   961     1EA3                     	;# 
   962     1EA4                     	;# 
   963     1EA9                     	;# 
   964     1EAA                     	;# 
   965     1EB1                     	;# 
   966     1EB2                     	;# 
   967     1EB8                     	;# 
   968     1EB9                     	;# 
   969     1EBA                     	;# 
   970     1EBB                     	;# 
   971     1EBC                     	;# 
   972     1EBD                     	;# 
   973     1EBE                     	;# 
   974     1EC3                     	;# 
   975     1EC5                     	;# 
   976     1EC6                     	;# 
   977     1EC7                     	;# 
   978     1EC8                     	;# 
   979     1EC9                     	;# 
   980     1ECA                     	;# 
   981     1ECB                     	;# 
   982     1ECC                     	;# 
   983     1F10                     	;# 
   984     1F11                     	;# 
   985     1F12                     	;# 
   986     1F14                     	;# 
   987     1F15                     	;# 
   988     1F20                     	;# 
   989     1F21                     	;# 
   990     1F22                     	;# 
   991     1F23                     	;# 
   992     1F24                     	;# 
   993     1F25                     	;# 
   994     1F38                     	;# 
   995     1F39                     	;# 
   996     1F3A                     	;# 
   997     1F3B                     	;# 
   998     1F3C                     	;# 
   999     1F3D                     	;# 
  1000     1F3E                     	;# 
  1001     1F3F                     	;# 
  1002     1F4E                     	;# 
  1003     1F4F                     	;# 
  1004     1F50                     	;# 
  1005     1F51                     	;# 
  1006     1F52                     	;# 
  1007     1F53                     	;# 
  1008     1F54                     	;# 
  1009     1F55                     	;# 
  1010     1FE4                     	;# 
  1011     1FE5                     	;# 
  1012     1FE6                     	;# 
  1013     1FE7                     	;# 
  1014     1FE8                     	;# 
  1015     1FE8                     	;# 
  1016     1FE9                     	;# 
  1017     1FEA                     	;# 
  1018     1FEB                     	;# 
  1019     1FED                     	;# 
  1020     1FEE                     	;# 
  1021     1FEF                     	;# 
  1022     0000                     	;# 
  1023     0001                     	;# 
  1024     0002                     	;# 
  1025     0003                     	;# 
  1026     0004                     	;# 
  1027     0005                     	;# 
  1028     0006                     	;# 
  1029     0007                     	;# 
  1030     0008                     	;# 
  1031     0009                     	;# 
  1032     000A                     	;# 
  1033     000B                     	;# 
  1034     000C                     	;# 
  1035     000E                     	;# 
  1036     0012                     	;# 
  1037     0014                     	;# 
  1038     0018                     	;# 
  1039     001A                     	;# 
  1040     008C                     	;# 
  1041     008C                     	;# 
  1042     008D                     	;# 
  1043     008E                     	;# 
  1044     008E                     	;# 
  1045     008F                     	;# 
  1046     0090                     	;# 
  1047     0090                     	;# 
  1048     0091                     	;# 
  1049     0092                     	;# 
  1050     0092                     	;# 
  1051     0093                     	;# 
  1052     0094                     	;# 
  1053     0094                     	;# 
  1054     0095                     	;# 
  1055     0096                     	;# 
  1056     0096                     	;# 
  1057     0097                     	;# 
  1058     0098                     	;# 
  1059     0099                     	;# 
  1060     009A                     	;# 
  1061     009B                     	;# 
  1062     009B                     	;# 
  1063     009C                     	;# 
  1064     009D                     	;# 
  1065     009D                     	;# 
  1066     009E                     	;# 
  1067     009F                     	;# 
  1068     010C                     	;# 
  1069     010C                     	;# 
  1070     010D                     	;# 
  1071     010E                     	;# 
  1072     010F                     	;# 
  1073     010F                     	;# 
  1074     0110                     	;# 
  1075     0111                     	;# 
  1076     0112                     	;# 
  1077     0113                     	;# 
  1078     0114                     	;# 
  1079     0115                     	;# 
  1080     0116                     	;# 
  1081     0117                     	;# 
  1082     0118                     	;# 
  1083     0119                     	;# 
  1084     0119                     	;# 
  1085     0119                     	;# 
  1086     011A                     	;# 
  1087     011A                     	;# 
  1088     011A                     	;# 
  1089     011B                     	;# 
  1090     011B                     	;# 
  1091     011B                     	;# 
  1092     011B                     	;# 
  1093     011B                     	;# 
  1094     011C                     	;# 
  1095     011C                     	;# 
  1096     011C                     	;# 
  1097     011D                     	;# 
  1098     011D                     	;# 
  1099     011D                     	;# 
  1100     011E                     	;# 
  1101     011E                     	;# 
  1102     011E                     	;# 
  1103     011F                     	;# 
  1104     011F                     	;# 
  1105     011F                     	;# 
  1106     011F                     	;# 
  1107     011F                     	;# 
  1108     018C                     	;# 
  1109     018D                     	;# 
  1110     018E                     	;# 
  1111     018F                     	;# 
  1112     0190                     	;# 
  1113     0191                     	;# 
  1114     0192                     	;# 
  1115     0196                     	;# 
  1116     0197                     	;# 
  1117     0198                     	;# 
  1118     0199                     	;# 
  1119     019A                     	;# 
  1120     019B                     	;# 
  1121     019C                     	;# 
  1122     020C                     	;# 
  1123     020D                     	;# 
  1124     020E                     	;# 
  1125     020E                     	;# 
  1126     020F                     	;# 
  1127     020F                     	;# 
  1128     0210                     	;# 
  1129     0210                     	;# 
  1130     0211                     	;# 
  1131     0211                     	;# 
  1132     0212                     	;# 
  1133     0213                     	;# 
  1134     0214                     	;# 
  1135     0214                     	;# 
  1136     0215                     	;# 
  1137     0215                     	;# 
  1138     0216                     	;# 
  1139     0216                     	;# 
  1140     0217                     	;# 
  1141     0217                     	;# 
  1142     0218                     	;# 
  1143     0219                     	;# 
  1144     021A                     	;# 
  1145     021A                     	;# 
  1146     021B                     	;# 
  1147     021B                     	;# 
  1148     021C                     	;# 
  1149     021C                     	;# 
  1150     021D                     	;# 
  1151     021D                     	;# 
  1152     021E                     	;# 
  1153     021F                     	;# 
  1154     028C                     	;# 
  1155     028C                     	;# 
  1156     028D                     	;# 
  1157     028D                     	;# 
  1158     028E                     	;# 
  1159     028F                     	;# 
  1160     0290                     	;# 
  1161     0291                     	;# 
  1162     0292                     	;# 
  1163     0292                     	;# 
  1164     0293                     	;# 
  1165     0293                     	;# 
  1166     0294                     	;# 
  1167     0295                     	;# 
  1168     0296                     	;# 
  1169     0297                     	;# 
  1170     0298                     	;# 
  1171     0298                     	;# 
  1172     0299                     	;# 
  1173     0299                     	;# 
  1174     029A                     	;# 
  1175     029B                     	;# 
  1176     029C                     	;# 
  1177     029D                     	;# 
  1178     029F                     	;# 
  1179     030C                     	;# 
  1180     030C                     	;# 
  1181     030D                     	;# 
  1182     030E                     	;# 
  1183     030F                     	;# 
  1184     0310                     	;# 
  1185     0310                     	;# 
  1186     0311                     	;# 
  1187     0312                     	;# 
  1188     0313                     	;# 
  1189     0314                     	;# 
  1190     0314                     	;# 
  1191     0315                     	;# 
  1192     0316                     	;# 
  1193     0317                     	;# 
  1194     0318                     	;# 
  1195     0318                     	;# 
  1196     0319                     	;# 
  1197     031A                     	;# 
  1198     031B                     	;# 
  1199     038C                     	;# 
  1200     038C                     	;# 
  1201     038D                     	;# 
  1202     038E                     	;# 
  1203     0390                     	;# 
  1204     0390                     	;# 
  1205     0391                     	;# 
  1206     0392                     	;# 
  1207     048C                     	;# 
  1208     048C                     	;# 
  1209     048D                     	;# 
  1210     048E                     	;# 
  1211     048F                     	;# 
  1212     048F                     	;# 
  1213     0490                     	;# 
  1214     0491                     	;# 
  1215     0492                     	;# 
  1216     0492                     	;# 
  1217     0493                     	;# 
  1218     0494                     	;# 
  1219     0495                     	;# 
  1220     0495                     	;# 
  1221     0496                     	;# 
  1222     0497                     	;# 
  1223     0498                     	;# 
  1224     0499                     	;# 
  1225     049A                     	;# 
  1226     049B                     	;# 
  1227     049C                     	;# 
  1228     049D                     	;# 
  1229     058C                     	;# 
  1230     058C                     	;# 
  1231     058D                     	;# 
  1232     058E                     	;# 
  1233     058F                     	;# 
  1234     058F                     	;# 
  1235     0590                     	;# 
  1236     0591                     	;# 
  1237     0592                     	;# 
  1238     0593                     	;# 
  1239     059C                     	;# 
  1240     059C                     	;# 
  1241     059D                     	;# 
  1242     059D                     	;# 
  1243     059E                     	;# 
  1244     059F                     	;# 
  1245     060C                     	;# 
  1246     060C                     	;# 
  1247     060D                     	;# 
  1248     060D                     	;# 
  1249     060E                     	;# 
  1250     060F                     	;# 
  1251     0610                     	;# 
  1252     0611                     	;# 
  1253     0612                     	;# 
  1254     0613                     	;# 
  1255     0614                     	;# 
  1256     0616                     	;# 
  1257     0616                     	;# 
  1258     0617                     	;# 
  1259     0617                     	;# 
  1260     0618                     	;# 
  1261     0619                     	;# 
  1262     061A                     	;# 
  1263     061B                     	;# 
  1264     061C                     	;# 
  1265     061D                     	;# 
  1266     061E                     	;# 
  1267     070C                     	;# 
  1268     070D                     	;# 
  1269     070E                     	;# 
  1270     070F                     	;# 
  1271     0710                     	;# 
  1272     0711                     	;# 
  1273     0712                     	;# 
  1274     0713                     	;# 
  1275     0714                     	;# 
  1276     0716                     	;# 
  1277     0717                     	;# 
  1278     0718                     	;# 
  1279     0719                     	;# 
  1280     071A                     	;# 
  1281     071B                     	;# 
  1282     071C                     	;# 
  1283     071D                     	;# 
  1284     071E                     	;# 
  1285     0796                     	;# 
  1286     0797                     	;# 
  1287     0798                     	;# 
  1288     0799                     	;# 
  1289     079A                     	;# 
  1290     079B                     	;# 
  1291     079C                     	;# 
  1292     079D                     	;# 
  1293     080C                     	;# 
  1294     080D                     	;# 
  1295     080E                     	;# 
  1296     080F                     	;# 
  1297     0810                     	;# 
  1298     0811                     	;# 
  1299     0812                     	;# 
  1300     0813                     	;# 
  1301     0814                     	;# 
  1302     081A                     	;# 
  1303     081A                     	;# 
  1304     081B                     	;# 
  1305     081C                     	;# 
  1306     081C                     	;# 
  1307     081D                     	;# 
  1308     081E                     	;# 
  1309     081F                     	;# 
  1310     088C                     	;# 
  1311     088D                     	;# 
  1312     088E                     	;# 
  1313     088F                     	;# 
  1314     0890                     	;# 
  1315     0891                     	;# 
  1316     0892                     	;# 
  1317     0893                     	;# 
  1318     0895                     	;# 
  1319     0896                     	;# 
  1320     0897                     	;# 
  1321     0898                     	;# 
  1322     0899                     	;# 
  1323     089A                     	;# 
  1324     089B                     	;# 
  1325     090C                     	;# 
  1326     090E                     	;# 
  1327     090F                     	;# 
  1328     091F                     	;# 
  1329     098F                     	;# 
  1330     098F                     	;# 
  1331     0990                     	;# 
  1332     0991                     	;# 
  1333     0992                     	;# 
  1334     0993                     	;# 
  1335     0994                     	;# 
  1336     0995                     	;# 
  1337     0996                     	;# 
  1338     0997                     	;# 
  1339     1E0F                     	;# 
  1340     1E10                     	;# 
  1341     1E11                     	;# 
  1342     1E12                     	;# 
  1343     1E13                     	;# 
  1344     1E14                     	;# 
  1345     1E15                     	;# 
  1346     1E16                     	;# 
  1347     1E17                     	;# 
  1348     1E18                     	;# 
  1349     1E19                     	;# 
  1350     1E1A                     	;# 
  1351     1E1B                     	;# 
  1352     1E1C                     	;# 
  1353     1E1D                     	;# 
  1354     1E1E                     	;# 
  1355     1E1F                     	;# 
  1356     1E20                     	;# 
  1357     1E21                     	;# 
  1358     1E22                     	;# 
  1359     1E23                     	;# 
  1360     1E24                     	;# 
  1361     1E25                     	;# 
  1362     1E26                     	;# 
  1363     1E27                     	;# 
  1364     1E28                     	;# 
  1365     1E29                     	;# 
  1366     1E2A                     	;# 
  1367     1E2B                     	;# 
  1368     1E2C                     	;# 
  1369     1E2D                     	;# 
  1370     1E2E                     	;# 
  1371     1E2F                     	;# 
  1372     1E30                     	;# 
  1373     1E31                     	;# 
  1374     1E32                     	;# 
  1375     1E33                     	;# 
  1376     1E34                     	;# 
  1377     1E35                     	;# 
  1378     1E36                     	;# 
  1379     1E37                     	;# 
  1380     1E8F                     	;# 
  1381     1E90                     	;# 
  1382     1E91                     	;# 
  1383     1E92                     	;# 
  1384     1E93                     	;# 
  1385     1E94                     	;# 
  1386     1E95                     	;# 
  1387     1E96                     	;# 
  1388     1E97                     	;# 
  1389     1E9C                     	;# 
  1390     1E9D                     	;# 
  1391     1E9E                     	;# 
  1392     1EA1                     	;# 
  1393     1EA2                     	;# 
  1394     1EA3                     	;# 
  1395     1EA4                     	;# 
  1396     1EA9                     	;# 
  1397     1EAA                     	;# 
  1398     1EB1                     	;# 
  1399     1EB2                     	;# 
  1400     1EB8                     	;# 
  1401     1EB9                     	;# 
  1402     1EBA                     	;# 
  1403     1EBB                     	;# 
  1404     1EBC                     	;# 
  1405     1EBD                     	;# 
  1406     1EBE                     	;# 
  1407     1EC3                     	;# 
  1408     1EC5                     	;# 
  1409     1EC6                     	;# 
  1410     1EC7                     	;# 
  1411     1EC8                     	;# 
  1412     1EC9                     	;# 
  1413     1ECA                     	;# 
  1414     1ECB                     	;# 
  1415     1ECC                     	;# 
  1416     1F10                     	;# 
  1417     1F11                     	;# 
  1418     1F12                     	;# 
  1419     1F14                     	;# 
  1420     1F15                     	;# 
  1421     1F20                     	;# 
  1422     1F21                     	;# 
  1423     1F22                     	;# 
  1424     1F23                     	;# 
  1425     1F24                     	;# 
  1426     1F25                     	;# 
  1427     1F38                     	;# 
  1428     1F39                     	;# 
  1429     1F3A                     	;# 
  1430     1F3B                     	;# 
  1431     1F3C                     	;# 
  1432     1F3D                     	;# 
  1433     1F3E                     	;# 
  1434     1F3F                     	;# 
  1435     1F4E                     	;# 
  1436     1F4F                     	;# 
  1437     1F50                     	;# 
  1438     1F51                     	;# 
  1439     1F52                     	;# 
  1440     1F53                     	;# 
  1441     1F54                     	;# 
  1442     1F55                     	;# 
  1443     1FE4                     	;# 
  1444     1FE5                     	;# 
  1445     1FE6                     	;# 
  1446     1FE7                     	;# 
  1447     1FE8                     	;# 
  1448     1FE8                     	;# 
  1449     1FE9                     	;# 
  1450     1FEA                     	;# 
  1451     1FEB                     	;# 
  1452     1FED                     	;# 
  1453     1FEE                     	;# 
  1454     1FEF                     	;# 
  1455     0000                     	;# 
  1456     0001                     	;# 
  1457     0002                     	;# 
  1458     0003                     	;# 
  1459     0004                     	;# 
  1460     0005                     	;# 
  1461     0006                     	;# 
  1462     0007                     	;# 
  1463     0008                     	;# 
  1464     0009                     	;# 
  1465     000A                     	;# 
  1466     000B                     	;# 
  1467     000C                     	;# 
  1468     000E                     	;# 
  1469     0012                     	;# 
  1470     0014                     	;# 
  1471     0018                     	;# 
  1472     001A                     	;# 
  1473     008C                     	;# 
  1474     008C                     	;# 
  1475     008D                     	;# 
  1476     008E                     	;# 
  1477     008E                     	;# 
  1478     008F                     	;# 
  1479     0090                     	;# 
  1480     0090                     	;# 
  1481     0091                     	;# 
  1482     0092                     	;# 
  1483     0092                     	;# 
  1484     0093                     	;# 
  1485     0094                     	;# 
  1486     0094                     	;# 
  1487     0095                     	;# 
  1488     0096                     	;# 
  1489     0096                     	;# 
  1490     0097                     	;# 
  1491     0098                     	;# 
  1492     0099                     	;# 
  1493     009A                     	;# 
  1494     009B                     	;# 
  1495     009B                     	;# 
  1496     009C                     	;# 
  1497     009D                     	;# 
  1498     009D                     	;# 
  1499     009E                     	;# 
  1500     009F                     	;# 
  1501     010C                     	;# 
  1502     010C                     	;# 
  1503     010D                     	;# 
  1504     010E                     	;# 
  1505     010F                     	;# 
  1506     010F                     	;# 
  1507     0110                     	;# 
  1508     0111                     	;# 
  1509     0112                     	;# 
  1510     0113                     	;# 
  1511     0114                     	;# 
  1512     0115                     	;# 
  1513     0116                     	;# 
  1514     0117                     	;# 
  1515     0118                     	;# 
  1516     0119                     	;# 
  1517     0119                     	;# 
  1518     0119                     	;# 
  1519     011A                     	;# 
  1520     011A                     	;# 
  1521     011A                     	;# 
  1522     011B                     	;# 
  1523     011B                     	;# 
  1524     011B                     	;# 
  1525     011B                     	;# 
  1526     011B                     	;# 
  1527     011C                     	;# 
  1528     011C                     	;# 
  1529     011C                     	;# 
  1530     011D                     	;# 
  1531     011D                     	;# 
  1532     011D                     	;# 
  1533     011E                     	;# 
  1534     011E                     	;# 
  1535     011E                     	;# 
  1536     011F                     	;# 
  1537     011F                     	;# 
  1538     011F                     	;# 
  1539     011F                     	;# 
  1540     011F                     	;# 
  1541     018C                     	;# 
  1542     018D                     	;# 
  1543     018E                     	;# 
  1544     018F                     	;# 
  1545     0190                     	;# 
  1546     0191                     	;# 
  1547     0192                     	;# 
  1548     0196                     	;# 
  1549     0197                     	;# 
  1550     0198                     	;# 
  1551     0199                     	;# 
  1552     019A                     	;# 
  1553     019B                     	;# 
  1554     019C                     	;# 
  1555     020C                     	;# 
  1556     020D                     	;# 
  1557     020E                     	;# 
  1558     020E                     	;# 
  1559     020F                     	;# 
  1560     020F                     	;# 
  1561     0210                     	;# 
  1562     0210                     	;# 
  1563     0211                     	;# 
  1564     0211                     	;# 
  1565     0212                     	;# 
  1566     0213                     	;# 
  1567     0214                     	;# 
  1568     0214                     	;# 
  1569     0215                     	;# 
  1570     0215                     	;# 
  1571     0216                     	;# 
  1572     0216                     	;# 
  1573     0217                     	;# 
  1574     0217                     	;# 
  1575     0218                     	;# 
  1576     0219                     	;# 
  1577     021A                     	;# 
  1578     021A                     	;# 
  1579     021B                     	;# 
  1580     021B                     	;# 
  1581     021C                     	;# 
  1582     021C                     	;# 
  1583     021D                     	;# 
  1584     021D                     	;# 
  1585     021E                     	;# 
  1586     021F                     	;# 
  1587     028C                     	;# 
  1588     028C                     	;# 
  1589     028D                     	;# 
  1590     028D                     	;# 
  1591     028E                     	;# 
  1592     028F                     	;# 
  1593     0290                     	;# 
  1594     0291                     	;# 
  1595     0292                     	;# 
  1596     0292                     	;# 
  1597     0293                     	;# 
  1598     0293                     	;# 
  1599     0294                     	;# 
  1600     0295                     	;# 
  1601     0296                     	;# 
  1602     0297                     	;# 
  1603     0298                     	;# 
  1604     0298                     	;# 
  1605     0299                     	;# 
  1606     0299                     	;# 
  1607     029A                     	;# 
  1608     029B                     	;# 
  1609     029C                     	;# 
  1610     029D                     	;# 
  1611     029F                     	;# 
  1612     030C                     	;# 
  1613     030C                     	;# 
  1614     030D                     	;# 
  1615     030E                     	;# 
  1616     030F                     	;# 
  1617     0310                     	;# 
  1618     0310                     	;# 
  1619     0311                     	;# 
  1620     0312                     	;# 
  1621     0313                     	;# 
  1622     0314                     	;# 
  1623     0314                     	;# 
  1624     0315                     	;# 
  1625     0316                     	;# 
  1626     0317                     	;# 
  1627     0318                     	;# 
  1628     0318                     	;# 
  1629     0319                     	;# 
  1630     031A                     	;# 
  1631     031B                     	;# 
  1632     038C                     	;# 
  1633     038C                     	;# 
  1634     038D                     	;# 
  1635     038E                     	;# 
  1636     0390                     	;# 
  1637     0390                     	;# 
  1638     0391                     	;# 
  1639     0392                     	;# 
  1640     048C                     	;# 
  1641     048C                     	;# 
  1642     048D                     	;# 
  1643     048E                     	;# 
  1644     048F                     	;# 
  1645     048F                     	;# 
  1646     0490                     	;# 
  1647     0491                     	;# 
  1648     0492                     	;# 
  1649     0492                     	;# 
  1650     0493                     	;# 
  1651     0494                     	;# 
  1652     0495                     	;# 
  1653     0495                     	;# 
  1654     0496                     	;# 
  1655     0497                     	;# 
  1656     0498                     	;# 
  1657     0499                     	;# 
  1658     049A                     	;# 
  1659     049B                     	;# 
  1660     049C                     	;# 
  1661     049D                     	;# 
  1662     058C                     	;# 
  1663     058C                     	;# 
  1664     058D                     	;# 
  1665     058E                     	;# 
  1666     058F                     	;# 
  1667     058F                     	;# 
  1668     0590                     	;# 
  1669     0591                     	;# 
  1670     0592                     	;# 
  1671     0593                     	;# 
  1672     059C                     	;# 
  1673     059C                     	;# 
  1674     059D                     	;# 
  1675     059D                     	;# 
  1676     059E                     	;# 
  1677     059F                     	;# 
  1678     060C                     	;# 
  1679     060C                     	;# 
  1680     060D                     	;# 
  1681     060D                     	;# 
  1682     060E                     	;# 
  1683     060F                     	;# 
  1684     0610                     	;# 
  1685     0611                     	;# 
  1686     0612                     	;# 
  1687     0613                     	;# 
  1688     0614                     	;# 
  1689     0616                     	;# 
  1690     0616                     	;# 
  1691     0617                     	;# 
  1692     0617                     	;# 
  1693     0618                     	;# 
  1694     0619                     	;# 
  1695     061A                     	;# 
  1696     061B                     	;# 
  1697     061C                     	;# 
  1698     061D                     	;# 
  1699     061E                     	;# 
  1700     070C                     	;# 
  1701     070D                     	;# 
  1702     070E                     	;# 
  1703     070F                     	;# 
  1704     0710                     	;# 
  1705     0711                     	;# 
  1706     0712                     	;# 
  1707     0713                     	;# 
  1708     0714                     	;# 
  1709     0716                     	;# 
  1710     0717                     	;# 
  1711     0718                     	;# 
  1712     0719                     	;# 
  1713     071A                     	;# 
  1714     071B                     	;# 
  1715     071C                     	;# 
  1716     071D                     	;# 
  1717     071E                     	;# 
  1718     0796                     	;# 
  1719     0797                     	;# 
  1720     0798                     	;# 
  1721     0799                     	;# 
  1722     079A                     	;# 
  1723     079B                     	;# 
  1724     079C                     	;# 
  1725     079D                     	;# 
  1726     080C                     	;# 
  1727     080D                     	;# 
  1728     080E                     	;# 
  1729     080F                     	;# 
  1730     0810                     	;# 
  1731     0811                     	;# 
  1732     0812                     	;# 
  1733     0813                     	;# 
  1734     0814                     	;# 
  1735     081A                     	;# 
  1736     081A                     	;# 
  1737     081B                     	;# 
  1738     081C                     	;# 
  1739     081C                     	;# 
  1740     081D                     	;# 
  1741     081E                     	;# 
  1742     081F                     	;# 
  1743     088C                     	;# 
  1744     088D                     	;# 
  1745     088E                     	;# 
  1746     088F                     	;# 
  1747     0890                     	;# 
  1748     0891                     	;# 
  1749     0892                     	;# 
  1750     0893                     	;# 
  1751     0895                     	;# 
  1752     0896                     	;# 
  1753     0897                     	;# 
  1754     0898                     	;# 
  1755     0899                     	;# 
  1756     089A                     	;# 
  1757     089B                     	;# 
  1758     090C                     	;# 
  1759     090E                     	;# 
  1760     090F                     	;# 
  1761     091F                     	;# 
  1762     098F                     	;# 
  1763     098F                     	;# 
  1764     0990                     	;# 
  1765     0991                     	;# 
  1766     0992                     	;# 
  1767     0993                     	;# 
  1768     0994                     	;# 
  1769     0995                     	;# 
  1770     0996                     	;# 
  1771     0997                     	;# 
  1772     1E0F                     	;# 
  1773     1E10                     	;# 
  1774     1E11                     	;# 
  1775     1E12                     	;# 
  1776     1E13                     	;# 
  1777     1E14                     	;# 
  1778     1E15                     	;# 
  1779     1E16                     	;# 
  1780     1E17                     	;# 
  1781     1E18                     	;# 
  1782     1E19                     	;# 
  1783     1E1A                     	;# 
  1784     1E1B                     	;# 
  1785     1E1C                     	;# 
  1786     1E1D                     	;# 
  1787     1E1E                     	;# 
  1788     1E1F                     	;# 
  1789     1E20                     	;# 
  1790     1E21                     	;# 
  1791     1E22                     	;# 
  1792     1E23                     	;# 
  1793     1E24                     	;# 
  1794     1E25                     	;# 
  1795     1E26                     	;# 
  1796     1E27                     	;# 
  1797     1E28                     	;# 
  1798     1E29                     	;# 
  1799     1E2A                     	;# 
  1800     1E2B                     	;# 
  1801     1E2C                     	;# 
  1802     1E2D                     	;# 
  1803     1E2E                     	;# 
  1804     1E2F                     	;# 
  1805     1E30                     	;# 
  1806     1E31                     	;# 
  1807     1E32                     	;# 
  1808     1E33                     	;# 
  1809     1E34                     	;# 
  1810     1E35                     	;# 
  1811     1E36                     	;# 
  1812     1E37                     	;# 
  1813     1E8F                     	;# 
  1814     1E90                     	;# 
  1815     1E91                     	;# 
  1816     1E92                     	;# 
  1817     1E93                     	;# 
  1818     1E94                     	;# 
  1819     1E95                     	;# 
  1820     1E96                     	;# 
  1821     1E97                     	;# 
  1822     1E9C                     	;# 
  1823     1E9D                     	;# 
  1824     1E9E                     	;# 
  1825     1EA1                     	;# 
  1826     1EA2                     	;# 
  1827     1EA3                     	;# 
  1828     1EA4                     	;# 
  1829     1EA9                     	;# 
  1830     1EAA                     	;# 
  1831     1EB1                     	;# 
  1832     1EB2                     	;# 
  1833     1EB8                     	;# 
  1834     1EB9                     	;# 
  1835     1EBA                     	;# 
  1836     1EBB                     	;# 
  1837     1EBC                     	;# 
  1838     1EBD                     	;# 
  1839     1EBE                     	;# 
  1840     1EC3                     	;# 
  1841     1EC5                     	;# 
  1842     1EC6                     	;# 
  1843     1EC7                     	;# 
  1844     1EC8                     	;# 
  1845     1EC9                     	;# 
  1846     1ECA                     	;# 
  1847     1ECB                     	;# 
  1848     1ECC                     	;# 
  1849     1F10                     	;# 
  1850     1F11                     	;# 
  1851     1F12                     	;# 
  1852     1F14                     	;# 
  1853     1F15                     	;# 
  1854     1F20                     	;# 
  1855     1F21                     	;# 
  1856     1F22                     	;# 
  1857     1F23                     	;# 
  1858     1F24                     	;# 
  1859     1F25                     	;# 
  1860     1F38                     	;# 
  1861     1F39                     	;# 
  1862     1F3A                     	;# 
  1863     1F3B                     	;# 
  1864     1F3C                     	;# 
  1865     1F3D                     	;# 
  1866     1F3E                     	;# 
  1867     1F3F                     	;# 
  1868     1F4E                     	;# 
  1869     1F4F                     	;# 
  1870     1F50                     	;# 
  1871     1F51                     	;# 
  1872     1F52                     	;# 
  1873     1F53                     	;# 
  1874     1F54                     	;# 
  1875     1F55                     	;# 
  1876     1FE4                     	;# 
  1877     1FE5                     	;# 
  1878     1FE6                     	;# 
  1879     1FE7                     	;# 
  1880     1FE8                     	;# 
  1881     1FE8                     	;# 
  1882     1FE9                     	;# 
  1883     1FEA                     	;# 
  1884     1FEB                     	;# 
  1885     1FED                     	;# 
  1886     1FEE                     	;# 
  1887     1FEF                     	;# 
  1888     0000                     	;# 
  1889     0001                     	;# 
  1890     0002                     	;# 
  1891     0003                     	;# 
  1892     0004                     	;# 
  1893     0005                     	;# 
  1894     0006                     	;# 
  1895     0007                     	;# 
  1896     0008                     	;# 
  1897     0009                     	;# 
  1898     000A                     	;# 
  1899     000B                     	;# 
  1900     000C                     	;# 
  1901     000E                     	;# 
  1902     0012                     	;# 
  1903     0014                     	;# 
  1904     0018                     	;# 
  1905     001A                     	;# 
  1906     008C                     	;# 
  1907     008C                     	;# 
  1908     008D                     	;# 
  1909     008E                     	;# 
  1910     008E                     	;# 
  1911     008F                     	;# 
  1912     0090                     	;# 
  1913     0090                     	;# 
  1914     0091                     	;# 
  1915     0092                     	;# 
  1916     0092                     	;# 
  1917     0093                     	;# 
  1918     0094                     	;# 
  1919     0094                     	;# 
  1920     0095                     	;# 
  1921     0096                     	;# 
  1922     0096                     	;# 
  1923     0097                     	;# 
  1924     0098                     	;# 
  1925     0099                     	;# 
  1926     009A                     	;# 
  1927     009B                     	;# 
  1928     009B                     	;# 
  1929     009C                     	;# 
  1930     009D                     	;# 
  1931     009D                     	;# 
  1932     009E                     	;# 
  1933     009F                     	;# 
  1934     010C                     	;# 
  1935     010C                     	;# 
  1936     010D                     	;# 
  1937     010E                     	;# 
  1938     010F                     	;# 
  1939     010F                     	;# 
  1940     0110                     	;# 
  1941     0111                     	;# 
  1942     0112                     	;# 
  1943     0113                     	;# 
  1944     0114                     	;# 
  1945     0115                     	;# 
  1946     0116                     	;# 
  1947     0117                     	;# 
  1948     0118                     	;# 
  1949     0119                     	;# 
  1950     0119                     	;# 
  1951     0119                     	;# 
  1952     011A                     	;# 
  1953     011A                     	;# 
  1954     011A                     	;# 
  1955     011B                     	;# 
  1956     011B                     	;# 
  1957     011B                     	;# 
  1958     011B                     	;# 
  1959     011B                     	;# 
  1960     011C                     	;# 
  1961     011C                     	;# 
  1962     011C                     	;# 
  1963     011D                     	;# 
  1964     011D                     	;# 
  1965     011D                     	;# 
  1966     011E                     	;# 
  1967     011E                     	;# 
  1968     011E                     	;# 
  1969     011F                     	;# 
  1970     011F                     	;# 
  1971     011F                     	;# 
  1972     011F                     	;# 
  1973     011F                     	;# 
  1974     018C                     	;# 
  1975     018D                     	;# 
  1976     018E                     	;# 
  1977     018F                     	;# 
  1978     0190                     	;# 
  1979     0191                     	;# 
  1980     0192                     	;# 
  1981     0196                     	;# 
  1982     0197                     	;# 
  1983     0198                     	;# 
  1984     0199                     	;# 
  1985     019A                     	;# 
  1986     019B                     	;# 
  1987     019C                     	;# 
  1988     020C                     	;# 
  1989     020D                     	;# 
  1990     020E                     	;# 
  1991     020E                     	;# 
  1992     020F                     	;# 
  1993     020F                     	;# 
  1994     0210                     	;# 
  1995     0210                     	;# 
  1996     0211                     	;# 
  1997     0211                     	;# 
  1998     0212                     	;# 
  1999     0213                     	;# 
  2000     0214                     	;# 
  2001     0214                     	;# 
  2002     0215                     	;# 
  2003     0215                     	;# 
  2004     0216                     	;# 
  2005     0216                     	;# 
  2006     0217                     	;# 
  2007     0217                     	;# 
  2008     0218                     	;# 
  2009     0219                     	;# 
  2010     021A                     	;# 
  2011     021A                     	;# 
  2012     021B                     	;# 
  2013     021B                     	;# 
  2014     021C                     	;# 
  2015     021C                     	;# 
  2016     021D                     	;# 
  2017     021D                     	;# 
  2018     021E                     	;# 
  2019     021F                     	;# 
  2020     028C                     	;# 
  2021     028C                     	;# 
  2022     028D                     	;# 
  2023     028D                     	;# 
  2024     028E                     	;# 
  2025     028F                     	;# 
  2026     0290                     	;# 
  2027     0291                     	;# 
  2028     0292                     	;# 
  2029     0292                     	;# 
  2030     0293                     	;# 
  2031     0293                     	;# 
  2032     0294                     	;# 
  2033     0295                     	;# 
  2034     0296                     	;# 
  2035     0297                     	;# 
  2036     0298                     	;# 
  2037     0298                     	;# 
  2038     0299                     	;# 
  2039     0299                     	;# 
  2040     029A                     	;# 
  2041     029B                     	;# 
  2042     029C                     	;# 
  2043     029D                     	;# 
  2044     029F                     	;# 
  2045     030C                     	;# 
  2046     030C                     	;# 
  2047     030D                     	;# 
  2048     030E                     	;# 
  2049     030F                     	;# 
  2050     0310                     	;# 
  2051     0310                     	;# 
  2052     0311                     	;# 
  2053     0312                     	;# 
  2054     0313                     	;# 
  2055     0314                     	;# 
  2056     0314                     	;# 
  2057     0315                     	;# 
  2058     0316                     	;# 
  2059     0317                     	;# 
  2060     0318                     	;# 
  2061     0318                     	;# 
  2062     0319                     	;# 
  2063     031A                     	;# 
  2064     031B                     	;# 
  2065     038C                     	;# 
  2066     038C                     	;# 
  2067     038D                     	;# 
  2068     038E                     	;# 
  2069     0390                     	;# 
  2070     0390                     	;# 
  2071     0391                     	;# 
  2072     0392                     	;# 
  2073     048C                     	;# 
  2074     048C                     	;# 
  2075     048D                     	;# 
  2076     048E                     	;# 
  2077     048F                     	;# 
  2078     048F                     	;# 
  2079     0490                     	;# 
  2080     0491                     	;# 
  2081     0492                     	;# 
  2082     0492                     	;# 
  2083     0493                     	;# 
  2084     0494                     	;# 
  2085     0495                     	;# 
  2086     0495                     	;# 
  2087     0496                     	;# 
  2088     0497                     	;# 
  2089     0498                     	;# 
  2090     0499                     	;# 
  2091     049A                     	;# 
  2092     049B                     	;# 
  2093     049C                     	;# 
  2094     049D                     	;# 
  2095     058C                     	;# 
  2096     058C                     	;# 
  2097     058D                     	;# 
  2098     058E                     	;# 
  2099     058F                     	;# 
  2100     058F                     	;# 
  2101     0590                     	;# 
  2102     0591                     	;# 
  2103     0592                     	;# 
  2104     0593                     	;# 
  2105     059C                     	;# 
  2106     059C                     	;# 
  2107     059D                     	;# 
  2108     059D                     	;# 
  2109     059E                     	;# 
  2110     059F                     	;# 
  2111     060C                     	;# 
  2112     060C                     	;# 
  2113     060D                     	;# 
  2114     060D                     	;# 
  2115     060E                     	;# 
  2116     060F                     	;# 
  2117     0610                     	;# 
  2118     0611                     	;# 
  2119     0612                     	;# 
  2120     0613                     	;# 
  2121     0614                     	;# 
  2122     0616                     	;# 
  2123     0616                     	;# 
  2124     0617                     	;# 
  2125     0617                     	;# 
  2126     0618                     	;# 
  2127     0619                     	;# 
  2128     061A                     	;# 
  2129     061B                     	;# 
  2130     061C                     	;# 
  2131     061D                     	;# 
  2132     061E                     	;# 
  2133     070C                     	;# 
  2134     070D                     	;# 
  2135     070E                     	;# 
  2136     070F                     	;# 
  2137     0710                     	;# 
  2138     0711                     	;# 
  2139     0712                     	;# 
  2140     0713                     	;# 
  2141     0714                     	;# 
  2142     0716                     	;# 
  2143     0717                     	;# 
  2144     0718                     	;# 
  2145     0719                     	;# 
  2146     071A                     	;# 
  2147     071B                     	;# 
  2148     071C                     	;# 
  2149     071D                     	;# 
  2150     071E                     	;# 
  2151     0796                     	;# 
  2152     0797                     	;# 
  2153     0798                     	;# 
  2154     0799                     	;# 
  2155     079A                     	;# 
  2156     079B                     	;# 
  2157     079C                     	;# 
  2158     079D                     	;# 
  2159     080C                     	;# 
  2160     080D                     	;# 
  2161     080E                     	;# 
  2162     080F                     	;# 
  2163     0810                     	;# 
  2164     0811                     	;# 
  2165     0812                     	;# 
  2166     0813                     	;# 
  2167     0814                     	;# 
  2168     081A                     	;# 
  2169     081A                     	;# 
  2170     081B                     	;# 
  2171     081C                     	;# 
  2172     081C                     	;# 
  2173     081D                     	;# 
  2174     081E                     	;# 
  2175     081F                     	;# 
  2176     088C                     	;# 
  2177     088D                     	;# 
  2178     088E                     	;# 
  2179     088F                     	;# 
  2180     0890                     	;# 
  2181     0891                     	;# 
  2182     0892                     	;# 
  2183     0893                     	;# 
  2184     0895                     	;# 
  2185     0896                     	;# 
  2186     0897                     	;# 
  2187     0898                     	;# 
  2188     0899                     	;# 
  2189     089A                     	;# 
  2190     089B                     	;# 
  2191     090C                     	;# 
  2192     090E                     	;# 
  2193     090F                     	;# 
  2194     091F                     	;# 
  2195     098F                     	;# 
  2196     098F                     	;# 
  2197     0990                     	;# 
  2198     0991                     	;# 
  2199     0992                     	;# 
  2200     0993                     	;# 
  2201     0994                     	;# 
  2202     0995                     	;# 
  2203     0996                     	;# 
  2204     0997                     	;# 
  2205     1E0F                     	;# 
  2206     1E10                     	;# 
  2207     1E11                     	;# 
  2208     1E12                     	;# 
  2209     1E13                     	;# 
  2210     1E14                     	;# 
  2211     1E15                     	;# 
  2212     1E16                     	;# 
  2213     1E17                     	;# 
  2214     1E18                     	;# 
  2215     1E19                     	;# 
  2216     1E1A                     	;# 
  2217     1E1B                     	;# 
  2218     1E1C                     	;# 
  2219     1E1D                     	;# 
  2220     1E1E                     	;# 
  2221     1E1F                     	;# 
  2222     1E20                     	;# 
  2223     1E21                     	;# 
  2224     1E22                     	;# 
  2225     1E23                     	;# 
  2226     1E24                     	;# 
  2227     1E25                     	;# 
  2228     1E26                     	;# 
  2229     1E27                     	;# 
  2230     1E28                     	;# 
  2231     1E29                     	;# 
  2232     1E2A                     	;# 
  2233     1E2B                     	;# 
  2234     1E2C                     	;# 
  2235     1E2D                     	;# 
  2236     1E2E                     	;# 
  2237     1E2F                     	;# 
  2238     1E30                     	;# 
  2239     1E31                     	;# 
  2240     1E32                     	;# 
  2241     1E33                     	;# 
  2242     1E34                     	;# 
  2243     1E35                     	;# 
  2244     1E36                     	;# 
  2245     1E37                     	;# 
  2246     1E8F                     	;# 
  2247     1E90                     	;# 
  2248     1E91                     	;# 
  2249     1E92                     	;# 
  2250     1E93                     	;# 
  2251     1E94                     	;# 
  2252     1E95                     	;# 
  2253     1E96                     	;# 
  2254     1E97                     	;# 
  2255     1E9C                     	;# 
  2256     1E9D                     	;# 
  2257     1E9E                     	;# 
  2258     1EA1                     	;# 
  2259     1EA2                     	;# 
  2260     1EA3                     	;# 
  2261     1EA4                     	;# 
  2262     1EA9                     	;# 
  2263     1EAA                     	;# 
  2264     1EB1                     	;# 
  2265     1EB2                     	;# 
  2266     1EB8                     	;# 
  2267     1EB9                     	;# 
  2268     1EBA                     	;# 
  2269     1EBB                     	;# 
  2270     1EBC                     	;# 
  2271     1EBD                     	;# 
  2272     1EBE                     	;# 
  2273     1EC3                     	;# 
  2274     1EC5                     	;# 
  2275     1EC6                     	;# 
  2276     1EC7                     	;# 
  2277     1EC8                     	;# 
  2278     1EC9                     	;# 
  2279     1ECA                     	;# 
  2280     1ECB                     	;# 
  2281     1ECC                     	;# 
  2282     1F10                     	;# 
  2283     1F11                     	;# 
  2284     1F12                     	;# 
  2285     1F14                     	;# 
  2286     1F15                     	;# 
  2287     1F20                     	;# 
  2288     1F21                     	;# 
  2289     1F22                     	;# 
  2290     1F23                     	;# 
  2291     1F24                     	;# 
  2292     1F25                     	;# 
  2293     1F38                     	;# 
  2294     1F39                     	;# 
  2295     1F3A                     	;# 
  2296     1F3B                     	;# 
  2297     1F3C                     	;# 
  2298     1F3D                     	;# 
  2299     1F3E                     	;# 
  2300     1F3F                     	;# 
  2301     1F4E                     	;# 
  2302     1F4F                     	;# 
  2303     1F50                     	;# 
  2304     1F51                     	;# 
  2305     1F52                     	;# 
  2306     1F53                     	;# 
  2307     1F54                     	;# 
  2308     1F55                     	;# 
  2309     1FE4                     	;# 
  2310     1FE5                     	;# 
  2311     1FE6                     	;# 
  2312     1FE7                     	;# 
  2313     1FE8                     	;# 
  2314     1FE8                     	;# 
  2315     1FE9                     	;# 
  2316     1FEA                     	;# 
  2317     1FEB                     	;# 
  2318     1FED                     	;# 
  2319     1FEE                     	;# 
  2320     1FEF                     	;# 
  2321     0000                     	;# 
  2322     0001                     	;# 
  2323     0002                     	;# 
  2324     0003                     	;# 
  2325     0004                     	;# 
  2326     0005                     	;# 
  2327     0006                     	;# 
  2328     0007                     	;# 
  2329     0008                     	;# 
  2330     0009                     	;# 
  2331     000A                     	;# 
  2332     000B                     	;# 
  2333     000C                     	;# 
  2334     000E                     	;# 
  2335     0012                     	;# 
  2336     0014                     	;# 
  2337     0018                     	;# 
  2338     001A                     	;# 
  2339     008C                     	;# 
  2340     008C                     	;# 
  2341     008D                     	;# 
  2342     008E                     	;# 
  2343     008E                     	;# 
  2344     008F                     	;# 
  2345     0090                     	;# 
  2346     0090                     	;# 
  2347     0091                     	;# 
  2348     0092                     	;# 
  2349     0092                     	;# 
  2350     0093                     	;# 
  2351     0094                     	;# 
  2352     0094                     	;# 
  2353     0095                     	;# 
  2354     0096                     	;# 
  2355     0096                     	;# 
  2356     0097                     	;# 
  2357     0098                     	;# 
  2358     0099                     	;# 
  2359     009A                     	;# 
  2360     009B                     	;# 
  2361     009B                     	;# 
  2362     009C                     	;# 
  2363     009D                     	;# 
  2364     009D                     	;# 
  2365     009E                     	;# 
  2366     009F                     	;# 
  2367     010C                     	;# 
  2368     010C                     	;# 
  2369     010D                     	;# 
  2370     010E                     	;# 
  2371     010F                     	;# 
  2372     010F                     	;# 
  2373     0110                     	;# 
  2374     0111                     	;# 
  2375     0112                     	;# 
  2376     0113                     	;# 
  2377     0114                     	;# 
  2378     0115                     	;# 
  2379     0116                     	;# 
  2380     0117                     	;# 
  2381     0118                     	;# 
  2382     0119                     	;# 
  2383     0119                     	;# 
  2384     0119                     	;# 
  2385     011A                     	;# 
  2386     011A                     	;# 
  2387     011A                     	;# 
  2388     011B                     	;# 
  2389     011B                     	;# 
  2390     011B                     	;# 
  2391     011B                     	;# 
  2392     011B                     	;# 
  2393     011C                     	;# 
  2394     011C                     	;# 
  2395     011C                     	;# 
  2396     011D                     	;# 
  2397     011D                     	;# 
  2398     011D                     	;# 
  2399     011E                     	;# 
  2400     011E                     	;# 
  2401     011E                     	;# 
  2402     011F                     	;# 
  2403     011F                     	;# 
  2404     011F                     	;# 
  2405     011F                     	;# 
  2406     011F                     	;# 
  2407     018C                     	;# 
  2408     018D                     	;# 
  2409     018E                     	;# 
  2410     018F                     	;# 
  2411     0190                     	;# 
  2412     0191                     	;# 
  2413     0192                     	;# 
  2414     0196                     	;# 
  2415     0197                     	;# 
  2416     0198                     	;# 
  2417     0199                     	;# 
  2418     019A                     	;# 
  2419     019B                     	;# 
  2420     019C                     	;# 
  2421     020C                     	;# 
  2422     020D                     	;# 
  2423     020E                     	;# 
  2424     020E                     	;# 
  2425     020F                     	;# 
  2426     020F                     	;# 
  2427     0210                     	;# 
  2428     0210                     	;# 
  2429     0211                     	;# 
  2430     0211                     	;# 
  2431     0212                     	;# 
  2432     0213                     	;# 
  2433     0214                     	;# 
  2434     0214                     	;# 
  2435     0215                     	;# 
  2436     0215                     	;# 
  2437     0216                     	;# 
  2438     0216                     	;# 
  2439     0217                     	;# 
  2440     0217                     	;# 
  2441     0218                     	;# 
  2442     0219                     	;# 
  2443     021A                     	;# 
  2444     021A                     	;# 
  2445     021B                     	;# 
  2446     021B                     	;# 
  2447     021C                     	;# 
  2448     021C                     	;# 
  2449     021D                     	;# 
  2450     021D                     	;# 
  2451     021E                     	;# 
  2452     021F                     	;# 
  2453     028C                     	;# 
  2454     028C                     	;# 
  2455     028D                     	;# 
  2456     028D                     	;# 
  2457     028E                     	;# 
  2458     028F                     	;# 
  2459     0290                     	;# 
  2460     0291                     	;# 
  2461     0292                     	;# 
  2462     0292                     	;# 
  2463     0293                     	;# 
  2464     0293                     	;# 
  2465     0294                     	;# 
  2466     0295                     	;# 
  2467     0296                     	;# 
  2468     0297                     	;# 
  2469     0298                     	;# 
  2470     0298                     	;# 
  2471     0299                     	;# 
  2472     0299                     	;# 
  2473     029A                     	;# 
  2474     029B                     	;# 
  2475     029C                     	;# 
  2476     029D                     	;# 
  2477     029F                     	;# 
  2478     030C                     	;# 
  2479     030C                     	;# 
  2480     030D                     	;# 
  2481     030E                     	;# 
  2482     030F                     	;# 
  2483     0310                     	;# 
  2484     0310                     	;# 
  2485     0311                     	;# 
  2486     0312                     	;# 
  2487     0313                     	;# 
  2488     0314                     	;# 
  2489     0314                     	;# 
  2490     0315                     	;# 
  2491     0316                     	;# 
  2492     0317                     	;# 
  2493     0318                     	;# 
  2494     0318                     	;# 
  2495     0319                     	;# 
  2496     031A                     	;# 
  2497     031B                     	;# 
  2498     038C                     	;# 
  2499     038C                     	;# 
  2500     038D                     	;# 
  2501     038E                     	;# 
  2502     0390                     	;# 
  2503     0390                     	;# 
  2504     0391                     	;# 
  2505     0392                     	;# 
  2506     048C                     	;# 
  2507     048C                     	;# 
  2508     048D                     	;# 
  2509     048E                     	;# 
  2510     048F                     	;# 
  2511     048F                     	;# 
  2512     0490                     	;# 
  2513     0491                     	;# 
  2514     0492                     	;# 
  2515     0492                     	;# 
  2516     0493                     	;# 
  2517     0494                     	;# 
  2518     0495                     	;# 
  2519     0495                     	;# 
  2520     0496                     	;# 
  2521     0497                     	;# 
  2522     0498                     	;# 
  2523     0499                     	;# 
  2524     049A                     	;# 
  2525     049B                     	;# 
  2526     049C                     	;# 
  2527     049D                     	;# 
  2528     058C                     	;# 
  2529     058C                     	;# 
  2530     058D                     	;# 
  2531     058E                     	;# 
  2532     058F                     	;# 
  2533     058F                     	;# 
  2534     0590                     	;# 
  2535     0591                     	;# 
  2536     0592                     	;# 
  2537     0593                     	;# 
  2538     059C                     	;# 
  2539     059C                     	;# 
  2540     059D                     	;# 
  2541     059D                     	;# 
  2542     059E                     	;# 
  2543     059F                     	;# 
  2544     060C                     	;# 
  2545     060C                     	;# 
  2546     060D                     	;# 
  2547     060D                     	;# 
  2548     060E                     	;# 
  2549     060F                     	;# 
  2550     0610                     	;# 
  2551     0611                     	;# 
  2552     0612                     	;# 
  2553     0613                     	;# 
  2554     0614                     	;# 
  2555     0616                     	;# 
  2556     0616                     	;# 
  2557     0617                     	;# 
  2558     0617                     	;# 
  2559     0618                     	;# 
  2560     0619                     	;# 
  2561     061A                     	;# 
  2562     061B                     	;# 
  2563     061C                     	;# 
  2564     061D                     	;# 
  2565     061E                     	;# 
  2566     070C                     	;# 
  2567     070D                     	;# 
  2568     070E                     	;# 
  2569     070F                     	;# 
  2570     0710                     	;# 
  2571     0711                     	;# 
  2572     0712                     	;# 
  2573     0713                     	;# 
  2574     0714                     	;# 
  2575     0716                     	;# 
  2576     0717                     	;# 
  2577     0718                     	;# 
  2578     0719                     	;# 
  2579     071A                     	;# 
  2580     071B                     	;# 
  2581     071C                     	;# 
  2582     071D                     	;# 
  2583     071E                     	;# 
  2584     0796                     	;# 
  2585     0797                     	;# 
  2586     0798                     	;# 
  2587     0799                     	;# 
  2588     079A                     	;# 
  2589     079B                     	;# 
  2590     079C                     	;# 
  2591     079D                     	;# 
  2592     080C                     	;# 
  2593     080D                     	;# 
  2594     080E                     	;# 
  2595     080F                     	;# 
  2596     0810                     	;# 
  2597     0811                     	;# 
  2598     0812                     	;# 
  2599     0813                     	;# 
  2600     0814                     	;# 
  2601     081A                     	;# 
  2602     081A                     	;# 
  2603     081B                     	;# 
  2604     081C                     	;# 
  2605     081C                     	;# 
  2606     081D                     	;# 
  2607     081E                     	;# 
  2608     081F                     	;# 
  2609     088C                     	;# 
  2610     088D                     	;# 
  2611     088E                     	;# 
  2612     088F                     	;# 
  2613     0890                     	;# 
  2614     0891                     	;# 
  2615     0892                     	;# 
  2616     0893                     	;# 
  2617     0895                     	;# 
  2618     0896                     	;# 
  2619     0897                     	;# 
  2620     0898                     	;# 
  2621     0899                     	;# 
  2622     089A                     	;# 
  2623     089B                     	;# 
  2624     090C                     	;# 
  2625     090E                     	;# 
  2626     090F                     	;# 
  2627     091F                     	;# 
  2628     098F                     	;# 
  2629     098F                     	;# 
  2630     0990                     	;# 
  2631     0991                     	;# 
  2632     0992                     	;# 
  2633     0993                     	;# 
  2634     0994                     	;# 
  2635     0995                     	;# 
  2636     0996                     	;# 
  2637     0997                     	;# 
  2638     1E0F                     	;# 
  2639     1E10                     	;# 
  2640     1E11                     	;# 
  2641     1E12                     	;# 
  2642     1E13                     	;# 
  2643     1E14                     	;# 
  2644     1E15                     	;# 
  2645     1E16                     	;# 
  2646     1E17                     	;# 
  2647     1E18                     	;# 
  2648     1E19                     	;# 
  2649     1E1A                     	;# 
  2650     1E1B                     	;# 
  2651     1E1C                     	;# 
  2652     1E1D                     	;# 
  2653     1E1E                     	;# 
  2654     1E1F                     	;# 
  2655     1E20                     	;# 
  2656     1E21                     	;# 
  2657     1E22                     	;# 
  2658     1E23                     	;# 
  2659     1E24                     	;# 
  2660     1E25                     	;# 
  2661     1E26                     	;# 
  2662     1E27                     	;# 
  2663     1E28                     	;# 
  2664     1E29                     	;# 
  2665     1E2A                     	;# 
  2666     1E2B                     	;# 
  2667     1E2C                     	;# 
  2668     1E2D                     	;# 
  2669     1E2E                     	;# 
  2670     1E2F                     	;# 
  2671     1E30                     	;# 
  2672     1E31                     	;# 
  2673     1E32                     	;# 
  2674     1E33                     	;# 
  2675     1E34                     	;# 
  2676     1E35                     	;# 
  2677     1E36                     	;# 
  2678     1E37                     	;# 
  2679     1E8F                     	;# 
  2680     1E90                     	;# 
  2681     1E91                     	;# 
  2682     1E92                     	;# 
  2683     1E93                     	;# 
  2684     1E94                     	;# 
  2685     1E95                     	;# 
  2686     1E96                     	;# 
  2687     1E97                     	;# 
  2688     1E9C                     	;# 
  2689     1E9D                     	;# 
  2690     1E9E                     	;# 
  2691     1EA1                     	;# 
  2692     1EA2                     	;# 
  2693     1EA3                     	;# 
  2694     1EA4                     	;# 
  2695     1EA9                     	;# 
  2696     1EAA                     	;# 
  2697     1EB1                     	;# 
  2698     1EB2                     	;# 
  2699     1EB8                     	;# 
  2700     1EB9                     	;# 
  2701     1EBA                     	;# 
  2702     1EBB                     	;# 
  2703     1EBC                     	;# 
  2704     1EBD                     	;# 
  2705     1EBE                     	;# 
  2706     1EC3                     	;# 
  2707     1EC5                     	;# 
  2708     1EC6                     	;# 
  2709     1EC7                     	;# 
  2710     1EC8                     	;# 
  2711     1EC9                     	;# 
  2712     1ECA                     	;# 
  2713     1ECB                     	;# 
  2714     1ECC                     	;# 
  2715     1F10                     	;# 
  2716     1F11                     	;# 
  2717     1F12                     	;# 
  2718     1F14                     	;# 
  2719     1F15                     	;# 
  2720     1F20                     	;# 
  2721     1F21                     	;# 
  2722     1F22                     	;# 
  2723     1F23                     	;# 
  2724     1F24                     	;# 
  2725     1F25                     	;# 
  2726     1F38                     	;# 
  2727     1F39                     	;# 
  2728     1F3A                     	;# 
  2729     1F3B                     	;# 
  2730     1F3C                     	;# 
  2731     1F3D                     	;# 
  2732     1F3E                     	;# 
  2733     1F3F                     	;# 
  2734     1F4E                     	;# 
  2735     1F4F                     	;# 
  2736     1F50                     	;# 
  2737     1F51                     	;# 
  2738     1F52                     	;# 
  2739     1F53                     	;# 
  2740     1F54                     	;# 
  2741     1F55                     	;# 
  2742     1FE4                     	;# 
  2743     1FE5                     	;# 
  2744     1FE6                     	;# 
  2745     1FE7                     	;# 
  2746     1FE8                     	;# 
  2747     1FE8                     	;# 
  2748     1FE9                     	;# 
  2749     1FEA                     	;# 
  2750     1FEB                     	;# 
  2751     1FED                     	;# 
  2752     1FEE                     	;# 
  2753     1FEF                     	;# 
  2754     0000                     	;# 
  2755     0001                     	;# 
  2756     0002                     	;# 
  2757     0003                     	;# 
  2758     0004                     	;# 
  2759     0005                     	;# 
  2760     0006                     	;# 
  2761     0007                     	;# 
  2762     0008                     	;# 
  2763     0009                     	;# 
  2764     000A                     	;# 
  2765     000B                     	;# 
  2766     000C                     	;# 
  2767     000E                     	;# 
  2768     0012                     	;# 
  2769     0014                     	;# 
  2770     0018                     	;# 
  2771     001A                     	;# 
  2772     008C                     	;# 
  2773     008C                     	;# 
  2774     008D                     	;# 
  2775     008E                     	;# 
  2776     008E                     	;# 
  2777     008F                     	;# 
  2778     0090                     	;# 
  2779     0090                     	;# 
  2780     0091                     	;# 
  2781     0092                     	;# 
  2782     0092                     	;# 
  2783     0093                     	;# 
  2784     0094                     	;# 
  2785     0094                     	;# 
  2786     0095                     	;# 
  2787     0096                     	;# 
  2788     0096                     	;# 
  2789     0097                     	;# 
  2790     0098                     	;# 
  2791     0099                     	;# 
  2792     009A                     	;# 
  2793     009B                     	;# 
  2794     009B                     	;# 
  2795     009C                     	;# 
  2796     009D                     	;# 
  2797     009D                     	;# 
  2798     009E                     	;# 
  2799     009F                     	;# 
  2800     010C                     	;# 
  2801     010C                     	;# 
  2802     010D                     	;# 
  2803     010E                     	;# 
  2804     010F                     	;# 
  2805     010F                     	;# 
  2806     0110                     	;# 
  2807     0111                     	;# 
  2808     0112                     	;# 
  2809     0113                     	;# 
  2810     0114                     	;# 
  2811     0115                     	;# 
  2812     0116                     	;# 
  2813     0117                     	;# 
  2814     0118                     	;# 
  2815     0119                     	;# 
  2816     0119                     	;# 
  2817     0119                     	;# 
  2818     011A                     	;# 
  2819     011A                     	;# 
  2820     011A                     	;# 
  2821     011B                     	;# 
  2822     011B                     	;# 
  2823     011B                     	;# 
  2824     011B                     	;# 
  2825     011B                     	;# 
  2826     011C                     	;# 
  2827     011C                     	;# 
  2828     011C                     	;# 
  2829     011D                     	;# 
  2830     011D                     	;# 
  2831     011D                     	;# 
  2832     011E                     	;# 
  2833     011E                     	;# 
  2834     011E                     	;# 
  2835     011F                     	;# 
  2836     011F                     	;# 
  2837     011F                     	;# 
  2838     011F                     	;# 
  2839     011F                     	;# 
  2840     018C                     	;# 
  2841     018D                     	;# 
  2842     018E                     	;# 
  2843     018F                     	;# 
  2844     0190                     	;# 
  2845     0191                     	;# 
  2846     0192                     	;# 
  2847     0196                     	;# 
  2848     0197                     	;# 
  2849     0198                     	;# 
  2850     0199                     	;# 
  2851     019A                     	;# 
  2852     019B                     	;# 
  2853     019C                     	;# 
  2854     020C                     	;# 
  2855     020D                     	;# 
  2856     020E                     	;# 
  2857     020E                     	;# 
  2858     020F                     	;# 
  2859     020F                     	;# 
  2860     0210                     	;# 
  2861     0210                     	;# 
  2862     0211                     	;# 
  2863     0211                     	;# 
  2864     0212                     	;# 
  2865     0213                     	;# 
  2866     0214                     	;# 
  2867     0214                     	;# 
  2868     0215                     	;# 
  2869     0215                     	;# 
  2870     0216                     	;# 
  2871     0216                     	;# 
  2872     0217                     	;# 
  2873     0217                     	;# 
  2874     0218                     	;# 
  2875     0219                     	;# 
  2876     021A                     	;# 
  2877     021A                     	;# 
  2878     021B                     	;# 
  2879     021B                     	;# 
  2880     021C                     	;# 
  2881     021C                     	;# 
  2882     021D                     	;# 
  2883     021D                     	;# 
  2884     021E                     	;# 
  2885     021F                     	;# 
  2886     028C                     	;# 
  2887     028C                     	;# 
  2888     028D                     	;# 
  2889     028D                     	;# 
  2890     028E                     	;# 
  2891     028F                     	;# 
  2892     0290                     	;# 
  2893     0291                     	;# 
  2894     0292                     	;# 
  2895     0292                     	;# 
  2896     0293                     	;# 
  2897     0293                     	;# 
  2898     0294                     	;# 
  2899     0295                     	;# 
  2900     0296                     	;# 
  2901     0297                     	;# 
  2902     0298                     	;# 
  2903     0298                     	;# 
  2904     0299                     	;# 
  2905     0299                     	;# 
  2906     029A                     	;# 
  2907     029B                     	;# 
  2908     029C                     	;# 
  2909     029D                     	;# 
  2910     029F                     	;# 
  2911     030C                     	;# 
  2912     030C                     	;# 
  2913     030D                     	;# 
  2914     030E                     	;# 
  2915     030F                     	;# 
  2916     0310                     	;# 
  2917     0310                     	;# 
  2918     0311                     	;# 
  2919     0312                     	;# 
  2920     0313                     	;# 
  2921     0314                     	;# 
  2922     0314                     	;# 
  2923     0315                     	;# 
  2924     0316                     	;# 
  2925     0317                     	;# 
  2926     0318                     	;# 
  2927     0318                     	;# 
  2928     0319                     	;# 
  2929     031A                     	;# 
  2930     031B                     	;# 
  2931     038C                     	;# 
  2932     038C                     	;# 
  2933     038D                     	;# 
  2934     038E                     	;# 
  2935     0390                     	;# 
  2936     0390                     	;# 
  2937     0391                     	;# 
  2938     0392                     	;# 
  2939     048C                     	;# 
  2940     048C                     	;# 
  2941     048D                     	;# 
  2942     048E                     	;# 
  2943     048F                     	;# 
  2944     048F                     	;# 
  2945     0490                     	;# 
  2946     0491                     	;# 
  2947     0492                     	;# 
  2948     0492                     	;# 
  2949     0493                     	;# 
  2950     0494                     	;# 
  2951     0495                     	;# 
  2952     0495                     	;# 
  2953     0496                     	;# 
  2954     0497                     	;# 
  2955     0498                     	;# 
  2956     0499                     	;# 
  2957     049A                     	;# 
  2958     049B                     	;# 
  2959     049C                     	;# 
  2960     049D                     	;# 
  2961     058C                     	;# 
  2962     058C                     	;# 
  2963     058D                     	;# 
  2964     058E                     	;# 
  2965     058F                     	;# 
  2966     058F                     	;# 
  2967     0590                     	;# 
  2968     0591                     	;# 
  2969     0592                     	;# 
  2970     0593                     	;# 
  2971     059C                     	;# 
  2972     059C                     	;# 
  2973     059D                     	;# 
  2974     059D                     	;# 
  2975     059E                     	;# 
  2976     059F                     	;# 
  2977     060C                     	;# 
  2978     060C                     	;# 
  2979     060D                     	;# 
  2980     060D                     	;# 
  2981     060E                     	;# 
  2982     060F                     	;# 
  2983     0610                     	;# 
  2984     0611                     	;# 
  2985     0612                     	;# 
  2986     0613                     	;# 
  2987     0614                     	;# 
  2988     0616                     	;# 
  2989     0616                     	;# 
  2990     0617                     	;# 
  2991     0617                     	;# 
  2992     0618                     	;# 
  2993     0619                     	;# 
  2994     061A                     	;# 
  2995     061B                     	;# 
  2996     061C                     	;# 
  2997     061D                     	;# 
  2998     061E                     	;# 
  2999     070C                     	;# 
  3000     070D                     	;# 
  3001     070E                     	;# 
  3002     070F                     	;# 
  3003     0710                     	;# 
  3004     0711                     	;# 
  3005     0712                     	;# 
  3006     0713                     	;# 
  3007     0714                     	;# 
  3008     0716                     	;# 
  3009     0717                     	;# 
  3010     0718                     	;# 
  3011     0719                     	;# 
  3012     071A                     	;# 
  3013     071B                     	;# 
  3014     071C                     	;# 
  3015     071D                     	;# 
  3016     071E                     	;# 
  3017     0796                     	;# 
  3018     0797                     	;# 
  3019     0798                     	;# 
  3020     0799                     	;# 
  3021     079A                     	;# 
  3022     079B                     	;# 
  3023     079C                     	;# 
  3024     079D                     	;# 
  3025     080C                     	;# 
  3026     080D                     	;# 
  3027     080E                     	;# 
  3028     080F                     	;# 
  3029     0810                     	;# 
  3030     0811                     	;# 
  3031     0812                     	;# 
  3032     0813                     	;# 
  3033     0814                     	;# 
  3034     081A                     	;# 
  3035     081A                     	;# 
  3036     081B                     	;# 
  3037     081C                     	;# 
  3038     081C                     	;# 
  3039     081D                     	;# 
  3040     081E                     	;# 
  3041     081F                     	;# 
  3042     088C                     	;# 
  3043     088D                     	;# 
  3044     088E                     	;# 
  3045     088F                     	;# 
  3046     0890                     	;# 
  3047     0891                     	;# 
  3048     0892                     	;# 
  3049     0893                     	;# 
  3050     0895                     	;# 
  3051     0896                     	;# 
  3052     0897                     	;# 
  3053     0898                     	;# 
  3054     0899                     	;# 
  3055     089A                     	;# 
  3056     089B                     	;# 
  3057     090C                     	;# 
  3058     090E                     	;# 
  3059     090F                     	;# 
  3060     091F                     	;# 
  3061     098F                     	;# 
  3062     098F                     	;# 
  3063     0990                     	;# 
  3064     0991                     	;# 
  3065     0992                     	;# 
  3066     0993                     	;# 
  3067     0994                     	;# 
  3068     0995                     	;# 
  3069     0996                     	;# 
  3070     0997                     	;# 
  3071     1E0F                     	;# 
  3072     1E10                     	;# 
  3073     1E11                     	;# 
  3074     1E12                     	;# 
  3075     1E13                     	;# 
  3076     1E14                     	;# 
  3077     1E15                     	;# 
  3078     1E16                     	;# 
  3079     1E17                     	;# 
  3080     1E18                     	;# 
  3081     1E19                     	;# 
  3082     1E1A                     	;# 
  3083     1E1B                     	;# 
  3084     1E1C                     	;# 
  3085     1E1D                     	;# 
  3086     1E1E                     	;# 
  3087     1E1F                     	;# 
  3088     1E20                     	;# 
  3089     1E21                     	;# 
  3090     1E22                     	;# 
  3091     1E23                     	;# 
  3092     1E24                     	;# 
  3093     1E25                     	;# 
  3094     1E26                     	;# 
  3095     1E27                     	;# 
  3096     1E28                     	;# 
  3097     1E29                     	;# 
  3098     1E2A                     	;# 
  3099     1E2B                     	;# 
  3100     1E2C                     	;# 
  3101     1E2D                     	;# 
  3102     1E2E                     	;# 
  3103     1E2F                     	;# 
  3104     1E30                     	;# 
  3105     1E31                     	;# 
  3106     1E32                     	;# 
  3107     1E33                     	;# 
  3108     1E34                     	;# 
  3109     1E35                     	;# 
  3110     1E36                     	;# 
  3111     1E37                     	;# 
  3112     1E8F                     	;# 
  3113     1E90                     	;# 
  3114     1E91                     	;# 
  3115     1E92                     	;# 
  3116     1E93                     	;# 
  3117     1E94                     	;# 
  3118     1E95                     	;# 
  3119     1E96                     	;# 
  3120     1E97                     	;# 
  3121     1E9C                     	;# 
  3122     1E9D                     	;# 
  3123     1E9E                     	;# 
  3124     1EA1                     	;# 
  3125     1EA2                     	;# 
  3126     1EA3                     	;# 
  3127     1EA4                     	;# 
  3128     1EA9                     	;# 
  3129     1EAA                     	;# 
  3130     1EB1                     	;# 
  3131     1EB2                     	;# 
  3132     1EB8                     	;# 
  3133     1EB9                     	;# 
  3134     1EBA                     	;# 
  3135     1EBB                     	;# 
  3136     1EBC                     	;# 
  3137     1EBD                     	;# 
  3138     1EBE                     	;# 
  3139     1EC3                     	;# 
  3140     1EC5                     	;# 
  3141     1EC6                     	;# 
  3142     1EC7                     	;# 
  3143     1EC8                     	;# 
  3144     1EC9                     	;# 
  3145     1ECA                     	;# 
  3146     1ECB                     	;# 
  3147     1ECC                     	;# 
  3148     1F10                     	;# 
  3149     1F11                     	;# 
  3150     1F12                     	;# 
  3151     1F14                     	;# 
  3152     1F15                     	;# 
  3153     1F20                     	;# 
  3154     1F21                     	;# 
  3155     1F22                     	;# 
  3156     1F23                     	;# 
  3157     1F24                     	;# 
  3158     1F25                     	;# 
  3159     1F38                     	;# 
  3160     1F39                     	;# 
  3161     1F3A                     	;# 
  3162     1F3B                     	;# 
  3163     1F3C                     	;# 
  3164     1F3D                     	;# 
  3165     1F3E                     	;# 
  3166     1F3F                     	;# 
  3167     1F4E                     	;# 
  3168     1F4F                     	;# 
  3169     1F50                     	;# 
  3170     1F51                     	;# 
  3171     1F52                     	;# 
  3172     1F53                     	;# 
  3173     1F54                     	;# 
  3174     1F55                     	;# 
  3175     1FE4                     	;# 
  3176     1FE5                     	;# 
  3177     1FE6                     	;# 
  3178     1FE7                     	;# 
  3179     1FE8                     	;# 
  3180     1FE8                     	;# 
  3181     1FE9                     	;# 
  3182     1FEA                     	;# 
  3183     1FEB                     	;# 
  3184     1FED                     	;# 
  3185     1FEE                     	;# 
  3186     1FEF                     	;# 
  3187     0000                     	;# 
  3188     0001                     	;# 
  3189     0002                     	;# 
  3190     0003                     	;# 
  3191     0004                     	;# 
  3192     0005                     	;# 
  3193     0006                     	;# 
  3194     0007                     	;# 
  3195     0008                     	;# 
  3196     0009                     	;# 
  3197     000A                     	;# 
  3198     000B                     	;# 
  3199     000C                     	;# 
  3200     000E                     	;# 
  3201     0012                     	;# 
  3202     0014                     	;# 
  3203     0018                     	;# 
  3204     001A                     	;# 
  3205     008C                     	;# 
  3206     008C                     	;# 
  3207     008D                     	;# 
  3208     008E                     	;# 
  3209     008E                     	;# 
  3210     008F                     	;# 
  3211     0090                     	;# 
  3212     0090                     	;# 
  3213     0091                     	;# 
  3214     0092                     	;# 
  3215     0092                     	;# 
  3216     0093                     	;# 
  3217     0094                     	;# 
  3218     0094                     	;# 
  3219     0095                     	;# 
  3220     0096                     	;# 
  3221     0096                     	;# 
  3222     0097                     	;# 
  3223     0098                     	;# 
  3224     0099                     	;# 
  3225     009A                     	;# 
  3226     009B                     	;# 
  3227     009B                     	;# 
  3228     009C                     	;# 
  3229     009D                     	;# 
  3230     009D                     	;# 
  3231     009E                     	;# 
  3232     009F                     	;# 
  3233     010C                     	;# 
  3234     010C                     	;# 
  3235     010D                     	;# 
  3236     010E                     	;# 
  3237     010F                     	;# 
  3238     010F                     	;# 
  3239     0110                     	;# 
  3240     0111                     	;# 
  3241     0112                     	;# 
  3242     0113                     	;# 
  3243     0114                     	;# 
  3244     0115                     	;# 
  3245     0116                     	;# 
  3246     0117                     	;# 
  3247     0118                     	;# 
  3248     0119                     	;# 
  3249     0119                     	;# 
  3250     0119                     	;# 
  3251     011A                     	;# 
  3252     011A                     	;# 
  3253     011A                     	;# 
  3254     011B                     	;# 
  3255     011B                     	;# 
  3256     011B                     	;# 
  3257     011B                     	;# 
  3258     011B                     	;# 
  3259     011C                     	;# 
  3260     011C                     	;# 
  3261     011C                     	;# 
  3262     011D                     	;# 
  3263     011D                     	;# 
  3264     011D                     	;# 
  3265     011E                     	;# 
  3266     011E                     	;# 
  3267     011E                     	;# 
  3268     011F                     	;# 
  3269     011F                     	;# 
  3270     011F                     	;# 
  3271     011F                     	;# 
  3272     011F                     	;# 
  3273     018C                     	;# 
  3274     018D                     	;# 
  3275     018E                     	;# 
  3276     018F                     	;# 
  3277     0190                     	;# 
  3278     0191                     	;# 
  3279     0192                     	;# 
  3280     0196                     	;# 
  3281     0197                     	;# 
  3282     0198                     	;# 
  3283     0199                     	;# 
  3284     019A                     	;# 
  3285     019B                     	;# 
  3286     019C                     	;# 
  3287     020C                     	;# 
  3288     020D                     	;# 
  3289     020E                     	;# 
  3290     020E                     	;# 
  3291     020F                     	;# 
  3292     020F                     	;# 
  3293     0210                     	;# 
  3294     0210                     	;# 
  3295     0211                     	;# 
  3296     0211                     	;# 
  3297     0212                     	;# 
  3298     0213                     	;# 
  3299     0214                     	;# 
  3300     0214                     	;# 
  3301     0215                     	;# 
  3302     0215                     	;# 
  3303     0216                     	;# 
  3304     0216                     	;# 
  3305     0217                     	;# 
  3306     0217                     	;# 
  3307     0218                     	;# 
  3308     0219                     	;# 
  3309     021A                     	;# 
  3310     021A                     	;# 
  3311     021B                     	;# 
  3312     021B                     	;# 
  3313     021C                     	;# 
  3314     021C                     	;# 
  3315     021D                     	;# 
  3316     021D                     	;# 
  3317     021E                     	;# 
  3318     021F                     	;# 
  3319     028C                     	;# 
  3320     028C                     	;# 
  3321     028D                     	;# 
  3322     028D                     	;# 
  3323     028E                     	;# 
  3324     028F                     	;# 
  3325     0290                     	;# 
  3326     0291                     	;# 
  3327     0292                     	;# 
  3328     0292                     	;# 
  3329     0293                     	;# 
  3330     0293                     	;# 
  3331     0294                     	;# 
  3332     0295                     	;# 
  3333     0296                     	;# 
  3334     0297                     	;# 
  3335     0298                     	;# 
  3336     0298                     	;# 
  3337     0299                     	;# 
  3338     0299                     	;# 
  3339     029A                     	;# 
  3340     029B                     	;# 
  3341     029C                     	;# 
  3342     029D                     	;# 
  3343     029F                     	;# 
  3344     030C                     	;# 
  3345     030C                     	;# 
  3346     030D                     	;# 
  3347     030E                     	;# 
  3348     030F                     	;# 
  3349     0310                     	;# 
  3350     0310                     	;# 
  3351     0311                     	;# 
  3352     0312                     	;# 
  3353     0313                     	;# 
  3354     0314                     	;# 
  3355     0314                     	;# 
  3356     0315                     	;# 
  3357     0316                     	;# 
  3358     0317                     	;# 
  3359     0318                     	;# 
  3360     0318                     	;# 
  3361     0319                     	;# 
  3362     031A                     	;# 
  3363     031B                     	;# 
  3364     038C                     	;# 
  3365     038C                     	;# 
  3366     038D                     	;# 
  3367     038E                     	;# 
  3368     0390                     	;# 
  3369     0390                     	;# 
  3370     0391                     	;# 
  3371     0392                     	;# 
  3372     048C                     	;# 
  3373     048C                     	;# 
  3374     048D                     	;# 
  3375     048E                     	;# 
  3376     048F                     	;# 
  3377     048F                     	;# 
  3378     0490                     	;# 
  3379     0491                     	;# 
  3380     0492                     	;# 
  3381     0492                     	;# 
  3382     0493                     	;# 
  3383     0494                     	;# 
  3384     0495                     	;# 
  3385     0495                     	;# 
  3386     0496                     	;# 
  3387     0497                     	;# 
  3388     0498                     	;# 
  3389     0499                     	;# 
  3390     049A                     	;# 
  3391     049B                     	;# 
  3392     049C                     	;# 
  3393     049D                     	;# 
  3394     058C                     	;# 
  3395     058C                     	;# 
  3396     058D                     	;# 
  3397     058E                     	;# 
  3398     058F                     	;# 
  3399     058F                     	;# 
  3400     0590                     	;# 
  3401     0591                     	;# 
  3402     0592                     	;# 
  3403     0593                     	;# 
  3404     059C                     	;# 
  3405     059C                     	;# 
  3406     059D                     	;# 
  3407     059D                     	;# 
  3408     059E                     	;# 
  3409     059F                     	;# 
  3410     060C                     	;# 
  3411     060C                     	;# 
  3412     060D                     	;# 
  3413     060D                     	;# 
  3414     060E                     	;# 
  3415     060F                     	;# 
  3416     0610                     	;# 
  3417     0611                     	;# 
  3418     0612                     	;# 
  3419     0613                     	;# 
  3420     0614                     	;# 
  3421     0616                     	;# 
  3422     0616                     	;# 
  3423     0617                     	;# 
  3424     0617                     	;# 
  3425     0618                     	;# 
  3426     0619                     	;# 
  3427     061A                     	;# 
  3428     061B                     	;# 
  3429     061C                     	;# 
  3430     061D                     	;# 
  3431     061E                     	;# 
  3432     070C                     	;# 
  3433     070D                     	;# 
  3434     070E                     	;# 
  3435     070F                     	;# 
  3436     0710                     	;# 
  3437     0711                     	;# 
  3438     0712                     	;# 
  3439     0713                     	;# 
  3440     0714                     	;# 
  3441     0716                     	;# 
  3442     0717                     	;# 
  3443     0718                     	;# 
  3444     0719                     	;# 
  3445     071A                     	;# 
  3446     071B                     	;# 
  3447     071C                     	;# 
  3448     071D                     	;# 
  3449     071E                     	;# 
  3450     0796                     	;# 
  3451     0797                     	;# 
  3452     0798                     	;# 
  3453     0799                     	;# 
  3454     079A                     	;# 
  3455     079B                     	;# 
  3456     079C                     	;# 
  3457     079D                     	;# 
  3458     080C                     	;# 
  3459     080D                     	;# 
  3460     080E                     	;# 
  3461     080F                     	;# 
  3462     0810                     	;# 
  3463     0811                     	;# 
  3464     0812                     	;# 
  3465     0813                     	;# 
  3466     0814                     	;# 
  3467     081A                     	;# 
  3468     081A                     	;# 
  3469     081B                     	;# 
  3470     081C                     	;# 
  3471     081C                     	;# 
  3472     081D                     	;# 
  3473     081E                     	;# 
  3474     081F                     	;# 
  3475     088C                     	;# 
  3476     088D                     	;# 
  3477     088E                     	;# 
  3478     088F                     	;# 
  3479     0890                     	;# 
  3480     0891                     	;# 
  3481     0892                     	;# 
  3482     0893                     	;# 
  3483     0895                     	;# 
  3484     0896                     	;# 
  3485     0897                     	;# 
  3486     0898                     	;# 
  3487     0899                     	;# 
  3488     089A                     	;# 
  3489     089B                     	;# 
  3490     090C                     	;# 
  3491     090E                     	;# 
  3492     090F                     	;# 
  3493     091F                     	;# 
  3494     098F                     	;# 
  3495     098F                     	;# 
  3496     0990                     	;# 
  3497     0991                     	;# 
  3498     0992                     	;# 
  3499     0993                     	;# 
  3500     0994                     	;# 
  3501     0995                     	;# 
  3502     0996                     	;# 
  3503     0997                     	;# 
  3504     1E0F                     	;# 
  3505     1E10                     	;# 
  3506     1E11                     	;# 
  3507     1E12                     	;# 
  3508     1E13                     	;# 
  3509     1E14                     	;# 
  3510     1E15                     	;# 
  3511     1E16                     	;# 
  3512     1E17                     	;# 
  3513     1E18                     	;# 
  3514     1E19                     	;# 
  3515     1E1A                     	;# 
  3516     1E1B                     	;# 
  3517     1E1C                     	;# 
  3518     1E1D                     	;# 
  3519     1E1E                     	;# 
  3520     1E1F                     	;# 
  3521     1E20                     	;# 
  3522     1E21                     	;# 
  3523     1E22                     	;# 
  3524     1E23                     	;# 
  3525     1E24                     	;# 
  3526     1E25                     	;# 
  3527     1E26                     	;# 
  3528     1E27                     	;# 
  3529     1E28                     	;# 
  3530     1E29                     	;# 
  3531     1E2A                     	;# 
  3532     1E2B                     	;# 
  3533     1E2C                     	;# 
  3534     1E2D                     	;# 
  3535     1E2E                     	;# 
  3536     1E2F                     	;# 
  3537     1E30                     	;# 
  3538     1E31                     	;# 
  3539     1E32                     	;# 
  3540     1E33                     	;# 
  3541     1E34                     	;# 
  3542     1E35                     	;# 
  3543     1E36                     	;# 
  3544     1E37                     	;# 
  3545     1E8F                     	;# 
  3546     1E90                     	;# 
  3547     1E91                     	;# 
  3548     1E92                     	;# 
  3549     1E93                     	;# 
  3550     1E94                     	;# 
  3551     1E95                     	;# 
  3552     1E96                     	;# 
  3553     1E97                     	;# 
  3554     1E9C                     	;# 
  3555     1E9D                     	;# 
  3556     1E9E                     	;# 
  3557     1EA1                     	;# 
  3558     1EA2                     	;# 
  3559     1EA3                     	;# 
  3560     1EA4                     	;# 
  3561     1EA9                     	;# 
  3562     1EAA                     	;# 
  3563     1EB1                     	;# 
  3564     1EB2                     	;# 
  3565     1EB8                     	;# 
  3566     1EB9                     	;# 
  3567     1EBA                     	;# 
  3568     1EBB                     	;# 
  3569     1EBC                     	;# 
  3570     1EBD                     	;# 
  3571     1EBE                     	;# 
  3572     1EC3                     	;# 
  3573     1EC5                     	;# 
  3574     1EC6                     	;# 
  3575     1EC7                     	;# 
  3576     1EC8                     	;# 
  3577     1EC9                     	;# 
  3578     1ECA                     	;# 
  3579     1ECB                     	;# 
  3580     1ECC                     	;# 
  3581     1F10                     	;# 
  3582     1F11                     	;# 
  3583     1F12                     	;# 
  3584     1F14                     	;# 
  3585     1F15                     	;# 
  3586     1F20                     	;# 
  3587     1F21                     	;# 
  3588     1F22                     	;# 
  3589     1F23                     	;# 
  3590     1F24                     	;# 
  3591     1F25                     	;# 
  3592     1F38                     	;# 
  3593     1F39                     	;# 
  3594     1F3A                     	;# 
  3595     1F3B                     	;# 
  3596     1F3C                     	;# 
  3597     1F3D                     	;# 
  3598     1F3E                     	;# 
  3599     1F3F                     	;# 
  3600     1F4E                     	;# 
  3601     1F4F                     	;# 
  3602     1F50                     	;# 
  3603     1F51                     	;# 
  3604     1F52                     	;# 
  3605     1F53                     	;# 
  3606     1F54                     	;# 
  3607     1F55                     	;# 
  3608     1FE4                     	;# 
  3609     1FE5                     	;# 
  3610     1FE6                     	;# 
  3611     1FE7                     	;# 
  3612     1FE8                     	;# 
  3613     1FE8                     	;# 
  3614     1FE9                     	;# 
  3615     1FEA                     	;# 
  3616     1FEB                     	;# 
  3617     1FED                     	;# 
  3618     1FEE                     	;# 
  3619     1FEF                     	;# 
  3620     0000                     	;# 
  3621     0001                     	;# 
  3622     0002                     	;# 
  3623     0003                     	;# 
  3624     0004                     	;# 
  3625     0005                     	;# 
  3626     0006                     	;# 
  3627     0007                     	;# 
  3628     0008                     	;# 
  3629     0009                     	;# 
  3630     000A                     	;# 
  3631     000B                     	;# 
  3632     000C                     	;# 
  3633     000E                     	;# 
  3634     0012                     	;# 
  3635     0014                     	;# 
  3636     0018                     	;# 
  3637     001A                     	;# 
  3638     008C                     	;# 
  3639     008C                     	;# 
  3640     008D                     	;# 
  3641     008E                     	;# 
  3642     008E                     	;# 
  3643     008F                     	;# 
  3644     0090                     	;# 
  3645     0090                     	;# 
  3646     0091                     	;# 
  3647     0092                     	;# 
  3648     0092                     	;# 
  3649     0093                     	;# 
  3650     0094                     	;# 
  3651     0094                     	;# 
  3652     0095                     	;# 
  3653     0096                     	;# 
  3654     0096                     	;# 
  3655     0097                     	;# 
  3656     0098                     	;# 
  3657     0099                     	;# 
  3658     009A                     	;# 
  3659     009B                     	;# 
  3660     009B                     	;# 
  3661     009C                     	;# 
  3662     009D                     	;# 
  3663     009D                     	;# 
  3664     009E                     	;# 
  3665     009F                     	;# 
  3666     010C                     	;# 
  3667     010C                     	;# 
  3668     010D                     	;# 
  3669     010E                     	;# 
  3670     010F                     	;# 
  3671     010F                     	;# 
  3672     0110                     	;# 
  3673     0111                     	;# 
  3674     0112                     	;# 
  3675     0113                     	;# 
  3676     0114                     	;# 
  3677     0115                     	;# 
  3678     0116                     	;# 
  3679     0117                     	;# 
  3680     0118                     	;# 
  3681     0119                     	;# 
  3682     0119                     	;# 
  3683     0119                     	;# 
  3684     011A                     	;# 
  3685     011A                     	;# 
  3686     011A                     	;# 
  3687     011B                     	;# 
  3688     011B                     	;# 
  3689     011B                     	;# 
  3690     011B                     	;# 
  3691     011B                     	;# 
  3692     011C                     	;# 
  3693     011C                     	;# 
  3694     011C                     	;# 
  3695     011D                     	;# 
  3696     011D                     	;# 
  3697     011D                     	;# 
  3698     011E                     	;# 
  3699     011E                     	;# 
  3700     011E                     	;# 
  3701     011F                     	;# 
  3702     011F                     	;# 
  3703     011F                     	;# 
  3704     011F                     	;# 
  3705     011F                     	;# 
  3706     018C                     	;# 
  3707     018D                     	;# 
  3708     018E                     	;# 
  3709     018F                     	;# 
  3710     0190                     	;# 
  3711     0191                     	;# 
  3712     0192                     	;# 
  3713     0196                     	;# 
  3714     0197                     	;# 
  3715     0198                     	;# 
  3716     0199                     	;# 
  3717     019A                     	;# 
  3718     019B                     	;# 
  3719     019C                     	;# 
  3720     020C                     	;# 
  3721     020D                     	;# 
  3722     020E                     	;# 
  3723     020E                     	;# 
  3724     020F                     	;# 
  3725     020F                     	;# 
  3726     0210                     	;# 
  3727     0210                     	;# 
  3728     0211                     	;# 
  3729     0211                     	;# 
  3730     0212                     	;# 
  3731     0213                     	;# 
  3732     0214                     	;# 
  3733     0214                     	;# 
  3734     0215                     	;# 
  3735     0215                     	;# 
  3736     0216                     	;# 
  3737     0216                     	;# 
  3738     0217                     	;# 
  3739     0217                     	;# 
  3740     0218                     	;# 
  3741     0219                     	;# 
  3742     021A                     	;# 
  3743     021A                     	;# 
  3744     021B                     	;# 
  3745     021B                     	;# 
  3746     021C                     	;# 
  3747     021C                     	;# 
  3748     021D                     	;# 
  3749     021D                     	;# 
  3750     021E                     	;# 
  3751     021F                     	;# 
  3752     028C                     	;# 
  3753     028C                     	;# 
  3754     028D                     	;# 
  3755     028D                     	;# 
  3756     028E                     	;# 
  3757     028F                     	;# 
  3758     0290                     	;# 
  3759     0291                     	;# 
  3760     0292                     	;# 
  3761     0292                     	;# 
  3762     0293                     	;# 
  3763     0293                     	;# 
  3764     0294                     	;# 
  3765     0295                     	;# 
  3766     0296                     	;# 
  3767     0297                     	;# 
  3768     0298                     	;# 
  3769     0298                     	;# 
  3770     0299                     	;# 
  3771     0299                     	;# 
  3772     029A                     	;# 
  3773     029B                     	;# 
  3774     029C                     	;# 
  3775     029D                     	;# 
  3776     029F                     	;# 
  3777     030C                     	;# 
  3778     030C                     	;# 
  3779     030D                     	;# 
  3780     030E                     	;# 
  3781     030F                     	;# 
  3782     0310                     	;# 
  3783     0310                     	;# 
  3784     0311                     	;# 
  3785     0312                     	;# 
  3786     0313                     	;# 
  3787     0314                     	;# 
  3788     0314                     	;# 
  3789     0315                     	;# 
  3790     0316                     	;# 
  3791     0317                     	;# 
  3792     0318                     	;# 
  3793     0318                     	;# 
  3794     0319                     	;# 
  3795     031A                     	;# 
  3796     031B                     	;# 
  3797     038C                     	;# 
  3798     038C                     	;# 
  3799     038D                     	;# 
  3800     038E                     	;# 
  3801     0390                     	;# 
  3802     0390                     	;# 
  3803     0391                     	;# 
  3804     0392                     	;# 
  3805     048C                     	;# 
  3806     048C                     	;# 
  3807     048D                     	;# 
  3808     048E                     	;# 
  3809     048F                     	;# 
  3810     048F                     	;# 
  3811     0490                     	;# 
  3812     0491                     	;# 
  3813     0492                     	;# 
  3814     0492                     	;# 
  3815     0493                     	;# 
  3816     0494                     	;# 
  3817     0495                     	;# 
  3818     0495                     	;# 
  3819     0496                     	;# 
  3820     0497                     	;# 
  3821     0498                     	;# 
  3822     0499                     	;# 
  3823     049A                     	;# 
  3824     049B                     	;# 
  3825     049C                     	;# 
  3826     049D                     	;# 
  3827     058C                     	;# 
  3828     058C                     	;# 
  3829     058D                     	;# 
  3830     058E                     	;# 
  3831     058F                     	;# 
  3832     058F                     	;# 
  3833     0590                     	;# 
  3834     0591                     	;# 
  3835     0592                     	;# 
  3836     0593                     	;# 
  3837     059C                     	;# 
  3838     059C                     	;# 
  3839     059D                     	;# 
  3840     059D                     	;# 
  3841     059E                     	;# 
  3842     059F                     	;# 
  3843     060C                     	;# 
  3844     060C                     	;# 
  3845     060D                     	;# 
  3846     060D                     	;# 
  3847     060E                     	;# 
  3848     060F                     	;# 
  3849     0610                     	;# 
  3850     0611                     	;# 
  3851     0612                     	;# 
  3852     0613                     	;# 
  3853     0614                     	;# 
  3854     0616                     	;# 
  3855     0616                     	;# 
  3856     0617                     	;# 
  3857     0617                     	;# 
  3858     0618                     	;# 
  3859     0619                     	;# 
  3860     061A                     	;# 
  3861     061B                     	;# 
  3862     061C                     	;# 
  3863     061D                     	;# 
  3864     061E                     	;# 
  3865     070C                     	;# 
  3866     070D                     	;# 
  3867     070E                     	;# 
  3868     070F                     	;# 
  3869     0710                     	;# 
  3870     0711                     	;# 
  3871     0712                     	;# 
  3872     0713                     	;# 
  3873     0714                     	;# 
  3874     0716                     	;# 
  3875     0717                     	;# 
  3876     0718                     	;# 
  3877     0719                     	;# 
  3878     071A                     	;# 
  3879     071B                     	;# 
  3880     071C                     	;# 
  3881     071D                     	;# 
  3882     071E                     	;# 
  3883     0796                     	;# 
  3884     0797                     	;# 
  3885     0798                     	;# 
  3886     0799                     	;# 
  3887     079A                     	;# 
  3888     079B                     	;# 
  3889     079C                     	;# 
  3890     079D                     	;# 
  3891     080C                     	;# 
  3892     080D                     	;# 
  3893     080E                     	;# 
  3894     080F                     	;# 
  3895     0810                     	;# 
  3896     0811                     	;# 
  3897     0812                     	;# 
  3898     0813                     	;# 
  3899     0814                     	;# 
  3900     081A                     	;# 
  3901     081A                     	;# 
  3902     081B                     	;# 
  3903     081C                     	;# 
  3904     081C                     	;# 
  3905     081D                     	;# 
  3906     081E                     	;# 
  3907     081F                     	;# 
  3908     088C                     	;# 
  3909     088D                     	;# 
  3910     088E                     	;# 
  3911     088F                     	;# 
  3912     0890                     	;# 
  3913     0891                     	;# 
  3914     0892                     	;# 
  3915     0893                     	;# 
  3916     0895                     	;# 
  3917     0896                     	;# 
  3918     0897                     	;# 
  3919     0898                     	;# 
  3920     0899                     	;# 
  3921     089A                     	;# 
  3922     089B                     	;# 
  3923     090C                     	;# 
  3924     090E                     	;# 
  3925     090F                     	;# 
  3926     091F                     	;# 
  3927     098F                     	;# 
  3928     098F                     	;# 
  3929     0990                     	;# 
  3930     0991                     	;# 
  3931     0992                     	;# 
  3932     0993                     	;# 
  3933     0994                     	;# 
  3934     0995                     	;# 
  3935     0996                     	;# 
  3936     0997                     	;# 
  3937     1E0F                     	;# 
  3938     1E10                     	;# 
  3939     1E11                     	;# 
  3940     1E12                     	;# 
  3941     1E13                     	;# 
  3942     1E14                     	;# 
  3943     1E15                     	;# 
  3944     1E16                     	;# 
  3945     1E17                     	;# 
  3946     1E18                     	;# 
  3947     1E19                     	;# 
  3948     1E1A                     	;# 
  3949     1E1B                     	;# 
  3950     1E1C                     	;# 
  3951     1E1D                     	;# 
  3952     1E1E                     	;# 
  3953     1E1F                     	;# 
  3954     1E20                     	;# 
  3955     1E21                     	;# 
  3956     1E22                     	;# 
  3957     1E23                     	;# 
  3958     1E24                     	;# 
  3959     1E25                     	;# 
  3960     1E26                     	;# 
  3961     1E27                     	;# 
  3962     1E28                     	;# 
  3963     1E29                     	;# 
  3964     1E2A                     	;# 
  3965     1E2B                     	;# 
  3966     1E2C                     	;# 
  3967     1E2D                     	;# 
  3968     1E2E                     	;# 
  3969     1E2F                     	;# 
  3970     1E30                     	;# 
  3971     1E31                     	;# 
  3972     1E32                     	;# 
  3973     1E33                     	;# 
  3974     1E34                     	;# 
  3975     1E35                     	;# 
  3976     1E36                     	;# 
  3977     1E37                     	;# 
  3978     1E8F                     	;# 
  3979     1E90                     	;# 
  3980     1E91                     	;# 
  3981     1E92                     	;# 
  3982     1E93                     	;# 
  3983     1E94                     	;# 
  3984     1E95                     	;# 
  3985     1E96                     	;# 
  3986     1E97                     	;# 
  3987     1E9C                     	;# 
  3988     1E9D                     	;# 
  3989     1E9E                     	;# 
  3990     1EA1                     	;# 
  3991     1EA2                     	;# 
  3992     1EA3                     	;# 
  3993     1EA4                     	;# 
  3994     1EA9                     	;# 
  3995     1EAA                     	;# 
  3996     1EB1                     	;# 
  3997     1EB2                     	;# 
  3998     1EB8                     	;# 
  3999     1EB9                     	;# 
  4000     1EBA                     	;# 
  4001     1EBB                     	;# 
  4002     1EBC                     	;# 
  4003     1EBD                     	;# 
  4004     1EBE                     	;# 
  4005     1EC3                     	;# 
  4006     1EC5                     	;# 
  4007     1EC6                     	;# 
  4008     1EC7                     	;# 
  4009     1EC8                     	;# 
  4010     1EC9                     	;# 
  4011     1ECA                     	;# 
  4012     1ECB                     	;# 
  4013     1ECC                     	;# 
  4014     1F10                     	;# 
  4015     1F11                     	;# 
  4016     1F12                     	;# 
  4017     1F14                     	;# 
  4018     1F15                     	;# 
  4019     1F20                     	;# 
  4020     1F21                     	;# 
  4021     1F22                     	;# 
  4022     1F23                     	;# 
  4023     1F24                     	;# 
  4024     1F25                     	;# 
  4025     1F38                     	;# 
  4026     1F39                     	;# 
  4027     1F3A                     	;# 
  4028     1F3B                     	;# 
  4029     1F3C                     	;# 
  4030     1F3D                     	;# 
  4031     1F3E                     	;# 
  4032     1F3F                     	;# 
  4033     1F4E                     	;# 
  4034     1F4F                     	;# 
  4035     1F50                     	;# 
  4036     1F51                     	;# 
  4037     1F52                     	;# 
  4038     1F53                     	;# 
  4039     1F54                     	;# 
  4040     1F55                     	;# 
  4041     1FE4                     	;# 
  4042     1FE5                     	;# 
  4043     1FE6                     	;# 
  4044     1FE7                     	;# 
  4045     1FE8                     	;# 
  4046     1FE8                     	;# 
  4047     1FE9                     	;# 
  4048     1FEA                     	;# 
  4049     1FEB                     	;# 
  4050     1FED                     	;# 
  4051     1FEE                     	;# 
  4052     1FEF                     	;# 
  4053     0000                     	;# 
  4054     0001                     	;# 
  4055     0002                     	;# 
  4056     0003                     	;# 
  4057     0004                     	;# 
  4058     0005                     	;# 
  4059     0006                     	;# 
  4060     0007                     	;# 
  4061     0008                     	;# 
  4062     0009                     	;# 
  4063     000A                     	;# 
  4064     000B                     	;# 
  4065     000C                     	;# 
  4066     000E                     	;# 
  4067     0012                     	;# 
  4068     0014                     	;# 
  4069     0018                     	;# 
  4070     001A                     	;# 
  4071     008C                     	;# 
  4072     008C                     	;# 
  4073     008D                     	;# 
  4074     008E                     	;# 
  4075     008E                     	;# 
  4076     008F                     	;# 
  4077     0090                     	;# 
  4078     0090                     	;# 
  4079     0091                     	;# 
  4080     0092                     	;# 
  4081     0092                     	;# 
  4082     0093                     	;# 
  4083     0094                     	;# 
  4084     0094                     	;# 
  4085     0095                     	;# 
  4086     0096                     	;# 
  4087     0096                     	;# 
  4088     0097                     	;# 
  4089     0098                     	;# 
  4090     0099                     	;# 
  4091     009A                     	;# 
  4092     009B                     	;# 
  4093     009B                     	;# 
  4094     009C                     	;# 
  4095     009D                     	;# 
  4096     009D                     	;# 
  4097     009E                     	;# 
  4098     009F                     	;# 
  4099     010C                     	;# 
  4100     010C                     	;# 
  4101     010D                     	;# 
  4102     010E                     	;# 
  4103     010F                     	;# 
  4104     010F                     	;# 
  4105     0110                     	;# 
  4106     0111                     	;# 
  4107     0112                     	;# 
  4108     0113                     	;# 
  4109     0114                     	;# 
  4110     0115                     	;# 
  4111     0116                     	;# 
  4112     0117                     	;# 
  4113     0118                     	;# 
  4114     0119                     	;# 
  4115     0119                     	;# 
  4116     0119                     	;# 
  4117     011A                     	;# 
  4118     011A                     	;# 
  4119     011A                     	;# 
  4120     011B                     	;# 
  4121     011B                     	;# 
  4122     011B                     	;# 
  4123     011B                     	;# 
  4124     011B                     	;# 
  4125     011C                     	;# 
  4126     011C                     	;# 
  4127     011C                     	;# 
  4128     011D                     	;# 
  4129     011D                     	;# 
  4130     011D                     	;# 
  4131     011E                     	;# 
  4132     011E                     	;# 
  4133     011E                     	;# 
  4134     011F                     	;# 
  4135     011F                     	;# 
  4136     011F                     	;# 
  4137     011F                     	;# 
  4138     011F                     	;# 
  4139     018C                     	;# 
  4140     018D                     	;# 
  4141     018E                     	;# 
  4142     018F                     	;# 
  4143     0190                     	;# 
  4144     0191                     	;# 
  4145     0192                     	;# 
  4146     0196                     	;# 
  4147     0197                     	;# 
  4148     0198                     	;# 
  4149     0199                     	;# 
  4150     019A                     	;# 
  4151     019B                     	;# 
  4152     019C                     	;# 
  4153     020C                     	;# 
  4154     020D                     	;# 
  4155     020E                     	;# 
  4156     020E                     	;# 
  4157     020F                     	;# 
  4158     020F                     	;# 
  4159     0210                     	;# 
  4160     0210                     	;# 
  4161     0211                     	;# 
  4162     0211                     	;# 
  4163     0212                     	;# 
  4164     0213                     	;# 
  4165     0214                     	;# 
  4166     0214                     	;# 
  4167     0215                     	;# 
  4168     0215                     	;# 
  4169     0216                     	;# 
  4170     0216                     	;# 
  4171     0217                     	;# 
  4172     0217                     	;# 
  4173     0218                     	;# 
  4174     0219                     	;# 
  4175     021A                     	;# 
  4176     021A                     	;# 
  4177     021B                     	;# 
  4178     021B                     	;# 
  4179     021C                     	;# 
  4180     021C                     	;# 
  4181     021D                     	;# 
  4182     021D                     	;# 
  4183     021E                     	;# 
  4184     021F                     	;# 
  4185     028C                     	;# 
  4186     028C                     	;# 
  4187     028D                     	;# 
  4188     028D                     	;# 
  4189     028E                     	;# 
  4190     028F                     	;# 
  4191     0290                     	;# 
  4192     0291                     	;# 
  4193     0292                     	;# 
  4194     0292                     	;# 
  4195     0293                     	;# 
  4196     0293                     	;# 
  4197     0294                     	;# 
  4198     0295                     	;# 
  4199     0296                     	;# 
  4200     0297                     	;# 
  4201     0298                     	;# 
  4202     0298                     	;# 
  4203     0299                     	;# 
  4204     0299                     	;# 
  4205     029A                     	;# 
  4206     029B                     	;# 
  4207     029C                     	;# 
  4208     029D                     	;# 
  4209     029F                     	;# 
  4210     030C                     	;# 
  4211     030C                     	;# 
  4212     030D                     	;# 
  4213     030E                     	;# 
  4214     030F                     	;# 
  4215     0310                     	;# 
  4216     0310                     	;# 
  4217     0311                     	;# 
  4218     0312                     	;# 
  4219     0313                     	;# 
  4220     0314                     	;# 
  4221     0314                     	;# 
  4222     0315                     	;# 
  4223     0316                     	;# 
  4224     0317                     	;# 
  4225     0318                     	;# 
  4226     0318                     	;# 
  4227     0319                     	;# 
  4228     031A                     	;# 
  4229     031B                     	;# 
  4230     038C                     	;# 
  4231     038C                     	;# 
  4232     038D                     	;# 
  4233     038E                     	;# 
  4234     0390                     	;# 
  4235     0390                     	;# 
  4236     0391                     	;# 
  4237     0392                     	;# 
  4238     048C                     	;# 
  4239     048C                     	;# 
  4240     048D                     	;# 
  4241     048E                     	;# 
  4242     048F                     	;# 
  4243     048F                     	;# 
  4244     0490                     	;# 
  4245     0491                     	;# 
  4246     0492                     	;# 
  4247     0492                     	;# 
  4248     0493                     	;# 
  4249     0494                     	;# 
  4250     0495                     	;# 
  4251     0495                     	;# 
  4252     0496                     	;# 
  4253     0497                     	;# 
  4254     0498                     	;# 
  4255     0499                     	;# 
  4256     049A                     	;# 
  4257     049B                     	;# 
  4258     049C                     	;# 
  4259     049D                     	;# 
  4260     058C                     	;# 
  4261     058C                     	;# 
  4262     058D                     	;# 
  4263     058E                     	;# 
  4264     058F                     	;# 
  4265     058F                     	;# 
  4266     0590                     	;# 
  4267     0591                     	;# 
  4268     0592                     	;# 
  4269     0593                     	;# 
  4270     059C                     	;# 
  4271     059C                     	;# 
  4272     059D                     	;# 
  4273     059D                     	;# 
  4274     059E                     	;# 
  4275     059F                     	;# 
  4276     060C                     	;# 
  4277     060C                     	;# 
  4278     060D                     	;# 
  4279     060D                     	;# 
  4280     060E                     	;# 
  4281     060F                     	;# 
  4282     0610                     	;# 
  4283     0611                     	;# 
  4284     0612                     	;# 
  4285     0613                     	;# 
  4286     0614                     	;# 
  4287     0616                     	;# 
  4288     0616                     	;# 
  4289     0617                     	;# 
  4290     0617                     	;# 
  4291     0618                     	;# 
  4292     0619                     	;# 
  4293     061A                     	;# 
  4294     061B                     	;# 
  4295     061C                     	;# 
  4296     061D                     	;# 
  4297     061E                     	;# 
  4298     070C                     	;# 
  4299     070D                     	;# 
  4300     070E                     	;# 
  4301     070F                     	;# 
  4302     0710                     	;# 
  4303     0711                     	;# 
  4304     0712                     	;# 
  4305     0713                     	;# 
  4306     0714                     	;# 
  4307     0716                     	;# 
  4308     0717                     	;# 
  4309     0718                     	;# 
  4310     0719                     	;# 
  4311     071A                     	;# 
  4312     071B                     	;# 
  4313     071C                     	;# 
  4314     071D                     	;# 
  4315     071E                     	;# 
  4316     0796                     	;# 
  4317     0797                     	;# 
  4318     0798                     	;# 
  4319     0799                     	;# 
  4320     079A                     	;# 
  4321     079B                     	;# 
  4322     079C                     	;# 
  4323     079D                     	;# 
  4324     080C                     	;# 
  4325     080D                     	;# 
  4326     080E                     	;# 
  4327     080F                     	;# 
  4328     0810                     	;# 
  4329     0811                     	;# 
  4330     0812                     	;# 
  4331     0813                     	;# 
  4332     0814                     	;# 
  4333     081A                     	;# 
  4334     081A                     	;# 
  4335     081B                     	;# 
  4336     081C                     	;# 
  4337     081C                     	;# 
  4338     081D                     	;# 
  4339     081E                     	;# 
  4340     081F                     	;# 
  4341     088C                     	;# 
  4342     088D                     	;# 
  4343     088E                     	;# 
  4344     088F                     	;# 
  4345     0890                     	;# 
  4346     0891                     	;# 
  4347     0892                     	;# 
  4348     0893                     	;# 
  4349     0895                     	;# 
  4350     0896                     	;# 
  4351     0897                     	;# 
  4352     0898                     	;# 
  4353     0899                     	;# 
  4354     089A                     	;# 
  4355     089B                     	;# 
  4356     090C                     	;# 
  4357     090E                     	;# 
  4358     090F                     	;# 
  4359     091F                     	;# 
  4360     098F                     	;# 
  4361     098F                     	;# 
  4362     0990                     	;# 
  4363     0991                     	;# 
  4364     0992                     	;# 
  4365     0993                     	;# 
  4366     0994                     	;# 
  4367     0995                     	;# 
  4368     0996                     	;# 
  4369     0997                     	;# 
  4370     1E0F                     	;# 
  4371     1E10                     	;# 
  4372     1E11                     	;# 
  4373     1E12                     	;# 
  4374     1E13                     	;# 
  4375     1E14                     	;# 
  4376     1E15                     	;# 
  4377     1E16                     	;# 
  4378     1E17                     	;# 
  4379     1E18                     	;# 
  4380     1E19                     	;# 
  4381     1E1A                     	;# 
  4382     1E1B                     	;# 
  4383     1E1C                     	;# 
  4384     1E1D                     	;# 
  4385     1E1E                     	;# 
  4386     1E1F                     	;# 
  4387     1E20                     	;# 
  4388     1E21                     	;# 
  4389     1E22                     	;# 
  4390     1E23                     	;# 
  4391     1E24                     	;# 
  4392     1E25                     	;# 
  4393     1E26                     	;# 
  4394     1E27                     	;# 
  4395     1E28                     	;# 
  4396     1E29                     	;# 
  4397     1E2A                     	;# 
  4398     1E2B                     	;# 
  4399     1E2C                     	;# 
  4400     1E2D                     	;# 
  4401     1E2E                     	;# 
  4402     1E2F                     	;# 
  4403     1E30                     	;# 
  4404     1E31                     	;# 
  4405     1E32                     	;# 
  4406     1E33                     	;# 
  4407     1E34                     	;# 
  4408     1E35                     	;# 
  4409     1E36                     	;# 
  4410     1E37                     	;# 
  4411     1E8F                     	;# 
  4412     1E90                     	;# 
  4413     1E91                     	;# 
  4414     1E92                     	;# 
  4415     1E93                     	;# 
  4416     1E94                     	;# 
  4417     1E95                     	;# 
  4418     1E96                     	;# 
  4419     1E97                     	;# 
  4420     1E9C                     	;# 
  4421     1E9D                     	;# 
  4422     1E9E                     	;# 
  4423     1EA1                     	;# 
  4424     1EA2                     	;# 
  4425     1EA3                     	;# 
  4426     1EA4                     	;# 
  4427     1EA9                     	;# 
  4428     1EAA                     	;# 
  4429     1EB1                     	;# 
  4430     1EB2                     	;# 
  4431     1EB8                     	;# 
  4432     1EB9                     	;# 
  4433     1EBA                     	;# 
  4434     1EBB                     	;# 
  4435     1EBC                     	;# 
  4436     1EBD                     	;# 
  4437     1EBE                     	;# 
  4438     1EC3                     	;# 
  4439     1EC5                     	;# 
  4440     1EC6                     	;# 
  4441     1EC7                     	;# 
  4442     1EC8                     	;# 
  4443     1EC9                     	;# 
  4444     1ECA                     	;# 
  4445     1ECB                     	;# 
  4446     1ECC                     	;# 
  4447     1F10                     	;# 
  4448     1F11                     	;# 
  4449     1F12                     	;# 
  4450     1F14                     	;# 
  4451     1F15                     	;# 
  4452     1F20                     	;# 
  4453     1F21                     	;# 
  4454     1F22                     	;# 
  4455     1F23                     	;# 
  4456     1F24                     	;# 
  4457     1F25                     	;# 
  4458     1F38                     	;# 
  4459     1F39                     	;# 
  4460     1F3A                     	;# 
  4461     1F3B                     	;# 
  4462     1F3C                     	;# 
  4463     1F3D                     	;# 
  4464     1F3E                     	;# 
  4465     1F3F                     	;# 
  4466     1F4E                     	;# 
  4467     1F4F                     	;# 
  4468     1F50                     	;# 
  4469     1F51                     	;# 
  4470     1F52                     	;# 
  4471     1F53                     	;# 
  4472     1F54                     	;# 
  4473     1F55                     	;# 
  4474     1FE4                     	;# 
  4475     1FE5                     	;# 
  4476     1FE6                     	;# 
  4477     1FE7                     	;# 
  4478     1FE8                     	;# 
  4479     1FE8                     	;# 
  4480     1FE9                     	;# 
  4481     1FEA                     	;# 
  4482     1FEB                     	;# 
  4483     1FED                     	;# 
  4484     1FEE                     	;# 
  4485     1FEF                     	;# 
  4486     0000                     	;# 
  4487     0001                     	;# 
  4488     0002                     	;# 
  4489     0003                     	;# 
  4490     0004                     	;# 
  4491     0005                     	;# 
  4492     0006                     	;# 
  4493     0007                     	;# 
  4494     0008                     	;# 
  4495     0009                     	;# 
  4496     000A                     	;# 
  4497     000B                     	;# 
  4498     000C                     	;# 
  4499     000E                     	;# 
  4500     0012                     	;# 
  4501     0014                     	;# 
  4502     0018                     	;# 
  4503     001A                     	;# 
  4504     008C                     	;# 
  4505     008C                     	;# 
  4506     008D                     	;# 
  4507     008E                     	;# 
  4508     008E                     	;# 
  4509     008F                     	;# 
  4510     0090                     	;# 
  4511     0090                     	;# 
  4512     0091                     	;# 
  4513     0092                     	;# 
  4514     0092                     	;# 
  4515     0093                     	;# 
  4516     0094                     	;# 
  4517     0094                     	;# 
  4518     0095                     	;# 
  4519     0096                     	;# 
  4520     0096                     	;# 
  4521     0097                     	;# 
  4522     0098                     	;# 
  4523     0099                     	;# 
  4524     009A                     	;# 
  4525     009B                     	;# 
  4526     009B                     	;# 
  4527     009C                     	;# 
  4528     009D                     	;# 
  4529     009D                     	;# 
  4530     009E                     	;# 
  4531     009F                     	;# 
  4532     010C                     	;# 
  4533     010C                     	;# 
  4534     010D                     	;# 
  4535     010E                     	;# 
  4536     010F                     	;# 
  4537     010F                     	;# 
  4538     0110                     	;# 
  4539     0111                     	;# 
  4540     0112                     	;# 
  4541     0113                     	;# 
  4542     0114                     	;# 
  4543     0115                     	;# 
  4544     0116                     	;# 
  4545     0117                     	;# 
  4546     0118                     	;# 
  4547     0119                     	;# 
  4548     0119                     	;# 
  4549     0119                     	;# 
  4550     011A                     	;# 
  4551     011A                     	;# 
  4552     011A                     	;# 
  4553     011B                     	;# 
  4554     011B                     	;# 
  4555     011B                     	;# 
  4556     011B                     	;# 
  4557     011B                     	;# 
  4558     011C                     	;# 
  4559     011C                     	;# 
  4560     011C                     	;# 
  4561     011D                     	;# 
  4562     011D                     	;# 
  4563     011D                     	;# 
  4564     011E                     	;# 
  4565     011E                     	;# 
  4566     011E                     	;# 
  4567     011F                     	;# 
  4568     011F                     	;# 
  4569     011F                     	;# 
  4570     011F                     	;# 
  4571     011F                     	;# 
  4572     018C                     	;# 
  4573     018D                     	;# 
  4574     018E                     	;# 
  4575     018F                     	;# 
  4576     0190                     	;# 
  4577     0191                     	;# 
  4578     0192                     	;# 
  4579     0196                     	;# 
  4580     0197                     	;# 
  4581     0198                     	;# 
  4582     0199                     	;# 
  4583     019A                     	;# 
  4584     019B                     	;# 
  4585     019C                     	;# 
  4586     020C                     	;# 
  4587     020D                     	;# 
  4588     020E                     	;# 
  4589     020E                     	;# 
  4590     020F                     	;# 
  4591     020F                     	;# 
  4592     0210                     	;# 
  4593     0210                     	;# 
  4594     0211                     	;# 
  4595     0211                     	;# 
  4596     0212                     	;# 
  4597     0213                     	;# 
  4598     0214                     	;# 
  4599     0214                     	;# 
  4600     0215                     	;# 
  4601     0215                     	;# 
  4602     0216                     	;# 
  4603     0216                     	;# 
  4604     0217                     	;# 
  4605     0217                     	;# 
  4606     0218                     	;# 
  4607     0219                     	;# 
  4608     021A                     	;# 
  4609     021A                     	;# 
  4610     021B                     	;# 
  4611     021B                     	;# 
  4612     021C                     	;# 
  4613     021C                     	;# 
  4614     021D                     	;# 
  4615     021D                     	;# 
  4616     021E                     	;# 
  4617     021F                     	;# 
  4618     028C                     	;# 
  4619     028C                     	;# 
  4620     028D                     	;# 
  4621     028D                     	;# 
  4622     028E                     	;# 
  4623     028F                     	;# 
  4624     0290                     	;# 
  4625     0291                     	;# 
  4626     0292                     	;# 
  4627     0292                     	;# 
  4628     0293                     	;# 
  4629     0293                     	;# 
  4630     0294                     	;# 
  4631     0295                     	;# 
  4632     0296                     	;# 
  4633     0297                     	;# 
  4634     0298                     	;# 
  4635     0298                     	;# 
  4636     0299                     	;# 
  4637     0299                     	;# 
  4638     029A                     	;# 
  4639     029B                     	;# 
  4640     029C                     	;# 
  4641     029D                     	;# 
  4642     029F                     	;# 
  4643     030C                     	;# 
  4644     030C                     	;# 
  4645     030D                     	;# 
  4646     030E                     	;# 
  4647     030F                     	;# 
  4648     0310                     	;# 
  4649     0310                     	;# 
  4650     0311                     	;# 
  4651     0312                     	;# 
  4652     0313                     	;# 
  4653     0314                     	;# 
  4654     0314                     	;# 
  4655     0315                     	;# 
  4656     0316                     	;# 
  4657     0317                     	;# 
  4658     0318                     	;# 
  4659     0318                     	;# 
  4660     0319                     	;# 
  4661     031A                     	;# 
  4662     031B                     	;# 
  4663     038C                     	;# 
  4664     038C                     	;# 
  4665     038D                     	;# 
  4666     038E                     	;# 
  4667     0390                     	;# 
  4668     0390                     	;# 
  4669     0391                     	;# 
  4670     0392                     	;# 
  4671     048C                     	;# 
  4672     048C                     	;# 
  4673     048D                     	;# 
  4674     048E                     	;# 
  4675     048F                     	;# 
  4676     048F                     	;# 
  4677     0490                     	;# 
  4678     0491                     	;# 
  4679     0492                     	;# 
  4680     0492                     	;# 
  4681     0493                     	;# 
  4682     0494                     	;# 
  4683     0495                     	;# 
  4684     0495                     	;# 
  4685     0496                     	;# 
  4686     0497                     	;# 
  4687     0498                     	;# 
  4688     0499                     	;# 
  4689     049A                     	;# 
  4690     049B                     	;# 
  4691     049C                     	;# 
  4692     049D                     	;# 
  4693     058C                     	;# 
  4694     058C                     	;# 
  4695     058D                     	;# 
  4696     058E                     	;# 
  4697     058F                     	;# 
  4698     058F                     	;# 
  4699     0590                     	;# 
  4700     0591                     	;# 
  4701     0592                     	;# 
  4702     0593                     	;# 
  4703     059C                     	;# 
  4704     059C                     	;# 
  4705     059D                     	;# 
  4706     059D                     	;# 
  4707     059E                     	;# 
  4708     059F                     	;# 
  4709     060C                     	;# 
  4710     060C                     	;# 
  4711     060D                     	;# 
  4712     060D                     	;# 
  4713     060E                     	;# 
  4714     060F                     	;# 
  4715     0610                     	;# 
  4716     0611                     	;# 
  4717     0612                     	;# 
  4718     0613                     	;# 
  4719     0614                     	;# 
  4720     0616                     	;# 
  4721     0616                     	;# 
  4722     0617                     	;# 
  4723     0617                     	;# 
  4724     0618                     	;# 
  4725     0619                     	;# 
  4726     061A                     	;# 
  4727     061B                     	;# 
  4728     061C                     	;# 
  4729     061D                     	;# 
  4730     061E                     	;# 
  4731     070C                     	;# 
  4732     070D                     	;# 
  4733     070E                     	;# 
  4734     070F                     	;# 
  4735     0710                     	;# 
  4736     0711                     	;# 
  4737     0712                     	;# 
  4738     0713                     	;# 
  4739     0714                     	;# 
  4740     0716                     	;# 
  4741     0717                     	;# 
  4742     0718                     	;# 
  4743     0719                     	;# 
  4744     071A                     	;# 
  4745     071B                     	;# 
  4746     071C                     	;# 
  4747     071D                     	;# 
  4748     071E                     	;# 
  4749     0796                     	;# 
  4750     0797                     	;# 
  4751     0798                     	;# 
  4752     0799                     	;# 
  4753     079A                     	;# 
  4754     079B                     	;# 
  4755     079C                     	;# 
  4756     079D                     	;# 
  4757     080C                     	;# 
  4758     080D                     	;# 
  4759     080E                     	;# 
  4760     080F                     	;# 
  4761     0810                     	;# 
  4762     0811                     	;# 
  4763     0812                     	;# 
  4764     0813                     	;# 
  4765     0814                     	;# 
  4766     081A                     	;# 
  4767     081A                     	;# 
  4768     081B                     	;# 
  4769     081C                     	;# 
  4770     081C                     	;# 
  4771     081D                     	;# 
  4772     081E                     	;# 
  4773     081F                     	;# 
  4774     088C                     	;# 
  4775     088D                     	;# 
  4776     088E                     	;# 
  4777     088F                     	;# 
  4778     0890                     	;# 
  4779     0891                     	;# 
  4780     0892                     	;# 
  4781     0893                     	;# 
  4782     0895                     	;# 
  4783     0896                     	;# 
  4784     0897                     	;# 
  4785     0898                     	;# 
  4786     0899                     	;# 
  4787     089A                     	;# 
  4788     089B                     	;# 
  4789     090C                     	;# 
  4790     090E                     	;# 
  4791     090F                     	;# 
  4792     091F                     	;# 
  4793     098F                     	;# 
  4794     098F                     	;# 
  4795     0990                     	;# 
  4796     0991                     	;# 
  4797     0992                     	;# 
  4798     0993                     	;# 
  4799     0994                     	;# 
  4800     0995                     	;# 
  4801     0996                     	;# 
  4802     0997                     	;# 
  4803     1E0F                     	;# 
  4804     1E10                     	;# 
  4805     1E11                     	;# 
  4806     1E12                     	;# 
  4807     1E13                     	;# 
  4808     1E14                     	;# 
  4809     1E15                     	;# 
  4810     1E16                     	;# 
  4811     1E17                     	;# 
  4812     1E18                     	;# 
  4813     1E19                     	;# 
  4814     1E1A                     	;# 
  4815     1E1B                     	;# 
  4816     1E1C                     	;# 
  4817     1E1D                     	;# 
  4818     1E1E                     	;# 
  4819     1E1F                     	;# 
  4820     1E20                     	;# 
  4821     1E21                     	;# 
  4822     1E22                     	;# 
  4823     1E23                     	;# 
  4824     1E24                     	;# 
  4825     1E25                     	;# 
  4826     1E26                     	;# 
  4827     1E27                     	;# 
  4828     1E28                     	;# 
  4829     1E29                     	;# 
  4830     1E2A                     	;# 
  4831     1E2B                     	;# 
  4832     1E2C                     	;# 
  4833     1E2D                     	;# 
  4834     1E2E                     	;# 
  4835     1E2F                     	;# 
  4836     1E30                     	;# 
  4837     1E31                     	;# 
  4838     1E32                     	;# 
  4839     1E33                     	;# 
  4840     1E34                     	;# 
  4841     1E35                     	;# 
  4842     1E36                     	;# 
  4843     1E37                     	;# 
  4844     1E8F                     	;# 
  4845     1E90                     	;# 
  4846     1E91                     	;# 
  4847     1E92                     	;# 
  4848     1E93                     	;# 
  4849     1E94                     	;# 
  4850     1E95                     	;# 
  4851     1E96                     	;# 
  4852     1E97                     	;# 
  4853     1E9C                     	;# 
  4854     1E9D                     	;# 
  4855     1E9E                     	;# 
  4856     1EA1                     	;# 
  4857     1EA2                     	;# 
  4858     1EA3                     	;# 
  4859     1EA4                     	;# 
  4860     1EA9                     	;# 
  4861     1EAA                     	;# 
  4862     1EB1                     	;# 
  4863     1EB2                     	;# 
  4864     1EB8                     	;# 
  4865     1EB9                     	;# 
  4866     1EBA                     	;# 
  4867     1EBB                     	;# 
  4868     1EBC                     	;# 
  4869     1EBD                     	;# 
  4870     1EBE                     	;# 
  4871     1EC3                     	;# 
  4872     1EC5                     	;# 
  4873     1EC6                     	;# 
  4874     1EC7                     	;# 
  4875     1EC8                     	;# 
  4876     1EC9                     	;# 
  4877     1ECA                     	;# 
  4878     1ECB                     	;# 
  4879     1ECC                     	;# 
  4880     1F10                     	;# 
  4881     1F11                     	;# 
  4882     1F12                     	;# 
  4883     1F14                     	;# 
  4884     1F15                     	;# 
  4885     1F20                     	;# 
  4886     1F21                     	;# 
  4887     1F22                     	;# 
  4888     1F23                     	;# 
  4889     1F24                     	;# 
  4890     1F25                     	;# 
  4891     1F38                     	;# 
  4892     1F39                     	;# 
  4893     1F3A                     	;# 
  4894     1F3B                     	;# 
  4895     1F3C                     	;# 
  4896     1F3D                     	;# 
  4897     1F3E                     	;# 
  4898     1F3F                     	;# 
  4899     1F4E                     	;# 
  4900     1F4F                     	;# 
  4901     1F50                     	;# 
  4902     1F51                     	;# 
  4903     1F52                     	;# 
  4904     1F53                     	;# 
  4905     1F54                     	;# 
  4906     1F55                     	;# 
  4907     1FE4                     	;# 
  4908     1FE5                     	;# 
  4909     1FE6                     	;# 
  4910     1FE7                     	;# 
  4911     1FE8                     	;# 
  4912     1FE8                     	;# 
  4913     1FE9                     	;# 
  4914     1FEA                     	;# 
  4915     1FEB                     	;# 
  4916     1FED                     	;# 
  4917     1FEE                     	;# 
  4918     1FEF                     	;# 
  4919     0000                     	;# 
  4920     0001                     	;# 
  4921     0002                     	;# 
  4922     0003                     	;# 
  4923     0004                     	;# 
  4924     0005                     	;# 
  4925     0006                     	;# 
  4926     0007                     	;# 
  4927     0008                     	;# 
  4928     0009                     	;# 
  4929     000A                     	;# 
  4930     000B                     	;# 
  4931     000C                     	;# 
  4932     000E                     	;# 
  4933     0012                     	;# 
  4934     0014                     	;# 
  4935     0018                     	;# 
  4936     001A                     	;# 
  4937     008C                     	;# 
  4938     008C                     	;# 
  4939     008D                     	;# 
  4940     008E                     	;# 
  4941     008E                     	;# 
  4942     008F                     	;# 
  4943     0090                     	;# 
  4944     0090                     	;# 
  4945     0091                     	;# 
  4946     0092                     	;# 
  4947     0092                     	;# 
  4948     0093                     	;# 
  4949     0094                     	;# 
  4950     0094                     	;# 
  4951     0095                     	;# 
  4952     0096                     	;# 
  4953     0096                     	;# 
  4954     0097                     	;# 
  4955     0098                     	;# 
  4956     0099                     	;# 
  4957     009A                     	;# 
  4958     009B                     	;# 
  4959     009B                     	;# 
  4960     009C                     	;# 
  4961     009D                     	;# 
  4962     009D                     	;# 
  4963     009E                     	;# 
  4964     009F                     	;# 
  4965     010C                     	;# 
  4966     010C                     	;# 
  4967     010D                     	;# 
  4968     010E                     	;# 
  4969     010F                     	;# 
  4970     010F                     	;# 
  4971     0110                     	;# 
  4972     0111                     	;# 
  4973     0112                     	;# 
  4974     0113                     	;# 
  4975     0114                     	;# 
  4976     0115                     	;# 
  4977     0116                     	;# 
  4978     0117                     	;# 
  4979     0118                     	;# 
  4980     0119                     	;# 
  4981     0119                     	;# 
  4982     0119                     	;# 
  4983     011A                     	;# 
  4984     011A                     	;# 
  4985     011A                     	;# 
  4986     011B                     	;# 
  4987     011B                     	;# 
  4988     011B                     	;# 
  4989     011B                     	;# 
  4990     011B                     	;# 
  4991     011C                     	;# 
  4992     011C                     	;# 
  4993     011C                     	;# 
  4994     011D                     	;# 
  4995     011D                     	;# 
  4996     011D                     	;# 
  4997     011E                     	;# 
  4998     011E                     	;# 
  4999     011E                     	;# 
  5000     011F                     	;# 
  5001     011F                     	;# 
  5002     011F                     	;# 
  5003     011F                     	;# 
  5004     011F                     	;# 
  5005     018C                     	;# 
  5006     018D                     	;# 
  5007     018E                     	;# 
  5008     018F                     	;# 
  5009     0190                     	;# 
  5010     0191                     	;# 
  5011     0192                     	;# 
  5012     0196                     	;# 
  5013     0197                     	;# 
  5014     0198                     	;# 
  5015     0199                     	;# 
  5016     019A                     	;# 
  5017     019B                     	;# 
  5018     019C                     	;# 
  5019     020C                     	;# 
  5020     020D                     	;# 
  5021     020E                     	;# 
  5022     020E                     	;# 
  5023     020F                     	;# 
  5024     020F                     	;# 
  5025     0210                     	;# 
  5026     0210                     	;# 
  5027     0211                     	;# 
  5028     0211                     	;# 
  5029     0212                     	;# 
  5030     0213                     	;# 
  5031     0214                     	;# 
  5032     0214                     	;# 
  5033     0215                     	;# 
  5034     0215                     	;# 
  5035     0216                     	;# 
  5036     0216                     	;# 
  5037     0217                     	;# 
  5038     0217                     	;# 
  5039     0218                     	;# 
  5040     0219                     	;# 
  5041     021A                     	;# 
  5042     021A                     	;# 
  5043     021B                     	;# 
  5044     021B                     	;# 
  5045     021C                     	;# 
  5046     021C                     	;# 
  5047     021D                     	;# 
  5048     021D                     	;# 
  5049     021E                     	;# 
  5050     021F                     	;# 
  5051     028C                     	;# 
  5052     028C                     	;# 
  5053     028D                     	;# 
  5054     028D                     	;# 
  5055     028E                     	;# 
  5056     028F                     	;# 
  5057     0290                     	;# 
  5058     0291                     	;# 
  5059     0292                     	;# 
  5060     0292                     	;# 
  5061     0293                     	;# 
  5062     0293                     	;# 
  5063     0294                     	;# 
  5064     0295                     	;# 
  5065     0296                     	;# 
  5066     0297                     	;# 
  5067     0298                     	;# 
  5068     0298                     	;# 
  5069     0299                     	;# 
  5070     0299                     	;# 
  5071     029A                     	;# 
  5072     029B                     	;# 
  5073     029C                     	;# 
  5074     029D                     	;# 
  5075     029F                     	;# 
  5076     030C                     	;# 
  5077     030C                     	;# 
  5078     030D                     	;# 
  5079     030E                     	;# 
  5080     030F                     	;# 
  5081     0310                     	;# 
  5082     0310                     	;# 
  5083     0311                     	;# 
  5084     0312                     	;# 
  5085     0313                     	;# 
  5086     0314                     	;# 
  5087     0314                     	;# 
  5088     0315                     	;# 
  5089     0316                     	;# 
  5090     0317                     	;# 
  5091     0318                     	;# 
  5092     0318                     	;# 
  5093     0319                     	;# 
  5094     031A                     	;# 
  5095     031B                     	;# 
  5096     038C                     	;# 
  5097     038C                     	;# 
  5098     038D                     	;# 
  5099     038E                     	;# 
  5100     0390                     	;# 
  5101     0390                     	;# 
  5102     0391                     	;# 
  5103     0392                     	;# 
  5104     048C                     	;# 
  5105     048C                     	;# 
  5106     048D                     	;# 
  5107     048E                     	;# 
  5108     048F                     	;# 
  5109     048F                     	;# 
  5110     0490                     	;# 
  5111     0491                     	;# 
  5112     0492                     	;# 
  5113     0492                     	;# 
  5114     0493                     	;# 
  5115     0494                     	;# 
  5116     0495                     	;# 
  5117     0495                     	;# 
  5118     0496                     	;# 
  5119     0497                     	;# 
  5120     0498                     	;# 
  5121     0499                     	;# 
  5122     049A                     	;# 
  5123     049B                     	;# 
  5124     049C                     	;# 
  5125     049D                     	;# 
  5126     058C                     	;# 
  5127     058C                     	;# 
  5128     058D                     	;# 
  5129     058E                     	;# 
  5130     058F                     	;# 
  5131     058F                     	;# 
  5132     0590                     	;# 
  5133     0591                     	;# 
  5134     0592                     	;# 
  5135     0593                     	;# 
  5136     059C                     	;# 
  5137     059C                     	;# 
  5138     059D                     	;# 
  5139     059D                     	;# 
  5140     059E                     	;# 
  5141     059F                     	;# 
  5142     060C                     	;# 
  5143     060C                     	;# 
  5144     060D                     	;# 
  5145     060D                     	;# 
  5146     060E                     	;# 
  5147     060F                     	;# 
  5148     0610                     	;# 
  5149     0611                     	;# 
  5150     0612                     	;# 
  5151     0613                     	;# 
  5152     0614                     	;# 
  5153     0616                     	;# 
  5154     0616                     	;# 
  5155     0617                     	;# 
  5156     0617                     	;# 
  5157     0618                     	;# 
  5158     0619                     	;# 
  5159     061A                     	;# 
  5160     061B                     	;# 
  5161     061C                     	;# 
  5162     061D                     	;# 
  5163     061E                     	;# 
  5164     070C                     	;# 
  5165     070D                     	;# 
  5166     070E                     	;# 
  5167     070F                     	;# 
  5168     0710                     	;# 
  5169     0711                     	;# 
  5170     0712                     	;# 
  5171     0713                     	;# 
  5172     0714                     	;# 
  5173     0716                     	;# 
  5174     0717                     	;# 
  5175     0718                     	;# 
  5176     0719                     	;# 
  5177     071A                     	;# 
  5178     071B                     	;# 
  5179     071C                     	;# 
  5180     071D                     	;# 
  5181     071E                     	;# 
  5182     0796                     	;# 
  5183     0797                     	;# 
  5184     0798                     	;# 
  5185     0799                     	;# 
  5186     079A                     	;# 
  5187     079B                     	;# 
  5188     079C                     	;# 
  5189     079D                     	;# 
  5190     080C                     	;# 
  5191     080D                     	;# 
  5192     080E                     	;# 
  5193     080F                     	;# 
  5194     0810                     	;# 
  5195     0811                     	;# 
  5196     0812                     	;# 
  5197     0813                     	;# 
  5198     0814                     	;# 
  5199     081A                     	;# 
  5200     081A                     	;# 
  5201     081B                     	;# 
  5202     081C                     	;# 
  5203     081C                     	;# 
  5204     081D                     	;# 
  5205     081E                     	;# 
  5206     081F                     	;# 
  5207     088C                     	;# 
  5208     088D                     	;# 
  5209     088E                     	;# 
  5210     088F                     	;# 
  5211     0890                     	;# 
  5212     0891                     	;# 
  5213     0892                     	;# 
  5214     0893                     	;# 
  5215     0895                     	;# 
  5216     0896                     	;# 
  5217     0897                     	;# 
  5218     0898                     	;# 
  5219     0899                     	;# 
  5220     089A                     	;# 
  5221     089B                     	;# 
  5222     090C                     	;# 
  5223     090E                     	;# 
  5224     090F                     	;# 
  5225     091F                     	;# 
  5226     098F                     	;# 
  5227     098F                     	;# 
  5228     0990                     	;# 
  5229     0991                     	;# 
  5230     0992                     	;# 
  5231     0993                     	;# 
  5232     0994                     	;# 
  5233     0995                     	;# 
  5234     0996                     	;# 
  5235     0997                     	;# 
  5236     1E0F                     	;# 
  5237     1E10                     	;# 
  5238     1E11                     	;# 
  5239     1E12                     	;# 
  5240     1E13                     	;# 
  5241     1E14                     	;# 
  5242     1E15                     	;# 
  5243     1E16                     	;# 
  5244     1E17                     	;# 
  5245     1E18                     	;# 
  5246     1E19                     	;# 
  5247     1E1A                     	;# 
  5248     1E1B                     	;# 
  5249     1E1C                     	;# 
  5250     1E1D                     	;# 
  5251     1E1E                     	;# 
  5252     1E1F                     	;# 
  5253     1E20                     	;# 
  5254     1E21                     	;# 
  5255     1E22                     	;# 
  5256     1E23                     	;# 
  5257     1E24                     	;# 
  5258     1E25                     	;# 
  5259     1E26                     	;# 
  5260     1E27                     	;# 
  5261     1E28                     	;# 
  5262     1E29                     	;# 
  5263     1E2A                     	;# 
  5264     1E2B                     	;# 
  5265     1E2C                     	;# 
  5266     1E2D                     	;# 
  5267     1E2E                     	;# 
  5268     1E2F                     	;# 
  5269     1E30                     	;# 
  5270     1E31                     	;# 
  5271     1E32                     	;# 
  5272     1E33                     	;# 
  5273     1E34                     	;# 
  5274     1E35                     	;# 
  5275     1E36                     	;# 
  5276     1E37                     	;# 
  5277     1E8F                     	;# 
  5278     1E90                     	;# 
  5279     1E91                     	;# 
  5280     1E92                     	;# 
  5281     1E93                     	;# 
  5282     1E94                     	;# 
  5283     1E95                     	;# 
  5284     1E96                     	;# 
  5285     1E97                     	;# 
  5286     1E9C                     	;# 
  5287     1E9D                     	;# 
  5288     1E9E                     	;# 
  5289     1EA1                     	;# 
  5290     1EA2                     	;# 
  5291     1EA3                     	;# 
  5292     1EA4                     	;# 
  5293     1EA9                     	;# 
  5294     1EAA                     	;# 
  5295     1EB1                     	;# 
  5296     1EB2                     	;# 
  5297     1EB8                     	;# 
  5298     1EB9                     	;# 
  5299     1EBA                     	;# 
  5300     1EBB                     	;# 
  5301     1EBC                     	;# 
  5302     1EBD                     	;# 
  5303     1EBE                     	;# 
  5304     1EC3                     	;# 
  5305     1EC5                     	;# 
  5306     1EC6                     	;# 
  5307     1EC7                     	;# 
  5308     1EC8                     	;# 
  5309     1EC9                     	;# 
  5310     1ECA                     	;# 
  5311     1ECB                     	;# 
  5312     1ECC                     	;# 
  5313     1F10                     	;# 
  5314     1F11                     	;# 
  5315     1F12                     	;# 
  5316     1F14                     	;# 
  5317     1F15                     	;# 
  5318     1F20                     	;# 
  5319     1F21                     	;# 
  5320     1F22                     	;# 
  5321     1F23                     	;# 
  5322     1F24                     	;# 
  5323     1F25                     	;# 
  5324     1F38                     	;# 
  5325     1F39                     	;# 
  5326     1F3A                     	;# 
  5327     1F3B                     	;# 
  5328     1F3C                     	;# 
  5329     1F3D                     	;# 
  5330     1F3E                     	;# 
  5331     1F3F                     	;# 
  5332     1F4E                     	;# 
  5333     1F4F                     	;# 
  5334     1F50                     	;# 
  5335     1F51                     	;# 
  5336     1F52                     	;# 
  5337     1F53                     	;# 
  5338     1F54                     	;# 
  5339     1F55                     	;# 
  5340     1FE4                     	;# 
  5341     1FE5                     	;# 
  5342     1FE6                     	;# 
  5343     1FE7                     	;# 
  5344     1FE8                     	;# 
  5345     1FE8                     	;# 
  5346     1FE9                     	;# 
  5347     1FEA                     	;# 
  5348     1FEB                     	;# 
  5349     1FED                     	;# 
  5350     1FEE                     	;# 
  5351     1FEF                     	;# 
  5352     0000                     	;# 
  5353     0001                     	;# 
  5354     0002                     	;# 
  5355     0003                     	;# 
  5356     0004                     	;# 
  5357     0005                     	;# 
  5358     0006                     	;# 
  5359     0007                     	;# 
  5360     0008                     	;# 
  5361     0009                     	;# 
  5362     000A                     	;# 
  5363     000B                     	;# 
  5364     000C                     	;# 
  5365     000E                     	;# 
  5366     0012                     	;# 
  5367     0014                     	;# 
  5368     0018                     	;# 
  5369     001A                     	;# 
  5370     008C                     	;# 
  5371     008C                     	;# 
  5372     008D                     	;# 
  5373     008E                     	;# 
  5374     008E                     	;# 
  5375     008F                     	;# 
  5376     0090                     	;# 
  5377     0090                     	;# 
  5378     0091                     	;# 
  5379     0092                     	;# 
  5380     0092                     	;# 
  5381     0093                     	;# 
  5382     0094                     	;# 
  5383     0094                     	;# 
  5384     0095                     	;# 
  5385     0096                     	;# 
  5386     0096                     	;# 
  5387     0097                     	;# 
  5388     0098                     	;# 
  5389     0099                     	;# 
  5390     009A                     	;# 
  5391     009B                     	;# 
  5392     009B                     	;# 
  5393     009C                     	;# 
  5394     009D                     	;# 
  5395     009D                     	;# 
  5396     009E                     	;# 
  5397     009F                     	;# 
  5398     010C                     	;# 
  5399     010C                     	;# 
  5400     010D                     	;# 
  5401     010E                     	;# 
  5402     010F                     	;# 
  5403     010F                     	;# 
  5404     0110                     	;# 
  5405     0111                     	;# 
  5406     0112                     	;# 
  5407     0113                     	;# 
  5408     0114                     	;# 
  5409     0115                     	;# 
  5410     0116                     	;# 
  5411     0117                     	;# 
  5412     0118                     	;# 
  5413     0119                     	;# 
  5414     0119                     	;# 
  5415     0119                     	;# 
  5416     011A                     	;# 
  5417     011A                     	;# 
  5418     011A                     	;# 
  5419     011B                     	;# 
  5420     011B                     	;# 
  5421     011B                     	;# 
  5422     011B                     	;# 
  5423     011B                     	;# 
  5424     011C                     	;# 
  5425     011C                     	;# 
  5426     011C                     	;# 
  5427     011D                     	;# 
  5428     011D                     	;# 
  5429     011D                     	;# 
  5430     011E                     	;# 
  5431     011E                     	;# 
  5432     011E                     	;# 
  5433     011F                     	;# 
  5434     011F                     	;# 
  5435     011F                     	;# 
  5436     011F                     	;# 
  5437     011F                     	;# 
  5438     018C                     	;# 
  5439     018D                     	;# 
  5440     018E                     	;# 
  5441     018F                     	;# 
  5442     0190                     	;# 
  5443     0191                     	;# 
  5444     0192                     	;# 
  5445     0196                     	;# 
  5446     0197                     	;# 
  5447     0198                     	;# 
  5448     0199                     	;# 
  5449     019A                     	;# 
  5450     019B                     	;# 
  5451     019C                     	;# 
  5452     020C                     	;# 
  5453     020D                     	;# 
  5454     020E                     	;# 
  5455     020E                     	;# 
  5456     020F                     	;# 
  5457     020F                     	;# 
  5458     0210                     	;# 
  5459     0210                     	;# 
  5460     0211                     	;# 
  5461     0211                     	;# 
  5462     0212                     	;# 
  5463     0213                     	;# 
  5464     0214                     	;# 
  5465     0214                     	;# 
  5466     0215                     	;# 
  5467     0215                     	;# 
  5468     0216                     	;# 
  5469     0216                     	;# 
  5470     0217                     	;# 
  5471     0217                     	;# 
  5472     0218                     	;# 
  5473     0219                     	;# 
  5474     021A                     	;# 
  5475     021A                     	;# 
  5476     021B                     	;# 
  5477     021B                     	;# 
  5478     021C                     	;# 
  5479     021C                     	;# 
  5480     021D                     	;# 
  5481     021D                     	;# 
  5482     021E                     	;# 
  5483     021F                     	;# 
  5484     028C                     	;# 
  5485     028C                     	;# 
  5486     028D                     	;# 
  5487     028D                     	;# 
  5488     028E                     	;# 
  5489     028F                     	;# 
  5490     0290                     	;# 
  5491     0291                     	;# 
  5492     0292                     	;# 
  5493     0292                     	;# 
  5494     0293                     	;# 
  5495     0293                     	;# 
  5496     0294                     	;# 
  5497     0295                     	;# 
  5498     0296                     	;# 
  5499     0297                     	;# 
  5500     0298                     	;# 
  5501     0298                     	;# 
  5502     0299                     	;# 
  5503     0299                     	;# 
  5504     029A                     	;# 
  5505     029B                     	;# 
  5506     029C                     	;# 
  5507     029D                     	;# 
  5508     029F                     	;# 
  5509     030C                     	;# 
  5510     030C                     	;# 
  5511     030D                     	;# 
  5512     030E                     	;# 
  5513     030F                     	;# 
  5514     0310                     	;# 
  5515     0310                     	;# 
  5516     0311                     	;# 
  5517     0312                     	;# 
  5518     0313                     	;# 
  5519     0314                     	;# 
  5520     0314                     	;# 
  5521     0315                     	;# 
  5522     0316                     	;# 
  5523     0317                     	;# 
  5524     0318                     	;# 
  5525     0318                     	;# 
  5526     0319                     	;# 
  5527     031A                     	;# 
  5528     031B                     	;# 
  5529     038C                     	;# 
  5530     038C                     	;# 
  5531     038D                     	;# 
  5532     038E                     	;# 
  5533     0390                     	;# 
  5534     0390                     	;# 
  5535     0391                     	;# 
  5536     0392                     	;# 
  5537     048C                     	;# 
  5538     048C                     	;# 
  5539     048D                     	;# 
  5540     048E                     	;# 
  5541     048F                     	;# 
  5542     048F                     	;# 
  5543     0490                     	;# 
  5544     0491                     	;# 
  5545     0492                     	;# 
  5546     0492                     	;# 
  5547     0493                     	;# 
  5548     0494                     	;# 
  5549     0495                     	;# 
  5550     0495                     	;# 
  5551     0496                     	;# 
  5552     0497                     	;# 
  5553     0498                     	;# 
  5554     0499                     	;# 
  5555     049A                     	;# 
  5556     049B                     	;# 
  5557     049C                     	;# 
  5558     049D                     	;# 
  5559     058C                     	;# 
  5560     058C                     	;# 
  5561     058D                     	;# 
  5562     058E                     	;# 
  5563     058F                     	;# 
  5564     058F                     	;# 
  5565     0590                     	;# 
  5566     0591                     	;# 
  5567     0592                     	;# 
  5568     0593                     	;# 
  5569     059C                     	;# 
  5570     059C                     	;# 
  5571     059D                     	;# 
  5572     059D                     	;# 
  5573     059E                     	;# 
  5574     059F                     	;# 
  5575     060C                     	;# 
  5576     060C                     	;# 
  5577     060D                     	;# 
  5578     060D                     	;# 
  5579     060E                     	;# 
  5580     060F                     	;# 
  5581     0610                     	;# 
  5582     0611                     	;# 
  5583     0612                     	;# 
  5584     0613                     	;# 
  5585     0614                     	;# 
  5586     0616                     	;# 
  5587     0616                     	;# 
  5588     0617                     	;# 
  5589     0617                     	;# 
  5590     0618                     	;# 
  5591     0619                     	;# 
  5592     061A                     	;# 
  5593     061B                     	;# 
  5594     061C                     	;# 
  5595     061D                     	;# 
  5596     061E                     	;# 
  5597     070C                     	;# 
  5598     070D                     	;# 
  5599     070E                     	;# 
  5600     070F                     	;# 
  5601     0710                     	;# 
  5602     0711                     	;# 
  5603     0712                     	;# 
  5604     0713                     	;# 
  5605     0714                     	;# 
  5606     0716                     	;# 
  5607     0717                     	;# 
  5608     0718                     	;# 
  5609     0719                     	;# 
  5610     071A                     	;# 
  5611     071B                     	;# 
  5612     071C                     	;# 
  5613     071D                     	;# 
  5614     071E                     	;# 
  5615     0796                     	;# 
  5616     0797                     	;# 
  5617     0798                     	;# 
  5618     0799                     	;# 
  5619     079A                     	;# 
  5620     079B                     	;# 
  5621     079C                     	;# 
  5622     079D                     	;# 
  5623     080C                     	;# 
  5624     080D                     	;# 
  5625     080E                     	;# 
  5626     080F                     	;# 
  5627     0810                     	;# 
  5628     0811                     	;# 
  5629     0812                     	;# 
  5630     0813                     	;# 
  5631     0814                     	;# 
  5632     081A                     	;# 
  5633     081A                     	;# 
  5634     081B                     	;# 
  5635     081C                     	;# 
  5636     081C                     	;# 
  5637     081D                     	;# 
  5638     081E                     	;# 
  5639     081F                     	;# 
  5640     088C                     	;# 
  5641     088D                     	;# 
  5642     088E                     	;# 
  5643     088F                     	;# 
  5644     0890                     	;# 
  5645     0891                     	;# 
  5646     0892                     	;# 
  5647     0893                     	;# 
  5648     0895                     	;# 
  5649     0896                     	;# 
  5650     0897                     	;# 
  5651     0898                     	;# 
  5652     0899                     	;# 
  5653     089A                     	;# 
  5654     089B                     	;# 
  5655     090C                     	;# 
  5656     090E                     	;# 
  5657     090F                     	;# 
  5658     091F                     	;# 
  5659     098F                     	;# 
  5660     098F                     	;# 
  5661     0990                     	;# 
  5662     0991                     	;# 
  5663     0992                     	;# 
  5664     0993                     	;# 
  5665     0994                     	;# 
  5666     0995                     	;# 
  5667     0996                     	;# 
  5668     0997                     	;# 
  5669     1E0F                     	;# 
  5670     1E10                     	;# 
  5671     1E11                     	;# 
  5672     1E12                     	;# 
  5673     1E13                     	;# 
  5674     1E14                     	;# 
  5675     1E15                     	;# 
  5676     1E16                     	;# 
  5677     1E17                     	;# 
  5678     1E18                     	;# 
  5679     1E19                     	;# 
  5680     1E1A                     	;# 
  5681     1E1B                     	;# 
  5682     1E1C                     	;# 
  5683     1E1D                     	;# 
  5684     1E1E                     	;# 
  5685     1E1F                     	;# 
  5686     1E20                     	;# 
  5687     1E21                     	;# 
  5688     1E22                     	;# 
  5689     1E23                     	;# 
  5690     1E24                     	;# 
  5691     1E25                     	;# 
  5692     1E26                     	;# 
  5693     1E27                     	;# 
  5694     1E28                     	;# 
  5695     1E29                     	;# 
  5696     1E2A                     	;# 
  5697     1E2B                     	;# 
  5698     1E2C                     	;# 
  5699     1E2D                     	;# 
  5700     1E2E                     	;# 
  5701     1E2F                     	;# 
  5702     1E30                     	;# 
  5703     1E31                     	;# 
  5704     1E32                     	;# 
  5705     1E33                     	;# 
  5706     1E34                     	;# 
  5707     1E35                     	;# 
  5708     1E36                     	;# 
  5709     1E37                     	;# 
  5710     1E8F                     	;# 
  5711     1E90                     	;# 
  5712     1E91                     	;# 
  5713     1E92                     	;# 
  5714     1E93                     	;# 
  5715     1E94                     	;# 
  5716     1E95                     	;# 
  5717     1E96                     	;# 
  5718     1E97                     	;# 
  5719     1E9C                     	;# 
  5720     1E9D                     	;# 
  5721     1E9E                     	;# 
  5722     1EA1                     	;# 
  5723     1EA2                     	;# 
  5724     1EA3                     	;# 
  5725     1EA4                     	;# 
  5726     1EA9                     	;# 
  5727     1EAA                     	;# 
  5728     1EB1                     	;# 
  5729     1EB2                     	;# 
  5730     1EB8                     	;# 
  5731     1EB9                     	;# 
  5732     1EBA                     	;# 
  5733     1EBB                     	;# 
  5734     1EBC                     	;# 
  5735     1EBD                     	;# 
  5736     1EBE                     	;# 
  5737     1EC3                     	;# 
  5738     1EC5                     	;# 
  5739     1EC6                     	;# 
  5740     1EC7                     	;# 
  5741     1EC8                     	;# 
  5742     1EC9                     	;# 
  5743     1ECA                     	;# 
  5744     1ECB                     	;# 
  5745     1ECC                     	;# 
  5746     1F10                     	;# 
  5747     1F11                     	;# 
  5748     1F12                     	;# 
  5749     1F14                     	;# 
  5750     1F15                     	;# 
  5751     1F20                     	;# 
  5752     1F21                     	;# 
  5753     1F22                     	;# 
  5754     1F23                     	;# 
  5755     1F24                     	;# 
  5756     1F25                     	;# 
  5757     1F38                     	;# 
  5758     1F39                     	;# 
  5759     1F3A                     	;# 
  5760     1F3B                     	;# 
  5761     1F3C                     	;# 
  5762     1F3D                     	;# 
  5763     1F3E                     	;# 
  5764     1F3F                     	;# 
  5765     1F4E                     	;# 
  5766     1F4F                     	;# 
  5767     1F50                     	;# 
  5768     1F51                     	;# 
  5769     1F52                     	;# 
  5770     1F53                     	;# 
  5771     1F54                     	;# 
  5772     1F55                     	;# 
  5773     1FE4                     	;# 
  5774     1FE5                     	;# 
  5775     1FE6                     	;# 
  5776     1FE7                     	;# 
  5777     1FE8                     	;# 
  5778     1FE8                     	;# 
  5779     1FE9                     	;# 
  5780     1FEA                     	;# 
  5781     1FEB                     	;# 
  5782     1FED                     	;# 
  5783     1FEE                     	;# 
  5784     1FEF                     	;# 
  5785                           
  5786                           	psect	idataBANK2
  5787     1D2A                     __pidataBANK2:
  5788                           
  5789                           ;initializer for _test_recived_data
  5790     1D2A  3401               	retlw	1
  5791     1D2B  3403               	retlw	3
  5792     1D2C  3402               	retlw	2
  5793     1D2D  342E               	retlw	46
  5794     1D2E  34E0               	retlw	224
  5795     1D2F  34A4               	retlw	164
  5796     1D30  346C               	retlw	108
  5797     1D31  3400               	retlw	0
  5798                           
  5799                           ;initializer for measured_adc@F10601
  5800     1D32  3401               	retlw	1
  5801     1D33  3403               	retlw	3
  5802     1D34  3400               	retlw	0
  5803     1D35  3466               	retlw	102
  5804     1D36  3400               	retlw	0
  5805     1D37  3401               	retlw	1
  5806     1D38  3464               	retlw	100
  5807     1D39  3415               	retlw	21
  5808                           
  5809                           	psect	idataBANK3
  5810     1D1A                     __pidataBANK3:
  5811                           
  5812                           ;initializer for save_bottom_adc_point@F10616
  5813     1D1A  3401               	retlw	1
  5814     1D1B  3406               	retlw	6
  5815     1D1C  3400               	retlw	0
  5816     1D1D  343F               	retlw	63
  5817     1D1E  3400               	retlw	0
  5818     1D1F  34FF               	retlw	255
  5819     1D20  34F9               	retlw	249
  5820     1D21  3486               	retlw	134
  5821                           
  5822                           ;initializer for save_top_adc_point@F10610
  5823     1D22  3401               	retlw	1
  5824     1D23  3406               	retlw	6
  5825     1D24  3400               	retlw	0
  5826     1D25  343E               	retlw	62
  5827     1D26  3400               	retlw	0
  5828     1D27  34FF               	retlw	255
  5829     1D28  34A8               	retlw	168
  5830     1D29  3446               	retlw	70
  5831                           
  5832                           	psect	idataBANK4
  5833     1255                     __pidataBANK4:
  5834                           
  5835                           ;initializer for set_top_calibrate_point@F10594
  5836     1255  3401               	retlw	1
  5837     1256  3406               	retlw	6
  5838     1257  3400               	retlw	0
  5839     1258  3436               	retlw	54
  5840     1259  3401               	retlw	1
  5841     125A  34A8               	retlw	168
  5842     125B  3404               	retlw	4
  5843     125C  3400               	retlw	0
  5844     125D  3400               	retlw	0
  5845     125E  3400               	retlw	0
  5846     125F  3400               	retlw	0
  5847     1260  3400               	retlw	0
  5848     1261  3400               	retlw	0
  5849     1262  3400               	retlw	0
  5850     1263  3400               	retlw	0
  5851     1264  3400               	retlw	0
  5852     1265  3400               	retlw	0
  5853     1266  3400               	retlw	0
  5854     1267  3400               	retlw	0
  5855     1268  3400               	retlw	0
  5856     1269  3400               	retlw	0
  5857     126A  3400               	retlw	0
  5858     126B  3400               	retlw	0
  5859     126C  3400               	retlw	0
  5860     126D  3400               	retlw	0
  5861     126E  3400               	retlw	0
  5862     126F  3400               	retlw	0
  5863     1270  3400               	retlw	0
  5864     1271  3400               	retlw	0
  5865     1272  3400               	retlw	0
  5866     1273  3400               	retlw	0
  5867     1274  3400               	retlw	0
  5868                           
  5869                           ;initializer for send_measured_command@F10568
  5870     1275  3401               	retlw	1
  5871     1276  3403               	retlw	3
  5872     1277  3400               	retlw	0
  5873     1278  3401               	retlw	1
  5874     1279  3400               	retlw	0
  5875     127A  3404               	retlw	4
  5876     127B  3415               	retlw	21
  5877     127C  34C9               	retlw	201
  5878     127D  3400               	retlw	0
  5879     127E  3400               	retlw	0
  5880     127F  3400               	retlw	0
  5881     1280  3400               	retlw	0
  5882     1281  3400               	retlw	0
  5883     1282  3400               	retlw	0
  5884     1283  3400               	retlw	0
  5885     1284  3400               	retlw	0
  5886     1285  3400               	retlw	0
  5887     1286  3400               	retlw	0
  5888     1287  3400               	retlw	0
  5889     1288  3400               	retlw	0
  5890     1289  3400               	retlw	0
  5891     128A  3400               	retlw	0
  5892     128B  3400               	retlw	0
  5893     128C  3400               	retlw	0
  5894     128D  3400               	retlw	0
  5895     128E  3400               	retlw	0
  5896     128F  3400               	retlw	0
  5897     1290  3400               	retlw	0
  5898     1291  3400               	retlw	0
  5899     1292  3400               	retlw	0
  5900     1293  3400               	retlw	0
  5901     1294  3400               	retlw	0
  5902                           
  5903                           	psect	idataBANK5
  5904     0802                     __pidataBANK5:
  5905                           
  5906                           ;initializer for set_bottom_calibrate_point@F10597
  5907     0802  3401               	retlw	1
  5908     0803  3406               	retlw	6
  5909     0804  3400               	retlw	0
  5910     0805  3438               	retlw	56
  5911     0806  3401               	retlw	1
  5912     0807  34C9               	retlw	201
  5913     0808  34C7               	retlw	199
  5914     0809  3400               	retlw	0
  5915     080A  3400               	retlw	0
  5916     080B  3400               	retlw	0
  5917     080C  3400               	retlw	0
  5918     080D  3400               	retlw	0
  5919     080E  3400               	retlw	0
  5920     080F  3400               	retlw	0
  5921     0810  3400               	retlw	0
  5922     0811  3400               	retlw	0
  5923     0812  3400               	retlw	0
  5924     0813  3400               	retlw	0
  5925     0814  3400               	retlw	0
  5926     0815  3400               	retlw	0
  5927     0816  3400               	retlw	0
  5928     0817  3400               	retlw	0
  5929     0818  3400               	retlw	0
  5930     0819  3400               	retlw	0
  5931     081A  3400               	retlw	0
  5932     081B  3400               	retlw	0
  5933     081C  3400               	retlw	0
  5934     081D  3400               	retlw	0
  5935     081E  3400               	retlw	0
  5936     081F  3400               	retlw	0
  5937     0820  3400               	retlw	0
  5938     0821  3400               	retlw	0
  5939                           
  5940                           	psect	stringtext1
  5941     1A1D                     __pstringtext1:
  5942     1A1D                     _octpowers:
  5943     1A1D  3401               	retlw	1
  5944     1A1E  3400               	retlw	0
  5945     1A1F  3408               	retlw	8
  5946     1A20  3400               	retlw	0
  5947     1A21  3440               	retlw	64
  5948     1A22  3400               	retlw	0
  5949     1A23  3400               	retlw	0
  5950     1A24  3402               	retlw	2
  5951     1A25  3400               	retlw	0
  5952     1A26  3410               	retlw	16
  5953     1A27  3400               	retlw	0
  5954     1A28  3480               	retlw	128
  5955     1A29                     __end_of_octpowers:
  5956                           
  5957                           	psect	stringtext2
  5958     1A3F                     __pstringtext2:
  5959     1A3F                     _dpowers:
  5960     1A3F  3401               	retlw	1
  5961     1A40  3400               	retlw	0
  5962     1A41  340A               	retlw	10
  5963     1A42  3400               	retlw	0
  5964     1A43  3464               	retlw	100
  5965     1A44  3400               	retlw	0
  5966     1A45  34E8               	retlw	232
  5967     1A46  3403               	retlw	3
  5968     1A47  3410               	retlw	16
  5969     1A48  3427               	retlw	39
  5970     1A49                     __end_of_dpowers:
  5971                           
  5972                           	psect	stringtext3
  5973     1000                     __pstringtext3:
  5974     1000                     _hexpowers:
  5975     1000  3401               	retlw	1
  5976     1001  3400               	retlw	0
  5977     1002  3410               	retlw	16
  5978     1003  3400               	retlw	0
  5979     1004  3400               	retlw	0
  5980     1005  3401               	retlw	1
  5981     1006  3400               	retlw	0
  5982     1007  3410               	retlw	16
  5983     1008                     __end_of_hexpowers:
  5984     001A                     _LATCbits	set	26
  5985     000C                     _PORTAbits	set	12
  5986     0012                     _TRISAbits	set	18
  5987     000B                     _INTCONbits	set	11
  5988     0014                     _TRISC	set	20
  5989     0012                     _TRISA	set	18
  5990     001A                     _LATC	set	26
  5991     0018                     _LATA	set	24
  5992     005F                     _GIE	set	95
  5993     0119                     _RC1REG	set	281
  5994     011A                     _TX1REG	set	282
  5995     011D                     _RC1STA	set	285
  5996     011E                     _TX1STA	set	286
  5997     011C                     _SP1BRGH	set	284
  5998     011B                     _SP1BRGL	set	283
  5999     011F                     _BAUD1CON	set	287
  6000     0190                     _SSP1CON1bits	set	400
  6001     018C                     _SSP1BUF	set	396
  6002     0191                     _SSP1CON2bits	set	401
  6003     018F                     _SSP1STATbits	set	399
  6004     018E                     _SSP1MSK	set	398
  6005     018D                     _SSP1ADD	set	397
  6006     0191                     _SSP1CON2	set	401
  6007     0190                     _SSP1CON1	set	400
  6008     018F                     _SSP1STAT	set	399
  6009     059E                     _T0CON0	set	1438
  6010     059C                     _TMR0L	set	1436
  6011     059D                     _TMR0H	set	1437
  6012     059F                     _T0CON1	set	1439
  6013     0716                     _PIE0bits	set	1814
  6014     070C                     _PIR0bits	set	1804
  6015     0719                     _PIE3bits	set	1817
  6016     070F                     _PIR3bits	set	1807
  6017     079D                     _PMD7	set	1949
  6018     079C                     _PMD6	set	1948
  6019     079B                     _PMD5	set	1947
  6020     079A                     _PMD4	set	1946
  6021     0799                     _PMD3	set	1945
  6022     0798                     _PMD2	set	1944
  6023     0797                     _PMD1	set	1943
  6024     0796                     _PMD0	set	1942
  6025     0892                     _OSCTUNE	set	2194
  6026     0893                     _OSCFRQ	set	2195
  6027     0891                     _OSCEN	set	2193
  6028     088F                     _OSCCON3	set	2191
  6029     088D                     _OSCCON1	set	2189
  6030     1ECB                     _RX1DTPPS	set	7883
  6031     1EC6                     _SSP1DATPPS	set	7878
  6032     1EC5                     _SSP1CLKPPS	set	7877
  6033     1F15                     _RA5PPS	set	7957
  6034     1F38                     _ANSELAbits	set	7992
  6035     1F25                     _RC5PPS	set	7973
  6036     1F21                     _RC1PPS	set	7969
  6037     1F23                     _RC3PPS	set	7971
  6038     1F20                     _RC0PPS	set	7968
  6039     1F52                     _INLVLC	set	8018
  6040     1F3C                     _INLVLA	set	7996
  6041     1F51                     _SLRCONC	set	8017
  6042     1F3B                     _SLRCONA	set	7995
  6043     1F50                     _ODCONC	set	8016
  6044     1F3A                     _ODCONA	set	7994
  6045     1F4F                     _WPUC	set	8015
  6046     1F39                     _WPUA	set	7993
  6047     1F38                     _ANSELA	set	7992
  6048     1F4E                     _ANSELC	set	8014
  6049     1008                     STR_31:
  6050     1008  345B               	retlw	91	;'['
  6051     1009  3452               	retlw	82	;'R'
  6052     100A  3458               	retlw	88	;'X'
  6053     100B  342D               	retlw	45	;'-'
  6054     100C  3442               	retlw	66	;'B'
  6055     100D  3455               	retlw	85	;'U'
  6056     100E  3446               	retlw	70	;'F'
  6057     100F  3446               	retlw	70	;'F'
  6058     1010  3445               	retlw	69	;'E'
  6059     1011  3452               	retlw	82	;'R'
  6060     1012  345D               	retlw	93	;']'
  6061     1013  3420               	retlw	32	;' '
  6062     1014  3470               	retlw	112	;'p'
  6063     1015  3448               	retlw	72	;'H'
  6064     1016  3434               	retlw	52	;'4'
  6065     1017  3438               	retlw	56	;'8'
  6066     1018  3435               	retlw	53	;'5'
  6067     1019  342D               	retlw	45	;'-'
  6068     101A  3443               	retlw	67	;'C'
  6069     101B  3461               	retlw	97	;'a'
  6070     101C  346C               	retlw	108	;'l'
  6071     101D  3469               	retlw	105	;'i'
  6072     101E  3462               	retlw	98	;'b'
  6073     101F  3472               	retlw	114	;'r'
  6074     1020  3461               	retlw	97	;'a'
  6075     1021  3474               	retlw	116	;'t'
  6076     1022  3469               	retlw	105	;'i'
  6077     1023  346F               	retlw	111	;'o'
  6078     1024  346E               	retlw	110	;'n'
  6079     1025  345F               	retlw	95	;'_'
  6080     1026  3442               	retlw	66	;'B'
  6081     1027  346F               	retlw	111	;'o'
  6082     1028  3474               	retlw	116	;'t'
  6083     1029  3474               	retlw	116	;'t'
  6084     102A  346F               	retlw	111	;'o'
  6085     102B  346D               	retlw	109	;'m'
  6086     102C  345F               	retlw	95	;'_'
  6087     102D  3456               	retlw	86	;'V'
  6088     102E  3461               	retlw	97	;'a'
  6089     102F  346C               	retlw	108	;'l'
  6090     1030  3475               	retlw	117	;'u'
  6091     1031  3465               	retlw	101	;'e'
  6092     1032  343A               	retlw	58	;':'
  6093     1033  3420               	retlw	32	;' '
  6094     1034  342D               	retlw	45	;'-'
  6095     1035  342D               	retlw	45	;'-'
  6096     1036  342D               	retlw	45	;'-'
  6097     1037  342D               	retlw	45	;'-'
  6098     1038  3420               	retlw	32	;' '
  6099     1039  340D               	retlw	13
  6100     103A  340A               	retlw	10
  6101     103B  3420               	retlw	32	;' '
  6102     103C  3461               	retlw	97	;'a'
  6103     103D  342D               	retlw	45	;'-'
  6104     103E  342D               	retlw	45	;'-'
  6105     103F  342D               	retlw	45	;'-'
  6106     1040  342D               	retlw	45	;'-'
  6107     1041  342D               	retlw	45	;'-'
  6108     1042  342D               	retlw	45	;'-'
  6109     1043  3470               	retlw	112	;'p'
  6110     1044  3448               	retlw	72	;'H'
  6111     1045  3420               	retlw	32	;' '
  6112     1046  3441               	retlw	65	;'A'
  6113     1047  3444               	retlw	68	;'D'
  6114     1048  3443               	retlw	67	;'C'
  6115     1049  345F               	retlw	95	;'_'
  6116     104A  3476               	retlw	118	;'v'
  6117     104B  3461               	retlw	97	;'a'
  6118     104C  346C               	retlw	108	;'l'
  6119     104D  3475               	retlw	117	;'u'
  6120     104E  3465               	retlw	101	;'e'
  6121     104F  343A               	retlw	58	;':'
  6122     1050  3420               	retlw	32	;' '
  6123     1051  3425               	retlw	37	;'%'
  6124     1052  3475               	retlw	117	;'u'
  6125     1053  3420               	retlw	32	;' '
  6126     1054  340D               	retlw	13
  6127     1055  340A               	retlw	10
  6128     1056  3461               	retlw	97	;'a'
  6129     1057  342D               	retlw	45	;'-'
  6130     1058  342D               	retlw	45	;'-'
  6131     1059  342D               	retlw	45	;'-'
  6132     105A  342D               	retlw	45	;'-'
  6133     105B  342D               	retlw	45	;'-'
  6134     105C  342D               	retlw	45	;'-'
  6135     105D  3470               	retlw	112	;'p'
  6136     105E  3448               	retlw	72	;'H'
  6137     105F  3420               	retlw	32	;' '
  6138     1060  3441               	retlw	65	;'A'
  6139     1061  3444               	retlw	68	;'D'
  6140     1062  3443               	retlw	67	;'C'
  6141     1063  345F               	retlw	95	;'_'
  6142     1064  3448               	retlw	72	;'H'
  6143     1065  3469               	retlw	105	;'i'
  6144     1066  3467               	retlw	103	;'g'
  6145     1067  3468               	retlw	104	;'h'
  6146     1068  3420               	retlw	32	;' '
  6147     1069  3442               	retlw	66	;'B'
  6148     106A  3479               	retlw	121	;'y'
  6149     106B  3474               	retlw	116	;'t'
  6150     106C  3465               	retlw	101	;'e'
  6151     106D  3473               	retlw	115	;'s'
  6152     106E  343A               	retlw	58	;':'
  6153     106F  3420               	retlw	32	;' '
  6154     1070  3430               	retlw	48	;'0'
  6155     1071  3478               	retlw	120	;'x'
  6156     1072  3425               	retlw	37	;'%'
  6157     1073  3430               	retlw	48	;'0'
  6158     1074  3432               	retlw	50	;'2'
  6159     1075  3458               	retlw	88	;'X'
  6160     1076  3420               	retlw	32	;' '
  6161     1077  340D               	retlw	13
  6162     1078  340A               	retlw	10
  6163     1079  3461               	retlw	97	;'a'
  6164     107A  342D               	retlw	45	;'-'
  6165     107B  342D               	retlw	45	;'-'
  6166     107C  342D               	retlw	45	;'-'
  6167     107D  342D               	retlw	45	;'-'
  6168     107E  342D               	retlw	45	;'-'
  6169     107F  342D               	retlw	45	;'-'
  6170     1080  3470               	retlw	112	;'p'
  6171     1081  3448               	retlw	72	;'H'
  6172     1082  3420               	retlw	32	;' '
  6173     1083  3441               	retlw	65	;'A'
  6174     1084  3444               	retlw	68	;'D'
  6175     1085  3443               	retlw	67	;'C'
  6176     1086  345F               	retlw	95	;'_'
  6177     1087  344C               	retlw	76	;'L'
  6178     1088  346F               	retlw	111	;'o'
  6179     1089  3477               	retlw	119	;'w'
  6180     108A  3420               	retlw	32	;' '
  6181     108B  3420               	retlw	32	;' '
  6182     108C  3442               	retlw	66	;'B'
  6183     108D  3479               	retlw	121	;'y'
  6184     108E  3474               	retlw	116	;'t'
  6185     108F  3465               	retlw	101	;'e'
  6186     1090  3473               	retlw	115	;'s'
  6187     1091  343A               	retlw	58	;':'
  6188     1092  3420               	retlw	32	;' '
  6189     1093  3430               	retlw	48	;'0'
  6190     1094  3478               	retlw	120	;'x'
  6191     1095  3425               	retlw	37	;'%'
  6192     1096  3430               	retlw	48	;'0'
  6193     1097  3432               	retlw	50	;'2'
  6194     1098  3458               	retlw	88	;'X'
  6195     1099  3420               	retlw	32	;' '
  6196     109A  340D               	retlw	13
  6197     109B  340A               	retlw	10
  6198     109C  3461               	retlw	97	;'a'
  6199     109D  342D               	retlw	45	;'-'
  6200     109E  342D               	retlw	45	;'-'
  6201     109F  342D               	retlw	45	;'-'
  6202     10A0  342D               	retlw	45	;'-'
  6203     10A1  342D               	retlw	45	;'-'
  6204     10A2  342D               	retlw	45	;'-'
  6205     10A3  3470               	retlw	112	;'p'
  6206     10A4  3448               	retlw	72	;'H'
  6207     10A5  3420               	retlw	32	;' '
  6208     10A6  3441               	retlw	65	;'A'
  6209     10A7  3444               	retlw	68	;'D'
  6210     10A8  3443               	retlw	67	;'C'
  6211     10A9  345F               	retlw	95	;'_'
  6212     10AA  344C               	retlw	76	;'L'
  6213     10AB  346F               	retlw	111	;'o'
  6214     10AC  3477               	retlw	119	;'w'
  6215     10AD  3420               	retlw	32	;' '
  6216     10AE  3420               	retlw	32	;' '
  6217     10AF  3443               	retlw	67	;'C'
  6218     10B0  3452               	retlw	82	;'R'
  6219     10B1  3443               	retlw	67	;'C'
  6220     10B2  3420               	retlw	32	;' '
  6221     10B3  3448               	retlw	72	;'H'
  6222     10B4  3469               	retlw	105	;'i'
  6223     10B5  3467               	retlw	103	;'g'
  6224     10B6  3468               	retlw	104	;'h'
  6225     10B7  3420               	retlw	32	;' '
  6226     10B8  3442               	retlw	66	;'B'
  6227     10B9  3479               	retlw	121	;'y'
  6228     10BA  3474               	retlw	116	;'t'
  6229     10BB  3465               	retlw	101	;'e'
  6230     10BC  343A               	retlw	58	;':'
  6231     10BD  3420               	retlw	32	;' '
  6232     10BE  3430               	retlw	48	;'0'
  6233     10BF  3478               	retlw	120	;'x'
  6234     10C0  3425               	retlw	37	;'%'
  6235     10C1  3430               	retlw	48	;'0'
  6236     10C2  3432               	retlw	50	;'2'
  6237     10C3  3458               	retlw	88	;'X'
  6238     10C4  3420               	retlw	32	;' '
  6239     10C5  340D               	retlw	13
  6240     10C6  340A               	retlw	10
  6241     10C7  3461               	retlw	97	;'a'
  6242     10C8  342D               	retlw	45	;'-'
  6243     10C9  342D               	retlw	45	;'-'
  6244     10CA  342D               	retlw	45	;'-'
  6245     10CB  342D               	retlw	45	;'-'
  6246     10CC  342D               	retlw	45	;'-'
  6247     10CD  342D               	retlw	45	;'-'
  6248     10CE  3470               	retlw	112	;'p'
  6249     10CF  3448               	retlw	72	;'H'
  6250     10D0  3420               	retlw	32	;' '
  6251     10D1  3441               	retlw	65	;'A'
  6252     10D2  3444               	retlw	68	;'D'
  6253     10D3  3443               	retlw	67	;'C'
  6254     10D4  345F               	retlw	95	;'_'
  6255     10D5  344C               	retlw	76	;'L'
  6256     10D6  346F               	retlw	111	;'o'
  6257     10D7  3477               	retlw	119	;'w'
  6258     10D8  3420               	retlw	32	;' '
  6259     10D9  3420               	retlw	32	;' '
  6260     10DA  3443               	retlw	67	;'C'
  6261     10DB  3452               	retlw	82	;'R'
  6262     10DC  3443               	retlw	67	;'C'
  6263     10DD  3420               	retlw	32	;' '
  6264     10DE  3448               	retlw	72	;'H'
  6265     10DF  3469               	retlw	105	;'i'
  6266     10E0  3467               	retlw	103	;'g'
  6267     10E1  3468               	retlw	104	;'h'
  6268     10E2  3420               	retlw	32	;' '
  6269     10E3  3442               	retlw	66	;'B'
  6270     10E4  3479               	retlw	121	;'y'
  6271     10E5  3474               	retlw	116	;'t'
  6272     10E6  3465               	retlw	101	;'e'
  6273     10E7  343A               	retlw	58	;':'
  6274     10E8  3420               	retlw	32	;' '
  6275     10E9  3430               	retlw	48	;'0'
  6276     10EA  3478               	retlw	120	;'x'
  6277     10EB  3425               	retlw	37	;'%'
  6278     10EC  3430               	retlw	48	;'0'
  6279     10ED  3432               	retlw	50	;'2'
  6280     10EE  3458               	retlw	88	;'X'
  6281     10EF  3420               	retlw	32	;' '
  6282     10F0  340D               	retlw	13
  6283     10F1  340A               	retlw	10
  6284     10F2  3400               	retlw	0
  6285                           
  6286                           	psect	stringtext4
  6287     10F3                     __pstringtext4:
  6288     10F3                     STR_30:
  6289     10F3  345B               	retlw	91	;'['
  6290     10F4  3452               	retlw	82	;'R'
  6291     10F5  3458               	retlw	88	;'X'
  6292     10F6  342D               	retlw	45	;'-'
  6293     10F7  3442               	retlw	66	;'B'
  6294     10F8  3455               	retlw	85	;'U'
  6295     10F9  3446               	retlw	70	;'F'
  6296     10FA  3446               	retlw	70	;'F'
  6297     10FB  3445               	retlw	69	;'E'
  6298     10FC  3452               	retlw	82	;'R'
  6299     10FD  345D               	retlw	93	;']'
  6300     10FE  3420               	retlw	32	;' '
  6301     10FF  3470               	retlw	112	;'p'
  6302     1100  3448               	retlw	72	;'H'
  6303     1101  3434               	retlw	52	;'4'
  6304     1102  3438               	retlw	56	;'8'
  6305     1103  3435               	retlw	53	;'5'
  6306     1104  342D               	retlw	45	;'-'
  6307     1105  3443               	retlw	67	;'C'
  6308     1106  3461               	retlw	97	;'a'
  6309     1107  346C               	retlw	108	;'l'
  6310     1108  3469               	retlw	105	;'i'
  6311     1109  3462               	retlw	98	;'b'
  6312     110A  3472               	retlw	114	;'r'
  6313     110B  3461               	retlw	97	;'a'
  6314     110C  3474               	retlw	116	;'t'
  6315     110D  3469               	retlw	105	;'i'
  6316     110E  346F               	retlw	111	;'o'
  6317     110F  346E               	retlw	110	;'n'
  6318     1110  345F               	retlw	95	;'_'
  6319     1111  3454               	retlw	84	;'T'
  6320     1112  346F               	retlw	111	;'o'
  6321     1113  3470               	retlw	112	;'p'
  6322     1114  345F               	retlw	95	;'_'
  6323     1115  3456               	retlw	86	;'V'
  6324     1116  3461               	retlw	97	;'a'
  6325     1117  346C               	retlw	108	;'l'
  6326     1118  3475               	retlw	117	;'u'
  6327     1119  3465               	retlw	101	;'e'
  6328     111A  343A               	retlw	58	;':'
  6329     111B  3420               	retlw	32	;' '
  6330     111C  342D               	retlw	45	;'-'
  6331     111D  342D               	retlw	45	;'-'
  6332     111E  342D               	retlw	45	;'-'
  6333     111F  342D               	retlw	45	;'-'
  6334     1120  3420               	retlw	32	;' '
  6335     1121  340D               	retlw	13
  6336     1122  340A               	retlw	10
  6337     1123  3420               	retlw	32	;' '
  6338     1124  3461               	retlw	97	;'a'
  6339     1125  342D               	retlw	45	;'-'
  6340     1126  342D               	retlw	45	;'-'
  6341     1127  342D               	retlw	45	;'-'
  6342     1128  342D               	retlw	45	;'-'
  6343     1129  342D               	retlw	45	;'-'
  6344     112A  342D               	retlw	45	;'-'
  6345     112B  3470               	retlw	112	;'p'
  6346     112C  3448               	retlw	72	;'H'
  6347     112D  3420               	retlw	32	;' '
  6348     112E  3441               	retlw	65	;'A'
  6349     112F  3444               	retlw	68	;'D'
  6350     1130  3443               	retlw	67	;'C'
  6351     1131  345F               	retlw	95	;'_'
  6352     1132  3476               	retlw	118	;'v'
  6353     1133  3461               	retlw	97	;'a'
  6354     1134  346C               	retlw	108	;'l'
  6355     1135  3475               	retlw	117	;'u'
  6356     1136  3465               	retlw	101	;'e'
  6357     1137  343A               	retlw	58	;':'
  6358     1138  3420               	retlw	32	;' '
  6359     1139  3425               	retlw	37	;'%'
  6360     113A  3475               	retlw	117	;'u'
  6361     113B  3420               	retlw	32	;' '
  6362     113C  340D               	retlw	13
  6363     113D  340A               	retlw	10
  6364     113E  3461               	retlw	97	;'a'
  6365     113F  342D               	retlw	45	;'-'
  6366     1140  342D               	retlw	45	;'-'
  6367     1141  342D               	retlw	45	;'-'
  6368     1142  342D               	retlw	45	;'-'
  6369     1143  342D               	retlw	45	;'-'
  6370     1144  342D               	retlw	45	;'-'
  6371     1145  3470               	retlw	112	;'p'
  6372     1146  3448               	retlw	72	;'H'
  6373     1147  3420               	retlw	32	;' '
  6374     1148  3441               	retlw	65	;'A'
  6375     1149  3444               	retlw	68	;'D'
  6376     114A  3443               	retlw	67	;'C'
  6377     114B  345F               	retlw	95	;'_'
  6378     114C  3448               	retlw	72	;'H'
  6379     114D  3469               	retlw	105	;'i'
  6380     114E  3467               	retlw	103	;'g'
  6381     114F  3468               	retlw	104	;'h'
  6382     1150  3420               	retlw	32	;' '
  6383     1151  3442               	retlw	66	;'B'
  6384     1152  3479               	retlw	121	;'y'
  6385     1153  3474               	retlw	116	;'t'
  6386     1154  3465               	retlw	101	;'e'
  6387     1155  3473               	retlw	115	;'s'
  6388     1156  343A               	retlw	58	;':'
  6389     1157  3420               	retlw	32	;' '
  6390     1158  3430               	retlw	48	;'0'
  6391     1159  3478               	retlw	120	;'x'
  6392     115A  3425               	retlw	37	;'%'
  6393     115B  3430               	retlw	48	;'0'
  6394     115C  3432               	retlw	50	;'2'
  6395     115D  3458               	retlw	88	;'X'
  6396     115E  3420               	retlw	32	;' '
  6397     115F  340D               	retlw	13
  6398     1160  340A               	retlw	10
  6399     1161  3461               	retlw	97	;'a'
  6400     1162  342D               	retlw	45	;'-'
  6401     1163  342D               	retlw	45	;'-'
  6402     1164  342D               	retlw	45	;'-'
  6403     1165  342D               	retlw	45	;'-'
  6404     1166  342D               	retlw	45	;'-'
  6405     1167  342D               	retlw	45	;'-'
  6406     1168  3470               	retlw	112	;'p'
  6407     1169  3448               	retlw	72	;'H'
  6408     116A  3420               	retlw	32	;' '
  6409     116B  3441               	retlw	65	;'A'
  6410     116C  3444               	retlw	68	;'D'
  6411     116D  3443               	retlw	67	;'C'
  6412     116E  345F               	retlw	95	;'_'
  6413     116F  344C               	retlw	76	;'L'
  6414     1170  346F               	retlw	111	;'o'
  6415     1171  3477               	retlw	119	;'w'
  6416     1172  3420               	retlw	32	;' '
  6417     1173  3420               	retlw	32	;' '
  6418     1174  3442               	retlw	66	;'B'
  6419     1175  3479               	retlw	121	;'y'
  6420     1176  3474               	retlw	116	;'t'
  6421     1177  3465               	retlw	101	;'e'
  6422     1178  3473               	retlw	115	;'s'
  6423     1179  343A               	retlw	58	;':'
  6424     117A  3420               	retlw	32	;' '
  6425     117B  3430               	retlw	48	;'0'
  6426     117C  3478               	retlw	120	;'x'
  6427     117D  3425               	retlw	37	;'%'
  6428     117E  3430               	retlw	48	;'0'
  6429     117F  3432               	retlw	50	;'2'
  6430     1180  3458               	retlw	88	;'X'
  6431     1181  3420               	retlw	32	;' '
  6432     1182  340D               	retlw	13
  6433     1183  340A               	retlw	10
  6434     1184  3461               	retlw	97	;'a'
  6435     1185  342D               	retlw	45	;'-'
  6436     1186  342D               	retlw	45	;'-'
  6437     1187  342D               	retlw	45	;'-'
  6438     1188  342D               	retlw	45	;'-'
  6439     1189  342D               	retlw	45	;'-'
  6440     118A  342D               	retlw	45	;'-'
  6441     118B  3470               	retlw	112	;'p'
  6442     118C  3448               	retlw	72	;'H'
  6443     118D  3420               	retlw	32	;' '
  6444     118E  3441               	retlw	65	;'A'
  6445     118F  3444               	retlw	68	;'D'
  6446     1190  3443               	retlw	67	;'C'
  6447     1191  345F               	retlw	95	;'_'
  6448     1192  344C               	retlw	76	;'L'
  6449     1193  346F               	retlw	111	;'o'
  6450     1194  3477               	retlw	119	;'w'
  6451     1195  3420               	retlw	32	;' '
  6452     1196  3420               	retlw	32	;' '
  6453     1197  3443               	retlw	67	;'C'
  6454     1198  3452               	retlw	82	;'R'
  6455     1199  3443               	retlw	67	;'C'
  6456     119A  3420               	retlw	32	;' '
  6457     119B  3448               	retlw	72	;'H'
  6458     119C  3469               	retlw	105	;'i'
  6459     119D  3467               	retlw	103	;'g'
  6460     119E  3468               	retlw	104	;'h'
  6461     119F  3420               	retlw	32	;' '
  6462     11A0  3442               	retlw	66	;'B'
  6463     11A1  3479               	retlw	121	;'y'
  6464     11A2  3474               	retlw	116	;'t'
  6465     11A3  3465               	retlw	101	;'e'
  6466     11A4  343A               	retlw	58	;':'
  6467     11A5  3420               	retlw	32	;' '
  6468     11A6  3430               	retlw	48	;'0'
  6469     11A7  3478               	retlw	120	;'x'
  6470     11A8  3425               	retlw	37	;'%'
  6471     11A9  3430               	retlw	48	;'0'
  6472     11AA  3432               	retlw	50	;'2'
  6473     11AB  3458               	retlw	88	;'X'
  6474     11AC  3420               	retlw	32	;' '
  6475     11AD  340D               	retlw	13
  6476     11AE  340A               	retlw	10
  6477     11AF  3461               	retlw	97	;'a'
  6478     11B0  342D               	retlw	45	;'-'
  6479     11B1  342D               	retlw	45	;'-'
  6480     11B2  342D               	retlw	45	;'-'
  6481     11B3  342D               	retlw	45	;'-'
  6482     11B4  342D               	retlw	45	;'-'
  6483     11B5  342D               	retlw	45	;'-'
  6484     11B6  3470               	retlw	112	;'p'
  6485     11B7  3448               	retlw	72	;'H'
  6486     11B8  3420               	retlw	32	;' '
  6487     11B9  3441               	retlw	65	;'A'
  6488     11BA  3444               	retlw	68	;'D'
  6489     11BB  3443               	retlw	67	;'C'
  6490     11BC  345F               	retlw	95	;'_'
  6491     11BD  344C               	retlw	76	;'L'
  6492     11BE  346F               	retlw	111	;'o'
  6493     11BF  3477               	retlw	119	;'w'
  6494     11C0  3420               	retlw	32	;' '
  6495     11C1  3420               	retlw	32	;' '
  6496     11C2  3443               	retlw	67	;'C'
  6497     11C3  3452               	retlw	82	;'R'
  6498     11C4  3443               	retlw	67	;'C'
  6499     11C5  3420               	retlw	32	;' '
  6500     11C6  3448               	retlw	72	;'H'
  6501     11C7  3469               	retlw	105	;'i'
  6502     11C8  3467               	retlw	103	;'g'
  6503     11C9  3468               	retlw	104	;'h'
  6504     11CA  3420               	retlw	32	;' '
  6505     11CB  3442               	retlw	66	;'B'
  6506     11CC  3479               	retlw	121	;'y'
  6507     11CD  3474               	retlw	116	;'t'
  6508     11CE  3465               	retlw	101	;'e'
  6509     11CF  343A               	retlw	58	;':'
  6510     11D0  3420               	retlw	32	;' '
  6511     11D1  3430               	retlw	48	;'0'
  6512     11D2  3478               	retlw	120	;'x'
  6513     11D3  3425               	retlw	37	;'%'
  6514     11D4  3430               	retlw	48	;'0'
  6515     11D5  3432               	retlw	50	;'2'
  6516     11D6  3458               	retlw	88	;'X'
  6517     11D7  3420               	retlw	32	;' '
  6518     11D8  340D               	retlw	13
  6519     11D9  340A               	retlw	10
  6520     11DA  3400               	retlw	0
  6521                           
  6522                           	psect	stringtext5
  6523     1800                     __pstringtext5:
  6524     1800                     STR_9:
  6525     1800  345B               	retlw	91	;'['
  6526     1801  3452               	retlw	82	;'R'
  6527     1802  3458               	retlw	88	;'X'
  6528     1803  342D               	retlw	45	;'-'
  6529     1804  3442               	retlw	66	;'B'
  6530     1805  3455               	retlw	85	;'U'
  6531     1806  3446               	retlw	70	;'F'
  6532     1807  3446               	retlw	70	;'F'
  6533     1808  3445               	retlw	69	;'E'
  6534     1809  3452               	retlw	82	;'R'
  6535     180A  345D               	retlw	93	;']'
  6536     180B  3420               	retlw	32	;' '
  6537     180C  3470               	retlw	112	;'p'
  6538     180D  3448               	retlw	72	;'H'
  6539     180E  3434               	retlw	52	;'4'
  6540     180F  3438               	retlw	56	;'8'
  6541     1810  3435               	retlw	53	;'5'
  6542     1811  342D               	retlw	45	;'-'
  6543     1812  3443               	retlw	67	;'C'
  6544     1813  3461               	retlw	97	;'a'
  6545     1814  346C               	retlw	108	;'l'
  6546     1815  3469               	retlw	105	;'i'
  6547     1816  3462               	retlw	98	;'b'
  6548     1817  3472               	retlw	114	;'r'
  6549     1818  3461               	retlw	97	;'a'
  6550     1819  3474               	retlw	116	;'t'
  6551     181A  3469               	retlw	105	;'i'
  6552     181B  346F               	retlw	111	;'o'
  6553     181C  346E               	retlw	110	;'n'
  6554     181D  345F               	retlw	95	;'_'
  6555     181E  3456               	retlw	86	;'V'
  6556     181F  3461               	retlw	97	;'a'
  6557     1820  346C               	retlw	108	;'l'
  6558     1821  3475               	retlw	117	;'u'
  6559     1822  3465               	retlw	101	;'e'
  6560     1823  343A               	retlw	58	;':'
  6561     1824  3420               	retlw	32	;' '
  6562     1825  342D               	retlw	45	;'-'
  6563     1826  342D               	retlw	45	;'-'
  6564     1827  342D               	retlw	45	;'-'
  6565     1828  342D               	retlw	45	;'-'
  6566     1829  3420               	retlw	32	;' '
  6567     182A  340D               	retlw	13
  6568     182B  340A               	retlw	10
  6569     182C  3420               	retlw	32	;' '
  6570     182D  3470               	retlw	112	;'p'
  6571     182E  3448               	retlw	72	;'H'
  6572     182F  3420               	retlw	32	;' '
  6573     1830  3441               	retlw	65	;'A'
  6574     1831  3444               	retlw	68	;'D'
  6575     1832  3443               	retlw	67	;'C'
  6576     1833  345F               	retlw	95	;'_'
  6577     1834  3476               	retlw	118	;'v'
  6578     1835  3461               	retlw	97	;'a'
  6579     1836  346C               	retlw	108	;'l'
  6580     1837  3475               	retlw	117	;'u'
  6581     1838  3465               	retlw	101	;'e'
  6582     1839  343A               	retlw	58	;':'
  6583     183A  3420               	retlw	32	;' '
  6584     183B  3425               	retlw	37	;'%'
  6585     183C  3475               	retlw	117	;'u'
  6586     183D  3420               	retlw	32	;' '
  6587     183E  340D               	retlw	13
  6588     183F  340A               	retlw	10
  6589     1840  3470               	retlw	112	;'p'
  6590     1841  3448               	retlw	72	;'H'
  6591     1842  3420               	retlw	32	;' '
  6592     1843  3441               	retlw	65	;'A'
  6593     1844  3444               	retlw	68	;'D'
  6594     1845  3443               	retlw	67	;'C'
  6595     1846  345F               	retlw	95	;'_'
  6596     1847  3448               	retlw	72	;'H'
  6597     1848  3469               	retlw	105	;'i'
  6598     1849  3467               	retlw	103	;'g'
  6599     184A  3468               	retlw	104	;'h'
  6600     184B  3420               	retlw	32	;' '
  6601     184C  3442               	retlw	66	;'B'
  6602     184D  3479               	retlw	121	;'y'
  6603     184E  3474               	retlw	116	;'t'
  6604     184F  3465               	retlw	101	;'e'
  6605     1850  3473               	retlw	115	;'s'
  6606     1851  343A               	retlw	58	;':'
  6607     1852  3420               	retlw	32	;' '
  6608     1853  3430               	retlw	48	;'0'
  6609     1854  3478               	retlw	120	;'x'
  6610     1855  3425               	retlw	37	;'%'
  6611     1856  3430               	retlw	48	;'0'
  6612     1857  3432               	retlw	50	;'2'
  6613     1858  3458               	retlw	88	;'X'
  6614     1859  3420               	retlw	32	;' '
  6615     185A  340D               	retlw	13
  6616     185B  340A               	retlw	10
  6617     185C  3470               	retlw	112	;'p'
  6618     185D  3448               	retlw	72	;'H'
  6619     185E  3420               	retlw	32	;' '
  6620     185F  3441               	retlw	65	;'A'
  6621     1860  3444               	retlw	68	;'D'
  6622     1861  3443               	retlw	67	;'C'
  6623     1862  345F               	retlw	95	;'_'
  6624     1863  344C               	retlw	76	;'L'
  6625     1864  346F               	retlw	111	;'o'
  6626     1865  3477               	retlw	119	;'w'
  6627     1866  3420               	retlw	32	;' '
  6628     1867  3420               	retlw	32	;' '
  6629     1868  3442               	retlw	66	;'B'
  6630     1869  3479               	retlw	121	;'y'
  6631     186A  3474               	retlw	116	;'t'
  6632     186B  3465               	retlw	101	;'e'
  6633     186C  3473               	retlw	115	;'s'
  6634     186D  343A               	retlw	58	;':'
  6635     186E  3420               	retlw	32	;' '
  6636     186F  3430               	retlw	48	;'0'
  6637     1870  3478               	retlw	120	;'x'
  6638     1871  3425               	retlw	37	;'%'
  6639     1872  3430               	retlw	48	;'0'
  6640     1873  3432               	retlw	50	;'2'
  6641     1874  3458               	retlw	88	;'X'
  6642     1875  3420               	retlw	32	;' '
  6643     1876  340D               	retlw	13
  6644     1877  340A               	retlw	10
  6645     1878  3400               	retlw	0
  6646                           
  6647                           	psect	stringtext6
  6648     1879                     __pstringtext6:
  6649     1879                     STR_29:
  6650     1879  345B               	retlw	91	;'['
  6651     187A  3452               	retlw	82	;'R'
  6652     187B  3465               	retlw	101	;'e'
  6653     187C  3471               	retlw	113	;'q'
  6654     187D  3475               	retlw	117	;'u'
  6655     187E  3465               	retlw	101	;'e'
  6656     187F  3473               	retlw	115	;'s'
  6657     1880  3474               	retlw	116	;'t'
  6658     1881  345D               	retlw	93	;']'
  6659     1882  3420               	retlw	32	;' '
  6660     1883  3441               	retlw	65	;'A'
  6661     1884  3444               	retlw	68	;'D'
  6662     1885  3443               	retlw	67	;'C'
  6663     1886  345F               	retlw	95	;'_'
  6664     1887  3476               	retlw	118	;'v'
  6665     1888  3461               	retlw	97	;'a'
  6666     1889  346C               	retlw	108	;'l'
  6667     188A  3475               	retlw	117	;'u'
  6668     188B  3465               	retlw	101	;'e'
  6669     188C  3420               	retlw	32	;' '
  6670     188D  3466               	retlw	102	;'f'
  6671     188E  3472               	retlw	114	;'r'
  6672     188F  346F               	retlw	111	;'o'
  6673     1890  346D               	retlw	109	;'m'
  6674     1891  3420               	retlw	32	;' '
  6675     1892  3470               	retlw	112	;'p'
  6676     1893  3468               	retlw	104	;'h'
  6677     1894  3434               	retlw	52	;'4'
  6678     1895  3438               	retlw	56	;'8'
  6679     1896  3435               	retlw	53	;'5'
  6680     1897  3420               	retlw	32	;' '
  6681     1898  3470               	retlw	112	;'p'
  6682     1899  3472               	retlw	114	;'r'
  6683     189A  346F               	retlw	111	;'o'
  6684     189B  3462               	retlw	98	;'b'
  6685     189C  3465               	retlw	101	;'e'
  6686     189D  3420               	retlw	32	;' '
  6687     189E  342D               	retlw	45	;'-'
  6688     189F  3420               	retlw	32	;' '
  6689     18A0  3443               	retlw	67	;'C'
  6690     18A1  3441               	retlw	65	;'A'
  6691     18A2  344C               	retlw	76	;'L'
  6692     18A3  3449               	retlw	73	;'I'
  6693     18A4  3442               	retlw	66	;'B'
  6694     18A5  3452               	retlw	82	;'R'
  6695     18A6  3441               	retlw	65	;'A'
  6696     18A7  3454               	retlw	84	;'T'
  6697     18A8  3449               	retlw	73	;'I'
  6698     18A9  344F               	retlw	79	;'O'
  6699     18AA  344E               	retlw	78	;'N'
  6700     18AB  3420               	retlw	32	;' '
  6701     18AC  344D               	retlw	77	;'M'
  6702     18AD  344F               	retlw	79	;'O'
  6703     18AE  3444               	retlw	68	;'D'
  6704     18AF  3445               	retlw	69	;'E'
  6705     18B0  3420               	retlw	32	;' '
  6706     18B1  342D               	retlw	45	;'-'
  6707     18B2  342D               	retlw	45	;'-'
  6708     18B3  342D               	retlw	45	;'-'
  6709     18B4  3420               	retlw	32	;' '
  6710     18B5  3420               	retlw	32	;' '
  6711     18B6  340D               	retlw	13
  6712     18B7  340A               	retlw	10
  6713     18B8  3400               	retlw	0
  6714                           
  6715                           	psect	stringtext7
  6716     18B9                     __pstringtext7:
  6717     18B9                     STR_26:
  6718     18B9  345B               	retlw	91	;'['
  6719     18BA  3452               	retlw	82	;'R'
  6720     18BB  3465               	retlw	101	;'e'
  6721     18BC  3471               	retlw	113	;'q'
  6722     18BD  3475               	retlw	117	;'u'
  6723     18BE  3465               	retlw	101	;'e'
  6724     18BF  3473               	retlw	115	;'s'
  6725     18C0  3474               	retlw	116	;'t'
  6726     18C1  345D               	retlw	93	;']'
  6727     18C2  3420               	retlw	32	;' '
  6728     18C3  3464               	retlw	100	;'d'
  6729     18C4  3461               	retlw	97	;'a'
  6730     18C5  3474               	retlw	116	;'t'
  6731     18C6  3461               	retlw	97	;'a'
  6732     18C7  3420               	retlw	32	;' '
  6733     18C8  3466               	retlw	102	;'f'
  6734     18C9  3472               	retlw	114	;'r'
  6735     18CA  346F               	retlw	111	;'o'
  6736     18CB  346D               	retlw	109	;'m'
  6737     18CC  3420               	retlw	32	;' '
  6738     18CD  3470               	retlw	112	;'p'
  6739     18CE  3468               	retlw	104	;'h'
  6740     18CF  3434               	retlw	52	;'4'
  6741     18D0  3438               	retlw	56	;'8'
  6742     18D1  3435               	retlw	53	;'5'
  6743     18D2  3420               	retlw	32	;' '
  6744     18D3  3470               	retlw	112	;'p'
  6745     18D4  3472               	retlw	114	;'r'
  6746     18D5  346F               	retlw	111	;'o'
  6747     18D6  3462               	retlw	98	;'b'
  6748     18D7  3465               	retlw	101	;'e'
  6749     18D8  3420               	retlw	32	;' '
  6750     18D9  342D               	retlw	45	;'-'
  6751     18DA  3420               	retlw	32	;' '
  6752     18DB  344D               	retlw	77	;'M'
  6753     18DC  3445               	retlw	69	;'E'
  6754     18DD  3441               	retlw	65	;'A'
  6755     18DE  3453               	retlw	83	;'S'
  6756     18DF  3455               	retlw	85	;'U'
  6757     18E0  3452               	retlw	82	;'R'
  6758     18E1  3445               	retlw	69	;'E'
  6759     18E2  344D               	retlw	77	;'M'
  6760     18E3  3445               	retlw	69	;'E'
  6761     18E4  344E               	retlw	78	;'N'
  6762     18E5  3454               	retlw	84	;'T'
  6763     18E6  3420               	retlw	32	;' '
  6764     18E7  344D               	retlw	77	;'M'
  6765     18E8  344F               	retlw	79	;'O'
  6766     18E9  3444               	retlw	68	;'D'
  6767     18EA  3445               	retlw	69	;'E'
  6768     18EB  3420               	retlw	32	;' '
  6769     18EC  342D               	retlw	45	;'-'
  6770     18ED  342D               	retlw	45	;'-'
  6771     18EE  342D               	retlw	45	;'-'
  6772     18EF  3420               	retlw	32	;' '
  6773     18F0  3420               	retlw	32	;' '
  6774     18F1  340D               	retlw	13
  6775     18F2  340A               	retlw	10
  6776     18F3  3400               	retlw	0
  6777                           
  6778                           	psect	stringtext8
  6779     18F4                     __pstringtext8:
  6780     18F4                     STR_6:
  6781     18F4  3453               	retlw	83	;'S'
  6782     18F5  3454               	retlw	84	;'T'
  6783     18F6  3441               	retlw	65	;'A'
  6784     18F7  3454               	retlw	84	;'T'
  6785     18F8  3445               	retlw	69	;'E'
  6786     18F9  345F               	retlw	95	;'_'
  6787     18FA  3453               	retlw	83	;'S'
  6788     18FB  3441               	retlw	65	;'A'
  6789     18FC  3456               	retlw	86	;'V'
  6790     18FD  3445               	retlw	69	;'E'
  6791     18FE  345F               	retlw	95	;'_'
  6792     18FF  3442               	retlw	66	;'B'
  6793     1900  344F               	retlw	79	;'O'
  6794     1901  3454               	retlw	84	;'T'
  6795     1902  3454               	retlw	84	;'T'
  6796     1903  344F               	retlw	79	;'O'
  6797     1904  344D               	retlw	77	;'M'
  6798     1905  345F               	retlw	95	;'_'
  6799     1906  3443               	retlw	67	;'C'
  6800     1907  3441               	retlw	65	;'A'
  6801     1908  344C               	retlw	76	;'L'
  6802     1909  3449               	retlw	73	;'I'
  6803     190A  3442               	retlw	66	;'B'
  6804     190B  3452               	retlw	82	;'R'
  6805     190C  3441               	retlw	65	;'A'
  6806     190D  3454               	retlw	84	;'T'
  6807     190E  3449               	retlw	73	;'I'
  6808     190F  344F               	retlw	79	;'O'
  6809     1910  344E               	retlw	78	;'N'
  6810     1911  345F               	retlw	95	;'_'
  6811     1912  3450               	retlw	80	;'P'
  6812     1913  344F               	retlw	79	;'O'
  6813     1914  3449               	retlw	73	;'I'
  6814     1915  344E               	retlw	78	;'N'
  6815     1916  3454               	retlw	84	;'T'
  6816     1917  340D               	retlw	13
  6817     1918  340A               	retlw	10
  6818     1919  3400               	retlw	0
  6819                           
  6820                           	psect	stringtext9
  6821     191A                     __pstringtext9:
  6822     191A                     STR_10:
  6823     191A  345B               	retlw	91	;'['
  6824     191B  3450               	retlw	80	;'P'
  6825     191C  3449               	retlw	73	;'I'
  6826     191D  3443               	retlw	67	;'C'
  6827     191E  345D               	retlw	93	;']'
  6828     191F  3420               	retlw	32	;' '
  6829     1920  3469               	retlw	105	;'i'
  6830     1921  346E               	retlw	110	;'n'
  6831     1922  3474               	retlw	116	;'t'
  6832     1923  346F               	retlw	111	;'o'
  6833     1924  3420               	retlw	32	;' '
  6834     1925  3474               	retlw	116	;'t'
  6835     1926  3468               	retlw	104	;'h'
  6836     1927  3465               	retlw	101	;'e'
  6837     1928  3420               	retlw	32	;' '
  6838     1929  3453               	retlw	83	;'S'
  6839     192A  3454               	retlw	84	;'T'
  6840     192B  3441               	retlw	65	;'A'
  6841     192C  3454               	retlw	84	;'T'
  6842     192D  3445               	retlw	69	;'E'
  6843     192E  345F               	retlw	95	;'_'
  6844     192F  344F               	retlw	79	;'O'
  6845     1930  3455               	retlw	85	;'U'
  6846     1931  3454               	retlw	84	;'T'
  6847     1932  3450               	retlw	80	;'P'
  6848     1933  3455               	retlw	85	;'U'
  6849     1934  3454               	retlw	84	;'T'
  6850     1935  345F               	retlw	95	;'_'
  6851     1936  3456               	retlw	86	;'V'
  6852     1937  3441               	retlw	65	;'A'
  6853     1938  344C               	retlw	76	;'L'
  6854     1939  3455               	retlw	85	;'U'
  6855     193A  3445               	retlw	69	;'E'
  6856     193B  3420               	retlw	32	;' '
  6857     193C  340D               	retlw	13
  6858     193D  340A               	retlw	10
  6859     193E  3400               	retlw	0
  6860                           
  6861                           	psect	stringtext10
  6862     193F                     __pstringtext10:
  6863     193F                     STR_11:
  6864     193F  345B               	retlw	91	;'['
  6865     1940  3452               	retlw	82	;'R'
  6866     1941  3458               	retlw	88	;'X'
  6867     1942  342D               	retlw	45	;'-'
  6868     1943  3442               	retlw	66	;'B'
  6869     1944  3455               	retlw	85	;'U'
  6870     1945  3446               	retlw	70	;'F'
  6871     1946  3446               	retlw	70	;'F'
  6872     1947  3445               	retlw	69	;'E'
  6873     1948  3452               	retlw	82	;'R'
  6874     1949  345D               	retlw	93	;']'
  6875     194A  3420               	retlw	32	;' '
  6876     194B  3470               	retlw	112	;'p'
  6877     194C  3448               	retlw	72	;'H'
  6878     194D  3434               	retlw	52	;'4'
  6879     194E  3438               	retlw	56	;'8'
  6880     194F  3435               	retlw	53	;'5'
  6881     1950  3420               	retlw	32	;' '
  6882     1951  3476               	retlw	118	;'v'
  6883     1952  3461               	retlw	97	;'a'
  6884     1953  346C               	retlw	108	;'l'
  6885     1954  3475               	retlw	117	;'u'
  6886     1955  3465               	retlw	101	;'e'
  6887     1956  343A               	retlw	58	;':'
  6888     1957  3420               	retlw	32	;' '
  6889     1958  340D               	retlw	13
  6890     1959  340A               	retlw	10
  6891     195A  3454               	retlw	84	;'T'
  6892     195B  3445               	retlw	69	;'E'
  6893     195C  344D               	retlw	77	;'M'
  6894     195D  3450               	retlw	80	;'P'
  6895     195E  343A               	retlw	58	;':'
  6896     195F  3420               	retlw	32	;' '
  6897     1960  3425               	retlw	37	;'%'
  6898     1961  3475               	retlw	117	;'u'
  6899     1962  3400               	retlw	0
  6900                           
  6901                           	psect	stringtext11
  6902     1963                     __pstringtext11:
  6903     1963                     STR_8:
  6904     1963  345B               	retlw	91	;'['
  6905     1964  3450               	retlw	80	;'P'
  6906     1965  3449               	retlw	73	;'I'
  6907     1966  3443               	retlw	67	;'C'
  6908     1967  345D               	retlw	93	;']'
  6909     1968  3420               	retlw	32	;' '
  6910     1969  3469               	retlw	105	;'i'
  6911     196A  346E               	retlw	110	;'n'
  6912     196B  3474               	retlw	116	;'t'
  6913     196C  346F               	retlw	111	;'o'
  6914     196D  3420               	retlw	32	;' '
  6915     196E  3474               	retlw	116	;'t'
  6916     196F  3468               	retlw	104	;'h'
  6917     1970  3465               	retlw	101	;'e'
  6918     1971  3420               	retlw	32	;' '
  6919     1972  3453               	retlw	83	;'S'
  6920     1973  3454               	retlw	84	;'T'
  6921     1974  3441               	retlw	65	;'A'
  6922     1975  3454               	retlw	84	;'T'
  6923     1976  3445               	retlw	69	;'E'
  6924     1977  345F               	retlw	95	;'_'
  6925     1978  344F               	retlw	79	;'O'
  6926     1979  3455               	retlw	85	;'U'
  6927     197A  3454               	retlw	84	;'T'
  6928     197B  3450               	retlw	80	;'P'
  6929     197C  3455               	retlw	85	;'U'
  6930     197D  3454               	retlw	84	;'T'
  6931     197E  345F               	retlw	95	;'_'
  6932     197F  3441               	retlw	65	;'A'
  6933     1980  3444               	retlw	68	;'D'
  6934     1981  3443               	retlw	67	;'C'
  6935     1982  3420               	retlw	32	;' '
  6936     1983  340D               	retlw	13
  6937     1984  340A               	retlw	10
  6938     1985  3400               	retlw	0
  6939                           
  6940                           	psect	stringtext12
  6941     1986                     __pstringtext12:
  6942     1986                     STR_4:
  6943     1986  3453               	retlw	83	;'S'
  6944     1987  3454               	retlw	84	;'T'
  6945     1988  3441               	retlw	65	;'A'
  6946     1989  3454               	retlw	84	;'T'
  6947     198A  3445               	retlw	69	;'E'
  6948     198B  345F               	retlw	95	;'_'
  6949     198C  3453               	retlw	83	;'S'
  6950     198D  3441               	retlw	65	;'A'
  6951     198E  3456               	retlw	86	;'V'
  6952     198F  3445               	retlw	69	;'E'
  6953     1990  345F               	retlw	95	;'_'
  6954     1991  3454               	retlw	84	;'T'
  6955     1992  344F               	retlw	79	;'O'
  6956     1993  3450               	retlw	80	;'P'
  6957     1994  345F               	retlw	95	;'_'
  6958     1995  3443               	retlw	67	;'C'
  6959     1996  3441               	retlw	65	;'A'
  6960     1997  344C               	retlw	76	;'L'
  6961     1998  3449               	retlw	73	;'I'
  6962     1999  3442               	retlw	66	;'B'
  6963     199A  3452               	retlw	82	;'R'
  6964     199B  3441               	retlw	65	;'A'
  6965     199C  3454               	retlw	84	;'T'
  6966     199D  3449               	retlw	73	;'I'
  6967     199E  344F               	retlw	79	;'O'
  6968     199F  344E               	retlw	78	;'N'
  6969     19A0  345F               	retlw	95	;'_'
  6970     19A1  3450               	retlw	80	;'P'
  6971     19A2  344F               	retlw	79	;'O'
  6972     19A3  3449               	retlw	73	;'I'
  6973     19A4  344E               	retlw	78	;'N'
  6974     19A5  3454               	retlw	84	;'T'
  6975     19A6  340D               	retlw	13
  6976     19A7  340A               	retlw	10
  6977     19A8  3400               	retlw	0
  6978                           
  6979                           	psect	stringtext13
  6980     19A9                     __pstringtext13:
  6981     19A9                     STR_1:
  6982     19A9  3450               	retlw	80	;'P'
  6983     19AA  3448               	retlw	72	;'H'
  6984     19AB  3420               	retlw	32	;' '
  6985     19AC  3450               	retlw	80	;'P'
  6986     19AD  3472               	retlw	114	;'r'
  6987     19AE  346F               	retlw	111	;'o'
  6988     19AF  3462               	retlw	98	;'b'
  6989     19B0  3465               	retlw	101	;'e'
  6990     19B1  3420               	retlw	32	;' '
  6991     19B2  3477               	retlw	119	;'w'
  6992     19B3  3469               	retlw	105	;'i'
  6993     19B4  3474               	retlw	116	;'t'
  6994     19B5  3468               	retlw	104	;'h'
  6995     19B6  3420               	retlw	32	;' '
  6996     19B7  3452               	retlw	82	;'R'
  6997     19B8  3453               	retlw	83	;'S'
  6998     19B9  3434               	retlw	52	;'4'
  6999     19BA  3438               	retlw	56	;'8'
  7000     19BB  3435               	retlw	53	;'5'
  7001     19BC  340D               	retlw	13
  7002     19BD  340A               	retlw	10
  7003     19BE  3400               	retlw	0
  7004                           
  7005                           	psect	stringtext14
  7006     19BF                     __pstringtext14:
  7007     19BF                     STR_33:
  7008     19BF  3430               	retlw	48	;'0'
  7009     19C0  3431               	retlw	49	;'1'
  7010     19C1  3432               	retlw	50	;'2'
  7011     19C2  3433               	retlw	51	;'3'
  7012     19C3  3434               	retlw	52	;'4'
  7013     19C4  3435               	retlw	53	;'5'
  7014     19C5  3436               	retlw	54	;'6'
  7015     19C6  3437               	retlw	55	;'7'
  7016     19C7  3438               	retlw	56	;'8'
  7017     19C8  3439               	retlw	57	;'9'
  7018     19C9  3441               	retlw	65	;'A'
  7019     19CA  3442               	retlw	66	;'B'
  7020     19CB  3443               	retlw	67	;'C'
  7021     19CC  3444               	retlw	68	;'D'
  7022     19CD  3445               	retlw	69	;'E'
  7023     19CE  3446               	retlw	70	;'F'
  7024     19CF  3400               	retlw	0
  7025                           
  7026                           	psect	stringtext15
  7027     19D0                     __pstringtext15:
  7028     19D0                     STR_34:
  7029     19D0  3430               	retlw	48	;'0'
  7030     19D1  3431               	retlw	49	;'1'
  7031     19D2  3432               	retlw	50	;'2'
  7032     19D3  3433               	retlw	51	;'3'
  7033     19D4  3434               	retlw	52	;'4'
  7034     19D5  3435               	retlw	53	;'5'
  7035     19D6  3436               	retlw	54	;'6'
  7036     19D7  3437               	retlw	55	;'7'
  7037     19D8  3438               	retlw	56	;'8'
  7038     19D9  3439               	retlw	57	;'9'
  7039     19DA  3461               	retlw	97	;'a'
  7040     19DB  3462               	retlw	98	;'b'
  7041     19DC  3463               	retlw	99	;'c'
  7042     19DD  3464               	retlw	100	;'d'
  7043     19DE  3465               	retlw	101	;'e'
  7044     19DF  3466               	retlw	102	;'f'
  7045     19E0  3400               	retlw	0
  7046                           
  7047                           	psect	stringtext16
  7048     19E1                     __pstringtext16:
  7049     19E1                     STR_24:
  7050     19E1  3462               	retlw	98	;'b'
  7051     19E2  3431               	retlw	49	;'1'
  7052     19E3  3420               	retlw	32	;' '
  7053     19E4  346C               	retlw	108	;'l'
  7054     19E5  346F               	retlw	111	;'o'
  7055     19E6  346E               	retlw	110	;'n'
  7056     19E7  3467               	retlw	103	;'g'
  7057     19E8  3420               	retlw	32	;' '
  7058     19E9  3470               	retlw	112	;'p'
  7059     19EA  3472               	retlw	114	;'r'
  7060     19EB  3465               	retlw	101	;'e'
  7061     19EC  3473               	retlw	115	;'s'
  7062     19ED  3473               	retlw	115	;'s'
  7063     19EE  3420               	retlw	32	;' '
  7064     19EF  340D               	retlw	13
  7065     19F0  340A               	retlw	10
  7066     19F1  3400               	retlw	0
  7067                           
  7068                           	psect	stringtext17
  7069     19F2                     __pstringtext17:
  7070     19F2                     STR_25:
  7071     19F2  3462               	retlw	98	;'b'
  7072     19F3  3432               	retlw	50	;'2'
  7073     19F4  3420               	retlw	32	;' '
  7074     19F5  346C               	retlw	108	;'l'
  7075     19F6  346F               	retlw	111	;'o'
  7076     19F7  346E               	retlw	110	;'n'
  7077     19F8  3467               	retlw	103	;'g'
  7078     19F9  3420               	retlw	32	;' '
  7079     19FA  3470               	retlw	112	;'p'
  7080     19FB  3472               	retlw	114	;'r'
  7081     19FC  3465               	retlw	101	;'e'
  7082     19FD  3473               	retlw	115	;'s'
  7083     19FE  3473               	retlw	115	;'s'
  7084     19FF  3420               	retlw	32	;' '
  7085     1A00  340D               	retlw	13
  7086     1A01  340A               	retlw	10
  7087     1A02  3400               	retlw	0
  7088                           
  7089                           	psect	stringtext18
  7090     1A03                     __pstringtext18:
  7091     1A03                     STR_22:
  7092     1A03  3462               	retlw	98	;'b'
  7093     1A04  3431               	retlw	49	;'1'
  7094     1A05  3420               	retlw	32	;' '
  7095     1A06  3463               	retlw	99	;'c'
  7096     1A07  346C               	retlw	108	;'l'
  7097     1A08  3469               	retlw	105	;'i'
  7098     1A09  3463               	retlw	99	;'c'
  7099     1A0A  346B               	retlw	107	;'k'
  7100     1A0B  3465               	retlw	101	;'e'
  7101     1A0C  3464               	retlw	100	;'d'
  7102     1A0D  340D               	retlw	13
  7103     1A0E  340A               	retlw	10
  7104     1A0F  3400               	retlw	0
  7105                           
  7106                           	psect	stringtext19
  7107     1A10                     __pstringtext19:
  7108     1A10                     STR_23:
  7109     1A10  3462               	retlw	98	;'b'
  7110     1A11  3432               	retlw	50	;'2'
  7111     1A12  3420               	retlw	32	;' '
  7112     1A13  3463               	retlw	99	;'c'
  7113     1A14  346C               	retlw	108	;'l'
  7114     1A15  3469               	retlw	105	;'i'
  7115     1A16  3463               	retlw	99	;'c'
  7116     1A17  346B               	retlw	107	;'k'
  7117     1A18  3465               	retlw	101	;'e'
  7118     1A19  3464               	retlw	100	;'d'
  7119     1A1A  340D               	retlw	13
  7120     1A1B  340A               	retlw	10
  7121     1A1C  3400               	retlw	0
  7122                           
  7123                           	psect	stringtext20
  7124     1A29                     __pstringtext20:
  7125     1A29                     STR_28:
  7126     1A29  3454               	retlw	84	;'T'
  7127     1A2A  3445               	retlw	69	;'E'
  7128     1A2B  344D               	retlw	77	;'M'
  7129     1A2C  3450               	retlw	80	;'P'
  7130     1A2D  343A               	retlw	58	;':'
  7131     1A2E  3420               	retlw	32	;' '
  7132     1A2F  3425               	retlw	37	;'%'
  7133     1A30  3475               	retlw	117	;'u'
  7134     1A31  340D               	retlw	13
  7135     1A32  340A               	retlw	10
  7136     1A33  3400               	retlw	0
  7137                           
  7138                           	psect	stringtext21
  7139     1A34                     __pstringtext21:
  7140     1A34                     STR_3:
  7141     1A34  3430               	retlw	48	;'0'
  7142     1A35  3441               	retlw	65	;'A'
  7143     1A36  3430               	retlw	48	;'0'
  7144     1A37  3431               	retlw	49	;'1'
  7145     1A38  3438               	retlw	56	;'8'
  7146     1A39  3432               	retlw	50	;'2'
  7147     1A3A  3430               	retlw	48	;'0'
  7148     1A3B  3430               	retlw	48	;'0'
  7149     1A3C  3430               	retlw	48	;'0'
  7150     1A3D  3431               	retlw	49	;'1'
  7151     1A3E  3400               	retlw	0
  7152                           
  7153                           	psect	stringtext22
  7154     1A49                     __pstringtext22:
  7155     1A49                     STR_27:
  7156     1A49  3450               	retlw	80	;'P'
  7157     1A4A  3448               	retlw	72	;'H'
  7158     1A4B  343A               	retlw	58	;':'
  7159     1A4C  3420               	retlw	32	;' '
  7160     1A4D  3425               	retlw	37	;'%'
  7161     1A4E  3475               	retlw	117	;'u'
  7162     1A4F  340D               	retlw	13
  7163     1A50  340A               	retlw	10
  7164     1A51  3400               	retlw	0
  7165                           
  7166                           	psect	stringtext23
  7167     1A52                     __pstringtext23:
  7168     1A52                     STR_2:
  7169     1A52  3473               	retlw	115	;'s'
  7170     1A53  346E               	retlw	110	;'n'
  7171     1A54  343A               	retlw	58	;':'
  7172     1A55  3420               	retlw	32	;' '
  7173     1A56  3425               	retlw	37	;'%'
  7174     1A57  3473               	retlw	115	;'s'
  7175     1A58  340D               	retlw	13
  7176     1A59  340A               	retlw	10
  7177     1A5A  3400               	retlw	0
  7178                           
  7179                           	psect	stringtext24
  7180     1A5B                     __pstringtext24:
  7181     1A5B                     STR_5:
  7182     1A5B  3473               	retlw	115	;'s'
  7183     1A5C  3461               	retlw	97	;'a'
  7184     1A5D  3476               	retlw	118	;'v'
  7185     1A5E  3465               	retlw	101	;'e'
  7186     1A5F  3464               	retlw	100	;'d'
  7187     1A60  340D               	retlw	13
  7188     1A61  340A               	retlw	10
  7189     1A62  3400               	retlw	0
  7190                           
  7191                           	psect	stringtext25
  7192     1A63                     __pstringtext25:
  7193     1A63                     STR_32:
  7194     1A63  3428               	retlw	40	;'('
  7195     1A64  346E               	retlw	110	;'n'
  7196     1A65  3475               	retlw	117	;'u'
  7197     1A66  346C               	retlw	108	;'l'
  7198     1A67  346C               	retlw	108	;'l'
  7199     1A68  3429               	retlw	41	;')'
  7200     1A69  3400               	retlw	0
  7201                           
  7202                           	psect	stringtext26
  7203     1A6A                     __pstringtext26:
  7204     1A6A                     STR_18:
  7205     1A6A  3425               	retlw	37	;'%'
  7206     1A6B  3430               	retlw	48	;'0'
  7207     1A6C  3432               	retlw	50	;'2'
  7208     1A6D  3458               	retlw	88	;'X'
  7209     1A6E  3420               	retlw	32	;' '
  7210     1A6F  3400               	retlw	0
  7211                           
  7212                           	psect	stringtext27
  7213     1A70                     __pstringtext27:
  7214     1A70                     STR_12:
  7215     1A70  3425               	retlw	37	;'%'
  7216     1A71  3430               	retlw	48	;'0'
  7217     1A72  3438               	retlw	56	;'8'
  7218     1A73  3478               	retlw	120	;'x'
  7219     1A74  343A               	retlw	58	;':'
  7220     1A75  3400               	retlw	0
  7221                           
  7222                           	psect	stringtext28
  7223     1A76                     __pstringtext28:
  7224     1A76                     STR_13:
  7225     1A76  3420               	retlw	32	;' '
  7226     1A77  3425               	retlw	37	;'%'
  7227     1A78  3430               	retlw	48	;'0'
  7228     1A79  3432               	retlw	50	;'2'
  7229     1A7A  3478               	retlw	120	;'x'
  7230     1A7B  3400               	retlw	0
  7231                           
  7232                           	psect	stringtext29
  7233     1A7C                     __pstringtext29:
  7234     1A7C                     STR_14:
  7235     1A7C  3420               	retlw	32	;' '
  7236     1A7D  3420               	retlw	32	;' '
  7237     1A7E  3420               	retlw	32	;' '
  7238     1A7F  3400               	retlw	0
  7239                           
  7240                           	psect	stringtext30
  7241     1A80                     __pstringtext30:
  7242     1A80                     STR_16:
  7243     1A80  3425               	retlw	37	;'%'
  7244     1A81  3463               	retlw	99	;'c'
  7245     1A82  3400               	retlw	0
  7246                           
  7247                           	psect	stringtext31
  7248     0000                     __pstringtext31:
  7249     18B6                     
  7250                           	psect	cinit
  7251     006B                     start_initialization:	
  7252                           ; #config settings
  7253                           
  7254     006B                     __initialization:
  7255                           
  7256                           ; Initialize objects allocated to BANK2
  7257     006B  302A               	movlw	low __pidataBANK2
  7258     006C  0084               	movwf	4
  7259     006D  309D               	movlw	(high __pidataBANK2)| (0+128)
  7260     006E  0085               	movwf	5
  7261     006F  305D               	movlw	low __pdataBANK2
  7262     0070  0086               	movwf	6
  7263     0071  3001               	movlw	high __pdataBANK2
  7264     0072  0087               	movwf	7
  7265     0073  3010               	movlw	16
  7266     0074  3187  27FA  3180   	fcall	init_ram
  7267                           
  7268                           ; Initialize objects allocated to BANK3
  7269     0077  301A               	movlw	low __pidataBANK3
  7270     0078  0084               	movwf	4
  7271     0079  309D               	movlw	(high __pidataBANK3)| (0+128)
  7272     007A  0085               	movwf	5
  7273     007B  30E0               	movlw	low __pdataBANK3
  7274     007C  0086               	movwf	6
  7275     007D  3001               	movlw	high __pdataBANK3
  7276     007E  0087               	movwf	7
  7277     007F  3010               	movlw	16
  7278     0080  3187  27FA  3180   	fcall	init_ram
  7279                           
  7280                           ; Initialize objects allocated to BANK4
  7281     0083  3055               	movlw	low __pidataBANK4
  7282     0084  0084               	movwf	4
  7283     0085  3092               	movlw	(high __pidataBANK4)| (0+128)
  7284     0086  0085               	movwf	5
  7285     0087  3020               	movlw	low __pdataBANK4
  7286     0088  0086               	movwf	6
  7287     0089  3002               	movlw	high __pdataBANK4
  7288     008A  0087               	movwf	7
  7289     008B  3040               	movlw	64
  7290     008C  3187  27FA  3180   	fcall	init_ram
  7291                           
  7292                           ; Initialize objects allocated to BANK5
  7293     008F  3002               	movlw	low __pidataBANK5
  7294     0090  0084               	movwf	4
  7295     0091  3088               	movlw	(high __pidataBANK5)| (0+128)
  7296     0092  0085               	movwf	5
  7297     0093  30C0               	movlw	low __pdataBANK5
  7298     0094  0086               	movwf	6
  7299     0095  3002               	movlw	high __pdataBANK5
  7300     0096  0087               	movwf	7
  7301     0097  3020               	movlw	32
  7302     0098  3187  27FA  3180   	fcall	init_ram
  7303                           
  7304                           ; Clear objects allocated to COMMON
  7305     009B  01F8               	clrf	__pbssCOMMON& (0+127)
  7306     009C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  7307     009D  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  7308     009E  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  7309     009F  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  7310     00A0  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  7311                           
  7312                           ; Clear objects allocated to BANK0
  7313     00A1  01EF               	clrf	__pbssBANK0& (0+127)
  7314                           
  7315                           ; Clear objects allocated to BANK1
  7316     00A2  0141               	movlb	1	; select bank1
  7317     00A3  01EE               	clrf	__pbssBANK1& (0+127)
  7318     00A4  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  7319                           
  7320                           ; Clear objects allocated to BANK2
  7321     00A5  3020               	movlw	low __pbssBANK2
  7322     00A6  0084               	movwf	4
  7323     00A7  3001               	movlw	high __pbssBANK2
  7324     00A8  0085               	movwf	5
  7325     00A9  303D               	movlw	61
  7326     00AA  319C  246C  3180   	fcall	clear_ram0
  7327                           
  7328                           ; Clear objects allocated to BANK3
  7329     00AD  30A0               	movlw	low __pbssBANK3
  7330     00AE  0084               	movwf	4
  7331     00AF  3001               	movlw	high __pbssBANK3
  7332     00B0  0085               	movwf	5
  7333     00B1  3040               	movlw	64
  7334     00B2  319C  246C  3180   	fcall	clear_ram0
  7335                           
  7336                           ; Clear objects allocated to BANK5
  7337     00B5  30A0               	movlw	low __pbssBANK5
  7338     00B6  0084               	movwf	4
  7339     00B7  3002               	movlw	high __pbssBANK5
  7340     00B8  0085               	movwf	5
  7341     00B9  3020               	movlw	32
  7342     00BA  319C  246C  3180   	fcall	clear_ram0
  7343     00BD                     end_of_initialization:	
  7344                           ;End of C runtime variable initialization code
  7345                           
  7346     00BD                     __end_of__initialization:
  7347     00BD  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7348     00BE  0140               	movlb	0
  7349     00BF  318B  2BEC         	ljmp	_main	;jump to C main() function
  7350                           
  7351                           	psect	bssCOMMON
  7352     0078                     __pbssCOMMON:
  7353     0078                     _ticks:
  7354     0078                     	ds	4
  7355     007C                     _currentRegister:
  7356     007C                     	ds	1
  7357     007D                     _rxbuffer_index:
  7358     007D                     	ds	1
  7359                           
  7360                           	psect	bssBANK0
  7361     006F                     __pbssBANK0:
  7362     006F                     _uart_rx_states:
  7363     006F                     	ds	1
  7364                           
  7365                           	psect	bssBANK1
  7366     00EE                     __pbssBANK1:
  7367     00EE                     _currentState:
  7368     00EE                     	ds	1
  7369     00EF                     _uart_rx_package_event:
  7370     00EF                     	ds	1
  7371                           
  7372                           	psect	bssBANK2
  7373     0120                     __pbssBANK2:
  7374     0120                     _rxbuffer:
  7375     0120                     	ds	32
  7376     0140                     delay_state@prev_ticks_delay:
  7377     0140                     	ds	4
  7378     0144                     main@prev_ticks2:
  7379     0144                     	ds	4
  7380     0148                     main@rev_ticks_btn_399:
  7381     0148                     	ds	4
  7382     014C                     main@prev_ticks_monitor:
  7383     014C                     	ds	4
  7384     0150                     main@prev_ticks:
  7385     0150                     	ds	4
  7386     0154                     main@prev_ticks_btn:
  7387     0154                     	ds	4
  7388     0158                     _uart_rx_ticks:
  7389     0158                     	ds	4
  7390     015C                     _tmp:
  7391     015C                     	ds	1
  7392                           
  7393                           	psect	dataBANK2
  7394     015D                     __pdataBANK2:
  7395     015D                     _test_recived_data:
  7396     015D                     	ds	8
  7397     0165                     measured_adc@F10601:
  7398     0165                     	ds	8
  7399                           
  7400                           	psect	bssBANK3
  7401     01A0                     __pbssBANK3:
  7402     01A0                     _slaveData:
  7403     01A0                     	ds	64
  7404                           
  7405                           	psect	dataBANK3
  7406     01E0                     __pdataBANK3:
  7407     01E0                     save_bottom_adc_point@F10616:
  7408     01E0                     	ds	8
  7409     01E8                     save_top_adc_point@F10610:
  7410     01E8                     	ds	8
  7411                           
  7412                           	psect	dataBANK4
  7413     0220                     __pdataBANK4:
  7414     0220                     set_top_calibrate_point@F10594:
  7415     0220                     	ds	32
  7416     0240                     send_measured_command@F10568:
  7417     0240                     	ds	32
  7418                           
  7419                           	psect	bssBANK5
  7420     02A0                     __pbssBANK5:
  7421     02A0                     EUSART1_Read_1@F10504:
  7422     02A0                     	ds	32
  7423                           
  7424                           	psect	dataBANK5
  7425     02C0                     __pdataBANK5:
  7426     02C0                     set_bottom_calibrate_point@F10597:
  7427     02C0                     	ds	32
  7428                           
  7429                           	psect	inittext
  7430     07FA                     init_ram:
  7431     07FA  00FE               	movwf	btemp
  7432     07FB                     initloop:
  7433     07FB  0012               	moviw fsr0++
  7434     07FC  001E               	movwi fsr1++
  7435     07FD  0BFE               	decfsz	btemp,f
  7436     07FE  2FFB               	goto	initloop
  7437     07FF  3400               	retlw	0
  7438                           
  7439                           	psect	clrtext
  7440     1C6C                     clear_ram0:	
  7441                           ;	Called with FSR0 containing the base address, and
  7442                           ;	WREG with the size to clear
  7443                           
  7444     1C6C  0064               	clrwdt	;clear the watchdog before getting into this loop
  7445     1C6D                     clrloop0:
  7446     1C6D  0180               	clrf	0	;clear RAM location pointed to by FSR
  7447     1C6E  3101               	addfsr 0,1
  7448     1C6F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7449     1C70  2C6D               	goto	clrloop0	;have we reached the end yet?
  7450     1C71  3400               	retlw	0	;all done for this memory range, return
  7451                           
  7452                           	psect	cstackBANK1
  7453     00A0                     __pcstackBANK1:
  7454     00A0                     main@b2_clicked_count:
  7455                           
  7456                           ; 1 bytes @ 0x0
  7457     00A0                     	ds	1
  7458     00A1                     main@b1_clicked_count:
  7459                           
  7460                           ; 1 bytes @ 0x1
  7461     00A1                     	ds	1
  7462     00A2                     main@now:
  7463                           
  7464                           ; 4 bytes @ 0x2
  7465     00A2                     	ds	4
  7466     00A6                     main@state:
  7467                           
  7468                           ; 1 bytes @ 0x6
  7469     00A6                     	ds	1
  7470     00A7                     main@sensor_value:
  7471                           
  7472                           ; 17 bytes @ 0x7
  7473     00A7                     	ds	17
  7474     00B8                     main@b1:
  7475                           
  7476                           ; 27 bytes @ 0x18
  7477     00B8                     	ds	27
  7478     00D3                     main@b2:
  7479                           
  7480                           ; 27 bytes @ 0x33
  7481     00D3                     	ds	27
  7482                           
  7483                           	psect	cstackCOMMON
  7484     0070                     __pcstackCOMMON:
  7485     0070                     ?_isprint:
  7486     0070                     ?_isdigit:	
  7487                           ; 1 bit 
  7488                           
  7489     0070                     ?_isspace:	
  7490                           ; 1 bit 
  7491                           
  7492     0070                     ?_isalpha:	
  7493                           ; 1 bit 
  7494                           
  7495     0070                     ?_isupper:	
  7496                           ; 1 bit 
  7497                           
  7498     0070                     ?_PMD_Initialize:	
  7499                           ; 1 bit 
  7500                           
  7501     0070                     ?_PIN_MANAGER_Initialize:	
  7502                           ; 1 bytes @ 0x0
  7503                           
  7504     0070                     ?_OSCILLATOR_Initialize:	
  7505                           ; 1 bytes @ 0x0
  7506                           
  7507     0070                     ?_tmr0_init:	
  7508                           ; 1 bytes @ 0x0
  7509                           
  7510     0070                     ?_usart_init:	
  7511                           ; 1 bytes @ 0x0
  7512                           
  7513     0070                     ?_i2c_slave_init:	
  7514                           ; 1 bytes @ 0x0
  7515                           
  7516     0070                     ?_enable_uart_printf:	
  7517                           ; 1 bytes @ 0x0
  7518                           
  7519     0070                     ?_enable_tx_transmit:	
  7520                           ; 1 bytes @ 0x0
  7521                           
  7522     0070                     ?_init_button:	
  7523                           ; 1 bytes @ 0x0
  7524                           
  7525     0070                     ?_measured_adc:	
  7526                           ; 1 bytes @ 0x0
  7527                           
  7528     0070                     ?_get_measured_adc_value:	
  7529                           ; 1 bytes @ 0x0
  7530                           
  7531     0070                     ?_dump_memory_map:	
  7532                           ; 1 bytes @ 0x0
  7533                           
  7534     0070                     ?_get_measured_value:	
  7535                           ; 1 bytes @ 0x0
  7536                           
  7537     0070                     ?_Enable_Global_Interrupt:	
  7538                           ; 1 bytes @ 0x0
  7539                           
  7540     0070                     ?_Disable_Global_Interrupt:	
  7541                           ; 1 bytes @ 0x0
  7542                           
  7543     0070                     ?_set_device_serial_number_to_i2c_slave_memorymap:	
  7544                           ; 1 bytes @ 0x0
  7545                           
  7546     0070                     ?_send_measured_command:	
  7547                           ; 1 bytes @ 0x0
  7548                           
  7549     0070                     ?_toupper:	
  7550                           ; 1 bytes @ 0x0
  7551                           
  7552     0070                     ?_SYSTEM_Initialize:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555     0070                     ?_main:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558     0070                     ?_i2c_slave_interrupt:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561     0070                     ??_i2c_slave_interrupt:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564     0070                     ?_LED_flashes_three_times:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567     0070                     ?_is_single_click:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570     0070                     ?_is_long_press:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573     0070                     ?_reset_single_click_flag:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576     0070                     ?_reset_long_press_flag:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579     0070                     ?_putch:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582     0070                     ?_EUSART1_Write:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585     0070                     ?_INTERRUPT_InterruptManager:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588     0070                     ?_get_ticks:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591                           
  7592                           ; 4 bytes @ 0x0
  7593     0070                     	ds	1
  7594     0071                     i2c_slave_interrupt@isRead:
  7595                           
  7596                           ; 1 bytes @ 0x1
  7597     0071                     	ds	1
  7598     0072                     i2c_slave_interrupt@isNack:
  7599                           
  7600                           ; 1 bytes @ 0x2
  7601     0072                     	ds	1
  7602     0073                     i2c_slave_interrupt@value:
  7603                           
  7604                           ; 1 bytes @ 0x3
  7605     0073                     	ds	1
  7606     0074                     ??_get_ticks:
  7607     0074                     ??_INTERRUPT_InterruptManager:	
  7608                           ; 1 bytes @ 0x4
  7609                           
  7610                           
  7611                           ; 1 bytes @ 0x4
  7612     0074                     	ds	4
  7613                           
  7614                           	psect	cstackBANK0
  7615     0020                     __pcstackBANK0:
  7616     0020                     ??_PMD_Initialize:
  7617     0020                     ??_PIN_MANAGER_Initialize:	
  7618                           ; 1 bytes @ 0x0
  7619                           
  7620     0020                     ??_OSCILLATOR_Initialize:	
  7621                           ; 1 bytes @ 0x0
  7622                           
  7623     0020                     ??_tmr0_init:	
  7624                           ; 1 bytes @ 0x0
  7625                           
  7626     0020                     ??_usart_init:	
  7627                           ; 1 bytes @ 0x0
  7628                           
  7629     0020                     ??_i2c_slave_init:	
  7630                           ; 1 bytes @ 0x0
  7631                           
  7632     0020                     ??_enable_uart_printf:	
  7633                           ; 1 bytes @ 0x0
  7634                           
  7635     0020                     ??_enable_tx_transmit:	
  7636                           ; 1 bytes @ 0x0
  7637                           
  7638     0020                     ??_init_button:	
  7639                           ; 1 bytes @ 0x0
  7640                           
  7641     0020                     ?_dispatch:	
  7642                           ; 1 bytes @ 0x0
  7643                           
  7644     0020                     ??_get_measured_adc_value:	
  7645                           ; 1 bytes @ 0x0
  7646                           
  7647     0020                     ??_Enable_Global_Interrupt:	
  7648                           ; 1 bytes @ 0x0
  7649                           
  7650     0020                     ?_i2c_slave_set_register:	
  7651                           ; 1 bytes @ 0x0
  7652                           
  7653     0020                     ??_Disable_Global_Interrupt:	
  7654                           ; 1 bytes @ 0x0
  7655                           
  7656     0020                     ??_isprint:	
  7657                           ; 1 bytes @ 0x0
  7658                           
  7659     0020                     ??_isdigit:	
  7660                           ; 1 bytes @ 0x0
  7661                           
  7662     0020                     ??_isspace:	
  7663                           ; 1 bytes @ 0x0
  7664                           
  7665     0020                     ??_toupper:	
  7666                           ; 1 bytes @ 0x0
  7667                           
  7668     0020                     ??_isupper:	
  7669                           ; 1 bytes @ 0x0
  7670                           
  7671     0020                     ??_SYSTEM_Initialize:	
  7672                           ; 1 bytes @ 0x0
  7673                           
  7674     0020                     ??_LED_flashes_three_times:	
  7675                           ; 1 bytes @ 0x0
  7676                           
  7677     0020                     ?___is_single_click:	
  7678                           ; 1 bytes @ 0x0
  7679                           
  7680     0020                     ?___is_double_click:	
  7681                           ; 1 bytes @ 0x0
  7682                           
  7683     0020                     ?___is_long_press:	
  7684                           ; 1 bytes @ 0x0
  7685                           
  7686     0020                     ??_is_single_click:	
  7687                           ; 1 bytes @ 0x0
  7688                           
  7689     0020                     ??_is_long_press:	
  7690                           ; 1 bytes @ 0x0
  7691                           
  7692     0020                     ??_reset_single_click_flag:	
  7693                           ; 1 bytes @ 0x0
  7694                           
  7695     0020                     ??_reset_long_press_flag:	
  7696                           ; 1 bytes @ 0x0
  7697                           
  7698     0020                     ??_putch:	
  7699                           ; 1 bytes @ 0x0
  7700                           
  7701     0020                     ??_EUSART1_Write:	
  7702                           ; 1 bytes @ 0x0
  7703                           
  7704     0020                     ?___bmul:	
  7705                           ; 1 bytes @ 0x0
  7706                           
  7707     0020                     ?__Umul8_16:	
  7708                           ; 1 bytes @ 0x0
  7709                           
  7710     0020                     ?_crc16_modbus:	
  7711                           ; 2 bytes @ 0x0
  7712                           
  7713     0020                     ?___wmul:	
  7714                           ; 2 bytes @ 0x0
  7715                           
  7716     0020                     ?___lwdiv:	
  7717                           ; 2 bytes @ 0x0
  7718                           
  7719     0020                     ?_calculate_diff:	
  7720                           ; 2 bytes @ 0x0
  7721                           
  7722     0020                     ?_get_ticks_with_lock:	
  7723                           ; 4 bytes @ 0x0
  7724                           
  7725     0020                     ?___lmul:	
  7726                           ; 4 bytes @ 0x0
  7727                           
  7728     0020                     i2c_slave_set_register@value:	
  7729                           ; 4 bytes @ 0x0
  7730                           
  7731     0020                     init_button@b:	
  7732                           ; 1 bytes @ 0x0
  7733                           
  7734     0020                     is_single_click@b:	
  7735                           ; 1 bytes @ 0x0
  7736                           
  7737     0020                     is_long_press@b:	
  7738                           ; 1 bytes @ 0x0
  7739                           
  7740     0020                     reset_single_click_flag@b:	
  7741                           ; 1 bytes @ 0x0
  7742                           
  7743     0020                     reset_long_press_flag@b:	
  7744                           ; 1 bytes @ 0x0
  7745                           
  7746     0020                     putch@data:	
  7747                           ; 1 bytes @ 0x0
  7748                           
  7749     0020                     EUSART1_Write@txData:	
  7750                           ; 1 bytes @ 0x0
  7751                           
  7752     0020                     dispatch@b1:	
  7753                           ; 1 bytes @ 0x0
  7754                           
  7755     0020                     crc16_modbus@len:	
  7756                           ; 1 bytes @ 0x0
  7757                           
  7758     0020                     get_measured_adc_value@sensor_value:	
  7759                           ; 1 bytes @ 0x0
  7760                           
  7761     0020                     ___bmul@multiplicand:	
  7762                           ; 1 bytes @ 0x0
  7763                           
  7764     0020                     __Umul8_16@multiplicand:	
  7765                           ; 1 bytes @ 0x0
  7766                           
  7767     0020                     _isdigit$1931:	
  7768                           ; 1 bytes @ 0x0
  7769                           
  7770     0020                     _isprint$1934:	
  7771                           ; 1 bytes @ 0x0
  7772                           
  7773     0020                     _isspace$1968:	
  7774                           ; 1 bytes @ 0x0
  7775                           
  7776     0020                     _isupper$1971:	
  7777                           ; 1 bytes @ 0x0
  7778                           
  7779     0020                     ___wmul@multiplier:	
  7780                           ; 1 bytes @ 0x0
  7781                           
  7782     0020                     ___lwdiv@divisor:	
  7783                           ; 2 bytes @ 0x0
  7784                           
  7785     0020                     calculate_diff@now:	
  7786                           ; 2 bytes @ 0x0
  7787                           
  7788     0020                     ___is_single_click@now:	
  7789                           ; 4 bytes @ 0x0
  7790                           
  7791     0020                     ___is_double_click@now:	
  7792                           ; 4 bytes @ 0x0
  7793                           
  7794     0020                     ___is_long_press@now:	
  7795                           ; 4 bytes @ 0x0
  7796                           
  7797     0020                     ___lmul@multiplier:	
  7798                           ; 4 bytes @ 0x0
  7799                           
  7800                           
  7801                           ; 4 bytes @ 0x0
  7802     0020                     	ds	1
  7803     0021                     ??_i2c_slave_set_register:
  7804     0021                     ?_EUSART1_Write_1:	
  7805                           ; 1 bytes @ 0x1
  7806                           
  7807     0021                     ??___bmul:	
  7808                           ; 1 bytes @ 0x1
  7809                           
  7810     0021                     i2c_slave_init@i:	
  7811                           ; 1 bytes @ 0x1
  7812                           
  7813     0021                     i2c_slave_set_register@registerAddress:	
  7814                           ; 1 bytes @ 0x1
  7815                           
  7816     0021                     EUSART1_Write_1@length:	
  7817                           ; 1 bytes @ 0x1
  7818                           
  7819     0021                     dispatch@b2:	
  7820                           ; 1 bytes @ 0x1
  7821                           
  7822     0021                     isdigit@c:	
  7823                           ; 1 bytes @ 0x1
  7824                           
  7825     0021                     isprint@c:	
  7826                           ; 1 bytes @ 0x1
  7827                           
  7828     0021                     isspace@c:	
  7829                           ; 1 bytes @ 0x1
  7830                           
  7831     0021                     isupper@c:	
  7832                           ; 1 bytes @ 0x1
  7833                           
  7834     0021                     toupper@c:	
  7835                           ; 1 bytes @ 0x1
  7836                           
  7837     0021                     LED_flashes_three_times@i:	
  7838                           ; 1 bytes @ 0x1
  7839                           
  7840                           
  7841                           ; 2 bytes @ 0x1
  7842     0021                     	ds	1
  7843     0022                     ??__Umul8_16:
  7844     0022                     ??_isalpha:	
  7845                           ; 1 bytes @ 0x2
  7846                           
  7847     0022                     ?_i2c_slave_set_register_with_lock:	
  7848                           ; 1 bytes @ 0x2
  7849                           
  7850     0022                     ??_EUSART1_Write_1:	
  7851                           ; 1 bytes @ 0x2
  7852                           
  7853     0022                     ??_crc16_modbus:	
  7854                           ; 1 bytes @ 0x2
  7855                           
  7856     0022                     i2c_slave_set_register_with_lock@value:	
  7857                           ; 1 bytes @ 0x2
  7858                           
  7859     0022                     dispatch@b1_clicked_count_ptr:	
  7860                           ; 1 bytes @ 0x2
  7861                           
  7862     0022                     ___bmul@product:	
  7863                           ; 1 bytes @ 0x2
  7864                           
  7865     0022                     _isalpha$1965:	
  7866                           ; 1 bytes @ 0x2
  7867                           
  7868     0022                     ___wmul@multiplicand:	
  7869                           ; 1 bytes @ 0x2
  7870                           
  7871     0022                     ___lwdiv@dividend:	
  7872                           ; 2 bytes @ 0x2
  7873                           
  7874                           
  7875                           ; 2 bytes @ 0x2
  7876     0022                     	ds	1
  7877     0023                     ??_i2c_slave_set_register_with_lock:
  7878     0023                     i2c_slave_set_register_with_lock@registerAddress:	
  7879                           ; 1 bytes @ 0x3
  7880                           
  7881     0023                     EUSART1_Write_1@i:	
  7882                           ; 1 bytes @ 0x3
  7883                           
  7884     0023                     dispatch@b2_clicked_count_ptr:	
  7885                           ; 1 bytes @ 0x3
  7886                           
  7887     0023                     ___bmul@multiplier:	
  7888                           ; 1 bytes @ 0x3
  7889                           
  7890     0023                     isalpha@c:	
  7891                           ; 1 bytes @ 0x3
  7892                           
  7893                           
  7894                           ; 1 bytes @ 0x3
  7895     0023                     	ds	1
  7896     0024                     ??_get_ticks_with_lock:
  7897     0024                     ??_dispatch:	
  7898                           ; 1 bytes @ 0x4
  7899                           
  7900     0024                     ??___is_single_click:	
  7901                           ; 1 bytes @ 0x4
  7902                           
  7903     0024                     ??___is_double_click:	
  7904                           ; 1 bytes @ 0x4
  7905                           
  7906     0024                     ??___is_long_press:	
  7907                           ; 1 bytes @ 0x4
  7908                           
  7909     0024                     ??___wmul:	
  7910                           ; 1 bytes @ 0x4
  7911                           
  7912     0024                     ??___lwdiv:	
  7913                           ; 1 bytes @ 0x4
  7914                           
  7915     0024                     EUSART1_Write_1@txbuf:	
  7916                           ; 1 bytes @ 0x4
  7917                           
  7918     0024                     dispatch@b1_clicked_count:	
  7919                           ; 1 bytes @ 0x4
  7920                           
  7921     0024                     ___wmul@product:	
  7922                           ; 1 bytes @ 0x4
  7923                           
  7924     0024                     __Umul8_16@product:	
  7925                           ; 2 bytes @ 0x4
  7926                           
  7927     0024                     get_ticks_with_lock@result:	
  7928                           ; 2 bytes @ 0x4
  7929                           
  7930     0024                     calculate_diff@prev_ticks:	
  7931                           ; 4 bytes @ 0x4
  7932                           
  7933     0024                     ___lmul@multiplicand:	
  7934                           ; 4 bytes @ 0x4
  7935                           
  7936                           
  7937                           ; 4 bytes @ 0x4
  7938     0024                     	ds	1
  7939     0025                     ??_send_measured_command:
  7940     0025                     dispatch@b2_clicked_count:	
  7941                           ; 1 bytes @ 0x5
  7942                           
  7943     0025                     crc16_modbus@poly:	
  7944                           ; 1 bytes @ 0x5
  7945                           
  7946     0025                     ___lwdiv@quotient:	
  7947                           ; 2 bytes @ 0x5
  7948                           
  7949                           
  7950                           ; 2 bytes @ 0x5
  7951     0025                     	ds	1
  7952     0026                     dispatch@state:
  7953     0026                     __Umul8_16@word_mpld:	
  7954                           ; 1 bytes @ 0x6
  7955                           
  7956     0026                     send_measured_command@txbuf:	
  7957                           ; 2 bytes @ 0x6
  7958                           
  7959                           
  7960                           ; 32 bytes @ 0x6
  7961     0026                     	ds	1
  7962     0027                     crc16_modbus@data:
  7963     0027                     ___lwdiv@counter:	
  7964                           ; 1 bytes @ 0x7
  7965                           
  7966                           
  7967                           ; 1 bytes @ 0x7
  7968     0027                     	ds	1
  7969     0028                     ??_calculate_diff:
  7970     0028                     ??___lmul:	
  7971                           ; 1 bytes @ 0x8
  7972                           
  7973     0028                     ?___lwmod:	
  7974                           ; 1 bytes @ 0x8
  7975                           
  7976     0028                     __Umul8_16@multiplier:	
  7977                           ; 2 bytes @ 0x8
  7978                           
  7979     0028                     crc16_modbus@i:	
  7980                           ; 1 bytes @ 0x8
  7981                           
  7982     0028                     ___lwmod@divisor:	
  7983                           ; 2 bytes @ 0x8
  7984                           
  7985     0028                     ___lmul@product:	
  7986                           ; 2 bytes @ 0x8
  7987                           
  7988                           
  7989                           ; 4 bytes @ 0x8
  7990     0028                     	ds	1
  7991     0029                     ?___flmul:
  7992     0029                     ___flmul@b:	
  7993                           ; 4 bytes @ 0x9
  7994                           
  7995                           
  7996                           ; 4 bytes @ 0x9
  7997     0029                     	ds	1
  7998     002A                     crc16_modbus@j:
  7999     002A                     ___lwmod@dividend:	
  8000                           ; 2 bytes @ 0xA
  8001                           
  8002                           
  8003                           ; 2 bytes @ 0xA
  8004     002A                     	ds	2
  8005     002C                     ??___lwmod:
  8006     002C                     ?_strtol:	
  8007                           ; 1 bytes @ 0xC
  8008                           
  8009     002C                     ___is_single_click@condition1:	
  8010                           ; 4 bytes @ 0xC
  8011                           
  8012     002C                     ___is_double_click@condition1:	
  8013                           ; 1 bytes @ 0xC
  8014                           
  8015     002C                     ___is_long_press@condition1:	
  8016                           ; 1 bytes @ 0xC
  8017                           
  8018     002C                     strtol@endptr:	
  8019                           ; 1 bytes @ 0xC
  8020                           
  8021     002C                     crc16_modbus@crc:	
  8022                           ; 1 bytes @ 0xC
  8023                           
  8024                           
  8025                           ; 2 bytes @ 0xC
  8026     002C                     	ds	1
  8027     002D                     ___is_single_click@condition2:
  8028     002D                     ___is_double_click@condition2:	
  8029                           ; 1 bytes @ 0xD
  8030                           
  8031     002D                     ___is_long_press@condition2:	
  8032                           ; 1 bytes @ 0xD
  8033                           
  8034     002D                     ___lwmod@counter:	
  8035                           ; 1 bytes @ 0xD
  8036                           
  8037     002D                     strtol@base:	
  8038                           ; 1 bytes @ 0xD
  8039                           
  8040     002D                     ___flmul@a:	
  8041                           ; 2 bytes @ 0xD
  8042                           
  8043                           
  8044                           ; 4 bytes @ 0xD
  8045     002D                     	ds	1
  8046     002E                     ?_calculate_crc_and_fill_array:
  8047     002E                     ?_printf:	
  8048                           ; 1 bytes @ 0xE
  8049                           
  8050     002E                     ___is_single_click@condition3:	
  8051                           ; 2 bytes @ 0xE
  8052                           
  8053     002E                     ___is_double_click@condition3:	
  8054                           ; 1 bytes @ 0xE
  8055                           
  8056     002E                     ___is_long_press@b:	
  8057                           ; 1 bytes @ 0xE
  8058                           
  8059     002E                     calculate_crc_and_fill_array@data_len:	
  8060                           ; 1 bytes @ 0xE
  8061                           
  8062     002E                     printf@f:	
  8063                           ; 1 bytes @ 0xE
  8064                           
  8065                           
  8066                           ; 2 bytes @ 0xE
  8067     002E                     	ds	1
  8068     002F                     ??_calculate_crc_and_fill_array:
  8069     002F                     ___is_single_click@condition4:	
  8070                           ; 1 bytes @ 0xF
  8071                           
  8072     002F                     ___is_double_click@b:	
  8073                           ; 1 bytes @ 0xF
  8074                           
  8075                           
  8076                           ; 1 bytes @ 0xF
  8077     002F                     	ds	1
  8078     0030                     ??_strtol:
  8079     0030                     ___is_single_click@b:	
  8080                           ; 1 bytes @ 0x10
  8081                           
  8082     0030                     calculate_crc_and_fill_array@crc:	
  8083                           ; 1 bytes @ 0x10
  8084                           
  8085     0030                     calculate_diff@diff:	
  8086                           ; 2 bytes @ 0x10
  8087                           
  8088                           
  8089                           ; 4 bytes @ 0x10
  8090     0030                     	ds	1
  8091     0031                     ?_update_mybutton:
  8092     0031                     ??___flmul:	
  8093                           ; 1 bytes @ 0x11
  8094                           
  8095     0031                     update_mybutton@signal:	
  8096                           ; 1 bytes @ 0x11
  8097                           
  8098                           
  8099                           ; 1 bytes @ 0x11
  8100     0031                     	ds	1
  8101     0032                     calculate_crc_and_fill_array@data:
  8102     0032                     update_mybutton@now:	
  8103                           ; 1 bytes @ 0x12
  8104                           
  8105                           
  8106                           ; 4 bytes @ 0x12
  8107     0032                     	ds	2
  8108     0034                     strtol@sign:
  8109                           
  8110                           ; 1 bytes @ 0x14
  8111     0034                     	ds	1
  8112     0035                     strtol@a:
  8113                           
  8114                           ; 4 bytes @ 0x15
  8115     0035                     	ds	1
  8116     0036                     ??_update_mybutton:
  8117     0036                     ___flmul@sign:	
  8118                           ; 1 bytes @ 0x16
  8119                           
  8120                           
  8121                           ; 1 bytes @ 0x16
  8122     0036                     	ds	1
  8123     0037                     ___flmul@grs:
  8124                           
  8125                           ; 4 bytes @ 0x17
  8126     0037                     	ds	2
  8127     0039                     strtol@s:
  8128                           
  8129                           ; 1 bytes @ 0x19
  8130     0039                     	ds	1
  8131     003A                     ??_printf:
  8132     003A                     update_mybutton@b:	
  8133                           ; 1 bytes @ 0x1A
  8134                           
  8135     003A                     strtol@c:	
  8136                           ; 1 bytes @ 0x1A
  8137                           
  8138                           
  8139                           ; 1 bytes @ 0x1A
  8140     003A                     	ds	1
  8141     003B                     ??_set_device_serial_number_to_i2c_slave_memorymap:
  8142     003B                     ___flmul@aexp:	
  8143                           ; 1 bytes @ 0x1B
  8144                           
  8145                           
  8146                           ; 1 bytes @ 0x1B
  8147     003B                     	ds	1
  8148     003C                     ___flmul@bexp:
  8149                           
  8150                           ; 1 bytes @ 0x1C
  8151     003C                     	ds	1
  8152     003D                     set_device_serial_number_to_i2c_slave_memorymap@value:
  8153     003D                     ___flmul@prod:	
  8154                           ; 1 bytes @ 0x1D
  8155                           
  8156                           
  8157                           ; 4 bytes @ 0x1D
  8158     003D                     	ds	1
  8159     003E                     _printf$1641:
  8160     003E                     set_device_serial_number_to_i2c_slave_memorymap@buffer:	
  8161                           ; 2 bytes @ 0x1E
  8162                           
  8163                           
  8164                           ; 3 bytes @ 0x1E
  8165     003E                     	ds	2
  8166     0040                     _printf$1642:
  8167                           
  8168                           ; 2 bytes @ 0x20
  8169     0040                     	ds	1
  8170     0041                     set_device_serial_number_to_i2c_slave_memorymap@i:
  8171     0041                     ___flmul@temp:	
  8172                           ; 1 bytes @ 0x21
  8173                           
  8174                           
  8175                           ; 2 bytes @ 0x21
  8176     0041                     	ds	1
  8177     0042                     _printf$1648:
  8178                           
  8179                           ; 2 bytes @ 0x22
  8180     0042                     	ds	1
  8181     0043                     ?___fltol:
  8182     0043                     ___fltol@f1:	
  8183                           ; 4 bytes @ 0x23
  8184                           
  8185                           
  8186                           ; 4 bytes @ 0x23
  8187     0043                     	ds	1
  8188     0044                     printf@idx:
  8189                           
  8190                           ; 1 bytes @ 0x24
  8191     0044                     	ds	1
  8192     0045                     printf@cp:
  8193                           
  8194                           ; 2 bytes @ 0x25
  8195     0045                     	ds	2
  8196     0047                     ??___fltol:
  8197     0047                     printf@len:	
  8198                           ; 1 bytes @ 0x27
  8199                           
  8200                           
  8201                           ; 2 bytes @ 0x27
  8202     0047                     	ds	2
  8203     0049                     printf@ap:
  8204                           
  8205                           ; 1 bytes @ 0x29
  8206     0049                     	ds	1
  8207     004A                     printf@val:
  8208                           
  8209                           ; 2 bytes @ 0x2A
  8210     004A                     	ds	1
  8211     004B                     ___fltol@sign1:
  8212                           
  8213                           ; 1 bytes @ 0x2B
  8214     004B                     	ds	1
  8215     004C                     printf@prec:
  8216     004C                     ___fltol@exp1:	
  8217                           ; 1 bytes @ 0x2C
  8218                           
  8219                           
  8220                           ; 1 bytes @ 0x2C
  8221     004C                     	ds	1
  8222     004D                     printf@width:
  8223                           
  8224                           ; 2 bytes @ 0x2D
  8225     004D                     	ds	2
  8226     004F                     printf@c:
  8227                           
  8228                           ; 1 bytes @ 0x2F
  8229     004F                     	ds	1
  8230     0050                     printf@flag:
  8231                           
  8232                           ; 2 bytes @ 0x30
  8233     0050                     	ds	2
  8234     0052                     ?_monitoring_sync:
  8235     0052                     ?_measurement:	
  8236                           ; 1 bytes @ 0x32
  8237                           
  8238     0052                     ??_measured_adc:	
  8239                           ; 1 bytes @ 0x32
  8240                           
  8241     0052                     ?_save_top_adc_point:	
  8242                           ; 1 bytes @ 0x32
  8243                           
  8244     0052                     ?_save_bottom_adc_point:	
  8245                           ; 1 bytes @ 0x32
  8246                           
  8247     0052                     ??_get_measured_value:	
  8248                           ; 1 bytes @ 0x32
  8249                           
  8250     0052                     ?_dump_buffer:	
  8251                           ; 1 bytes @ 0x32
  8252                           
  8253     0052                     measurement@value:	
  8254                           ; 1 bytes @ 0x32
  8255                           
  8256     0052                     save_top_adc_point@sensor_value:	
  8257                           ; 1 bytes @ 0x32
  8258                           
  8259     0052                     save_bottom_adc_point@sensor_value:	
  8260                           ; 1 bytes @ 0x32
  8261                           
  8262     0052                     dump_buffer@size:	
  8263                           ; 1 bytes @ 0x32
  8264                           
  8265     0052                     monitoring_sync@state:	
  8266                           ; 2 bytes @ 0x32
  8267                           
  8268                           
  8269                           ; 2 bytes @ 0x32
  8270     0052                     	ds	1
  8271     0053                     ??_measurement:
  8272     0053                     ??_save_top_adc_point:	
  8273                           ; 1 bytes @ 0x33
  8274                           
  8275     0053                     ??_save_bottom_adc_point:	
  8276                           ; 1 bytes @ 0x33
  8277                           
  8278     0053                     measured_adc@measured_adc_command:	
  8279                           ; 1 bytes @ 0x33
  8280                           
  8281                           
  8282                           ; 8 bytes @ 0x33
  8283     0053                     	ds	1
  8284     0054                     ??_dump_buffer:
  8285     0054                     monitoring_sync@b1:	
  8286                           ; 1 bytes @ 0x34
  8287                           
  8288     0054                     measurement@state:	
  8289                           ; 1 bytes @ 0x34
  8290                           
  8291                           
  8292                           ; 1 bytes @ 0x34
  8293     0054                     	ds	1
  8294     0055                     monitoring_sync@b2:
  8295                           
  8296                           ; 1 bytes @ 0x35
  8297     0055                     	ds	1
  8298     0056                     monitoring_sync@b1_clicked_count:
  8299                           
  8300                           ; 1 bytes @ 0x36
  8301     0056                     	ds	1
  8302     0057                     monitoring_sync@b2_clicked_count:
  8303                           
  8304                           ; 1 bytes @ 0x37
  8305     0057                     	ds	1
  8306     0058                     ??_monitoring_sync:
  8307     0058                     _dump_buffer$886:	
  8308                           ; 1 bytes @ 0x38
  8309                           
  8310                           
  8311                           ; 2 bytes @ 0x38
  8312     0058                     	ds	2
  8313     005A                     dump_buffer@buffer:
  8314                           
  8315                           ; 1 bytes @ 0x3A
  8316     005A                     	ds	1
  8317     005B                     dump_buffer@p:
  8318     005B                     save_top_adc_point@save_top_adc_command:	
  8319                           ; 1 bytes @ 0x3B
  8320                           
  8321     005B                     save_bottom_adc_point@save_bottom_adc_command:	
  8322                           ; 8 bytes @ 0x3B
  8323                           
  8324                           
  8325                           ; 8 bytes @ 0x3B
  8326     005B                     	ds	1
  8327     005C                     dump_buffer@i:
  8328                           
  8329                           ; 2 bytes @ 0x3C
  8330     005C                     	ds	2
  8331     005E                     dump_buffer@j:
  8332     005E                     get_measured_value@payload:	
  8333                           ; 2 bytes @ 0x3E
  8334                           
  8335                           
  8336                           ; 4 bytes @ 0x3E
  8337     005E                     	ds	2
  8338     0060                     ??_dump_memory_map:
  8339                           
  8340                           ; 1 bytes @ 0x40
  8341     0060                     	ds	2
  8342     0062                     get_measured_value@payload_temp:
  8343                           
  8344                           ; 4 bytes @ 0x42
  8345     0062                     	ds	1
  8346     0063                     save_top_adc_point@states:
  8347     0063                     save_bottom_adc_point@states:	
  8348                           ; 1 bytes @ 0x43
  8349                           
  8350                           
  8351                           ; 1 bytes @ 0x43
  8352     0063                     	ds	3
  8353     0066                     get_measured_value@temp:
  8354                           
  8355                           ; 4 bytes @ 0x46
  8356     0066                     	ds	4
  8357     006A                     get_measured_value@sensor_value:
  8358                           
  8359                           ; 1 bytes @ 0x4A
  8360     006A                     	ds	1
  8361     006B                     ??_main:
  8362                           
  8363                           ; 1 bytes @ 0x4B
  8364     006B                     	ds	4
  8365                           
  8366                           	psect	maintext
  8367     0BEC                     __pmaintext:	
  8368 ;;
  8369 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  8370 ;;
  8371 ;; *************** function _main *****************
  8372 ;; Defined at:
  8373 ;;		line 33 in file "main.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;  now             4    2[BANK1 ] unsigned long 
  8378 ;;  b2             27   51[BANK1 ] struct mybutton
  8379 ;;  b1             27   24[BANK1 ] struct mybutton
  8380 ;;  sensor_value   17    7[BANK1 ] struct values
  8381 ;;  state           1    6[BANK1 ] enum E10543
  8382 ;;  b1_clicked_c    1    1[BANK1 ] unsigned char 
  8383 ;;  b2_clicked_c    1    0[BANK1 ] unsigned char 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : B3F/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8394 ;;      Locals:         0       0      78       0       0       0       0       0       0       0       0       0       
      +0       0
  8395 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Totals:         0       4      78       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;Total ram usage:       82 bytes
  8398 ;; Hardware stack levels required when called: 6
  8399 ;; This function calls:
  8400 ;;		_Disable_Global_Interrupt
  8401 ;;		_Enable_Global_Interrupt
  8402 ;;		_SYSTEM_Initialize
  8403 ;;		_calculate_diff
  8404 ;;		_dispatch
  8405 ;;		_dump_memory_map
  8406 ;;		_enable_tx_transmit
  8407 ;;		_enable_uart_printf
  8408 ;;		_get_measured_adc_value
  8409 ;;		_get_measured_value
  8410 ;;		_get_ticks_with_lock
  8411 ;;		_i2c_slave_init
  8412 ;;		_i2c_slave_set_register
  8413 ;;		_init_button
  8414 ;;		_measured_adc
  8415 ;;		_measurement
  8416 ;;		_monitoring_sync
  8417 ;;		_printf
  8418 ;;		_save_bottom_adc_point
  8419 ;;		_save_top_adc_point
  8420 ;;		_set_device_serial_number_to_i2c_slave_memorymap
  8421 ;;		_tmr0_init
  8422 ;;		_update_mybutton
  8423 ;;		_usart_init
  8424 ;; This function is called by:
  8425 ;;		Startup code after reset
  8426 ;; This function uses a non-reentrant model
  8427 ;;
  8428                           
  8429     0BEC                     _main:	
  8430                           ;psect for function _main
  8431                           
  8432     0BEC                     l4715:	
  8433                           ;incstack = 0
  8434                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8435                           
  8436                           
  8437                           ;main.c: 34: SYSTEM_Initialize();
  8438     0BEC  319C  24AE  318B   	fcall	_SYSTEM_Initialize
  8439                           
  8440                           ;main.c: 35: tmr0_init();
  8441     0BEF  319C  24EF  318B   	fcall	_tmr0_init
  8442                           
  8443                           ;main.c: 36: usart_init();
  8444     0BF2  319D  250A  318B   	fcall	_usart_init
  8445     0BF5                     l4717:
  8446                           
  8447                           ;main.c: 37: i2c_slave_init();
  8448     0BF5  319E  268F  318B   	fcall	_i2c_slave_init
  8449     0BF8                     l4719:
  8450                           
  8451                           ;main.c: 42: enable_uart_printf();
  8452     0BF8  319C  2467  318B   	fcall	_enable_uart_printf
  8453     0BFB                     l4721:
  8454                           
  8455                           ;main.c: 43: printf("PH Probe with RS485\r\n");
  8456     0BFB  30A9               	movlw	low (STR_1| (0+32768))
  8457     0BFC  0140               	movlb	0	; select bank0
  8458     0BFD  00AE               	movwf	printf@f
  8459     0BFE  3099               	movlw	high (STR_1| (0+32768))
  8460     0BFF  00AF               	movwf	printf@f+1
  8461     0C00  3180  20C1  318B   	fcall	_printf
  8462     0C03                     l4723:
  8463                           
  8464                           ;main.c: 44: printf("sn: %s\r\n", "0A01820001");
  8465     0C03  3052               	movlw	low (STR_2| (0+32768))
  8466     0C04  0140               	movlb	0	; select bank0
  8467     0C05  00AE               	movwf	printf@f
  8468     0C06  309A               	movlw	high (STR_2| (0+32768))
  8469     0C07  00AF               	movwf	printf@f+1
  8470     0C08  3034               	movlw	low (STR_3| (0+32768))
  8471     0C09  00B0               	movwf	low ((?_printf| 0+2))
  8472     0C0A  309A               	movlw	high (STR_3| (0+32768))
  8473     0C0B  00B1               	movwf	(low ((?_printf| 0+2))+1)
  8474     0C0C  3180  20C1  318B   	fcall	_printf
  8475     0C0F                     l4725:
  8476                           
  8477                           ;main.c: 45: _delay((unsigned long)((10)*(1000000/4000.0)));
  8478     0C0F  3004               	movlw	4
  8479     0C10  0140               	movlb	0	; select bank0
  8480     0C11  00EB               	movwf	??_main
  8481     0C12  303D               	movlw	61
  8482     0C13                     u5087:
  8483     0C13  0B89               	decfsz	9,f
  8484     0C14  2C13               	goto	u5087
  8485     0C15  0BEB               	decfsz	??_main,f
  8486     0C16  2C13               	goto	u5087
  8487     0C17  3200               	nop2
  8488     0C18                     l4727:
  8489                           
  8490                           ;main.c: 46: enable_tx_transmit();
  8491     0C18  319C  24FC  318B   	fcall	_enable_tx_transmit
  8492     0C1B                     l4729:
  8493                           
  8494                           ;main.c: 50: INTCONbits.GIE = 1;
  8495     0C1B  178B               	bsf	11,7	;volatile
  8496     0C1C                     l4731:
  8497                           
  8498                           ;main.c: 51: INTCONbits.PEIE = 1;
  8499     0C1C  170B               	bsf	11,6	;volatile
  8500     0C1D                     l4733:
  8501                           
  8502                           ;main.c: 54: ANSELAbits.ANSA4 = 0;
  8503     0C1D  017E               	movlb	62	; select bank62
  8504     0C1E  1238               	bcf	56,4	;volatile
  8505     0C1F                     l4735:
  8506                           
  8507                           ;main.c: 55: TRISAbits.TRISA4 = 1;
  8508     0C1F  0140               	movlb	0	; select bank0
  8509     0C20  1612               	bsf	18,4	;volatile
  8510     0C21                     l4737:
  8511                           
  8512                           ;main.c: 56: ANSELAbits.ANSA5 = 0;
  8513     0C21  017E               	movlb	62	; select bank62
  8514     0C22  12B8               	bcf	56,5	;volatile
  8515     0C23                     l4739:
  8516                           
  8517                           ;main.c: 57: TRISAbits.TRISA5 = 1;
  8518     0C23  0140               	movlb	0	; select bank0
  8519     0C24  1692               	bsf	18,5	;volatile
  8520     0C25                     l4741:
  8521                           
  8522                           ;main.c: 59: MyButton b1;;main.c: 60: MyButton b2;;main.c: 62: init_button(&b1);
  8523     0C25  30B8               	movlw	(low (main@b1| 0))& (0+255)
  8524     0C26  3193  2397  318B   	fcall	_init_button
  8525     0C29                     l4743:
  8526                           
  8527                           ;main.c: 63: init_button(&b2);
  8528     0C29  30D3               	movlw	(low (main@b2| 0))& (0+255)
  8529     0C2A  3193  2397  318B   	fcall	_init_button
  8530     0C2D                     l4745:
  8531                           
  8532                           ;main.c: 66: States state = STATE_CALIBRATE;
  8533     0C2D  3004               	movlw	4
  8534     0C2E  0141               	movlb	1	; select bank1
  8535     0C2F  00A6               	movwf	main@state^(0+128)
  8536     0C30                     l4747:
  8537                           
  8538                           ;main.c: 67: uint8_t b1_clicked_count = 0;
  8539     0C30  01A1               	clrf	main@b1_clicked_count^(0+128)
  8540     0C31                     l4749:
  8541                           
  8542                           ;main.c: 68: uint8_t b2_clicked_count = 0;
  8543     0C31  01A0               	clrf	main@b2_clicked_count^(0+128)
  8544     0C32                     l4751:
  8545                           
  8546                           ;main.c: 75: uint32_t now = get_ticks_with_lock();
  8547     0C32  319D  2573  318B   	fcall	_get_ticks_with_lock
  8548     0C35  0140               	movlb	0	; select bank0
  8549     0C36  0823               	movf	?_get_ticks_with_lock+3,w
  8550     0C37  0141               	movlb	1	; select bank1
  8551     0C38  00A5               	movwf	(main@now+3)^(0+128)
  8552     0C39  0140               	movlb	0	; select bank0
  8553     0C3A  0822               	movf	?_get_ticks_with_lock+2,w
  8554     0C3B  0141               	movlb	1	; select bank1
  8555     0C3C  00A4               	movwf	(main@now+2)^(0+128)
  8556     0C3D  0140               	movlb	0	; select bank0
  8557     0C3E  0821               	movf	?_get_ticks_with_lock+1,w
  8558     0C3F  0141               	movlb	1	; select bank1
  8559     0C40  00A3               	movwf	(main@now+1)^(0+128)
  8560     0C41  0140               	movlb	0	; select bank0
  8561     0C42  0820               	movf	?_get_ticks_with_lock,w
  8562     0C43  0141               	movlb	1	; select bank1
  8563     0C44  00A2               	movwf	main@now^(0+128)
  8564     0C45                     l4753:
  8565                           
  8566                           ;main.c: 76: static uint32_t prev_ticks_btn = 0;;main.c: 78: sensor_value.ph_value = 70;
  8567     0C45  3046               	movlw	70
  8568     0C46  00A7               	movwf	main@sensor_value^(0+128)
  8569     0C47                     l4755:
  8570                           
  8571                           ;main.c: 81: if(calculate_diff(now, prev_ticks_btn) >= 20){
  8572     0C47  0825               	movf	(main@now+3)^(0+128),w
  8573     0C48  0140               	movlb	0	; select bank0
  8574     0C49  00A3               	movwf	calculate_diff@now+3
  8575     0C4A  0141               	movlb	1	; select bank1
  8576     0C4B  0824               	movf	(main@now+2)^(0+128),w
  8577     0C4C  0140               	movlb	0	; select bank0
  8578     0C4D  00A2               	movwf	calculate_diff@now+2
  8579     0C4E  0141               	movlb	1	; select bank1
  8580     0C4F  0823               	movf	(main@now+1)^(0+128),w
  8581     0C50  0140               	movlb	0	; select bank0
  8582     0C51  00A1               	movwf	calculate_diff@now+1
  8583     0C52  0141               	movlb	1	; select bank1
  8584     0C53  0822               	movf	main@now^(0+128),w
  8585     0C54  0140               	movlb	0	; select bank0
  8586     0C55  00A0               	movwf	calculate_diff@now
  8587     0C56  0142               	movlb	2	; select bank2
  8588     0C57  0857               	movf	(main@prev_ticks_btn+3)^(0+256),w
  8589     0C58  0140               	movlb	0	; select bank0
  8590     0C59  00A7               	movwf	calculate_diff@prev_ticks+3
  8591     0C5A  0142               	movlb	2	; select bank2
  8592     0C5B  0856               	movf	(main@prev_ticks_btn+2)^(0+256),w
  8593     0C5C  0140               	movlb	0	; select bank0
  8594     0C5D  00A6               	movwf	calculate_diff@prev_ticks+2
  8595     0C5E  0142               	movlb	2	; select bank2
  8596     0C5F  0855               	movf	(main@prev_ticks_btn+1)^(0+256),w
  8597     0C60  0140               	movlb	0	; select bank0
  8598     0C61  00A5               	movwf	calculate_diff@prev_ticks+1
  8599     0C62  0142               	movlb	2	; select bank2
  8600     0C63  0854               	movf	main@prev_ticks_btn^(0+256),w
  8601     0C64  0140               	movlb	0	; select bank0
  8602     0C65  00A4               	movwf	calculate_diff@prev_ticks
  8603     0C66  3192  22E8  318B   	fcall	_calculate_diff
  8604     0C69  0140               	movlb	0	; select bank0
  8605     0C6A  0823               	movf	?_calculate_diff+3,w
  8606     0C6B  1D03               	btfss	3,2
  8607     0C6C  2C79               	goto	u4890
  8608     0C6D  0822               	movf	?_calculate_diff+2,w
  8609     0C6E  1D03               	btfss	3,2
  8610     0C6F  2C79               	goto	u4890
  8611     0C70  0821               	movf	?_calculate_diff+1,w
  8612     0C71  1D03               	btfss	3,2
  8613     0C72  2C79               	goto	u4890
  8614     0C73  3014               	movlw	20
  8615     0C74  0220               	subwf	?_calculate_diff,w
  8616     0C75  1C03               	btfss	3,0
  8617     0C76  2C78               	goto	u4891
  8618     0C77  2C79               	goto	u4890
  8619     0C78                     u4891:
  8620     0C78  2F8B               	goto	l4923
  8621     0C79                     u4890:
  8622     0C79                     l4757:
  8623                           
  8624                           ;main.c: 82: prev_ticks_btn = now;
  8625     0C79  0141               	movlb	1	; select bank1
  8626     0C7A  0825               	movf	(main@now+3)^(0+128),w
  8627     0C7B  0142               	movlb	2	; select bank2
  8628     0C7C  00D7               	movwf	(main@prev_ticks_btn+3)^(0+256)
  8629     0C7D  0141               	movlb	1	; select bank1
  8630     0C7E  0824               	movf	(main@now+2)^(0+128),w
  8631     0C7F  0142               	movlb	2	; select bank2
  8632     0C80  00D6               	movwf	(main@prev_ticks_btn+2)^(0+256)
  8633     0C81  0141               	movlb	1	; select bank1
  8634     0C82  0823               	movf	(main@now+1)^(0+128),w
  8635     0C83  0142               	movlb	2	; select bank2
  8636     0C84  00D5               	movwf	(main@prev_ticks_btn+1)^(0+256)
  8637     0C85  0141               	movlb	1	; select bank1
  8638     0C86  0822               	movf	main@now^(0+128),w
  8639     0C87  0142               	movlb	2	; select bank2
  8640     0C88  00D4               	movwf	main@prev_ticks_btn^(0+256)
  8641     0C89                     l4759:
  8642                           
  8643                           ;main.c: 83: update_mybutton(&b1, PORTAbits.RA4, get_ticks_with_lock());
  8644     0C89  3000               	movlw	0
  8645     0C8A  0140               	movlb	0	; select bank0
  8646     0C8B  1A0C               	btfsc	12,4	;volatile
  8647     0C8C  3001               	movlw	1
  8648     0C8D  00B1               	movwf	update_mybutton@signal
  8649     0C8E  319D  2573  318B   	fcall	_get_ticks_with_lock
  8650     0C91  0140               	movlb	0	; select bank0
  8651     0C92  0823               	movf	?_get_ticks_with_lock+3,w
  8652     0C93  00B5               	movwf	update_mybutton@now+3
  8653     0C94  0822               	movf	?_get_ticks_with_lock+2,w
  8654     0C95  00B4               	movwf	update_mybutton@now+2
  8655     0C96  0821               	movf	?_get_ticks_with_lock+1,w
  8656     0C97  00B3               	movwf	update_mybutton@now+1
  8657     0C98  0820               	movf	?_get_ticks_with_lock,w
  8658     0C99  00B2               	movwf	update_mybutton@now
  8659     0C9A  30B8               	movlw	(low (main@b1| 0))& (0+255)
  8660     0C9B  3196  2677  318B   	fcall	_update_mybutton
  8661     0C9E                     l4761:
  8662                           
  8663                           ;main.c: 84: update_mybutton(&b2, PORTAbits.RA5, get_ticks_with_lock());
  8664     0C9E  3000               	movlw	0
  8665     0C9F  0140               	movlb	0	; select bank0
  8666     0CA0  1A8C               	btfsc	12,5	;volatile
  8667     0CA1  3001               	movlw	1
  8668     0CA2  00B1               	movwf	update_mybutton@signal
  8669     0CA3  319D  2573  318B   	fcall	_get_ticks_with_lock
  8670     0CA6  0140               	movlb	0	; select bank0
  8671     0CA7  0823               	movf	?_get_ticks_with_lock+3,w
  8672     0CA8  00B5               	movwf	update_mybutton@now+3
  8673     0CA9  0822               	movf	?_get_ticks_with_lock+2,w
  8674     0CAA  00B4               	movwf	update_mybutton@now+2
  8675     0CAB  0821               	movf	?_get_ticks_with_lock+1,w
  8676     0CAC  00B3               	movwf	update_mybutton@now+1
  8677     0CAD  0820               	movf	?_get_ticks_with_lock,w
  8678     0CAE  00B2               	movwf	update_mybutton@now
  8679     0CAF  30D3               	movlw	(low (main@b2| 0))& (0+255)
  8680     0CB0  3196  2677  318B   	fcall	_update_mybutton
  8681     0CB3  2F8B               	goto	l4923
  8682     0CB4                     l4765:
  8683                           
  8684                           ;main.c: 95: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  8685     0CB4  30A6               	movlw	low main@state
  8686     0CB5  0140               	movlb	0	; select bank0
  8687     0CB6  00D2               	movwf	monitoring_sync@state
  8688     0CB7  3000               	movlw	high main@state
  8689     0CB8  00D3               	movwf	monitoring_sync@state+1
  8690     0CB9  30B8               	movlw	(low (main@b1| 0))& (0+255)
  8691     0CBA  00D4               	movwf	monitoring_sync@b1
  8692     0CBB  30D3               	movlw	(low (main@b2| 0))& (0+255)
  8693     0CBC  00D5               	movwf	monitoring_sync@b2
  8694     0CBD  30A1               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  8695     0CBE  00D6               	movwf	monitoring_sync@b1_clicked_count
  8696     0CBF  30A0               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  8697     0CC0  00D7               	movwf	monitoring_sync@b2_clicked_count
  8698     0CC1  3195  25D7  318B   	fcall	_monitoring_sync
  8699                           
  8700                           ;main.c: 96: break;
  8701     0CC4  2FA6               	goto	l4925
  8702     0CC5                     l4767:
  8703                           
  8704                           ;main.c: 99: if(calculate_diff(now, prev_ticks) >= 4000){
  8705     0CC5  0825               	movf	(main@now+3)^(0+128),w
  8706     0CC6  0140               	movlb	0	; select bank0
  8707     0CC7  00A3               	movwf	calculate_diff@now+3
  8708     0CC8  0141               	movlb	1	; select bank1
  8709     0CC9  0824               	movf	(main@now+2)^(0+128),w
  8710     0CCA  0140               	movlb	0	; select bank0
  8711     0CCB  00A2               	movwf	calculate_diff@now+2
  8712     0CCC  0141               	movlb	1	; select bank1
  8713     0CCD  0823               	movf	(main@now+1)^(0+128),w
  8714     0CCE  0140               	movlb	0	; select bank0
  8715     0CCF  00A1               	movwf	calculate_diff@now+1
  8716     0CD0  0141               	movlb	1	; select bank1
  8717     0CD1  0822               	movf	main@now^(0+128),w
  8718     0CD2  0140               	movlb	0	; select bank0
  8719     0CD3  00A0               	movwf	calculate_diff@now
  8720     0CD4  0142               	movlb	2	; select bank2
  8721     0CD5  0853               	movf	(main@prev_ticks+3)^(0+256),w
  8722     0CD6  0140               	movlb	0	; select bank0
  8723     0CD7  00A7               	movwf	calculate_diff@prev_ticks+3
  8724     0CD8  0142               	movlb	2	; select bank2
  8725     0CD9  0852               	movf	(main@prev_ticks+2)^(0+256),w
  8726     0CDA  0140               	movlb	0	; select bank0
  8727     0CDB  00A6               	movwf	calculate_diff@prev_ticks+2
  8728     0CDC  0142               	movlb	2	; select bank2
  8729     0CDD  0851               	movf	(main@prev_ticks+1)^(0+256),w
  8730     0CDE  0140               	movlb	0	; select bank0
  8731     0CDF  00A5               	movwf	calculate_diff@prev_ticks+1
  8732     0CE0  0142               	movlb	2	; select bank2
  8733     0CE1  0850               	movf	main@prev_ticks^(0+256),w
  8734     0CE2  0140               	movlb	0	; select bank0
  8735     0CE3  00A4               	movwf	calculate_diff@prev_ticks
  8736     0CE4  3192  22E8  318B   	fcall	_calculate_diff
  8737     0CE7  0140               	movlb	0	; select bank0
  8738     0CE8  0823               	movf	?_calculate_diff+3,w
  8739     0CE9  1D03               	btfss	3,2
  8740     0CEA  2CF6               	goto	u4900
  8741     0CEB  0822               	movf	?_calculate_diff+2,w
  8742     0CEC  1D03               	btfss	3,2
  8743     0CED  2CF6               	goto	u4900
  8744     0CEE  30A0               	movlw	160
  8745     0CEF  0220               	subwf	?_calculate_diff,w
  8746     0CF0  300F               	movlw	15
  8747     0CF1  3B21               	subwfb	?_calculate_diff+1,w
  8748     0CF2  1C03               	btfss	3,0
  8749     0CF3  2CF5               	goto	u4901
  8750     0CF4  2CF6               	goto	u4900
  8751     0CF5                     u4901:
  8752     0CF5  2D19               	goto	l4777
  8753     0CF6                     u4900:
  8754     0CF6                     l4769:
  8755                           
  8756                           ;main.c: 100: prev_ticks = now;
  8757     0CF6  0141               	movlb	1	; select bank1
  8758     0CF7  0825               	movf	(main@now+3)^(0+128),w
  8759     0CF8  0142               	movlb	2	; select bank2
  8760     0CF9  00D3               	movwf	(main@prev_ticks+3)^(0+256)
  8761     0CFA  0141               	movlb	1	; select bank1
  8762     0CFB  0824               	movf	(main@now+2)^(0+128),w
  8763     0CFC  0142               	movlb	2	; select bank2
  8764     0CFD  00D2               	movwf	(main@prev_ticks+2)^(0+256)
  8765     0CFE  0141               	movlb	1	; select bank1
  8766     0CFF  0823               	movf	(main@now+1)^(0+128),w
  8767     0D00  0142               	movlb	2	; select bank2
  8768     0D01  00D1               	movwf	(main@prev_ticks+1)^(0+256)
  8769     0D02  0141               	movlb	1	; select bank1
  8770     0D03  0822               	movf	main@now^(0+128),w
  8771     0D04  0142               	movlb	2	; select bank2
  8772     0D05  00D0               	movwf	main@prev_ticks^(0+256)
  8773     0D06                     l4771:
  8774                           
  8775                           ;main.c: 101: measurement(&state, &sensor_value);
  8776     0D06  30A7               	movlw	(low (main@sensor_value| 0))& (0+255)
  8777     0D07  0140               	movlb	0	; select bank0
  8778     0D08  00D2               	movwf	measurement@value
  8779     0D09  30A6               	movlw	(low (main@state| 0))& (0+255)
  8780     0D0A  319E  2650  318B   	fcall	_measurement
  8781     0D0D                     l4773:
  8782                           
  8783                           ;main.c: 102: _delay((unsigned long)((100)*(1000000/4000.0)));
  8784     0D0D  3021               	movlw	33
  8785     0D0E  0140               	movlb	0	; select bank0
  8786     0D0F  00EB               	movwf	??_main
  8787     0D10  3076               	movlw	118
  8788     0D11                     u5097:
  8789     0D11  0B89               	decfsz	9,f
  8790     0D12  2D11               	goto	u5097
  8791     0D13  0BEB               	decfsz	??_main,f
  8792     0D14  2D11               	goto	u5097
  8793     0D15  0000               	nop
  8794     0D16                     l4775:
  8795                           
  8796                           ;main.c: 103: state = STATE_OUTPUT_VALUE;
  8797     0D16  3006               	movlw	6
  8798     0D17  0141               	movlb	1	; select bank1
  8799     0D18  00A6               	movwf	main@state^(0+128)
  8800     0D19                     l4777:
  8801                           
  8802                           ;main.c: 104: };;main.c: 105: if(calculate_diff(now, prev_ticks_btn) >= 30){
  8803     0D19  0141               	movlb	1	; select bank1
  8804     0D1A  0825               	movf	(main@now+3)^(0+128),w
  8805     0D1B  0140               	movlb	0	; select bank0
  8806     0D1C  00A3               	movwf	calculate_diff@now+3
  8807     0D1D  0141               	movlb	1	; select bank1
  8808     0D1E  0824               	movf	(main@now+2)^(0+128),w
  8809     0D1F  0140               	movlb	0	; select bank0
  8810     0D20  00A2               	movwf	calculate_diff@now+2
  8811     0D21  0141               	movlb	1	; select bank1
  8812     0D22  0823               	movf	(main@now+1)^(0+128),w
  8813     0D23  0140               	movlb	0	; select bank0
  8814     0D24  00A1               	movwf	calculate_diff@now+1
  8815     0D25  0141               	movlb	1	; select bank1
  8816     0D26  0822               	movf	main@now^(0+128),w
  8817     0D27  0140               	movlb	0	; select bank0
  8818     0D28  00A0               	movwf	calculate_diff@now
  8819     0D29  0142               	movlb	2	; select bank2
  8820     0D2A  084B               	movf	(main@rev_ticks_btn_399+3)^(0+256),w
  8821     0D2B  0140               	movlb	0	; select bank0
  8822     0D2C  00A7               	movwf	calculate_diff@prev_ticks+3
  8823     0D2D  0142               	movlb	2	; select bank2
  8824     0D2E  084A               	movf	(main@rev_ticks_btn_399+2)^(0+256),w
  8825     0D2F  0140               	movlb	0	; select bank0
  8826     0D30  00A6               	movwf	calculate_diff@prev_ticks+2
  8827     0D31  0142               	movlb	2	; select bank2
  8828     0D32  0849               	movf	(main@rev_ticks_btn_399+1)^(0+256),w
  8829     0D33  0140               	movlb	0	; select bank0
  8830     0D34  00A5               	movwf	calculate_diff@prev_ticks+1
  8831     0D35  0142               	movlb	2	; select bank2
  8832     0D36  0848               	movf	main@rev_ticks_btn_399^(0+256),w
  8833     0D37  0140               	movlb	0	; select bank0
  8834     0D38  00A4               	movwf	calculate_diff@prev_ticks
  8835     0D39  3192  22E8  318B   	fcall	_calculate_diff
  8836     0D3C  0140               	movlb	0	; select bank0
  8837     0D3D  0823               	movf	?_calculate_diff+3,w
  8838     0D3E  1D03               	btfss	3,2
  8839     0D3F  2D4C               	goto	u4910
  8840     0D40  0822               	movf	?_calculate_diff+2,w
  8841     0D41  1D03               	btfss	3,2
  8842     0D42  2D4C               	goto	u4910
  8843     0D43  0821               	movf	?_calculate_diff+1,w
  8844     0D44  1D03               	btfss	3,2
  8845     0D45  2D4C               	goto	u4910
  8846     0D46  301E               	movlw	30
  8847     0D47  0220               	subwf	?_calculate_diff,w
  8848     0D48  1C03               	btfss	3,0
  8849     0D49  2D4B               	goto	u4911
  8850     0D4A  2D4C               	goto	u4910
  8851     0D4B                     u4911:
  8852     0D4B  2FA6               	goto	l4925
  8853     0D4C                     u4910:
  8854     0D4C                     l4779:
  8855                           
  8856                           ;main.c: 106: prev_ticks_btn = now;
  8857     0D4C  0141               	movlb	1	; select bank1
  8858     0D4D  0825               	movf	(main@now+3)^(0+128),w
  8859     0D4E  0142               	movlb	2	; select bank2
  8860     0D4F  00CB               	movwf	(main@rev_ticks_btn_399+3)^(0+256)
  8861     0D50  0141               	movlb	1	; select bank1
  8862     0D51  0824               	movf	(main@now+2)^(0+128),w
  8863     0D52  0142               	movlb	2	; select bank2
  8864     0D53  00CA               	movwf	(main@rev_ticks_btn_399+2)^(0+256)
  8865     0D54  0141               	movlb	1	; select bank1
  8866     0D55  0823               	movf	(main@now+1)^(0+128),w
  8867     0D56  0142               	movlb	2	; select bank2
  8868     0D57  00C9               	movwf	(main@rev_ticks_btn_399+1)^(0+256)
  8869     0D58  0141               	movlb	1	; select bank1
  8870     0D59  0822               	movf	main@now^(0+128),w
  8871     0D5A  0142               	movlb	2	; select bank2
  8872     0D5B  00C8               	movwf	main@rev_ticks_btn_399^(0+256)
  8873                           
  8874                           ;main.c: 107: _delay((unsigned long)((10)*(1000000/4000.0)));
  8875     0D5C  3004               	movlw	4
  8876     0D5D  0140               	movlb	0	; select bank0
  8877     0D5E  00EB               	movwf	??_main
  8878     0D5F  303D               	movlw	61
  8879     0D60                     u5107:
  8880     0D60  0B89               	decfsz	9,f
  8881     0D61  2D60               	goto	u5107
  8882     0D62  0BEB               	decfsz	??_main,f
  8883     0D63  2D60               	goto	u5107
  8884     0D64  3200               	nop2
  8885     0D65                     l4781:
  8886                           
  8887                           ;main.c: 108: enable_uart_printf();
  8888     0D65  319C  2467  318B   	fcall	_enable_uart_printf
  8889     0D68                     l4783:
  8890                           
  8891                           ;main.c: 109: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  8892     0D68  30A6               	movlw	low main@state
  8893     0D69  0140               	movlb	0	; select bank0
  8894     0D6A  00D2               	movwf	monitoring_sync@state
  8895     0D6B  3000               	movlw	high main@state
  8896     0D6C  00D3               	movwf	monitoring_sync@state+1
  8897     0D6D  30B8               	movlw	(low (main@b1| 0))& (0+255)
  8898     0D6E  00D4               	movwf	monitoring_sync@b1
  8899     0D6F  30D3               	movlw	(low (main@b2| 0))& (0+255)
  8900     0D70  00D5               	movwf	monitoring_sync@b2
  8901     0D71  30A1               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  8902     0D72  00D6               	movwf	monitoring_sync@b1_clicked_count
  8903     0D73  30A0               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  8904     0D74  00D7               	movwf	monitoring_sync@b2_clicked_count
  8905     0D75  3195  25D7  318B   	fcall	_monitoring_sync
  8906     0D78                     l4785:
  8907                           
  8908                           ;main.c: 110: _delay((unsigned long)((10)*(1000000/4000.0)));
  8909     0D78  3004               	movlw	4
  8910     0D79  0140               	movlb	0	; select bank0
  8911     0D7A  00EB               	movwf	??_main
  8912     0D7B  303D               	movlw	61
  8913     0D7C                     u5117:
  8914     0D7C  0B89               	decfsz	9,f
  8915     0D7D  2D7C               	goto	u5117
  8916     0D7E  0BEB               	decfsz	??_main,f
  8917     0D7F  2D7C               	goto	u5117
  8918     0D80  3200               	nop2
  8919     0D81                     l4787:
  8920                           
  8921                           ;main.c: 111: enable_tx_transmit();
  8922     0D81  319C  24FC  318B   	fcall	_enable_tx_transmit
  8923     0D84  2FA6               	goto	l4925
  8924     0D85                     l4789:
  8925                           
  8926                           ;main.c: 116: b1_clicked_count = 0;
  8927     0D85  01A1               	clrf	main@b1_clicked_count^(0+128)
  8928                           
  8929                           ;main.c: 117: b2_clicked_count = 0;
  8930     0D86  01A0               	clrf	main@b2_clicked_count^(0+128)
  8931     0D87                     l4791:
  8932                           
  8933                           ;main.c: 118: if(calculate_diff(now, prev_ticks) >= 4000){
  8934     0D87  0825               	movf	(main@now+3)^(0+128),w
  8935     0D88  0140               	movlb	0	; select bank0
  8936     0D89  00A3               	movwf	calculate_diff@now+3
  8937     0D8A  0141               	movlb	1	; select bank1
  8938     0D8B  0824               	movf	(main@now+2)^(0+128),w
  8939     0D8C  0140               	movlb	0	; select bank0
  8940     0D8D  00A2               	movwf	calculate_diff@now+2
  8941     0D8E  0141               	movlb	1	; select bank1
  8942     0D8F  0823               	movf	(main@now+1)^(0+128),w
  8943     0D90  0140               	movlb	0	; select bank0
  8944     0D91  00A1               	movwf	calculate_diff@now+1
  8945     0D92  0141               	movlb	1	; select bank1
  8946     0D93  0822               	movf	main@now^(0+128),w
  8947     0D94  0140               	movlb	0	; select bank0
  8948     0D95  00A0               	movwf	calculate_diff@now
  8949     0D96  0142               	movlb	2	; select bank2
  8950     0D97  0853               	movf	(main@prev_ticks+3)^(0+256),w
  8951     0D98  0140               	movlb	0	; select bank0
  8952     0D99  00A7               	movwf	calculate_diff@prev_ticks+3
  8953     0D9A  0142               	movlb	2	; select bank2
  8954     0D9B  0852               	movf	(main@prev_ticks+2)^(0+256),w
  8955     0D9C  0140               	movlb	0	; select bank0
  8956     0D9D  00A6               	movwf	calculate_diff@prev_ticks+2
  8957     0D9E  0142               	movlb	2	; select bank2
  8958     0D9F  0851               	movf	(main@prev_ticks+1)^(0+256),w
  8959     0DA0  0140               	movlb	0	; select bank0
  8960     0DA1  00A5               	movwf	calculate_diff@prev_ticks+1
  8961     0DA2  0142               	movlb	2	; select bank2
  8962     0DA3  0850               	movf	main@prev_ticks^(0+256),w
  8963     0DA4  0140               	movlb	0	; select bank0
  8964     0DA5  00A4               	movwf	calculate_diff@prev_ticks
  8965     0DA6  3192  22E8  318B   	fcall	_calculate_diff
  8966     0DA9  0140               	movlb	0	; select bank0
  8967     0DAA  0823               	movf	?_calculate_diff+3,w
  8968     0DAB  1D03               	btfss	3,2
  8969     0DAC  2DB8               	goto	u4920
  8970     0DAD  0822               	movf	?_calculate_diff+2,w
  8971     0DAE  1D03               	btfss	3,2
  8972     0DAF  2DB8               	goto	u4920
  8973     0DB0  30A0               	movlw	160
  8974     0DB1  0220               	subwf	?_calculate_diff,w
  8975     0DB2  300F               	movlw	15
  8976     0DB3  3B21               	subwfb	?_calculate_diff+1,w
  8977     0DB4  1C03               	btfss	3,0
  8978     0DB5  2DB7               	goto	u4921
  8979     0DB6  2DB8               	goto	u4920
  8980     0DB7                     u4921:
  8981     0DB7  2DD7               	goto	l4801
  8982     0DB8                     u4920:
  8983     0DB8                     l4793:
  8984                           
  8985                           ;main.c: 119: prev_ticks = now;
  8986     0DB8  0141               	movlb	1	; select bank1
  8987     0DB9  0825               	movf	(main@now+3)^(0+128),w
  8988     0DBA  0142               	movlb	2	; select bank2
  8989     0DBB  00D3               	movwf	(main@prev_ticks+3)^(0+256)
  8990     0DBC  0141               	movlb	1	; select bank1
  8991     0DBD  0824               	movf	(main@now+2)^(0+128),w
  8992     0DBE  0142               	movlb	2	; select bank2
  8993     0DBF  00D2               	movwf	(main@prev_ticks+2)^(0+256)
  8994     0DC0  0141               	movlb	1	; select bank1
  8995     0DC1  0823               	movf	(main@now+1)^(0+128),w
  8996     0DC2  0142               	movlb	2	; select bank2
  8997     0DC3  00D1               	movwf	(main@prev_ticks+1)^(0+256)
  8998     0DC4  0141               	movlb	1	; select bank1
  8999     0DC5  0822               	movf	main@now^(0+128),w
  9000     0DC6  0142               	movlb	2	; select bank2
  9001     0DC7  00D0               	movwf	main@prev_ticks^(0+256)
  9002     0DC8                     l4795:
  9003                           
  9004                           ;main.c: 120: measured_adc();
  9005     0DC8  319F  2729  318B   	fcall	_measured_adc
  9006     0DCB                     l4797:
  9007                           
  9008                           ;main.c: 121: _delay((unsigned long)((100)*(1000000/4000.0)));
  9009     0DCB  3021               	movlw	33
  9010     0DCC  0140               	movlb	0	; select bank0
  9011     0DCD  00EB               	movwf	??_main
  9012     0DCE  3076               	movlw	118
  9013     0DCF                     u5127:
  9014     0DCF  0B89               	decfsz	9,f
  9015     0DD0  2DCF               	goto	u5127
  9016     0DD1  0BEB               	decfsz	??_main,f
  9017     0DD2  2DCF               	goto	u5127
  9018     0DD3  0000               	nop
  9019     0DD4                     l4799:
  9020                           
  9021                           ;main.c: 122: state = STATE_OUTPUT_ADC;
  9022     0DD4  3005               	movlw	5
  9023     0DD5  0141               	movlb	1	; select bank1
  9024     0DD6  00A6               	movwf	main@state^(0+128)
  9025     0DD7                     l4801:
  9026                           
  9027                           ;main.c: 123: };;main.c: 124: if(calculate_diff(now, prev_ticks_monitor) >= 30){
  9028     0DD7  0141               	movlb	1	; select bank1
  9029     0DD8  0825               	movf	(main@now+3)^(0+128),w
  9030     0DD9  0140               	movlb	0	; select bank0
  9031     0DDA  00A3               	movwf	calculate_diff@now+3
  9032     0DDB  0141               	movlb	1	; select bank1
  9033     0DDC  0824               	movf	(main@now+2)^(0+128),w
  9034     0DDD  0140               	movlb	0	; select bank0
  9035     0DDE  00A2               	movwf	calculate_diff@now+2
  9036     0DDF  0141               	movlb	1	; select bank1
  9037     0DE0  0823               	movf	(main@now+1)^(0+128),w
  9038     0DE1  0140               	movlb	0	; select bank0
  9039     0DE2  00A1               	movwf	calculate_diff@now+1
  9040     0DE3  0141               	movlb	1	; select bank1
  9041     0DE4  0822               	movf	main@now^(0+128),w
  9042     0DE5  0140               	movlb	0	; select bank0
  9043     0DE6  00A0               	movwf	calculate_diff@now
  9044     0DE7  0142               	movlb	2	; select bank2
  9045     0DE8  084F               	movf	(main@prev_ticks_monitor+3)^(0+256),w
  9046     0DE9  0140               	movlb	0	; select bank0
  9047     0DEA  00A7               	movwf	calculate_diff@prev_ticks+3
  9048     0DEB  0142               	movlb	2	; select bank2
  9049     0DEC  084E               	movf	(main@prev_ticks_monitor+2)^(0+256),w
  9050     0DED  0140               	movlb	0	; select bank0
  9051     0DEE  00A6               	movwf	calculate_diff@prev_ticks+2
  9052     0DEF  0142               	movlb	2	; select bank2
  9053     0DF0  084D               	movf	(main@prev_ticks_monitor+1)^(0+256),w
  9054     0DF1  0140               	movlb	0	; select bank0
  9055     0DF2  00A5               	movwf	calculate_diff@prev_ticks+1
  9056     0DF3  0142               	movlb	2	; select bank2
  9057     0DF4  084C               	movf	main@prev_ticks_monitor^(0+256),w
  9058     0DF5  0140               	movlb	0	; select bank0
  9059     0DF6  00A4               	movwf	calculate_diff@prev_ticks
  9060     0DF7  3192  22E8  318B   	fcall	_calculate_diff
  9061     0DFA  0140               	movlb	0	; select bank0
  9062     0DFB  0823               	movf	?_calculate_diff+3,w
  9063     0DFC  1D03               	btfss	3,2
  9064     0DFD  2E0A               	goto	u4930
  9065     0DFE  0822               	movf	?_calculate_diff+2,w
  9066     0DFF  1D03               	btfss	3,2
  9067     0E00  2E0A               	goto	u4930
  9068     0E01  0821               	movf	?_calculate_diff+1,w
  9069     0E02  1D03               	btfss	3,2
  9070     0E03  2E0A               	goto	u4930
  9071     0E04  301E               	movlw	30
  9072     0E05  0220               	subwf	?_calculate_diff,w
  9073     0E06  1C03               	btfss	3,0
  9074     0E07  2E09               	goto	u4931
  9075     0E08  2E0A               	goto	u4930
  9076     0E09                     u4931:
  9077     0E09  2FA6               	goto	l4925
  9078     0E0A                     u4930:
  9079     0E0A                     l4803:
  9080                           
  9081                           ;main.c: 125: prev_ticks_monitor = now;
  9082     0E0A  0141               	movlb	1	; select bank1
  9083     0E0B  0825               	movf	(main@now+3)^(0+128),w
  9084     0E0C  0142               	movlb	2	; select bank2
  9085     0E0D  00CF               	movwf	(main@prev_ticks_monitor+3)^(0+256)
  9086     0E0E  0141               	movlb	1	; select bank1
  9087     0E0F  0824               	movf	(main@now+2)^(0+128),w
  9088     0E10  0142               	movlb	2	; select bank2
  9089     0E11  00CE               	movwf	(main@prev_ticks_monitor+2)^(0+256)
  9090     0E12  0141               	movlb	1	; select bank1
  9091     0E13  0823               	movf	(main@now+1)^(0+128),w
  9092     0E14  0142               	movlb	2	; select bank2
  9093     0E15  00CD               	movwf	(main@prev_ticks_monitor+1)^(0+256)
  9094     0E16  0141               	movlb	1	; select bank1
  9095     0E17  0822               	movf	main@now^(0+128),w
  9096     0E18  0142               	movlb	2	; select bank2
  9097     0E19  00CC               	movwf	main@prev_ticks_monitor^(0+256)
  9098     0E1A                     l4805:
  9099                           
  9100                           ;main.c: 126: enable_uart_printf();
  9101     0E1A  319C  2467  318B   	fcall	_enable_uart_printf
  9102     0E1D                     l4807:
  9103                           
  9104                           ;main.c: 127: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  9105     0E1D  30A6               	movlw	low main@state
  9106     0E1E  0140               	movlb	0	; select bank0
  9107     0E1F  00D2               	movwf	monitoring_sync@state
  9108     0E20  3000               	movlw	high main@state
  9109     0E21  00D3               	movwf	monitoring_sync@state+1
  9110     0E22  30B8               	movlw	(low (main@b1| 0))& (0+255)
  9111     0E23  00D4               	movwf	monitoring_sync@b1
  9112     0E24  30D3               	movlw	(low (main@b2| 0))& (0+255)
  9113     0E25  00D5               	movwf	monitoring_sync@b2
  9114     0E26  30A1               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  9115     0E27  00D6               	movwf	monitoring_sync@b1_clicked_count
  9116     0E28  30A0               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  9117     0E29  00D7               	movwf	monitoring_sync@b2_clicked_count
  9118     0E2A  3195  25D7  318B   	fcall	_monitoring_sync
  9119     0E2D                     l4809:
  9120                           
  9121                           ;main.c: 128: _delay((unsigned long)((10)*(1000000/4000.0)));
  9122     0E2D  3004               	movlw	4
  9123     0E2E  0140               	movlb	0	; select bank0
  9124     0E2F  00EB               	movwf	??_main
  9125     0E30  303D               	movlw	61
  9126     0E31                     u5137:
  9127     0E31  0B89               	decfsz	9,f
  9128     0E32  2E31               	goto	u5137
  9129     0E33  0BEB               	decfsz	??_main,f
  9130     0E34  2E31               	goto	u5137
  9131     0E35  3200               	nop2
  9132     0E36                     l4811:
  9133                           
  9134                           ;main.c: 129: enable_tx_transmit();
  9135     0E36  319C  24FC  318B   	fcall	_enable_tx_transmit
  9136     0E39                     l4813:
  9137                           
  9138                           ;main.c: 130: state = STATE_DISPATCH;
  9139     0E39  3003               	movlw	3
  9140     0E3A  0141               	movlb	1	; select bank1
  9141     0E3B  00A6               	movwf	main@state^(0+128)
  9142     0E3C  2FA6               	goto	l4925
  9143     0E3D                     l4815:
  9144                           
  9145                           ;main.c: 136: dispatch(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  9146     0E3D  30B8               	movlw	(low (main@b1| 0))& (0+255)
  9147     0E3E  0140               	movlb	0	; select bank0
  9148     0E3F  00A0               	movwf	dispatch@b1
  9149     0E40  30D3               	movlw	(low (main@b2| 0))& (0+255)
  9150     0E41  00A1               	movwf	dispatch@b2
  9151     0E42  30A1               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  9152     0E43  00A2               	movwf	dispatch@b1_clicked_count_ptr
  9153     0E44  30A0               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  9154     0E45  00A3               	movwf	dispatch@b2_clicked_count_ptr
  9155     0E46  30A6               	movlw	(low (main@state| 0))& (0+255)
  9156     0E47  3191  21DD  318B   	fcall	_dispatch
  9157                           
  9158                           ;main.c: 137: break;
  9159     0E4A  2FA6               	goto	l4925
  9160     0E4B                     l4817:
  9161                           
  9162                           ;main.c: 140: enable_uart_printf();
  9163     0E4B  319C  2467  318B   	fcall	_enable_uart_printf
  9164     0E4E                     l4819:
  9165                           
  9166                           ;main.c: 141: printf("STATE_SAVE_TOP_CALIBRATION_POINT\r\n");
  9167     0E4E  3086               	movlw	low (STR_4| (0+32768))
  9168     0E4F  0140               	movlb	0	; select bank0
  9169     0E50  00AE               	movwf	printf@f
  9170     0E51  3099               	movlw	high (STR_4| (0+32768))
  9171     0E52  00AF               	movwf	printf@f+1
  9172     0E53  3180  20C1  318B   	fcall	_printf
  9173     0E56                     l4821:
  9174                           
  9175                           ;main.c: 142: printf("saved\r\n");
  9176     0E56  305B               	movlw	low (STR_5| (0+32768))
  9177     0E57  0140               	movlb	0	; select bank0
  9178     0E58  00AE               	movwf	printf@f
  9179     0E59  309A               	movlw	high (STR_5| (0+32768))
  9180     0E5A  00AF               	movwf	printf@f+1
  9181     0E5B  3180  20C1  318B   	fcall	_printf
  9182                           
  9183                           ;main.c: 143: enable_tx_transmit();
  9184     0E5E  319C  24FC  318B   	fcall	_enable_tx_transmit
  9185     0E61                     l4823:
  9186                           
  9187                           ;main.c: 144: save_top_adc_point(&state, &sensor_value);
  9188     0E61  30A7               	movlw	(low (main@sensor_value| 0))& (0+255)
  9189     0E62  0140               	movlb	0	; select bank0
  9190     0E63  00D2               	movwf	save_top_adc_point@sensor_value
  9191     0E64  30A6               	movlw	(low (main@state| 0))& (0+255)
  9192     0E65  3194  2461  318B   	fcall	_save_top_adc_point
  9193     0E68                     l4825:
  9194                           
  9195                           ;main.c: 145: state = STATE_CALIBRATE;
  9196     0E68  3004               	movlw	4
  9197     0E69  0141               	movlb	1	; select bank1
  9198     0E6A  00A6               	movwf	main@state^(0+128)
  9199                           
  9200                           ;main.c: 146: break;
  9201     0E6B  2FA6               	goto	l4925
  9202     0E6C                     l4827:
  9203                           
  9204                           ;main.c: 149: enable_uart_printf();
  9205     0E6C  319C  2467  318B   	fcall	_enable_uart_printf
  9206     0E6F                     l4829:
  9207                           
  9208                           ;main.c: 150: printf("STATE_SAVE_BOTTOM_CALIBRATION_POINT\r\n");
  9209     0E6F  30F4               	movlw	low (STR_6| (0+32768))
  9210     0E70  0140               	movlb	0	; select bank0
  9211     0E71  00AE               	movwf	printf@f
  9212     0E72  3098               	movlw	high (STR_6| (0+32768))
  9213     0E73  00AF               	movwf	printf@f+1
  9214     0E74  3180  20C1  318B   	fcall	_printf
  9215     0E77                     l4831:
  9216                           
  9217                           ;main.c: 151: printf("saved\r\n");
  9218     0E77  305B               	movlw	low (STR_5| (0+32768))
  9219     0E78  0140               	movlb	0	; select bank0
  9220     0E79  00AE               	movwf	printf@f
  9221     0E7A  309A               	movlw	high (STR_5| (0+32768))
  9222     0E7B  00AF               	movwf	printf@f+1
  9223     0E7C  3180  20C1  318B   	fcall	_printf
  9224                           
  9225                           ;main.c: 152: enable_tx_transmit();
  9226     0E7F  319C  24FC  318B   	fcall	_enable_tx_transmit
  9227     0E82                     l4833:
  9228                           
  9229                           ;main.c: 153: save_bottom_adc_point(&state, &sensor_value);
  9230     0E82  30A7               	movlw	(low (main@sensor_value| 0))& (0+255)
  9231     0E83  0140               	movlb	0	; select bank0
  9232     0E84  00D2               	movwf	save_bottom_adc_point@sensor_value
  9233     0E85  30A6               	movlw	(low (main@state| 0))& (0+255)
  9234     0E86  3193  23F9  318B   	fcall	_save_bottom_adc_point
  9235     0E89  2E68               	goto	l4825
  9236     0E8A                     l4837:
  9237                           
  9238                           ;main.c: 158: _delay((unsigned long)((10)*(1000000/4000.0)));
  9239     0E8A  3004               	movlw	4
  9240     0E8B  0140               	movlb	0	; select bank0
  9241     0E8C  00EB               	movwf	??_main
  9242     0E8D  303D               	movlw	61
  9243     0E8E                     u5147:
  9244     0E8E  0B89               	decfsz	9,f
  9245     0E8F  2E8E               	goto	u5147
  9246     0E90  0BEB               	decfsz	??_main,f
  9247     0E91  2E8E               	goto	u5147
  9248     0E92  3200               	nop2
  9249     0E93                     l4839:
  9250                           
  9251                           ;main.c: 159: enable_uart_printf();
  9252     0E93  319C  2467  318B   	fcall	_enable_uart_printf
  9253     0E96                     l4841:
  9254                           
  9255                           ;main.c: 160: printf("[PIC] into the STATE_OUTPUT_ADC \r\n");
  9256     0E96  3063               	movlw	low (STR_8| (0+32768))
  9257     0E97  0140               	movlb	0	; select bank0
  9258     0E98  00AE               	movwf	printf@f
  9259     0E99  3099               	movlw	high (STR_8| (0+32768))
  9260     0E9A  00AF               	movwf	printf@f+1
  9261     0E9B  3180  20C1  318B   	fcall	_printf
  9262     0E9E                     l4843:
  9263                           
  9264                           ;main.c: 161: get_measured_adc_value(&sensor_value);
  9265     0E9E  30A7               	movlw	(low (main@sensor_value| 0))& (0+255)
  9266     0E9F  319D  25FA  318B   	fcall	_get_measured_adc_value
  9267     0EA2                     l4845:
  9268                           
  9269                           ;main.c: 162: _delay((unsigned long)((50)*(1000000/4000.0)));
  9270     0EA2  3011               	movlw	17
  9271     0EA3  0140               	movlb	0	; select bank0
  9272     0EA4  00EB               	movwf	??_main
  9273     0EA5  303A               	movlw	58
  9274     0EA6                     u5157:
  9275     0EA6  0B89               	decfsz	9,f
  9276     0EA7  2EA6               	goto	u5157
  9277     0EA8  0BEB               	decfsz	??_main,f
  9278     0EA9  2EA6               	goto	u5157
  9279     0EAA  0000               	nop
  9280     0EAB                     l4847:
  9281                           
  9282                           ;main.c: 163: enable_uart_printf();
  9283     0EAB  319C  2467  318B   	fcall	_enable_uart_printf
  9284     0EAE                     l4849:
  9285                           
  9286                           ;main.c: 164: printf("[RX-BUFFER] pH485-Calibration_Value: ---- \r\n ";main.c: 165: "pH 
      +                          ADC_value: %u \r\n";main.c: 166: "pH ADC_High Bytes: 0x%02X \r\n";main.c: 167: "pH ADC_L
      +                          ow  Bytes: 0x%02X \r\n",;main.c: 168: sensor_value.ph_ADC_value,;main.c: 169: sensor_val
      +                          ue.ph_ADC_High_byte,;main.c: 170: sensor_value.ph_ADC_Low_byte;main.c: 171: );
  9287     0EAE  3000               	movlw	low (STR_9| (0+32768))
  9288     0EAF  0140               	movlb	0	; select bank0
  9289     0EB0  00AE               	movwf	printf@f
  9290     0EB1  3098               	movlw	high (STR_9| (0+32768))
  9291     0EB2  00AF               	movwf	printf@f+1
  9292     0EB3  0141               	movlb	1	; select bank1
  9293     0EB4  0829               	movf	((main@sensor_value+1)^(0+128)+1),w
  9294     0EB5  0140               	movlb	0	; select bank0
  9295     0EB6  00B1               	movwf	?_printf+3
  9296     0EB7  0141               	movlb	1	; select bank1
  9297     0EB8  0828               	movf	(main@sensor_value^(0+128)+1),w
  9298     0EB9  0140               	movlb	0	; select bank0
  9299     0EBA  00B0               	movwf	?_printf+2
  9300     0EBB  0141               	movlb	1	; select bank1
  9301     0EBC  082A               	movf	(main@sensor_value^(0+128)+3),w
  9302     0EBD  0140               	movlb	0	; select bank0
  9303     0EBE  00EB               	movwf	??_main
  9304     0EBF  01EC               	clrf	??_main+1
  9305     0EC0  086B               	movf	??_main,w
  9306     0EC1  00B2               	movwf	?_printf+4
  9307     0EC2  086C               	movf	??_main+1,w
  9308     0EC3  00B3               	movwf	?_printf+5
  9309     0EC4  0141               	movlb	1	; select bank1
  9310     0EC5  082B               	movf	(main@sensor_value^(0+128)+4),w
  9311     0EC6  0140               	movlb	0	; select bank0
  9312     0EC7  00ED               	movwf	??_main+2
  9313     0EC8  01EE               	clrf	??_main+3
  9314     0EC9  086D               	movf	??_main+2,w
  9315     0ECA  00B4               	movwf	?_printf+6
  9316     0ECB  086E               	movf	??_main+3,w
  9317     0ECC  00B5               	movwf	?_printf+7
  9318     0ECD  3180  20C1  318B   	fcall	_printf
  9319     0ED0                     l4851:
  9320                           
  9321                           ;main.c: 172: _delay((unsigned long)((10)*(1000000/4000.0)));
  9322     0ED0  3004               	movlw	4
  9323     0ED1  0140               	movlb	0	; select bank0
  9324     0ED2  00EB               	movwf	??_main
  9325     0ED3  303D               	movlw	61
  9326     0ED4                     u5167:
  9327     0ED4  0B89               	decfsz	9,f
  9328     0ED5  2ED4               	goto	u5167
  9329     0ED6  0BEB               	decfsz	??_main,f
  9330     0ED7  2ED4               	goto	u5167
  9331     0ED8  3200               	nop2
  9332     0ED9                     l4853:
  9333                           
  9334                           ;main.c: 173: enable_tx_transmit();
  9335     0ED9  319C  24FC  318B   	fcall	_enable_tx_transmit
  9336     0EDC                     l4855:
  9337                           
  9338                           ;main.c: 174: if(uart_rx_package_event){
  9339     0EDC  0141               	movlb	1	; select bank1
  9340     0EDD  086F               	movf	_uart_rx_package_event^(0+128),w	;volatile
  9341     0EDE  1903               	btfsc	3,2
  9342     0EDF  2EE1               	goto	u4941
  9343     0EE0  2EE2               	goto	u4940
  9344     0EE1                     u4941:
  9345     0EE1  2E68               	goto	l4825
  9346     0EE2                     u4940:
  9347     0EE2                     l4857:
  9348                           
  9349                           ;main.c: 175: uart_rx_package_event = 0;
  9350     0EE2  01EF               	clrf	_uart_rx_package_event^(0+128)	;volatile
  9351                           
  9352                           ;main.c: 176: rxbuffer_index = 0;
  9353     0EE3  01FD               	clrf	_rxbuffer_index	;volatile
  9354     0EE4                     l4859:
  9355     0EE4  0140               	movlb	0	; select bank0
  9356     0EE5  111A               	bcf	26,2	;volatile
  9357     0EE6                     l4861:
  9358                           
  9359                           ;main.c: 178: get_measured_adc_value(&sensor_value);
  9360     0EE6  30A7               	movlw	(low (main@sensor_value| 0))& (0+255)
  9361     0EE7  319D  25FA  318B   	fcall	_get_measured_adc_value
  9362     0EEA                     l4863:
  9363                           
  9364                           ;main.c: 179: _delay((unsigned long)((10)*(1000000/4000.0)));
  9365     0EEA  3004               	movlw	4
  9366     0EEB  0140               	movlb	0	; select bank0
  9367     0EEC  00EB               	movwf	??_main
  9368     0EED  303D               	movlw	61
  9369     0EEE                     u5177:
  9370     0EEE  0B89               	decfsz	9,f
  9371     0EEF  2EEE               	goto	u5177
  9372     0EF0  0BEB               	decfsz	??_main,f
  9373     0EF1  2EEE               	goto	u5177
  9374     0EF2  3200               	nop2
  9375     0EF3                     l4865:
  9376     0EF3  0140               	movlb	0	; select bank0
  9377     0EF4  151A               	bsf	26,2	;volatile
  9378     0EF5                     l4867:
  9379                           
  9380                           ;main.c: 183: enable_uart_printf();
  9381     0EF5  319C  2467  318B   	fcall	_enable_uart_printf
  9382     0EF8                     l4869:
  9383                           
  9384                           ;main.c: 184: dump_memory_map();
  9385     0EF8  319C  24B8  318B   	fcall	_dump_memory_map
  9386     0EFB                     l4871:
  9387                           
  9388                           ;main.c: 191: _delay((unsigned long)((10)*(1000000/4000.0)));
  9389     0EFB  3004               	movlw	4
  9390     0EFC  0140               	movlb	0	; select bank0
  9391     0EFD  00EB               	movwf	??_main
  9392     0EFE  303D               	movlw	61
  9393     0EFF                     u5187:
  9394     0EFF  0B89               	decfsz	9,f
  9395     0F00  2EFF               	goto	u5187
  9396     0F01  0BEB               	decfsz	??_main,f
  9397     0F02  2EFF               	goto	u5187
  9398     0F03  3200               	nop2
  9399     0F04                     l4873:
  9400                           
  9401                           ;main.c: 192: enable_tx_transmit();
  9402     0F04  319C  24FC  318B   	fcall	_enable_tx_transmit
  9403     0F07  2E68               	goto	l4825
  9404     0F08                     l4877:
  9405                           
  9406                           ;main.c: 198: _delay((unsigned long)((10)*(1000000/4000.0)));
  9407     0F08  3004               	movlw	4
  9408     0F09  0140               	movlb	0	; select bank0
  9409     0F0A  00EB               	movwf	??_main
  9410     0F0B  303D               	movlw	61
  9411     0F0C                     u5197:
  9412     0F0C  0B89               	decfsz	9,f
  9413     0F0D  2F0C               	goto	u5197
  9414     0F0E  0BEB               	decfsz	??_main,f
  9415     0F0F  2F0C               	goto	u5197
  9416     0F10  3200               	nop2
  9417     0F11                     l4879:
  9418                           
  9419                           ;main.c: 199: enable_uart_printf();
  9420     0F11  319C  2467  318B   	fcall	_enable_uart_printf
  9421     0F14                     l4881:
  9422                           
  9423                           ;main.c: 200: printf("[PIC] into the STATE_OUTPUT_VALUE \r\n");
  9424     0F14  301A               	movlw	low (STR_10| (0+32768))
  9425     0F15  0140               	movlb	0	; select bank0
  9426     0F16  00AE               	movwf	printf@f
  9427     0F17  3099               	movlw	high (STR_10| (0+32768))
  9428     0F18  00AF               	movwf	printf@f+1
  9429     0F19  3180  20C1  318B   	fcall	_printf
  9430     0F1C                     l4883:
  9431                           
  9432                           ;main.c: 201: _delay((unsigned long)((10)*(1000000/4000.0)));
  9433     0F1C  3004               	movlw	4
  9434     0F1D  0140               	movlb	0	; select bank0
  9435     0F1E  00EB               	movwf	??_main
  9436     0F1F  303D               	movlw	61
  9437     0F20                     u5207:
  9438     0F20  0B89               	decfsz	9,f
  9439     0F21  2F20               	goto	u5207
  9440     0F22  0BEB               	decfsz	??_main,f
  9441     0F23  2F20               	goto	u5207
  9442     0F24  3200               	nop2
  9443     0F25                     l4885:
  9444                           
  9445                           ;main.c: 202: enable_tx_transmit();
  9446     0F25  319C  24FC  318B   	fcall	_enable_tx_transmit
  9447     0F28                     l4887:
  9448                           
  9449                           ;main.c: 203: if(uart_rx_package_event){
  9450     0F28  0141               	movlb	1	; select bank1
  9451     0F29  086F               	movf	_uart_rx_package_event^(0+128),w	;volatile
  9452     0F2A  1903               	btfsc	3,2
  9453     0F2B  2F2D               	goto	u4951
  9454     0F2C  2F2E               	goto	u4950
  9455     0F2D                     u4951:
  9456     0F2D  2F87               	goto	l4919
  9457     0F2E                     u4950:
  9458     0F2E                     l4889:
  9459                           
  9460                           ;main.c: 204: uart_rx_package_event = 0;
  9461     0F2E  01EF               	clrf	_uart_rx_package_event^(0+128)	;volatile
  9462                           
  9463                           ;main.c: 205: rxbuffer_index = 0;
  9464     0F2F  01FD               	clrf	_rxbuffer_index	;volatile
  9465     0F30                     l4891:
  9466     0F30  0140               	movlb	0	; select bank0
  9467     0F31  111A               	bcf	26,2	;volatile
  9468     0F32                     l4893:
  9469                           
  9470                           ;main.c: 207: get_measured_value(&sensor_value);
  9471     0F32  30A7               	movlw	(low (main@sensor_value| 0))& (0+255)
  9472     0F33  3188  20F7  318B   	fcall	_get_measured_value
  9473     0F36                     l4895:
  9474                           
  9475                           ;main.c: 209: Enable_Global_Interrupt();
  9476     0F36  3180  2002  318B   	fcall	_Enable_Global_Interrupt
  9477     0F39                     l4897:
  9478                           
  9479                           ;main.c: 210: i2c_slave_set_register(0x00, (uint8_t)(sensor_value.ph_value >> 8) & 0xFF)
      +                          ;
  9480     0F39  0140               	movlb	0	; select bank0
  9481     0F3A  01A0               	clrf	i2c_slave_set_register@value
  9482     0F3B  3000               	movlw	0
  9483     0F3C  319C  24C2  318B   	fcall	_i2c_slave_set_register
  9484     0F3F                     l4899:
  9485                           
  9486                           ;main.c: 211: i2c_slave_set_register(0x01, (uint8_t)(sensor_value.ph_value >> 0) & 0xFF)
      +                          ;
  9487     0F3F  0141               	movlb	1	; select bank1
  9488     0F40  0827               	movf	main@sensor_value^(0+128),w
  9489     0F41  0140               	movlb	0	; select bank0
  9490     0F42  00A0               	movwf	i2c_slave_set_register@value
  9491     0F43  3001               	movlw	1
  9492     0F44  319C  24C2  318B   	fcall	_i2c_slave_set_register
  9493     0F47                     l4901:
  9494                           
  9495                           ;main.c: 212: i2c_slave_set_register(0x02, (uint8_t)(sensor_value.temp_value >> 8) & 0xF
      +                          F);
  9496     0F47  0141               	movlb	1	; select bank1
  9497     0F48  0835               	movf	((main@sensor_value+1)^(0+128)+13),w
  9498     0F49  0140               	movlb	0	; select bank0
  9499     0F4A  00A0               	movwf	i2c_slave_set_register@value
  9500     0F4B  3002               	movlw	2
  9501     0F4C  319C  24C2  318B   	fcall	_i2c_slave_set_register
  9502     0F4F                     l4903:
  9503                           
  9504                           ;main.c: 213: i2c_slave_set_register(0x03, (uint8_t)(sensor_value.temp_value >> 0) & 0xF
      +                          F);
  9505     0F4F  0141               	movlb	1	; select bank1
  9506     0F50  0834               	movf	(main@sensor_value^(0+128)+13),w
  9507     0F51  0140               	movlb	0	; select bank0
  9508     0F52  00A0               	movwf	i2c_slave_set_register@value
  9509     0F53  3003               	movlw	3
  9510     0F54  319C  24C2  318B   	fcall	_i2c_slave_set_register
  9511     0F57                     l4905:
  9512                           
  9513                           ;main.c: 214: Disable_Global_Interrupt();
  9514     0F57  3188  2000  318B   	fcall	_Disable_Global_Interrupt
  9515     0F5A                     l4907:
  9516     0F5A  0140               	movlb	0	; select bank0
  9517     0F5B  151A               	bsf	26,2	;volatile
  9518     0F5C                     l4909:
  9519                           
  9520                           ;main.c: 218: enable_uart_printf();
  9521     0F5C  319C  2467  318B   	fcall	_enable_uart_printf
  9522     0F5F                     l4911:
  9523                           
  9524                           ;main.c: 219: dump_memory_map();
  9525     0F5F  319C  24B8  318B   	fcall	_dump_memory_map
  9526     0F62                     l4913:
  9527                           
  9528                           ;main.c: 220: printf("[RX-BUFFER] pH485 value: \r\n";main.c: 221: "TEMP: %u",;main.c: 22
      +                          2: sensor_value.ph_value,;main.c: 223: sensor_value.temp_value;main.c: 224: );
  9529     0F62  303F               	movlw	low (STR_11| (0+32768))
  9530     0F63  0140               	movlb	0	; select bank0
  9531     0F64  00AE               	movwf	printf@f
  9532     0F65  3099               	movlw	high (STR_11| (0+32768))
  9533     0F66  00AF               	movwf	printf@f+1
  9534     0F67  0141               	movlb	1	; select bank1
  9535     0F68  0827               	movf	main@sensor_value^(0+128),w
  9536     0F69  0140               	movlb	0	; select bank0
  9537     0F6A  00EB               	movwf	??_main
  9538     0F6B  01EC               	clrf	??_main+1
  9539     0F6C  086B               	movf	??_main,w
  9540     0F6D  00B0               	movwf	?_printf+2
  9541     0F6E  086C               	movf	??_main+1,w
  9542     0F6F  00B1               	movwf	?_printf+3
  9543     0F70  0141               	movlb	1	; select bank1
  9544     0F71  0835               	movf	((main@sensor_value+1)^(0+128)+13),w
  9545     0F72  0140               	movlb	0	; select bank0
  9546     0F73  00B3               	movwf	?_printf+5
  9547     0F74  0141               	movlb	1	; select bank1
  9548     0F75  0834               	movf	(main@sensor_value^(0+128)+13),w
  9549     0F76  0140               	movlb	0	; select bank0
  9550     0F77  00B2               	movwf	?_printf+4
  9551     0F78  3180  20C1  318B   	fcall	_printf
  9552     0F7B                     l4915:
  9553                           
  9554                           ;main.c: 225: _delay((unsigned long)((10)*(1000000/4000.0)));
  9555     0F7B  3004               	movlw	4
  9556     0F7C  0140               	movlb	0	; select bank0
  9557     0F7D  00EB               	movwf	??_main
  9558     0F7E  303D               	movlw	61
  9559     0F7F                     u5217:
  9560     0F7F  0B89               	decfsz	9,f
  9561     0F80  2F7F               	goto	u5217
  9562     0F81  0BEB               	decfsz	??_main,f
  9563     0F82  2F7F               	goto	u5217
  9564     0F83  3200               	nop2
  9565     0F84                     l4917:
  9566                           
  9567                           ;main.c: 226: enable_tx_transmit();
  9568     0F84  319C  24FC  318B   	fcall	_enable_tx_transmit
  9569     0F87                     l4919:
  9570                           
  9571                           ;main.c: 227: };;main.c: 228: state = STATE_MEASURE;
  9572     0F87  3002               	movlw	2
  9573     0F88  0141               	movlb	1	; select bank1
  9574     0F89  00A6               	movwf	main@state^(0+128)
  9575                           
  9576                           ;main.c: 230: break;
  9577     0F8A  2FA6               	goto	l4925
  9578     0F8B                     l4923:
  9579     0F8B  0141               	movlb	1	; select bank1
  9580     0F8C  0826               	movf	main@state^(0+128),w
  9581                           
  9582                           ; Switch size 1, requested type "simple"
  9583                           ; Number of cases is 8, Range of values is 0 to 8
  9584                           ; switch strategies available:
  9585                           ; Name         Instructions Cycles
  9586                           ; direct_byte           24     6 (fixed)
  9587                           ; simple_byte           25    13 (average)
  9588                           ; jumptable            260     6 (fixed)
  9589                           ;	Chosen strategy is simple_byte
  9590     0F8D  3A00               	xorlw	0	; case 0
  9591     0F8E  1903               	skipnz
  9592     0F8F  2CB4               	goto	l4765
  9593     0F90  3A02               	xorlw	2	; case 2
  9594     0F91  1903               	skipnz
  9595     0F92  2CC5               	goto	l4767
  9596     0F93  3A01               	xorlw	1	; case 3
  9597     0F94  1903               	skipnz
  9598     0F95  2E3D               	goto	l4815
  9599     0F96  3A07               	xorlw	7	; case 4
  9600     0F97  1903               	skipnz
  9601     0F98  2D85               	goto	l4789
  9602     0F99  3A01               	xorlw	1	; case 5
  9603     0F9A  1903               	skipnz
  9604     0F9B  2E8A               	goto	l4837
  9605     0F9C  3A03               	xorlw	3	; case 6
  9606     0F9D  1903               	skipnz
  9607     0F9E  2F08               	goto	l4877
  9608     0F9F  3A01               	xorlw	1	; case 7
  9609     0FA0  1903               	skipnz
  9610     0FA1  2E4B               	goto	l4817
  9611     0FA2  3A0F               	xorlw	15	; case 8
  9612     0FA3  1903               	skipnz
  9613     0FA4  2E6C               	goto	l4827
  9614     0FA5  2FA6               	goto	l4925
  9615     0FA6                     l4925:
  9616                           
  9617                           ;main.c: 236: now = get_ticks_with_lock();
  9618     0FA6  319D  2573  318B   	fcall	_get_ticks_with_lock
  9619     0FA9  0140               	movlb	0	; select bank0
  9620     0FAA  0823               	movf	?_get_ticks_with_lock+3,w
  9621     0FAB  0141               	movlb	1	; select bank1
  9622     0FAC  00A5               	movwf	(main@now+3)^(0+128)
  9623     0FAD  0140               	movlb	0	; select bank0
  9624     0FAE  0822               	movf	?_get_ticks_with_lock+2,w
  9625     0FAF  0141               	movlb	1	; select bank1
  9626     0FB0  00A4               	movwf	(main@now+2)^(0+128)
  9627     0FB1  0140               	movlb	0	; select bank0
  9628     0FB2  0821               	movf	?_get_ticks_with_lock+1,w
  9629     0FB3  0141               	movlb	1	; select bank1
  9630     0FB4  00A3               	movwf	(main@now+1)^(0+128)
  9631     0FB5  0140               	movlb	0	; select bank0
  9632     0FB6  0820               	movf	?_get_ticks_with_lock,w
  9633     0FB7  0141               	movlb	1	; select bank1
  9634     0FB8  00A2               	movwf	main@now^(0+128)
  9635     0FB9                     l4927:
  9636                           
  9637                           ;main.c: 237: static uint32_t prev_ticks2 = 0;;main.c: 238: if(calculate_diff(now, prev_
      +                          ticks2) >= 2000){
  9638     0FB9  0825               	movf	(main@now+3)^(0+128),w
  9639     0FBA  0140               	movlb	0	; select bank0
  9640     0FBB  00A3               	movwf	calculate_diff@now+3
  9641     0FBC  0141               	movlb	1	; select bank1
  9642     0FBD  0824               	movf	(main@now+2)^(0+128),w
  9643     0FBE  0140               	movlb	0	; select bank0
  9644     0FBF  00A2               	movwf	calculate_diff@now+2
  9645     0FC0  0141               	movlb	1	; select bank1
  9646     0FC1  0823               	movf	(main@now+1)^(0+128),w
  9647     0FC2  0140               	movlb	0	; select bank0
  9648     0FC3  00A1               	movwf	calculate_diff@now+1
  9649     0FC4  0141               	movlb	1	; select bank1
  9650     0FC5  0822               	movf	main@now^(0+128),w
  9651     0FC6  0140               	movlb	0	; select bank0
  9652     0FC7  00A0               	movwf	calculate_diff@now
  9653     0FC8  0142               	movlb	2	; select bank2
  9654     0FC9  0847               	movf	(main@prev_ticks2+3)^(0+256),w
  9655     0FCA  0140               	movlb	0	; select bank0
  9656     0FCB  00A7               	movwf	calculate_diff@prev_ticks+3
  9657     0FCC  0142               	movlb	2	; select bank2
  9658     0FCD  0846               	movf	(main@prev_ticks2+2)^(0+256),w
  9659     0FCE  0140               	movlb	0	; select bank0
  9660     0FCF  00A6               	movwf	calculate_diff@prev_ticks+2
  9661     0FD0  0142               	movlb	2	; select bank2
  9662     0FD1  0845               	movf	(main@prev_ticks2+1)^(0+256),w
  9663     0FD2  0140               	movlb	0	; select bank0
  9664     0FD3  00A5               	movwf	calculate_diff@prev_ticks+1
  9665     0FD4  0142               	movlb	2	; select bank2
  9666     0FD5  0844               	movf	main@prev_ticks2^(0+256),w
  9667     0FD6  0140               	movlb	0	; select bank0
  9668     0FD7  00A4               	movwf	calculate_diff@prev_ticks
  9669     0FD8  3192  22E8  318B   	fcall	_calculate_diff
  9670     0FDB  0140               	movlb	0	; select bank0
  9671     0FDC  0823               	movf	?_calculate_diff+3,w
  9672     0FDD  1D03               	btfss	3,2
  9673     0FDE  2FEA               	goto	u4960
  9674     0FDF  0822               	movf	?_calculate_diff+2,w
  9675     0FE0  1D03               	btfss	3,2
  9676     0FE1  2FEA               	goto	u4960
  9677     0FE2  30D0               	movlw	208
  9678     0FE3  0220               	subwf	?_calculate_diff,w
  9679     0FE4  3007               	movlw	7
  9680     0FE5  3B21               	subwfb	?_calculate_diff+1,w
  9681     0FE6  1C03               	btfss	3,0
  9682     0FE7  2FE9               	goto	u4961
  9683     0FE8  2FEA               	goto	u4960
  9684     0FE9                     u4961:
  9685     0FE9  2C32               	goto	l4751
  9686     0FEA                     u4960:
  9687     0FEA                     l4929:
  9688                           
  9689                           ;main.c: 239: prev_ticks2 = now;
  9690     0FEA  0141               	movlb	1	; select bank1
  9691     0FEB  0825               	movf	(main@now+3)^(0+128),w
  9692     0FEC  0142               	movlb	2	; select bank2
  9693     0FED  00C7               	movwf	(main@prev_ticks2+3)^(0+256)
  9694     0FEE  0141               	movlb	1	; select bank1
  9695     0FEF  0824               	movf	(main@now+2)^(0+128),w
  9696     0FF0  0142               	movlb	2	; select bank2
  9697     0FF1  00C6               	movwf	(main@prev_ticks2+2)^(0+256)
  9698     0FF2  0141               	movlb	1	; select bank1
  9699     0FF3  0823               	movf	(main@now+1)^(0+128),w
  9700     0FF4  0142               	movlb	2	; select bank2
  9701     0FF5  00C5               	movwf	(main@prev_ticks2+1)^(0+256)
  9702     0FF6  0141               	movlb	1	; select bank1
  9703     0FF7  0822               	movf	main@now^(0+128),w
  9704     0FF8  0142               	movlb	2	; select bank2
  9705     0FF9  00C4               	movwf	main@prev_ticks2^(0+256)
  9706     0FFA                     l4931:
  9707                           
  9708                           ;main.c: 240: set_device_serial_number_to_i2c_slave_memorymap();
  9709     0FFA  3192  2217  318B   	fcall	_set_device_serial_number_to_i2c_slave_memorymap
  9710     0FFD  2C32               	goto	l4751
  9711     0FFE  3180  2869         	ljmp	start
  9712     1000                     __end_of_main:
  9713                           
  9714                           	psect	text1
  9715     1D0A                     __ptext1:	
  9716 ;; *************** function _usart_init *****************
  9717 ;; Defined at:
  9718 ;;		line 13 in file "uart.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      void 
  9725 ;; Registers used:
  9726 ;;		wreg, status,2
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;Total ram usage:        0 bytes
  9737 ;; Hardware stack levels used: 1
  9738 ;; Hardware stack levels required when called: 2
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_main
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746     1D0A                     _usart_init:	
  9747                           ;psect for function _usart_init
  9748                           
  9749     1D0A                     l4371:	
  9750                           ;incstack = 0
  9751                           ; Regs used in _usart_init: [wreg+status,2]
  9752                           
  9753                           
  9754                           ;uart.c: 14: PIE3bits.RC1IE = 0;
  9755     1D0A  014E               	movlb	14	; select bank14
  9756     1D0B  1299               	bcf	25,5	;volatile
  9757                           
  9758                           ;uart.c: 15: PIE3bits.TX1IE = 0;
  9759     1D0C  1219               	bcf	25,4	;volatile
  9760     1D0D                     l4373:
  9761                           
  9762                           ;uart.c: 18: BAUD1CON = 0x08;
  9763     1D0D  3008               	movlw	8
  9764     1D0E  0142               	movlb	2	; select bank2
  9765     1D0F  009F               	movwf	31	;volatile
  9766                           
  9767                           ;uart.c: 19: SP1BRGL = 0x19;
  9768     1D10  3019               	movlw	25
  9769     1D11  009B               	movwf	27	;volatile
  9770     1D12                     l4375:
  9771                           
  9772                           ;uart.c: 20: SP1BRGH = 0x00;
  9773     1D12  019C               	clrf	28	;volatile
  9774     1D13                     l4377:
  9775                           
  9776                           ;uart.c: 22: TX1STA = 0x24;
  9777     1D13  3024               	movlw	36
  9778     1D14  009E               	movwf	30	;volatile
  9779     1D15                     l4379:
  9780                           
  9781                           ;uart.c: 23: RC1STA = 0x90;
  9782     1D15  3090               	movlw	144
  9783     1D16  009D               	movwf	29	;volatile
  9784     1D17                     l4381:
  9785                           
  9786                           ;uart.c: 25: PIE3bits.RC1IE = 1;
  9787     1D17  014E               	movlb	14	; select bank14
  9788     1D18  1699               	bsf	25,5	;volatile
  9789     1D19                     l465:
  9790     1D19  0008               	return
  9791     1D1A                     __end_of_usart_init:
  9792                           
  9793                           	psect	text2
  9794     1677                     __ptext2:	
  9795 ;; *************** function _update_mybutton *****************
  9796 ;; Defined at:
  9797 ;;		line 100 in file "mybutton.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  b               1    wreg     PTR struct mybutton
  9800 ;;		 -> main@b2(27), main@b1(27), 
  9801 ;;  signal          1   17[BANK0 ] unsigned char 
  9802 ;;  now             4   18[BANK0 ] unsigned long 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  b               1   26[BANK0 ] PTR struct mybutton
  9805 ;;		 -> main@b2(27), main@b1(27), 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  1    wreg      void 
  9808 ;; Registers used:
  9809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9815 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;Total ram usage:       10 bytes
  9820 ;; Hardware stack levels used: 1
  9821 ;; Hardware stack levels required when called: 3
  9822 ;; This function calls:
  9823 ;;		___is_double_click
  9824 ;;		___is_long_press
  9825 ;;		___is_single_click
  9826 ;; This function is called by:
  9827 ;;		_main
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831     1677                     _update_mybutton:	
  9832                           ;psect for function _update_mybutton
  9833                           
  9834                           
  9835                           ;incstack = 0
  9836                           ; Regs used in _update_mybutton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9837                           ;update_mybutton@b stored from wreg
  9838     1677  0140               	movlb	0	; select bank0
  9839     1678  00BA               	movwf	update_mybutton@b
  9840     1679                     l4443:
  9841                           
  9842                           ;mybutton.c: 102: b->signals[0] = b->signals[1];
  9843     1679  083A               	movf	update_mybutton@b,w
  9844     167A  0086               	movwf	6
  9845     167B  0187               	clrf	7
  9846     167C  0A3A               	incf	update_mybutton@b,w
  9847     167D  0084               	movwf	4
  9848     167E  0185               	clrf	5
  9849     167F  0800               	movf	0,w
  9850     1680  0081               	movwf	1
  9851     1681                     l4445:
  9852                           
  9853                           ;mybutton.c: 103: b->signals[1] = signal;
  9854     1681  0A3A               	incf	update_mybutton@b,w
  9855     1682  0086               	movwf	6
  9856     1683  0187               	clrf	7
  9857     1684  0831               	movf	update_mybutton@signal,w
  9858     1685  0081               	movwf	1
  9859     1686                     l4447:
  9860                           
  9861                           ;mybutton.c: 105: if( 1 == b->signals[0] && 0 == b->signals[1] ){
  9862     1686  083A               	movf	update_mybutton@b,w
  9863     1687  0086               	movwf	6
  9864     1688  0187               	clrf	7
  9865     1689  0301               	decf	1,w
  9866     168A  1D03               	btfss	3,2
  9867     168B  2E8D               	goto	u4611
  9868     168C  2E8E               	goto	u4610
  9869     168D                     u4611:
  9870     168D  2EBA               	goto	l385
  9871     168E                     u4610:
  9872     168E                     l4449:
  9873     168E  0A3A               	incf	update_mybutton@b,w
  9874     168F  0086               	movwf	6
  9875     1690  0187               	clrf	7
  9876     1691  0801               	movf	1,w
  9877     1692  1D03               	btfss	3,2
  9878     1693  2E95               	goto	u4621
  9879     1694  2E96               	goto	u4620
  9880     1695                     u4621:
  9881     1695  2EBA               	goto	l385
  9882     1696                     u4620:
  9883     1696                     l4451:
  9884                           
  9885                           ;mybutton.c: 106: b->falling_ts[0] = b->falling_ts[1];
  9886     1696  083A               	movf	update_mybutton@b,w
  9887     1697  3E06               	addlw	6
  9888     1698  0086               	movwf	6
  9889     1699  0187               	clrf	7
  9890     169A  3F40               	moviw [0]fsr1
  9891     169B  00B6               	movwf	??_update_mybutton
  9892     169C  3F41               	moviw [1]fsr1
  9893     169D  00B7               	movwf	??_update_mybutton+1
  9894     169E  3F42               	moviw [2]fsr1
  9895     169F  00B8               	movwf	??_update_mybutton+2
  9896     16A0  3F43               	moviw [3]fsr1
  9897     16A1  00B9               	movwf	??_update_mybutton+3
  9898     16A2  083A               	movf	update_mybutton@b,w
  9899     16A3  3E02               	addlw	2
  9900     16A4  0086               	movwf	6
  9901     16A5  0187               	clrf	7
  9902     16A6  0836               	movf	??_update_mybutton,w
  9903     16A7  3FC0               	movwi [0]fsr1
  9904     16A8  0837               	movf	??_update_mybutton+1,w
  9905     16A9  3FC1               	movwi [1]fsr1
  9906     16AA  0838               	movf	??_update_mybutton+2,w
  9907     16AB  3FC2               	movwi [2]fsr1
  9908     16AC  0839               	movf	??_update_mybutton+3,w
  9909     16AD  3FC3               	movwi [3]fsr1
  9910                           
  9911                           ;mybutton.c: 107: b->falling_ts[1] = now;
  9912     16AE  083A               	movf	update_mybutton@b,w
  9913     16AF  3E06               	addlw	6
  9914     16B0  0086               	movwf	6
  9915     16B1  0187               	clrf	7
  9916     16B2  0832               	movf	update_mybutton@now,w
  9917     16B3  3FC0               	movwi [0]fsr1
  9918     16B4  0833               	movf	update_mybutton@now+1,w
  9919     16B5  3FC1               	movwi [1]fsr1
  9920     16B6  0834               	movf	update_mybutton@now+2,w
  9921     16B7  3FC2               	movwi [2]fsr1
  9922     16B8  0835               	movf	update_mybutton@now+3,w
  9923     16B9  3FC3               	movwi [3]fsr1
  9924     16BA                     l385:
  9925                           
  9926                           ;mybutton.c: 108: };mybutton.c: 110: if( 0 == b->signals[0] && 1 == b->signals[1] ){
  9927     16BA  083A               	movf	update_mybutton@b,w
  9928     16BB  0086               	movwf	6
  9929     16BC  0187               	clrf	7
  9930     16BD  0801               	movf	1,w
  9931     16BE  1D03               	btfss	3,2
  9932     16BF  2EC1               	goto	u4631
  9933     16C0  2EC2               	goto	u4630
  9934     16C1                     u4631:
  9935     16C1  2EEE               	goto	l4457
  9936     16C2                     u4630:
  9937     16C2                     l4453:
  9938     16C2  0A3A               	incf	update_mybutton@b,w
  9939     16C3  0086               	movwf	6
  9940     16C4  0187               	clrf	7
  9941     16C5  0301               	decf	1,w
  9942     16C6  1D03               	btfss	3,2
  9943     16C7  2EC9               	goto	u4641
  9944     16C8  2ECA               	goto	u4640
  9945     16C9                     u4641:
  9946     16C9  2EEE               	goto	l4457
  9947     16CA                     u4640:
  9948     16CA                     l4455:
  9949                           
  9950                           ;mybutton.c: 111: b->rising_ts[0] = b->rising_ts[1];
  9951     16CA  083A               	movf	update_mybutton@b,w
  9952     16CB  3E0E               	addlw	14
  9953     16CC  0086               	movwf	6
  9954     16CD  0187               	clrf	7
  9955     16CE  3F40               	moviw [0]fsr1
  9956     16CF  00B6               	movwf	??_update_mybutton
  9957     16D0  3F41               	moviw [1]fsr1
  9958     16D1  00B7               	movwf	??_update_mybutton+1
  9959     16D2  3F42               	moviw [2]fsr1
  9960     16D3  00B8               	movwf	??_update_mybutton+2
  9961     16D4  3F43               	moviw [3]fsr1
  9962     16D5  00B9               	movwf	??_update_mybutton+3
  9963     16D6  083A               	movf	update_mybutton@b,w
  9964     16D7  3E0A               	addlw	10
  9965     16D8  0086               	movwf	6
  9966     16D9  0187               	clrf	7
  9967     16DA  0836               	movf	??_update_mybutton,w
  9968     16DB  3FC0               	movwi [0]fsr1
  9969     16DC  0837               	movf	??_update_mybutton+1,w
  9970     16DD  3FC1               	movwi [1]fsr1
  9971     16DE  0838               	movf	??_update_mybutton+2,w
  9972     16DF  3FC2               	movwi [2]fsr1
  9973     16E0  0839               	movf	??_update_mybutton+3,w
  9974     16E1  3FC3               	movwi [3]fsr1
  9975                           
  9976                           ;mybutton.c: 112: b->rising_ts[1] = now;
  9977     16E2  083A               	movf	update_mybutton@b,w
  9978     16E3  3E0E               	addlw	14
  9979     16E4  0086               	movwf	6
  9980     16E5  0187               	clrf	7
  9981     16E6  0832               	movf	update_mybutton@now,w
  9982     16E7  3FC0               	movwi [0]fsr1
  9983     16E8  0833               	movf	update_mybutton@now+1,w
  9984     16E9  3FC1               	movwi [1]fsr1
  9985     16EA  0834               	movf	update_mybutton@now+2,w
  9986     16EB  3FC2               	movwi [2]fsr1
  9987     16EC  0835               	movf	update_mybutton@now+3,w
  9988     16ED  3FC3               	movwi [3]fsr1
  9989     16EE                     l4457:
  9990                           
  9991                           ;mybutton.c: 113: };mybutton.c: 115: if( __is_single_click(b, now) ){
  9992     16EE  0835               	movf	update_mybutton@now+3,w
  9993     16EF  00A3               	movwf	___is_single_click@now+3
  9994     16F0  0834               	movf	update_mybutton@now+2,w
  9995     16F1  00A2               	movwf	___is_single_click@now+2
  9996     16F2  0833               	movf	update_mybutton@now+1,w
  9997     16F3  00A1               	movwf	___is_single_click@now+1
  9998     16F4  0832               	movf	update_mybutton@now,w
  9999     16F5  00A0               	movwf	___is_single_click@now
 10000     16F6  083A               	movf	update_mybutton@b,w
 10001     16F7  3189  21DA  3196   	fcall	___is_single_click
 10002     16FA  3A00               	xorlw	0
 10003     16FB  1903               	skipnz
 10004     16FC  2EFE               	goto	u4651
 10005     16FD  2EFF               	goto	u4650
 10006     16FE                     u4651:
 10007     16FE  2F06               	goto	l4461
 10008     16FF                     u4650:
 10009     16FF                     l4459:
 10010                           
 10011                           ;mybutton.c: 116: b->single_clicked_flag = 1;
 10012     16FF  0140               	movlb	0	; select bank0
 10013     1700  083A               	movf	update_mybutton@b,w
 10014     1701  3E18               	addlw	24
 10015     1702  0086               	movwf	6
 10016     1703  0187               	clrf	7
 10017     1704  0181               	clrf	1
 10018     1705  0A81               	incf	1,f
 10019     1706                     l4461:
 10020                           
 10021                           ;mybutton.c: 117: };mybutton.c: 119: if( __is_double_click(b, now) ){
 10022     1706  0140               	movlb	0	; select bank0
 10023     1707  0835               	movf	update_mybutton@now+3,w
 10024     1708  00A3               	movwf	___is_double_click@now+3
 10025     1709  0834               	movf	update_mybutton@now+2,w
 10026     170A  00A2               	movwf	___is_double_click@now+2
 10027     170B  0833               	movf	update_mybutton@now+1,w
 10028     170C  00A1               	movwf	___is_double_click@now+1
 10029     170D  0832               	movf	update_mybutton@now,w
 10030     170E  00A0               	movwf	___is_double_click@now
 10031     170F  083A               	movf	update_mybutton@b,w
 10032     1710  3188  2022  3196   	fcall	___is_double_click
 10033     1713  3A00               	xorlw	0
 10034     1714  1903               	skipnz
 10035     1715  2F17               	goto	u4661
 10036     1716  2F18               	goto	u4660
 10037     1717                     u4661:
 10038     1717  2F1F               	goto	l4465
 10039     1718                     u4660:
 10040     1718                     l4463:
 10041                           
 10042                           ;mybutton.c: 120: b->double_clicked_flag = 1;
 10043     1718  0140               	movlb	0	; select bank0
 10044     1719  083A               	movf	update_mybutton@b,w
 10045     171A  3E19               	addlw	25
 10046     171B  0086               	movwf	6
 10047     171C  0187               	clrf	7
 10048     171D  0181               	clrf	1
 10049     171E  0A81               	incf	1,f
 10050     171F                     l4465:
 10051                           
 10052                           ;mybutton.c: 121: };mybutton.c: 123: if( __is_long_press(b, now) ){
 10053     171F  0140               	movlb	0	; select bank0
 10054     1720  0835               	movf	update_mybutton@now+3,w
 10055     1721  00A3               	movwf	___is_long_press@now+3
 10056     1722  0834               	movf	update_mybutton@now+2,w
 10057     1723  00A2               	movwf	___is_long_press@now+2
 10058     1724  0833               	movf	update_mybutton@now+1,w
 10059     1725  00A1               	movwf	___is_long_press@now+1
 10060     1726  0832               	movf	update_mybutton@now,w
 10061     1727  00A0               	movwf	___is_long_press@now
 10062     1728  083A               	movf	update_mybutton@b,w
 10063     1729  3195  253A  3196   	fcall	___is_long_press
 10064     172C  3A00               	xorlw	0
 10065     172D  1903               	skipnz
 10066     172E  2F30               	goto	u4671
 10067     172F  2F31               	goto	u4670
 10068     1730                     u4671:
 10069     1730  2F38               	goto	l390
 10070     1731                     u4670:
 10071     1731                     l4467:
 10072                           
 10073                           ;mybutton.c: 124: b->long_press_flag = 1;
 10074     1731  0140               	movlb	0	; select bank0
 10075     1732  083A               	movf	update_mybutton@b,w
 10076     1733  3E1A               	addlw	26
 10077     1734  0086               	movwf	6
 10078     1735  0187               	clrf	7
 10079     1736  0181               	clrf	1
 10080     1737  0A81               	incf	1,f
 10081     1738                     l390:
 10082     1738  0008               	return
 10083     1739                     __end_of_update_mybutton:
 10084                           
 10085                           	psect	text3
 10086     09DA                     __ptext3:	
 10087 ;; *************** function ___is_single_click *****************
 10088 ;; Defined at:
 10089 ;;		line 37 in file "mybutton.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  b               1    wreg     PTR struct mybutton
 10092 ;;		 -> main@b2(27), main@b1(27), 
 10093 ;;  now             4    0[BANK0 ] unsigned long 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  b               1   16[BANK0 ] PTR struct mybutton
 10096 ;;		 -> main@b2(27), main@b1(27), 
 10097 ;;  condition4      1   15[BANK0 ] unsigned char 
 10098 ;;  condition3      1   14[BANK0 ] unsigned char 
 10099 ;;  condition2      1   13[BANK0 ] unsigned char 
 10100 ;;  condition1      1   12[BANK0 ] unsigned char 
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  1    wreg      unsigned char 
 10103 ;; Registers used:
 10104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10110 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;Total ram usage:       17 bytes
 10115 ;; Hardware stack levels used: 1
 10116 ;; Hardware stack levels required when called: 2
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_update_mybutton
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124     09DA                     ___is_single_click:	
 10125                           ;psect for function ___is_single_click
 10126                           
 10127                           
 10128                           ;incstack = 0
 10129                           ; Regs used in ___is_single_click: [wreg-fsr1h+status,2+status,0]
 10130                           ;___is_single_click@b stored from wreg
 10131     09DA  0140               	movlb	0	; select bank0
 10132     09DB  00B0               	movwf	___is_single_click@b
 10133     09DC                     l3979:
 10134                           
 10135                           ;mybutton.c: 39: bool condition1 = (b->rising_ts[1] > b->falling_ts[1]);
 10136     09DC  0830               	movf	___is_single_click@b,w
 10137     09DD  3E0E               	addlw	14
 10138     09DE  0086               	movwf	6
 10139     09DF  0187               	clrf	7
 10140     09E0  3F40               	moviw [0]fsr1
 10141     09E1  00A4               	movwf	??___is_single_click
 10142     09E2  3F41               	moviw [1]fsr1
 10143     09E3  00A5               	movwf	??___is_single_click+1
 10144     09E4  3F42               	moviw [2]fsr1
 10145     09E5  00A6               	movwf	??___is_single_click+2
 10146     09E6  3F43               	moviw [3]fsr1
 10147     09E7  00A7               	movwf	??___is_single_click+3
 10148     09E8  0830               	movf	___is_single_click@b,w
 10149     09E9  3E06               	addlw	6
 10150     09EA  0086               	movwf	6
 10151     09EB  0187               	clrf	7
 10152     09EC  3F40               	moviw [0]fsr1
 10153     09ED  00A8               	movwf	??___is_single_click+4
 10154     09EE  3F41               	moviw [1]fsr1
 10155     09EF  00A9               	movwf	??___is_single_click+5
 10156     09F0  3F42               	moviw [2]fsr1
 10157     09F1  00AA               	movwf	??___is_single_click+6
 10158     09F2  3F43               	moviw [3]fsr1
 10159     09F3  00AB               	movwf	??___is_single_click+7
 10160     09F4  0827               	movf	??___is_single_click+3,w
 10161     09F5  022B               	subwf	??___is_single_click+7,w
 10162     09F6  1D03               	skipz
 10163     09F7  2A02               	goto	u3745
 10164     09F8  0826               	movf	??___is_single_click+2,w
 10165     09F9  022A               	subwf	??___is_single_click+6,w
 10166     09FA  1D03               	skipz
 10167     09FB  2A02               	goto	u3745
 10168     09FC  0825               	movf	??___is_single_click+1,w
 10169     09FD  0229               	subwf	??___is_single_click+5,w
 10170     09FE  1D03               	skipz
 10171     09FF  2A02               	goto	u3745
 10172     0A00  0824               	movf	??___is_single_click,w
 10173     0A01  0228               	subwf	??___is_single_click+4,w
 10174     0A02                     u3745:
 10175     0A02  1C03               	skipc
 10176     0A03  2A05               	goto	u3741
 10177     0A04  2A07               	goto	u3740
 10178     0A05                     u3741:
 10179     0A05  3001               	movlw	1
 10180     0A06  2A08               	goto	u3750
 10181     0A07                     u3740:
 10182     0A07  3000               	movlw	0
 10183     0A08                     u3750:
 10184     0A08  00AC               	movwf	___is_single_click@condition1
 10185                           
 10186                           ;mybutton.c: 40: bool condition2 = (now - b->rising_ts[1] > 200);
 10187     0A09  0830               	movf	___is_single_click@b,w
 10188     0A0A  3E0E               	addlw	14
 10189     0A0B  0086               	movwf	6
 10190     0A0C  0187               	clrf	7
 10191     0A0D  3F40               	moviw [0]fsr1
 10192     0A0E  00A4               	movwf	??___is_single_click
 10193     0A0F  3F41               	moviw [1]fsr1
 10194     0A10  00A5               	movwf	??___is_single_click+1
 10195     0A11  3F42               	moviw [2]fsr1
 10196     0A12  00A6               	movwf	??___is_single_click+2
 10197     0A13  3F43               	moviw [3]fsr1
 10198     0A14  00A7               	movwf	??___is_single_click+3
 10199     0A15  0820               	movf	___is_single_click@now,w
 10200     0A16  00A8               	movwf	??___is_single_click+4
 10201     0A17  0821               	movf	___is_single_click@now+1,w
 10202     0A18  00A9               	movwf	??___is_single_click+5
 10203     0A19  0822               	movf	___is_single_click@now+2,w
 10204     0A1A  00AA               	movwf	??___is_single_click+6
 10205     0A1B  0823               	movf	___is_single_click@now+3,w
 10206     0A1C  00AB               	movwf	??___is_single_click+7
 10207     0A1D  0824               	movf	??___is_single_click,w
 10208     0A1E  02A8               	subwf	??___is_single_click+4,f
 10209     0A1F  0825               	movf	??___is_single_click+1,w
 10210     0A20  3BA9               	subwfb	??___is_single_click+5,f
 10211     0A21  0826               	movf	??___is_single_click+2,w
 10212     0A22  3BAA               	subwfb	??___is_single_click+6,f
 10213     0A23  0827               	movf	??___is_single_click+3,w
 10214     0A24  3BAB               	subwfb	??___is_single_click+7,f
 10215     0A25  082B               	movf	??___is_single_click+7,w
 10216     0A26  1D03               	btfss	3,2
 10217     0A27  2A33               	goto	u3761
 10218     0A28  082A               	movf	??___is_single_click+6,w
 10219     0A29  1D03               	btfss	3,2
 10220     0A2A  2A33               	goto	u3761
 10221     0A2B  0829               	movf	??___is_single_click+5,w
 10222     0A2C  1D03               	btfss	3,2
 10223     0A2D  2A33               	goto	u3761
 10224     0A2E  30C9               	movlw	201
 10225     0A2F  0228               	subwf	??___is_single_click+4,w
 10226     0A30  1803               	btfsc	3,0
 10227     0A31  2A33               	goto	u3761
 10228     0A32  2A35               	goto	u3760
 10229     0A33                     u3761:
 10230     0A33  3001               	movlw	1
 10231     0A34  2A36               	goto	u3770
 10232     0A35                     u3760:
 10233     0A35  3000               	movlw	0
 10234     0A36                     u3770:
 10235     0A36  0140               	movlb	0	; select bank0
 10236     0A37  00AD               	movwf	___is_single_click@condition2
 10237                           
 10238                           ;mybutton.c: 41: bool condition3 = (b->rising_ts[1] - b->rising_ts[0] > 500);
 10239     0A38  0830               	movf	___is_single_click@b,w
 10240     0A39  3E0A               	addlw	10
 10241     0A3A  0086               	movwf	6
 10242     0A3B  0187               	clrf	7
 10243     0A3C  3F40               	moviw [0]fsr1
 10244     0A3D  00A4               	movwf	??___is_single_click
 10245     0A3E  3F41               	moviw [1]fsr1
 10246     0A3F  00A5               	movwf	??___is_single_click+1
 10247     0A40  3F42               	moviw [2]fsr1
 10248     0A41  00A6               	movwf	??___is_single_click+2
 10249     0A42  3F43               	moviw [3]fsr1
 10250     0A43  00A7               	movwf	??___is_single_click+3
 10251     0A44  0830               	movf	___is_single_click@b,w
 10252     0A45  3E0E               	addlw	14
 10253     0A46  0086               	movwf	6
 10254     0A47  0187               	clrf	7
 10255     0A48  3F40               	moviw [0]fsr1
 10256     0A49  00A8               	movwf	??___is_single_click+4
 10257     0A4A  3F41               	moviw [1]fsr1
 10258     0A4B  00A9               	movwf	??___is_single_click+5
 10259     0A4C  3F42               	moviw [2]fsr1
 10260     0A4D  00AA               	movwf	??___is_single_click+6
 10261     0A4E  3F43               	moviw [3]fsr1
 10262     0A4F  00AB               	movwf	??___is_single_click+7
 10263     0A50  0824               	movf	??___is_single_click,w
 10264     0A51  02A8               	subwf	??___is_single_click+4,f
 10265     0A52  0825               	movf	??___is_single_click+1,w
 10266     0A53  3BA9               	subwfb	??___is_single_click+5,f
 10267     0A54  0826               	movf	??___is_single_click+2,w
 10268     0A55  3BAA               	subwfb	??___is_single_click+6,f
 10269     0A56  0827               	movf	??___is_single_click+3,w
 10270     0A57  3BAB               	subwfb	??___is_single_click+7,f
 10271     0A58  082B               	movf	??___is_single_click+7,w
 10272     0A59  1D03               	btfss	3,2
 10273     0A5A  2A65               	goto	u3781
 10274     0A5B  082A               	movf	??___is_single_click+6,w
 10275     0A5C  1D03               	btfss	3,2
 10276     0A5D  2A65               	goto	u3781
 10277     0A5E  30F5               	movlw	245
 10278     0A5F  0228               	subwf	??___is_single_click+4,w
 10279     0A60  3001               	movlw	1
 10280     0A61  3B29               	subwfb	??___is_single_click+5,w
 10281     0A62  1803               	btfsc	3,0
 10282     0A63  2A65               	goto	u3781
 10283     0A64  2A67               	goto	u3780
 10284     0A65                     u3781:
 10285     0A65  3001               	movlw	1
 10286     0A66  2A68               	goto	u3790
 10287     0A67                     u3780:
 10288     0A67  3000               	movlw	0
 10289     0A68                     u3790:
 10290     0A68  0140               	movlb	0	; select bank0
 10291     0A69  00AE               	movwf	___is_single_click@condition3
 10292                           
 10293                           ;mybutton.c: 42: bool condition4 = (now - b->falling_ts[1] < 4000);
 10294     0A6A  0830               	movf	___is_single_click@b,w
 10295     0A6B  3E06               	addlw	6
 10296     0A6C  0086               	movwf	6
 10297     0A6D  0187               	clrf	7
 10298     0A6E  3F40               	moviw [0]fsr1
 10299     0A6F  00A4               	movwf	??___is_single_click
 10300     0A70  3F41               	moviw [1]fsr1
 10301     0A71  00A5               	movwf	??___is_single_click+1
 10302     0A72  3F42               	moviw [2]fsr1
 10303     0A73  00A6               	movwf	??___is_single_click+2
 10304     0A74  3F43               	moviw [3]fsr1
 10305     0A75  00A7               	movwf	??___is_single_click+3
 10306     0A76  0820               	movf	___is_single_click@now,w
 10307     0A77  00A8               	movwf	??___is_single_click+4
 10308     0A78  0821               	movf	___is_single_click@now+1,w
 10309     0A79  00A9               	movwf	??___is_single_click+5
 10310     0A7A  0822               	movf	___is_single_click@now+2,w
 10311     0A7B  00AA               	movwf	??___is_single_click+6
 10312     0A7C  0823               	movf	___is_single_click@now+3,w
 10313     0A7D  00AB               	movwf	??___is_single_click+7
 10314     0A7E  0824               	movf	??___is_single_click,w
 10315     0A7F  02A8               	subwf	??___is_single_click+4,f
 10316     0A80  0825               	movf	??___is_single_click+1,w
 10317     0A81  3BA9               	subwfb	??___is_single_click+5,f
 10318     0A82  0826               	movf	??___is_single_click+2,w
 10319     0A83  3BAA               	subwfb	??___is_single_click+6,f
 10320     0A84  0827               	movf	??___is_single_click+3,w
 10321     0A85  3BAB               	subwfb	??___is_single_click+7,f
 10322     0A86  082B               	movf	??___is_single_click+7,w
 10323     0A87  1D03               	btfss	3,2
 10324     0A88  2A95               	goto	u3800
 10325     0A89  082A               	movf	??___is_single_click+6,w
 10326     0A8A  1D03               	btfss	3,2
 10327     0A8B  2A95               	goto	u3800
 10328     0A8C  30A0               	movlw	160
 10329     0A8D  0228               	subwf	??___is_single_click+4,w
 10330     0A8E  300F               	movlw	15
 10331     0A8F  3B29               	subwfb	??___is_single_click+5,w
 10332     0A90  1C03               	btfss	3,0
 10333     0A91  2A93               	goto	u3801
 10334     0A92  2A95               	goto	u3800
 10335     0A93                     u3801:
 10336     0A93  3001               	movlw	1
 10337     0A94  2A96               	goto	u3810
 10338     0A95                     u3800:
 10339     0A95  3000               	movlw	0
 10340     0A96                     u3810:
 10341     0A96  0140               	movlb	0	; select bank0
 10342     0A97  00AF               	movwf	___is_single_click@condition4
 10343     0A98                     l3981:
 10344                           
 10345                           ;mybutton.c: 44: if (condition1 && condition2 && condition3 && condition4){
 10346     0A98  082C               	movf	___is_single_click@condition1,w
 10347     0A99  1903               	btfsc	3,2
 10348     0A9A  2A9C               	goto	u3821
 10349     0A9B  2A9D               	goto	u3820
 10350     0A9C                     u3821:
 10351     0A9C  2ABD               	goto	l3993
 10352     0A9D                     u3820:
 10353     0A9D                     l3983:
 10354     0A9D  082D               	movf	___is_single_click@condition2,w
 10355     0A9E  1903               	btfsc	3,2
 10356     0A9F  2AA1               	goto	u3831
 10357     0AA0  2AA2               	goto	u3830
 10358     0AA1                     u3831:
 10359     0AA1  2ABD               	goto	l3993
 10360     0AA2                     u3830:
 10361     0AA2                     l3985:
 10362     0AA2  082E               	movf	___is_single_click@condition3,w
 10363     0AA3  1903               	btfsc	3,2
 10364     0AA4  2AA6               	goto	u3841
 10365     0AA5  2AA7               	goto	u3840
 10366     0AA6                     u3841:
 10367     0AA6  2ABD               	goto	l3993
 10368     0AA7                     u3840:
 10369     0AA7                     l3987:
 10370     0AA7  082F               	movf	___is_single_click@condition4,w
 10371     0AA8  1903               	btfsc	3,2
 10372     0AA9  2AAB               	goto	u3851
 10373     0AAA  2AAC               	goto	u3850
 10374     0AAB                     u3851:
 10375     0AAB  2ABD               	goto	l3993
 10376     0AAC                     u3850:
 10377     0AAC                     l3989:
 10378                           
 10379                           ;mybutton.c: 45: b->single_click_tmps[0] = b->single_click_tmps[1];
 10380     0AAC  0830               	movf	___is_single_click@b,w
 10381     0AAD  3E12               	addlw	18
 10382     0AAE  0086               	movwf	6
 10383     0AAF  0187               	clrf	7
 10384     0AB0  0830               	movf	___is_single_click@b,w
 10385     0AB1  3E13               	addlw	19
 10386     0AB2  0084               	movwf	4
 10387     0AB3  0185               	clrf	5
 10388     0AB4  0800               	movf	0,w
 10389     0AB5  0081               	movwf	1
 10390     0AB6                     l3991:
 10391                           
 10392                           ;mybutton.c: 46: b->single_click_tmps[1] = 1;
 10393     0AB6  0830               	movf	___is_single_click@b,w
 10394     0AB7  3E13               	addlw	19
 10395     0AB8  0086               	movwf	6
 10396     0AB9  0187               	clrf	7
 10397     0ABA  0181               	clrf	1
 10398     0ABB  0A81               	incf	1,f
 10399                           
 10400                           ;mybutton.c: 47: }else{
 10401     0ABC  2ACC               	goto	l3997
 10402     0ABD                     l3993:
 10403                           
 10404                           ;mybutton.c: 48: b->single_click_tmps[0] = b->single_click_tmps[1];
 10405     0ABD  0830               	movf	___is_single_click@b,w
 10406     0ABE  3E12               	addlw	18
 10407     0ABF  0086               	movwf	6
 10408     0AC0  0187               	clrf	7
 10409     0AC1  0830               	movf	___is_single_click@b,w
 10410     0AC2  3E13               	addlw	19
 10411     0AC3  0084               	movwf	4
 10412     0AC4  0185               	clrf	5
 10413     0AC5  0800               	movf	0,w
 10414     0AC6  0081               	movwf	1
 10415     0AC7                     l3995:
 10416                           
 10417                           ;mybutton.c: 49: b->single_click_tmps[1] = 0;
 10418     0AC7  0830               	movf	___is_single_click@b,w
 10419     0AC8  3E13               	addlw	19
 10420     0AC9  0086               	movwf	6
 10421     0ACA  0187               	clrf	7
 10422     0ACB  0181               	clrf	1
 10423     0ACC                     l3997:
 10424                           
 10425                           ;mybutton.c: 50: };mybutton.c: 52: if(0 == b->single_click_tmps[0] && 1 == b->single_cli
      +                          ck_tmps[1]){
 10426     0ACC  0830               	movf	___is_single_click@b,w
 10427     0ACD  3E12               	addlw	18
 10428     0ACE  0086               	movwf	6
 10429     0ACF  0187               	clrf	7
 10430     0AD0  0801               	movf	1,w
 10431     0AD1  1D03               	btfss	3,2
 10432     0AD2  2AD4               	goto	u3861
 10433     0AD3  2AD5               	goto	u3860
 10434     0AD4                     u3861:
 10435     0AD4  2AE0               	goto	l4005
 10436     0AD5                     u3860:
 10437     0AD5                     l3999:
 10438     0AD5  0830               	movf	___is_single_click@b,w
 10439     0AD6  3E13               	addlw	19
 10440     0AD7  0086               	movwf	6
 10441     0AD8  0187               	clrf	7
 10442     0AD9  0301               	decf	1,w
 10443     0ADA  1D03               	btfss	3,2
 10444     0ADB  2ADD               	goto	u3871
 10445     0ADC  2ADE               	goto	u3870
 10446     0ADD                     u3871:
 10447     0ADD  2AE0               	goto	l4005
 10448     0ADE                     u3870:
 10449     0ADE                     l4001:
 10450                           
 10451                           ;mybutton.c: 53: return 1;
 10452     0ADE  3001               	movlw	1
 10453     0ADF  2AE1               	goto	l370
 10454     0AE0                     l4005:
 10455                           
 10456                           ;mybutton.c: 54: };mybutton.c: 55: return 0;
 10457     0AE0  3000               	movlw	0
 10458     0AE1                     l370:
 10459     0AE1  0008               	return
 10460     0AE2                     __end_of___is_single_click:
 10461                           
 10462                           	psect	text4
 10463     153A                     __ptext4:	
 10464 ;; *************** function ___is_long_press *****************
 10465 ;; Defined at:
 10466 ;;		line 80 in file "mybutton.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  b               1    wreg     PTR struct mybutton
 10469 ;;		 -> main@b2(27), main@b1(27), 
 10470 ;;  now             4    0[BANK0 ] unsigned long 
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;  b               1   14[BANK0 ] PTR struct mybutton
 10473 ;;		 -> main@b2(27), main@b1(27), 
 10474 ;;  condition2      1   13[BANK0 ] unsigned char 
 10475 ;;  condition1      1   12[BANK0 ] unsigned char 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      unsigned char 
 10478 ;; Registers used:
 10479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10486 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10487 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;Total ram usage:       15 bytes
 10490 ;; Hardware stack levels used: 1
 10491 ;; Hardware stack levels required when called: 2
 10492 ;; This function calls:
 10493 ;;		Nothing
 10494 ;; This function is called by:
 10495 ;;		_update_mybutton
 10496 ;; This function uses a non-reentrant model
 10497 ;;
 10498                           
 10499     153A                     ___is_long_press:	
 10500                           ;psect for function ___is_long_press
 10501                           
 10502                           
 10503                           ;incstack = 0
 10504                           ; Regs used in ___is_long_press: [wreg-fsr1h+status,2+status,0]
 10505                           ;___is_long_press@b stored from wreg
 10506     153A  0140               	movlb	0	; select bank0
 10507     153B  00AE               	movwf	___is_long_press@b
 10508     153C                     l4037:
 10509                           
 10510                           ;mybutton.c: 81: bool condition1 = (b->falling_ts[1] > b->rising_ts[1]);
 10511     153C  082E               	movf	___is_long_press@b,w
 10512     153D  3E06               	addlw	6
 10513     153E  0086               	movwf	6
 10514     153F  0187               	clrf	7
 10515     1540  3F40               	moviw [0]fsr1
 10516     1541  00A4               	movwf	??___is_long_press
 10517     1542  3F41               	moviw [1]fsr1
 10518     1543  00A5               	movwf	??___is_long_press+1
 10519     1544  3F42               	moviw [2]fsr1
 10520     1545  00A6               	movwf	??___is_long_press+2
 10521     1546  3F43               	moviw [3]fsr1
 10522     1547  00A7               	movwf	??___is_long_press+3
 10523     1548  082E               	movf	___is_long_press@b,w
 10524     1549  3E0E               	addlw	14
 10525     154A  0086               	movwf	6
 10526     154B  0187               	clrf	7
 10527     154C  3F40               	moviw [0]fsr1
 10528     154D  00A8               	movwf	??___is_long_press+4
 10529     154E  3F41               	moviw [1]fsr1
 10530     154F  00A9               	movwf	??___is_long_press+5
 10531     1550  3F42               	moviw [2]fsr1
 10532     1551  00AA               	movwf	??___is_long_press+6
 10533     1552  3F43               	moviw [3]fsr1
 10534     1553  00AB               	movwf	??___is_long_press+7
 10535     1554  0827               	movf	??___is_long_press+3,w
 10536     1555  022B               	subwf	??___is_long_press+7,w
 10537     1556  1D03               	skipz
 10538     1557  2D62               	goto	u3995
 10539     1558  0826               	movf	??___is_long_press+2,w
 10540     1559  022A               	subwf	??___is_long_press+6,w
 10541     155A  1D03               	skipz
 10542     155B  2D62               	goto	u3995
 10543     155C  0825               	movf	??___is_long_press+1,w
 10544     155D  0229               	subwf	??___is_long_press+5,w
 10545     155E  1D03               	skipz
 10546     155F  2D62               	goto	u3995
 10547     1560  0824               	movf	??___is_long_press,w
 10548     1561  0228               	subwf	??___is_long_press+4,w
 10549     1562                     u3995:
 10550     1562  1C03               	skipc
 10551     1563  2D65               	goto	u3991
 10552     1564  2D67               	goto	u3990
 10553     1565                     u3991:
 10554     1565  3001               	movlw	1
 10555     1566  2D68               	goto	u4000
 10556     1567                     u3990:
 10557     1567  3000               	movlw	0
 10558     1568                     u4000:
 10559     1568  00AC               	movwf	___is_long_press@condition1
 10560                           
 10561                           ;mybutton.c: 82: bool condition2 = (now - b->falling_ts[1] > 4000);
 10562     1569  082E               	movf	___is_long_press@b,w
 10563     156A  3E06               	addlw	6
 10564     156B  0086               	movwf	6
 10565     156C  0187               	clrf	7
 10566     156D  3F40               	moviw [0]fsr1
 10567     156E  00A4               	movwf	??___is_long_press
 10568     156F  3F41               	moviw [1]fsr1
 10569     1570  00A5               	movwf	??___is_long_press+1
 10570     1571  3F42               	moviw [2]fsr1
 10571     1572  00A6               	movwf	??___is_long_press+2
 10572     1573  3F43               	moviw [3]fsr1
 10573     1574  00A7               	movwf	??___is_long_press+3
 10574     1575  0820               	movf	___is_long_press@now,w
 10575     1576  00A8               	movwf	??___is_long_press+4
 10576     1577  0821               	movf	___is_long_press@now+1,w
 10577     1578  00A9               	movwf	??___is_long_press+5
 10578     1579  0822               	movf	___is_long_press@now+2,w
 10579     157A  00AA               	movwf	??___is_long_press+6
 10580     157B  0823               	movf	___is_long_press@now+3,w
 10581     157C  00AB               	movwf	??___is_long_press+7
 10582     157D  0824               	movf	??___is_long_press,w
 10583     157E  02A8               	subwf	??___is_long_press+4,f
 10584     157F  0825               	movf	??___is_long_press+1,w
 10585     1580  3BA9               	subwfb	??___is_long_press+5,f
 10586     1581  0826               	movf	??___is_long_press+2,w
 10587     1582  3BAA               	subwfb	??___is_long_press+6,f
 10588     1583  0827               	movf	??___is_long_press+3,w
 10589     1584  3BAB               	subwfb	??___is_long_press+7,f
 10590     1585  082B               	movf	??___is_long_press+7,w
 10591     1586  1D03               	btfss	3,2
 10592     1587  2D92               	goto	u4011
 10593     1588  082A               	movf	??___is_long_press+6,w
 10594     1589  1D03               	btfss	3,2
 10595     158A  2D92               	goto	u4011
 10596     158B  30A1               	movlw	161
 10597     158C  0228               	subwf	??___is_long_press+4,w
 10598     158D  300F               	movlw	15
 10599     158E  3B29               	subwfb	??___is_long_press+5,w
 10600     158F  1803               	btfsc	3,0
 10601     1590  2D92               	goto	u4011
 10602     1591  2D94               	goto	u4010
 10603     1592                     u4011:
 10604     1592  3001               	movlw	1
 10605     1593  2D95               	goto	u4020
 10606     1594                     u4010:
 10607     1594  3000               	movlw	0
 10608     1595                     u4020:
 10609     1595  0140               	movlb	0	; select bank0
 10610     1596  00AD               	movwf	___is_long_press@condition2
 10611     1597                     l4039:
 10612                           
 10613                           ;mybutton.c: 84: if(condition1 && condition2){
 10614     1597  082C               	movf	___is_long_press@condition1,w
 10615     1598  1903               	btfsc	3,2
 10616     1599  2D9B               	goto	u4031
 10617     159A  2D9C               	goto	u4030
 10618     159B                     u4031:
 10619     159B  2DB2               	goto	l4047
 10620     159C                     u4030:
 10621     159C                     l4041:
 10622     159C  082D               	movf	___is_long_press@condition2,w
 10623     159D  1903               	btfsc	3,2
 10624     159E  2DA0               	goto	u4041
 10625     159F  2DA1               	goto	u4040
 10626     15A0                     u4041:
 10627     15A0  2DB2               	goto	l4047
 10628     15A1                     u4040:
 10629     15A1                     l4043:
 10630                           
 10631                           ;mybutton.c: 85: b->long_press_tmps[0] = b->long_press_tmps[1];
 10632     15A1  082E               	movf	___is_long_press@b,w
 10633     15A2  3E16               	addlw	22
 10634     15A3  0086               	movwf	6
 10635     15A4  0187               	clrf	7
 10636     15A5  082E               	movf	___is_long_press@b,w
 10637     15A6  3E17               	addlw	23
 10638     15A7  0084               	movwf	4
 10639     15A8  0185               	clrf	5
 10640     15A9  0800               	movf	0,w
 10641     15AA  0081               	movwf	1
 10642     15AB                     l4045:
 10643                           
 10644                           ;mybutton.c: 86: b->long_press_tmps[1] = 1;
 10645     15AB  082E               	movf	___is_long_press@b,w
 10646     15AC  3E17               	addlw	23
 10647     15AD  0086               	movwf	6
 10648     15AE  0187               	clrf	7
 10649     15AF  0181               	clrf	1
 10650     15B0  0A81               	incf	1,f
 10651                           
 10652                           ;mybutton.c: 87: }else{
 10653     15B1  2DC1               	goto	l4051
 10654     15B2                     l4047:
 10655                           
 10656                           ;mybutton.c: 88: b->long_press_tmps[0] = b->long_press_tmps[1];
 10657     15B2  082E               	movf	___is_long_press@b,w
 10658     15B3  3E16               	addlw	22
 10659     15B4  0086               	movwf	6
 10660     15B5  0187               	clrf	7
 10661     15B6  082E               	movf	___is_long_press@b,w
 10662     15B7  3E17               	addlw	23
 10663     15B8  0084               	movwf	4
 10664     15B9  0185               	clrf	5
 10665     15BA  0800               	movf	0,w
 10666     15BB  0081               	movwf	1
 10667     15BC                     l4049:
 10668                           
 10669                           ;mybutton.c: 89: b->long_press_tmps[1] = 0;
 10670     15BC  082E               	movf	___is_long_press@b,w
 10671     15BD  3E17               	addlw	23
 10672     15BE  0086               	movwf	6
 10673     15BF  0187               	clrf	7
 10674     15C0  0181               	clrf	1
 10675     15C1                     l4051:
 10676                           
 10677                           ;mybutton.c: 90: };mybutton.c: 92: if(0 == b->long_press_tmps[0] && 1 == b->long_press_t
      +                          mps[1]){
 10678     15C1  082E               	movf	___is_long_press@b,w
 10679     15C2  3E16               	addlw	22
 10680     15C3  0086               	movwf	6
 10681     15C4  0187               	clrf	7
 10682     15C5  0801               	movf	1,w
 10683     15C6  1D03               	btfss	3,2
 10684     15C7  2DC9               	goto	u4051
 10685     15C8  2DCA               	goto	u4050
 10686     15C9                     u4051:
 10687     15C9  2DD5               	goto	l4059
 10688     15CA                     u4050:
 10689     15CA                     l4053:
 10690     15CA  082E               	movf	___is_long_press@b,w
 10691     15CB  3E17               	addlw	23
 10692     15CC  0086               	movwf	6
 10693     15CD  0187               	clrf	7
 10694     15CE  0301               	decf	1,w
 10695     15CF  1D03               	btfss	3,2
 10696     15D0  2DD2               	goto	u4061
 10697     15D1  2DD3               	goto	u4060
 10698     15D2                     u4061:
 10699     15D2  2DD5               	goto	l4059
 10700     15D3                     u4060:
 10701     15D3                     l4055:
 10702                           
 10703                           ;mybutton.c: 93: return 1;
 10704     15D3  3001               	movlw	1
 10705     15D4  2DD6               	goto	l382
 10706     15D5                     l4059:
 10707                           
 10708                           ;mybutton.c: 94: };mybutton.c: 95: return 0;
 10709     15D5  3000               	movlw	0
 10710     15D6                     l382:
 10711     15D6  0008               	return
 10712     15D7                     __end_of___is_long_press:
 10713                           
 10714                           	psect	text5
 10715     0822                     __ptext5:	
 10716 ;; *************** function ___is_double_click *****************
 10717 ;; Defined at:
 10718 ;;		line 59 in file "mybutton.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;  b               1    wreg     PTR struct mybutton
 10721 ;;		 -> main@b2(27), main@b1(27), 
 10722 ;;  now             4    0[BANK0 ] unsigned long 
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;  b               1   15[BANK0 ] PTR struct mybutton
 10725 ;;		 -> main@b2(27), main@b1(27), 
 10726 ;;  condition3      1   14[BANK0 ] unsigned char 
 10727 ;;  condition2      1   13[BANK0 ] unsigned char 
 10728 ;;  condition1      1   12[BANK0 ] unsigned char 
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      unsigned char 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10738 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10742 ;;Total ram usage:       16 bytes
 10743 ;; Hardware stack levels used: 1
 10744 ;; Hardware stack levels required when called: 2
 10745 ;; This function calls:
 10746 ;;		Nothing
 10747 ;; This function is called by:
 10748 ;;		_update_mybutton
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752     0822                     ___is_double_click:	
 10753                           ;psect for function ___is_double_click
 10754                           
 10755                           
 10756                           ;incstack = 0
 10757                           ; Regs used in ___is_double_click: [wreg-fsr1h+status,2+status,0]
 10758                           ;___is_double_click@b stored from wreg
 10759     0822  0140               	movlb	0	; select bank0
 10760     0823  00AF               	movwf	___is_double_click@b
 10761     0824                     l4009:
 10762                           
 10763                           ;mybutton.c: 61: bool condition1 = (b->rising_ts[1] > b->falling_ts[1]);
 10764     0824  082F               	movf	___is_double_click@b,w
 10765     0825  3E0E               	addlw	14
 10766     0826  0086               	movwf	6
 10767     0827  0187               	clrf	7
 10768     0828  3F40               	moviw [0]fsr1
 10769     0829  00A4               	movwf	??___is_double_click
 10770     082A  3F41               	moviw [1]fsr1
 10771     082B  00A5               	movwf	??___is_double_click+1
 10772     082C  3F42               	moviw [2]fsr1
 10773     082D  00A6               	movwf	??___is_double_click+2
 10774     082E  3F43               	moviw [3]fsr1
 10775     082F  00A7               	movwf	??___is_double_click+3
 10776     0830  082F               	movf	___is_double_click@b,w
 10777     0831  3E06               	addlw	6
 10778     0832  0086               	movwf	6
 10779     0833  0187               	clrf	7
 10780     0834  3F40               	moviw [0]fsr1
 10781     0835  00A8               	movwf	??___is_double_click+4
 10782     0836  3F41               	moviw [1]fsr1
 10783     0837  00A9               	movwf	??___is_double_click+5
 10784     0838  3F42               	moviw [2]fsr1
 10785     0839  00AA               	movwf	??___is_double_click+6
 10786     083A  3F43               	moviw [3]fsr1
 10787     083B  00AB               	movwf	??___is_double_click+7
 10788     083C  0827               	movf	??___is_double_click+3,w
 10789     083D  022B               	subwf	??___is_double_click+7,w
 10790     083E  1D03               	skipz
 10791     083F  284A               	goto	u3885
 10792     0840  0826               	movf	??___is_double_click+2,w
 10793     0841  022A               	subwf	??___is_double_click+6,w
 10794     0842  1D03               	skipz
 10795     0843  284A               	goto	u3885
 10796     0844  0825               	movf	??___is_double_click+1,w
 10797     0845  0229               	subwf	??___is_double_click+5,w
 10798     0846  1D03               	skipz
 10799     0847  284A               	goto	u3885
 10800     0848  0824               	movf	??___is_double_click,w
 10801     0849  0228               	subwf	??___is_double_click+4,w
 10802     084A                     u3885:
 10803     084A  1C03               	skipc
 10804     084B  284D               	goto	u3881
 10805     084C  284F               	goto	u3880
 10806     084D                     u3881:
 10807     084D  3001               	movlw	1
 10808     084E  2850               	goto	u3890
 10809     084F                     u3880:
 10810     084F  3000               	movlw	0
 10811     0850                     u3890:
 10812     0850  00AC               	movwf	___is_double_click@condition1
 10813                           
 10814                           ;mybutton.c: 62: bool condition2 = (now - b->rising_ts[1] > 200);
 10815     0851  082F               	movf	___is_double_click@b,w
 10816     0852  3E0E               	addlw	14
 10817     0853  0086               	movwf	6
 10818     0854  0187               	clrf	7
 10819     0855  3F40               	moviw [0]fsr1
 10820     0856  00A4               	movwf	??___is_double_click
 10821     0857  3F41               	moviw [1]fsr1
 10822     0858  00A5               	movwf	??___is_double_click+1
 10823     0859  3F42               	moviw [2]fsr1
 10824     085A  00A6               	movwf	??___is_double_click+2
 10825     085B  3F43               	moviw [3]fsr1
 10826     085C  00A7               	movwf	??___is_double_click+3
 10827     085D  0820               	movf	___is_double_click@now,w
 10828     085E  00A8               	movwf	??___is_double_click+4
 10829     085F  0821               	movf	___is_double_click@now+1,w
 10830     0860  00A9               	movwf	??___is_double_click+5
 10831     0861  0822               	movf	___is_double_click@now+2,w
 10832     0862  00AA               	movwf	??___is_double_click+6
 10833     0863  0823               	movf	___is_double_click@now+3,w
 10834     0864  00AB               	movwf	??___is_double_click+7
 10835     0865  0824               	movf	??___is_double_click,w
 10836     0866  02A8               	subwf	??___is_double_click+4,f
 10837     0867  0825               	movf	??___is_double_click+1,w
 10838     0868  3BA9               	subwfb	??___is_double_click+5,f
 10839     0869  0826               	movf	??___is_double_click+2,w
 10840     086A  3BAA               	subwfb	??___is_double_click+6,f
 10841     086B  0827               	movf	??___is_double_click+3,w
 10842     086C  3BAB               	subwfb	??___is_double_click+7,f
 10843     086D  082B               	movf	??___is_double_click+7,w
 10844     086E  1D03               	btfss	3,2
 10845     086F  287B               	goto	u3901
 10846     0870  082A               	movf	??___is_double_click+6,w
 10847     0871  1D03               	btfss	3,2
 10848     0872  287B               	goto	u3901
 10849     0873  0829               	movf	??___is_double_click+5,w
 10850     0874  1D03               	btfss	3,2
 10851     0875  287B               	goto	u3901
 10852     0876  30C9               	movlw	201
 10853     0877  0228               	subwf	??___is_double_click+4,w
 10854     0878  1803               	btfsc	3,0
 10855     0879  287B               	goto	u3901
 10856     087A  287D               	goto	u3900
 10857     087B                     u3901:
 10858     087B  3001               	movlw	1
 10859     087C  287E               	goto	u3910
 10860     087D                     u3900:
 10861     087D  3000               	movlw	0
 10862     087E                     u3910:
 10863     087E  0140               	movlb	0	; select bank0
 10864     087F  00AD               	movwf	___is_double_click@condition2
 10865                           
 10866                           ;mybutton.c: 63: bool condition3 = (b->rising_ts[1] - b->rising_ts[0] < 500);
 10867     0880  082F               	movf	___is_double_click@b,w
 10868     0881  3E0A               	addlw	10
 10869     0882  0086               	movwf	6
 10870     0883  0187               	clrf	7
 10871     0884  3F40               	moviw [0]fsr1
 10872     0885  00A4               	movwf	??___is_double_click
 10873     0886  3F41               	moviw [1]fsr1
 10874     0887  00A5               	movwf	??___is_double_click+1
 10875     0888  3F42               	moviw [2]fsr1
 10876     0889  00A6               	movwf	??___is_double_click+2
 10877     088A  3F43               	moviw [3]fsr1
 10878     088B  00A7               	movwf	??___is_double_click+3
 10879     088C  082F               	movf	___is_double_click@b,w
 10880     088D  3E0E               	addlw	14
 10881     088E  0086               	movwf	6
 10882     088F  0187               	clrf	7
 10883     0890  3F40               	moviw [0]fsr1
 10884     0891  00A8               	movwf	??___is_double_click+4
 10885     0892  3F41               	moviw [1]fsr1
 10886     0893  00A9               	movwf	??___is_double_click+5
 10887     0894  3F42               	moviw [2]fsr1
 10888     0895  00AA               	movwf	??___is_double_click+6
 10889     0896  3F43               	moviw [3]fsr1
 10890     0897  00AB               	movwf	??___is_double_click+7
 10891     0898  0824               	movf	??___is_double_click,w
 10892     0899  02A8               	subwf	??___is_double_click+4,f
 10893     089A  0825               	movf	??___is_double_click+1,w
 10894     089B  3BA9               	subwfb	??___is_double_click+5,f
 10895     089C  0826               	movf	??___is_double_click+2,w
 10896     089D  3BAA               	subwfb	??___is_double_click+6,f
 10897     089E  0827               	movf	??___is_double_click+3,w
 10898     089F  3BAB               	subwfb	??___is_double_click+7,f
 10899     08A0  082B               	movf	??___is_double_click+7,w
 10900     08A1  1D03               	btfss	3,2
 10901     08A2  28AF               	goto	u3920
 10902     08A3  082A               	movf	??___is_double_click+6,w
 10903     08A4  1D03               	btfss	3,2
 10904     08A5  28AF               	goto	u3920
 10905     08A6  30F4               	movlw	244
 10906     08A7  0228               	subwf	??___is_double_click+4,w
 10907     08A8  3001               	movlw	1
 10908     08A9  3B29               	subwfb	??___is_double_click+5,w
 10909     08AA  1C03               	btfss	3,0
 10910     08AB  28AD               	goto	u3921
 10911     08AC  28AF               	goto	u3920
 10912     08AD                     u3921:
 10913     08AD  3001               	movlw	1
 10914     08AE  28B0               	goto	u3930
 10915     08AF                     u3920:
 10916     08AF  3000               	movlw	0
 10917     08B0                     u3930:
 10918     08B0  0140               	movlb	0	; select bank0
 10919     08B1  00AE               	movwf	___is_double_click@condition3
 10920     08B2                     l4011:
 10921                           
 10922                           ;mybutton.c: 65: if (condition1 && condition2 && condition3){
 10923     08B2  082C               	movf	___is_double_click@condition1,w
 10924     08B3  1903               	btfsc	3,2
 10925     08B4  28B6               	goto	u3941
 10926     08B5  28B7               	goto	u3940
 10927     08B6                     u3941:
 10928     08B6  28D2               	goto	l4021
 10929     08B7                     u3940:
 10930     08B7                     l4013:
 10931     08B7  082D               	movf	___is_double_click@condition2,w
 10932     08B8  1903               	btfsc	3,2
 10933     08B9  28BB               	goto	u3951
 10934     08BA  28BC               	goto	u3950
 10935     08BB                     u3951:
 10936     08BB  28D2               	goto	l4021
 10937     08BC                     u3950:
 10938     08BC                     l4015:
 10939     08BC  082E               	movf	___is_double_click@condition3,w
 10940     08BD  1903               	btfsc	3,2
 10941     08BE  28C0               	goto	u3961
 10942     08BF  28C1               	goto	u3960
 10943     08C0                     u3961:
 10944     08C0  28D2               	goto	l4021
 10945     08C1                     u3960:
 10946     08C1                     l4017:
 10947                           
 10948                           ;mybutton.c: 66: b->double_click_tmps[0] = b->double_click_tmps[1];
 10949     08C1  082F               	movf	___is_double_click@b,w
 10950     08C2  3E14               	addlw	20
 10951     08C3  0086               	movwf	6
 10952     08C4  0187               	clrf	7
 10953     08C5  082F               	movf	___is_double_click@b,w
 10954     08C6  3E15               	addlw	21
 10955     08C7  0084               	movwf	4
 10956     08C8  0185               	clrf	5
 10957     08C9  0800               	movf	0,w
 10958     08CA  0081               	movwf	1
 10959     08CB                     l4019:
 10960                           
 10961                           ;mybutton.c: 67: b->double_click_tmps[1] = 1;
 10962     08CB  082F               	movf	___is_double_click@b,w
 10963     08CC  3E15               	addlw	21
 10964     08CD  0086               	movwf	6
 10965     08CE  0187               	clrf	7
 10966     08CF  0181               	clrf	1
 10967     08D0  0A81               	incf	1,f
 10968                           
 10969                           ;mybutton.c: 68: }else{
 10970     08D1  28E1               	goto	l4025
 10971     08D2                     l4021:
 10972                           
 10973                           ;mybutton.c: 69: b->double_click_tmps[0] = b->double_click_tmps[1];
 10974     08D2  082F               	movf	___is_double_click@b,w
 10975     08D3  3E14               	addlw	20
 10976     08D4  0086               	movwf	6
 10977     08D5  0187               	clrf	7
 10978     08D6  082F               	movf	___is_double_click@b,w
 10979     08D7  3E15               	addlw	21
 10980     08D8  0084               	movwf	4
 10981     08D9  0185               	clrf	5
 10982     08DA  0800               	movf	0,w
 10983     08DB  0081               	movwf	1
 10984     08DC                     l4023:
 10985                           
 10986                           ;mybutton.c: 70: b->double_click_tmps[1] = 0;
 10987     08DC  082F               	movf	___is_double_click@b,w
 10988     08DD  3E15               	addlw	21
 10989     08DE  0086               	movwf	6
 10990     08DF  0187               	clrf	7
 10991     08E0  0181               	clrf	1
 10992     08E1                     l4025:
 10993                           
 10994                           ;mybutton.c: 71: };mybutton.c: 73: if(0 == b->double_click_tmps[0] && 1 == b->double_cli
      +                          ck_tmps[1]){
 10995     08E1  082F               	movf	___is_double_click@b,w
 10996     08E2  3E14               	addlw	20
 10997     08E3  0086               	movwf	6
 10998     08E4  0187               	clrf	7
 10999     08E5  0801               	movf	1,w
 11000     08E6  1D03               	btfss	3,2
 11001     08E7  28E9               	goto	u3971
 11002     08E8  28EA               	goto	u3970
 11003     08E9                     u3971:
 11004     08E9  28F5               	goto	l4033
 11005     08EA                     u3970:
 11006     08EA                     l4027:
 11007     08EA  082F               	movf	___is_double_click@b,w
 11008     08EB  3E15               	addlw	21
 11009     08EC  0086               	movwf	6
 11010     08ED  0187               	clrf	7
 11011     08EE  0301               	decf	1,w
 11012     08EF  1D03               	btfss	3,2
 11013     08F0  28F2               	goto	u3981
 11014     08F1  28F3               	goto	u3980
 11015     08F2                     u3981:
 11016     08F2  28F5               	goto	l4033
 11017     08F3                     u3980:
 11018     08F3                     l4029:
 11019                           
 11020                           ;mybutton.c: 74: return 1;
 11021     08F3  3001               	movlw	1
 11022     08F4  28F6               	goto	l376
 11023     08F5                     l4033:
 11024                           
 11025                           ;mybutton.c: 75: };mybutton.c: 76: return 0;
 11026     08F5  3000               	movlw	0
 11027     08F6                     l376:
 11028     08F6  0008               	return
 11029     08F7                     __end_of___is_double_click:
 11030                           
 11031                           	psect	text6
 11032     1CEF                     __ptext6:	
 11033 ;; *************** function _tmr0_init *****************
 11034 ;; Defined at:
 11035 ;;		line 5 in file "tmr0.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, status,2
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;Total ram usage:        0 bytes
 11054 ;; Hardware stack levels used: 1
 11055 ;; Hardware stack levels required when called: 2
 11056 ;; This function calls:
 11057 ;;		Nothing
 11058 ;; This function is called by:
 11059 ;;		_main
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063     1CEF                     _tmr0_init:	
 11064                           ;psect for function _tmr0_init
 11065                           
 11066     1CEF                     l4361:	
 11067                           ;incstack = 0
 11068                           ; Regs used in _tmr0_init: [wreg+status,2]
 11069                           
 11070                           
 11071                           ;tmr0.c: 8: T0CON1 = 0x40;
 11072     1CEF  3040               	movlw	64
 11073     1CF0  014B               	movlb	11	; select bank11
 11074     1CF1  009F               	movwf	31	;volatile
 11075                           
 11076                           ;tmr0.c: 11: TMR0H = 0xF3;
 11077     1CF2  30F3               	movlw	243
 11078     1CF3  009D               	movwf	29	;volatile
 11079     1CF4                     l4363:
 11080                           
 11081                           ;tmr0.c: 14: TMR0L = 0x00;
 11082     1CF4  019C               	clrf	28	;volatile
 11083     1CF5                     l4365:
 11084                           
 11085                           ;tmr0.c: 17: PIR0bits.TMR0IF = 0;
 11086     1CF5  014E               	movlb	14	; select bank14
 11087     1CF6  128C               	bcf	12,5	;volatile
 11088     1CF7                     l4367:
 11089                           
 11090                           ;tmr0.c: 20: PIE0bits.TMR0IE = 1;
 11091     1CF7  1696               	bsf	22,5	;volatile
 11092     1CF8                     l4369:
 11093                           
 11094                           ;tmr0.c: 23: T0CON0 = 0x80;
 11095     1CF8  3080               	movlw	128
 11096     1CF9  014B               	movlb	11	; select bank11
 11097     1CFA  009E               	movwf	30	;volatile
 11098     1CFB                     l291:
 11099     1CFB  0008               	return
 11100     1CFC                     __end_of_tmr0_init:
 11101                           
 11102                           	psect	text7
 11103     1217                     __ptext7:	
 11104 ;; *************** function _set_device_serial_number_to_i2c_slave_memorymap *****************
 11105 ;; Defined at:
 11106 ;;		line 9 in file "set_device_i2c_sn.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;		None
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;  buffer          3   30[BANK0 ] unsigned char [3]
 11111 ;;  value           1   29[BANK0 ] unsigned char 
 11112 ;;  i               1   33[BANK0 ] unsigned char 
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  1    wreg      void 
 11115 ;; Registers used:
 11116 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11124 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;Total ram usage:        7 bytes
 11127 ;; Hardware stack levels used: 1
 11128 ;; Hardware stack levels required when called: 5
 11129 ;; This function calls:
 11130 ;;		_i2c_slave_set_register_with_lock
 11131 ;;		_strtol
 11132 ;; This function is called by:
 11133 ;;		_main
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137     1217                     _set_device_serial_number_to_i2c_slave_memorymap:	
 11138                           ;psect for function _set_device_serial_number_to_i2c_slave_memorymap
 11139                           
 11140     1217                     l4643:	
 11141                           ;incstack = 0
 11142                           ; Regs used in _set_device_serial_number_to_i2c_slave_memorymap: [wreg-fsr1h+status,2+st
      +                          atus,0+pclath+cstack]
 11143                           
 11144                           
 11145                           ;set_device_i2c_sn.c: 10: for (uint8_t i = 0; i < 5; i++) {
 11146     1217  0140               	movlb	0	; select bank0
 11147     1218  01C1               	clrf	set_device_serial_number_to_i2c_slave_memorymap@i
 11148     1219                     l4649:
 11149                           
 11150                           ;set_device_i2c_sn.c: 11: char buffer[3];;set_device_i2c_sn.c: 12: buffer[0] = "0A018200
      +                          01"[i * 2];
 11151     1219  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 11152     121A  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 11153     121B  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
 11154     121C  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
 11155     121D  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
 11156     121E  3034               	movlw	low STR_3
 11157     121F  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 11158     1220  0084               	movwf	4
 11159     1221  301A               	movlw	high STR_3
 11160     1222  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
 11161     1223  3880               	iorlw	128
 11162     1224  0085               	movwf	5
 11163     1225  0800               	movf	0,w	;code access
 11164     1226  00BE               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer
 11165                           
 11166                           ;set_device_i2c_sn.c: 13: buffer[1] = "0A01820001"[i * 2 + 1];
 11167     1227  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 11168     1228  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 11169     1229  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
 11170     122A  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
 11171     122B  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
 11172     122C  3035               	movlw	low (STR_3+1)
 11173     122D  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 11174     122E  0084               	movwf	4
 11175     122F  301A               	movlw	high (STR_3+1)
 11176     1230  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
 11177     1231  3880               	iorlw	128
 11178     1232  0085               	movwf	5
 11179     1233  0800               	movf	0,w	;code access
 11180     1234  00BF               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer+1
 11181     1235                     l4651:
 11182                           
 11183                           ;set_device_i2c_sn.c: 14: buffer[2] = '\0';
 11184     1235  01C0               	clrf	set_device_serial_number_to_i2c_slave_memorymap@buffer+2
 11185     1236                     l4653:
 11186                           
 11187                           ;set_device_i2c_sn.c: 16: uint8_t value = (uint8_t)strtol(buffer, (0), 16);
 11188     1236  01AC               	clrf	strtol@endptr
 11189     1237  3010               	movlw	16
 11190     1238  00AD               	movwf	strtol@base
 11191     1239  3000               	movlw	0
 11192     123A  00AE               	movwf	strtol@base+1
 11193     123B  303E               	movlw	(low (set_device_serial_number_to_i2c_slave_memorymap@buffer| 0))& (0+255)
 11194     123C  318A  22E2  3192   	fcall	_strtol
 11195     123F  0140               	movlb	0	; select bank0
 11196     1240  082C               	movf	?_strtol,w
 11197     1241  00BD               	movwf	set_device_serial_number_to_i2c_slave_memorymap@value
 11198     1242                     l4655:
 11199                           
 11200                           ;set_device_i2c_sn.c: 17: i2c_slave_set_register_with_lock(57u + i, value);
 11201     1242  083D               	movf	set_device_serial_number_to_i2c_slave_memorymap@value,w
 11202     1243  00A2               	movwf	i2c_slave_set_register_with_lock@value
 11203     1244  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 11204     1245  3E39               	addlw	57
 11205     1246  319C  24CC  3192   	fcall	_i2c_slave_set_register_with_lock
 11206     1249                     l4657:
 11207     1249  3001               	movlw	1
 11208     124A  0140               	movlb	0	; select bank0
 11209     124B  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 11210     124C  083B               	movf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 11211     124D  07C1               	addwf	set_device_serial_number_to_i2c_slave_memorymap@i,f
 11212     124E                     l4659:
 11213     124E  3005               	movlw	5
 11214     124F  0241               	subwf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 11215     1250  1C03               	skipc
 11216     1251  2A53               	goto	u4841
 11217     1252  2A54               	goto	u4840
 11218     1253                     u4841:
 11219     1253  2A19               	goto	l4649
 11220     1254                     u4840:
 11221     1254                     l524:
 11222     1254  0008               	return
 11223     1255                     __end_of_set_device_serial_number_to_i2c_slave_memorymap:
 11224                           
 11225                           	psect	text8
 11226     0AE2                     __ptext8:	
 11227 ;; *************** function _strtol *****************
 11228 ;; Defined at:
 11229 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/strtol.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  s               1    wreg     PTR const unsigned char 
 11232 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
 11233 ;;  endptr          1   12[BANK0 ] PTR PTR unsigned char 
 11234 ;;		 -> NULL(0), 
 11235 ;;  base            2   13[BANK0 ] int 
 11236 ;; Auto vars:     Size  Location     Type
 11237 ;;  s               1   25[BANK0 ] PTR const unsigned char 
 11238 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
 11239 ;;  a               4   21[BANK0 ] long 
 11240 ;;  c               1   26[BANK0 ] unsigned char 
 11241 ;;  sign            1   20[BANK0 ] unsigned char 
 11242 ;; Return value:  Size  Location     Type
 11243 ;;                  4   12[BANK0 ] long 
 11244 ;; Registers used:
 11245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11246 ;; Tracked objects:
 11247 ;;		On entry : 0/0
 11248 ;;		On exit  : 0/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11252 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;Total ram usage:       15 bytes
 11256 ;; Hardware stack levels used: 1
 11257 ;; Hardware stack levels required when called: 4
 11258 ;; This function calls:
 11259 ;;		___lmul
 11260 ;;		_isalpha
 11261 ;;		_isdigit
 11262 ;;		_isspace
 11263 ;;		_toupper
 11264 ;; This function is called by:
 11265 ;;		_set_device_serial_number_to_i2c_slave_memorymap
 11266 ;; This function uses a non-reentrant model
 11267 ;;
 11268                           
 11269     0AE2                     _strtol:	
 11270                           ;psect for function _strtol
 11271                           
 11272                           
 11273                           ;incstack = 0
 11274                           ; Regs used in _strtol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11275                           ;strtol@s stored from wreg
 11276     0AE2  0140               	movlb	0	; select bank0
 11277     0AE3  00B9               	movwf	strtol@s
 11278     0AE4                     l1459:
 11279     0AE4                     l4075:
 11280     0AE4  0140               	movlb	0	; select bank0
 11281     0AE5  0839               	movf	strtol@s,w
 11282     0AE6  0086               	movwf	6
 11283     0AE7  0187               	clrf	7
 11284     0AE8  0801               	movf	1,w
 11285     0AE9  00BA               	movwf	strtol@c
 11286     0AEA                     l4077:
 11287     0AEA  3001               	movlw	1
 11288     0AEB  00B0               	movwf	??_strtol
 11289     0AEC  0830               	movf	??_strtol,w
 11290     0AED  07B9               	addwf	strtol@s,f
 11291     0AEE                     l4079:
 11292     0AEE  083A               	movf	strtol@c,w
 11293     0AEF  319D  25C7  318A   	fcall	_isspace
 11294     0AF2  1803               	btfsc	3,0
 11295     0AF3  2AF5               	goto	u4071
 11296     0AF4  2AF7               	goto	u4070
 11297     0AF5                     u4071:
 11298     0AF5  0140               	movlb	0	; select bank0
 11299     0AF6  2AE4               	goto	l1459
 11300     0AF7                     u4070:
 11301     0AF7                     l4081:
 11302     0AF7  3000               	movlw	0
 11303     0AF8  0140               	movlb	0	; select bank0
 11304     0AF9  00B8               	movwf	strtol@a+3
 11305     0AFA  3000               	movlw	0
 11306     0AFB  00B7               	movwf	strtol@a+2
 11307     0AFC  3000               	movlw	0
 11308     0AFD  00B6               	movwf	strtol@a+1
 11309     0AFE  3000               	movlw	0
 11310     0AFF  00B5               	movwf	strtol@a
 11311     0B00                     l4083:
 11312     0B00  01B4               	clrf	strtol@sign
 11313     0B01                     l4085:
 11314     0B01  302D               	movlw	45
 11315     0B02  063A               	xorwf	strtol@c,w
 11316     0B03  1D03               	btfss	3,2
 11317     0B04  2B06               	goto	u4081
 11318     0B05  2B07               	goto	u4080
 11319     0B06                     u4081:
 11320     0B06  2B13               	goto	l4093
 11321     0B07                     u4080:
 11322     0B07                     l4087:
 11323     0B07  01B4               	clrf	strtol@sign
 11324     0B08  0AB4               	incf	strtol@sign,f
 11325     0B09                     l4089:
 11326     0B09  0839               	movf	strtol@s,w
 11327     0B0A  0086               	movwf	6
 11328     0B0B  0187               	clrf	7
 11329     0B0C  0801               	movf	1,w
 11330     0B0D  00BA               	movwf	strtol@c
 11331     0B0E                     l4091:
 11332     0B0E  3001               	movlw	1
 11333     0B0F  00B0               	movwf	??_strtol
 11334     0B10  0830               	movf	??_strtol,w
 11335     0B11  07B9               	addwf	strtol@s,f
 11336     0B12  2B1A               	goto	l4099
 11337     0B13                     l4093:
 11338     0B13  302B               	movlw	43
 11339     0B14  063A               	xorwf	strtol@c,w
 11340     0B15  1D03               	btfss	3,2
 11341     0B16  2B18               	goto	u4091
 11342     0B17  2B19               	goto	u4090
 11343     0B18                     u4091:
 11344     0B18  2B1A               	goto	l4099
 11345     0B19                     u4090:
 11346     0B19  2B09               	goto	l4089
 11347     0B1A                     l4099:
 11348     0B1A  3030               	movlw	48
 11349     0B1B  063A               	xorwf	strtol@c,w
 11350     0B1C  1D03               	btfss	3,2
 11351     0B1D  2B1F               	goto	u4101
 11352     0B1E  2B20               	goto	u4100
 11353     0B1F                     u4101:
 11354     0B1F  2B5A               	goto	l4123
 11355     0B20                     u4100:
 11356     0B20                     l4101:
 11357     0B20  0839               	movf	strtol@s,w
 11358     0B21  0086               	movwf	6
 11359     0B22  0187               	clrf	7
 11360     0B23  0801               	movf	1,w
 11361     0B24  00BA               	movwf	strtol@c
 11362     0B25                     l4103:
 11363     0B25  3001               	movlw	1
 11364     0B26  00B0               	movwf	??_strtol
 11365     0B27  0830               	movf	??_strtol,w
 11366     0B28  07B9               	addwf	strtol@s,f
 11367     0B29                     l4105:
 11368     0B29  082D               	movf	strtol@base,w
 11369     0B2A  042E               	iorwf	strtol@base+1,w
 11370     0B2B  1903               	btfsc	3,2
 11371     0B2C  2B2E               	goto	u4111
 11372     0B2D  2B2F               	goto	u4110
 11373     0B2E                     u4111:
 11374     0B2E  2B36               	goto	l4109
 11375     0B2F                     u4110:
 11376     0B2F                     l4107:
 11377     0B2F  3010               	movlw	16
 11378     0B30  062D               	xorwf	strtol@base,w
 11379     0B31  042E               	iorwf	strtol@base+1,w
 11380     0B32  1D03               	btfss	3,2
 11381     0B33  2B35               	goto	u4121
 11382     0B34  2B36               	goto	u4120
 11383     0B35                     u4121:
 11384     0B35  2B50               	goto	l4119
 11385     0B36                     u4120:
 11386     0B36                     l4109:
 11387     0B36  3078               	movlw	120
 11388     0B37  063A               	xorwf	strtol@c,w
 11389     0B38  1903               	btfsc	3,2
 11390     0B39  2B3B               	goto	u4131
 11391     0B3A  2B3C               	goto	u4130
 11392     0B3B                     u4131:
 11393     0B3B  2B42               	goto	l4113
 11394     0B3C                     u4130:
 11395     0B3C                     l4111:
 11396     0B3C  3058               	movlw	88
 11397     0B3D  063A               	xorwf	strtol@c,w
 11398     0B3E  1D03               	btfss	3,2
 11399     0B3F  2B41               	goto	u4141
 11400     0B40  2B42               	goto	u4140
 11401     0B41                     u4141:
 11402     0B41  2B50               	goto	l4119
 11403     0B42                     u4140:
 11404     0B42                     l4113:
 11405     0B42  3010               	movlw	16
 11406     0B43  00AD               	movwf	strtol@base
 11407     0B44  3000               	movlw	0
 11408     0B45  00AE               	movwf	strtol@base+1
 11409     0B46                     l4115:
 11410     0B46  0839               	movf	strtol@s,w
 11411     0B47  0086               	movwf	6
 11412     0B48  0187               	clrf	7
 11413     0B49  0801               	movf	1,w
 11414     0B4A  00BA               	movwf	strtol@c
 11415     0B4B                     l4117:
 11416     0B4B  3001               	movlw	1
 11417     0B4C  00B0               	movwf	??_strtol
 11418     0B4D  0830               	movf	??_strtol,w
 11419     0B4E  07B9               	addwf	strtol@s,f
 11420     0B4F  2B5A               	goto	l4123
 11421     0B50                     l4119:
 11422     0B50  082D               	movf	strtol@base,w
 11423     0B51  042E               	iorwf	strtol@base+1,w
 11424     0B52  1D03               	btfss	3,2
 11425     0B53  2B55               	goto	u4151
 11426     0B54  2B56               	goto	u4150
 11427     0B55                     u4151:
 11428     0B55  2B5A               	goto	l4123
 11429     0B56                     u4150:
 11430     0B56                     l4121:
 11431     0B56  3008               	movlw	8
 11432     0B57  00AD               	movwf	strtol@base
 11433     0B58  3000               	movlw	0
 11434     0B59  00AE               	movwf	strtol@base+1
 11435     0B5A                     l4123:
 11436     0B5A  082D               	movf	strtol@base,w
 11437     0B5B  042E               	iorwf	strtol@base+1,w
 11438     0B5C  1D03               	btfss	3,2
 11439     0B5D  2B5F               	goto	u4161
 11440     0B5E  2B60               	goto	u4160
 11441     0B5F                     u4161:
 11442     0B5F  2B64               	goto	l4127
 11443     0B60                     u4160:
 11444     0B60                     l4125:
 11445     0B60  300A               	movlw	10
 11446     0B61  00AD               	movwf	strtol@base
 11447     0B62  3000               	movlw	0
 11448     0B63  00AE               	movwf	strtol@base+1
 11449     0B64                     l4127:
 11450     0B64  083A               	movf	strtol@c,w
 11451     0B65  319E  2615  318A   	fcall	_isalpha
 11452     0B68  1C03               	btfss	3,0
 11453     0B69  2B6B               	goto	u4171
 11454     0B6A  2B6C               	goto	u4170
 11455     0B6B                     u4171:
 11456     0B6B  2B75               	goto	l4131
 11457     0B6C                     u4170:
 11458     0B6C                     l4129:
 11459     0B6C  0140               	movlb	0	; select bank0
 11460     0B6D  083A               	movf	strtol@c,w
 11461     0B6E  319D  2587  318A   	fcall	_toupper
 11462     0B71  3EC9               	addlw	201
 11463     0B72  0140               	movlb	0	; select bank0
 11464     0B73  00BA               	movwf	strtol@c
 11465     0B74  2B81               	goto	l4135
 11466     0B75                     l4131:
 11467     0B75  0140               	movlb	0	; select bank0
 11468     0B76  083A               	movf	strtol@c,w
 11469     0B77  319D  254D  318A   	fcall	_isdigit
 11470     0B7A  1C03               	btfss	3,0
 11471     0B7B  2B7D               	goto	u4181
 11472     0B7C  2B7E               	goto	u4180
 11473     0B7D                     u4181:
 11474     0B7D  2BC2               	goto	l4145
 11475     0B7E                     u4180:
 11476     0B7E                     l4133:
 11477     0B7E  3030               	movlw	48
 11478     0B7F  0140               	movlb	0	; select bank0
 11479     0B80  02BA               	subwf	strtol@c,f
 11480     0B81                     l4135:
 11481     0B81  082E               	movf	strtol@base+1,w
 11482     0B82  3A80               	xorlw	128
 11483     0B83  3C80               	sublw	128
 11484     0B84  1D03               	skipz
 11485     0B85  2B88               	goto	u4195
 11486     0B86  082D               	movf	strtol@base,w
 11487     0B87  023A               	subwf	strtol@c,w
 11488     0B88                     u4195:
 11489     0B88  1C03               	skipc
 11490     0B89  2B8B               	goto	u4191
 11491     0B8A  2B8C               	goto	u4190
 11492     0B8B                     u4191:
 11493     0B8B  2B8D               	goto	l4139
 11494     0B8C                     u4190:
 11495     0B8C  2BC2               	goto	l4145
 11496     0B8D                     l4139:
 11497     0B8D  0140               	movlb	0	; select bank0
 11498     0B8E  083A               	movf	strtol@c,w
 11499     0B8F  00B0               	movwf	??_strtol
 11500     0B90  01B1               	clrf	??_strtol+1
 11501     0B91  01B2               	clrf	??_strtol+2
 11502     0B92  01B3               	clrf	??_strtol+3
 11503     0B93  082D               	movf	strtol@base,w
 11504     0B94  00A0               	movwf	___lmul@multiplier
 11505     0B95  082E               	movf	strtol@base+1,w
 11506     0B96  00A1               	movwf	___lmul@multiplier+1
 11507     0B97  0D89               	rlf	9,f
 11508     0B98  3B89               	subwfb	9,f
 11509     0B99  0989               	comf	9,f
 11510     0B9A  00A2               	movwf	___lmul@multiplier+2
 11511     0B9B  00A3               	movwf	___lmul@multiplier+3
 11512     0B9C  0838               	movf	strtol@a+3,w
 11513     0B9D  00A7               	movwf	___lmul@multiplicand+3
 11514     0B9E  0837               	movf	strtol@a+2,w
 11515     0B9F  00A6               	movwf	___lmul@multiplicand+2
 11516     0BA0  0836               	movf	strtol@a+1,w
 11517     0BA1  00A5               	movwf	___lmul@multiplicand+1
 11518     0BA2  0835               	movf	strtol@a,w
 11519     0BA3  00A4               	movwf	___lmul@multiplicand
 11520     0BA4  319F  275A  318A   	fcall	___lmul
 11521     0BA7  0140               	movlb	0	; select bank0
 11522     0BA8  0820               	movf	?___lmul,w
 11523     0BA9  07B0               	addwf	??_strtol,f
 11524     0BAA  0821               	movf	?___lmul+1,w
 11525     0BAB  3DB1               	addwfc	??_strtol+1,f
 11526     0BAC  0822               	movf	?___lmul+2,w
 11527     0BAD  3DB2               	addwfc	??_strtol+2,f
 11528     0BAE  0823               	movf	?___lmul+3,w
 11529     0BAF  3DB3               	addwfc	??_strtol+3,f
 11530     0BB0  0833               	movf	??_strtol+3,w
 11531     0BB1  00B8               	movwf	strtol@a+3
 11532     0BB2  0832               	movf	??_strtol+2,w
 11533     0BB3  00B7               	movwf	strtol@a+2
 11534     0BB4  0831               	movf	??_strtol+1,w
 11535     0BB5  00B6               	movwf	strtol@a+1
 11536     0BB6  0830               	movf	??_strtol,w
 11537     0BB7  00B5               	movwf	strtol@a
 11538     0BB8                     l4141:
 11539     0BB8  0839               	movf	strtol@s,w
 11540     0BB9  0086               	movwf	6
 11541     0BBA  0187               	clrf	7
 11542     0BBB  0801               	movf	1,w
 11543     0BBC  00BA               	movwf	strtol@c
 11544     0BBD                     l4143:
 11545     0BBD  3001               	movlw	1
 11546     0BBE  00B0               	movwf	??_strtol
 11547     0BBF  0830               	movf	??_strtol,w
 11548     0BC0  07B9               	addwf	strtol@s,f
 11549     0BC1  2B64               	goto	l4127
 11550     0BC2                     l4145:
 11551     0BC2  0140               	movlb	0	; select bank0
 11552     0BC3  082C               	movf	strtol@endptr,w
 11553     0BC4  1903               	btfsc	3,2
 11554     0BC5  2BC7               	goto	u4201
 11555     0BC6  2BC8               	goto	u4200
 11556     0BC7                     u4201:
 11557     0BC7  2BCE               	goto	l4149
 11558     0BC8                     u4200:
 11559     0BC8                     l4147:
 11560     0BC8  082C               	movf	strtol@endptr,w
 11561     0BC9  0086               	movwf	6
 11562     0BCA  0187               	clrf	7
 11563     0BCB  0839               	movf	strtol@s,w
 11564     0BCC  3EFF               	addlw	-1
 11565     0BCD  0081               	movwf	1
 11566     0BCE                     l4149:
 11567     0BCE  0834               	movf	strtol@sign,w
 11568     0BCF  1903               	btfsc	3,2
 11569     0BD0  2BD2               	goto	u4211
 11570     0BD1  2BD3               	goto	u4210
 11571     0BD2                     u4211:
 11572     0BD2  2BE3               	goto	l4155
 11573     0BD3                     u4210:
 11574     0BD3                     l4151:
 11575     0BD3  0935               	comf	strtol@a,w
 11576     0BD4  00AC               	movwf	?_strtol
 11577     0BD5  0936               	comf	strtol@a+1,w
 11578     0BD6  00AD               	movwf	?_strtol+1
 11579     0BD7  0937               	comf	strtol@a+2,w
 11580     0BD8  00AE               	movwf	?_strtol+2
 11581     0BD9  0938               	comf	strtol@a+3,w
 11582     0BDA  00AF               	movwf	?_strtol+3
 11583     0BDB  0AAC               	incf	?_strtol,f
 11584     0BDC  1903               	skipnz
 11585     0BDD  0AAD               	incf	?_strtol+1,f
 11586     0BDE  1903               	skipnz
 11587     0BDF  0AAE               	incf	?_strtol+2,f
 11588     0BE0  1903               	skipnz
 11589     0BE1  0AAF               	incf	?_strtol+3,f
 11590     0BE2  2BEB               	goto	l1482
 11591     0BE3                     l4155:
 11592     0BE3  0838               	movf	strtol@a+3,w
 11593     0BE4  00AF               	movwf	?_strtol+3
 11594     0BE5  0837               	movf	strtol@a+2,w
 11595     0BE6  00AE               	movwf	?_strtol+2
 11596     0BE7  0836               	movf	strtol@a+1,w
 11597     0BE8  00AD               	movwf	?_strtol+1
 11598     0BE9  0835               	movf	strtol@a,w
 11599     0BEA  00AC               	movwf	?_strtol
 11600     0BEB                     l1482:
 11601     0BEB  0008               	return
 11602     0BEC                     __end_of_strtol:
 11603                           
 11604                           	psect	text9
 11605     1D87                     __ptext9:	
 11606 ;; *************** function _toupper *****************
 11607 ;; Defined at:
 11608 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/toupper.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;  c               1    wreg     unsigned char 
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;  c               1    1[BANK0 ] unsigned char 
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  1    wreg      unsigned char 
 11615 ;; Registers used:
 11616 ;;		wreg, status,2, status,0
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11623 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11624 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;Total ram usage:        2 bytes
 11627 ;; Hardware stack levels used: 1
 11628 ;; Hardware stack levels required when called: 2
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_strtol
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636     1D87                     _toupper:	
 11637                           ;psect for function _toupper
 11638                           
 11639                           
 11640                           ;incstack = 0
 11641                           ; Regs used in _toupper: [wreg+status,2+status,0]
 11642                           ;toupper@c stored from wreg
 11643     1D87  0140               	movlb	0	; select bank0
 11644     1D88  00A1               	movwf	toupper@c
 11645     1D89                     l3853:
 11646     1D89  307B               	movlw	123
 11647     1D8A  0221               	subwf	toupper@c,w
 11648     1D8B  1803               	skipnc
 11649     1D8C  2D8E               	goto	u3651
 11650     1D8D  2D8F               	goto	u3650
 11651     1D8E                     u3651:
 11652     1D8E  2D99               	goto	l3859
 11653     1D8F                     u3650:
 11654     1D8F                     l3855:
 11655     1D8F  3061               	movlw	97
 11656     1D90  0221               	subwf	toupper@c,w
 11657     1D91  1C03               	skipc
 11658     1D92  2D94               	goto	u3661
 11659     1D93  2D95               	goto	u3660
 11660     1D94                     u3661:
 11661     1D94  2D99               	goto	l3859
 11662     1D95                     u3660:
 11663     1D95                     l3857:
 11664     1D95  30DF               	movlw	223
 11665     1D96  00A0               	movwf	??_toupper
 11666     1D97  0820               	movf	??_toupper,w
 11667     1D98  05A1               	andwf	toupper@c,f
 11668     1D99                     l3859:
 11669     1D99  0821               	movf	toupper@c,w
 11670     1D9A                     l1503:
 11671     1D9A  0008               	return
 11672     1D9B                     __end_of_toupper:
 11673                           
 11674                           	psect	text10
 11675     1DC7                     __ptext10:	
 11676 ;; *************** function _isspace *****************
 11677 ;; Defined at:
 11678 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isspace.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  c               1    wreg     unsigned char 
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;  c               1    1[BANK0 ] unsigned char 
 11683 ;; Return value:  Size  Location     Type
 11684 ;;		None               void
 11685 ;; Registers used:
 11686 ;;		wreg, status,2, status,0
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;Total ram usage:        2 bytes
 11697 ;; Hardware stack levels used: 1
 11698 ;; Hardware stack levels required when called: 2
 11699 ;; This function calls:
 11700 ;;		Nothing
 11701 ;; This function is called by:
 11702 ;;		_strtol
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706     1DC7                     _isspace:	
 11707                           ;psect for function _isspace
 11708                           
 11709                           
 11710                           ;incstack = 0
 11711                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11712                           ;isspace@c stored from wreg
 11713     1DC7  0140               	movlb	0	; select bank0
 11714     1DC8  00A1               	movwf	isspace@c
 11715     1DC9                     l3825:
 11716     1DC9  01A0               	clrf	_isspace$1968
 11717     1DCA  0AA0               	incf	_isspace$1968,f
 11718     1DCB                     l3827:
 11719     1DCB  3020               	movlw	32
 11720     1DCC  0621               	xorwf	isspace@c,w
 11721     1DCD  1903               	btfsc	3,2
 11722     1DCE  2DD0               	goto	u3591
 11723     1DCF  2DD1               	goto	u3590
 11724     1DD0                     u3591:
 11725     1DD0  2DDE               	goto	l3835
 11726     1DD1                     u3590:
 11727     1DD1                     l3829:
 11728     1DD1  300E               	movlw	14
 11729     1DD2  0221               	subwf	isspace@c,w
 11730     1DD3  1803               	skipnc
 11731     1DD4  2DD6               	goto	u3601
 11732     1DD5  2DD7               	goto	u3600
 11733     1DD6                     u3601:
 11734     1DD6  2DDD               	goto	l3833
 11735     1DD7                     u3600:
 11736     1DD7                     l3831:
 11737     1DD7  3009               	movlw	9
 11738     1DD8  0221               	subwf	isspace@c,w
 11739     1DD9  1803               	skipnc
 11740     1DDA  2DDC               	goto	u3611
 11741     1DDB  2DDD               	goto	u3610
 11742     1DDC                     u3611:
 11743     1DDC  2DDE               	goto	l3835
 11744     1DDD                     u3610:
 11745     1DDD                     l3833:
 11746     1DDD  01A0               	clrf	_isspace$1968
 11747     1DDE                     l3835:
 11748     1DDE  0C20               	rrf	_isspace$1968,w
 11749     1DDF                     l1494:
 11750     1DDF  0008               	return
 11751     1DE0                     __end_of_isspace:
 11752                           
 11753                           	psect	text11
 11754     1E15                     __ptext11:	
 11755 ;; *************** function _isalpha *****************
 11756 ;; Defined at:
 11757 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isalpha.c"
 11758 ;; Parameters:    Size  Location     Type
 11759 ;;  c               1    wreg     unsigned char 
 11760 ;; Auto vars:     Size  Location     Type
 11761 ;;  c               1    3[BANK0 ] unsigned char 
 11762 ;; Return value:  Size  Location     Type
 11763 ;;		None               void
 11764 ;; Registers used:
 11765 ;;		wreg, status,2, status,0, pclath, cstack
 11766 ;; Tracked objects:
 11767 ;;		On entry : 0/0
 11768 ;;		On exit  : 0/0
 11769 ;;		Unchanged: 0/0
 11770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11774 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11775 ;;Total ram usage:        2 bytes
 11776 ;; Hardware stack levels used: 1
 11777 ;; Hardware stack levels required when called: 3
 11778 ;; This function calls:
 11779 ;;		_isupper
 11780 ;; This function is called by:
 11781 ;;		_strtol
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785     1E15                     _isalpha:	
 11786                           ;psect for function _isalpha
 11787                           
 11788                           
 11789                           ;incstack = 0
 11790                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
 11791                           ;isalpha@c stored from wreg
 11792     1E15  0140               	movlb	0	; select bank0
 11793     1E16  00A3               	movwf	isalpha@c
 11794     1E17                     l3839:
 11795     1E17  01A2               	clrf	_isalpha$1965
 11796     1E18  0AA2               	incf	_isalpha$1965,f
 11797     1E19                     l3841:
 11798     1E19  307B               	movlw	123
 11799     1E1A  0223               	subwf	isalpha@c,w
 11800     1E1B  1803               	skipnc
 11801     1E1C  2E1E               	goto	u3621
 11802     1E1D  2E1F               	goto	u3620
 11803     1E1E                     u3621:
 11804     1E1E  2E25               	goto	l3845
 11805     1E1F                     u3620:
 11806     1E1F                     l3843:
 11807     1E1F  3061               	movlw	97
 11808     1E20  0223               	subwf	isalpha@c,w
 11809     1E21  1803               	skipnc
 11810     1E22  2E24               	goto	u3631
 11811     1E23  2E25               	goto	u3630
 11812     1E24                     u3631:
 11813     1E24  2E2F               	goto	l3849
 11814     1E25                     u3630:
 11815     1E25                     l3845:
 11816     1E25  0823               	movf	isalpha@c,w
 11817     1E26  319D  2560  319E   	fcall	_isupper
 11818     1E29  1803               	btfsc	3,0
 11819     1E2A  2E2C               	goto	u3641
 11820     1E2B  2E2D               	goto	u3640
 11821     1E2C                     u3641:
 11822     1E2C  2E2F               	goto	l3849
 11823     1E2D                     u3640:
 11824     1E2D                     l3847:
 11825     1E2D  0140               	movlb	0	; select bank0
 11826     1E2E  01A2               	clrf	_isalpha$1965
 11827     1E2F                     l3849:
 11828     1E2F  0140               	movlb	0	; select bank0
 11829     1E30  0C22               	rrf	_isalpha$1965,w
 11830     1E31                     l1489:
 11831     1E31  0008               	return
 11832     1E32                     __end_of_isalpha:
 11833                           
 11834                           	psect	text12
 11835     1D60                     __ptext12:	
 11836 ;; *************** function _isupper *****************
 11837 ;; Defined at:
 11838 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isupper.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;  c               1    wreg     unsigned char 
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;  c               1    1[BANK0 ] unsigned char 
 11843 ;; Return value:  Size  Location     Type
 11844 ;;		None               void
 11845 ;; Registers used:
 11846 ;;		wreg, status,2, status,0
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11853 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11855 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11856 ;;Total ram usage:        2 bytes
 11857 ;; Hardware stack levels used: 1
 11858 ;; Hardware stack levels required when called: 2
 11859 ;; This function calls:
 11860 ;;		Nothing
 11861 ;; This function is called by:
 11862 ;;		_isalpha
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866     1D60                     _isupper:	
 11867                           ;psect for function _isupper
 11868                           
 11869                           
 11870                           ;incstack = 0
 11871                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11872                           ;isupper@c stored from wreg
 11873     1D60  0140               	movlb	0	; select bank0
 11874     1D61  00A1               	movwf	isupper@c
 11875     1D62                     l3419:
 11876     1D62  01A0               	clrf	_isupper$1971
 11877     1D63                     l3421:
 11878     1D63  305B               	movlw	91
 11879     1D64  0221               	subwf	isupper@c,w
 11880     1D65  1803               	skipnc
 11881     1D66  2D68               	goto	u2781
 11882     1D67  2D69               	goto	u2780
 11883     1D68                     u2781:
 11884     1D68  2D71               	goto	l3427
 11885     1D69                     u2780:
 11886     1D69                     l3423:
 11887     1D69  3041               	movlw	65
 11888     1D6A  0221               	subwf	isupper@c,w
 11889     1D6B  1C03               	skipc
 11890     1D6C  2D6E               	goto	u2791
 11891     1D6D  2D6F               	goto	u2790
 11892     1D6E                     u2791:
 11893     1D6E  2D71               	goto	l3427
 11894     1D6F                     u2790:
 11895     1D6F                     l3425:
 11896     1D6F  01A0               	clrf	_isupper$1971
 11897     1D70  0AA0               	incf	_isupper$1971,f
 11898     1D71                     l3427:
 11899     1D71  0C20               	rrf	_isupper$1971,w
 11900     1D72                     l1499:
 11901     1D72  0008               	return
 11902     1D73                     __end_of_isupper:
 11903                           
 11904                           	psect	text13
 11905     1F5A                     __ptext13:	
 11906 ;; *************** function ___lmul *****************
 11907 ;; Defined at:
 11908 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul32.c"
 11909 ;; Parameters:    Size  Location     Type
 11910 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11911 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11912 ;; Auto vars:     Size  Location     Type
 11913 ;;  product         4    8[BANK0 ] unsigned long 
 11914 ;; Return value:  Size  Location     Type
 11915 ;;                  4    0[BANK0 ] unsigned long 
 11916 ;; Registers used:
 11917 ;;		wreg, status,2, status,0
 11918 ;; Tracked objects:
 11919 ;;		On entry : 0/0
 11920 ;;		On exit  : 0/0
 11921 ;;		Unchanged: 0/0
 11922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11923 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;Total ram usage:       12 bytes
 11928 ;; Hardware stack levels used: 1
 11929 ;; Hardware stack levels required when called: 2
 11930 ;; This function calls:
 11931 ;;		Nothing
 11932 ;; This function is called by:
 11933 ;;		_strtol
 11934 ;; This function uses a non-reentrant model
 11935 ;;
 11936                           
 11937     1F5A                     ___lmul:	
 11938                           ;psect for function ___lmul
 11939                           
 11940     1F5A                     l3797:	
 11941                           ;incstack = 0
 11942                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11943                           
 11944     1F5A  3000               	movlw	0
 11945     1F5B  0140               	movlb	0	; select bank0
 11946     1F5C  00AB               	movwf	___lmul@product+3
 11947     1F5D  3000               	movlw	0
 11948     1F5E  00AA               	movwf	___lmul@product+2
 11949     1F5F  3000               	movlw	0
 11950     1F60  00A9               	movwf	___lmul@product+1
 11951     1F61  3000               	movlw	0
 11952     1F62  00A8               	movwf	___lmul@product
 11953     1F63                     l3799:
 11954     1F63  1C20               	btfss	___lmul@multiplier,0
 11955     1F64  2F66               	goto	u3521
 11956     1F65  2F67               	goto	u3520
 11957     1F66                     u3521:
 11958     1F66  2F6F               	goto	l3803
 11959     1F67                     u3520:
 11960     1F67                     l3801:
 11961     1F67  0824               	movf	___lmul@multiplicand,w
 11962     1F68  07A8               	addwf	___lmul@product,f
 11963     1F69  0825               	movf	___lmul@multiplicand+1,w
 11964     1F6A  3DA9               	addwfc	___lmul@product+1,f
 11965     1F6B  0826               	movf	___lmul@multiplicand+2,w
 11966     1F6C  3DAA               	addwfc	___lmul@product+2,f
 11967     1F6D  0827               	movf	___lmul@multiplicand+3,w
 11968     1F6E  3DAB               	addwfc	___lmul@product+3,f
 11969     1F6F                     l3803:
 11970     1F6F  3001               	movlw	1
 11971     1F70                     u3535:
 11972     1F70  35A4               	lslf	___lmul@multiplicand,f
 11973     1F71  0DA5               	rlf	___lmul@multiplicand+1,f
 11974     1F72  0DA6               	rlf	___lmul@multiplicand+2,f
 11975     1F73  0DA7               	rlf	___lmul@multiplicand+3,f
 11976     1F74  0B89               	decfsz	9,f
 11977     1F75  2F70               	goto	u3535
 11978     1F76                     l3805:
 11979     1F76  3001               	movlw	1
 11980     1F77                     u3545:
 11981     1F77  36A3               	lsrf	___lmul@multiplier+3,f
 11982     1F78  0CA2               	rrf	___lmul@multiplier+2,f
 11983     1F79  0CA1               	rrf	___lmul@multiplier+1,f
 11984     1F7A  0CA0               	rrf	___lmul@multiplier,f
 11985     1F7B  0B89               	decfsz	9,f
 11986     1F7C  2F77               	goto	u3545
 11987     1F7D  0823               	movf	___lmul@multiplier+3,w
 11988     1F7E  0422               	iorwf	___lmul@multiplier+2,w
 11989     1F7F  0421               	iorwf	___lmul@multiplier+1,w
 11990     1F80  0420               	iorwf	___lmul@multiplier,w
 11991     1F81  1D03               	skipz
 11992     1F82  2F84               	goto	u3551
 11993     1F83  2F85               	goto	u3550
 11994     1F84                     u3551:
 11995     1F84  2F63               	goto	l3799
 11996     1F85                     u3550:
 11997     1F85                     l3807:
 11998     1F85  082B               	movf	___lmul@product+3,w
 11999     1F86  00A3               	movwf	?___lmul+3
 12000     1F87  082A               	movf	___lmul@product+2,w
 12001     1F88  00A2               	movwf	?___lmul+2
 12002     1F89  0829               	movf	___lmul@product+1,w
 12003     1F8A  00A1               	movwf	?___lmul+1
 12004     1F8B  0828               	movf	___lmul@product,w
 12005     1F8C  00A0               	movwf	?___lmul
 12006     1F8D                     l1004:
 12007     1F8D  0008               	return
 12008     1F8E                     __end_of___lmul:
 12009                           
 12010                           	psect	text14
 12011     1CCC                     __ptext14:	
 12012 ;; *************** function _i2c_slave_set_register_with_lock *****************
 12013 ;; Defined at:
 12014 ;;		line 41 in file "i2c_slave.c"
 12015 ;; Parameters:    Size  Location     Type
 12016 ;;  registerAddr    1    wreg     unsigned char 
 12017 ;;  value           1    2[BANK0 ] unsigned char 
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;  registerAddr    1    3[BANK0 ] unsigned char 
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      void 
 12022 ;; Registers used:
 12023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12029 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;Total ram usage:        2 bytes
 12034 ;; Hardware stack levels used: 1
 12035 ;; Hardware stack levels required when called: 3
 12036 ;; This function calls:
 12037 ;;		_i2c_slave_set_register
 12038 ;; This function is called by:
 12039 ;;		_set_device_serial_number_to_i2c_slave_memorymap
 12040 ;; This function uses a non-reentrant model
 12041 ;;
 12042                           
 12043     1CCC                     _i2c_slave_set_register_with_lock:	
 12044                           ;psect for function _i2c_slave_set_register_with_lock
 12045                           
 12046                           
 12047                           ;incstack = 0
 12048                           ; Regs used in _i2c_slave_set_register_with_lock: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
 12049                           ;i2c_slave_set_register_with_lock@registerAddress stored from wreg
 12050     1CCC  0140               	movlb	0	; select bank0
 12051     1CCD  00A3               	movwf	i2c_slave_set_register_with_lock@registerAddress
 12052     1CCE                     l3913:
 12053                           
 12054                           ;i2c_slave.c: 42: GIE = 0;
 12055     1CCE  138B               	bcf	11,7	;volatile
 12056     1CCF                     l3915:
 12057                           
 12058                           ;i2c_slave.c: 43: i2c_slave_set_register(registerAddress, value);
 12059     1CCF  0822               	movf	i2c_slave_set_register_with_lock@value,w
 12060     1CD0  00A0               	movwf	i2c_slave_set_register@value
 12061     1CD1  0823               	movf	i2c_slave_set_register_with_lock@registerAddress,w
 12062     1CD2  319C  24C2  319C   	fcall	_i2c_slave_set_register
 12063     1CD5                     l3917:
 12064                           
 12065                           ;i2c_slave.c: 44: GIE = 1;
 12066     1CD5  178B               	bsf	11,7	;volatile
 12067     1CD6                     l252:
 12068     1CD6  0008               	return
 12069     1CD7                     __end_of_i2c_slave_set_register_with_lock:
 12070                           
 12071                           	psect	text15
 12072     1CC2                     __ptext15:	
 12073 ;; *************** function _i2c_slave_set_register *****************
 12074 ;; Defined at:
 12075 ;;		line 32 in file "i2c_slave.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  registerAddr    1    wreg     unsigned char 
 12078 ;;  value           1    0[BANK0 ] unsigned char 
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;  registerAddr    1    1[BANK0 ] unsigned char 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      void 
 12083 ;; Registers used:
 12084 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12090 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;Total ram usage:        2 bytes
 12095 ;; Hardware stack levels used: 1
 12096 ;; Hardware stack levels required when called: 2
 12097 ;; This function calls:
 12098 ;;		Nothing
 12099 ;; This function is called by:
 12100 ;;		_main
 12101 ;;		_i2c_slave_set_register_with_lock
 12102 ;; This function uses a non-reentrant model
 12103 ;;
 12104                           
 12105     1CC2                     _i2c_slave_set_register:	
 12106                           ;psect for function _i2c_slave_set_register
 12107                           
 12108                           
 12109                           ;incstack = 0
 12110                           ; Regs used in _i2c_slave_set_register: [wreg+fsr1l+fsr1h+status,2+status,0]
 12111                           ;i2c_slave_set_register@registerAddress stored from wreg
 12112     1CC2  0140               	movlb	0	; select bank0
 12113     1CC3  00A1               	movwf	i2c_slave_set_register@registerAddress
 12114     1CC4                     l3747:
 12115                           
 12116                           ;i2c_slave.c: 33: slaveData[registerAddress] = value;
 12117     1CC4  0821               	movf	i2c_slave_set_register@registerAddress,w
 12118     1CC5  3EA0               	addlw	(low (_slaveData| (0+256)))& (0+255)
 12119     1CC6  0086               	movwf	6
 12120     1CC7  3001               	movlw	1	; select bank3/4
 12121     1CC8  0087               	movwf	7
 12122     1CC9  0820               	movf	i2c_slave_set_register@value,w
 12123     1CCA  0081               	movwf	1
 12124     1CCB                     l246:
 12125     1CCB  0008               	return
 12126     1CCC                     __end_of_i2c_slave_set_register:
 12127                           
 12128                           	psect	text16
 12129     1461                     __ptext16:	
 12130 ;; *************** function _save_top_adc_point *****************
 12131 ;; Defined at:
 12132 ;;		line 94 in file "calibration.c"
 12133 ;; Parameters:    Size  Location     Type
 12134 ;;  states          1    wreg     PTR enum E186
 12135 ;;		 -> main@state(1), 
 12136 ;;  sensor_value    1   50[BANK0 ] PTR struct values
 12137 ;;		 -> main@sensor_value(17), 
 12138 ;; Auto vars:     Size  Location     Type
 12139 ;;  states          1   67[BANK0 ] PTR enum E186
 12140 ;;		 -> main@state(1), 
 12141 ;;  save_top_adc    8   59[BANK0 ] unsigned char [8]
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1    wreg      void 
 12144 ;; Registers used:
 12145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/0
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12151 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12152 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12153 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12154 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;Total ram usage:       18 bytes
 12156 ;; Hardware stack levels used: 1
 12157 ;; Hardware stack levels required when called: 4
 12158 ;; This function calls:
 12159 ;;		_EUSART1_Write_1
 12160 ;;		_calculate_crc_and_fill_array
 12161 ;;		_enable_tx_transmit
 12162 ;;		_enable_uart_printf
 12163 ;;		_printf
 12164 ;; This function is called by:
 12165 ;;		_main
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169     1461                     _save_top_adc_point:	
 12170                           ;psect for function _save_top_adc_point
 12171                           
 12172                           
 12173                           ;incstack = 0
 12174                           ; Regs used in _save_top_adc_point: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12175                           ;save_top_adc_point@states stored from wreg
 12176     1461  0140               	movlb	0	; select bank0
 12177     1462  00E3               	movwf	save_top_adc_point@states
 12178     1463                     l4571:
 12179                           
 12180                           ;calibration.c: 95: uint8_t save_top_adc_command[8] = {0x01, 0x06, 0x00, 0x3E, 0x00, 0xF
      +                          F, 0xA8, 0x46};
 12181     1463  30E8               	movlw	low save_top_adc_point@F10610
 12182     1464  0086               	movwf	6
 12183     1465  3001               	movlw	high save_top_adc_point@F10610
 12184     1466  0087               	movwf	7
 12185     1467  305B               	movlw	low save_top_adc_point@save_top_adc_command
 12186     1468  0084               	movwf	4
 12187     1469  3000               	movlw	high save_top_adc_point@save_top_adc_command
 12188     146A  0085               	movwf	5
 12189     146B  3008               	movlw	8
 12190     146C  00D3               	movwf	??_save_top_adc_point
 12191     146D                     u4770:
 12192     146D  0016               	moviw fsr1++
 12193     146E  001A               	movwi fsr0++
 12194     146F  0BD3               	decfsz	??_save_top_adc_point,f
 12195     1470  2C6D               	goto	u4770
 12196     1471                     l4573:
 12197                           
 12198                           ;calibration.c: 96: save_top_adc_command[4] = sensor_value->ph_ADC_High_byte;
 12199     1471  0852               	movf	save_top_adc_point@sensor_value,w
 12200     1472  0086               	movwf	6
 12201     1473  0187               	clrf	7
 12202     1474  3F43               	moviw [3]fsr1
 12203     1475  00DF               	movwf	save_top_adc_point@save_top_adc_command+4
 12204     1476                     l4575:
 12205                           
 12206                           ;calibration.c: 97: save_top_adc_command[5] = sensor_value->ph_ADC_Low_byte;
 12207     1476  0852               	movf	save_top_adc_point@sensor_value,w
 12208     1477  0086               	movwf	6
 12209     1478  0187               	clrf	7
 12210     1479  3F44               	moviw [4]fsr1
 12211     147A  00E0               	movwf	save_top_adc_point@save_top_adc_command+5
 12212     147B                     l4577:
 12213                           
 12214                           ;calibration.c: 98: calculate_crc_and_fill_array(save_top_adc_command, 6);
 12215     147B  3006               	movlw	6
 12216     147C  00AE               	movwf	calculate_crc_and_fill_array@data_len
 12217     147D  305B               	movlw	(low (save_top_adc_point@save_top_adc_command| 0))& (0+255)
 12218     147E  319E  2632  3194   	fcall	_calculate_crc_and_fill_array
 12219     1481                     l4579:
 12220                           
 12221                           ;calibration.c: 99: EUSART1_Write_1(save_top_adc_command, 8);
 12222     1481  3008               	movlw	8
 12223     1482  0140               	movlb	0	; select bank0
 12224     1483  00A1               	movwf	EUSART1_Write_1@length
 12225     1484  305B               	movlw	(low (save_top_adc_point@save_top_adc_command| 0))& (0+255)
 12226     1485  319D  25E0  3194   	fcall	_EUSART1_Write_1
 12227     1488                     l4581:
 12228                           
 12229                           ;calibration.c: 100: enable_uart_printf();
 12230     1488  319C  2467  3194   	fcall	_enable_uart_printf
 12231     148B                     l4583:
 12232                           
 12233                           ;calibration.c: 101: printf("[RX-BUFFER] pH485-Calibration_Top_Value: ---- \r\n ";calibr
      +                          ation.c: 102: "a------pH ADC_value: %u \r\n";calibration.c: 103: "a------pH ADC_High Byt
      +                          es: 0x%02X \r\n";calibration.c: 104: "a------pH ADC_Low  Bytes: 0x%02X \r\n";calibration
      +                          .c: 105: "a------pH ADC_Low  CRC High Byte: 0x%02X \r\n";calibration.c: 106: "a------pH 
      +                          ADC_Low  CRC High Byte: 0x%02X \r\n",;calibration.c: 107: sensor_value->ph_ADC_value,;ca
      +                          libration.c: 108: save_top_adc_command[4],;calibration.c: 109: save_top_adc_command[5],
 12234     148B  30F3               	movlw	low (STR_30| (0+32768))
 12235     148C  0140               	movlb	0	; select bank0
 12236     148D  00AE               	movwf	printf@f
 12237     148E  3090               	movlw	high (STR_30| (0+32768))
 12238     148F  00AF               	movwf	printf@f+1
 12239     1490  0A52               	incf	save_top_adc_point@sensor_value,w
 12240     1491  0086               	movwf	6
 12241     1492  0187               	clrf	7
 12242     1493  3F40               	moviw [0]fsr1
 12243     1494  00B0               	movwf	?_printf+2
 12244     1495  3F41               	moviw [1]fsr1
 12245     1496  00B1               	movwf	?_printf+3
 12246     1497  085F               	movf	save_top_adc_point@save_top_adc_command+4,w
 12247     1498  00D3               	movwf	??_save_top_adc_point
 12248     1499  01D4               	clrf	??_save_top_adc_point+1
 12249     149A  0853               	movf	??_save_top_adc_point,w
 12250     149B  00B2               	movwf	?_printf+4
 12251     149C  0854               	movf	??_save_top_adc_point+1,w
 12252     149D  00B3               	movwf	?_printf+5
 12253     149E  0860               	movf	save_top_adc_point@save_top_adc_command+5,w
 12254     149F  00D5               	movwf	??_save_top_adc_point+2
 12255     14A0  01D6               	clrf	??_save_top_adc_point+3
 12256     14A1  0855               	movf	??_save_top_adc_point+2,w
 12257     14A2  00B4               	movwf	?_printf+6
 12258     14A3  0856               	movf	??_save_top_adc_point+3,w
 12259     14A4  00B5               	movwf	?_printf+7
 12260     14A5  0861               	movf	save_top_adc_point@save_top_adc_command+6,w
 12261     14A6  00D7               	movwf	??_save_top_adc_point+4
 12262     14A7  01D8               	clrf	??_save_top_adc_point+5
 12263     14A8  0857               	movf	??_save_top_adc_point+4,w
 12264     14A9  00B6               	movwf	?_printf+8
 12265     14AA  0858               	movf	??_save_top_adc_point+5,w
 12266     14AB  00B7               	movwf	?_printf+9
 12267     14AC  0862               	movf	save_top_adc_point@save_top_adc_command+7,w
 12268     14AD  00D9               	movwf	??_save_top_adc_point+6
 12269     14AE  01DA               	clrf	??_save_top_adc_point+7
 12270     14AF  0859               	movf	??_save_top_adc_point+6,w
 12271     14B0  00B8               	movwf	?_printf+10
 12272     14B1  085A               	movf	??_save_top_adc_point+7,w
 12273     14B2  00B9               	movwf	?_printf+11
 12274     14B3  3180  20C1  3194   	fcall	_printf
 12275     14B6                     l4585:
 12276                           
 12277                           ;calibration.c: 113: _delay((unsigned long)((10)*(1000000/4000.0)));
 12278     14B6  3004               	movlw	4
 12279     14B7  0140               	movlb	0	; select bank0
 12280     14B8  00D3               	movwf	??_save_top_adc_point
 12281     14B9  303D               	movlw	61
 12282     14BA                     u5227:
 12283     14BA  0B89               	decfsz	9,f
 12284     14BB  2CBA               	goto	u5227
 12285     14BC  0BD3               	decfsz	??_save_top_adc_point,f
 12286     14BD  2CBA               	goto	u5227
 12287     14BE  3200               	nop2
 12288     14BF                     l4587:
 12289                           
 12290                           ;calibration.c: 114: enable_tx_transmit();
 12291     14BF  319C  24FC  3194   	fcall	_enable_tx_transmit
 12292     14C2                     l4589:
 12293                           
 12294                           ;calibration.c: 115: *states = STATE_CALIBRATE;
 12295     14C2  0140               	movlb	0	; select bank0
 12296     14C3  0863               	movf	save_top_adc_point@states,w
 12297     14C4  0086               	movwf	6
 12298     14C5  0187               	clrf	7
 12299     14C6  3004               	movlw	4
 12300     14C7  0081               	movwf	1
 12301     14C8                     l680:
 12302     14C8  0008               	return
 12303     14C9                     __end_of_save_top_adc_point:
 12304                           
 12305                           	psect	text17
 12306     13F9                     __ptext17:	
 12307 ;; *************** function _save_bottom_adc_point *****************
 12308 ;; Defined at:
 12309 ;;		line 117 in file "calibration.c"
 12310 ;; Parameters:    Size  Location     Type
 12311 ;;  states          1    wreg     PTR enum E186
 12312 ;;		 -> main@state(1), 
 12313 ;;  sensor_value    1   50[BANK0 ] PTR struct values
 12314 ;;		 -> main@sensor_value(17), 
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;  states          1   67[BANK0 ] PTR enum E186
 12317 ;;		 -> main@state(1), 
 12318 ;;  save_bottom_    8   59[BANK0 ] unsigned char [8]
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  1    wreg      void 
 12321 ;; Registers used:
 12322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12328 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;Total ram usage:       18 bytes
 12333 ;; Hardware stack levels used: 1
 12334 ;; Hardware stack levels required when called: 4
 12335 ;; This function calls:
 12336 ;;		_EUSART1_Write_1
 12337 ;;		_calculate_crc_and_fill_array
 12338 ;;		_enable_tx_transmit
 12339 ;;		_enable_uart_printf
 12340 ;;		_printf
 12341 ;; This function is called by:
 12342 ;;		_main
 12343 ;; This function uses a non-reentrant model
 12344 ;;
 12345                           
 12346     13F9                     _save_bottom_adc_point:	
 12347                           ;psect for function _save_bottom_adc_point
 12348                           
 12349                           
 12350                           ;incstack = 0
 12351                           ; Regs used in _save_bottom_adc_point: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12352                           ;save_bottom_adc_point@states stored from wreg
 12353     13F9  0140               	movlb	0	; select bank0
 12354     13FA  00E3               	movwf	save_bottom_adc_point@states
 12355     13FB                     l4591:
 12356                           
 12357                           ;calibration.c: 118: uint8_t save_bottom_adc_command[8] = {0x01, 0x06, 0x00, 0x3F, 0x00,
      +                           0xFF, 0xF9, 0x86};
 12358     13FB  30E0               	movlw	low save_bottom_adc_point@F10616
 12359     13FC  0086               	movwf	6
 12360     13FD  3001               	movlw	high save_bottom_adc_point@F10616
 12361     13FE  0087               	movwf	7
 12362     13FF  305B               	movlw	low save_bottom_adc_point@save_bottom_adc_command
 12363     1400  0084               	movwf	4
 12364     1401  3000               	movlw	high save_bottom_adc_point@save_bottom_adc_command
 12365     1402  0085               	movwf	5
 12366     1403  3008               	movlw	8
 12367     1404  00D3               	movwf	??_save_bottom_adc_point
 12368     1405                     u4780:
 12369     1405  0016               	moviw fsr1++
 12370     1406  001A               	movwi fsr0++
 12371     1407  0BD3               	decfsz	??_save_bottom_adc_point,f
 12372     1408  2C05               	goto	u4780
 12373     1409                     l4593:
 12374                           
 12375                           ;calibration.c: 119: save_bottom_adc_command[4] = sensor_value->ph_ADC_High_byte;
 12376     1409  0852               	movf	save_bottom_adc_point@sensor_value,w
 12377     140A  0086               	movwf	6
 12378     140B  0187               	clrf	7
 12379     140C  3F43               	moviw [3]fsr1
 12380     140D  00DF               	movwf	save_bottom_adc_point@save_bottom_adc_command+4
 12381     140E                     l4595:
 12382                           
 12383                           ;calibration.c: 120: save_bottom_adc_command[5] = sensor_value->ph_ADC_Low_byte;
 12384     140E  0852               	movf	save_bottom_adc_point@sensor_value,w
 12385     140F  0086               	movwf	6
 12386     1410  0187               	clrf	7
 12387     1411  3F44               	moviw [4]fsr1
 12388     1412  00E0               	movwf	save_bottom_adc_point@save_bottom_adc_command+5
 12389     1413                     l4597:
 12390                           
 12391                           ;calibration.c: 121: calculate_crc_and_fill_array(save_bottom_adc_command, 6);
 12392     1413  3006               	movlw	6
 12393     1414  00AE               	movwf	calculate_crc_and_fill_array@data_len
 12394     1415  305B               	movlw	(low (save_bottom_adc_point@save_bottom_adc_command| 0))& (0+255)
 12395     1416  319E  2632  3193   	fcall	_calculate_crc_and_fill_array
 12396     1419                     l4599:
 12397                           
 12398                           ;calibration.c: 122: EUSART1_Write_1(save_bottom_adc_command, 8);
 12399     1419  3008               	movlw	8
 12400     141A  0140               	movlb	0	; select bank0
 12401     141B  00A1               	movwf	EUSART1_Write_1@length
 12402     141C  305B               	movlw	(low (save_bottom_adc_point@save_bottom_adc_command| 0))& (0+255)
 12403     141D  319D  25E0  3193   	fcall	_EUSART1_Write_1
 12404     1420                     l4601:
 12405                           
 12406                           ;calibration.c: 123: enable_uart_printf();
 12407     1420  319C  2467  3193   	fcall	_enable_uart_printf
 12408     1423                     l4603:
 12409                           
 12410                           ;calibration.c: 124: printf("[RX-BUFFER] pH485-Calibration_Bottom_Value: ---- \r\n ";cal
      +                          ibration.c: 125: "a------pH ADC_value: %u \r\n";calibration.c: 126: "a------pH ADC_High 
      +                          Bytes: 0x%02X \r\n";calibration.c: 127: "a------pH ADC_Low  Bytes: 0x%02X \r\n";calibrat
      +                          ion.c: 128: "a------pH ADC_Low  CRC High Byte: 0x%02X \r\n";calibration.c: 129: "a------
      +                          pH ADC_Low  CRC High Byte: 0x%02X \r\n",;calibration.c: 130: sensor_value->ph_ADC_value,
      +                          ;calibration.c: 131: save_bottom_adc_command[4],;calibration.c: 132: save_bottom_adc_com
      +                          mand[5],
 12411     1423  3008               	movlw	low (STR_31| (0+32768))
 12412     1424  0140               	movlb	0	; select bank0
 12413     1425  00AE               	movwf	printf@f
 12414     1426  3090               	movlw	high (STR_31| (0+32768))
 12415     1427  00AF               	movwf	printf@f+1
 12416     1428  0A52               	incf	save_bottom_adc_point@sensor_value,w
 12417     1429  0086               	movwf	6
 12418     142A  0187               	clrf	7
 12419     142B  3F40               	moviw [0]fsr1
 12420     142C  00B0               	movwf	?_printf+2
 12421     142D  3F41               	moviw [1]fsr1
 12422     142E  00B1               	movwf	?_printf+3
 12423     142F  085F               	movf	save_bottom_adc_point@save_bottom_adc_command+4,w
 12424     1430  00D3               	movwf	??_save_bottom_adc_point
 12425     1431  01D4               	clrf	??_save_bottom_adc_point+1
 12426     1432  0853               	movf	??_save_bottom_adc_point,w
 12427     1433  00B2               	movwf	?_printf+4
 12428     1434  0854               	movf	??_save_bottom_adc_point+1,w
 12429     1435  00B3               	movwf	?_printf+5
 12430     1436  0860               	movf	save_bottom_adc_point@save_bottom_adc_command+5,w
 12431     1437  00D5               	movwf	??_save_bottom_adc_point+2
 12432     1438  01D6               	clrf	??_save_bottom_adc_point+3
 12433     1439  0855               	movf	??_save_bottom_adc_point+2,w
 12434     143A  00B4               	movwf	?_printf+6
 12435     143B  0856               	movf	??_save_bottom_adc_point+3,w
 12436     143C  00B5               	movwf	?_printf+7
 12437     143D  0861               	movf	save_bottom_adc_point@save_bottom_adc_command+6,w
 12438     143E  00D7               	movwf	??_save_bottom_adc_point+4
 12439     143F  01D8               	clrf	??_save_bottom_adc_point+5
 12440     1440  0857               	movf	??_save_bottom_adc_point+4,w
 12441     1441  00B6               	movwf	?_printf+8
 12442     1442  0858               	movf	??_save_bottom_adc_point+5,w
 12443     1443  00B7               	movwf	?_printf+9
 12444     1444  0862               	movf	save_bottom_adc_point@save_bottom_adc_command+7,w
 12445     1445  00D9               	movwf	??_save_bottom_adc_point+6
 12446     1446  01DA               	clrf	??_save_bottom_adc_point+7
 12447     1447  0859               	movf	??_save_bottom_adc_point+6,w
 12448     1448  00B8               	movwf	?_printf+10
 12449     1449  085A               	movf	??_save_bottom_adc_point+7,w
 12450     144A  00B9               	movwf	?_printf+11
 12451     144B  3180  20C1  3193   	fcall	_printf
 12452     144E                     l4605:
 12453                           
 12454                           ;calibration.c: 136: _delay((unsigned long)((10)*(1000000/4000.0)));
 12455     144E  3004               	movlw	4
 12456     144F  0140               	movlb	0	; select bank0
 12457     1450  00D3               	movwf	??_save_bottom_adc_point
 12458     1451  303D               	movlw	61
 12459     1452                     u5237:
 12460     1452  0B89               	decfsz	9,f
 12461     1453  2C52               	goto	u5237
 12462     1454  0BD3               	decfsz	??_save_bottom_adc_point,f
 12463     1455  2C52               	goto	u5237
 12464     1456  3200               	nop2
 12465     1457                     l4607:
 12466                           
 12467                           ;calibration.c: 137: enable_tx_transmit();
 12468     1457  319C  24FC  3193   	fcall	_enable_tx_transmit
 12469     145A                     l4609:
 12470                           
 12471                           ;calibration.c: 138: *states = STATE_CALIBRATE;
 12472     145A  0140               	movlb	0	; select bank0
 12473     145B  0863               	movf	save_bottom_adc_point@states,w
 12474     145C  0086               	movwf	6
 12475     145D  0187               	clrf	7
 12476     145E  3004               	movlw	4
 12477     145F  0081               	movwf	1
 12478     1460                     l685:
 12479     1460  0008               	return
 12480     1461                     __end_of_save_bottom_adc_point:
 12481                           
 12482                           	psect	text18
 12483     1E32                     __ptext18:	
 12484 ;; *************** function _calculate_crc_and_fill_array *****************
 12485 ;; Defined at:
 12486 ;;		line 45 in file "calibration.c"
 12487 ;; Parameters:    Size  Location     Type
 12488 ;;  data            1    wreg     PTR unsigned char 
 12489 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), 
 12490 ;;  data_len        1   14[BANK0 ] unsigned char 
 12491 ;; Auto vars:     Size  Location     Type
 12492 ;;  data            1   18[BANK0 ] PTR unsigned char 
 12493 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), 
 12494 ;;  crc             2   16[BANK0 ] unsigned int 
 12495 ;; Return value:  Size  Location     Type
 12496 ;;                  1    wreg      void 
 12497 ;; Registers used:
 12498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12499 ;; Tracked objects:
 12500 ;;		On entry : 0/0
 12501 ;;		On exit  : 0/0
 12502 ;;		Unchanged: 0/0
 12503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12504 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12505 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12506 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12507 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12508 ;;Total ram usage:        5 bytes
 12509 ;; Hardware stack levels used: 1
 12510 ;; Hardware stack levels required when called: 3
 12511 ;; This function calls:
 12512 ;;		_crc16_modbus
 12513 ;; This function is called by:
 12514 ;;		_save_top_adc_point
 12515 ;;		_save_bottom_adc_point
 12516 ;; This function uses a non-reentrant model
 12517 ;;
 12518                           
 12519     1E32                     _calculate_crc_and_fill_array:	
 12520                           ;psect for function _calculate_crc_and_fill_array
 12521                           
 12522                           
 12523                           ;incstack = 0
 12524                           ; Regs used in _calculate_crc_and_fill_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 12525                           ;calculate_crc_and_fill_array@data stored from wreg
 12526     1E32  0140               	movlb	0	; select bank0
 12527     1E33  00B2               	movwf	calculate_crc_and_fill_array@data
 12528     1E34                     l4163:
 12529                           
 12530                           ;calibration.c: 46: uint16_t crc = crc16_modbus(data, data_len);
 12531     1E34  082E               	movf	calculate_crc_and_fill_array@data_len,w
 12532     1E35  00A0               	movwf	crc16_modbus@len
 12533     1E36  0832               	movf	calculate_crc_and_fill_array@data,w
 12534     1E37  3193  233D  319E   	fcall	_crc16_modbus
 12535     1E3A  0140               	movlb	0	; select bank0
 12536     1E3B  0821               	movf	?_crc16_modbus+1,w
 12537     1E3C  00B1               	movwf	calculate_crc_and_fill_array@crc+1
 12538     1E3D  0820               	movf	?_crc16_modbus,w
 12539     1E3E  00B0               	movwf	calculate_crc_and_fill_array@crc
 12540     1E3F                     l4165:
 12541                           
 12542                           ;calibration.c: 47: data[data_len] = crc & 0xFF;
 12543     1E3F  082E               	movf	calculate_crc_and_fill_array@data_len,w
 12544     1E40  0732               	addwf	calculate_crc_and_fill_array@data,w
 12545     1E41  00AF               	movwf	??_calculate_crc_and_fill_array
 12546     1E42  082F               	movf	??_calculate_crc_and_fill_array,w
 12547     1E43  0086               	movwf	6
 12548     1E44  0187               	clrf	7
 12549     1E45  0830               	movf	calculate_crc_and_fill_array@crc,w
 12550     1E46  0081               	movwf	1
 12551     1E47                     l4167:
 12552                           
 12553                           ;calibration.c: 48: data[data_len+1] = (crc >> 8) & 0xFF;
 12554     1E47  082E               	movf	calculate_crc_and_fill_array@data_len,w
 12555     1E48  0732               	addwf	calculate_crc_and_fill_array@data,w
 12556     1E49  00AF               	movwf	??_calculate_crc_and_fill_array
 12557     1E4A  0A2F               	incf	??_calculate_crc_and_fill_array,w
 12558     1E4B  0086               	movwf	6
 12559     1E4C  0187               	clrf	7
 12560     1E4D  0831               	movf	calculate_crc_and_fill_array@crc+1,w
 12561     1E4E  0081               	movwf	1
 12562     1E4F                     l651:
 12563     1E4F  0008               	return
 12564     1E50                     __end_of_calculate_crc_and_fill_array:
 12565                           
 12566                           	psect	text19
 12567     133D                     __ptext19:	
 12568 ;; *************** function _crc16_modbus *****************
 12569 ;; Defined at:
 12570 ;;		line 27 in file "calibration.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;  data            1    wreg     PTR unsigned char 
 12573 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), 
 12574 ;;  len             1    0[BANK0 ] unsigned char 
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;  data            1    7[BANK0 ] PTR unsigned char 
 12577 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), 
 12578 ;;  j               2   10[BANK0 ] int 
 12579 ;;  i               2    8[BANK0 ] int 
 12580 ;;  crc             2   12[BANK0 ] unsigned int 
 12581 ;;  poly            2    5[BANK0 ] unsigned int 
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  2    0[BANK0 ] unsigned int 
 12584 ;; Registers used:
 12585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;Total ram usage:       14 bytes
 12596 ;; Hardware stack levels used: 1
 12597 ;; Hardware stack levels required when called: 2
 12598 ;; This function calls:
 12599 ;;		Nothing
 12600 ;; This function is called by:
 12601 ;;		_calculate_crc_and_fill_array
 12602 ;; This function uses a non-reentrant model
 12603 ;;
 12604                           
 12605     133D                     _crc16_modbus:	
 12606                           ;psect for function _crc16_modbus
 12607                           
 12608                           
 12609                           ;incstack = 0
 12610                           ; Regs used in _crc16_modbus: [wreg+fsr1l+fsr1h+status,2+status,0]
 12611                           ;crc16_modbus@data stored from wreg
 12612     133D  0140               	movlb	0	; select bank0
 12613     133E  00A7               	movwf	crc16_modbus@data
 12614     133F                     l3769:
 12615                           
 12616                           ;calibration.c: 28: uint16_t crc = 0xFFFF;
 12617     133F  30FF               	movlw	255
 12618     1340  00AC               	movwf	crc16_modbus@crc
 12619     1341  30FF               	movlw	255
 12620     1342  00AD               	movwf	crc16_modbus@crc+1
 12621                           
 12622                           ;calibration.c: 29: uint16_t poly = 0xA001;
 12623     1343  3001               	movlw	1
 12624     1344  00A5               	movwf	crc16_modbus@poly
 12625     1345  30A0               	movlw	160
 12626     1346  00A6               	movwf	crc16_modbus@poly+1
 12627     1347                     l3771:
 12628                           
 12629                           ;calibration.c: 31: for (int i = 0; i < len; i++) {
 12630     1347  01A8               	clrf	crc16_modbus@i
 12631     1348  01A9               	clrf	crc16_modbus@i+1
 12632     1349  2B84               	goto	l641
 12633     134A                     l3773:
 12634                           
 12635                           ;calibration.c: 32: crc ^= data[i];
 12636     134A  0140               	movlb	0	; select bank0
 12637     134B  0828               	movf	crc16_modbus@i,w
 12638     134C  0727               	addwf	crc16_modbus@data,w
 12639     134D  00A2               	movwf	??_crc16_modbus
 12640     134E  0822               	movf	??_crc16_modbus,w
 12641     134F  0086               	movwf	6
 12642     1350  0187               	clrf	7
 12643     1351  0801               	movf	1,w
 12644     1352  00A3               	movwf	??_crc16_modbus+1
 12645     1353  01A4               	clrf	??_crc16_modbus+2
 12646     1354  0823               	movf	??_crc16_modbus+1,w
 12647     1355  06AC               	xorwf	crc16_modbus@crc,f
 12648     1356  0824               	movf	??_crc16_modbus+2,w
 12649     1357  06AD               	xorwf	crc16_modbus@crc+1,f
 12650     1358                     l3775:
 12651                           
 12652                           ;calibration.c: 33: for (int j = 0; j < 8; j++) {
 12653     1358  01AA               	clrf	crc16_modbus@j
 12654     1359  01AB               	clrf	crc16_modbus@j+1
 12655     135A                     l643:
 12656                           
 12657                           ;calibration.c: 34: if (crc & 0x0001) {
 12658     135A  0140               	movlb	0	; select bank0
 12659     135B  1C2C               	btfss	crc16_modbus@crc,0
 12660     135C  2B5E               	goto	u3471
 12661     135D  2B5F               	goto	u3470
 12662     135E                     u3471:
 12663     135E  2B69               	goto	l3785
 12664     135F                     u3470:
 12665     135F                     l3781:
 12666                           
 12667                           ;calibration.c: 35: crc >>= 1;
 12668     135F  3001               	movlw	1
 12669     1360                     u3485:
 12670     1360  36AD               	lsrf	crc16_modbus@crc+1,f
 12671     1361  0CAC               	rrf	crc16_modbus@crc,f
 12672     1362  0B89               	decfsz	9,f
 12673     1363  2B60               	goto	u3485
 12674     1364                     l3783:
 12675                           
 12676                           ;calibration.c: 36: crc ^= poly;
 12677     1364  0825               	movf	crc16_modbus@poly,w
 12678     1365  06AC               	xorwf	crc16_modbus@crc,f
 12679     1366  0826               	movf	crc16_modbus@poly+1,w
 12680     1367  06AD               	xorwf	crc16_modbus@crc+1,f
 12681                           
 12682                           ;calibration.c: 37: } else {
 12683     1368  2B6E               	goto	l3787
 12684     1369                     l3785:
 12685                           
 12686                           ;calibration.c: 38: crc >>= 1;
 12687     1369  3001               	movlw	1
 12688     136A                     u3495:
 12689     136A  36AD               	lsrf	crc16_modbus@crc+1,f
 12690     136B  0CAC               	rrf	crc16_modbus@crc,f
 12691     136C  0B89               	decfsz	9,f
 12692     136D  2B6A               	goto	u3495
 12693     136E                     l3787:
 12694     136E  3001               	movlw	1
 12695     136F  07AA               	addwf	crc16_modbus@j,f
 12696     1370  3000               	movlw	0
 12697     1371  3DAB               	addwfc	crc16_modbus@j+1,f
 12698     1372                     l3789:
 12699     1372  082B               	movf	crc16_modbus@j+1,w
 12700     1373  3A80               	xorlw	128
 12701     1374  00A2               	movwf	??_crc16_modbus
 12702     1375  3080               	movlw	128
 12703     1376  0222               	subwf	??_crc16_modbus,w
 12704     1377  1D03               	skipz
 12705     1378  2B7B               	goto	u3505
 12706     1379  3008               	movlw	8
 12707     137A  022A               	subwf	crc16_modbus@j,w
 12708     137B                     u3505:
 12709     137B  1C03               	skipc
 12710     137C  2B7E               	goto	u3501
 12711     137D  2B7F               	goto	u3500
 12712     137E                     u3501:
 12713     137E  2B5A               	goto	l643
 12714     137F                     u3500:
 12715     137F                     l3791:
 12716     137F  3001               	movlw	1
 12717     1380  0140               	movlb	0	; select bank0
 12718     1381  07A8               	addwf	crc16_modbus@i,f
 12719     1382  3000               	movlw	0
 12720     1383  3DA9               	addwfc	crc16_modbus@i+1,f
 12721     1384                     l641:
 12722     1384  0829               	movf	crc16_modbus@i+1,w
 12723     1385  3A80               	xorlw	128
 12724     1386  00A2               	movwf	??_crc16_modbus
 12725     1387  3080               	movlw	128
 12726     1388  0222               	subwf	??_crc16_modbus,w
 12727     1389  1D03               	skipz
 12728     138A  2B8D               	goto	u3515
 12729     138B  0820               	movf	crc16_modbus@len,w
 12730     138C  0228               	subwf	crc16_modbus@i,w
 12731     138D                     u3515:
 12732     138D  1C03               	skipc
 12733     138E  2B90               	goto	u3511
 12734     138F  2B91               	goto	u3510
 12735     1390                     u3511:
 12736     1390  2B4A               	goto	l3773
 12737     1391                     u3510:
 12738     1391                     l3793:
 12739                           
 12740                           ;calibration.c: 39: };calibration.c: 40: };calibration.c: 41: };calibration.c: 43: retur
      +                          n crc;
 12741     1391  0140               	movlb	0	; select bank0
 12742     1392  082D               	movf	crc16_modbus@crc+1,w
 12743     1393  00A1               	movwf	?_crc16_modbus+1
 12744     1394  082C               	movf	crc16_modbus@crc,w
 12745     1395  00A0               	movwf	?_crc16_modbus
 12746     1396                     l648:
 12747     1396  0008               	return
 12748     1397                     __end_of_crc16_modbus:
 12749                           
 12750                           	psect	text20
 12751     15D7                     __ptext20:	
 12752 ;; *************** function _monitoring_sync *****************
 12753 ;; Defined at:
 12754 ;;		line 14 in file "monitor_sync.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;  state           2   50[BANK0 ] PTR enum E10399
 12757 ;;		 -> RAM(8192), main@state(1), 
 12758 ;;  b1              1   52[BANK0 ] PTR struct mybutton
 12759 ;;		 -> main@b1(27), 
 12760 ;;  b2              1   53[BANK0 ] PTR struct mybutton
 12761 ;;		 -> main@b2(27), 
 12762 ;;  b1_clicked_c    1   54[BANK0 ] PTR unsigned char 
 12763 ;;		 -> main@b1_clicked_count(1), 
 12764 ;;  b2_clicked_c    1   55[BANK0 ] PTR unsigned char 
 12765 ;;		 -> main@b2_clicked_count(1), 
 12766 ;; Auto vars:     Size  Location     Type
 12767 ;;		None
 12768 ;; Return value:  Size  Location     Type
 12769 ;;                  1    wreg      void 
 12770 ;; Registers used:
 12771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12772 ;; Tracked objects:
 12773 ;;		On entry : 0/0
 12774 ;;		On exit  : 0/0
 12775 ;;		Unchanged: 0/0
 12776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12777 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12780 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12781 ;;Total ram usage:        6 bytes
 12782 ;; Hardware stack levels used: 1
 12783 ;; Hardware stack levels required when called: 4
 12784 ;; This function calls:
 12785 ;;		_LED_flashes_three_times
 12786 ;;		_is_long_press
 12787 ;;		_is_single_click
 12788 ;;		_printf
 12789 ;;		_reset_long_press_flag
 12790 ;;		_reset_single_click_flag
 12791 ;; This function is called by:
 12792 ;;		_main
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796     15D7                     _monitoring_sync:	
 12797                           ;psect for function _monitoring_sync
 12798                           
 12799     15D7                     l4469:	
 12800                           ;incstack = 0
 12801                           ; Regs used in _monitoring_sync: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12802                           
 12803                           
 12804                           ;monitor_sync.c: 17: if( is_single_click(b1)){
 12805     15D7  0140               	movlb	0	; select bank0
 12806     15D8  0854               	movf	monitoring_sync@b1,w
 12807     15D9  319C  247A  3195   	fcall	_is_single_click
 12808     15DC  3A00               	xorlw	0
 12809     15DD  1903               	skipnz
 12810     15DE  2DE0               	goto	u4681
 12811     15DF  2DE1               	goto	u4680
 12812     15E0                     u4681:
 12813     15E0  2DFB               	goto	l4479
 12814     15E1                     u4680:
 12815     15E1                     l4471:
 12816                           
 12817                           ;monitor_sync.c: 18: printf("b1 clicked\r\n");
 12818     15E1  3003               	movlw	low (STR_22| (0+32768))
 12819     15E2  0140               	movlb	0	; select bank0
 12820     15E3  00AE               	movwf	printf@f
 12821     15E4  309A               	movlw	high (STR_22| (0+32768))
 12822     15E5  00AF               	movwf	printf@f+1
 12823     15E6  3180  20C1  3195   	fcall	_printf
 12824     15E9                     l4473:
 12825                           
 12826                           ;monitor_sync.c: 19: *b1_clicked_count = (*b1_clicked_count) + 1;
 12827     15E9  0140               	movlb	0	; select bank0
 12828     15EA  0856               	movf	monitoring_sync@b1_clicked_count,w
 12829     15EB  0086               	movwf	6
 12830     15EC  0187               	clrf	7
 12831     15ED  0856               	movf	monitoring_sync@b1_clicked_count,w
 12832     15EE  0084               	movwf	4
 12833     15EF  0185               	clrf	5
 12834     15F0  0800               	movf	0,w
 12835     15F1  3E01               	addlw	1
 12836     15F2  0081               	movwf	1
 12837     15F3                     l4475:
 12838                           
 12839                           ;monitor_sync.c: 20: LED_flashes_three_times();
 12840     15F3  319E  26FD  3195   	fcall	_LED_flashes_three_times
 12841     15F6                     l4477:
 12842                           
 12843                           ;monitor_sync.c: 21: reset_single_click_flag(b1);
 12844     15F6  0140               	movlb	0	; select bank0
 12845     15F7  0854               	movf	monitoring_sync@b1,w
 12846     15F8  319C  248A  3195   	fcall	_reset_single_click_flag
 12847     15FB                     l4479:
 12848                           
 12849                           ;monitor_sync.c: 23: };;monitor_sync.c: 25: if( is_single_click(b2)){
 12850     15FB  0140               	movlb	0	; select bank0
 12851     15FC  0855               	movf	monitoring_sync@b2,w
 12852     15FD  319C  247A  3195   	fcall	_is_single_click
 12853     1600  3A00               	xorlw	0
 12854     1601  1903               	skipnz
 12855     1602  2E04               	goto	u4691
 12856     1603  2E05               	goto	u4690
 12857     1604                     u4691:
 12858     1604  2E1F               	goto	l4489
 12859     1605                     u4690:
 12860     1605                     l4481:
 12861                           
 12862                           ;monitor_sync.c: 26: printf("b2 clicked\r\n");
 12863     1605  3010               	movlw	low (STR_23| (0+32768))
 12864     1606  0140               	movlb	0	; select bank0
 12865     1607  00AE               	movwf	printf@f
 12866     1608  309A               	movlw	high (STR_23| (0+32768))
 12867     1609  00AF               	movwf	printf@f+1
 12868     160A  3180  20C1  3195   	fcall	_printf
 12869     160D                     l4483:
 12870                           
 12871                           ;monitor_sync.c: 27: *b2_clicked_count = (*b2_clicked_count) + 1;
 12872     160D  0140               	movlb	0	; select bank0
 12873     160E  0857               	movf	monitoring_sync@b2_clicked_count,w
 12874     160F  0086               	movwf	6
 12875     1610  0187               	clrf	7
 12876     1611  0857               	movf	monitoring_sync@b2_clicked_count,w
 12877     1612  0084               	movwf	4
 12878     1613  0185               	clrf	5
 12879     1614  0800               	movf	0,w
 12880     1615  3E01               	addlw	1
 12881     1616  0081               	movwf	1
 12882     1617                     l4485:
 12883                           
 12884                           ;monitor_sync.c: 28: LED_flashes_three_times();
 12885     1617  319E  26FD  3195   	fcall	_LED_flashes_three_times
 12886     161A                     l4487:
 12887                           
 12888                           ;monitor_sync.c: 29: reset_single_click_flag(b2);
 12889     161A  0140               	movlb	0	; select bank0
 12890     161B  0855               	movf	monitoring_sync@b2,w
 12891     161C  319C  248A  3195   	fcall	_reset_single_click_flag
 12892     161F                     l4489:
 12893                           
 12894                           ;monitor_sync.c: 31: };;monitor_sync.c: 33: if( is_long_press(b1)){
 12895     161F  0140               	movlb	0	; select bank0
 12896     1620  0854               	movf	monitoring_sync@b1,w
 12897     1621  319C  2472  3195   	fcall	_is_long_press
 12898     1624  3A00               	xorlw	0
 12899     1625  1903               	skipnz
 12900     1626  2E28               	goto	u4701
 12901     1627  2E29               	goto	u4700
 12902     1628                     u4701:
 12903     1628  2E54               	goto	l4507
 12904     1629                     u4700:
 12905     1629                     l4491:
 12906                           
 12907                           ;monitor_sync.c: 34: printf("b1 long press \r\n");
 12908     1629  30E1               	movlw	low (STR_24| (0+32768))
 12909     162A  0140               	movlb	0	; select bank0
 12910     162B  00AE               	movwf	printf@f
 12911     162C  3099               	movlw	high (STR_24| (0+32768))
 12912     162D  00AF               	movwf	printf@f+1
 12913     162E  3180  20C1  3195   	fcall	_printf
 12914     1631                     l4493:
 12915                           
 12916                           ;monitor_sync.c: 35: *b1_clicked_count = (*b1_clicked_count) + 1;
 12917     1631  0140               	movlb	0	; select bank0
 12918     1632  0856               	movf	monitoring_sync@b1_clicked_count,w
 12919     1633  0086               	movwf	6
 12920     1634  0187               	clrf	7
 12921     1635  0856               	movf	monitoring_sync@b1_clicked_count,w
 12922     1636  0084               	movwf	4
 12923     1637  0185               	clrf	5
 12924     1638  0800               	movf	0,w
 12925     1639  3E01               	addlw	1
 12926     163A  0081               	movwf	1
 12927     163B                     l4495:
 12928                           
 12929                           ;monitor_sync.c: 37: LED_flashes_three_times();
 12930     163B  319E  26FD  3195   	fcall	_LED_flashes_three_times
 12931     163E                     l4497:
 12932                           
 12933                           ;monitor_sync.c: 38: LED_flashes_three_times();
 12934     163E  319E  26FD  3195   	fcall	_LED_flashes_three_times
 12935     1641                     l4499:
 12936                           
 12937                           ;monitor_sync.c: 39: LED_flashes_three_times();
 12938     1641  319E  26FD  3195   	fcall	_LED_flashes_three_times
 12939     1644                     l4501:
 12940                           
 12941                           ;monitor_sync.c: 40: reset_long_press_flag(b1);
 12942     1644  0140               	movlb	0	; select bank0
 12943     1645  0854               	movf	monitoring_sync@b1,w
 12944     1646  319C  2482  3195   	fcall	_reset_long_press_flag
 12945     1649                     l4503:
 12946                           
 12947                           ;monitor_sync.c: 41: *state = STATE_CALIBRATE;
 12948     1649  0140               	movlb	0	; select bank0
 12949     164A  0852               	movf	monitoring_sync@state,w
 12950     164B  0086               	movwf	6
 12951     164C  0853               	movf	monitoring_sync@state+1,w
 12952     164D  0087               	movwf	7
 12953     164E  3004               	movlw	4
 12954     164F  0081               	movwf	1
 12955     1650                     l4505:
 12956                           
 12957                           ;monitor_sync.c: 42: *b1_clicked_count = 0;
 12958     1650  0856               	movf	monitoring_sync@b1_clicked_count,w
 12959     1651  0086               	movwf	6
 12960     1652  0187               	clrf	7
 12961     1653  0181               	clrf	1
 12962     1654                     l4507:
 12963                           
 12964                           ;monitor_sync.c: 43: };;monitor_sync.c: 44: if( is_long_press(b2)){
 12965     1654  0140               	movlb	0	; select bank0
 12966     1655  0855               	movf	monitoring_sync@b2,w
 12967     1656  319C  2472  3195   	fcall	_is_long_press
 12968     1659  3A00               	xorlw	0
 12969     165A  1903               	skipnz
 12970     165B  2E5D               	goto	u4711
 12971     165C  2E5E               	goto	u4710
 12972     165D                     u4711:
 12973     165D  2E76               	goto	l549
 12974     165E                     u4710:
 12975     165E                     l4509:
 12976                           
 12977                           ;monitor_sync.c: 45: printf("b2 long press \r\n");
 12978     165E  30F2               	movlw	low (STR_25| (0+32768))
 12979     165F  0140               	movlb	0	; select bank0
 12980     1660  00AE               	movwf	printf@f
 12981     1661  3099               	movlw	high (STR_25| (0+32768))
 12982     1662  00AF               	movwf	printf@f+1
 12983     1663  3180  20C1  3195   	fcall	_printf
 12984     1666                     l4511:
 12985                           
 12986                           ;monitor_sync.c: 46: LED_flashes_three_times();
 12987     1666  319E  26FD  3195   	fcall	_LED_flashes_three_times
 12988     1669                     l4513:
 12989                           
 12990                           ;monitor_sync.c: 47: LED_flashes_three_times();
 12991     1669  319E  26FD  3195   	fcall	_LED_flashes_three_times
 12992     166C                     l4515:
 12993                           
 12994                           ;monitor_sync.c: 48: reset_long_press_flag(b2);
 12995     166C  0140               	movlb	0	; select bank0
 12996     166D  0855               	movf	monitoring_sync@b2,w
 12997     166E  319C  2482  3195   	fcall	_reset_long_press_flag
 12998     1671                     l4517:
 12999     1671                     l4519:
 13000                           
 13001                           ;monitor_sync.c: 50: *b1_clicked_count = 0;
 13002     1671  0140               	movlb	0	; select bank0
 13003     1672  0856               	movf	monitoring_sync@b1_clicked_count,w
 13004     1673  0086               	movwf	6
 13005     1674  0187               	clrf	7
 13006     1675  0181               	clrf	1
 13007     1676                     l549:
 13008     1676  0008               	return
 13009     1677                     __end_of_monitoring_sync:
 13010                           
 13011                           	psect	text21
 13012     1C8A                     __ptext21:	
 13013 ;; *************** function _reset_single_click_flag *****************
 13014 ;; Defined at:
 13015 ;;		line 141 in file "mybutton.c"
 13016 ;; Parameters:    Size  Location     Type
 13017 ;;  b               1    wreg     PTR struct mybutton
 13018 ;;		 -> main@b2(27), main@b1(27), 
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  b               1    0[BANK0 ] PTR struct mybutton
 13021 ;;		 -> main@b2(27), main@b1(27), 
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  1    wreg      void 
 13024 ;; Registers used:
 13025 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13026 ;; Tracked objects:
 13027 ;;		On entry : 0/0
 13028 ;;		On exit  : 0/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13035 ;;Total ram usage:        1 bytes
 13036 ;; Hardware stack levels used: 1
 13037 ;; Hardware stack levels required when called: 2
 13038 ;; This function calls:
 13039 ;;		Nothing
 13040 ;; This function is called by:
 13041 ;;		_monitoring_sync
 13042 ;; This function uses a non-reentrant model
 13043 ;;
 13044                           
 13045     1C8A                     _reset_single_click_flag:	
 13046                           ;psect for function _reset_single_click_flag
 13047                           
 13048                           
 13049                           ;incstack = 0
 13050                           ; Regs used in _reset_single_click_flag: [wreg+fsr1l+fsr1h+status,2+status,0]
 13051                           ;reset_single_click_flag@b stored from wreg
 13052     1C8A  0140               	movlb	0	; select bank0
 13053     1C8B  00A0               	movwf	reset_single_click_flag@b
 13054     1C8C                     l4071:
 13055                           
 13056                           ;mybutton.c: 142: b->single_clicked_flag = 0;
 13057     1C8C  0820               	movf	reset_single_click_flag@b,w
 13058     1C8D  3E18               	addlw	24
 13059     1C8E  0086               	movwf	6
 13060     1C8F  0187               	clrf	7
 13061     1C90  0181               	clrf	1
 13062     1C91                     l402:
 13063     1C91  0008               	return
 13064     1C92                     __end_of_reset_single_click_flag:
 13065                           
 13066                           	psect	text22
 13067     1C82                     __ptext22:	
 13068 ;; *************** function _reset_long_press_flag *****************
 13069 ;; Defined at:
 13070 ;;		line 149 in file "mybutton.c"
 13071 ;; Parameters:    Size  Location     Type
 13072 ;;  b               1    wreg     PTR struct mybutton
 13073 ;;		 -> main@b2(27), main@b1(27), 
 13074 ;; Auto vars:     Size  Location     Type
 13075 ;;  b               1    0[BANK0 ] PTR struct mybutton
 13076 ;;		 -> main@b2(27), main@b1(27), 
 13077 ;; Return value:  Size  Location     Type
 13078 ;;                  1    wreg      void 
 13079 ;; Registers used:
 13080 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13081 ;; Tracked objects:
 13082 ;;		On entry : 0/0
 13083 ;;		On exit  : 0/0
 13084 ;;		Unchanged: 0/0
 13085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;Total ram usage:        1 bytes
 13091 ;; Hardware stack levels used: 1
 13092 ;; Hardware stack levels required when called: 2
 13093 ;; This function calls:
 13094 ;;		Nothing
 13095 ;; This function is called by:
 13096 ;;		_monitoring_sync
 13097 ;; This function uses a non-reentrant model
 13098 ;;
 13099                           
 13100     1C82                     _reset_long_press_flag:	
 13101                           ;psect for function _reset_long_press_flag
 13102                           
 13103                           
 13104                           ;incstack = 0
 13105                           ; Regs used in _reset_long_press_flag: [wreg+fsr1l+fsr1h+status,2+status,0]
 13106                           ;reset_long_press_flag@b stored from wreg
 13107     1C82  0140               	movlb	0	; select bank0
 13108     1C83  00A0               	movwf	reset_long_press_flag@b
 13109     1C84                     l4073:
 13110                           
 13111                           ;mybutton.c: 150: b->long_press_flag = 0;
 13112     1C84  0820               	movf	reset_long_press_flag@b,w
 13113     1C85  3E1A               	addlw	26
 13114     1C86  0086               	movwf	6
 13115     1C87  0187               	clrf	7
 13116     1C88  0181               	clrf	1
 13117     1C89                     l408:
 13118     1C89  0008               	return
 13119     1C8A                     __end_of_reset_long_press_flag:
 13120                           
 13121                           	psect	text23
 13122     1C7A                     __ptext23:	
 13123 ;; *************** function _is_single_click *****************
 13124 ;; Defined at:
 13125 ;;		line 129 in file "mybutton.c"
 13126 ;; Parameters:    Size  Location     Type
 13127 ;;  b               1    wreg     PTR struct mybutton
 13128 ;;		 -> main@b2(27), main@b1(27), 
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;  b               1    0[BANK0 ] PTR struct mybutton
 13131 ;;		 -> main@b2(27), main@b1(27), 
 13132 ;; Return value:  Size  Location     Type
 13133 ;;                  1    wreg      unsigned char 
 13134 ;; Registers used:
 13135 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13136 ;; Tracked objects:
 13137 ;;		On entry : 0/0
 13138 ;;		On exit  : 0/0
 13139 ;;		Unchanged: 0/0
 13140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13142 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13144 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13145 ;;Total ram usage:        1 bytes
 13146 ;; Hardware stack levels used: 1
 13147 ;; Hardware stack levels required when called: 2
 13148 ;; This function calls:
 13149 ;;		Nothing
 13150 ;; This function is called by:
 13151 ;;		_monitoring_sync
 13152 ;; This function uses a non-reentrant model
 13153 ;;
 13154                           
 13155     1C7A                     _is_single_click:	
 13156                           ;psect for function _is_single_click
 13157                           
 13158                           
 13159                           ;incstack = 0
 13160                           ; Regs used in _is_single_click: [wreg+fsr1l+fsr1h+status,2+status,0]
 13161                           ;is_single_click@b stored from wreg
 13162     1C7A  0140               	movlb	0	; select bank0
 13163     1C7B  00A0               	movwf	is_single_click@b
 13164     1C7C                     l4063:
 13165                           
 13166                           ;mybutton.c: 130: return b->single_clicked_flag;
 13167     1C7C  0820               	movf	is_single_click@b,w
 13168     1C7D  3E18               	addlw	24
 13169     1C7E  0086               	movwf	6
 13170     1C7F  0187               	clrf	7
 13171     1C80  0801               	movf	1,w
 13172     1C81                     l393:
 13173     1C81  0008               	return
 13174     1C82                     __end_of_is_single_click:
 13175                           
 13176                           	psect	text24
 13177     1C72                     __ptext24:	
 13178 ;; *************** function _is_long_press *****************
 13179 ;; Defined at:
 13180 ;;		line 137 in file "mybutton.c"
 13181 ;; Parameters:    Size  Location     Type
 13182 ;;  b               1    wreg     PTR struct mybutton
 13183 ;;		 -> main@b2(27), main@b1(27), 
 13184 ;; Auto vars:     Size  Location     Type
 13185 ;;  b               1    0[BANK0 ] PTR struct mybutton
 13186 ;;		 -> main@b2(27), main@b1(27), 
 13187 ;; Return value:  Size  Location     Type
 13188 ;;                  1    wreg      unsigned char 
 13189 ;; Registers used:
 13190 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13191 ;; Tracked objects:
 13192 ;;		On entry : 0/0
 13193 ;;		On exit  : 0/0
 13194 ;;		Unchanged: 0/0
 13195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13197 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13199 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;Total ram usage:        1 bytes
 13201 ;; Hardware stack levels used: 1
 13202 ;; Hardware stack levels required when called: 2
 13203 ;; This function calls:
 13204 ;;		Nothing
 13205 ;; This function is called by:
 13206 ;;		_monitoring_sync
 13207 ;; This function uses a non-reentrant model
 13208 ;;
 13209                           
 13210     1C72                     _is_long_press:	
 13211                           ;psect for function _is_long_press
 13212                           
 13213                           
 13214                           ;incstack = 0
 13215                           ; Regs used in _is_long_press: [wreg+fsr1l+fsr1h+status,2+status,0]
 13216                           ;is_long_press@b stored from wreg
 13217     1C72  0140               	movlb	0	; select bank0
 13218     1C73  00A0               	movwf	is_long_press@b
 13219     1C74                     l4067:
 13220                           
 13221                           ;mybutton.c: 138: return b->long_press_flag;
 13222     1C74  0820               	movf	is_long_press@b,w
 13223     1C75  3E1A               	addlw	26
 13224     1C76  0086               	movwf	6
 13225     1C77  0187               	clrf	7
 13226     1C78  0801               	movf	1,w
 13227     1C79                     l399:
 13228     1C79  0008               	return
 13229     1C7A                     __end_of_is_long_press:
 13230                           
 13231                           	psect	text25
 13232     1EFD                     __ptext25:	
 13233 ;; *************** function _LED_flashes_three_times *****************
 13234 ;; Defined at:
 13235 ;;		line 9 in file "led.c"
 13236 ;; Parameters:    Size  Location     Type
 13237 ;;		None
 13238 ;; Auto vars:     Size  Location     Type
 13239 ;;  i               2    1[BANK0 ] int 
 13240 ;; Return value:  Size  Location     Type
 13241 ;;                  1    wreg      void 
 13242 ;; Registers used:
 13243 ;;		wreg, status,2
 13244 ;; Tracked objects:
 13245 ;;		On entry : 0/0
 13246 ;;		On exit  : 0/0
 13247 ;;		Unchanged: 0/0
 13248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13250 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13251 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13252 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13253 ;;Total ram usage:        3 bytes
 13254 ;; Hardware stack levels used: 1
 13255 ;; Hardware stack levels required when called: 2
 13256 ;; This function calls:
 13257 ;;		Nothing
 13258 ;; This function is called by:
 13259 ;;		_monitoring_sync
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263     1EFD                     _LED_flashes_three_times:	
 13264                           ;psect for function _LED_flashes_three_times
 13265                           
 13266     1EFD                     l3969:	
 13267                           ;incstack = 0
 13268                           ; Regs used in _LED_flashes_three_times: [wreg+status,2]
 13269                           
 13270                           
 13271                           ;led.c: 10: for (int i = 0; i < 3; i++) {
 13272     1EFD  0140               	movlb	0	; select bank0
 13273     1EFE  01A1               	clrf	LED_flashes_three_times@i
 13274     1EFF  01A2               	clrf	LED_flashes_three_times@i+1
 13275     1F00                     l342:	
 13276                           ;led.c: 12: do { LATCbits.LATC2 = 0; } while(0);
 13277                           
 13278     1F00  0140               	movlb	0	; select bank0
 13279     1F01  111A               	bcf	26,2	;volatile
 13280     1F02                     l3975:
 13281                           
 13282                           ;led.c: 13: _delay((unsigned long)((50)*(1000000/4000.0)));
 13283     1F02  3011               	movlw	17
 13284     1F03  0140               	movlb	0	; select bank0
 13285     1F04  00A0               	movwf	??_LED_flashes_three_times
 13286     1F05  303A               	movlw	58
 13287     1F06                     u5247:
 13288     1F06  0B89               	decfsz	9,f
 13289     1F07  2F06               	goto	u5247
 13290     1F08  0BA0               	decfsz	??_LED_flashes_three_times,f
 13291     1F09  2F06               	goto	u5247
 13292     1F0A  0000               	nop
 13293     1F0B                     l3977:
 13294     1F0B  0140               	movlb	0	; select bank0
 13295     1F0C  151A               	bsf	26,2	;volatile
 13296     1F0D                     l345:
 13297                           
 13298                           ;led.c: 16: _delay((unsigned long)((50)*(1000000/4000.0)));
 13299     1F0D  3011               	movlw	17
 13300     1F0E  0140               	movlb	0	; select bank0
 13301     1F0F  00A0               	movwf	??_LED_flashes_three_times
 13302     1F10  303A               	movlw	58
 13303     1F11                     u5257:
 13304     1F11  0B89               	decfsz	9,f
 13305     1F12  2F11               	goto	u5257
 13306     1F13  0BA0               	decfsz	??_LED_flashes_three_times,f
 13307     1F14  2F11               	goto	u5257
 13308     1F15  0000               	nop
 13309     1F16  3001               	movlw	1
 13310     1F17  0140               	movlb	0	; select bank0
 13311     1F18  07A1               	addwf	LED_flashes_three_times@i,f
 13312     1F19  3000               	movlw	0
 13313     1F1A  3DA2               	addwfc	LED_flashes_three_times@i+1,f
 13314     1F1B  0822               	movf	LED_flashes_three_times@i+1,w
 13315     1F1C  3A80               	xorlw	128
 13316     1F1D  00A0               	movwf	??_LED_flashes_three_times
 13317     1F1E  3080               	movlw	128
 13318     1F1F  0220               	subwf	??_LED_flashes_three_times,w
 13319     1F20  1D03               	skipz
 13320     1F21  2F24               	goto	u3735
 13321     1F22  3003               	movlw	3
 13322     1F23  0221               	subwf	LED_flashes_three_times@i,w
 13323     1F24                     u3735:
 13324     1F24  1C03               	skipc
 13325     1F25  2F27               	goto	u3731
 13326     1F26  2F28               	goto	u3730
 13327     1F27                     u3731:
 13328     1F27  2F00               	goto	l342
 13329     1F28                     u3730:
 13330     1F28                     l346:
 13331     1F28  0008               	return
 13332     1F29                     __end_of_LED_flashes_three_times:
 13333                           
 13334                           	psect	text26
 13335     1E50                     __ptext26:	
 13336 ;; *************** function _measurement *****************
 13337 ;; Defined at:
 13338 ;;		line 14 in file "measurement.c"
 13339 ;; Parameters:    Size  Location     Type
 13340 ;;  state           1    wreg     PTR enum E10355
 13341 ;;		 -> main@state(1), 
 13342 ;;  value           1   50[BANK0 ] PTR struct values
 13343 ;;		 -> main@sensor_value(17), 
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;  state           1   52[BANK0 ] PTR enum E10355
 13346 ;;		 -> main@state(1), 
 13347 ;; Return value:  Size  Location     Type
 13348 ;;                  1    wreg      void 
 13349 ;; Registers used:
 13350 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13351 ;; Tracked objects:
 13352 ;;		On entry : 0/0
 13353 ;;		On exit  : 0/0
 13354 ;;		Unchanged: 0/0
 13355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13356 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13358 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13359 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;Total ram usage:        3 bytes
 13361 ;; Hardware stack levels used: 1
 13362 ;; Hardware stack levels required when called: 5
 13363 ;; This function calls:
 13364 ;;		_enable_tx_transmit
 13365 ;;		_enable_uart_printf
 13366 ;;		_printf
 13367 ;;		_send_measured_command
 13368 ;; This function is called by:
 13369 ;;		_main
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373     1E50                     _measurement:	
 13374                           ;psect for function _measurement
 13375                           
 13376     1E50                     l591:	
 13377                           ;incstack = 0
 13378                           ; Regs used in _measurement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13379                           ;measurement.c: 15: do { LATCbits.LATC2 = 0; } while(0);
 13380                           
 13381     1E50  0140               	movlb	0	; select bank0
 13382     1E51  111A               	bcf	26,2	;volatile
 13383     1E52                     l4521:
 13384                           
 13385                           ;measurement.c: 17: enable_uart_printf();
 13386     1E52  319C  2467  319E   	fcall	_enable_uart_printf
 13387     1E55                     l4523:
 13388                           
 13389                           ;measurement.c: 18: printf("[Request] data from ph485 probe - MEASUREMENT MODE ---  \r\n
      +                          ");
 13390     1E55  30B9               	movlw	low (STR_26| (0+32768))
 13391     1E56  0140               	movlb	0	; select bank0
 13392     1E57  00AE               	movwf	printf@f
 13393     1E58  3098               	movlw	high (STR_26| (0+32768))
 13394     1E59  00AF               	movwf	printf@f+1
 13395     1E5A  3180  20C1  319E   	fcall	_printf
 13396     1E5D                     l4525:
 13397                           
 13398                           ;measurement.c: 19: _delay((unsigned long)((10)*(1000000/4000.0)));
 13399     1E5D  3004               	movlw	4
 13400     1E5E  0140               	movlb	0	; select bank0
 13401     1E5F  00D3               	movwf	??_measurement
 13402     1E60  303D               	movlw	61
 13403     1E61                     u5267:
 13404     1E61  0B89               	decfsz	9,f
 13405     1E62  2E61               	goto	u5267
 13406     1E63  0BD3               	decfsz	??_measurement,f
 13407     1E64  2E61               	goto	u5267
 13408     1E65  3200               	nop2
 13409     1E66                     l4527:
 13410                           
 13411                           ;measurement.c: 20: enable_tx_transmit();
 13412     1E66  319C  24FC  319E   	fcall	_enable_tx_transmit
 13413     1E69                     l4529:
 13414                           
 13415                           ;measurement.c: 23: send_measured_command();
 13416     1E69  319D  25B1  319E   	fcall	_send_measured_command
 13417     1E6C                     l4531:
 13418     1E6C  0140               	movlb	0	; select bank0
 13419     1E6D  151A               	bsf	26,2	;volatile
 13420     1E6E                     l595:
 13421     1E6E  0008               	return
 13422     1E6F                     __end_of_measurement:
 13423                           
 13424                           	psect	text27
 13425     1DB1                     __ptext27:	
 13426 ;; *************** function _send_measured_command *****************
 13427 ;; Defined at:
 13428 ;;		line 28 in file "measurement.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;		None
 13431 ;; Auto vars:     Size  Location     Type
 13432 ;;  txbuf          32    6[BANK0 ] unsigned char [32]
 13433 ;; Return value:  Size  Location     Type
 13434 ;;                  1    wreg      void 
 13435 ;; Registers used:
 13436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13437 ;; Tracked objects:
 13438 ;;		On entry : 0/0
 13439 ;;		On exit  : 0/0
 13440 ;;		Unchanged: 0/0
 13441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13443 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13444 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;Total ram usage:       33 bytes
 13447 ;; Hardware stack levels used: 1
 13448 ;; Hardware stack levels required when called: 4
 13449 ;; This function calls:
 13450 ;;		_EUSART1_Write_1
 13451 ;; This function is called by:
 13452 ;;		_measurement
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456     1DB1                     _send_measured_command:	
 13457                           ;psect for function _send_measured_command
 13458                           
 13459     1DB1                     l4159:	
 13460                           ;incstack = 0
 13461                           ; Regs used in _send_measured_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13462                           
 13463                           
 13464                           ;measurement.c: 29: char txbuf[32] = {0x01, 0x03, 0x00, 0x01, 0x00, 0x04, 0x15, 0xC9};
 13465     1DB1  3040               	movlw	low send_measured_command@F10568
 13466     1DB2  0086               	movwf	6
 13467     1DB3  3002               	movlw	high send_measured_command@F10568
 13468     1DB4  0087               	movwf	7
 13469     1DB5  3026               	movlw	low send_measured_command@txbuf
 13470     1DB6  0084               	movwf	4
 13471     1DB7  3000               	movlw	high send_measured_command@txbuf
 13472     1DB8  0085               	movwf	5
 13473     1DB9  3020               	movlw	32
 13474     1DBA  0140               	movlb	0	; select bank0
 13475     1DBB  00A5               	movwf	??_send_measured_command
 13476     1DBC                     u4220:
 13477     1DBC  0016               	moviw fsr1++
 13478     1DBD  001A               	movwi fsr0++
 13479     1DBE  0BA5               	decfsz	??_send_measured_command,f
 13480     1DBF  2DBC               	goto	u4220
 13481     1DC0                     l4161:
 13482                           
 13483                           ;measurement.c: 30: EUSART1_Write_1(txbuf, 8);
 13484     1DC0  3008               	movlw	8
 13485     1DC1  00A1               	movwf	EUSART1_Write_1@length
 13486     1DC2  3026               	movlw	(low (send_measured_command@txbuf| 0))& (0+255)
 13487     1DC3  319D  25E0  319D   	fcall	_EUSART1_Write_1
 13488     1DC6                     l600:
 13489     1DC6  0008               	return
 13490     1DC7                     __end_of_send_measured_command:
 13491                           
 13492                           	psect	text28
 13493     1F29                     __ptext28:	
 13494 ;; *************** function _measured_adc *****************
 13495 ;; Defined at:
 13496 ;;		line 63 in file "calibration.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;		None
 13499 ;; Auto vars:     Size  Location     Type
 13500 ;;  measured_adc    8   51[BANK0 ] unsigned char [8]
 13501 ;; Return value:  Size  Location     Type
 13502 ;;                  1    wreg      void 
 13503 ;; Registers used:
 13504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13505 ;; Tracked objects:
 13506 ;;		On entry : 0/0
 13507 ;;		On exit  : 0/0
 13508 ;;		Unchanged: 0/0
 13509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13511 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13512 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13513 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;Total ram usage:        9 bytes
 13515 ;; Hardware stack levels used: 1
 13516 ;; Hardware stack levels required when called: 4
 13517 ;; This function calls:
 13518 ;;		_EUSART1_Write_1
 13519 ;;		_enable_tx_transmit
 13520 ;;		_enable_uart_printf
 13521 ;;		_printf
 13522 ;; This function is called by:
 13523 ;;		_main
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527     1F29                     _measured_adc:	
 13528                           ;psect for function _measured_adc
 13529                           
 13530     1F29                     l664:	
 13531                           ;incstack = 0
 13532                           ; Regs used in _measured_adc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13533                           ;calibration.c: 64: do { LATCbits.LATC2 = 0; } while(0);
 13534                           
 13535     1F29  0140               	movlb	0	; select bank0
 13536     1F2A  111A               	bcf	26,2	;volatile
 13537     1F2B                     l4533:
 13538                           
 13539                           ;calibration.c: 66: enable_uart_printf();
 13540     1F2B  319C  2467  319F   	fcall	_enable_uart_printf
 13541     1F2E                     l4535:
 13542                           
 13543                           ;calibration.c: 67: printf("[Request] ADC_value from ph485 probe - CALIBRATION MODE --- 
      +                           \r\n");
 13544     1F2E  3079               	movlw	low (STR_29| (0+32768))
 13545     1F2F  0140               	movlb	0	; select bank0
 13546     1F30  00AE               	movwf	printf@f
 13547     1F31  3098               	movlw	high (STR_29| (0+32768))
 13548     1F32  00AF               	movwf	printf@f+1
 13549     1F33  3180  20C1  319F   	fcall	_printf
 13550     1F36                     l4537:
 13551                           
 13552                           ;calibration.c: 68: _delay((unsigned long)((10)*(1000000/4000.0)));
 13553     1F36  3004               	movlw	4
 13554     1F37  0140               	movlb	0	; select bank0
 13555     1F38  00D2               	movwf	??_measured_adc
 13556     1F39  303D               	movlw	61
 13557     1F3A                     u5277:
 13558     1F3A  0B89               	decfsz	9,f
 13559     1F3B  2F3A               	goto	u5277
 13560     1F3C  0BD2               	decfsz	??_measured_adc,f
 13561     1F3D  2F3A               	goto	u5277
 13562     1F3E  3200               	nop2
 13563     1F3F                     l4539:
 13564                           
 13565                           ;calibration.c: 69: enable_tx_transmit();
 13566     1F3F  319C  24FC  319F   	fcall	_enable_tx_transmit
 13567     1F42                     l4541:
 13568                           
 13569                           ;calibration.c: 72: char measured_adc_command[8] = {0x01, 0x03, 0x00, 0x66, 0x00, 0x01, 
      +                          0x64, 0x15};
 13570     1F42  3065               	movlw	low measured_adc@F10601
 13571     1F43  0086               	movwf	6
 13572     1F44  3001               	movlw	high measured_adc@F10601
 13573     1F45  0087               	movwf	7
 13574     1F46  3053               	movlw	low measured_adc@measured_adc_command
 13575     1F47  0084               	movwf	4
 13576     1F48  3000               	movlw	high measured_adc@measured_adc_command
 13577     1F49  0085               	movwf	5
 13578     1F4A  3008               	movlw	8
 13579     1F4B  0140               	movlb	0	; select bank0
 13580     1F4C  00D2               	movwf	??_measured_adc
 13581     1F4D                     u4720:
 13582     1F4D  0016               	moviw fsr1++
 13583     1F4E  001A               	movwi fsr0++
 13584     1F4F  0BD2               	decfsz	??_measured_adc,f
 13585     1F50  2F4D               	goto	u4720
 13586     1F51                     l4543:
 13587                           
 13588                           ;calibration.c: 73: EUSART1_Write_1(measured_adc_command, 8);
 13589     1F51  3008               	movlw	8
 13590     1F52  00A1               	movwf	EUSART1_Write_1@length
 13591     1F53  3053               	movlw	(low (measured_adc@measured_adc_command| 0))& (0+255)
 13592     1F54  319D  25E0  319F   	fcall	_EUSART1_Write_1
 13593     1F57                     l4545:
 13594     1F57  0140               	movlb	0	; select bank0
 13595     1F58  151A               	bsf	26,2	;volatile
 13596     1F59                     l670:
 13597     1F59  0008               	return
 13598     1F5A                     __end_of_measured_adc:
 13599                           
 13600                           	psect	text29
 13601     1C67                     __ptext29:	
 13602 ;; *************** function _enable_uart_printf *****************
 13603 ;; Defined at:
 13604 ;;		line 119 in file "uart.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;		None
 13607 ;; Auto vars:     Size  Location     Type
 13608 ;;		None
 13609 ;; Return value:  Size  Location     Type
 13610 ;;                  1    wreg      void 
 13611 ;; Registers used:
 13612 ;;		wreg, status,2
 13613 ;; Tracked objects:
 13614 ;;		On entry : 0/0
 13615 ;;		On exit  : 0/0
 13616 ;;		Unchanged: 0/0
 13617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13622 ;;Total ram usage:        0 bytes
 13623 ;; Hardware stack levels used: 1
 13624 ;; Hardware stack levels required when called: 2
 13625 ;; This function calls:
 13626 ;;		Nothing
 13627 ;; This function is called by:
 13628 ;;		_main
 13629 ;;		_measurement
 13630 ;;		_measured_adc
 13631 ;;		_save_top_adc_point
 13632 ;;		_save_bottom_adc_point
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636     1C67                     _enable_uart_printf:	
 13637                           ;psect for function _enable_uart_printf
 13638                           
 13639     1C67                     l3905:	
 13640                           ;incstack = 0
 13641                           ; Regs used in _enable_uart_printf: [wreg+status,2]
 13642                           
 13643                           
 13644                           ;uart.c: 120: (RC3PPS = 0x00);
 13645     1C67  017E               	movlb	62	; select bank62
 13646     1C68  01A3               	clrf	35	;volatile
 13647     1C69                     l3907:
 13648                           
 13649                           ;uart.c: 121: (RA5PPS = 0x0F);
 13650     1C69  300F               	movlw	15
 13651     1C6A  0095               	movwf	21	;volatile
 13652     1C6B                     l512:
 13653     1C6B  0008               	return
 13654     1C6C                     __end_of_enable_uart_printf:
 13655                           
 13656                           	psect	text30
 13657     1CFC                     __ptext30:	
 13658 ;; *************** function _enable_tx_transmit *****************
 13659 ;; Defined at:
 13660 ;;		line 123 in file "uart.c"
 13661 ;; Parameters:    Size  Location     Type
 13662 ;;		None
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;		None
 13665 ;; Return value:  Size  Location     Type
 13666 ;;                  1    wreg      void 
 13667 ;; Registers used:
 13668 ;;		wreg, status,2
 13669 ;; Tracked objects:
 13670 ;;		On entry : 0/0
 13671 ;;		On exit  : 0/0
 13672 ;;		Unchanged: 0/0
 13673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13677 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;Total ram usage:        1 bytes
 13679 ;; Hardware stack levels used: 1
 13680 ;; Hardware stack levels required when called: 2
 13681 ;; This function calls:
 13682 ;;		Nothing
 13683 ;; This function is called by:
 13684 ;;		_main
 13685 ;;		_measurement
 13686 ;;		_measured_adc
 13687 ;;		_save_top_adc_point
 13688 ;;		_save_bottom_adc_point
 13689 ;; This function uses a non-reentrant model
 13690 ;;
 13691                           
 13692     1CFC                     _enable_tx_transmit:	
 13693                           ;psect for function _enable_tx_transmit
 13694                           
 13695     1CFC                     l3909:	
 13696                           ;incstack = 0
 13697                           ; Regs used in _enable_tx_transmit: [wreg+status,2]
 13698                           
 13699                           
 13700                           ;uart.c: 124: _delay((unsigned long)((10)*(1000000/4000.0)));
 13701     1CFC  3004               	movlw	4
 13702     1CFD  0140               	movlb	0	; select bank0
 13703     1CFE  00A0               	movwf	??_enable_tx_transmit
 13704     1CFF  303D               	movlw	61
 13705     1D00                     u5287:
 13706     1D00  0B89               	decfsz	9,f
 13707     1D01  2D00               	goto	u5287
 13708     1D02  0BA0               	decfsz	??_enable_tx_transmit,f
 13709     1D03  2D00               	goto	u5287
 13710     1D04  3200               	nop2
 13711                           
 13712                           ;uart.c: 125: (RC3PPS = 0x0F);
 13713     1D05  300F               	movlw	15
 13714     1D06  017E               	movlb	62	; select bank62
 13715     1D07  00A3               	movwf	35	;volatile
 13716     1D08                     l3911:
 13717                           
 13718                           ;uart.c: 126: (RA5PPS = 0x00);
 13719     1D08  0195               	clrf	21	;volatile
 13720     1D09                     l515:
 13721     1D09  0008               	return
 13722     1D0A                     __end_of_enable_tx_transmit:
 13723                           
 13724                           	psect	text31
 13725     1DE0                     __ptext31:	
 13726 ;; *************** function _EUSART1_Write_1 *****************
 13727 ;; Defined at:
 13728 ;;		line 48 in file "uart.c"
 13729 ;; Parameters:    Size  Location     Type
 13730 ;;  txbuf           1    wreg     PTR unsigned char 
 13731 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), measured_adc@measu
      +red_adc_command(8), set_bottom_calibrate_point@bottom_slop_point_command(32), 
 13732 ;;		 -> set_top_calibrate_point@top_zero_point_command(32), send_measured_command@txbuf(32), 
 13733 ;;  length          1    1[BANK0 ] unsigned char 
 13734 ;; Auto vars:     Size  Location     Type
 13735 ;;  txbuf           1    4[BANK0 ] PTR unsigned char 
 13736 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), measured_adc@measu
      +red_adc_command(8), set_bottom_calibrate_point@bottom_slop_point_command(32), 
 13737 ;;		 -> set_top_calibrate_point@top_zero_point_command(32), send_measured_command@txbuf(32), 
 13738 ;;  i               1    3[BANK0 ] unsigned char 
 13739 ;; Return value:  Size  Location     Type
 13740 ;;                  1    wreg      void 
 13741 ;; Registers used:
 13742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13743 ;; Tracked objects:
 13744 ;;		On entry : 0/0
 13745 ;;		On exit  : 0/0
 13746 ;;		Unchanged: 0/0
 13747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13748 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13749 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13751 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13752 ;;Total ram usage:        4 bytes
 13753 ;; Hardware stack levels used: 1
 13754 ;; Hardware stack levels required when called: 3
 13755 ;; This function calls:
 13756 ;;		_EUSART1_Write
 13757 ;; This function is called by:
 13758 ;;		_send_measured_command
 13759 ;;		_measured_adc
 13760 ;;		_save_top_adc_point
 13761 ;;		_save_bottom_adc_point
 13762 ;;		_set_top_calibrate_point
 13763 ;;		_set_bottom_calibrate_point
 13764 ;; This function uses a non-reentrant model
 13765 ;;
 13766                           
 13767     1DE0                     _EUSART1_Write_1:	
 13768                           ;psect for function _EUSART1_Write_1
 13769                           
 13770                           
 13771                           ;incstack = 0
 13772                           ; Regs used in _EUSART1_Write_1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13773                           ;EUSART1_Write_1@txbuf stored from wreg
 13774     1DE0  0140               	movlb	0	; select bank0
 13775     1DE1  00A4               	movwf	EUSART1_Write_1@txbuf
 13776     1DE2                     l3761:
 13777                           
 13778                           ;uart.c: 49: for(uint8_t i=0; i<length; i++){
 13779     1DE2  01A3               	clrf	EUSART1_Write_1@i
 13780     1DE3  2DF3               	goto	l3767
 13781     1DE4                     l3763:
 13782                           
 13783                           ;uart.c: 50: EUSART1_Write(txbuf[i]);
 13784     1DE4  0823               	movf	EUSART1_Write_1@i,w
 13785     1DE5  0724               	addwf	EUSART1_Write_1@txbuf,w
 13786     1DE6  00A2               	movwf	??_EUSART1_Write_1
 13787     1DE7  0822               	movf	??_EUSART1_Write_1,w
 13788     1DE8  0086               	movwf	6
 13789     1DE9  0187               	clrf	7
 13790     1DEA  0801               	movf	1,w
 13791     1DEB  319C  24E3  319D   	fcall	_EUSART1_Write
 13792     1DEE                     l3765:
 13793     1DEE  3001               	movlw	1
 13794     1DEF  0140               	movlb	0	; select bank0
 13795     1DF0  00A2               	movwf	??_EUSART1_Write_1
 13796     1DF1  0822               	movf	??_EUSART1_Write_1,w
 13797     1DF2  07A3               	addwf	EUSART1_Write_1@i,f
 13798     1DF3                     l3767:
 13799     1DF3  0821               	movf	EUSART1_Write_1@length,w
 13800     1DF4  0223               	subwf	EUSART1_Write_1@i,w
 13801     1DF5  1C03               	skipc
 13802     1DF6  2DF8               	goto	u3461
 13803     1DF7  2DF9               	goto	u3460
 13804     1DF8                     u3461:
 13805     1DF8  2DE4               	goto	l3763
 13806     1DF9                     u3460:
 13807     1DF9                     l486:
 13808     1DF9  0008               	return
 13809     1DFA                     __end_of_EUSART1_Write_1:
 13810                           
 13811                           	psect	text32
 13812     1CE3                     __ptext32:	
 13813 ;; *************** function _EUSART1_Write *****************
 13814 ;; Defined at:
 13815 ;;		line 35 in file "uart.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;  txData          1    wreg     unsigned char 
 13818 ;; Auto vars:     Size  Location     Type
 13819 ;;  txData          1    0[BANK0 ] unsigned char 
 13820 ;; Return value:  Size  Location     Type
 13821 ;;                  1    wreg      void 
 13822 ;; Registers used:
 13823 ;;		wreg
 13824 ;; Tracked objects:
 13825 ;;		On entry : 0/0
 13826 ;;		On exit  : 0/0
 13827 ;;		Unchanged: 0/0
 13828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13832 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13833 ;;Total ram usage:        1 bytes
 13834 ;; Hardware stack levels used: 1
 13835 ;; Hardware stack levels required when called: 2
 13836 ;; This function calls:
 13837 ;;		Nothing
 13838 ;; This function is called by:
 13839 ;;		_EUSART1_Write_1
 13840 ;; This function uses a non-reentrant model
 13841 ;;
 13842                           
 13843     1CE3                     _EUSART1_Write:	
 13844                           ;psect for function _EUSART1_Write
 13845                           
 13846                           
 13847                           ;incstack = 0
 13848                           ; Regs used in _EUSART1_Write: [wreg]
 13849                           ;EUSART1_Write@txData stored from wreg
 13850     1CE3  0140               	movlb	0	; select bank0
 13851     1CE4  00A0               	movwf	EUSART1_Write@txData
 13852     1CE5                     l3327:
 13853     1CE5                     l474:	
 13854                           ;uart.c: 37: while(0 == PIR3bits.TX1IF);
 13855                           
 13856     1CE5  014E               	movlb	14	; select bank14
 13857     1CE6  1E0F               	btfss	15,4	;volatile
 13858     1CE7  2CE9               	goto	u2561
 13859     1CE8  2CEA               	goto	u2560
 13860     1CE9                     u2561:
 13861     1CE9  2CE5               	goto	l474
 13862     1CEA                     u2560:
 13863     1CEA                     l3329:
 13864                           
 13865                           ;uart.c: 38: TX1REG = txData;
 13866     1CEA  0140               	movlb	0	; select bank0
 13867     1CEB  0820               	movf	EUSART1_Write@txData,w
 13868     1CEC  0142               	movlb	2	; select bank2
 13869     1CED  009A               	movwf	26	;volatile
 13870     1CEE                     l477:
 13871     1CEE  0008               	return
 13872     1CEF                     __end_of_EUSART1_Write:
 13873                           
 13874                           	psect	text33
 13875     1397                     __ptext33:	
 13876 ;; *************** function _init_button *****************
 13877 ;; Defined at:
 13878 ;;		line 12 in file "mybutton.c"
 13879 ;; Parameters:    Size  Location     Type
 13880 ;;  b               1    wreg     PTR struct mybutton
 13881 ;;		 -> main@b2(27), main@b1(27), 
 13882 ;; Auto vars:     Size  Location     Type
 13883 ;;  b               1    0[BANK0 ] PTR struct mybutton
 13884 ;;		 -> main@b2(27), main@b1(27), 
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  1    wreg      void 
 13887 ;; Registers used:
 13888 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13889 ;; Tracked objects:
 13890 ;;		On entry : 0/0
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;Total ram usage:        1 bytes
 13899 ;; Hardware stack levels used: 1
 13900 ;; Hardware stack levels required when called: 2
 13901 ;; This function calls:
 13902 ;;		Nothing
 13903 ;; This function is called by:
 13904 ;;		_main
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908     1397                     _init_button:	
 13909                           ;psect for function _init_button
 13910                           
 13911                           
 13912                           ;incstack = 0
 13913                           ; Regs used in _init_button: [wreg+fsr1l+fsr1h+status,2+status,0]
 13914                           ;init_button@b stored from wreg
 13915     1397  0140               	movlb	0	; select bank0
 13916     1398  00A0               	movwf	init_button@b
 13917     1399                     l4407:
 13918                           
 13919                           ;mybutton.c: 14: b->signals[0] = 1;
 13920     1399  0820               	movf	init_button@b,w
 13921     139A  0086               	movwf	6
 13922     139B  0187               	clrf	7
 13923     139C  0181               	clrf	1
 13924     139D  0A81               	incf	1,f
 13925                           
 13926                           ;mybutton.c: 15: b->signals[1] = 1;
 13927     139E  0A20               	incf	init_button@b,w
 13928     139F  0086               	movwf	6
 13929     13A0  0187               	clrf	7
 13930     13A1  0181               	clrf	1
 13931     13A2  0A81               	incf	1,f
 13932     13A3                     l4409:
 13933                           
 13934                           ;mybutton.c: 17: b->falling_ts[0] = 1;
 13935     13A3  0820               	movf	init_button@b,w
 13936     13A4  3E02               	addlw	2
 13937     13A5  0086               	movwf	6
 13938     13A6  0187               	clrf	7
 13939     13A7  3001               	movlw	1
 13940     13A8  3FC0               	movwi [0]fsr1
 13941     13A9  3000               	movlw	0
 13942     13AA  3FC1               	movwi [1]fsr1
 13943     13AB  3FC2               	movwi [2]fsr1
 13944     13AC  3FC3               	movwi [3]fsr1
 13945     13AD                     l4411:
 13946                           
 13947                           ;mybutton.c: 18: b->falling_ts[1] = 1;
 13948     13AD  0820               	movf	init_button@b,w
 13949     13AE  3E06               	addlw	6
 13950     13AF  0086               	movwf	6
 13951     13B0  0187               	clrf	7
 13952     13B1  3001               	movlw	1
 13953     13B2  3FC0               	movwi [0]fsr1
 13954     13B3  3000               	movlw	0
 13955     13B4  3FC1               	movwi [1]fsr1
 13956     13B5  3FC2               	movwi [2]fsr1
 13957     13B6  3FC3               	movwi [3]fsr1
 13958     13B7                     l4413:
 13959                           
 13960                           ;mybutton.c: 19: b->rising_ts[0] = 1;
 13961     13B7  0820               	movf	init_button@b,w
 13962     13B8  3E0A               	addlw	10
 13963     13B9  0086               	movwf	6
 13964     13BA  0187               	clrf	7
 13965     13BB  3001               	movlw	1
 13966     13BC  3FC0               	movwi [0]fsr1
 13967     13BD  3000               	movlw	0
 13968     13BE  3FC1               	movwi [1]fsr1
 13969     13BF  3FC2               	movwi [2]fsr1
 13970     13C0  3FC3               	movwi [3]fsr1
 13971     13C1                     l4415:
 13972                           
 13973                           ;mybutton.c: 20: b->rising_ts[1] = 1;
 13974     13C1  0820               	movf	init_button@b,w
 13975     13C2  3E0E               	addlw	14
 13976     13C3  0086               	movwf	6
 13977     13C4  0187               	clrf	7
 13978     13C5  3001               	movlw	1
 13979     13C6  3FC0               	movwi [0]fsr1
 13980     13C7  3000               	movlw	0
 13981     13C8  3FC1               	movwi [1]fsr1
 13982     13C9  3FC2               	movwi [2]fsr1
 13983     13CA  3FC3               	movwi [3]fsr1
 13984     13CB                     l4417:
 13985                           
 13986                           ;mybutton.c: 22: b->single_click_tmps[0] = 0;
 13987     13CB  0820               	movf	init_button@b,w
 13988     13CC  3E12               	addlw	18
 13989     13CD  0086               	movwf	6
 13990     13CE  0187               	clrf	7
 13991     13CF  0181               	clrf	1
 13992     13D0                     l4419:
 13993                           
 13994                           ;mybutton.c: 23: b->single_click_tmps[1] = 0;
 13995     13D0  0820               	movf	init_button@b,w
 13996     13D1  3E13               	addlw	19
 13997     13D2  0086               	movwf	6
 13998     13D3  0187               	clrf	7
 13999     13D4  0181               	clrf	1
 14000     13D5                     l4421:
 14001                           
 14002                           ;mybutton.c: 24: b->double_click_tmps[0] = 0;
 14003     13D5  0820               	movf	init_button@b,w
 14004     13D6  3E14               	addlw	20
 14005     13D7  0086               	movwf	6
 14006     13D8  0187               	clrf	7
 14007     13D9  0181               	clrf	1
 14008     13DA                     l4423:
 14009                           
 14010                           ;mybutton.c: 25: b->double_click_tmps[1] = 0;
 14011     13DA  0820               	movf	init_button@b,w
 14012     13DB  3E15               	addlw	21
 14013     13DC  0086               	movwf	6
 14014     13DD  0187               	clrf	7
 14015     13DE  0181               	clrf	1
 14016     13DF                     l4425:
 14017                           
 14018                           ;mybutton.c: 26: b->long_press_tmps[0] = 0;
 14019     13DF  0820               	movf	init_button@b,w
 14020     13E0  3E16               	addlw	22
 14021     13E1  0086               	movwf	6
 14022     13E2  0187               	clrf	7
 14023     13E3  0181               	clrf	1
 14024     13E4                     l4427:
 14025                           
 14026                           ;mybutton.c: 27: b->long_press_tmps[1] = 0;
 14027     13E4  0820               	movf	init_button@b,w
 14028     13E5  3E17               	addlw	23
 14029     13E6  0086               	movwf	6
 14030     13E7  0187               	clrf	7
 14031     13E8  0181               	clrf	1
 14032     13E9                     l4429:
 14033                           
 14034                           ;mybutton.c: 29: b->single_clicked_flag = 0;
 14035     13E9  0820               	movf	init_button@b,w
 14036     13EA  3E18               	addlw	24
 14037     13EB  0086               	movwf	6
 14038     13EC  0187               	clrf	7
 14039     13ED  0181               	clrf	1
 14040     13EE                     l4431:
 14041                           
 14042                           ;mybutton.c: 30: b->double_clicked_flag = 0;
 14043     13EE  0820               	movf	init_button@b,w
 14044     13EF  3E19               	addlw	25
 14045     13F0  0086               	movwf	6
 14046     13F1  0187               	clrf	7
 14047     13F2  0181               	clrf	1
 14048     13F3                     l4433:
 14049                           
 14050                           ;mybutton.c: 31: b->long_press_flag = 0;
 14051     13F3  0820               	movf	init_button@b,w
 14052     13F4  3E1A               	addlw	26
 14053     13F5  0086               	movwf	6
 14054     13F6  0187               	clrf	7
 14055     13F7  0181               	clrf	1
 14056     13F8                     l364:
 14057     13F8  0008               	return
 14058     13F9                     __end_of_init_button:
 14059                           
 14060                           	psect	text34
 14061     1E8F                     __ptext34:	
 14062 ;; *************** function _i2c_slave_init *****************
 14063 ;; Defined at:
 14064 ;;		line 14 in file "i2c_slave.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;		None
 14067 ;; Auto vars:     Size  Location     Type
 14068 ;;  i               1    1[BANK0 ] unsigned char 
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  1    wreg      void 
 14071 ;; Registers used:
 14072 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14081 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14082 ;;Total ram usage:        2 bytes
 14083 ;; Hardware stack levels used: 1
 14084 ;; Hardware stack levels required when called: 2
 14085 ;; This function calls:
 14086 ;;		Nothing
 14087 ;; This function is called by:
 14088 ;;		_main
 14089 ;; This function uses a non-reentrant model
 14090 ;;
 14091                           
 14092     1E8F                     _i2c_slave_init:	
 14093                           ;psect for function _i2c_slave_init
 14094                           
 14095     1E8F                     l4383:	
 14096                           ;incstack = 0
 14097                           ; Regs used in _i2c_slave_init: [wreg+fsr1l+fsr1h+status,2+status,0]
 14098                           
 14099                           
 14100                           ;i2c_slave.c: 15: SSP1STAT = 0x00;
 14101     1E8F  0143               	movlb	3	; select bank3
 14102     1E90  018F               	clrf	15	;volatile
 14103     1E91                     l4385:
 14104                           
 14105                           ;i2c_slave.c: 16: SSP1CON1 = 0x36;
 14106     1E91  3036               	movlw	54
 14107     1E92  0090               	movwf	16	;volatile
 14108     1E93                     l4387:
 14109                           
 14110                           ;i2c_slave.c: 17: SSP1CON2 = 0x01;
 14111     1E93  3001               	movlw	1
 14112     1E94  0091               	movwf	17	;volatile
 14113     1E95                     l4389:
 14114                           
 14115                           ;i2c_slave.c: 20: SSP1ADD = 0x68 << 1;
 14116     1E95  30D0               	movlw	208
 14117     1E96  008D               	movwf	13	;volatile
 14118     1E97                     l4391:
 14119                           
 14120                           ;i2c_slave.c: 21: SSP1MSK = 0xFF;
 14121     1E97  30FF               	movlw	255
 14122     1E98  008E               	movwf	14	;volatile
 14123     1E99                     l4393:
 14124                           
 14125                           ;i2c_slave.c: 23: PIR3bits.SSP1IF = 0;
 14126     1E99  014E               	movlb	14	; select bank14
 14127     1E9A  100F               	bcf	15,0	;volatile
 14128     1E9B                     l4395:
 14129                           
 14130                           ;i2c_slave.c: 24: PIE3bits.SSP1IE = 1;
 14131     1E9B  1419               	bsf	25,0	;volatile
 14132                           
 14133                           ;i2c_slave.c: 27: for (uint8_t i = 0; i < 64u; i++) {
 14134     1E9C  0140               	movlb	0	; select bank0
 14135     1E9D  01A1               	clrf	i2c_slave_init@i
 14136     1E9E                     l4401:
 14137                           
 14138                           ;i2c_slave.c: 28: slaveData[i] = 0;
 14139     1E9E  0821               	movf	i2c_slave_init@i,w
 14140     1E9F  3EA0               	addlw	(low (_slaveData| (0+256)))& (0+255)
 14141     1EA0  0086               	movwf	6
 14142     1EA1  3001               	movlw	1	; select bank3/4
 14143     1EA2  0087               	movwf	7
 14144     1EA3  0181               	clrf	1
 14145     1EA4                     l4403:
 14146     1EA4  3001               	movlw	1
 14147     1EA5  00A0               	movwf	??_i2c_slave_init
 14148     1EA6  0820               	movf	??_i2c_slave_init,w
 14149     1EA7  07A1               	addwf	i2c_slave_init@i,f
 14150     1EA8                     l4405:
 14151     1EA8  3040               	movlw	64
 14152     1EA9  0221               	subwf	i2c_slave_init@i,w
 14153     1EAA  1C03               	skipc
 14154     1EAB  2EAD               	goto	u4601
 14155     1EAC  2EAE               	goto	u4600
 14156     1EAD                     u4601:
 14157     1EAD  2E9E               	goto	l4401
 14158     1EAE                     u4600:
 14159     1EAE                     l243:
 14160     1EAE  0008               	return
 14161     1EAF                     __end_of_i2c_slave_init:
 14162                           
 14163                           	psect	text35
 14164     1D73                     __ptext35:	
 14165 ;; *************** function _get_ticks_with_lock *****************
 14166 ;; Defined at:
 14167 ;;		line 12 in file "myisr.c"
 14168 ;; Parameters:    Size  Location     Type
 14169 ;;		None
 14170 ;; Auto vars:     Size  Location     Type
 14171 ;;  result          4    4[BANK0 ] unsigned long 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  4    0[BANK0 ] unsigned long 
 14174 ;; Registers used:
 14175 ;;		wreg
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14181 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14184 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14185 ;;Total ram usage:        8 bytes
 14186 ;; Hardware stack levels used: 1
 14187 ;; Hardware stack levels required when called: 2
 14188 ;; This function calls:
 14189 ;;		Nothing
 14190 ;; This function is called by:
 14191 ;;		_main
 14192 ;;		_is_it_time_over
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196     1D73                     _get_ticks_with_lock:	
 14197                           ;psect for function _get_ticks_with_lock
 14198                           
 14199     1D73                     l4435:	
 14200                           ;incstack = 0
 14201                           ; Regs used in _get_ticks_with_lock: [wreg]
 14202                           
 14203                           
 14204                           ;myisr.c: 13: GIE = 0;
 14205     1D73  138B               	bcf	11,7	;volatile
 14206     1D74                     l4437:
 14207                           
 14208                           ;myisr.c: 14: uint32_t result = ticks;
 14209     1D74  087B               	movf	_ticks+3,w	;volatile
 14210     1D75  0140               	movlb	0	; select bank0
 14211     1D76  00A7               	movwf	get_ticks_with_lock@result+3
 14212     1D77  087A               	movf	_ticks+2,w	;volatile
 14213     1D78  00A6               	movwf	get_ticks_with_lock@result+2
 14214     1D79  0879               	movf	_ticks+1,w	;volatile
 14215     1D7A  00A5               	movwf	get_ticks_with_lock@result+1
 14216     1D7B  0878               	movf	_ticks,w	;volatile
 14217     1D7C  00A4               	movwf	get_ticks_with_lock@result
 14218     1D7D                     l4439:
 14219                           
 14220                           ;myisr.c: 15: GIE = 1;
 14221     1D7D  178B               	bsf	11,7	;volatile
 14222                           
 14223                           ;myisr.c: 16: return result;
 14224     1D7E  0827               	movf	get_ticks_with_lock@result+3,w
 14225     1D7F  00A3               	movwf	?_get_ticks_with_lock+3
 14226     1D80  0826               	movf	get_ticks_with_lock@result+2,w
 14227     1D81  00A2               	movwf	?_get_ticks_with_lock+2
 14228     1D82  0825               	movf	get_ticks_with_lock@result+1,w
 14229     1D83  00A1               	movwf	?_get_ticks_with_lock+1
 14230     1D84  0824               	movf	get_ticks_with_lock@result,w
 14231     1D85  00A0               	movwf	?_get_ticks_with_lock
 14232     1D86                     l322:
 14233     1D86  0008               	return
 14234     1D87                     __end_of_get_ticks_with_lock:
 14235                           
 14236                           	psect	text36
 14237     08F7                     __ptext36:	
 14238 ;; *************** function _get_measured_value *****************
 14239 ;; Defined at:
 14240 ;;		line 33 in file "measurement.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;  sensor_value    1    wreg     PTR struct values
 14243 ;;		 -> main@sensor_value(17), 
 14244 ;; Auto vars:     Size  Location     Type
 14245 ;;  sensor_value    1   74[BANK0 ] PTR struct values
 14246 ;;		 -> main@sensor_value(17), 
 14247 ;;  temp            4   70[BANK0 ] float 
 14248 ;;  payload_temp    4   66[BANK0 ] unsigned long 
 14249 ;;  payload         4   62[BANK0 ] unsigned long 
 14250 ;;  ph              2    0        unsigned int 
 14251 ;; Return value:  Size  Location     Type
 14252 ;;                  1    wreg      void 
 14253 ;; Registers used:
 14254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14255 ;; Tracked objects:
 14256 ;;		On entry : 0/0
 14257 ;;		On exit  : 0/0
 14258 ;;		Unchanged: 0/0
 14259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14261 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14262 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14263 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14264 ;;Total ram usage:       25 bytes
 14265 ;; Hardware stack levels used: 1
 14266 ;; Hardware stack levels required when called: 4
 14267 ;; This function calls:
 14268 ;;		___flmul
 14269 ;;		___fltol
 14270 ;;		_printf
 14271 ;; This function is called by:
 14272 ;;		_main
 14273 ;; This function uses a non-reentrant model
 14274 ;;
 14275                           
 14276     08F7                     _get_measured_value:	
 14277                           ;psect for function _get_measured_value
 14278                           
 14279                           
 14280                           ;incstack = 0
 14281                           ; Regs used in _get_measured_value: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14282                           ;get_measured_value@sensor_value stored from wreg
 14283     08F7  0140               	movlb	0	; select bank0
 14284     08F8  00EA               	movwf	get_measured_value@sensor_value
 14285     08F9                     l4621:
 14286     08F9                     l4623:
 14287                           
 14288                           ;measurement.c: 44: uint32_t payload = ((uint32_t)rxbuffer[5] << 24) |;measurement.c: 45
      +                          : ((uint32_t)rxbuffer[6]) << 16 |;measurement.c: 46: ((uint32_t)rxbuffer[3]) << 8 |;meas
      +                          urement.c: 47: ((uint32_t)rxbuffer[4] << 0);
 14289     08F9  0142               	movlb	2	; select bank2
 14290     08FA  0824               	movf	(_rxbuffer^(0+256)+4),w	;volatile
 14291     08FB  0140               	movlb	0	; select bank0
 14292     08FC  00D2               	movwf	??_get_measured_value
 14293     08FD  01D3               	clrf	??_get_measured_value+1
 14294     08FE  01D4               	clrf	??_get_measured_value+2
 14295     08FF  01D5               	clrf	??_get_measured_value+3
 14296     0900  0142               	movlb	2	; select bank2
 14297     0901  0823               	movf	(_rxbuffer^(0+256)+3),w	;volatile
 14298     0902  0140               	movlb	0	; select bank0
 14299     0903  00D6               	movwf	??_get_measured_value+4
 14300     0904  01D7               	clrf	??_get_measured_value+5
 14301     0905  01D8               	clrf	??_get_measured_value+6
 14302     0906  01D9               	clrf	??_get_measured_value+7
 14303     0907  3008               	movlw	8
 14304     0908                     u4795:
 14305     0908  35D6               	lslf	??_get_measured_value+4,f
 14306     0909  0DD7               	rlf	??_get_measured_value+5,f
 14307     090A  0DD8               	rlf	??_get_measured_value+6,f
 14308     090B  0DD9               	rlf	??_get_measured_value+7,f
 14309     090C                     u4790:
 14310     090C  0B89               	decfsz	9,f
 14311     090D  2908               	goto	u4795
 14312     090E  0142               	movlb	2	; select bank2
 14313     090F  0826               	movf	(_rxbuffer^(0+256)+6),w	;volatile
 14314     0910  0140               	movlb	0	; select bank0
 14315     0911  00DA               	movwf	??_get_measured_value+8
 14316     0912  01DB               	clrf	??_get_measured_value+9
 14317     0913  01DC               	clrf	??_get_measured_value+10
 14318     0914  01DD               	clrf	??_get_measured_value+11
 14319     0915  3010               	movlw	16
 14320     0916                     u4805:
 14321     0916  35DA               	lslf	??_get_measured_value+8,f
 14322     0917  0DDB               	rlf	??_get_measured_value+9,f
 14323     0918  0DDC               	rlf	??_get_measured_value+10,f
 14324     0919  0DDD               	rlf	??_get_measured_value+11,f
 14325     091A                     u4800:
 14326     091A  0B89               	decfsz	9,f
 14327     091B  2916               	goto	u4805
 14328     091C  0142               	movlb	2	; select bank2
 14329     091D  0825               	movf	(_rxbuffer^(0+256)+5),w	;volatile
 14330     091E  0140               	movlb	0	; select bank0
 14331     091F  04DD               	iorwf	??_get_measured_value+11,f
 14332     0920  085A               	movf	??_get_measured_value+8,w
 14333     0921  04D6               	iorwf	??_get_measured_value+4,f
 14334     0922  085B               	movf	??_get_measured_value+9,w
 14335     0923  04D7               	iorwf	??_get_measured_value+5,f
 14336     0924  085C               	movf	??_get_measured_value+10,w
 14337     0925  04D8               	iorwf	??_get_measured_value+6,f
 14338     0926  085D               	movf	??_get_measured_value+11,w
 14339     0927  04D9               	iorwf	??_get_measured_value+7,f
 14340     0928  0852               	movf	??_get_measured_value,w
 14341     0929  0456               	iorwf	??_get_measured_value+4,w
 14342     092A  00DE               	movwf	get_measured_value@payload
 14343     092B  0853               	movf	??_get_measured_value+1,w
 14344     092C  0457               	iorwf	??_get_measured_value+5,w
 14345     092D  00DF               	movwf	get_measured_value@payload+1
 14346     092E  0854               	movf	??_get_measured_value+2,w
 14347     092F  0458               	iorwf	??_get_measured_value+6,w
 14348     0930  00E0               	movwf	get_measured_value@payload+2
 14349     0931  0855               	movf	??_get_measured_value+3,w
 14350     0932  0459               	iorwf	??_get_measured_value+7,w
 14351     0933  00E1               	movwf	get_measured_value@payload+3
 14352     0934                     l4625:
 14353                           
 14354                           ;measurement.c: 49: sensor_value->ph_value = payload;
 14355     0934  086A               	movf	get_measured_value@sensor_value,w
 14356     0935  0086               	movwf	6
 14357     0936  0187               	clrf	7
 14358     0937  085E               	movf	get_measured_value@payload,w
 14359     0938  0081               	movwf	1
 14360     0939                     l4627:
 14361                           
 14362                           ;measurement.c: 51: printf("PH: %u\r\n", sensor_value->ph_value);
 14363     0939  3049               	movlw	low (STR_27| (0+32768))
 14364     093A  00AE               	movwf	printf@f
 14365     093B  309A               	movlw	high (STR_27| (0+32768))
 14366     093C  00AF               	movwf	printf@f+1
 14367     093D  086A               	movf	get_measured_value@sensor_value,w
 14368     093E  0086               	movwf	6
 14369     093F  0187               	clrf	7
 14370     0940  0801               	movf	1,w
 14371     0941  00D2               	movwf	??_get_measured_value
 14372     0942  01D3               	clrf	??_get_measured_value+1
 14373     0943  0852               	movf	??_get_measured_value,w
 14374     0944  00B0               	movwf	?_printf+2
 14375     0945  0853               	movf	??_get_measured_value+1,w
 14376     0946  00B1               	movwf	?_printf+3
 14377     0947  3180  20C1  3188   	fcall	_printf
 14378     094A                     l4629:
 14379                           
 14380                           ;measurement.c: 53: float temp = 0;
 14381     094A  3000               	movlw	0
 14382     094B  0140               	movlb	0	; select bank0
 14383     094C  00E9               	movwf	get_measured_value@temp+3
 14384     094D  3000               	movlw	0
 14385     094E  00E8               	movwf	get_measured_value@temp+2
 14386     094F  3000               	movlw	0
 14387     0950  00E7               	movwf	get_measured_value@temp+1
 14388     0951  3000               	movlw	0
 14389     0952  00E6               	movwf	get_measured_value@temp
 14390     0953                     l4631:
 14391                           
 14392                           ;measurement.c: 54: uint32_t payload_temp = ((uint32_t)rxbuffer[9] << 24) |;measurement.
      +                          c: 55: ((uint32_t)rxbuffer[10]) << 16 |;measurement.c: 56: ((uint32_t)rxbuffer[7]) << 8 
      +                          |;measurement.c: 57: ((uint32_t)rxbuffer[8] << 0);
 14393     0953  0142               	movlb	2	; select bank2
 14394     0954  0828               	movf	(_rxbuffer^(0+256)+8),w	;volatile
 14395     0955  0140               	movlb	0	; select bank0
 14396     0956  00D2               	movwf	??_get_measured_value
 14397     0957  01D3               	clrf	??_get_measured_value+1
 14398     0958  01D4               	clrf	??_get_measured_value+2
 14399     0959  01D5               	clrf	??_get_measured_value+3
 14400     095A  0142               	movlb	2	; select bank2
 14401     095B  0827               	movf	(_rxbuffer^(0+256)+7),w	;volatile
 14402     095C  0140               	movlb	0	; select bank0
 14403     095D  00D6               	movwf	??_get_measured_value+4
 14404     095E  01D7               	clrf	??_get_measured_value+5
 14405     095F  01D8               	clrf	??_get_measured_value+6
 14406     0960  01D9               	clrf	??_get_measured_value+7
 14407     0961  3008               	movlw	8
 14408     0962                     u4815:
 14409     0962  35D6               	lslf	??_get_measured_value+4,f
 14410     0963  0DD7               	rlf	??_get_measured_value+5,f
 14411     0964  0DD8               	rlf	??_get_measured_value+6,f
 14412     0965  0DD9               	rlf	??_get_measured_value+7,f
 14413     0966                     u4810:
 14414     0966  0B89               	decfsz	9,f
 14415     0967  2962               	goto	u4815
 14416     0968  0142               	movlb	2	; select bank2
 14417     0969  082A               	movf	(_rxbuffer^(0+256)+10),w	;volatile
 14418     096A  0140               	movlb	0	; select bank0
 14419     096B  00DA               	movwf	??_get_measured_value+8
 14420     096C  01DB               	clrf	??_get_measured_value+9
 14421     096D  01DC               	clrf	??_get_measured_value+10
 14422     096E  01DD               	clrf	??_get_measured_value+11
 14423     096F  3010               	movlw	16
 14424     0970                     u4825:
 14425     0970  35DA               	lslf	??_get_measured_value+8,f
 14426     0971  0DDB               	rlf	??_get_measured_value+9,f
 14427     0972  0DDC               	rlf	??_get_measured_value+10,f
 14428     0973  0DDD               	rlf	??_get_measured_value+11,f
 14429     0974                     u4820:
 14430     0974  0B89               	decfsz	9,f
 14431     0975  2970               	goto	u4825
 14432     0976  0142               	movlb	2	; select bank2
 14433     0977  0829               	movf	(_rxbuffer^(0+256)+9),w	;volatile
 14434     0978  0140               	movlb	0	; select bank0
 14435     0979  04DD               	iorwf	??_get_measured_value+11,f
 14436     097A  085A               	movf	??_get_measured_value+8,w
 14437     097B  04D6               	iorwf	??_get_measured_value+4,f
 14438     097C  085B               	movf	??_get_measured_value+9,w
 14439     097D  04D7               	iorwf	??_get_measured_value+5,f
 14440     097E  085C               	movf	??_get_measured_value+10,w
 14441     097F  04D8               	iorwf	??_get_measured_value+6,f
 14442     0980  085D               	movf	??_get_measured_value+11,w
 14443     0981  04D9               	iorwf	??_get_measured_value+7,f
 14444     0982  0852               	movf	??_get_measured_value,w
 14445     0983  0456               	iorwf	??_get_measured_value+4,w
 14446     0984  00E2               	movwf	get_measured_value@payload_temp
 14447     0985  0853               	movf	??_get_measured_value+1,w
 14448     0986  0457               	iorwf	??_get_measured_value+5,w
 14449     0987  00E3               	movwf	get_measured_value@payload_temp+1
 14450     0988  0854               	movf	??_get_measured_value+2,w
 14451     0989  0458               	iorwf	??_get_measured_value+6,w
 14452     098A  00E4               	movwf	get_measured_value@payload_temp+2
 14453     098B  0855               	movf	??_get_measured_value+3,w
 14454     098C  0459               	iorwf	??_get_measured_value+7,w
 14455     098D  00E5               	movwf	get_measured_value@payload_temp+3
 14456     098E                     l4633:
 14457                           
 14458                           ;measurement.c: 58: __builtin_memcpy(&temp,&payload_temp,sizeof(float));
 14459     098E  3066               	movlw	low (get_measured_value@temp| 0)
 14460     098F  0086               	movwf	6
 14461     0990  0187               	clrf	7
 14462     0991  29A0               	goto	mcp0
 14463     0992                     mcp0b:
 14464     0992  3062               	movlw	low (get_measured_value@payload_temp| 0)
 14465     0993  0084               	movwf	4
 14466     0994  0185               	clrf	5
 14467     0995  3004               	movlw	4
 14468     0996  0140               	movlb	0	; select bank0
 14469     0997  00D2               	movwf	??_get_measured_value
 14470     0998  0852               	movf	??_get_measured_value,w
 14471     0999  1903               	skipnz
 14472     099A  29A1               	goto	mcp0z
 14473     099B                     u483m0:
 14474     099B  0012               	moviw fsr0++
 14475     099C  001E               	movwi fsr1++
 14476     099D  0BD2               	decfsz	??_get_measured_value,f
 14477     099E  299B               	goto	u483m0
 14478     099F  29A1               	goto	u483m1
 14479     09A0                     mcp0:
 14480     09A0  2992               	goto	mcp0b
 14481     09A1                     u483m1:
 14482     09A1                     mcp0z:
 14483     09A1                     l4635:
 14484                           
 14485                           ;measurement.c: 60: sensor_value->temp_value = (uint16_t)(temp * 100);
 14486     09A1  0140               	movlb	0	; select bank0
 14487     09A2  0869               	movf	get_measured_value@temp+3,w
 14488     09A3  00B0               	movwf	___flmul@a+3
 14489     09A4  0868               	movf	get_measured_value@temp+2,w
 14490     09A5  00AF               	movwf	___flmul@a+2
 14491     09A6  0867               	movf	get_measured_value@temp+1,w
 14492     09A7  00AE               	movwf	___flmul@a+1
 14493     09A8  0866               	movf	get_measured_value@temp,w
 14494     09A9  00AD               	movwf	___flmul@a
 14495     09AA  3042               	movlw	66
 14496     09AB  00AC               	movwf	___flmul@b+3
 14497     09AC  30C8               	movlw	200
 14498     09AD  00AB               	movwf	___flmul@b+2
 14499     09AE  3000               	movlw	0
 14500     09AF  00AA               	movwf	___flmul@b+1
 14501     09B0  3000               	movlw	0
 14502     09B1  00A9               	movwf	___flmul@b
 14503     09B2  3185  25BF  3188   	fcall	___flmul
 14504     09B5  0140               	movlb	0	; select bank0
 14505     09B6  082C               	movf	?___flmul+3,w
 14506     09B7  00C6               	movwf	___fltol@f1+3
 14507     09B8  082B               	movf	?___flmul+2,w
 14508     09B9  00C5               	movwf	___fltol@f1+2
 14509     09BA  082A               	movf	?___flmul+1,w
 14510     09BB  00C4               	movwf	___fltol@f1+1
 14511     09BC  0829               	movf	?___flmul,w
 14512     09BD  00C3               	movwf	___fltol@f1
 14513     09BE  3194  24C9  3188   	fcall	___fltol
 14514     09C1  0140               	movlb	0	; select bank0
 14515     09C2  086A               	movf	get_measured_value@sensor_value,w
 14516     09C3  3E0D               	addlw	13
 14517     09C4  0086               	movwf	6
 14518     09C5  0187               	clrf	7
 14519     09C6  0843               	movf	?___fltol,w
 14520     09C7  3FC0               	movwi [0]fsr1
 14521     09C8  0844               	movf	?___fltol+1,w
 14522     09C9  3FC1               	movwi [1]fsr1
 14523     09CA                     l4637:
 14524                           
 14525                           ;measurement.c: 61: printf("TEMP: %u\r\n", sensor_value->temp_value);
 14526     09CA  3029               	movlw	low (STR_28| (0+32768))
 14527     09CB  00AE               	movwf	printf@f
 14528     09CC  309A               	movlw	high (STR_28| (0+32768))
 14529     09CD  00AF               	movwf	printf@f+1
 14530     09CE  086A               	movf	get_measured_value@sensor_value,w
 14531     09CF  3E0D               	addlw	13
 14532     09D0  0086               	movwf	6
 14533     09D1  0187               	clrf	7
 14534     09D2  3F40               	moviw [0]fsr1
 14535     09D3  00B0               	movwf	?_printf+2
 14536     09D4  3F41               	moviw [1]fsr1
 14537     09D5  00B1               	movwf	?_printf+3
 14538     09D6  3180  20C1  3188   	fcall	_printf
 14539     09D9                     l603:
 14540     09D9  0008               	return
 14541     09DA                     __end_of_get_measured_value:
 14542                           
 14543                           	psect	text37
 14544     14C9                     __ptext37:	
 14545 ;; *************** function ___fltol *****************
 14546 ;; Defined at:
 14547 ;;		line 43 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fltol.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;  f1              4   35[BANK0 ] void 
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;  exp1            1   44[BANK0 ] unsigned char 
 14552 ;;  sign1           1   43[BANK0 ] unsigned char 
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  4   35[BANK0 ] long 
 14555 ;; Registers used:
 14556 ;;		wreg, status,2, status,0
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14563 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14564 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14565 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14566 ;;Total ram usage:       10 bytes
 14567 ;; Hardware stack levels used: 1
 14568 ;; Hardware stack levels required when called: 2
 14569 ;; This function calls:
 14570 ;;		Nothing
 14571 ;; This function is called by:
 14572 ;;		_get_measured_value
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           
 14576     14C9                     ___fltol:	
 14577                           ;psect for function ___fltol
 14578                           
 14579     14C9                     l4169:	
 14580                           ;incstack = 0
 14581                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14582                           
 14583     14C9  1003               	clrc
 14584     14CA  0140               	movlb	0	; select bank0
 14585     14CB  0D45               	rlf	___fltol@f1+2,w
 14586     14CC  0D46               	rlf	___fltol@f1+3,w
 14587     14CD  00CC               	movwf	___fltol@exp1
 14588     14CE  084C               	movf	___fltol@exp1,w
 14589     14CF  1D03               	btfss	3,2
 14590     14D0  2CD2               	goto	u4231
 14591     14D1  2CD3               	goto	u4230
 14592     14D2                     u4231:
 14593     14D2  2CDC               	goto	l4175
 14594     14D3                     u4230:
 14595     14D3                     l4171:
 14596     14D3  3000               	movlw	0
 14597     14D4  00C6               	movwf	?___fltol+3
 14598     14D5  3000               	movlw	0
 14599     14D6  00C5               	movwf	?___fltol+2
 14600     14D7  3000               	movlw	0
 14601     14D8  00C4               	movwf	?___fltol+1
 14602     14D9  3000               	movlw	0
 14603     14DA  00C3               	movwf	?___fltol
 14604     14DB  2D39               	goto	l1176
 14605     14DC                     l4175:
 14606     14DC  0843               	movf	___fltol@f1,w
 14607     14DD  00C7               	movwf	??___fltol
 14608     14DE  0844               	movf	___fltol@f1+1,w
 14609     14DF  00C8               	movwf	??___fltol+1
 14610     14E0  0845               	movf	___fltol@f1+2,w
 14611     14E1  00C9               	movwf	??___fltol+2
 14612     14E2  0846               	movf	___fltol@f1+3,w
 14613     14E3  00CA               	movwf	??___fltol+3
 14614     14E4  301F               	movlw	31
 14615     14E5                     u4245:
 14616     14E5  36CA               	lsrf	??___fltol+3,f
 14617     14E6  0CC9               	rrf	??___fltol+2,f
 14618     14E7  0CC8               	rrf	??___fltol+1,f
 14619     14E8  0CC7               	rrf	??___fltol,f
 14620     14E9                     u4240:
 14621     14E9  0B89               	decfsz	9,f
 14622     14EA  2CE5               	goto	u4245
 14623     14EB  0847               	movf	??___fltol,w
 14624     14EC  00CB               	movwf	___fltol@sign1
 14625     14ED                     l4177:
 14626     14ED  17C5               	bsf	___fltol@f1+2,7
 14627     14EE                     l4179:
 14628     14EE  30FF               	movlw	255
 14629     14EF  05C3               	andwf	___fltol@f1,f
 14630     14F0  30FF               	movlw	255
 14631     14F1  05C4               	andwf	___fltol@f1+1,f
 14632     14F2  30FF               	movlw	255
 14633     14F3  05C5               	andwf	___fltol@f1+2,f
 14634     14F4  3000               	movlw	0
 14635     14F5  05C6               	andwf	___fltol@f1+3,f
 14636     14F6                     l4181:
 14637     14F6  3096               	movlw	150
 14638     14F7  02CC               	subwf	___fltol@exp1,f
 14639     14F8                     l4183:
 14640     14F8  1FCC               	btfss	___fltol@exp1,7
 14641     14F9  2CFB               	goto	u4251
 14642     14FA  2CFC               	goto	u4250
 14643     14FB                     u4251:
 14644     14FB  2D14               	goto	l4193
 14645     14FC                     u4250:
 14646     14FC                     l4185:
 14647     14FC  084C               	movf	___fltol@exp1,w
 14648     14FD  3A80               	xorlw	128
 14649     14FE  3E97               	addlw	151
 14650     14FF  1803               	skipnc
 14651     1500  2D02               	goto	u4261
 14652     1501  2D03               	goto	u4260
 14653     1502                     u4261:
 14654     1502  2D04               	goto	l4191
 14655     1503                     u4260:
 14656     1503  2CD3               	goto	l4171
 14657     1504                     l4191:
 14658     1504  3001               	movlw	1
 14659     1505                     u4275:
 14660     1505  36C6               	lsrf	___fltol@f1+3,f
 14661     1506  0CC5               	rrf	___fltol@f1+2,f
 14662     1507  0CC4               	rrf	___fltol@f1+1,f
 14663     1508  0CC3               	rrf	___fltol@f1,f
 14664     1509  0B89               	decfsz	9,f
 14665     150A  2D05               	goto	u4275
 14666     150B  3001               	movlw	1
 14667     150C  00C7               	movwf	??___fltol
 14668     150D  0847               	movf	??___fltol,w
 14669     150E  07CC               	addwf	___fltol@exp1,f
 14670     150F  1D03               	btfss	3,2
 14671     1510  2D12               	goto	u4281
 14672     1511  2D13               	goto	u4280
 14673     1512                     u4281:
 14674     1512  2D04               	goto	l4191
 14675     1513                     u4280:
 14676     1513  2D29               	goto	l4201
 14677     1514                     l4193:
 14678     1514  3020               	movlw	32
 14679     1515  024C               	subwf	___fltol@exp1,w
 14680     1516  1C03               	skipc
 14681     1517  2D19               	goto	u4291
 14682     1518  2D1A               	goto	u4290
 14683     1519                     u4291:
 14684     1519  2D24               	goto	l1183
 14685     151A                     u4290:
 14686     151A  2CD3               	goto	l4171
 14687     151B                     l4199:
 14688     151B  3001               	movlw	1
 14689     151C                     u4305:
 14690     151C  35C3               	lslf	___fltol@f1,f
 14691     151D  0DC4               	rlf	___fltol@f1+1,f
 14692     151E  0DC5               	rlf	___fltol@f1+2,f
 14693     151F  0DC6               	rlf	___fltol@f1+3,f
 14694     1520  0B89               	decfsz	9,f
 14695     1521  2D1C               	goto	u4305
 14696     1522  3001               	movlw	1
 14697     1523  02CC               	subwf	___fltol@exp1,f
 14698     1524                     l1183:
 14699     1524  084C               	movf	___fltol@exp1,w
 14700     1525  1D03               	btfss	3,2
 14701     1526  2D28               	goto	u4311
 14702     1527  2D29               	goto	u4310
 14703     1528                     u4311:
 14704     1528  2D1B               	goto	l4199
 14705     1529                     u4310:
 14706     1529                     l4201:
 14707     1529  084B               	movf	___fltol@sign1,w
 14708     152A  1903               	btfsc	3,2
 14709     152B  2D2D               	goto	u4321
 14710     152C  2D2E               	goto	u4320
 14711     152D                     u4321:
 14712     152D  2D39               	goto	l1186
 14713     152E                     u4320:
 14714     152E                     l4203:
 14715     152E  09C3               	comf	___fltol@f1,f
 14716     152F  09C4               	comf	___fltol@f1+1,f
 14717     1530  09C5               	comf	___fltol@f1+2,f
 14718     1531  09C6               	comf	___fltol@f1+3,f
 14719     1532  0AC3               	incf	___fltol@f1,f
 14720     1533  1903               	skipnz
 14721     1534  0AC4               	incf	___fltol@f1+1,f
 14722     1535  1903               	skipnz
 14723     1536  0AC5               	incf	___fltol@f1+2,f
 14724     1537  1903               	skipnz
 14725     1538  0AC6               	incf	___fltol@f1+3,f
 14726     1539                     l1186:
 14727     1539                     l1176:
 14728     1539  0008               	return
 14729     153A                     __end_of___fltol:
 14730                           
 14731                           	psect	text38
 14732     05BF                     __ptext38:	
 14733 ;; *************** function ___flmul *****************
 14734 ;; Defined at:
 14735 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcmul.c"
 14736 ;; Parameters:    Size  Location     Type
 14737 ;;  b               4    9[BANK0 ] long 
 14738 ;;  a               4   13[BANK0 ] long 
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;  prod            4   29[BANK0 ] struct .
 14741 ;;  grs             4   23[BANK0 ] unsigned long 
 14742 ;;  temp            2   33[BANK0 ] struct .
 14743 ;;  bexp            1   28[BANK0 ] unsigned char 
 14744 ;;  aexp            1   27[BANK0 ] unsigned char 
 14745 ;;  sign            1   22[BANK0 ] unsigned char 
 14746 ;; Return value:  Size  Location     Type
 14747 ;;                  4    9[BANK0 ] unsigned char 
 14748 ;; Registers used:
 14749 ;;		wreg, status,2, status,0, pclath, cstack
 14750 ;; Tracked objects:
 14751 ;;		On entry : 0/0
 14752 ;;		On exit  : 0/0
 14753 ;;		Unchanged: 0/0
 14754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14755 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14756 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14757 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14758 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14759 ;;Total ram usage:       26 bytes
 14760 ;; Hardware stack levels used: 1
 14761 ;; Hardware stack levels required when called: 3
 14762 ;; This function calls:
 14763 ;;		__Umul8_16
 14764 ;; This function is called by:
 14765 ;;		_get_measured_value
 14766 ;; This function uses a non-reentrant model
 14767 ;;
 14768                           
 14769     05BF                     ___flmul:	
 14770                           ;psect for function ___flmul
 14771                           
 14772     05BF                     l4205:	
 14773                           ;incstack = 0
 14774                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14775                           
 14776     05BF  0140               	movlb	0	; select bank0
 14777     05C0  082C               	movf	___flmul@b+3,w
 14778     05C1  3980               	andlw	128
 14779     05C2  00B6               	movwf	___flmul@sign
 14780     05C3                     l4207:
 14781     05C3  352C               	lslf	___flmul@b+3,w
 14782     05C4  00BC               	movwf	___flmul@bexp
 14783     05C5                     l4209:
 14784     05C5  1FAB               	btfss	___flmul@b+2,7
 14785     05C6  2DC8               	goto	u4331
 14786     05C7  2DC9               	goto	u4330
 14787     05C8                     u4331:
 14788     05C8  2DCA               	goto	l4213
 14789     05C9                     u4330:
 14790     05C9                     l4211:
 14791     05C9  143C               	bsf	___flmul@bexp,0
 14792     05CA                     l4213:
 14793     05CA  083C               	movf	___flmul@bexp,w
 14794     05CB  1903               	btfsc	3,2
 14795     05CC  2DCE               	goto	u4341
 14796     05CD  2DCF               	goto	u4340
 14797     05CE                     u4341:
 14798     05CE  2DDE               	goto	l4221
 14799     05CF                     u4340:
 14800     05CF                     l4215:
 14801     05CF  0A3C               	incf	___flmul@bexp,w
 14802     05D0  1D03               	btfss	3,2
 14803     05D1  2DD3               	goto	u4351
 14804     05D2  2DD4               	goto	u4350
 14805     05D3                     u4351:
 14806     05D3  2DDC               	goto	l4219
 14807     05D4                     u4350:
 14808     05D4                     l4217:
 14809     05D4  3000               	movlw	0
 14810     05D5  00AC               	movwf	___flmul@b+3
 14811     05D6  3000               	movlw	0
 14812     05D7  00AB               	movwf	___flmul@b+2
 14813     05D8  3000               	movlw	0
 14814     05D9  00AA               	movwf	___flmul@b+1
 14815     05DA  3000               	movlw	0
 14816     05DB  00A9               	movwf	___flmul@b
 14817     05DC                     l4219:
 14818     05DC  17AB               	bsf	___flmul@b+2,7
 14819     05DD  2DE6               	goto	l4223
 14820     05DE                     l4221:
 14821     05DE  3000               	movlw	0
 14822     05DF  00AC               	movwf	___flmul@b+3
 14823     05E0  3000               	movlw	0
 14824     05E1  00AB               	movwf	___flmul@b+2
 14825     05E2  3000               	movlw	0
 14826     05E3  00AA               	movwf	___flmul@b+1
 14827     05E4  3000               	movlw	0
 14828     05E5  00A9               	movwf	___flmul@b
 14829     05E6                     l4223:
 14830     05E6  0830               	movf	___flmul@a+3,w
 14831     05E7  3980               	andlw	128
 14832     05E8  00B1               	movwf	??___flmul
 14833     05E9  0831               	movf	??___flmul,w
 14834     05EA  06B6               	xorwf	___flmul@sign,f
 14835     05EB                     l4225:
 14836     05EB  3530               	lslf	___flmul@a+3,w
 14837     05EC  00BB               	movwf	___flmul@aexp
 14838     05ED                     l4227:
 14839     05ED  1FAF               	btfss	___flmul@a+2,7
 14840     05EE  2DF0               	goto	u4361
 14841     05EF  2DF1               	goto	u4360
 14842     05F0                     u4361:
 14843     05F0  2DF2               	goto	l4231
 14844     05F1                     u4360:
 14845     05F1                     l4229:
 14846     05F1  143B               	bsf	___flmul@aexp,0
 14847     05F2                     l4231:
 14848     05F2  083B               	movf	___flmul@aexp,w
 14849     05F3  1903               	btfsc	3,2
 14850     05F4  2DF6               	goto	u4371
 14851     05F5  2DF7               	goto	u4370
 14852     05F6                     u4371:
 14853     05F6  2E06               	goto	l4239
 14854     05F7                     u4370:
 14855     05F7                     l4233:
 14856     05F7  0A3B               	incf	___flmul@aexp,w
 14857     05F8  1D03               	btfss	3,2
 14858     05F9  2DFB               	goto	u4381
 14859     05FA  2DFC               	goto	u4380
 14860     05FB                     u4381:
 14861     05FB  2E04               	goto	l4237
 14862     05FC                     u4380:
 14863     05FC                     l4235:
 14864     05FC  3000               	movlw	0
 14865     05FD  00B0               	movwf	___flmul@a+3
 14866     05FE  3000               	movlw	0
 14867     05FF  00AF               	movwf	___flmul@a+2
 14868     0600  3000               	movlw	0
 14869     0601  00AE               	movwf	___flmul@a+1
 14870     0602  3000               	movlw	0
 14871     0603  00AD               	movwf	___flmul@a
 14872     0604                     l4237:
 14873     0604  17AF               	bsf	___flmul@a+2,7
 14874     0605  2E0E               	goto	l4241
 14875     0606                     l4239:
 14876     0606  3000               	movlw	0
 14877     0607  00B0               	movwf	___flmul@a+3
 14878     0608  3000               	movlw	0
 14879     0609  00AF               	movwf	___flmul@a+2
 14880     060A  3000               	movlw	0
 14881     060B  00AE               	movwf	___flmul@a+1
 14882     060C  3000               	movlw	0
 14883     060D  00AD               	movwf	___flmul@a
 14884     060E                     l4241:
 14885     060E  083B               	movf	___flmul@aexp,w
 14886     060F  1903               	btfsc	3,2
 14887     0610  2E12               	goto	u4391
 14888     0611  2E13               	goto	u4390
 14889     0612                     u4391:
 14890     0612  2E18               	goto	l4245
 14891     0613                     u4390:
 14892     0613                     l4243:
 14893     0613  083C               	movf	___flmul@bexp,w
 14894     0614  1D03               	btfss	3,2
 14895     0615  2E17               	goto	u4401
 14896     0616  2E18               	goto	u4400
 14897     0617                     u4401:
 14898     0617  2E21               	goto	l4249
 14899     0618                     u4400:
 14900     0618                     l4245:
 14901     0618  3000               	movlw	0
 14902     0619  00AC               	movwf	?___flmul+3
 14903     061A  3000               	movlw	0
 14904     061B  00AB               	movwf	?___flmul+2
 14905     061C  3000               	movlw	0
 14906     061D  00AA               	movwf	?___flmul+1
 14907     061E  3000               	movlw	0
 14908     061F  00A9               	movwf	?___flmul
 14909     0620  2FF9               	goto	l1379
 14910     0621                     l4249:
 14911     0621  0829               	movf	___flmul@b,w
 14912     0622  00A0               	movwf	__Umul8_16@multiplicand
 14913     0623  082F               	movf	___flmul@a+2,w
 14914     0624  319E  26AF  3185   	fcall	__Umul8_16
 14915     0627  0140               	movlb	0	; select bank0
 14916     0628  0821               	movf	?__Umul8_16+1,w
 14917     0629  00C2               	movwf	___flmul@temp+1
 14918     062A  0820               	movf	?__Umul8_16,w
 14919     062B  00C1               	movwf	___flmul@temp
 14920     062C                     l4251:
 14921     062C  0841               	movf	___flmul@temp,w
 14922     062D  00B1               	movwf	??___flmul
 14923     062E  01B2               	clrf	??___flmul+1
 14924     062F  01B3               	clrf	??___flmul+2
 14925     0630  01B4               	clrf	??___flmul+3
 14926     0631  0834               	movf	??___flmul+3,w
 14927     0632  00BA               	movwf	___flmul@grs+3
 14928     0633  0833               	movf	??___flmul+2,w
 14929     0634  00B9               	movwf	___flmul@grs+2
 14930     0635  0832               	movf	??___flmul+1,w
 14931     0636  00B8               	movwf	___flmul@grs+1
 14932     0637  0831               	movf	??___flmul,w
 14933     0638  00B7               	movwf	___flmul@grs
 14934     0639                     l4253:
 14935     0639  0842               	movf	___flmul@temp+1,w
 14936     063A  00B1               	movwf	??___flmul
 14937     063B  01B2               	clrf	??___flmul+1
 14938     063C  01B3               	clrf	??___flmul+2
 14939     063D  01B4               	clrf	??___flmul+3
 14940     063E  0834               	movf	??___flmul+3,w
 14941     063F  00C0               	movwf	___flmul@prod+3
 14942     0640  0833               	movf	??___flmul+2,w
 14943     0641  00BF               	movwf	___flmul@prod+2
 14944     0642  0832               	movf	??___flmul+1,w
 14945     0643  00BE               	movwf	___flmul@prod+1
 14946     0644  0831               	movf	??___flmul,w
 14947     0645  00BD               	movwf	___flmul@prod
 14948     0646  082A               	movf	___flmul@b+1,w
 14949     0647  00A0               	movwf	__Umul8_16@multiplicand
 14950     0648  082E               	movf	___flmul@a+1,w
 14951     0649  319E  26AF  3185   	fcall	__Umul8_16
 14952     064C  0140               	movlb	0	; select bank0
 14953     064D  0821               	movf	?__Umul8_16+1,w
 14954     064E  00C2               	movwf	___flmul@temp+1
 14955     064F  0820               	movf	?__Umul8_16,w
 14956     0650  00C1               	movwf	___flmul@temp
 14957     0651                     l4255:
 14958     0651  0841               	movf	___flmul@temp,w
 14959     0652  00B1               	movwf	??___flmul
 14960     0653  01B2               	clrf	??___flmul+1
 14961     0654  01B3               	clrf	??___flmul+2
 14962     0655  01B4               	clrf	??___flmul+3
 14963     0656  0831               	movf	??___flmul,w
 14964     0657  07B7               	addwf	___flmul@grs,f
 14965     0658  0832               	movf	??___flmul+1,w
 14966     0659  3DB8               	addwfc	___flmul@grs+1,f
 14967     065A  0833               	movf	??___flmul+2,w
 14968     065B  3DB9               	addwfc	___flmul@grs+2,f
 14969     065C  0834               	movf	??___flmul+3,w
 14970     065D  3DBA               	addwfc	___flmul@grs+3,f
 14971     065E                     l4257:
 14972     065E  0842               	movf	___flmul@temp+1,w
 14973     065F  00B1               	movwf	??___flmul
 14974     0660  01B2               	clrf	??___flmul+1
 14975     0661  01B3               	clrf	??___flmul+2
 14976     0662  01B4               	clrf	??___flmul+3
 14977     0663  0831               	movf	??___flmul,w
 14978     0664  07BD               	addwf	___flmul@prod,f
 14979     0665  0832               	movf	??___flmul+1,w
 14980     0666  3DBE               	addwfc	___flmul@prod+1,f
 14981     0667  0833               	movf	??___flmul+2,w
 14982     0668  3DBF               	addwfc	___flmul@prod+2,f
 14983     0669  0834               	movf	??___flmul+3,w
 14984     066A  3DC0               	addwfc	___flmul@prod+3,f
 14985     066B  082B               	movf	___flmul@b+2,w
 14986     066C  00A0               	movwf	__Umul8_16@multiplicand
 14987     066D  082D               	movf	___flmul@a,w
 14988     066E  319E  26AF  3185   	fcall	__Umul8_16
 14989     0671  0140               	movlb	0	; select bank0
 14990     0672  0821               	movf	?__Umul8_16+1,w
 14991     0673  00C2               	movwf	___flmul@temp+1
 14992     0674  0820               	movf	?__Umul8_16,w
 14993     0675  00C1               	movwf	___flmul@temp
 14994     0676                     l4259:
 14995     0676  0841               	movf	___flmul@temp,w
 14996     0677  00B1               	movwf	??___flmul
 14997     0678  01B2               	clrf	??___flmul+1
 14998     0679  01B3               	clrf	??___flmul+2
 14999     067A  01B4               	clrf	??___flmul+3
 15000     067B  0831               	movf	??___flmul,w
 15001     067C  07B7               	addwf	___flmul@grs,f
 15002     067D  0832               	movf	??___flmul+1,w
 15003     067E  3DB8               	addwfc	___flmul@grs+1,f
 15004     067F  0833               	movf	??___flmul+2,w
 15005     0680  3DB9               	addwfc	___flmul@grs+2,f
 15006     0681  0834               	movf	??___flmul+3,w
 15007     0682  3DBA               	addwfc	___flmul@grs+3,f
 15008     0683                     l4261:
 15009     0683  0842               	movf	___flmul@temp+1,w
 15010     0684  00B1               	movwf	??___flmul
 15011     0685  01B2               	clrf	??___flmul+1
 15012     0686  01B3               	clrf	??___flmul+2
 15013     0687  01B4               	clrf	??___flmul+3
 15014     0688  0831               	movf	??___flmul,w
 15015     0689  07BD               	addwf	___flmul@prod,f
 15016     068A  0832               	movf	??___flmul+1,w
 15017     068B  3DBE               	addwfc	___flmul@prod+1,f
 15018     068C  0833               	movf	??___flmul+2,w
 15019     068D  3DBF               	addwfc	___flmul@prod+2,f
 15020     068E  0834               	movf	??___flmul+3,w
 15021     068F  3DC0               	addwfc	___flmul@prod+3,f
 15022     0690                     l4263:
 15023     0690  3008               	movlw	8
 15024     0691                     u4415:
 15025     0691  35B7               	lslf	___flmul@grs,f
 15026     0692  0DB8               	rlf	___flmul@grs+1,f
 15027     0693  0DB9               	rlf	___flmul@grs+2,f
 15028     0694  0DBA               	rlf	___flmul@grs+3,f
 15029     0695  0B89               	decfsz	9,f
 15030     0696  2E91               	goto	u4415
 15031     0697                     l4265:
 15032     0697  082A               	movf	___flmul@b+1,w
 15033     0698  00A0               	movwf	__Umul8_16@multiplicand
 15034     0699  082D               	movf	___flmul@a,w
 15035     069A  319E  26AF  3185   	fcall	__Umul8_16
 15036     069D  0140               	movlb	0	; select bank0
 15037     069E  0821               	movf	?__Umul8_16+1,w
 15038     069F  00C2               	movwf	___flmul@temp+1
 15039     06A0  0820               	movf	?__Umul8_16,w
 15040     06A1  00C1               	movwf	___flmul@temp
 15041     06A2                     l4267:
 15042     06A2  0841               	movf	___flmul@temp,w
 15043     06A3  07B7               	addwf	___flmul@grs,f
 15044     06A4  0842               	movf	___flmul@temp+1,w
 15045     06A5  3DB8               	addwfc	___flmul@grs+1,f
 15046     06A6  3000               	movlw	0
 15047     06A7  3DB9               	addwfc	___flmul@grs+2,f
 15048     06A8  3DBA               	addwfc	___flmul@grs+3,f
 15049     06A9                     l4269:
 15050     06A9  0829               	movf	___flmul@b,w
 15051     06AA  00A0               	movwf	__Umul8_16@multiplicand
 15052     06AB  082E               	movf	___flmul@a+1,w
 15053     06AC  319E  26AF  3185   	fcall	__Umul8_16
 15054     06AF  0140               	movlb	0	; select bank0
 15055     06B0  0821               	movf	?__Umul8_16+1,w
 15056     06B1  00C2               	movwf	___flmul@temp+1
 15057     06B2  0820               	movf	?__Umul8_16,w
 15058     06B3  00C1               	movwf	___flmul@temp
 15059     06B4                     l4271:
 15060     06B4  0841               	movf	___flmul@temp,w
 15061     06B5  07B7               	addwf	___flmul@grs,f
 15062     06B6  0842               	movf	___flmul@temp+1,w
 15063     06B7  3DB8               	addwfc	___flmul@grs+1,f
 15064     06B8  3000               	movlw	0
 15065     06B9  3DB9               	addwfc	___flmul@grs+2,f
 15066     06BA  3DBA               	addwfc	___flmul@grs+3,f
 15067     06BB                     l4273:
 15068     06BB  3008               	movlw	8
 15069     06BC                     u4425:
 15070     06BC  35B7               	lslf	___flmul@grs,f
 15071     06BD  0DB8               	rlf	___flmul@grs+1,f
 15072     06BE  0DB9               	rlf	___flmul@grs+2,f
 15073     06BF  0DBA               	rlf	___flmul@grs+3,f
 15074     06C0  0B89               	decfsz	9,f
 15075     06C1  2EBC               	goto	u4425
 15076     06C2  0829               	movf	___flmul@b,w
 15077     06C3  00A0               	movwf	__Umul8_16@multiplicand
 15078     06C4  082D               	movf	___flmul@a,w
 15079     06C5  319E  26AF  3185   	fcall	__Umul8_16
 15080     06C8  0140               	movlb	0	; select bank0
 15081     06C9  0821               	movf	?__Umul8_16+1,w
 15082     06CA  00C2               	movwf	___flmul@temp+1
 15083     06CB  0820               	movf	?__Umul8_16,w
 15084     06CC  00C1               	movwf	___flmul@temp
 15085     06CD                     l4275:
 15086     06CD  0841               	movf	___flmul@temp,w
 15087     06CE  07B7               	addwf	___flmul@grs,f
 15088     06CF  0842               	movf	___flmul@temp+1,w
 15089     06D0  3DB8               	addwfc	___flmul@grs+1,f
 15090     06D1  3000               	movlw	0
 15091     06D2  3DB9               	addwfc	___flmul@grs+2,f
 15092     06D3  3DBA               	addwfc	___flmul@grs+3,f
 15093     06D4                     l4277:
 15094     06D4  082A               	movf	___flmul@b+1,w
 15095     06D5  00A0               	movwf	__Umul8_16@multiplicand
 15096     06D6  082F               	movf	___flmul@a+2,w
 15097     06D7  319E  26AF  3185   	fcall	__Umul8_16
 15098     06DA  0140               	movlb	0	; select bank0
 15099     06DB  0821               	movf	?__Umul8_16+1,w
 15100     06DC  00C2               	movwf	___flmul@temp+1
 15101     06DD  0820               	movf	?__Umul8_16,w
 15102     06DE  00C1               	movwf	___flmul@temp
 15103     06DF  0841               	movf	___flmul@temp,w
 15104     06E0  07BD               	addwf	___flmul@prod,f
 15105     06E1  0842               	movf	___flmul@temp+1,w
 15106     06E2  3DBE               	addwfc	___flmul@prod+1,f
 15107     06E3  3000               	movlw	0
 15108     06E4  3DBF               	addwfc	___flmul@prod+2,f
 15109     06E5  3DC0               	addwfc	___flmul@prod+3,f
 15110     06E6                     l4279:
 15111     06E6  082B               	movf	___flmul@b+2,w
 15112     06E7  00A0               	movwf	__Umul8_16@multiplicand
 15113     06E8  082E               	movf	___flmul@a+1,w
 15114     06E9  319E  26AF  3185   	fcall	__Umul8_16
 15115     06EC  0140               	movlb	0	; select bank0
 15116     06ED  0821               	movf	?__Umul8_16+1,w
 15117     06EE  00C2               	movwf	___flmul@temp+1
 15118     06EF  0820               	movf	?__Umul8_16,w
 15119     06F0  00C1               	movwf	___flmul@temp
 15120     06F1                     l4281:
 15121     06F1  0841               	movf	___flmul@temp,w
 15122     06F2  07BD               	addwf	___flmul@prod,f
 15123     06F3  0842               	movf	___flmul@temp+1,w
 15124     06F4  3DBE               	addwfc	___flmul@prod+1,f
 15125     06F5  3000               	movlw	0
 15126     06F6  3DBF               	addwfc	___flmul@prod+2,f
 15127     06F7  3DC0               	addwfc	___flmul@prod+3,f
 15128     06F8  082B               	movf	___flmul@b+2,w
 15129     06F9  00A0               	movwf	__Umul8_16@multiplicand
 15130     06FA  082F               	movf	___flmul@a+2,w
 15131     06FB  319E  26AF  3185   	fcall	__Umul8_16
 15132     06FE  0140               	movlb	0	; select bank0
 15133     06FF  0821               	movf	?__Umul8_16+1,w
 15134     0700  00C2               	movwf	___flmul@temp+1
 15135     0701  0820               	movf	?__Umul8_16,w
 15136     0702  00C1               	movwf	___flmul@temp
 15137     0703                     l4283:
 15138     0703  0841               	movf	___flmul@temp,w
 15139     0704  00B1               	movwf	??___flmul
 15140     0705  0842               	movf	___flmul@temp+1,w
 15141     0706  00B2               	movwf	??___flmul+1
 15142     0707  01B3               	clrf	??___flmul+2
 15143     0708  01B4               	clrf	??___flmul+3
 15144     0709  3008               	movlw	8
 15145     070A                     u4435:
 15146     070A  35B1               	lslf	??___flmul,f
 15147     070B  0DB2               	rlf	??___flmul+1,f
 15148     070C  0DB3               	rlf	??___flmul+2,f
 15149     070D  0DB4               	rlf	??___flmul+3,f
 15150     070E                     u4430:
 15151     070E  0B89               	decfsz	9,f
 15152     070F  2F0A               	goto	u4435
 15153     0710  0831               	movf	??___flmul,w
 15154     0711  07BD               	addwf	___flmul@prod,f
 15155     0712  0832               	movf	??___flmul+1,w
 15156     0713  3DBE               	addwfc	___flmul@prod+1,f
 15157     0714  0833               	movf	??___flmul+2,w
 15158     0715  3DBF               	addwfc	___flmul@prod+2,f
 15159     0716  0834               	movf	??___flmul+3,w
 15160     0717  3DC0               	addwfc	___flmul@prod+3,f
 15161     0718                     l4285:
 15162     0718  0837               	movf	___flmul@grs,w
 15163     0719  00B1               	movwf	??___flmul
 15164     071A  0838               	movf	___flmul@grs+1,w
 15165     071B  00B2               	movwf	??___flmul+1
 15166     071C  0839               	movf	___flmul@grs+2,w
 15167     071D  00B3               	movwf	??___flmul+2
 15168     071E  083A               	movf	___flmul@grs+3,w
 15169     071F  00B4               	movwf	??___flmul+3
 15170     0720  3018               	movlw	24
 15171     0721                     u4445:
 15172     0721  36B4               	lsrf	??___flmul+3,f
 15173     0722  0CB3               	rrf	??___flmul+2,f
 15174     0723  0CB2               	rrf	??___flmul+1,f
 15175     0724  0CB1               	rrf	??___flmul,f
 15176     0725                     u4440:
 15177     0725  0B89               	decfsz	9,f
 15178     0726  2F21               	goto	u4445
 15179     0727  0831               	movf	??___flmul,w
 15180     0728  07BD               	addwf	___flmul@prod,f
 15181     0729  0832               	movf	??___flmul+1,w
 15182     072A  3DBE               	addwfc	___flmul@prod+1,f
 15183     072B  0833               	movf	??___flmul+2,w
 15184     072C  3DBF               	addwfc	___flmul@prod+2,f
 15185     072D  0834               	movf	??___flmul+3,w
 15186     072E  3DC0               	addwfc	___flmul@prod+3,f
 15187     072F                     l4287:
 15188     072F  3008               	movlw	8
 15189     0730                     u4455:
 15190     0730  35B7               	lslf	___flmul@grs,f
 15191     0731  0DB8               	rlf	___flmul@grs+1,f
 15192     0732  0DB9               	rlf	___flmul@grs+2,f
 15193     0733  0DBA               	rlf	___flmul@grs+3,f
 15194     0734  0B89               	decfsz	9,f
 15195     0735  2F30               	goto	u4455
 15196     0736                     l4289:
 15197     0736  083C               	movf	___flmul@bexp,w
 15198     0737  073B               	addwf	___flmul@aexp,w
 15199     0738  00B1               	movwf	??___flmul
 15200     0739  01B2               	clrf	??___flmul+1
 15201     073A  0DB2               	rlf	??___flmul+1,f
 15202     073B  0831               	movf	??___flmul,w
 15203     073C  3E82               	addlw	130
 15204     073D  00C1               	movwf	___flmul@temp
 15205     073E  30FF               	movlw	255
 15206     073F  3D32               	addwfc	??___flmul+1,w
 15207     0740  00C2               	movwf	___flmul@temp+1
 15208     0741  2F59               	goto	l4301
 15209     0742                     l4291:
 15210     0742  3001               	movlw	1
 15211     0743                     u4465:
 15212     0743  35BD               	lslf	___flmul@prod,f
 15213     0744  0DBE               	rlf	___flmul@prod+1,f
 15214     0745  0DBF               	rlf	___flmul@prod+2,f
 15215     0746  0DC0               	rlf	___flmul@prod+3,f
 15216     0747  0B89               	decfsz	9,f
 15217     0748  2F43               	goto	u4465
 15218     0749                     l4293:
 15219     0749  1FBA               	btfss	___flmul@grs+3,7
 15220     074A  2F4C               	goto	u4471
 15221     074B  2F4D               	goto	u4470
 15222     074C                     u4471:
 15223     074C  2F4E               	goto	l4297
 15224     074D                     u4470:
 15225     074D                     l4295:
 15226     074D  143D               	bsf	___flmul@prod,0
 15227     074E                     l4297:
 15228     074E  3001               	movlw	1
 15229     074F                     u4485:
 15230     074F  35B7               	lslf	___flmul@grs,f
 15231     0750  0DB8               	rlf	___flmul@grs+1,f
 15232     0751  0DB9               	rlf	___flmul@grs+2,f
 15233     0752  0DBA               	rlf	___flmul@grs+3,f
 15234     0753  0B89               	decfsz	9,f
 15235     0754  2F4F               	goto	u4485
 15236     0755                     l4299:
 15237     0755  30FF               	movlw	255
 15238     0756  07C1               	addwf	___flmul@temp,f
 15239     0757  30FF               	movlw	255
 15240     0758  3DC2               	addwfc	___flmul@temp+1,f
 15241     0759                     l4301:
 15242     0759  1FBF               	btfss	___flmul@prod+2,7
 15243     075A  2F5C               	goto	u4491
 15244     075B  2F5D               	goto	u4490
 15245     075C                     u4491:
 15246     075C  2F42               	goto	l4291
 15247     075D                     u4490:
 15248     075D                     l4303:
 15249     075D  01BB               	clrf	___flmul@aexp
 15250     075E                     l4305:
 15251     075E  1FBA               	btfss	___flmul@grs+3,7
 15252     075F  2F61               	goto	u4501
 15253     0760  2F62               	goto	u4500
 15254     0761                     u4501:
 15255     0761  2F7E               	goto	l4313
 15256     0762                     u4500:
 15257     0762                     l4307:
 15258     0762  30FF               	movlw	255
 15259     0763  0537               	andwf	___flmul@grs,w
 15260     0764  00B1               	movwf	??___flmul
 15261     0765  30FF               	movlw	255
 15262     0766  0538               	andwf	___flmul@grs+1,w
 15263     0767  00B2               	movwf	??___flmul+1
 15264     0768  30FF               	movlw	255
 15265     0769  0539               	andwf	___flmul@grs+2,w
 15266     076A  00B3               	movwf	??___flmul+2
 15267     076B  307F               	movlw	127
 15268     076C  053A               	andwf	___flmul@grs+3,w
 15269     076D  00B4               	movwf	??___flmul+3
 15270     076E  0834               	movf	??___flmul+3,w
 15271     076F  0433               	iorwf	??___flmul+2,w
 15272     0770  0432               	iorwf	??___flmul+1,w
 15273     0771  0431               	iorwf	??___flmul,w
 15274     0772  1903               	skipnz
 15275     0773  2F75               	goto	u4511
 15276     0774  2F76               	goto	u4510
 15277     0775                     u4511:
 15278     0775  2F79               	goto	l1385
 15279     0776                     u4510:
 15280     0776                     l4309:
 15281     0776  01BB               	clrf	___flmul@aexp
 15282     0777  0ABB               	incf	___flmul@aexp,f
 15283     0778  2F7E               	goto	l4313
 15284     0779                     l1385:
 15285     0779  1C3D               	btfss	___flmul@prod,0
 15286     077A  2F7C               	goto	u4521
 15287     077B  2F7D               	goto	u4520
 15288     077C                     u4521:
 15289     077C  2F7E               	goto	l4313
 15290     077D                     u4520:
 15291     077D  2F76               	goto	l4309
 15292     077E                     l4313:
 15293     077E  083B               	movf	___flmul@aexp,w
 15294     077F  1903               	btfsc	3,2
 15295     0780  2F82               	goto	u4531
 15296     0781  2F83               	goto	u4530
 15297     0782                     u4531:
 15298     0782  2FAB               	goto	l4323
 15299     0783                     u4530:
 15300     0783                     l4315:
 15301     0783  3001               	movlw	1
 15302     0784  07BD               	addwf	___flmul@prod,f
 15303     0785  3000               	movlw	0
 15304     0786  3DBE               	addwfc	___flmul@prod+1,f
 15305     0787  3000               	movlw	0
 15306     0788  3DBF               	addwfc	___flmul@prod+2,f
 15307     0789  3000               	movlw	0
 15308     078A  3DC0               	addwfc	___flmul@prod+3,f
 15309     078B                     l4317:
 15310     078B  1C40               	btfss	___flmul@prod+3,0
 15311     078C  2F8E               	goto	u4541
 15312     078D  2F8F               	goto	u4540
 15313     078E                     u4541:
 15314     078E  2FAB               	goto	l4323
 15315     078F                     u4540:
 15316     078F                     l4319:
 15317     078F  083D               	movf	___flmul@prod,w
 15318     0790  00B1               	movwf	??___flmul
 15319     0791  083E               	movf	___flmul@prod+1,w
 15320     0792  00B2               	movwf	??___flmul+1
 15321     0793  083F               	movf	___flmul@prod+2,w
 15322     0794  00B3               	movwf	??___flmul+2
 15323     0795  0840               	movf	___flmul@prod+3,w
 15324     0796  00B4               	movwf	??___flmul+3
 15325     0797  3001               	movlw	1
 15326     0798  00B5               	movwf	??___flmul+4
 15327     0799                     u4555:
 15328     0799  37B4               	asrf	??___flmul+3,f
 15329     079A  0CB3               	rrf	??___flmul+2,f
 15330     079B  0CB2               	rrf	??___flmul+1,f
 15331     079C  0CB1               	rrf	??___flmul,f
 15332     079D                     u4550:
 15333     079D  0BB5               	decfsz	??___flmul+4,f
 15334     079E  2F99               	goto	u4555
 15335     079F  0834               	movf	??___flmul+3,w
 15336     07A0  00C0               	movwf	___flmul@prod+3
 15337     07A1  0833               	movf	??___flmul+2,w
 15338     07A2  00BF               	movwf	___flmul@prod+2
 15339     07A3  0832               	movf	??___flmul+1,w
 15340     07A4  00BE               	movwf	___flmul@prod+1
 15341     07A5  0831               	movf	??___flmul,w
 15342     07A6  00BD               	movwf	___flmul@prod
 15343     07A7                     l4321:
 15344     07A7  3001               	movlw	1
 15345     07A8  07C1               	addwf	___flmul@temp,f
 15346     07A9  3000               	movlw	0
 15347     07AA  3DC2               	addwfc	___flmul@temp+1,f
 15348     07AB                     l4323:
 15349     07AB  0842               	movf	___flmul@temp+1,w
 15350     07AC  3A80               	xorlw	128
 15351     07AD  00B1               	movwf	??___flmul
 15352     07AE  3080               	movlw	128
 15353     07AF  0231               	subwf	??___flmul,w
 15354     07B0  1D03               	skipz
 15355     07B1  2FB4               	goto	u4565
 15356     07B2  30FF               	movlw	255
 15357     07B3  0241               	subwf	___flmul@temp,w
 15358     07B4                     u4565:
 15359     07B4  1C03               	skipc
 15360     07B5  2FB7               	goto	u4561
 15361     07B6  2FB8               	goto	u4560
 15362     07B7                     u4561:
 15363     07B7  2FC2               	goto	l4327
 15364     07B8                     u4560:
 15365     07B8                     l4325:
 15366     07B8  307F               	movlw	127
 15367     07B9  0140               	movlb	0	; select bank0
 15368     07BA  00C0               	movwf	___flmul@prod+3
 15369     07BB  3080               	movlw	128
 15370     07BC  00BF               	movwf	___flmul@prod+2
 15371     07BD  3000               	movlw	0
 15372     07BE  00BE               	movwf	___flmul@prod+1
 15373     07BF  3000               	movlw	0
 15374     07C0  00BD               	movwf	___flmul@prod
 15375     07C1  2FED               	goto	l1391
 15376     07C2                     l4327:
 15377     07C2  0140               	movlb	0	; select bank0
 15378     07C3  0842               	movf	___flmul@temp+1,w
 15379     07C4  3A80               	xorlw	128
 15380     07C5  00B1               	movwf	??___flmul
 15381     07C6  3080               	movlw	128
 15382     07C7  0231               	subwf	??___flmul,w
 15383     07C8  1D03               	skipz
 15384     07C9  2FCC               	goto	u4575
 15385     07CA  3001               	movlw	1
 15386     07CB  0241               	subwf	___flmul@temp,w
 15387     07CC                     u4575:
 15388     07CC  1803               	skipnc
 15389     07CD  2FCF               	goto	u4571
 15390     07CE  2FD0               	goto	u4570
 15391     07CF                     u4571:
 15392     07CF  2FDB               	goto	l4333
 15393     07D0                     u4570:
 15394     07D0                     l4329:
 15395     07D0  3000               	movlw	0
 15396     07D1  0140               	movlb	0	; select bank0
 15397     07D2  00C0               	movwf	___flmul@prod+3
 15398     07D3  3000               	movlw	0
 15399     07D4  00BF               	movwf	___flmul@prod+2
 15400     07D5  3000               	movlw	0
 15401     07D6  00BE               	movwf	___flmul@prod+1
 15402     07D7  3000               	movlw	0
 15403     07D8  00BD               	movwf	___flmul@prod
 15404     07D9                     l4331:
 15405     07D9  01B6               	clrf	___flmul@sign
 15406     07DA  2FED               	goto	l1391
 15407     07DB                     l4333:
 15408     07DB  0140               	movlb	0	; select bank0
 15409     07DC  0841               	movf	___flmul@temp,w
 15410     07DD  00BC               	movwf	___flmul@bexp
 15411     07DE  30FF               	movlw	255
 15412     07DF  05BD               	andwf	___flmul@prod,f
 15413     07E0  30FF               	movlw	255
 15414     07E1  05BE               	andwf	___flmul@prod+1,f
 15415     07E2  307F               	movlw	127
 15416     07E3  05BF               	andwf	___flmul@prod+2,f
 15417     07E4  3000               	movlw	0
 15418     07E5  05C0               	andwf	___flmul@prod+3,f
 15419     07E6                     l4335:
 15420     07E6  1C3C               	btfss	___flmul@bexp,0
 15421     07E7  2FE9               	goto	u4581
 15422     07E8  2FEA               	goto	u4580
 15423     07E9                     u4581:
 15424     07E9  2FEB               	goto	l4339
 15425     07EA                     u4580:
 15426     07EA                     l4337:
 15427     07EA  17BF               	bsf	___flmul@prod+2,7
 15428     07EB                     l4339:
 15429     07EB  363C               	lsrf	___flmul@bexp,w
 15430     07EC  00C0               	movwf	___flmul@prod+3
 15431     07ED                     l1391:
 15432     07ED  0836               	movf	___flmul@sign,w
 15433     07EE  00B1               	movwf	??___flmul
 15434     07EF  0831               	movf	??___flmul,w
 15435     07F0  04C0               	iorwf	___flmul@prod+3,f
 15436     07F1                     l4341:
 15437     07F1  0840               	movf	___flmul@prod+3,w
 15438     07F2  00AC               	movwf	?___flmul+3
 15439     07F3  083F               	movf	___flmul@prod+2,w
 15440     07F4  00AB               	movwf	?___flmul+2
 15441     07F5  083E               	movf	___flmul@prod+1,w
 15442     07F6  00AA               	movwf	?___flmul+1
 15443     07F7  083D               	movf	___flmul@prod,w
 15444     07F8  00A9               	movwf	?___flmul
 15445     07F9                     l1379:
 15446     07F9  0008               	return
 15447     07FA                     __end_of___flmul:
 15448                           
 15449                           	psect	text39
 15450     1EAF                     __ptext39:	
 15451 ;; *************** function __Umul8_16 *****************
 15452 ;; Defined at:
 15453 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8_16.c"
 15454 ;; Parameters:    Size  Location     Type
 15455 ;;  multiplier      1    wreg     unsigned char 
 15456 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15457 ;; Auto vars:     Size  Location     Type
 15458 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15459 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15460 ;;  product         2    4[BANK0 ] unsigned int 
 15461 ;; Return value:  Size  Location     Type
 15462 ;;                  2    0[BANK0 ] unsigned int 
 15463 ;; Registers used:
 15464 ;;		wreg, status,2, status,0
 15465 ;; Tracked objects:
 15466 ;;		On entry : 0/0
 15467 ;;		On exit  : 0/0
 15468 ;;		Unchanged: 0/0
 15469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15471 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15472 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;Total ram usage:        9 bytes
 15475 ;; Hardware stack levels used: 1
 15476 ;; Hardware stack levels required when called: 2
 15477 ;; This function calls:
 15478 ;;		Nothing
 15479 ;; This function is called by:
 15480 ;;		___flmul
 15481 ;; This function uses a non-reentrant model
 15482 ;;
 15483                           
 15484     1EAF                     __Umul8_16:	
 15485                           ;psect for function __Umul8_16
 15486                           
 15487                           
 15488                           ;incstack = 0
 15489                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15490                           ;__Umul8_16@multiplier stored from wreg
 15491     1EAF  0140               	movlb	0	; select bank0
 15492     1EB0  00A8               	movwf	__Umul8_16@multiplier
 15493     1EB1                     l3811:
 15494     1EB1  01A4               	clrf	__Umul8_16@product
 15495     1EB2  01A5               	clrf	__Umul8_16@product+1
 15496     1EB3                     l3813:
 15497     1EB3  0820               	movf	__Umul8_16@multiplicand,w
 15498     1EB4  00A2               	movwf	??__Umul8_16
 15499     1EB5  01A3               	clrf	??__Umul8_16+1
 15500     1EB6  0822               	movf	??__Umul8_16,w
 15501     1EB7  00A6               	movwf	__Umul8_16@word_mpld
 15502     1EB8  0823               	movf	??__Umul8_16+1,w
 15503     1EB9  00A7               	movwf	__Umul8_16@word_mpld+1
 15504     1EBA                     l3815:
 15505     1EBA  1C28               	btfss	__Umul8_16@multiplier,0
 15506     1EBB  2EBD               	goto	u3561
 15507     1EBC  2EBE               	goto	u3560
 15508     1EBD                     u3561:
 15509     1EBD  2EC2               	goto	l1398
 15510     1EBE                     u3560:
 15511     1EBE                     l3817:
 15512     1EBE  0826               	movf	__Umul8_16@word_mpld,w
 15513     1EBF  07A4               	addwf	__Umul8_16@product,f
 15514     1EC0  0827               	movf	__Umul8_16@word_mpld+1,w
 15515     1EC1  3DA5               	addwfc	__Umul8_16@product+1,f
 15516     1EC2                     l1398:
 15517     1EC2  3001               	movlw	1
 15518     1EC3                     u3575:
 15519     1EC3  35A6               	lslf	__Umul8_16@word_mpld,f
 15520     1EC4  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15521     1EC5  0B89               	decfsz	9,f
 15522     1EC6  2EC3               	goto	u3575
 15523     1EC7  1003               	clrc
 15524     1EC8  0CA8               	rrf	__Umul8_16@multiplier,f
 15525     1EC9                     l3819:
 15526     1EC9  0828               	movf	__Umul8_16@multiplier,w
 15527     1ECA  1D03               	btfss	3,2
 15528     1ECB  2ECD               	goto	u3581
 15529     1ECC  2ECE               	goto	u3580
 15530     1ECD                     u3581:
 15531     1ECD  2EBA               	goto	l3815
 15532     1ECE                     u3580:
 15533     1ECE                     l3821:
 15534     1ECE  0825               	movf	__Umul8_16@product+1,w
 15535     1ECF  00A1               	movwf	?__Umul8_16+1
 15536     1ED0  0824               	movf	__Umul8_16@product,w
 15537     1ED1  00A0               	movwf	?__Umul8_16
 15538     1ED2                     l1400:
 15539     1ED2  0008               	return
 15540     1ED3                     __end_of__Umul8_16:
 15541                           
 15542                           	psect	text40
 15543     1DFA                     __ptext40:	
 15544 ;; *************** function _get_measured_adc_value *****************
 15545 ;; Defined at:
 15546 ;;		line 79 in file "calibration.c"
 15547 ;; Parameters:    Size  Location     Type
 15548 ;;  sensor_value    1    wreg     PTR struct values
 15549 ;;		 -> main@sensor_value(17), 
 15550 ;; Auto vars:     Size  Location     Type
 15551 ;;  sensor_value    1    0[BANK0 ] PTR struct values
 15552 ;;		 -> main@sensor_value(17), 
 15553 ;;  ph_adc_value    2    0        unsigned int 
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  1    wreg      void 
 15556 ;; Registers used:
 15557 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15564 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15567 ;;Total ram usage:        1 bytes
 15568 ;; Hardware stack levels used: 1
 15569 ;; Hardware stack levels required when called: 2
 15570 ;; This function calls:
 15571 ;;		Nothing
 15572 ;; This function is called by:
 15573 ;;		_main
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577     1DFA                     _get_measured_adc_value:	
 15578                           ;psect for function _get_measured_adc_value
 15579                           
 15580                           
 15581                           ;incstack = 0
 15582                           ; Regs used in _get_measured_adc_value: [wreg+fsr1l+fsr1h+status,2+status,0]
 15583                           ;get_measured_adc_value@sensor_value stored from wreg
 15584     1DFA  0140               	movlb	0	; select bank0
 15585     1DFB  00A0               	movwf	get_measured_adc_value@sensor_value
 15586     1DFC                     l4611:
 15587     1DFC                     l4613:
 15588                           
 15589                           ;calibration.c: 88: sensor_value->ph_ADC_High_byte = test_recived_data[3];
 15590     1DFC  0820               	movf	get_measured_adc_value@sensor_value,w
 15591     1DFD  3E03               	addlw	3
 15592     1DFE  0086               	movwf	6
 15593     1DFF  0187               	clrf	7
 15594     1E00  0142               	movlb	2	; select bank2
 15595     1E01  0860               	movf	(_test_recived_data^(0+256)+3),w
 15596     1E02  0081               	movwf	1
 15597     1E03                     l4615:
 15598                           
 15599                           ;calibration.c: 89: sensor_value->ph_ADC_Low_byte = test_recived_data[4];
 15600     1E03  0140               	movlb	0	; select bank0
 15601     1E04  0820               	movf	get_measured_adc_value@sensor_value,w
 15602     1E05  3E04               	addlw	4
 15603     1E06  0086               	movwf	6
 15604     1E07  0187               	clrf	7
 15605     1E08  0142               	movlb	2	; select bank2
 15606     1E09  0861               	movf	(_test_recived_data^(0+256)+4),w
 15607     1E0A  0081               	movwf	1
 15608     1E0B                     l4617:
 15609                           
 15610                           ;calibration.c: 90: sensor_value->ph_ADC_value = (test_recived_data[3] << 8) | test_reci
      +                          ved_data[4];
 15611     1E0B  0140               	movlb	0	; select bank0
 15612     1E0C  0A20               	incf	get_measured_adc_value@sensor_value,w
 15613     1E0D  0086               	movwf	6
 15614     1E0E  0187               	clrf	7
 15615     1E0F  0142               	movlb	2	; select bank2
 15616     1E10  0861               	movf	(_test_recived_data^(0+256)+4),w
 15617     1E11  3FC0               	movwi [0]fsr1
 15618     1E12  0860               	movf	(_test_recived_data^(0+256)+3),w
 15619     1E13  3FC1               	movwi [1]fsr1
 15620     1E14                     l675:
 15621     1E14  0008               	return
 15622     1E15                     __end_of_get_measured_adc_value:
 15623                           
 15624                           	psect	text41
 15625     1CB8                     __ptext41:	
 15626 ;; *************** function _dump_memory_map *****************
 15627 ;; Defined at:
 15628 ;;		line 121 in file "i2c_slave.c"
 15629 ;; Parameters:    Size  Location     Type
 15630 ;;		None
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  1    wreg      void 
 15635 ;; Registers used:
 15636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15646 ;;Total ram usage:        0 bytes
 15647 ;; Hardware stack levels used: 1
 15648 ;; Hardware stack levels required when called: 5
 15649 ;; This function calls:
 15650 ;;		_dump_buffer
 15651 ;; This function is called by:
 15652 ;;		_main
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656     1CB8                     _dump_memory_map:	
 15657                           ;psect for function _dump_memory_map
 15658                           
 15659     1CB8                     l4619:	
 15660                           ;incstack = 0
 15661                           ; Regs used in _dump_memory_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15662                           
 15663                           
 15664                           ;i2c_slave.c: 122: dump_buffer(slaveData, sizeof(slaveData));
 15665     1CB8  3040               	movlw	64
 15666     1CB9  0140               	movlb	0	; select bank0
 15667     1CBA  00D2               	movwf	dump_buffer@size
 15668     1CBB  3000               	movlw	0
 15669     1CBC  00D3               	movwf	dump_buffer@size+1
 15670     1CBD  30A0               	movlw	(low (_slaveData| (0+256)))& (0+255)
 15671     1CBE  3197  2739  319C   	fcall	_dump_buffer
 15672     1CC1                     l276:
 15673     1CC1  0008               	return
 15674     1CC2                     __end_of_dump_memory_map:
 15675                           
 15676                           	psect	text42
 15677     1739                     __ptext42:	
 15678 ;; *************** function _dump_buffer *****************
 15679 ;; Defined at:
 15680 ;;		line 7 in file "my_helpers.c"
 15681 ;; Parameters:    Size  Location     Type
 15682 ;;  buffer          1    wreg     PTR const void 
 15683 ;;		 -> slaveData(64), 
 15684 ;;  size            2   50[BANK0 ] unsigned int 
 15685 ;; Auto vars:     Size  Location     Type
 15686 ;;  buffer          1   58[BANK0 ] PTR const void 
 15687 ;;		 -> slaveData(64), 
 15688 ;;  j               2   62[BANK0 ] unsigned int 
 15689 ;;  i               2   60[BANK0 ] unsigned int 
 15690 ;;  p               1   59[BANK0 ] PTR const unsigned char 
 15691 ;;		 -> slaveData(64), 
 15692 ;; Return value:  Size  Location     Type
 15693 ;;                  1    wreg      void 
 15694 ;; Registers used:
 15695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15696 ;; Tracked objects:
 15697 ;;		On entry : 0/0
 15698 ;;		On exit  : 0/0
 15699 ;;		Unchanged: 0/0
 15700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15702 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15703 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15704 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15705 ;;Total ram usage:       14 bytes
 15706 ;; Hardware stack levels used: 1
 15707 ;; Hardware stack levels required when called: 4
 15708 ;; This function calls:
 15709 ;;		_isprint
 15710 ;;		_printf
 15711 ;; This function is called by:
 15712 ;;		_dump_memory_map
 15713 ;; This function uses a non-reentrant model
 15714 ;;
 15715                           
 15716     1739                     _dump_buffer:	
 15717                           ;psect for function _dump_buffer
 15718                           
 15719                           
 15720                           ;incstack = 0
 15721                           ; Regs used in _dump_buffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15722                           ;dump_buffer@buffer stored from wreg
 15723     1739  0140               	movlb	0	; select bank0
 15724     173A  00DA               	movwf	dump_buffer@buffer
 15725     173B                     l3919:
 15726                           
 15727                           ;my_helpers.c: 8: const uint8_t *p = (const uint8_t *)buffer;
 15728     173B  085A               	movf	dump_buffer@buffer,w
 15729     173C  00DB               	movwf	dump_buffer@p
 15730     173D                     l3921:
 15731                           
 15732                           ;my_helpers.c: 9: size_t i, j;;my_helpers.c: 11: for (i = 0; i < size; i += 16) {
 15733     173D  01DC               	clrf	dump_buffer@i
 15734     173E  01DD               	clrf	dump_buffer@i+1
 15735     173F  2FF5               	goto	l3967
 15736     1740                     l3923:
 15737                           
 15738                           ;my_helpers.c: 12: printf("%08x:", (unsigned int)i);
 15739     1740  3070               	movlw	low (STR_12| (0+32768))
 15740     1741  00AE               	movwf	printf@f
 15741     1742  309A               	movlw	high (STR_12| (0+32768))
 15742     1743  00AF               	movwf	printf@f+1
 15743     1744  085D               	movf	dump_buffer@i+1,w
 15744     1745  00B1               	movwf	?_printf+3
 15745     1746  085C               	movf	dump_buffer@i,w
 15746     1747  00B0               	movwf	?_printf+2
 15747     1748  3180  20C1  3197   	fcall	_printf
 15748     174B                     l3925:
 15749                           
 15750                           ;my_helpers.c: 13: for (j = 0; j < 16; j++) {
 15751     174B  0140               	movlb	0	; select bank0
 15752     174C  01DE               	clrf	dump_buffer@j
 15753     174D  01DF               	clrf	dump_buffer@j+1
 15754     174E                     l3931:
 15755                           
 15756                           ;my_helpers.c: 14: if (i + j < size) {
 15757     174E  085E               	movf	dump_buffer@j,w
 15758     174F  075C               	addwf	dump_buffer@i,w
 15759     1750  00D4               	movwf	??_dump_buffer
 15760     1751  085F               	movf	dump_buffer@j+1,w
 15761     1752  3D5D               	addwfc	dump_buffer@i+1,w
 15762     1753  00D5               	movwf	??_dump_buffer+1
 15763     1754  0853               	movf	dump_buffer@size+1,w
 15764     1755  0255               	subwf	??_dump_buffer+1,w
 15765     1756  1D03               	skipz
 15766     1757  2F5A               	goto	u3675
 15767     1758  0852               	movf	dump_buffer@size,w
 15768     1759  0254               	subwf	??_dump_buffer,w
 15769     175A                     u3675:
 15770     175A  1803               	skipnc
 15771     175B  2F5D               	goto	u3671
 15772     175C  2F5E               	goto	u3670
 15773     175D                     u3671:
 15774     175D  2F77               	goto	l3935
 15775     175E                     u3670:
 15776     175E                     l3933:
 15777                           
 15778                           ;my_helpers.c: 15: printf(" %02x", p[i + j]);
 15779     175E  3076               	movlw	low (STR_13| (0+32768))
 15780     175F  00AE               	movwf	printf@f
 15781     1760  309A               	movlw	high (STR_13| (0+32768))
 15782     1761  00AF               	movwf	printf@f+1
 15783     1762  085C               	movf	dump_buffer@i,w
 15784     1763  075B               	addwf	dump_buffer@p,w
 15785     1764  00D4               	movwf	??_dump_buffer
 15786     1765  085E               	movf	dump_buffer@j,w
 15787     1766  0754               	addwf	??_dump_buffer,w
 15788     1767  00D5               	movwf	??_dump_buffer+1
 15789     1768  0855               	movf	??_dump_buffer+1,w
 15790     1769  0086               	movwf	6
 15791     176A  3001               	movlw	1	; select bank2/3
 15792     176B  0087               	movwf	7
 15793     176C  0801               	movf	1,w
 15794     176D  00D6               	movwf	??_dump_buffer+2
 15795     176E  01D7               	clrf	??_dump_buffer+3
 15796     176F  0856               	movf	??_dump_buffer+2,w
 15797     1770  00B0               	movwf	?_printf+2
 15798     1771  0857               	movf	??_dump_buffer+3,w
 15799     1772  00B1               	movwf	?_printf+3
 15800     1773  3180  20C1  3197   	fcall	_printf
 15801                           
 15802                           ;my_helpers.c: 16: } else {
 15803     1776  2F7E               	goto	l3937
 15804     1777                     l3935:
 15805                           
 15806                           ;my_helpers.c: 17: printf("   ");
 15807     1777  307C               	movlw	low (STR_14| (0+32768))
 15808     1778  00AE               	movwf	printf@f
 15809     1779  309A               	movlw	high (STR_14| (0+32768))
 15810     177A  00AF               	movwf	printf@f+1
 15811     177B  3180  20C1  3197   	fcall	_printf
 15812     177E                     l3937:
 15813     177E  3001               	movlw	1
 15814     177F  0140               	movlb	0	; select bank0
 15815     1780  07DE               	addwf	dump_buffer@j,f
 15816     1781  3000               	movlw	0
 15817     1782  3DDF               	addwfc	dump_buffer@j+1,f
 15818     1783                     l3939:
 15819     1783  3000               	movlw	0
 15820     1784  025F               	subwf	dump_buffer@j+1,w
 15821     1785  3010               	movlw	16
 15822     1786  1903               	skipnz
 15823     1787  025E               	subwf	dump_buffer@j,w
 15824     1788  1C03               	skipc
 15825     1789  2F8B               	goto	u3681
 15826     178A  2F8C               	goto	u3680
 15827     178B                     u3681:
 15828     178B  2F4E               	goto	l3931
 15829     178C                     u3680:
 15830     178C                     l3941:
 15831                           
 15832                           ;my_helpers.c: 18: };my_helpers.c: 19: };my_helpers.c: 20: printf("  ");
 15833     178C  307D               	movlw	low ((STR_14+1)| (0+32768))
 15834     178D  00AE               	movwf	printf@f
 15835     178E  309A               	movlw	high ((STR_14+1)| (0+32768))
 15836     178F  00AF               	movwf	printf@f+1
 15837     1790  3180  20C1  3197   	fcall	_printf
 15838     1793                     l3943:
 15839                           
 15840                           ;my_helpers.c: 21: for (j = 0; j < 16; j++) {
 15841     1793  0140               	movlb	0	; select bank0
 15842     1794  01DE               	clrf	dump_buffer@j
 15843     1795  01DF               	clrf	dump_buffer@j+1
 15844     1796                     l3949:
 15845                           
 15846                           ;my_helpers.c: 22: if (i + j < size) {
 15847     1796  085E               	movf	dump_buffer@j,w
 15848     1797  075C               	addwf	dump_buffer@i,w
 15849     1798  00D4               	movwf	??_dump_buffer
 15850     1799  085F               	movf	dump_buffer@j+1,w
 15851     179A  3D5D               	addwfc	dump_buffer@i+1,w
 15852     179B  00D5               	movwf	??_dump_buffer+1
 15853     179C  0853               	movf	dump_buffer@size+1,w
 15854     179D  0255               	subwf	??_dump_buffer+1,w
 15855     179E  1D03               	skipz
 15856     179F  2FA2               	goto	u3695
 15857     17A0  0852               	movf	dump_buffer@size,w
 15858     17A1  0254               	subwf	??_dump_buffer,w
 15859     17A2                     u3695:
 15860     17A2  1803               	skipnc
 15861     17A3  2FA5               	goto	u3691
 15862     17A4  2FA6               	goto	u3690
 15863     17A5                     u3691:
 15864     17A5  2FDB               	goto	l3959
 15865     17A6                     u3690:
 15866     17A6                     l3951:
 15867                           
 15868                           ;my_helpers.c: 23: printf("%c", isprint(p[i + j]) ? p[i + j] : '.');
 15869     17A6  085C               	movf	dump_buffer@i,w
 15870     17A7  075B               	addwf	dump_buffer@p,w
 15871     17A8  00D4               	movwf	??_dump_buffer
 15872     17A9  085E               	movf	dump_buffer@j,w
 15873     17AA  0754               	addwf	??_dump_buffer,w
 15874     17AB  00D5               	movwf	??_dump_buffer+1
 15875     17AC  0855               	movf	??_dump_buffer+1,w
 15876     17AD  0086               	movwf	6
 15877     17AE  3001               	movlw	1	; select bank2/3
 15878     17AF  0087               	movwf	7
 15879     17B0  0801               	movf	1,w
 15880     17B1  319D  253A  3197   	fcall	_isprint
 15881     17B4  1803               	btfsc	3,0
 15882     17B5  2FB7               	goto	u3701
 15883     17B6  2FB8               	goto	u3700
 15884     17B7                     u3701:
 15885     17B7  2FBE               	goto	l3955
 15886     17B8                     u3700:
 15887     17B8                     l3953:
 15888     17B8  302E               	movlw	46
 15889     17B9  0140               	movlb	0	; select bank0
 15890     17BA  00D8               	movwf	_dump_buffer$886
 15891     17BB  3000               	movlw	0
 15892     17BC  00D9               	movwf	_dump_buffer$886+1
 15893     17BD  2FD0               	goto	l3957
 15894     17BE                     l3955:
 15895     17BE  0140               	movlb	0	; select bank0
 15896     17BF  085C               	movf	dump_buffer@i,w
 15897     17C0  075B               	addwf	dump_buffer@p,w
 15898     17C1  00D4               	movwf	??_dump_buffer
 15899     17C2  085E               	movf	dump_buffer@j,w
 15900     17C3  0754               	addwf	??_dump_buffer,w
 15901     17C4  00D5               	movwf	??_dump_buffer+1
 15902     17C5  0855               	movf	??_dump_buffer+1,w
 15903     17C6  0086               	movwf	6
 15904     17C7  3001               	movlw	1	; select bank2/3
 15905     17C8  0087               	movwf	7
 15906     17C9  0801               	movf	1,w
 15907     17CA  00D6               	movwf	??_dump_buffer+2
 15908     17CB  01D7               	clrf	??_dump_buffer+3
 15909     17CC  0856               	movf	??_dump_buffer+2,w
 15910     17CD  00D8               	movwf	_dump_buffer$886
 15911     17CE  0857               	movf	??_dump_buffer+3,w
 15912     17CF  00D9               	movwf	_dump_buffer$886+1
 15913     17D0                     l3957:
 15914     17D0  3080               	movlw	low (STR_16| (0+32768))
 15915     17D1  00AE               	movwf	printf@f
 15916     17D2  309A               	movlw	high (STR_16| (0+32768))
 15917     17D3  00AF               	movwf	printf@f+1
 15918     17D4  0859               	movf	_dump_buffer$886+1,w
 15919     17D5  00B1               	movwf	?_printf+3
 15920     17D6  0858               	movf	_dump_buffer$886,w
 15921     17D7  00B0               	movwf	?_printf+2
 15922     17D8  3180  20C1  3197   	fcall	_printf
 15923     17DB                     l3959:
 15924     17DB  3001               	movlw	1
 15925     17DC  0140               	movlb	0	; select bank0
 15926     17DD  07DE               	addwf	dump_buffer@j,f
 15927     17DE  3000               	movlw	0
 15928     17DF  3DDF               	addwfc	dump_buffer@j+1,f
 15929     17E0                     l3961:
 15930     17E0  3000               	movlw	0
 15931     17E1  025F               	subwf	dump_buffer@j+1,w
 15932     17E2  3010               	movlw	16
 15933     17E3  1903               	skipnz
 15934     17E4  025E               	subwf	dump_buffer@j,w
 15935     17E5  1C03               	skipc
 15936     17E6  2FE8               	goto	u3711
 15937     17E7  2FE9               	goto	u3710
 15938     17E8                     u3711:
 15939     17E8  2F96               	goto	l3949
 15940     17E9                     u3710:
 15941     17E9                     l3963:
 15942                           
 15943                           ;my_helpers.c: 24: };my_helpers.c: 25: };my_helpers.c: 26: printf("\r\n");
 15944     17E9  30B6               	movlw	low ((STR_29+61)| (0+32768))
 15945     17EA  00AE               	movwf	printf@f
 15946     17EB  3098               	movlw	high ((STR_29+61)| (0+32768))
 15947     17EC  00AF               	movwf	printf@f+1
 15948     17ED  3180  20C1  3197   	fcall	_printf
 15949     17F0                     l3965:
 15950     17F0  3010               	movlw	16
 15951     17F1  0140               	movlb	0	; select bank0
 15952     17F2  07DC               	addwf	dump_buffer@i,f
 15953     17F3  3000               	movlw	0
 15954     17F4  3DDD               	addwfc	dump_buffer@i+1,f
 15955     17F5                     l3967:
 15956     17F5  0853               	movf	dump_buffer@size+1,w
 15957     17F6  025D               	subwf	dump_buffer@i+1,w
 15958     17F7  1D03               	skipz
 15959     17F8  2FFB               	goto	u3725
 15960     17F9  0852               	movf	dump_buffer@size,w
 15961     17FA  025C               	subwf	dump_buffer@i,w
 15962     17FB                     u3725:
 15963     17FB  1C03               	skipc
 15964     17FC  2FFE               	goto	u3721
 15965     17FD  2FFF               	goto	u3720
 15966     17FE                     u3721:
 15967     17FE  2F40               	goto	l3923
 15968     17FF                     u3720:
 15969     17FF                     l312:
 15970     17FF  0008               	return
 15971     1800                     __end_of_dump_buffer:
 15972                           
 15973                           	psect	text43
 15974     00C1                     __ptext43:	
 15975 ;; *************** function _printf *****************
 15976 ;; Defined at:
 15977 ;;		line 477 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
 15978 ;; Parameters:    Size  Location     Type
 15979 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 15980 ;;		 -> STR_31(235), STR_30(232), STR_29(64), STR_28(11), 
 15981 ;;		 -> STR_27(9), STR_26(59), STR_25(17), STR_24(17), 
 15982 ;;		 -> STR_23(13), STR_22(13), STR_19(3), STR_18(6), 
 15983 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(4), 
 15984 ;;		 -> STR_13(6), STR_12(6), STR_11(36), STR_10(37), 
 15985 ;;		 -> STR_9(121), STR_8(35), STR_7(8), STR_6(38), 
 15986 ;;		 -> STR_5(8), STR_4(35), STR_2(9), STR_1(22), 
 15987 ;; Auto vars:     Size  Location     Type
 15988 ;;  idx             1   36[BANK0 ] unsigned char 
 15989 ;;  tmpval          4    0        struct .
 15990 ;;  flag            2   48[BANK0 ] unsigned short 
 15991 ;;  width           2   45[BANK0 ] int 
 15992 ;;  val             2   42[BANK0 ] unsigned int 
 15993 ;;  len             2   39[BANK0 ] unsigned int 
 15994 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
 15995 ;;		 -> STR_32(7), printf@c(1), ?_printf(2), slaveData(64), 
 15996 ;;		 -> sensor_value.temp_value(2), sensor_value.ph_ADC_Low_byte(1), sensor_value.ph_ADC_High_byte(1), sensor_value.ph_A
      +DC_value(2), 
 15997 ;;		 -> sensor_value.ph_value(1), STR_3(11), 
 15998 ;;  c               1   47[BANK0 ] unsigned char 
 15999 ;;  prec            1   44[BANK0 ] char 
 16000 ;;  ap              1   41[BANK0 ] PTR void [1]
 16001 ;;		 -> ?_printf(2), 
 16002 ;; Return value:  Size  Location     Type
 16003 ;;                  2   14[BANK0 ] int 
 16004 ;; Registers used:
 16005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16006 ;; Tracked objects:
 16007 ;;		On entry : 0/0
 16008 ;;		On exit  : 0/0
 16009 ;;		Unchanged: 0/0
 16010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16011 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16012 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16013 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16014 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;Total ram usage:       36 bytes
 16016 ;; Hardware stack levels used: 1
 16017 ;; Hardware stack levels required when called: 3
 16018 ;; This function calls:
 16019 ;;		___bmul
 16020 ;;		___lwdiv
 16021 ;;		___lwmod
 16022 ;;		___wmul
 16023 ;;		_isdigit
 16024 ;;		_putch
 16025 ;; This function is called by:
 16026 ;;		_main
 16027 ;;		_dump_buffer
 16028 ;;		_monitoring_sync
 16029 ;;		_measurement
 16030 ;;		_get_measured_value
 16031 ;;		_measured_adc
 16032 ;;		_save_top_adc_point
 16033 ;;		_save_bottom_adc_point
 16034 ;;		_print_buffer
 16035 ;; This function uses a non-reentrant model
 16036 ;;
 16037                           
 16038     00C1                     _printf:	
 16039                           ;psect for function _printf
 16040                           
 16041     00C1                     l3431:	
 16042                           ;incstack = 0
 16043                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16044                           
 16045                           
 16046                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 540: union {;doprnt.
      +                          c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c
      +                          : 545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;do
      +                          prnt.c: 550: *ap = __va_start();
 16047     00C1  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
 16048     00C2  0140               	movlb	0	; select bank0
 16049     00C3  00C9               	movwf	printf@ap
 16050                           
 16051                           ;doprnt.c: 553: while((c = *f++)) {
 16052     00C4  2DAB               	goto	l3745
 16053     00C5                     l3433:
 16054                           
 16055                           ;doprnt.c: 555: if(c != '%')
 16056     00C5  3025               	movlw	37
 16057     00C6  064F               	xorwf	printf@c,w
 16058     00C7  1903               	btfsc	3,2
 16059     00C8  28CA               	goto	u2801
 16060     00C9  28CB               	goto	u2800
 16061     00CA                     u2801:
 16062     00CA  28D0               	goto	l3437
 16063     00CB                     u2800:
 16064     00CB                     l3435:
 16065                           
 16066                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
 16067     00CB  084F               	movf	printf@c,w
 16068     00CC  319C  24D7  3180   	fcall	_putch
 16069                           
 16070                           ;doprnt.c: 559: continue;
 16071     00CF  2DAB               	goto	l3745
 16072     00D0                     l3437:
 16073                           
 16074                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 16075     00D0  01CD               	clrf	printf@width
 16076     00D1  01CE               	clrf	printf@width+1
 16077                           
 16078                           ;doprnt.c: 565: flag = 0;
 16079     00D2  01D0               	clrf	printf@flag
 16080     00D3  01D1               	clrf	printf@flag+1
 16081     00D4  28E1               	goto	l3449
 16082     00D5                     l855:	
 16083                           ;doprnt.c: 570: case '-':
 16084                           
 16085                           
 16086                           ;doprnt.c: 571: flag |= 0x08;
 16087     00D5  15D0               	bsf	printf@flag,3
 16088     00D6                     l3439:
 16089                           
 16090                           ;doprnt.c: 572: f++;
 16091     00D6  3001               	movlw	1
 16092     00D7  07AE               	addwf	printf@f,f
 16093     00D8  3000               	movlw	0
 16094     00D9  3DAF               	addwfc	printf@f+1,f
 16095                           
 16096                           ;doprnt.c: 573: continue;
 16097     00DA  28E1               	goto	l3449
 16098     00DB                     l857:	
 16099                           ;doprnt.c: 577: case ' ':
 16100                           
 16101                           
 16102                           ;doprnt.c: 578: flag |= 0x01;
 16103     00DB  1450               	bsf	printf@flag,0
 16104     00DC  28D6               	goto	l3439
 16105     00DD                     l858:	
 16106                           ;doprnt.c: 590: case '#':
 16107                           
 16108                           
 16109                           ;doprnt.c: 591: flag |= 0x800;
 16110     00DD  15D1               	bsf	printf@flag+1,3
 16111     00DE  28D6               	goto	l3439
 16112     00DF                     l859:	
 16113                           ;doprnt.c: 596: case '0':
 16114                           
 16115                           
 16116                           ;doprnt.c: 597: flag |= 0x04;
 16117     00DF  1550               	bsf	printf@flag,2
 16118     00E0  28D6               	goto	l3439
 16119     00E1                     l3449:
 16120     00E1  082E               	movf	printf@f,w
 16121     00E2  0084               	movwf	4
 16122     00E3  082F               	movf	printf@f+1,w
 16123     00E4  0085               	movwf	5
 16124     00E5  0800               	movf	0,w	;code access
 16125                           
 16126                           ; Switch size 1, requested type "simple"
 16127                           ; Number of cases is 4, Range of values is 32 to 48
 16128                           ; switch strategies available:
 16129                           ; Name         Instructions Cycles
 16130                           ; simple_byte           13     7 (average)
 16131                           ; direct_byte           43     9 (fixed)
 16132                           ; jumptable            263     9 (fixed)
 16133                           ;	Chosen strategy is simple_byte
 16134     00E6  3A20               	xorlw	32	; case 32
 16135     00E7  1903               	skipnz
 16136     00E8  28DB               	goto	l857
 16137     00E9  3A03               	xorlw	3	; case 35
 16138     00EA  1903               	skipnz
 16139     00EB  28DD               	goto	l858
 16140     00EC  3A0E               	xorlw	14	; case 45
 16141     00ED  1903               	skipnz
 16142     00EE  28D5               	goto	l855
 16143     00EF  3A1D               	xorlw	29	; case 48
 16144     00F0  1903               	skipnz
 16145     00F1  28DF               	goto	l859
 16146     00F2  28F3               	goto	l861
 16147     00F3                     l861:
 16148                           
 16149                           ;doprnt.c: 610: if(flag & 0x08)
 16150     00F3  1DD0               	btfss	printf@flag,3
 16151     00F4  28F6               	goto	u2811
 16152     00F5  28F7               	goto	u2810
 16153     00F6                     u2811:
 16154     00F6  28FB               	goto	l3453
 16155     00F7                     u2810:
 16156     00F7                     l3451:
 16157                           
 16158                           ;doprnt.c: 611: flag &= ~0x04;
 16159     00F7  30FB               	movlw	251
 16160     00F8  05D0               	andwf	printf@flag,f
 16161     00F9  30FF               	movlw	255
 16162     00FA  05D1               	andwf	printf@flag+1,f
 16163     00FB                     l3453:
 16164                           
 16165                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 16166     00FB  082E               	movf	printf@f,w
 16167     00FC  0084               	movwf	4
 16168     00FD  082F               	movf	printf@f+1,w
 16169     00FE  0085               	movwf	5
 16170     00FF  0800               	movf	0,w	;code access
 16171     0100  319D  254D  3180   	fcall	_isdigit
 16172     0103  1C03               	btfss	3,0
 16173     0104  2906               	goto	u2821
 16174     0105  2907               	goto	u2820
 16175     0106                     u2821:
 16176     0106  293B               	goto	l3465
 16177     0107                     u2820:
 16178     0107                     l3455:
 16179                           
 16180                           ;doprnt.c: 615: width = 0;
 16181     0107  0140               	movlb	0	; select bank0
 16182     0108  01CD               	clrf	printf@width
 16183     0109  01CE               	clrf	printf@width+1
 16184     010A                     l3457:
 16185                           
 16186                           ;doprnt.c: 617: width *= 10;
 16187     010A  300A               	movlw	10
 16188     010B  0140               	movlb	0	; select bank0
 16189     010C  00A0               	movwf	___wmul@multiplier
 16190     010D  3000               	movlw	0
 16191     010E  00A1               	movwf	___wmul@multiplier+1
 16192     010F  084E               	movf	printf@width+1,w
 16193     0110  00A3               	movwf	___wmul@multiplicand+1
 16194     0111  084D               	movf	printf@width,w
 16195     0112  00A2               	movwf	___wmul@multiplicand
 16196     0113  319E  266F  3180   	fcall	___wmul
 16197     0116  0140               	movlb	0	; select bank0
 16198     0117  0821               	movf	?___wmul+1,w
 16199     0118  00CE               	movwf	printf@width+1
 16200     0119  0820               	movf	?___wmul,w
 16201     011A  00CD               	movwf	printf@width
 16202     011B                     l3459:
 16203                           
 16204                           ;doprnt.c: 618: width += *f++ - '0';
 16205     011B  082E               	movf	printf@f,w
 16206     011C  0084               	movwf	4
 16207     011D  082F               	movf	printf@f+1,w
 16208     011E  0085               	movwf	5
 16209     011F  0800               	movf	0,w	;code access
 16210     0120  3ED0               	addlw	208
 16211     0121  00BA               	movwf	??_printf
 16212     0122  30FF               	movlw	255
 16213     0123  1803               	skipnc
 16214     0124  3000               	movlw	0
 16215     0125  00BB               	movwf	??_printf+1
 16216     0126  083A               	movf	??_printf,w
 16217     0127  07CD               	addwf	printf@width,f
 16218     0128  083B               	movf	??_printf+1,w
 16219     0129  3DCE               	addwfc	printf@width+1,f
 16220     012A                     l3461:
 16221     012A  3001               	movlw	1
 16222     012B  07AE               	addwf	printf@f,f
 16223     012C  3000               	movlw	0
 16224     012D  3DAF               	addwfc	printf@f+1,f
 16225     012E                     l3463:
 16226                           
 16227                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 16228     012E  082E               	movf	printf@f,w
 16229     012F  0084               	movwf	4
 16230     0130  082F               	movf	printf@f+1,w
 16231     0131  0085               	movwf	5
 16232     0132  0800               	movf	0,w	;code access
 16233     0133  319D  254D  3180   	fcall	_isdigit
 16234     0136  1803               	btfsc	3,0
 16235     0137  2939               	goto	u2831
 16236     0138  293A               	goto	u2830
 16237     0139                     u2831:
 16238     0139  290A               	goto	l3457
 16239     013A                     u2830:
 16240     013A  2955               	goto	l3473
 16241     013B                     l3465:
 16242     013B  0140               	movlb	0	; select bank0
 16243     013C  082E               	movf	printf@f,w
 16244     013D  0084               	movwf	4
 16245     013E  082F               	movf	printf@f+1,w
 16246     013F  0085               	movwf	5
 16247     0140  0012               	moviw fsr0++
 16248     0141  3A2A               	xorlw	42
 16249     0142  1D03               	btfss	3,2
 16250     0143  2945               	goto	u2841
 16251     0144  2946               	goto	u2840
 16252     0145                     u2841:
 16253     0145  2955               	goto	l3473
 16254     0146                     u2840:
 16255     0146                     l3467:
 16256                           
 16257                           ;doprnt.c: 622: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 16258     0146  0849               	movf	printf@ap,w
 16259     0147  0086               	movwf	6
 16260     0148  0187               	clrf	7
 16261     0149  3F40               	moviw [0]fsr1
 16262     014A  00CD               	movwf	printf@width
 16263     014B  3F41               	moviw [1]fsr1
 16264     014C  00CE               	movwf	printf@width+1
 16265     014D                     l3469:
 16266     014D  3002               	movlw	2
 16267     014E  00BA               	movwf	??_printf
 16268     014F  083A               	movf	??_printf,w
 16269     0150  07C9               	addwf	printf@ap,f
 16270     0151                     l3471:
 16271                           
 16272                           ;doprnt.c: 623: f++;
 16273     0151  3001               	movlw	1
 16274     0152  07AE               	addwf	printf@f,f
 16275     0153  3000               	movlw	0
 16276     0154  3DAF               	addwfc	printf@f+1,f
 16277     0155                     l3473:
 16278                           
 16279                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
 16280     0155  0140               	movlb	0	; select bank0
 16281     0156  082E               	movf	printf@f,w
 16282     0157  0084               	movwf	4
 16283     0158  082F               	movf	printf@f+1,w
 16284     0159  0085               	movwf	5
 16285     015A  0012               	moviw fsr0++
 16286     015B  3A2E               	xorlw	46
 16287     015C  1D03               	btfss	3,2
 16288     015D  295F               	goto	u2851
 16289     015E  2960               	goto	u2850
 16290     015F                     u2851:
 16291     015F  29AB               	goto	l3503
 16292     0160                     u2850:
 16293     0160                     l3475:
 16294                           
 16295                           ;doprnt.c: 629: flag |= 0x4000;
 16296     0160  1751               	bsf	printf@flag+1,6
 16297     0161                     l3477:
 16298                           
 16299                           ;doprnt.c: 630: f++;
 16300     0161  3001               	movlw	1
 16301     0162  07AE               	addwf	printf@f,f
 16302     0163  3000               	movlw	0
 16303     0164  3DAF               	addwfc	printf@f+1,f
 16304     0165                     l3479:
 16305                           
 16306                           ;doprnt.c: 632: if(*f == '*') {
 16307     0165  082E               	movf	printf@f,w
 16308     0166  0084               	movwf	4
 16309     0167  082F               	movf	printf@f+1,w
 16310     0168  0085               	movwf	5
 16311     0169  0012               	moviw fsr0++
 16312     016A  3A2A               	xorlw	42
 16313     016B  1D03               	btfss	3,2
 16314     016C  296E               	goto	u2861
 16315     016D  296F               	goto	u2860
 16316     016E                     u2861:
 16317     016E  2986               	goto	l3493
 16318     016F                     u2860:
 16319     016F                     l3481:
 16320                           
 16321                           ;doprnt.c: 633: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 16322     016F  0849               	movf	printf@ap,w
 16323     0170  0086               	movwf	6
 16324     0171  0187               	clrf	7
 16325     0172  0801               	movf	1,w
 16326     0173  00CC               	movwf	printf@prec
 16327     0174                     l3483:
 16328     0174  3002               	movlw	2
 16329     0175  00BA               	movwf	??_printf
 16330     0176  083A               	movf	??_printf,w
 16331     0177  07C9               	addwf	printf@ap,f
 16332     0178                     l3485:
 16333                           
 16334                           ;doprnt.c: 634: if (prec < 0) {
 16335     0178  1FCC               	btfss	printf@prec,7
 16336     0179  297B               	goto	u2871
 16337     017A  297C               	goto	u2870
 16338     017B                     u2871:
 16339     017B  2981               	goto	l3491
 16340     017C                     u2870:
 16341     017C                     l3487:
 16342                           
 16343                           ;doprnt.c: 635: prec = 0;
 16344     017C  01CC               	clrf	printf@prec
 16345     017D                     l3489:
 16346                           
 16347                           ;doprnt.c: 636: flag &= ~0x4000;
 16348     017D  30FF               	movlw	255
 16349     017E  05D0               	andwf	printf@flag,f
 16350     017F  30BF               	movlw	191
 16351     0180  05D1               	andwf	printf@flag+1,f
 16352     0181                     l3491:
 16353                           
 16354                           ;doprnt.c: 640: };doprnt.c: 641: f++;
 16355     0181  3001               	movlw	1
 16356     0182  07AE               	addwf	printf@f,f
 16357     0183  3000               	movlw	0
 16358     0184  3DAF               	addwfc	printf@f+1,f
 16359                           
 16360                           ;doprnt.c: 642: } else
 16361     0185  2A69               	goto	l3561
 16362     0186                     l3493:
 16363                           
 16364                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 16365     0186  01CC               	clrf	printf@prec
 16366                           
 16367                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 16368     0187  299E               	goto	l3501
 16369     0188                     l3495:
 16370                           
 16371                           ;doprnt.c: 647: prec *= 10;
 16372     0188  0140               	movlb	0	; select bank0
 16373     0189  084C               	movf	printf@prec,w
 16374     018A  00A0               	movwf	___bmul@multiplicand
 16375     018B  300A               	movlw	10
 16376     018C  319D  259B  3180   	fcall	___bmul
 16377     018F  0140               	movlb	0	; select bank0
 16378     0190  00CC               	movwf	printf@prec
 16379     0191                     l3497:
 16380                           
 16381                           ;doprnt.c: 648: prec += *f++ - '0';
 16382     0191  082E               	movf	printf@f,w
 16383     0192  0084               	movwf	4
 16384     0193  082F               	movf	printf@f+1,w
 16385     0194  0085               	movwf	5
 16386     0195  0800               	movf	0,w	;code access
 16387     0196  3ED0               	addlw	-48
 16388     0197  00BA               	movwf	??_printf
 16389     0198  083A               	movf	??_printf,w
 16390     0199  07CC               	addwf	printf@prec,f
 16391     019A                     l3499:
 16392     019A  3001               	movlw	1
 16393     019B  07AE               	addwf	printf@f,f
 16394     019C  3000               	movlw	0
 16395     019D  3DAF               	addwfc	printf@f+1,f
 16396     019E                     l3501:
 16397     019E  082E               	movf	printf@f,w
 16398     019F  0084               	movwf	4
 16399     01A0  082F               	movf	printf@f+1,w
 16400     01A1  0085               	movwf	5
 16401     01A2  0800               	movf	0,w	;code access
 16402     01A3  319D  254D  3180   	fcall	_isdigit
 16403     01A6  1803               	btfsc	3,0
 16404     01A7  29A9               	goto	u2881
 16405     01A8  29AA               	goto	u2880
 16406     01A9                     u2881:
 16407     01A9  2988               	goto	l3495
 16408     01AA                     u2880:
 16409     01AA  2A69               	goto	l3561
 16410     01AB                     l3503:
 16411                           
 16412                           ;doprnt.c: 652: prec = 0;
 16413     01AB  01CC               	clrf	printf@prec
 16414     01AC  2A69               	goto	l3561
 16415     01AD                     l879:	
 16416                           ;doprnt.c: 715: case 'o':
 16417                           
 16418                           
 16419                           ;doprnt.c: 717: flag |= 0x40;
 16420     01AD  1750               	bsf	printf@flag,6
 16421                           
 16422                           ;doprnt.c: 719: break;
 16423     01AE  2A93               	goto	l3563
 16424     01AF                     l883:	
 16425                           ;doprnt.c: 738: case 'X':
 16426                           
 16427                           
 16428                           ;doprnt.c: 740: flag |= 0x20;
 16429     01AF  16D0               	bsf	printf@flag,5
 16430     01B0                     l884:	
 16431                           ;doprnt.c: 744: case 'x':
 16432                           
 16433                           
 16434                           ;doprnt.c: 747: flag |= 0x80;
 16435     01B0  17D0               	bsf	printf@flag,7
 16436                           
 16437                           ;doprnt.c: 749: break;
 16438     01B1  2A93               	goto	l3563
 16439     01B2                     l3505:
 16440                           
 16441                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 16442     01B2  0849               	movf	printf@ap,w
 16443     01B3  0086               	movwf	6
 16444     01B4  0187               	clrf	7
 16445     01B5  3F40               	moviw [0]fsr1
 16446     01B6  00C5               	movwf	printf@cp
 16447     01B7  3F41               	moviw [1]fsr1
 16448     01B8  00C6               	movwf	printf@cp+1
 16449     01B9                     l3507:
 16450     01B9  3002               	movlw	2
 16451     01BA  00BA               	movwf	??_printf
 16452     01BB  083A               	movf	??_printf,w
 16453     01BC  07C9               	addwf	printf@ap,f
 16454     01BD                     l3509:
 16455                           
 16456                           ;doprnt.c: 766: if(!cp)
 16457     01BD  0845               	movf	printf@cp,w
 16458     01BE  0446               	iorwf	printf@cp+1,w
 16459     01BF  1D03               	btfss	3,2
 16460     01C0  29C2               	goto	u2891
 16461     01C1  29C3               	goto	u2890
 16462     01C2                     u2891:
 16463     01C2  29C7               	goto	l3513
 16464     01C3                     u2890:
 16465     01C3                     l3511:
 16466                           
 16467                           ;doprnt.c: 767: cp = "(null)";
 16468     01C3  3063               	movlw	low (STR_32| (0+32768))
 16469     01C4  00C5               	movwf	printf@cp
 16470     01C5  309A               	movlw	high (STR_32| (0+32768))
 16471     01C6  00C6               	movwf	printf@cp+1
 16472     01C7                     l3513:
 16473                           
 16474                           ;doprnt.c: 771: len = 0;
 16475     01C7  01C7               	clrf	printf@len
 16476     01C8  01C8               	clrf	printf@len+1
 16477                           
 16478                           ;doprnt.c: 772: while(cp[len])
 16479     01C9  29CE               	goto	l3517
 16480     01CA                     l3515:
 16481                           
 16482                           ;doprnt.c: 773: len++;
 16483     01CA  3001               	movlw	1
 16484     01CB  07C7               	addwf	printf@len,f
 16485     01CC  3000               	movlw	0
 16486     01CD  3DC8               	addwfc	printf@len+1,f
 16487     01CE                     l3517:
 16488     01CE  0845               	movf	printf@cp,w
 16489     01CF  0747               	addwf	printf@len,w
 16490     01D0  0084               	movwf	4
 16491     01D1  0846               	movf	printf@cp+1,w
 16492     01D2  3D48               	addwfc	printf@len+1,w
 16493     01D3  0085               	movwf	5
 16494     01D4  0012               	moviw fsr0++
 16495     01D5  1D03               	btfss	3,2
 16496     01D6  29D8               	goto	u2901
 16497     01D7  29D9               	goto	u2900
 16498     01D8                     u2901:
 16499     01D8  29CA               	goto	l3515
 16500     01D9                     u2900:
 16501     01D9                     l3519:
 16502                           
 16503                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
 16504     01D9  084C               	movf	printf@prec,w
 16505     01DA  1903               	btfsc	3,2
 16506     01DB  29DD               	goto	u2911
 16507     01DC  29DE               	goto	u2910
 16508     01DD                     u2911:
 16509     01DD  29F9               	goto	l891
 16510     01DE                     u2910:
 16511     01DE                     l3521:
 16512     01DE  084C               	movf	printf@prec,w
 16513     01DF  00BA               	movwf	??_printf
 16514     01E0  01BB               	clrf	??_printf+1
 16515     01E1  1BBA               	btfsc	??_printf,7
 16516     01E2  03BB               	decf	??_printf+1,f
 16517     01E3  083B               	movf	??_printf+1,w
 16518     01E4  3A80               	xorlw	128
 16519     01E5  00BC               	movwf	??_printf+2
 16520     01E6  0848               	movf	printf@len+1,w
 16521     01E7  3A80               	xorlw	128
 16522     01E8  023C               	subwf	??_printf+2,w
 16523     01E9  1D03               	skipz
 16524     01EA  29ED               	goto	u2925
 16525     01EB  0847               	movf	printf@len,w
 16526     01EC  023A               	subwf	??_printf,w
 16527     01ED                     u2925:
 16528     01ED  1803               	skipnc
 16529     01EE  29F0               	goto	u2921
 16530     01EF  29F1               	goto	u2920
 16531     01F0                     u2921:
 16532     01F0  29F9               	goto	l891
 16533     01F1                     u2920:
 16534     01F1                     l3523:
 16535                           
 16536                           ;doprnt.c: 780: len = (unsigned char)prec;
 16537     01F1  0140               	movlb	0	; select bank0
 16538     01F2  084C               	movf	printf@prec,w
 16539     01F3  00BA               	movwf	??_printf
 16540     01F4  01BB               	clrf	??_printf+1
 16541     01F5  083A               	movf	??_printf,w
 16542     01F6  00C7               	movwf	printf@len
 16543     01F7  083B               	movf	??_printf+1,w
 16544     01F8  00C8               	movwf	printf@len+1
 16545     01F9                     l891:
 16546                           
 16547                           ;doprnt.c: 783: if(((unsigned)width) > len)
 16548     01F9  0140               	movlb	0	; select bank0
 16549     01FA  084E               	movf	printf@width+1,w
 16550     01FB  0248               	subwf	printf@len+1,w
 16551     01FC  1D03               	skipz
 16552     01FD  2A00               	goto	u2935
 16553     01FE  084D               	movf	printf@width,w
 16554     01FF  0247               	subwf	printf@len,w
 16555     0200                     u2935:
 16556     0200  1803               	skipnc
 16557     0201  2A03               	goto	u2931
 16558     0202  2A04               	goto	u2930
 16559     0203                     u2931:
 16560     0203  2A09               	goto	l3527
 16561     0204                     u2930:
 16562     0204                     l3525:
 16563                           
 16564                           ;doprnt.c: 784: width -= len;
 16565     0204  0847               	movf	printf@len,w
 16566     0205  02CD               	subwf	printf@width,f
 16567     0206  0848               	movf	printf@len+1,w
 16568     0207  3BCE               	subwfb	printf@width+1,f
 16569     0208  2A0B               	goto	l3529
 16570     0209                     l3527:
 16571                           
 16572                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
 16573     0209  01CD               	clrf	printf@width
 16574     020A  01CE               	clrf	printf@width+1
 16575     020B                     l3529:
 16576                           
 16577                           ;doprnt.c: 788: if(!(flag & 0x08))
 16578     020B  19D0               	btfsc	printf@flag,3
 16579     020C  2A0E               	goto	u2941
 16580     020D  2A0F               	goto	u2940
 16581     020E                     u2941:
 16582     020E  2A2F               	goto	l3541
 16583     020F                     u2940:
 16584     020F  2A14               	goto	l3535
 16585     0210                     l3533:
 16586                           
 16587                           ;doprnt.c: 791: (putch(' ') );
 16588     0210  3020               	movlw	32
 16589     0211  319C  24D7  3180   	fcall	_putch
 16590     0214                     l3535:
 16591     0214  30FF               	movlw	255
 16592     0215  0140               	movlb	0	; select bank0
 16593     0216  07CD               	addwf	printf@width,f
 16594     0217  30FF               	movlw	255
 16595     0218  3DCE               	addwfc	printf@width+1,f
 16596     0219  0A4D               	incf	printf@width,w
 16597     021A  1D03               	skipz
 16598     021B  2A20               	goto	u2951
 16599     021C  0A4E               	incf	printf@width+1,w
 16600     021D  1D03               	btfss	3,2
 16601     021E  2A20               	goto	u2951
 16602     021F  2A21               	goto	u2950
 16603     0220                     u2951:
 16604     0220  2A10               	goto	l3533
 16605     0221                     u2950:
 16606     0221  2A2F               	goto	l3541
 16607     0222                     l3537:
 16608                           
 16609                           ;doprnt.c: 794: (putch(*cp++) );
 16610     0222  0845               	movf	printf@cp,w
 16611     0223  0084               	movwf	4
 16612     0224  0846               	movf	printf@cp+1,w
 16613     0225  0085               	movwf	5
 16614     0226  0800               	movf	0,w	;code access
 16615     0227  319C  24D7  3180   	fcall	_putch
 16616     022A                     l3539:
 16617     022A  3001               	movlw	1
 16618     022B  0140               	movlb	0	; select bank0
 16619     022C  07C5               	addwf	printf@cp,f
 16620     022D  3000               	movlw	0
 16621     022E  3DC6               	addwfc	printf@cp+1,f
 16622     022F                     l3541:
 16623     022F  3001               	movlw	1
 16624     0230  02C7               	subwf	printf@len,f
 16625     0231  3000               	movlw	0
 16626     0232  3BC8               	subwfb	printf@len+1,f
 16627     0233  0A47               	incf	printf@len,w
 16628     0234  1D03               	skipz
 16629     0235  2A3A               	goto	u2961
 16630     0236  0A48               	incf	printf@len+1,w
 16631     0237  1D03               	btfss	3,2
 16632     0238  2A3A               	goto	u2961
 16633     0239  2A3B               	goto	u2960
 16634     023A                     u2961:
 16635     023A  2A22               	goto	l3537
 16636     023B                     u2960:
 16637     023B                     l900:
 16638                           
 16639                           ;doprnt.c: 796: if(flag & 0x08)
 16640     023B  1DD0               	btfss	printf@flag,3
 16641     023C  2A3E               	goto	u2971
 16642     023D  2A3F               	goto	u2970
 16643     023E                     u2971:
 16644     023E  2DAB               	goto	l3745
 16645     023F                     u2970:
 16646     023F  2A44               	goto	l3547
 16647     0240                     l3545:
 16648                           
 16649                           ;doprnt.c: 798: (putch(' ') );
 16650     0240  3020               	movlw	32
 16651     0241  319C  24D7  3180   	fcall	_putch
 16652     0244                     l3547:
 16653     0244  30FF               	movlw	255
 16654     0245  0140               	movlb	0	; select bank0
 16655     0246  07CD               	addwf	printf@width,f
 16656     0247  30FF               	movlw	255
 16657     0248  3DCE               	addwfc	printf@width+1,f
 16658     0249  0A4D               	incf	printf@width,w
 16659     024A  1D03               	skipz
 16660     024B  2A50               	goto	u2981
 16661     024C  0A4E               	incf	printf@width+1,w
 16662     024D  1D03               	btfss	3,2
 16663     024E  2A50               	goto	u2981
 16664     024F  2A51               	goto	u2980
 16665     0250                     u2981:
 16666     0250  2A40               	goto	l3545
 16667     0251                     u2980:
 16668     0251  2DAB               	goto	l3745
 16669     0252                     l3549:
 16670                           
 16671                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
 16672     0252  0849               	movf	printf@ap,w
 16673     0253  0086               	movwf	6
 16674     0254  0187               	clrf	7
 16675     0255  0801               	movf	1,w
 16676     0256  00CF               	movwf	printf@c
 16677     0257                     l3551:
 16678     0257  3002               	movlw	2
 16679     0258  00BA               	movwf	??_printf
 16680     0259  083A               	movf	??_printf,w
 16681     025A  07C9               	addwf	printf@ap,f
 16682     025B                     l3553:
 16683                           
 16684                           ;doprnt.c: 831: cp = (char *)&c;
 16685     025B  304F               	movlw	low printf@c
 16686     025C  00C5               	movwf	printf@cp
 16687     025D  3000               	movlw	high printf@c
 16688     025E  00C6               	movwf	printf@cp+1
 16689     025F                     l3555:
 16690                           
 16691                           ;doprnt.c: 832: len = 1;
 16692     025F  3001               	movlw	1
 16693     0260  00C7               	movwf	printf@len
 16694     0261  3000               	movlw	0
 16695     0262  00C8               	movwf	printf@len+1
 16696                           
 16697                           ;doprnt.c: 833: goto dostring;
 16698     0263  29D9               	goto	l3519
 16699     0264                     l3557:
 16700                           
 16701                           ;doprnt.c: 844: flag |= 0xC0;
 16702     0264  30C0               	movlw	192
 16703     0265  04D0               	iorwf	printf@flag,f
 16704     0266  3000               	movlw	0
 16705     0267  04D1               	iorwf	printf@flag+1,f
 16706                           
 16707                           ;doprnt.c: 845: break;
 16708     0268  2A93               	goto	l3563
 16709     0269                     l3561:
 16710     0269  0140               	movlb	0	; select bank0
 16711     026A  082F               	movf	printf@f+1,w
 16712     026B  00BB               	movwf	??_printf+1
 16713     026C  082E               	movf	printf@f,w
 16714     026D  00BA               	movwf	??_printf
 16715     026E  0AAE               	incf	printf@f,f
 16716     026F  1903               	skipnz
 16717     0270  0AAF               	incf	printf@f+1,f
 16718     0271  083A               	movf	??_printf,w
 16719     0272  0084               	movwf	4
 16720     0273  083B               	movf	??_printf+1,w
 16721     0274  0085               	movwf	5
 16722     0275  0800               	movf	0,w	;code access
 16723     0276  00CF               	movwf	printf@c
 16724                           
 16725                           ; Switch size 1, requested type "simple"
 16726                           ; Number of cases is 9, Range of values is 0 to 120
 16727                           ; switch strategies available:
 16728                           ; Name         Instructions Cycles
 16729                           ; simple_byte           28    15 (average)
 16730                           ; direct_byte          248     6 (fixed)
 16731                           ; jumptable            260     6 (fixed)
 16732                           ;	Chosen strategy is simple_byte
 16733     0277  3A00               	xorlw	0	; case 0
 16734     0278  1903               	skipnz
 16735     0279  2DBE               	goto	l986
 16736     027A  3A58               	xorlw	88	; case 88
 16737     027B  1903               	skipnz
 16738     027C  29AF               	goto	l883
 16739     027D  3A3B               	xorlw	59	; case 99
 16740     027E  1903               	skipnz
 16741     027F  2A52               	goto	l3549
 16742     0280  3A07               	xorlw	7	; case 100
 16743     0281  1903               	skipnz
 16744     0282  2A93               	goto	l3563
 16745     0283  3A0D               	xorlw	13	; case 105
 16746     0284  1903               	skipnz
 16747     0285  2A93               	goto	l3563
 16748     0286  3A06               	xorlw	6	; case 111
 16749     0287  1903               	skipnz
 16750     0288  29AD               	goto	l879
 16751     0289  3A1C               	xorlw	28	; case 115
 16752     028A  1903               	skipnz
 16753     028B  29B2               	goto	l3505
 16754     028C  3A06               	xorlw	6	; case 117
 16755     028D  1903               	skipnz
 16756     028E  2A64               	goto	l3557
 16757     028F  3A0D               	xorlw	13	; case 120
 16758     0290  1903               	skipnz
 16759     0291  29B0               	goto	l884
 16760     0292  2A5B               	goto	l3553
 16761     0293                     l3563:
 16762                           
 16763                           ;doprnt.c: 1277: if((flag & (0xC0)) == 0x00)
 16764     0293  30C0               	movlw	192
 16765     0294  0550               	andwf	printf@flag,w
 16766     0295  00BA               	movwf	??_printf
 16767     0296  3000               	movlw	0
 16768     0297  0551               	andwf	printf@flag+1,w
 16769     0298  00BB               	movwf	??_printf+1
 16770     0299  083A               	movf	??_printf,w
 16771     029A  043B               	iorwf	??_printf+1,w
 16772     029B  1D03               	btfss	3,2
 16773     029C  2A9E               	goto	u2991
 16774     029D  2A9F               	goto	u2990
 16775     029E                     u2991:
 16776     029E  2AB8               	goto	l3575
 16777     029F                     u2990:
 16778     029F                     l3565:
 16779                           
 16780                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 16781     029F  0849               	movf	printf@ap,w
 16782     02A0  0086               	movwf	6
 16783     02A1  0187               	clrf	7
 16784     02A2  3F40               	moviw [0]fsr1
 16785     02A3  00CA               	movwf	printf@val
 16786     02A4  3F41               	moviw [1]fsr1
 16787     02A5  00CB               	movwf	printf@val+1
 16788     02A6                     l3567:
 16789     02A6  3002               	movlw	2
 16790     02A7  00BA               	movwf	??_printf
 16791     02A8  083A               	movf	??_printf,w
 16792     02A9  07C9               	addwf	printf@ap,f
 16793     02AA                     l3569:
 16794                           
 16795                           ;doprnt.c: 1287: if((int)val < 0) {
 16796     02AA  1FCB               	btfss	printf@val+1,7
 16797     02AB  2AAD               	goto	u3001
 16798     02AC  2AAE               	goto	u3000
 16799     02AD                     u3001:
 16800     02AD  2AC3               	goto	l3579
 16801     02AE                     u3000:
 16802     02AE                     l3571:
 16803                           
 16804                           ;doprnt.c: 1288: flag |= 0x03;
 16805     02AE  3003               	movlw	3
 16806     02AF  04D0               	iorwf	printf@flag,f
 16807     02B0  3000               	movlw	0
 16808     02B1  04D1               	iorwf	printf@flag+1,f
 16809     02B2                     l3573:
 16810                           
 16811                           ;doprnt.c: 1289: val = -val;
 16812     02B2  09CA               	comf	printf@val,f
 16813     02B3  09CB               	comf	printf@val+1,f
 16814     02B4  0ACA               	incf	printf@val,f
 16815     02B5  1903               	skipnz
 16816     02B6  0ACB               	incf	printf@val+1,f
 16817     02B7  2AC3               	goto	l3579
 16818     02B8                     l3575:
 16819                           
 16820                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
 16821     02B8  0849               	movf	printf@ap,w
 16822     02B9  0086               	movwf	6
 16823     02BA  0187               	clrf	7
 16824     02BB  3F40               	moviw [0]fsr1
 16825     02BC  00CA               	movwf	printf@val
 16826     02BD  3F41               	moviw [1]fsr1
 16827     02BE  00CB               	movwf	printf@val+1
 16828     02BF                     l3577:
 16829     02BF  3002               	movlw	2
 16830     02C0  00BA               	movwf	??_printf
 16831     02C1  083A               	movf	??_printf,w
 16832     02C2  07C9               	addwf	printf@ap,f
 16833     02C3                     l3579:
 16834                           
 16835                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
 16836     02C3  084C               	movf	printf@prec,w
 16837     02C4  1D03               	btfss	3,2
 16838     02C5  2AC7               	goto	u3011
 16839     02C6  2AC8               	goto	u3010
 16840     02C7                     u3011:
 16841     02C7  2B60               	goto	l3617
 16842     02C8                     u3010:
 16843     02C8                     l3581:
 16844     02C8  084A               	movf	printf@val,w
 16845     02C9  044B               	iorwf	printf@val+1,w
 16846     02CA  1D03               	btfss	3,2
 16847     02CB  2ACD               	goto	u3021
 16848     02CC  2ACE               	goto	u3020
 16849     02CD                     u3021:
 16850     02CD  2B60               	goto	l3617
 16851     02CE                     u3020:
 16852     02CE                     l3583:
 16853                           
 16854                           ;doprnt.c: 1317: prec++;
 16855     02CE  3001               	movlw	1
 16856     02CF  00BA               	movwf	??_printf
 16857     02D0  083A               	movf	??_printf,w
 16858     02D1  07CC               	addwf	printf@prec,f
 16859     02D2  2B60               	goto	l3617
 16860     02D3                     l914:
 16861                           
 16862                           ;doprnt.c: 1328: case 0xC0:;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 16863     02D3  01CF               	clrf	printf@c
 16864     02D4  0ACF               	incf	printf@c,f
 16865     02D5                     l3585:
 16866     02D5  3005               	movlw	5
 16867     02D6  064F               	xorwf	printf@c,w
 16868     02D7  1D03               	btfss	3,2
 16869     02D8  2ADA               	goto	u3031
 16870     02D9  2ADB               	goto	u3030
 16871     02DA                     u3031:
 16872     02DA  2ADC               	goto	l3589
 16873     02DB                     u3030:
 16874     02DB  2B6F               	goto	l3619
 16875     02DC                     l3589:
 16876                           
 16877                           ;doprnt.c: 1332: if(val < dpowers[c])
 16878     02DC  084F               	movf	printf@c,w
 16879     02DD  00BA               	movwf	??_printf
 16880     02DE  01BB               	clrf	??_printf+1
 16881     02DF  35BA               	lslf	??_printf,f
 16882     02E0  0DBB               	rlf	??_printf+1,f
 16883     02E1  303F               	movlw	low _dpowers
 16884     02E2  073A               	addwf	??_printf,w
 16885     02E3  0084               	movwf	4
 16886     02E4  301A               	movlw	high _dpowers
 16887     02E5  3D3B               	addwfc	??_printf+1,w
 16888     02E6  3880               	iorlw	128
 16889     02E7  0085               	movwf	5
 16890     02E8  3F00               	moviw [0]fsr0
 16891     02E9  00BC               	movwf	??_printf+2
 16892     02EA  3F01               	moviw [1]fsr0
 16893     02EB  00BD               	movwf	??_printf+3
 16894     02EC  083D               	movf	??_printf+3,w
 16895     02ED  024B               	subwf	printf@val+1,w
 16896     02EE  1D03               	skipz
 16897     02EF  2AF2               	goto	u3045
 16898     02F0  083C               	movf	??_printf+2,w
 16899     02F1  024A               	subwf	printf@val,w
 16900     02F2                     u3045:
 16901     02F2  1803               	skipnc
 16902     02F3  2AF5               	goto	u3041
 16903     02F4  2AF6               	goto	u3040
 16904     02F5                     u3041:
 16905     02F5  2AF7               	goto	l3593
 16906     02F6                     u3040:
 16907     02F6  2B6F               	goto	l3619
 16908     02F7                     l3593:
 16909     02F7  3001               	movlw	1
 16910     02F8  00BA               	movwf	??_printf
 16911     02F9  083A               	movf	??_printf,w
 16912     02FA  07CF               	addwf	printf@c,f
 16913     02FB  3005               	movlw	5
 16914     02FC  064F               	xorwf	printf@c,w
 16915     02FD  1D03               	btfss	3,2
 16916     02FE  2B00               	goto	u3051
 16917     02FF  2B01               	goto	u3050
 16918     0300                     u3051:
 16919     0300  2ADC               	goto	l3589
 16920     0301                     u3050:
 16921     0301  2B6F               	goto	l3619
 16922     0302                     l919:	
 16923                           ;doprnt.c: 1340: case 0x80:
 16924                           
 16925                           
 16926                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16927     0302  01CF               	clrf	printf@c
 16928     0303  0ACF               	incf	printf@c,f
 16929     0304                     l3595:
 16930     0304  3004               	movlw	4
 16931     0305  064F               	xorwf	printf@c,w
 16932     0306  1D03               	btfss	3,2
 16933     0307  2B09               	goto	u3061
 16934     0308  2B0A               	goto	u3060
 16935     0309                     u3061:
 16936     0309  2B0B               	goto	l3599
 16937     030A                     u3060:
 16938     030A  2B6F               	goto	l3619
 16939     030B                     l3599:
 16940                           
 16941                           ;doprnt.c: 1343: if(val < hexpowers[c])
 16942     030B  084F               	movf	printf@c,w
 16943     030C  00BA               	movwf	??_printf
 16944     030D  01BB               	clrf	??_printf+1
 16945     030E  35BA               	lslf	??_printf,f
 16946     030F  0DBB               	rlf	??_printf+1,f
 16947     0310  3000               	movlw	low _hexpowers
 16948     0311  073A               	addwf	??_printf,w
 16949     0312  0084               	movwf	4
 16950     0313  3010               	movlw	high _hexpowers
 16951     0314  3D3B               	addwfc	??_printf+1,w
 16952     0315  3880               	iorlw	128
 16953     0316  0085               	movwf	5
 16954     0317  3F00               	moviw [0]fsr0
 16955     0318  00BC               	movwf	??_printf+2
 16956     0319  3F01               	moviw [1]fsr0
 16957     031A  00BD               	movwf	??_printf+3
 16958     031B  083D               	movf	??_printf+3,w
 16959     031C  024B               	subwf	printf@val+1,w
 16960     031D  1D03               	skipz
 16961     031E  2B21               	goto	u3075
 16962     031F  083C               	movf	??_printf+2,w
 16963     0320  024A               	subwf	printf@val,w
 16964     0321                     u3075:
 16965     0321  1803               	skipnc
 16966     0322  2B24               	goto	u3071
 16967     0323  2B25               	goto	u3070
 16968     0324                     u3071:
 16969     0324  2B26               	goto	l3603
 16970     0325                     u3070:
 16971     0325  2B6F               	goto	l3619
 16972     0326                     l3603:
 16973     0326  3001               	movlw	1
 16974     0327  00BA               	movwf	??_printf
 16975     0328  083A               	movf	??_printf,w
 16976     0329  07CF               	addwf	printf@c,f
 16977     032A  3004               	movlw	4
 16978     032B  064F               	xorwf	printf@c,w
 16979     032C  1D03               	btfss	3,2
 16980     032D  2B2F               	goto	u3081
 16981     032E  2B30               	goto	u3080
 16982     032F                     u3081:
 16983     032F  2B0B               	goto	l3599
 16984     0330                     u3080:
 16985     0330  2B6F               	goto	l3619
 16986     0331                     l923:	
 16987                           ;doprnt.c: 1352: case 0x40:
 16988                           
 16989                           
 16990                           ;doprnt.c: 1354: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 16991     0331  01CF               	clrf	printf@c
 16992     0332  0ACF               	incf	printf@c,f
 16993     0333                     l3605:
 16994     0333  3006               	movlw	6
 16995     0334  064F               	xorwf	printf@c,w
 16996     0335  1D03               	btfss	3,2
 16997     0336  2B38               	goto	u3091
 16998     0337  2B39               	goto	u3090
 16999     0338                     u3091:
 17000     0338  2B3A               	goto	l3609
 17001     0339                     u3090:
 17002     0339  2B6F               	goto	l3619
 17003     033A                     l3609:
 17004                           
 17005                           ;doprnt.c: 1355: if(val < octpowers[c])
 17006     033A  084F               	movf	printf@c,w
 17007     033B  00BA               	movwf	??_printf
 17008     033C  01BB               	clrf	??_printf+1
 17009     033D  35BA               	lslf	??_printf,f
 17010     033E  0DBB               	rlf	??_printf+1,f
 17011     033F  301D               	movlw	low _octpowers
 17012     0340  073A               	addwf	??_printf,w
 17013     0341  0084               	movwf	4
 17014     0342  301A               	movlw	high _octpowers
 17015     0343  3D3B               	addwfc	??_printf+1,w
 17016     0344  3880               	iorlw	128
 17017     0345  0085               	movwf	5
 17018     0346  3F00               	moviw [0]fsr0
 17019     0347  00BC               	movwf	??_printf+2
 17020     0348  3F01               	moviw [1]fsr0
 17021     0349  00BD               	movwf	??_printf+3
 17022     034A  083D               	movf	??_printf+3,w
 17023     034B  024B               	subwf	printf@val+1,w
 17024     034C  1D03               	skipz
 17025     034D  2B50               	goto	u3105
 17026     034E  083C               	movf	??_printf+2,w
 17027     034F  024A               	subwf	printf@val,w
 17028     0350                     u3105:
 17029     0350  1803               	skipnc
 17030     0351  2B53               	goto	u3101
 17031     0352  2B54               	goto	u3100
 17032     0353                     u3101:
 17033     0353  2B55               	goto	l3613
 17034     0354                     u3100:
 17035     0354  2B6F               	goto	l3619
 17036     0355                     l3613:
 17037     0355  3001               	movlw	1
 17038     0356  00BA               	movwf	??_printf
 17039     0357  083A               	movf	??_printf,w
 17040     0358  07CF               	addwf	printf@c,f
 17041     0359  3006               	movlw	6
 17042     035A  064F               	xorwf	printf@c,w
 17043     035B  1D03               	btfss	3,2
 17044     035C  2B5E               	goto	u3111
 17045     035D  2B5F               	goto	u3110
 17046     035E                     u3111:
 17047     035E  2B3A               	goto	l3609
 17048     035F                     u3110:
 17049     035F  2B6F               	goto	l3619
 17050     0360                     l3617:
 17051     0360  0850               	movf	printf@flag,w
 17052     0361  39C0               	andlw	192
 17053                           
 17054                           ; Switch size 1, requested type "simple"
 17055                           ; Number of cases is 4, Range of values is 0 to 192
 17056                           ; switch strategies available:
 17057                           ; Name         Instructions Cycles
 17058                           ; simple_byte           13     7 (average)
 17059                           ; jumptable            260     6 (fixed)
 17060                           ;	Chosen strategy is simple_byte
 17061     0362  3A00               	xorlw	0	; case 0
 17062     0363  1903               	skipnz
 17063     0364  2AD3               	goto	l914
 17064     0365  3A40               	xorlw	64	; case 64
 17065     0366  1903               	skipnz
 17066     0367  2B31               	goto	l923
 17067     0368  3AC0               	xorlw	192	; case 128
 17068     0369  1903               	skipnz
 17069     036A  2B02               	goto	l919
 17070     036B  3A40               	xorlw	64	; case 192
 17071     036C  1903               	skipnz
 17072     036D  2AD3               	goto	l914
 17073     036E  2B6F               	goto	l3619
 17074     036F                     l3619:
 17075                           
 17076                           ;doprnt.c: 1365: if(c < prec)
 17077     036F  084C               	movf	printf@prec,w
 17078     0370  00BA               	movwf	??_printf
 17079     0371  01BB               	clrf	??_printf+1
 17080     0372  1BBA               	btfsc	??_printf,7
 17081     0373  03BB               	decf	??_printf+1,f
 17082     0374  083B               	movf	??_printf+1,w
 17083     0375  3A80               	xorlw	128
 17084     0376  3C80               	sublw	128
 17085     0377  1D03               	skipz
 17086     0378  2B7B               	goto	u3125
 17087     0379  083A               	movf	??_printf,w
 17088     037A  024F               	subwf	printf@c,w
 17089     037B                     u3125:
 17090     037B  1803               	skipnc
 17091     037C  2B7E               	goto	u3121
 17092     037D  2B7F               	goto	u3120
 17093     037E                     u3121:
 17094     037E  2B83               	goto	l3623
 17095     037F                     u3120:
 17096     037F                     l3621:
 17097                           
 17098                           ;doprnt.c: 1366: c = (char)prec;
 17099     037F  0140               	movlb	0	; select bank0
 17100     0380  084C               	movf	printf@prec,w
 17101     0381  00CF               	movwf	printf@c
 17102     0382  2B99               	goto	l3627
 17103     0383                     l3623:
 17104                           
 17105                           ;doprnt.c: 1367: else if(prec < c)
 17106     0383  0140               	movlb	0	; select bank0
 17107     0384  084C               	movf	printf@prec,w
 17108     0385  00BA               	movwf	??_printf
 17109     0386  01BB               	clrf	??_printf+1
 17110     0387  1BBA               	btfsc	??_printf,7
 17111     0388  03BB               	decf	??_printf+1,f
 17112     0389  083B               	movf	??_printf+1,w
 17113     038A  3A80               	xorlw	128
 17114     038B  00BC               	movwf	??_printf+2
 17115     038C  3080               	movlw	128
 17116     038D  023C               	subwf	??_printf+2,w
 17117     038E  1D03               	skipz
 17118     038F  2B92               	goto	u3135
 17119     0390  084F               	movf	printf@c,w
 17120     0391  023A               	subwf	??_printf,w
 17121     0392                     u3135:
 17122     0392  1803               	skipnc
 17123     0393  2B95               	goto	u3131
 17124     0394  2B96               	goto	u3130
 17125     0395                     u3131:
 17126     0395  2B99               	goto	l3627
 17127     0396                     u3130:
 17128     0396                     l3625:
 17129                           
 17130                           ;doprnt.c: 1368: prec = c;
 17131     0396  0140               	movlb	0	; select bank0
 17132     0397  084F               	movf	printf@c,w
 17133     0398  00CC               	movwf	printf@prec
 17134     0399                     l3627:
 17135                           
 17136                           ;doprnt.c: 1371: if(width && flag & 0x03)
 17137     0399  0140               	movlb	0	; select bank0
 17138     039A  084D               	movf	printf@width,w
 17139     039B  044E               	iorwf	printf@width+1,w
 17140     039C  1903               	btfsc	3,2
 17141     039D  2B9F               	goto	u3141
 17142     039E  2BA0               	goto	u3140
 17143     039F                     u3141:
 17144     039F  2BB0               	goto	l3633
 17145     03A0                     u3140:
 17146     03A0                     l3629:
 17147     03A0  3003               	movlw	3
 17148     03A1  0550               	andwf	printf@flag,w
 17149     03A2  00BA               	movwf	??_printf
 17150     03A3  3000               	movlw	0
 17151     03A4  0551               	andwf	printf@flag+1,w
 17152     03A5  00BB               	movwf	??_printf+1
 17153     03A6  083A               	movf	??_printf,w
 17154     03A7  043B               	iorwf	??_printf+1,w
 17155     03A8  1903               	btfsc	3,2
 17156     03A9  2BAB               	goto	u3151
 17157     03AA  2BAC               	goto	u3150
 17158     03AB                     u3151:
 17159     03AB  2BB0               	goto	l3633
 17160     03AC                     u3150:
 17161     03AC                     l3631:
 17162                           
 17163                           ;doprnt.c: 1372: width--;
 17164     03AC  30FF               	movlw	255
 17165     03AD  07CD               	addwf	printf@width,f
 17166     03AE  30FF               	movlw	255
 17167     03AF  3DCE               	addwfc	printf@width+1,f
 17168     03B0                     l3633:
 17169                           
 17170                           ;doprnt.c: 1374: if(flag & 0x4000) {
 17171     03B0  1F51               	btfss	printf@flag+1,6
 17172     03B1  2BB3               	goto	u3161
 17173     03B2  2BB4               	goto	u3160
 17174     03B3                     u3161:
 17175     03B3  2BD5               	goto	l3641
 17176     03B4                     u3160:
 17177     03B4                     l3635:
 17178                           
 17179                           ;doprnt.c: 1375: if(width > prec)
 17180     03B4  084C               	movf	printf@prec,w
 17181     03B5  00BA               	movwf	??_printf
 17182     03B6  01BB               	clrf	??_printf+1
 17183     03B7  1BBA               	btfsc	??_printf,7
 17184     03B8  03BB               	decf	??_printf+1,f
 17185     03B9  083B               	movf	??_printf+1,w
 17186     03BA  3A80               	xorlw	128
 17187     03BB  00BC               	movwf	??_printf+2
 17188     03BC  084E               	movf	printf@width+1,w
 17189     03BD  3A80               	xorlw	128
 17190     03BE  023C               	subwf	??_printf+2,w
 17191     03BF  1D03               	skipz
 17192     03C0  2BC3               	goto	u3175
 17193     03C1  084D               	movf	printf@width,w
 17194     03C2  023A               	subwf	??_printf,w
 17195     03C3                     u3175:
 17196     03C3  1803               	skipnc
 17197     03C4  2BC6               	goto	u3171
 17198     03C5  2BC7               	goto	u3170
 17199     03C6                     u3171:
 17200     03C6  2BD2               	goto	l3639
 17201     03C7                     u3170:
 17202     03C7                     l3637:
 17203                           
 17204                           ;doprnt.c: 1376: width -= prec;
 17205     03C7  0140               	movlb	0	; select bank0
 17206     03C8  084C               	movf	printf@prec,w
 17207     03C9  00BA               	movwf	??_printf
 17208     03CA  01BB               	clrf	??_printf+1
 17209     03CB  1BBA               	btfsc	??_printf,7
 17210     03CC  03BB               	decf	??_printf+1,f
 17211     03CD  083A               	movf	??_printf,w
 17212     03CE  02CD               	subwf	printf@width,f
 17213     03CF  083B               	movf	??_printf+1,w
 17214     03D0  3BCE               	subwfb	printf@width+1,f
 17215     03D1  2BD5               	goto	l3641
 17216     03D2                     l3639:
 17217                           
 17218                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
 17219     03D2  0140               	movlb	0	; select bank0
 17220     03D3  01CD               	clrf	printf@width
 17221     03D4  01CE               	clrf	printf@width+1
 17222     03D5                     l3641:
 17223                           
 17224                           ;doprnt.c: 1379: };doprnt.c: 1383: if((flag & (;doprnt.c: 1385: 0x04|;doprnt.c: 1387: (0
      +                          xC0)|0x800)) == (0x40|0x800)) {
 17225     03D5  30C4               	movlw	196
 17226     03D6  0550               	andwf	printf@flag,w
 17227     03D7  00BA               	movwf	??_printf
 17228     03D8  3008               	movlw	8
 17229     03D9  0551               	andwf	printf@flag+1,w
 17230     03DA  00BB               	movwf	??_printf+1
 17231     03DB  3040               	movlw	64
 17232     03DC  063A               	xorwf	??_printf,w
 17233     03DD  3008               	movlw	8
 17234     03DE  1903               	skipnz
 17235     03DF  063B               	xorwf	??_printf+1,w
 17236     03E0  1D03               	btfss	3,2
 17237     03E1  2BE3               	goto	u3181
 17238     03E2  2BE4               	goto	u3180
 17239     03E3                     u3181:
 17240     03E3  2BEF               	goto	l3647
 17241     03E4                     u3180:
 17242     03E4                     l3643:
 17243                           
 17244                           ;doprnt.c: 1388: if(width)
 17245     03E4  084D               	movf	printf@width,w
 17246     03E5  044E               	iorwf	printf@width+1,w
 17247     03E6  1903               	btfsc	3,2
 17248     03E7  2BE9               	goto	u3191
 17249     03E8  2BEA               	goto	u3190
 17250     03E9                     u3191:
 17251     03E9  2C14               	goto	l3655
 17252     03EA                     u3190:
 17253     03EA                     l3645:
 17254                           
 17255                           ;doprnt.c: 1389: width--;
 17256     03EA  30FF               	movlw	255
 17257     03EB  07CD               	addwf	printf@width,f
 17258     03EC  30FF               	movlw	255
 17259     03ED  3DCE               	addwfc	printf@width+1,f
 17260     03EE  2C14               	goto	l3655
 17261     03EF                     l3647:
 17262                           
 17263                           ;doprnt.c: 1394: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17264     03EF  30C0               	movlw	192
 17265     03F0  0550               	andwf	printf@flag,w
 17266     03F1  00BA               	movwf	??_printf
 17267     03F2  3008               	movlw	8
 17268     03F3  0551               	andwf	printf@flag+1,w
 17269     03F4  00BB               	movwf	??_printf+1
 17270     03F5  3080               	movlw	128
 17271     03F6  063A               	xorwf	??_printf,w
 17272     03F7  3008               	movlw	8
 17273     03F8  1903               	skipnz
 17274     03F9  063B               	xorwf	??_printf+1,w
 17275     03FA  1D03               	btfss	3,2
 17276     03FB  2BFD               	goto	u3201
 17277     03FC  2BFE               	goto	u3200
 17278     03FD                     u3201:
 17279     03FD  2C14               	goto	l3655
 17280     03FE                     u3200:
 17281     03FE                     l3649:
 17282                           
 17283                           ;doprnt.c: 1398: if(width > 2)
 17284     03FE  084E               	movf	printf@width+1,w
 17285     03FF  3A80               	xorlw	128
 17286     0400  00BA               	movwf	??_printf
 17287     0401  3080               	movlw	128
 17288     0402  023A               	subwf	??_printf,w
 17289     0403  1D03               	skipz
 17290     0404  2C07               	goto	u3215
 17291     0405  3003               	movlw	3
 17292     0406  024D               	subwf	printf@width,w
 17293     0407                     u3215:
 17294     0407  1C03               	skipc
 17295     0408  2C0A               	goto	u3211
 17296     0409  2C0B               	goto	u3210
 17297     040A                     u3211:
 17298     040A  2C11               	goto	l3653
 17299     040B                     u3210:
 17300     040B                     l3651:
 17301                           
 17302                           ;doprnt.c: 1399: width -= 2;
 17303     040B  30FE               	movlw	254
 17304     040C  0140               	movlb	0	; select bank0
 17305     040D  07CD               	addwf	printf@width,f
 17306     040E  30FF               	movlw	255
 17307     040F  3DCE               	addwfc	printf@width+1,f
 17308     0410  2C14               	goto	l3655
 17309     0411                     l3653:
 17310                           
 17311                           ;doprnt.c: 1400: else;doprnt.c: 1401: width = 0;
 17312     0411  0140               	movlb	0	; select bank0
 17313     0412  01CD               	clrf	printf@width
 17314     0413  01CE               	clrf	printf@width+1
 17315     0414                     l3655:
 17316                           
 17317                           ;doprnt.c: 1402: };doprnt.c: 1407: if(width > c)
 17318     0414  084E               	movf	printf@width+1,w
 17319     0415  3A80               	xorlw	128
 17320     0416  3C80               	sublw	128
 17321     0417  1D03               	skipz
 17322     0418  2C1B               	goto	u3225
 17323     0419  084D               	movf	printf@width,w
 17324     041A  024F               	subwf	printf@c,w
 17325     041B                     u3225:
 17326     041B  1803               	skipnc
 17327     041C  2C1E               	goto	u3221
 17328     041D  2C1F               	goto	u3220
 17329     041E                     u3221:
 17330     041E  2C28               	goto	l3659
 17331     041F                     u3220:
 17332     041F                     l3657:
 17333                           
 17334                           ;doprnt.c: 1408: width -= c;
 17335     041F  0140               	movlb	0	; select bank0
 17336     0420  084F               	movf	printf@c,w
 17337     0421  00BA               	movwf	??_printf
 17338     0422  01BB               	clrf	??_printf+1
 17339     0423  083A               	movf	??_printf,w
 17340     0424  02CD               	subwf	printf@width,f
 17341     0425  083B               	movf	??_printf+1,w
 17342     0426  3BCE               	subwfb	printf@width+1,f
 17343     0427  2C2B               	goto	l3661
 17344     0428                     l3659:
 17345                           
 17346                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 17347     0428  0140               	movlb	0	; select bank0
 17348     0429  01CD               	clrf	printf@width
 17349     042A  01CE               	clrf	printf@width+1
 17350     042B                     l3661:
 17351                           
 17352                           ;doprnt.c: 1413: if(flag & 0x04) {
 17353     042B  1D50               	btfss	printf@flag,2
 17354     042C  2C2E               	goto	u3231
 17355     042D  2C2F               	goto	u3230
 17356     042E                     u3231:
 17357     042E  2C85               	goto	l3687
 17358     042F                     u3230:
 17359     042F                     l3663:
 17360                           
 17361                           ;doprnt.c: 1418: if(flag & 0x03)
 17362     042F  3003               	movlw	3
 17363     0430  0550               	andwf	printf@flag,w
 17364     0431  00BA               	movwf	??_printf
 17365     0432  3000               	movlw	0
 17366     0433  0551               	andwf	printf@flag+1,w
 17367     0434  00BB               	movwf	??_printf+1
 17368     0435  083A               	movf	??_printf,w
 17369     0436  043B               	iorwf	??_printf+1,w
 17370     0437  1903               	btfsc	3,2
 17371     0438  2C3A               	goto	u3241
 17372     0439  2C3B               	goto	u3240
 17373     043A                     u3241:
 17374     043A  2C40               	goto	l943
 17375     043B                     u3240:
 17376     043B                     l3665:
 17377                           
 17378                           ;doprnt.c: 1419: (putch('-') );
 17379     043B  302D               	movlw	45
 17380     043C  319C  24D7  3180   	fcall	_putch
 17381     043F  2C6E               	goto	l3681
 17382     0440                     l943:
 17383                           
 17384                           ;doprnt.c: 1422: else;doprnt.c: 1425: if(flag & 0x01)
 17385     0440  1C50               	btfss	printf@flag,0
 17386     0441  2C43               	goto	u3251
 17387     0442  2C44               	goto	u3250
 17388     0443                     u3251:
 17389     0443  2C49               	goto	l3669
 17390     0444                     u3250:
 17391     0444                     l3667:
 17392                           
 17393                           ;doprnt.c: 1426: (putch(' ') );
 17394     0444  3020               	movlw	32
 17395     0445  319C  24D7  3180   	fcall	_putch
 17396     0448  2C6E               	goto	l3681
 17397     0449                     l3669:
 17398                           
 17399                           ;doprnt.c: 1429: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17400     0449  30C0               	movlw	192
 17401     044A  0550               	andwf	printf@flag,w
 17402     044B  00BA               	movwf	??_printf
 17403     044C  3008               	movlw	8
 17404     044D  0551               	andwf	printf@flag+1,w
 17405     044E  00BB               	movwf	??_printf+1
 17406     044F  3080               	movlw	128
 17407     0450  063A               	xorwf	??_printf,w
 17408     0451  3008               	movlw	8
 17409     0452  1903               	skipnz
 17410     0453  063B               	xorwf	??_printf+1,w
 17411     0454  1D03               	btfss	3,2
 17412     0455  2C57               	goto	u3261
 17413     0456  2C58               	goto	u3260
 17414     0457                     u3261:
 17415     0457  2C6E               	goto	l3681
 17416     0458                     u3260:
 17417     0458                     l3671:
 17418                           
 17419                           ;doprnt.c: 1430: (putch('0') );
 17420     0458  3030               	movlw	48
 17421     0459  319C  24D7  3180   	fcall	_putch
 17422     045C                     l3673:
 17423                           
 17424                           ;doprnt.c: 1432: (putch(flag & 0x20 ? 'X' : 'x') );
 17425     045C  0140               	movlb	0	; select bank0
 17426     045D  1AD0               	btfsc	printf@flag,5
 17427     045E  2C60               	goto	u3271
 17428     045F  2C61               	goto	u3270
 17429     0460                     u3271:
 17430     0460  2C66               	goto	l3677
 17431     0461                     u3270:
 17432     0461                     l3675:
 17433     0461  3078               	movlw	120
 17434     0462  00BE               	movwf	_printf$1641
 17435     0463  3000               	movlw	0
 17436     0464  00BF               	movwf	_printf$1641+1
 17437     0465  2C6A               	goto	l3679
 17438     0466                     l3677:
 17439     0466  3058               	movlw	88
 17440     0467  00BE               	movwf	_printf$1641
 17441     0468  3000               	movlw	0
 17442     0469  00BF               	movwf	_printf$1641+1
 17443     046A                     l3679:
 17444     046A  083E               	movf	_printf$1641,w
 17445     046B  319C  24D7  3180   	fcall	_putch
 17446     046E                     l3681:
 17447                           
 17448                           ;doprnt.c: 1438: };doprnt.c: 1441: if(width)
 17449     046E  0140               	movlb	0	; select bank0
 17450     046F  084D               	movf	printf@width,w
 17451     0470  044E               	iorwf	printf@width+1,w
 17452     0471  1903               	btfsc	3,2
 17453     0472  2C74               	goto	u3281
 17454     0473  2C75               	goto	u3280
 17455     0474                     u3281:
 17456     0474  2D81               	goto	l3737
 17457     0475                     u3280:
 17458     0475                     l3683:
 17459                           
 17460                           ;doprnt.c: 1443: (putch('0') );
 17461     0475  3030               	movlw	48
 17462     0476  319C  24D7  3180   	fcall	_putch
 17463     0479                     l3685:
 17464                           
 17465                           ;doprnt.c: 1444: while(--width);
 17466     0479  30FF               	movlw	255
 17467     047A  0140               	movlb	0	; select bank0
 17468     047B  07CD               	addwf	printf@width,f
 17469     047C  30FF               	movlw	255
 17470     047D  3DCE               	addwfc	printf@width+1,f
 17471     047E  084D               	movf	printf@width,w
 17472     047F  044E               	iorwf	printf@width+1,w
 17473     0480  1D03               	btfss	3,2
 17474     0481  2C83               	goto	u3291
 17475     0482  2C84               	goto	u3290
 17476     0483                     u3291:
 17477     0483  2C75               	goto	l3683
 17478     0484                     u3290:
 17479     0484  2D81               	goto	l3737
 17480     0485                     l3687:
 17481                           
 17482                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1452: && !(flag & 0x08);doprnt.c: 
      +                          1454: )
 17483     0485  084D               	movf	printf@width,w
 17484     0486  044E               	iorwf	printf@width+1,w
 17485     0487  1903               	btfsc	3,2
 17486     0488  2C8A               	goto	u3301
 17487     0489  2C8B               	goto	u3300
 17488     048A                     u3301:
 17489     048A  2C9E               	goto	l3695
 17490     048B                     u3300:
 17491     048B                     l3689:
 17492     048B  19D0               	btfsc	printf@flag,3
 17493     048C  2C8E               	goto	u3311
 17494     048D  2C8F               	goto	u3310
 17495     048E                     u3311:
 17496     048E  2C9E               	goto	l3695
 17497     048F                     u3310:
 17498     048F                     l3691:
 17499                           
 17500                           ;doprnt.c: 1456: (putch(' ') );
 17501     048F  3020               	movlw	32
 17502     0490  319C  24D7  3180   	fcall	_putch
 17503     0493                     l3693:
 17504                           
 17505                           ;doprnt.c: 1457: while(--width);
 17506     0493  30FF               	movlw	255
 17507     0494  0140               	movlb	0	; select bank0
 17508     0495  07CD               	addwf	printf@width,f
 17509     0496  30FF               	movlw	255
 17510     0497  3DCE               	addwfc	printf@width+1,f
 17511     0498  084D               	movf	printf@width,w
 17512     0499  044E               	iorwf	printf@width+1,w
 17513     049A  1D03               	btfss	3,2
 17514     049B  2C9D               	goto	u3321
 17515     049C  2C9E               	goto	u3320
 17516     049D                     u3321:
 17517     049D  2C8F               	goto	l3691
 17518     049E                     u3320:
 17519     049E                     l3695:
 17520                           
 17521                           ;doprnt.c: 1464: if(flag & 0x03)
 17522     049E  3003               	movlw	3
 17523     049F  0550               	andwf	printf@flag,w
 17524     04A0  00BA               	movwf	??_printf
 17525     04A1  3000               	movlw	0
 17526     04A2  0551               	andwf	printf@flag+1,w
 17527     04A3  00BB               	movwf	??_printf+1
 17528     04A4  083A               	movf	??_printf,w
 17529     04A5  043B               	iorwf	??_printf+1,w
 17530     04A6  1903               	btfsc	3,2
 17531     04A7  2CA9               	goto	u3331
 17532     04A8  2CAA               	goto	u3330
 17533     04A9                     u3331:
 17534     04A9  2CAF               	goto	l959
 17535     04AA                     u3330:
 17536     04AA                     l3697:
 17537                           
 17538                           ;doprnt.c: 1465: (putch('-') );
 17539     04AA  302D               	movlw	45
 17540     04AB  319C  24D7  3180   	fcall	_putch
 17541     04AE  2CB7               	goto	l3701
 17542     04AF                     l959:
 17543                           
 17544                           ;doprnt.c: 1469: else if(flag & 0x01)
 17545     04AF  1C50               	btfss	printf@flag,0
 17546     04B0  2CB2               	goto	u3341
 17547     04B1  2CB3               	goto	u3340
 17548     04B2                     u3341:
 17549     04B2  2CB7               	goto	l3701
 17550     04B3                     u3340:
 17551     04B3                     l3699:
 17552                           
 17553                           ;doprnt.c: 1470: (putch(' ') );
 17554     04B3  3020               	movlw	32
 17555     04B4  319C  24D7  3180   	fcall	_putch
 17556     04B7                     l3701:
 17557                           
 17558                           ;doprnt.c: 1474: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 17559     04B7  30C0               	movlw	192
 17560     04B8  0140               	movlb	0	; select bank0
 17561     04B9  0550               	andwf	printf@flag,w
 17562     04BA  00BA               	movwf	??_printf
 17563     04BB  3008               	movlw	8
 17564     04BC  0551               	andwf	printf@flag+1,w
 17565     04BD  00BB               	movwf	??_printf+1
 17566     04BE  3040               	movlw	64
 17567     04BF  063A               	xorwf	??_printf,w
 17568     04C0  3008               	movlw	8
 17569     04C1  1903               	skipnz
 17570     04C2  063B               	xorwf	??_printf+1,w
 17571     04C3  1D03               	btfss	3,2
 17572     04C4  2CC6               	goto	u3351
 17573     04C5  2CC7               	goto	u3350
 17574     04C6                     u3351:
 17575     04C6  2CCC               	goto	l3705
 17576     04C7                     u3350:
 17577     04C7                     l3703:
 17578                           
 17579                           ;doprnt.c: 1475: (putch('0') );
 17580     04C7  3030               	movlw	48
 17581     04C8  319C  24D7  3180   	fcall	_putch
 17582     04CB  2D81               	goto	l3737
 17583     04CC                     l3705:
 17584                           
 17585                           ;doprnt.c: 1476: else;doprnt.c: 1480: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17586     04CC  30C0               	movlw	192
 17587     04CD  0550               	andwf	printf@flag,w
 17588     04CE  00BA               	movwf	??_printf
 17589     04CF  3008               	movlw	8
 17590     04D0  0551               	andwf	printf@flag+1,w
 17591     04D1  00BB               	movwf	??_printf+1
 17592     04D2  3080               	movlw	128
 17593     04D3  063A               	xorwf	??_printf,w
 17594     04D4  3008               	movlw	8
 17595     04D5  1903               	skipnz
 17596     04D6  063B               	xorwf	??_printf+1,w
 17597     04D7  1D03               	btfss	3,2
 17598     04D8  2CDA               	goto	u3361
 17599     04D9  2CDB               	goto	u3360
 17600     04DA                     u3361:
 17601     04DA  2CF2               	goto	l955
 17602     04DB                     u3360:
 17603     04DB                     l3707:
 17604                           
 17605                           ;doprnt.c: 1484: (putch('0') );
 17606     04DB  3030               	movlw	48
 17607     04DC  319C  24D7  3180   	fcall	_putch
 17608     04DF                     l3709:
 17609                           
 17610                           ;doprnt.c: 1486: (putch(flag & 0x20 ? 'X' : 'x') );
 17611     04DF  0140               	movlb	0	; select bank0
 17612     04E0  1AD0               	btfsc	printf@flag,5
 17613     04E1  2CE3               	goto	u3371
 17614     04E2  2CE4               	goto	u3370
 17615     04E3                     u3371:
 17616     04E3  2CE9               	goto	l3713
 17617     04E4                     u3370:
 17618     04E4                     l3711:
 17619     04E4  3078               	movlw	120
 17620     04E5  00C0               	movwf	_printf$1642
 17621     04E6  3000               	movlw	0
 17622     04E7  00C1               	movwf	_printf$1642+1
 17623     04E8  2CED               	goto	l3715
 17624     04E9                     l3713:
 17625     04E9  3058               	movlw	88
 17626     04EA  00C0               	movwf	_printf$1642
 17627     04EB  3000               	movlw	0
 17628     04EC  00C1               	movwf	_printf$1642+1
 17629     04ED                     l3715:
 17630     04ED  0840               	movf	_printf$1642,w
 17631     04EE  319C  24D7  3180   	fcall	_putch
 17632     04F1  2D81               	goto	l3737
 17633     04F2                     l955:
 17634                           
 17635                           ;doprnt.c: 1492: };doprnt.c: 1495: };doprnt.c: 1500: while(prec--) {
 17636     04F2  2D81               	goto	l3737
 17637     04F3                     l3717:
 17638                           
 17639                           ;doprnt.c: 1512: case 0xC0:;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 1
      +                          0 + '0';
 17640     04F3  300A               	movlw	10
 17641     04F4  00A8               	movwf	___lwmod@divisor
 17642     04F5  3000               	movlw	0
 17643     04F6  00A9               	movwf	___lwmod@divisor+1
 17644     04F7  084C               	movf	printf@prec,w
 17645     04F8  00BA               	movwf	??_printf
 17646     04F9  01BB               	clrf	??_printf+1
 17647     04FA  35BA               	lslf	??_printf,f
 17648     04FB  0DBB               	rlf	??_printf+1,f
 17649     04FC  303F               	movlw	low _dpowers
 17650     04FD  073A               	addwf	??_printf,w
 17651     04FE  0084               	movwf	4
 17652     04FF  301A               	movlw	high _dpowers
 17653     0500  3D3B               	addwfc	??_printf+1,w
 17654     0501  3880               	iorlw	128
 17655     0502  0085               	movwf	5
 17656     0503  3F00               	moviw [0]fsr0
 17657     0504  00A0               	movwf	___lwdiv@divisor
 17658     0505  3F01               	moviw [1]fsr0
 17659     0506  00A1               	movwf	___lwdiv@divisor+1
 17660     0507  084B               	movf	printf@val+1,w
 17661     0508  00A3               	movwf	___lwdiv@dividend+1
 17662     0509  084A               	movf	printf@val,w
 17663     050A  00A2               	movwf	___lwdiv@dividend
 17664     050B  319F  27C3  3180   	fcall	___lwdiv
 17665     050E  0140               	movlb	0	; select bank0
 17666     050F  0821               	movf	?___lwdiv+1,w
 17667     0510  00AB               	movwf	___lwmod@dividend+1
 17668     0511  0820               	movf	?___lwdiv,w
 17669     0512  00AA               	movwf	___lwmod@dividend
 17670     0513  319F  278E  3180   	fcall	___lwmod
 17671     0516  0140               	movlb	0	; select bank0
 17672     0517  0828               	movf	?___lwmod,w
 17673     0518  3E30               	addlw	48
 17674     0519  00CF               	movwf	printf@c
 17675                           
 17676                           ;doprnt.c: 1517: break;
 17677     051A  2D7D               	goto	l3735
 17678     051B                     l3719:
 17679                           
 17680                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
 17681     051B  084C               	movf	printf@prec,w
 17682     051C  00BA               	movwf	??_printf
 17683     051D  01BB               	clrf	??_printf+1
 17684     051E  35BA               	lslf	??_printf,f
 17685     051F  0DBB               	rlf	??_printf+1,f
 17686     0520  3000               	movlw	low _hexpowers
 17687     0521  073A               	addwf	??_printf,w
 17688     0522  0084               	movwf	4
 17689     0523  3010               	movlw	high _hexpowers
 17690     0524  3D3B               	addwfc	??_printf+1,w
 17691     0525  3880               	iorlw	128
 17692     0526  0085               	movwf	5
 17693     0527  3F00               	moviw [0]fsr0
 17694     0528  00A0               	movwf	___lwdiv@divisor
 17695     0529  3F01               	moviw [1]fsr0
 17696     052A  00A1               	movwf	___lwdiv@divisor+1
 17697     052B  084B               	movf	printf@val+1,w
 17698     052C  00A3               	movwf	___lwdiv@dividend+1
 17699     052D  084A               	movf	printf@val,w
 17700     052E  00A2               	movwf	___lwdiv@dividend
 17701     052F  319F  27C3  3180   	fcall	___lwdiv
 17702     0532  0140               	movlb	0	; select bank0
 17703     0533  0820               	movf	?___lwdiv,w
 17704     0534  390F               	andlw	15
 17705     0535  00C4               	movwf	printf@idx
 17706     0536                     l3721:
 17707                           
 17708                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 17709     0536  1AD0               	btfsc	printf@flag,5
 17710     0537  2D39               	goto	u3381
 17711     0538  2D3A               	goto	u3380
 17712     0539                     u3381:
 17713     0539  2D3F               	goto	l3725
 17714     053A                     u3380:
 17715     053A                     l3723:
 17716     053A  30D0               	movlw	low (STR_34| (0+32768))
 17717     053B  00C2               	movwf	_printf$1648
 17718     053C  3099               	movlw	high (STR_34| (0+32768))
 17719     053D  00C3               	movwf	_printf$1648+1
 17720     053E  2D43               	goto	l3727
 17721     053F                     l3725:
 17722     053F  30BF               	movlw	low (STR_33| (0+32768))
 17723     0540  00C2               	movwf	_printf$1648
 17724     0541  3099               	movlw	high (STR_33| (0+32768))
 17725     0542  00C3               	movwf	_printf$1648+1
 17726     0543                     l3727:
 17727     0543  0843               	movf	_printf$1648+1,w
 17728     0544  00BB               	movwf	??_printf+1
 17729     0545  0842               	movf	_printf$1648,w
 17730     0546  00BA               	movwf	??_printf
 17731     0547  0844               	movf	printf@idx,w
 17732     0548  073A               	addwf	??_printf,w
 17733     0549  0084               	movwf	4
 17734     054A  083B               	movf	??_printf+1,w
 17735     054B  1803               	skipnc
 17736     054C  0A3B               	incf	??_printf+1,w
 17737     054D  0085               	movwf	5
 17738     054E  0800               	movf	0,w	;code access
 17739     054F  00CF               	movwf	printf@c
 17740                           
 17741                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
 17742     0550  2D7D               	goto	l3735
 17743     0551                     l3729:
 17744                           
 17745                           ;doprnt.c: 1544: c = ((val / octpowers[(unsigned char)prec]) & 07) + '0';
 17746     0551  084C               	movf	printf@prec,w
 17747     0552  00BA               	movwf	??_printf
 17748     0553  01BB               	clrf	??_printf+1
 17749     0554  35BA               	lslf	??_printf,f
 17750     0555  0DBB               	rlf	??_printf+1,f
 17751     0556  301D               	movlw	low _octpowers
 17752     0557  073A               	addwf	??_printf,w
 17753     0558  0084               	movwf	4
 17754     0559  301A               	movlw	high _octpowers
 17755     055A  3D3B               	addwfc	??_printf+1,w
 17756     055B  3880               	iorlw	128
 17757     055C  0085               	movwf	5
 17758     055D  3F00               	moviw [0]fsr0
 17759     055E  00A0               	movwf	___lwdiv@divisor
 17760     055F  3F01               	moviw [1]fsr0
 17761     0560  00A1               	movwf	___lwdiv@divisor+1
 17762     0561  084B               	movf	printf@val+1,w
 17763     0562  00A3               	movwf	___lwdiv@dividend+1
 17764     0563  084A               	movf	printf@val,w
 17765     0564  00A2               	movwf	___lwdiv@dividend
 17766     0565  319F  27C3  3180   	fcall	___lwdiv
 17767     0568  0140               	movlb	0	; select bank0
 17768     0569  0820               	movf	?___lwdiv,w
 17769     056A  3907               	andlw	7
 17770     056B  3E30               	addlw	48
 17771     056C  00CF               	movwf	printf@c
 17772                           
 17773                           ;doprnt.c: 1546: break;
 17774     056D  2D7D               	goto	l3735
 17775     056E                     l3733:
 17776     056E  0850               	movf	printf@flag,w
 17777     056F  39C0               	andlw	192
 17778                           
 17779                           ; Switch size 1, requested type "simple"
 17780                           ; Number of cases is 4, Range of values is 0 to 192
 17781                           ; switch strategies available:
 17782                           ; Name         Instructions Cycles
 17783                           ; simple_byte           13     7 (average)
 17784                           ; jumptable            260     6 (fixed)
 17785                           ;	Chosen strategy is simple_byte
 17786     0570  3A00               	xorlw	0	; case 0
 17787     0571  1903               	skipnz
 17788     0572  2CF3               	goto	l3717
 17789     0573  3A40               	xorlw	64	; case 64
 17790     0574  1903               	skipnz
 17791     0575  2D51               	goto	l3729
 17792     0576  3AC0               	xorlw	192	; case 128
 17793     0577  1903               	skipnz
 17794     0578  2D1B               	goto	l3719
 17795     0579  3A40               	xorlw	64	; case 192
 17796     057A  1903               	skipnz
 17797     057B  2CF3               	goto	l3717
 17798     057C  2D7D               	goto	l3735
 17799     057D                     l3735:
 17800                           
 17801                           ;doprnt.c: 1550: (putch(c) );
 17802     057D  084F               	movf	printf@c,w
 17803     057E  319C  24D7  3180   	fcall	_putch
 17804     0581                     l3737:
 17805     0581  30FF               	movlw	255
 17806     0582  0140               	movlb	0	; select bank0
 17807     0583  00BA               	movwf	??_printf
 17808     0584  083A               	movf	??_printf,w
 17809     0585  07CC               	addwf	printf@prec,f
 17810     0586  0A4C               	incf	printf@prec,w
 17811     0587  1D03               	btfss	3,2
 17812     0588  2D8A               	goto	u3391
 17813     0589  2D8B               	goto	u3390
 17814     058A                     u3391:
 17815     058A  2D6E               	goto	l3733
 17816     058B                     u3390:
 17817     058B                     l981:
 17818                           
 17819                           ;doprnt.c: 1551: };doprnt.c: 1554: if((flag & 0x08) && width > 0)
 17820     058B  1DD0               	btfss	printf@flag,3
 17821     058C  2D8E               	goto	u3401
 17822     058D  2D8F               	goto	u3400
 17823     058E                     u3401:
 17824     058E  2DAB               	goto	l3745
 17825     058F                     u3400:
 17826     058F                     l3739:
 17827     058F  084E               	movf	printf@width+1,w
 17828     0590  3A80               	xorlw	128
 17829     0591  00BA               	movwf	??_printf
 17830     0592  3080               	movlw	128
 17831     0593  023A               	subwf	??_printf,w
 17832     0594  1D03               	skipz
 17833     0595  2D98               	goto	u3415
 17834     0596  3001               	movlw	1
 17835     0597  024D               	subwf	printf@width,w
 17836     0598                     u3415:
 17837     0598  1C03               	skipc
 17838     0599  2D9B               	goto	u3411
 17839     059A  2D9C               	goto	u3410
 17840     059B                     u3411:
 17841     059B  2DAB               	goto	l3745
 17842     059C                     u3410:
 17843     059C                     l3741:
 17844                           
 17845                           ;doprnt.c: 1556: (putch(' ') );
 17846     059C  3020               	movlw	32
 17847     059D  319C  24D7  3180   	fcall	_putch
 17848     05A0                     l3743:
 17849                           
 17850                           ;doprnt.c: 1557: while(--width);
 17851     05A0  30FF               	movlw	255
 17852     05A1  0140               	movlb	0	; select bank0
 17853     05A2  07CD               	addwf	printf@width,f
 17854     05A3  30FF               	movlw	255
 17855     05A4  3DCE               	addwfc	printf@width+1,f
 17856     05A5  084D               	movf	printf@width,w
 17857     05A6  044E               	iorwf	printf@width+1,w
 17858     05A7  1D03               	btfss	3,2
 17859     05A8  2DAA               	goto	u3421
 17860     05A9  2DAB               	goto	u3420
 17861     05AA                     u3421:
 17862     05AA  2D9C               	goto	l3741
 17863     05AB                     u3420:
 17864     05AB                     l3745:
 17865     05AB  0140               	movlb	0	; select bank0
 17866     05AC  082F               	movf	printf@f+1,w
 17867     05AD  00BB               	movwf	??_printf+1
 17868     05AE  082E               	movf	printf@f,w
 17869     05AF  00BA               	movwf	??_printf
 17870     05B0  0AAE               	incf	printf@f,f
 17871     05B1  1903               	skipnz
 17872     05B2  0AAF               	incf	printf@f+1,f
 17873     05B3  083A               	movf	??_printf,w
 17874     05B4  0084               	movwf	4
 17875     05B5  083B               	movf	??_printf+1,w
 17876     05B6  0085               	movwf	5
 17877     05B7  0800               	movf	0,w	;code access
 17878     05B8  00CF               	movwf	printf@c
 17879     05B9  084F               	movf	printf@c,w
 17880     05BA  1D03               	btfss	3,2
 17881     05BB  2DBD               	goto	u3431
 17882     05BC  2DBE               	goto	u3430
 17883     05BD                     u3431:
 17884     05BD  28C5               	goto	l3433
 17885     05BE                     u3430:
 17886     05BE                     l986:
 17887     05BE  0008               	return
 17888     05BF                     __end_of_printf:
 17889                           
 17890                           	psect	text44
 17891     1CD7                     __ptext44:	
 17892 ;; *************** function _putch *****************
 17893 ;; Defined at:
 17894 ;;		line 29 in file "uart.c"
 17895 ;; Parameters:    Size  Location     Type
 17896 ;;  data            1    wreg     unsigned char 
 17897 ;; Auto vars:     Size  Location     Type
 17898 ;;  data            1    0[BANK0 ] unsigned char 
 17899 ;; Return value:  Size  Location     Type
 17900 ;;                  1    wreg      void 
 17901 ;; Registers used:
 17902 ;;		wreg
 17903 ;; Tracked objects:
 17904 ;;		On entry : 0/0
 17905 ;;		On exit  : 0/0
 17906 ;;		Unchanged: 0/0
 17907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17911 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17912 ;;Total ram usage:        1 bytes
 17913 ;; Hardware stack levels used: 1
 17914 ;; Hardware stack levels required when called: 2
 17915 ;; This function calls:
 17916 ;;		Nothing
 17917 ;; This function is called by:
 17918 ;;		_printf
 17919 ;; This function uses a non-reentrant model
 17920 ;;
 17921                           
 17922     1CD7                     _putch:	
 17923                           ;psect for function _putch
 17924                           
 17925                           
 17926                           ;incstack = 0
 17927                           ; Regs used in _putch: [wreg]
 17928                           ;putch@data stored from wreg
 17929     1CD7  0140               	movlb	0	; select bank0
 17930     1CD8  00A0               	movwf	putch@data
 17931     1CD9                     l3323:
 17932     1CD9                     l468:	
 17933                           ;uart.c: 31: while(0 == PIR3bits.TX1IF);
 17934                           
 17935     1CD9  014E               	movlb	14	; select bank14
 17936     1CDA  1E0F               	btfss	15,4	;volatile
 17937     1CDB  2CDD               	goto	u2551
 17938     1CDC  2CDE               	goto	u2550
 17939     1CDD                     u2551:
 17940     1CDD  2CD9               	goto	l468
 17941     1CDE                     u2550:
 17942     1CDE                     l3325:
 17943                           
 17944                           ;uart.c: 32: TX1REG = data;
 17945     1CDE  0140               	movlb	0	; select bank0
 17946     1CDF  0820               	movf	putch@data,w
 17947     1CE0  0142               	movlb	2	; select bank2
 17948     1CE1  009A               	movwf	26	;volatile
 17949     1CE2                     l471:
 17950     1CE2  0008               	return
 17951     1CE3                     __end_of_putch:
 17952                           
 17953                           	psect	text45
 17954     1D4D                     __ptext45:	
 17955 ;; *************** function _isdigit *****************
 17956 ;; Defined at:
 17957 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isdigit.c"
 17958 ;; Parameters:    Size  Location     Type
 17959 ;;  c               1    wreg     unsigned char 
 17960 ;; Auto vars:     Size  Location     Type
 17961 ;;  c               1    1[BANK0 ] unsigned char 
 17962 ;; Return value:  Size  Location     Type
 17963 ;;		None               void
 17964 ;; Registers used:
 17965 ;;		wreg, status,2, status,0
 17966 ;; Tracked objects:
 17967 ;;		On entry : 0/0
 17968 ;;		On exit  : 0/0
 17969 ;;		Unchanged: 0/0
 17970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17972 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17974 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17975 ;;Total ram usage:        2 bytes
 17976 ;; Hardware stack levels used: 1
 17977 ;; Hardware stack levels required when called: 2
 17978 ;; This function calls:
 17979 ;;		Nothing
 17980 ;; This function is called by:
 17981 ;;		_printf
 17982 ;;		_strtol
 17983 ;; This function uses a non-reentrant model
 17984 ;;
 17985                           
 17986     1D4D                     _isdigit:	
 17987                           ;psect for function _isdigit
 17988                           
 17989                           
 17990                           ;incstack = 0
 17991                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 17992                           ;isdigit@c stored from wreg
 17993     1D4D  0140               	movlb	0	; select bank0
 17994     1D4E  00A1               	movwf	isdigit@c
 17995     1D4F                     l3331:
 17996     1D4F  01A0               	clrf	_isdigit$1931
 17997     1D50                     l3333:
 17998     1D50  303A               	movlw	58
 17999     1D51  0221               	subwf	isdigit@c,w
 18000     1D52  1803               	skipnc
 18001     1D53  2D55               	goto	u2571
 18002     1D54  2D56               	goto	u2570
 18003     1D55                     u2571:
 18004     1D55  2D5E               	goto	l3339
 18005     1D56                     u2570:
 18006     1D56                     l3335:
 18007     1D56  3030               	movlw	48
 18008     1D57  0221               	subwf	isdigit@c,w
 18009     1D58  1C03               	skipc
 18010     1D59  2D5B               	goto	u2581
 18011     1D5A  2D5C               	goto	u2580
 18012     1D5B                     u2581:
 18013     1D5B  2D5E               	goto	l3339
 18014     1D5C                     u2580:
 18015     1D5C                     l3337:
 18016     1D5C  01A0               	clrf	_isdigit$1931
 18017     1D5D  0AA0               	incf	_isdigit$1931,f
 18018     1D5E                     l3339:
 18019     1D5E  0C20               	rrf	_isdigit$1931,w
 18020     1D5F                     l1443:
 18021     1D5F  0008               	return
 18022     1D60                     __end_of_isdigit:
 18023                           
 18024                           	psect	text46
 18025     1E6F                     __ptext46:	
 18026 ;; *************** function ___wmul *****************
 18027 ;; Defined at:
 18028 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul16.c"
 18029 ;; Parameters:    Size  Location     Type
 18030 ;;  multiplier      2    0[BANK0 ] unsigned int 
 18031 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 18032 ;; Auto vars:     Size  Location     Type
 18033 ;;  product         2    4[BANK0 ] unsigned int 
 18034 ;; Return value:  Size  Location     Type
 18035 ;;                  2    0[BANK0 ] unsigned int 
 18036 ;; Registers used:
 18037 ;;		wreg, status,2, status,0
 18038 ;; Tracked objects:
 18039 ;;		On entry : 0/0
 18040 ;;		On exit  : 0/0
 18041 ;;		Unchanged: 0/0
 18042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18043 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18044 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18046 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18047 ;;Total ram usage:        6 bytes
 18048 ;; Hardware stack levels used: 1
 18049 ;; Hardware stack levels required when called: 2
 18050 ;; This function calls:
 18051 ;;		Nothing
 18052 ;; This function is called by:
 18053 ;;		_printf
 18054 ;; This function uses a non-reentrant model
 18055 ;;
 18056                           
 18057     1E6F                     ___wmul:	
 18058                           ;psect for function ___wmul
 18059                           
 18060     1E6F                     l3343:	
 18061                           ;incstack = 0
 18062                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18063                           
 18064     1E6F  0140               	movlb	0	; select bank0
 18065     1E70  01A4               	clrf	___wmul@product
 18066     1E71  01A5               	clrf	___wmul@product+1
 18067     1E72                     l3345:
 18068     1E72  1C20               	btfss	___wmul@multiplier,0
 18069     1E73  2E75               	goto	u2591
 18070     1E74  2E76               	goto	u2590
 18071     1E75                     u2591:
 18072     1E75  2E7A               	goto	l990
 18073     1E76                     u2590:
 18074     1E76                     l3347:
 18075     1E76  0822               	movf	___wmul@multiplicand,w
 18076     1E77  07A4               	addwf	___wmul@product,f
 18077     1E78  0823               	movf	___wmul@multiplicand+1,w
 18078     1E79  3DA5               	addwfc	___wmul@product+1,f
 18079     1E7A                     l990:
 18080     1E7A  3001               	movlw	1
 18081     1E7B                     u2605:
 18082     1E7B  35A2               	lslf	___wmul@multiplicand,f
 18083     1E7C  0DA3               	rlf	___wmul@multiplicand+1,f
 18084     1E7D  0B89               	decfsz	9,f
 18085     1E7E  2E7B               	goto	u2605
 18086     1E7F                     l3349:
 18087     1E7F  3001               	movlw	1
 18088     1E80                     u2615:
 18089     1E80  36A1               	lsrf	___wmul@multiplier+1,f
 18090     1E81  0CA0               	rrf	___wmul@multiplier,f
 18091     1E82  0B89               	decfsz	9,f
 18092     1E83  2E80               	goto	u2615
 18093     1E84                     l3351:
 18094     1E84  0820               	movf	___wmul@multiplier,w
 18095     1E85  0421               	iorwf	___wmul@multiplier+1,w
 18096     1E86  1D03               	btfss	3,2
 18097     1E87  2E89               	goto	u2621
 18098     1E88  2E8A               	goto	u2620
 18099     1E89                     u2621:
 18100     1E89  2E72               	goto	l3345
 18101     1E8A                     u2620:
 18102     1E8A                     l3353:
 18103     1E8A  0825               	movf	___wmul@product+1,w
 18104     1E8B  00A1               	movwf	?___wmul+1
 18105     1E8C  0824               	movf	___wmul@product,w
 18106     1E8D  00A0               	movwf	?___wmul
 18107     1E8E                     l992:
 18108     1E8E  0008               	return
 18109     1E8F                     __end_of___wmul:
 18110                           
 18111                           	psect	text47
 18112     1F8E                     __ptext47:	
 18113 ;; *************** function ___lwmod *****************
 18114 ;; Defined at:
 18115 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/lwmod.c"
 18116 ;; Parameters:    Size  Location     Type
 18117 ;;  divisor         2    8[BANK0 ] unsigned int 
 18118 ;;  dividend        2   10[BANK0 ] unsigned int 
 18119 ;; Auto vars:     Size  Location     Type
 18120 ;;  counter         1   13[BANK0 ] unsigned char 
 18121 ;; Return value:  Size  Location     Type
 18122 ;;                  2    8[BANK0 ] unsigned int 
 18123 ;; Registers used:
 18124 ;;		wreg, status,2, status,0
 18125 ;; Tracked objects:
 18126 ;;		On entry : 0/0
 18127 ;;		On exit  : 0/0
 18128 ;;		Unchanged: 0/0
 18129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18131 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18132 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18133 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18134 ;;Total ram usage:        6 bytes
 18135 ;; Hardware stack levels used: 1
 18136 ;; Hardware stack levels required when called: 2
 18137 ;; This function calls:
 18138 ;;		Nothing
 18139 ;; This function is called by:
 18140 ;;		_printf
 18141 ;; This function uses a non-reentrant model
 18142 ;;
 18143                           
 18144     1F8E                     ___lwmod:	
 18145                           ;psect for function ___lwmod
 18146                           
 18147     1F8E                     l3397:	
 18148                           ;incstack = 0
 18149                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 18150                           
 18151     1F8E  0140               	movlb	0	; select bank0
 18152     1F8F  0828               	movf	___lwmod@divisor,w
 18153     1F90  0429               	iorwf	___lwmod@divisor+1,w
 18154     1F91  1903               	btfsc	3,2
 18155     1F92  2F94               	goto	u2721
 18156     1F93  2F95               	goto	u2720
 18157     1F94                     u2721:
 18158     1F94  2FBE               	goto	l3415
 18159     1F95                     u2720:
 18160     1F95                     l3399:
 18161     1F95  01AD               	clrf	___lwmod@counter
 18162     1F96  0AAD               	incf	___lwmod@counter,f
 18163     1F97  2FA1               	goto	l3405
 18164     1F98                     l3401:
 18165     1F98  3001               	movlw	1
 18166     1F99                     u2735:
 18167     1F99  35A8               	lslf	___lwmod@divisor,f
 18168     1F9A  0DA9               	rlf	___lwmod@divisor+1,f
 18169     1F9B  0B89               	decfsz	9,f
 18170     1F9C  2F99               	goto	u2735
 18171     1F9D                     l3403:
 18172     1F9D  3001               	movlw	1
 18173     1F9E  00AC               	movwf	??___lwmod
 18174     1F9F  082C               	movf	??___lwmod,w
 18175     1FA0  07AD               	addwf	___lwmod@counter,f
 18176     1FA1                     l3405:
 18177     1FA1  1FA9               	btfss	___lwmod@divisor+1,7
 18178     1FA2  2FA4               	goto	u2741
 18179     1FA3  2FA5               	goto	u2740
 18180     1FA4                     u2741:
 18181     1FA4  2F98               	goto	l3401
 18182     1FA5                     u2740:
 18183     1FA5                     l3407:
 18184     1FA5  0829               	movf	___lwmod@divisor+1,w
 18185     1FA6  022B               	subwf	___lwmod@dividend+1,w
 18186     1FA7  1D03               	skipz
 18187     1FA8  2FAB               	goto	u2755
 18188     1FA9  0828               	movf	___lwmod@divisor,w
 18189     1FAA  022A               	subwf	___lwmod@dividend,w
 18190     1FAB                     u2755:
 18191     1FAB  1C03               	skipc
 18192     1FAC  2FAE               	goto	u2751
 18193     1FAD  2FAF               	goto	u2750
 18194     1FAE                     u2751:
 18195     1FAE  2FB3               	goto	l3411
 18196     1FAF                     u2750:
 18197     1FAF                     l3409:
 18198     1FAF  0828               	movf	___lwmod@divisor,w
 18199     1FB0  02AA               	subwf	___lwmod@dividend,f
 18200     1FB1  0829               	movf	___lwmod@divisor+1,w
 18201     1FB2  3BAB               	subwfb	___lwmod@dividend+1,f
 18202     1FB3                     l3411:
 18203     1FB3  3001               	movlw	1
 18204     1FB4                     u2765:
 18205     1FB4  36A9               	lsrf	___lwmod@divisor+1,f
 18206     1FB5  0CA8               	rrf	___lwmod@divisor,f
 18207     1FB6  0B89               	decfsz	9,f
 18208     1FB7  2FB4               	goto	u2765
 18209     1FB8                     l3413:
 18210     1FB8  3001               	movlw	1
 18211     1FB9  02AD               	subwf	___lwmod@counter,f
 18212     1FBA  1D03               	btfss	3,2
 18213     1FBB  2FBD               	goto	u2771
 18214     1FBC  2FBE               	goto	u2770
 18215     1FBD                     u2771:
 18216     1FBD  2FA5               	goto	l3407
 18217     1FBE                     u2770:
 18218     1FBE                     l3415:
 18219     1FBE  082B               	movf	___lwmod@dividend+1,w
 18220     1FBF  00A9               	movwf	?___lwmod+1
 18221     1FC0  082A               	movf	___lwmod@dividend,w
 18222     1FC1  00A8               	movwf	?___lwmod
 18223     1FC2                     l1272:
 18224     1FC2  0008               	return
 18225     1FC3                     __end_of___lwmod:
 18226                           
 18227                           	psect	text48
 18228     1FC3                     __ptext48:	
 18229 ;; *************** function ___lwdiv *****************
 18230 ;; Defined at:
 18231 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/lwdiv.c"
 18232 ;; Parameters:    Size  Location     Type
 18233 ;;  divisor         2    0[BANK0 ] unsigned int 
 18234 ;;  dividend        2    2[BANK0 ] unsigned int 
 18235 ;; Auto vars:     Size  Location     Type
 18236 ;;  quotient        2    5[BANK0 ] unsigned int 
 18237 ;;  counter         1    7[BANK0 ] unsigned char 
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  2    0[BANK0 ] unsigned int 
 18240 ;; Registers used:
 18241 ;;		wreg, status,2, status,0
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18247 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18248 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18250 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18251 ;;Total ram usage:        8 bytes
 18252 ;; Hardware stack levels used: 1
 18253 ;; Hardware stack levels required when called: 2
 18254 ;; This function calls:
 18255 ;;		Nothing
 18256 ;; This function is called by:
 18257 ;;		_printf
 18258 ;; This function uses a non-reentrant model
 18259 ;;
 18260                           
 18261     1FC3                     ___lwdiv:	
 18262                           ;psect for function ___lwdiv
 18263                           
 18264     1FC3                     l3371:	
 18265                           ;incstack = 0
 18266                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 18267                           
 18268     1FC3  0140               	movlb	0	; select bank0
 18269     1FC4  01A5               	clrf	___lwdiv@quotient
 18270     1FC5  01A6               	clrf	___lwdiv@quotient+1
 18271     1FC6                     l3373:
 18272     1FC6  0820               	movf	___lwdiv@divisor,w
 18273     1FC7  0421               	iorwf	___lwdiv@divisor+1,w
 18274     1FC8  1903               	btfsc	3,2
 18275     1FC9  2FCB               	goto	u2651
 18276     1FCA  2FCC               	goto	u2650
 18277     1FCB                     u2651:
 18278     1FCB  2FFB               	goto	l3393
 18279     1FCC                     u2650:
 18280     1FCC                     l3375:
 18281     1FCC  01A7               	clrf	___lwdiv@counter
 18282     1FCD  0AA7               	incf	___lwdiv@counter,f
 18283     1FCE  2FD8               	goto	l3381
 18284     1FCF                     l3377:
 18285     1FCF  3001               	movlw	1
 18286     1FD0                     u2665:
 18287     1FD0  35A0               	lslf	___lwdiv@divisor,f
 18288     1FD1  0DA1               	rlf	___lwdiv@divisor+1,f
 18289     1FD2  0B89               	decfsz	9,f
 18290     1FD3  2FD0               	goto	u2665
 18291     1FD4                     l3379:
 18292     1FD4  3001               	movlw	1
 18293     1FD5  00A4               	movwf	??___lwdiv
 18294     1FD6  0824               	movf	??___lwdiv,w
 18295     1FD7  07A7               	addwf	___lwdiv@counter,f
 18296     1FD8                     l3381:
 18297     1FD8  1FA1               	btfss	___lwdiv@divisor+1,7
 18298     1FD9  2FDB               	goto	u2671
 18299     1FDA  2FDC               	goto	u2670
 18300     1FDB                     u2671:
 18301     1FDB  2FCF               	goto	l3377
 18302     1FDC                     u2670:
 18303     1FDC                     l3383:
 18304     1FDC  3001               	movlw	1
 18305     1FDD                     u2685:
 18306     1FDD  35A5               	lslf	___lwdiv@quotient,f
 18307     1FDE  0DA6               	rlf	___lwdiv@quotient+1,f
 18308     1FDF  0B89               	decfsz	9,f
 18309     1FE0  2FDD               	goto	u2685
 18310     1FE1  0821               	movf	___lwdiv@divisor+1,w
 18311     1FE2  0223               	subwf	___lwdiv@dividend+1,w
 18312     1FE3  1D03               	skipz
 18313     1FE4  2FE7               	goto	u2695
 18314     1FE5  0820               	movf	___lwdiv@divisor,w
 18315     1FE6  0222               	subwf	___lwdiv@dividend,w
 18316     1FE7                     u2695:
 18317     1FE7  1C03               	skipc
 18318     1FE8  2FEA               	goto	u2691
 18319     1FE9  2FEB               	goto	u2690
 18320     1FEA                     u2691:
 18321     1FEA  2FF0               	goto	l3389
 18322     1FEB                     u2690:
 18323     1FEB                     l3385:
 18324     1FEB  0820               	movf	___lwdiv@divisor,w
 18325     1FEC  02A2               	subwf	___lwdiv@dividend,f
 18326     1FED  0821               	movf	___lwdiv@divisor+1,w
 18327     1FEE  3BA3               	subwfb	___lwdiv@dividend+1,f
 18328     1FEF                     l3387:
 18329     1FEF  1425               	bsf	___lwdiv@quotient,0
 18330     1FF0                     l3389:
 18331     1FF0  3001               	movlw	1
 18332     1FF1                     u2705:
 18333     1FF1  36A1               	lsrf	___lwdiv@divisor+1,f
 18334     1FF2  0CA0               	rrf	___lwdiv@divisor,f
 18335     1FF3  0B89               	decfsz	9,f
 18336     1FF4  2FF1               	goto	u2705
 18337     1FF5                     l3391:
 18338     1FF5  3001               	movlw	1
 18339     1FF6  02A7               	subwf	___lwdiv@counter,f
 18340     1FF7  1D03               	btfss	3,2
 18341     1FF8  2FFA               	goto	u2711
 18342     1FF9  2FFB               	goto	u2710
 18343     1FFA                     u2711:
 18344     1FFA  2FDC               	goto	l3383
 18345     1FFB                     u2710:
 18346     1FFB                     l3393:
 18347     1FFB  0826               	movf	___lwdiv@quotient+1,w
 18348     1FFC  00A1               	movwf	?___lwdiv+1
 18349     1FFD  0825               	movf	___lwdiv@quotient,w
 18350     1FFE  00A0               	movwf	?___lwdiv
 18351     1FFF                     l1262:
 18352     1FFF  0008               	return
 18353     2000                     __end_of___lwdiv:
 18354                           
 18355                           	psect	text49
 18356     1D9B                     __ptext49:	
 18357 ;; *************** function ___bmul *****************
 18358 ;; Defined at:
 18359 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
 18360 ;; Parameters:    Size  Location     Type
 18361 ;;  multiplier      1    wreg     unsigned char 
 18362 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 18363 ;; Auto vars:     Size  Location     Type
 18364 ;;  multiplier      1    3[BANK0 ] unsigned char 
 18365 ;;  product         1    2[BANK0 ] unsigned char 
 18366 ;; Return value:  Size  Location     Type
 18367 ;;                  1    wreg      unsigned char 
 18368 ;; Registers used:
 18369 ;;		wreg, status,2, status,0
 18370 ;; Tracked objects:
 18371 ;;		On entry : 0/0
 18372 ;;		On exit  : 0/0
 18373 ;;		Unchanged: 0/0
 18374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18375 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18376 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18377 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18378 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18379 ;;Total ram usage:        4 bytes
 18380 ;; Hardware stack levels used: 1
 18381 ;; Hardware stack levels required when called: 2
 18382 ;; This function calls:
 18383 ;;		Nothing
 18384 ;; This function is called by:
 18385 ;;		_printf
 18386 ;; This function uses a non-reentrant model
 18387 ;;
 18388                           
 18389     1D9B                     ___bmul:	
 18390                           ;psect for function ___bmul
 18391                           
 18392                           
 18393                           ;incstack = 0
 18394                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 18395                           ;___bmul@multiplier stored from wreg
 18396     1D9B  0140               	movlb	0	; select bank0
 18397     1D9C  00A3               	movwf	___bmul@multiplier
 18398     1D9D                     l3357:
 18399     1D9D  01A2               	clrf	___bmul@product
 18400     1D9E                     l3359:
 18401     1D9E  1C23               	btfss	___bmul@multiplier,0
 18402     1D9F  2DA1               	goto	u2631
 18403     1DA0  2DA2               	goto	u2630
 18404     1DA1                     u2631:
 18405     1DA1  2DA6               	goto	l3363
 18406     1DA2                     u2630:
 18407     1DA2                     l3361:
 18408     1DA2  0820               	movf	___bmul@multiplicand,w
 18409     1DA3  00A1               	movwf	??___bmul
 18410     1DA4  0821               	movf	??___bmul,w
 18411     1DA5  07A2               	addwf	___bmul@product,f
 18412     1DA6                     l3363:
 18413     1DA6  1003               	clrc
 18414     1DA7  0DA0               	rlf	___bmul@multiplicand,f
 18415     1DA8                     l3365:
 18416     1DA8  1003               	clrc
 18417     1DA9  0CA3               	rrf	___bmul@multiplier,f
 18418     1DAA  0823               	movf	___bmul@multiplier,w
 18419     1DAB  1D03               	btfss	3,2
 18420     1DAC  2DAE               	goto	u2641
 18421     1DAD  2DAF               	goto	u2640
 18422     1DAE                     u2641:
 18423     1DAE  2D9E               	goto	l3359
 18424     1DAF                     u2640:
 18425     1DAF                     l3367:
 18426     1DAF  0822               	movf	___bmul@product,w
 18427     1DB0                     l1016:
 18428     1DB0  0008               	return
 18429     1DB1                     __end_of___bmul:
 18430                           
 18431                           	psect	text50
 18432     1D3A                     __ptext50:	
 18433 ;; *************** function _isprint *****************
 18434 ;; Defined at:
 18435 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isprint.c"
 18436 ;; Parameters:    Size  Location     Type
 18437 ;;  c               1    wreg     unsigned char 
 18438 ;; Auto vars:     Size  Location     Type
 18439 ;;  c               1    1[BANK0 ] unsigned char 
 18440 ;; Return value:  Size  Location     Type
 18441 ;;		None               void
 18442 ;; Registers used:
 18443 ;;		wreg, status,2, status,0
 18444 ;; Tracked objects:
 18445 ;;		On entry : 0/0
 18446 ;;		On exit  : 0/0
 18447 ;;		Unchanged: 0/0
 18448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18452 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18453 ;;Total ram usage:        2 bytes
 18454 ;; Hardware stack levels used: 1
 18455 ;; Hardware stack levels required when called: 2
 18456 ;; This function calls:
 18457 ;;		Nothing
 18458 ;; This function is called by:
 18459 ;;		_dump_buffer
 18460 ;; This function uses a non-reentrant model
 18461 ;;
 18462                           
 18463     1D3A                     _isprint:	
 18464                           ;psect for function _isprint
 18465                           
 18466                           
 18467                           ;incstack = 0
 18468                           ; Regs used in _isprint: [wreg+status,2+status,0]
 18469                           ;isprint@c stored from wreg
 18470     1D3A  0140               	movlb	0	; select bank0
 18471     1D3B  00A1               	movwf	isprint@c
 18472     1D3C                     l3749:
 18473     1D3C  01A0               	clrf	_isprint$1934
 18474     1D3D                     l3751:
 18475     1D3D  307F               	movlw	127
 18476     1D3E  0221               	subwf	isprint@c,w
 18477     1D3F  1803               	skipnc
 18478     1D40  2D42               	goto	u3441
 18479     1D41  2D43               	goto	u3440
 18480     1D42                     u3441:
 18481     1D42  2D4B               	goto	l3757
 18482     1D43                     u3440:
 18483     1D43                     l3753:
 18484     1D43  3020               	movlw	32
 18485     1D44  0221               	subwf	isprint@c,w
 18486     1D45  1C03               	skipc
 18487     1D46  2D48               	goto	u3451
 18488     1D47  2D49               	goto	u3450
 18489     1D48                     u3451:
 18490     1D48  2D4B               	goto	l3757
 18491     1D49                     u3450:
 18492     1D49                     l3755:
 18493     1D49  01A0               	clrf	_isprint$1934
 18494     1D4A  0AA0               	incf	_isprint$1934,f
 18495     1D4B                     l3757:
 18496     1D4B  0C20               	rrf	_isprint$1934,w
 18497     1D4C                     l1448:
 18498     1D4C  0008               	return
 18499     1D4D                     __end_of_isprint:
 18500                           
 18501                           	psect	text51
 18502     11DD                     __ptext51:	
 18503 ;; *************** function _dispatch *****************
 18504 ;; Defined at:
 18505 ;;		line 57 in file "monitor_sync.c"
 18506 ;; Parameters:    Size  Location     Type
 18507 ;;  state           1    wreg     PTR enum E10399
 18508 ;;		 -> main@state(1), 
 18509 ;;  b1              1    0[BANK0 ] PTR struct mybutton
 18510 ;;		 -> main@b1(27), 
 18511 ;;  b2              1    1[BANK0 ] PTR struct mybutton
 18512 ;;		 -> main@b2(27), 
 18513 ;;  b1_clicked_c    1    2[BANK0 ] PTR unsigned char 
 18514 ;;		 -> main@b1_clicked_count(1), 
 18515 ;;  b2_clicked_c    1    3[BANK0 ] PTR unsigned char 
 18516 ;;		 -> main@b2_clicked_count(1), 
 18517 ;; Auto vars:     Size  Location     Type
 18518 ;;  state           1    6[BANK0 ] PTR enum E10399
 18519 ;;		 -> main@state(1), 
 18520 ;;  b2_clicked_c    1    5[BANK0 ] unsigned char 
 18521 ;;  b1_clicked_c    1    4[BANK0 ] unsigned char 
 18522 ;; Return value:  Size  Location     Type
 18523 ;;                  1    wreg      void 
 18524 ;; Registers used:
 18525 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18526 ;; Tracked objects:
 18527 ;;		On entry : 0/0
 18528 ;;		On exit  : 0/0
 18529 ;;		Unchanged: 0/0
 18530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18532 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18534 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18535 ;;Total ram usage:        7 bytes
 18536 ;; Hardware stack levels used: 1
 18537 ;; Hardware stack levels required when called: 2
 18538 ;; This function calls:
 18539 ;;		Nothing
 18540 ;; This function is called by:
 18541 ;;		_main
 18542 ;; This function uses a non-reentrant model
 18543 ;;
 18544                           
 18545     11DD                     _dispatch:	
 18546                           ;psect for function _dispatch
 18547                           
 18548                           
 18549                           ;incstack = 0
 18550                           ; Regs used in _dispatch: [wreg+fsr1l+fsr1h+status,2+status,0]
 18551                           ;dispatch@state stored from wreg
 18552     11DD  0140               	movlb	0	; select bank0
 18553     11DE  00A6               	movwf	dispatch@state
 18554     11DF                     l4547:
 18555                           
 18556                           ;monitor_sync.c: 63: uint8_t b1_clicked_count = *b1_clicked_count_ptr;
 18557     11DF  0822               	movf	dispatch@b1_clicked_count_ptr,w
 18558     11E0  0086               	movwf	6
 18559     11E1  0187               	clrf	7
 18560     11E2  0801               	movf	1,w
 18561     11E3  00A4               	movwf	dispatch@b1_clicked_count
 18562                           
 18563                           ;monitor_sync.c: 64: uint8_t b2_clicked_count = *b2_clicked_count_ptr;
 18564     11E4  0823               	movf	dispatch@b2_clicked_count_ptr,w
 18565     11E5  0086               	movwf	6
 18566     11E6  0187               	clrf	7
 18567     11E7  0801               	movf	1,w
 18568     11E8  00A5               	movwf	dispatch@b2_clicked_count
 18569     11E9                     l4549:
 18570                           
 18571                           ;monitor_sync.c: 72: if( 1 == b1_clicked_count && 0 == b2_clicked_count){
 18572     11E9  0324               	decf	dispatch@b1_clicked_count,w
 18573     11EA  1D03               	btfss	3,2
 18574     11EB  29ED               	goto	u4731
 18575     11EC  29EE               	goto	u4730
 18576     11ED                     u4731:
 18577     11ED  29FD               	goto	l4559
 18578     11EE                     u4730:
 18579     11EE                     l4551:
 18580     11EE  0825               	movf	dispatch@b2_clicked_count,w
 18581     11EF  1D03               	btfss	3,2
 18582     11F0  29F2               	goto	u4741
 18583     11F1  29F3               	goto	u4740
 18584     11F2                     u4741:
 18585     11F2  29FD               	goto	l4559
 18586     11F3                     u4740:
 18587     11F3                     l4553:
 18588                           
 18589                           ;monitor_sync.c: 73: *state = STATE_SAVE_TOP_CALIBRATION_POINT;
 18590     11F3  0826               	movf	dispatch@state,w
 18591     11F4  0086               	movwf	6
 18592     11F5  0187               	clrf	7
 18593     11F6  3007               	movlw	7
 18594     11F7  0081               	movwf	1
 18595     11F8                     l4555:
 18596                           
 18597                           ;monitor_sync.c: 74: *b1_clicked_count_ptr = 0;
 18598     11F8  0822               	movf	dispatch@b1_clicked_count_ptr,w
 18599     11F9  0086               	movwf	6
 18600     11FA  0187               	clrf	7
 18601     11FB  0181               	clrf	1
 18602     11FC  2A16               	goto	l553
 18603     11FD                     l4559:
 18604                           
 18605                           ;monitor_sync.c: 76: };monitor_sync.c: 78: if( 0 == b1_clicked_count && 1 == b2_clicked_
      +                          count){
 18606     11FD  0824               	movf	dispatch@b1_clicked_count,w
 18607     11FE  1D03               	btfss	3,2
 18608     11FF  2A01               	goto	u4751
 18609     1200  2A02               	goto	u4750
 18610     1201                     u4751:
 18611     1201  2A11               	goto	l4569
 18612     1202                     u4750:
 18613     1202                     l4561:
 18614     1202  0325               	decf	dispatch@b2_clicked_count,w
 18615     1203  1D03               	btfss	3,2
 18616     1204  2A06               	goto	u4761
 18617     1205  2A07               	goto	u4760
 18618     1206                     u4761:
 18619     1206  2A11               	goto	l4569
 18620     1207                     u4760:
 18621     1207                     l4563:
 18622                           
 18623                           ;monitor_sync.c: 79: *state = STATE_SAVE_BOTTOM_CALIBRATION_POINT;
 18624     1207  0826               	movf	dispatch@state,w
 18625     1208  0086               	movwf	6
 18626     1209  0187               	clrf	7
 18627     120A  3008               	movlw	8
 18628     120B  0081               	movwf	1
 18629     120C                     l4565:
 18630                           
 18631                           ;monitor_sync.c: 80: *b2_clicked_count_ptr = 0;
 18632     120C  0823               	movf	dispatch@b2_clicked_count_ptr,w
 18633     120D  0086               	movwf	6
 18634     120E  0187               	clrf	7
 18635     120F  0181               	clrf	1
 18636     1210  2A16               	goto	l553
 18637     1211                     l4569:
 18638                           
 18639                           ;monitor_sync.c: 82: };monitor_sync.c: 83: *state = STATE_CALIBRATE;
 18640     1211  0826               	movf	dispatch@state,w
 18641     1212  0086               	movwf	6
 18642     1213  0187               	clrf	7
 18643     1214  3004               	movlw	4
 18644     1215  0081               	movwf	1
 18645     1216                     l553:
 18646     1216  0008               	return
 18647     1217                     __end_of_dispatch:
 18648                           
 18649                           	psect	text52
 18650     12E8                     __ptext52:	
 18651 ;; *************** function _calculate_diff *****************
 18652 ;; Defined at:
 18653 ;;		line 19 in file "myisr.c"
 18654 ;; Parameters:    Size  Location     Type
 18655 ;;  now             4    0[BANK0 ] unsigned long 
 18656 ;;  prev_ticks      4    4[BANK0 ] unsigned long 
 18657 ;; Auto vars:     Size  Location     Type
 18658 ;;  diff            4   16[BANK0 ] unsigned long 
 18659 ;; Return value:  Size  Location     Type
 18660 ;;                  4    0[BANK0 ] unsigned long 
 18661 ;; Registers used:
 18662 ;;		wreg, status,2, status,0
 18663 ;; Tracked objects:
 18664 ;;		On entry : 0/0
 18665 ;;		On exit  : 0/0
 18666 ;;		Unchanged: 0/0
 18667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18668 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18669 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18670 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18671 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18672 ;;Total ram usage:       20 bytes
 18673 ;; Hardware stack levels used: 1
 18674 ;; Hardware stack levels required when called: 2
 18675 ;; This function calls:
 18676 ;;		Nothing
 18677 ;; This function is called by:
 18678 ;;		_main
 18679 ;;		_is_time_ups
 18680 ;;		_delay_state
 18681 ;; This function uses a non-reentrant model
 18682 ;;
 18683                           
 18684     12E8                     _calculate_diff:	
 18685                           ;psect for function _calculate_diff
 18686                           
 18687     12E8                     l4351:	
 18688                           ;incstack = 0
 18689                           ; Regs used in _calculate_diff: [wreg+status,2+status,0]
 18690                           
 18691                           
 18692                           ;myisr.c: 20: uint32_t diff;;myisr.c: 21: if (now >= prev_ticks) {
 18693     12E8  0140               	movlb	0	; select bank0
 18694     12E9  0827               	movf	calculate_diff@prev_ticks+3,w
 18695     12EA  0223               	subwf	calculate_diff@now+3,w
 18696     12EB  1D03               	skipz
 18697     12EC  2AF7               	goto	u4595
 18698     12ED  0826               	movf	calculate_diff@prev_ticks+2,w
 18699     12EE  0222               	subwf	calculate_diff@now+2,w
 18700     12EF  1D03               	skipz
 18701     12F0  2AF7               	goto	u4595
 18702     12F1  0825               	movf	calculate_diff@prev_ticks+1,w
 18703     12F2  0221               	subwf	calculate_diff@now+1,w
 18704     12F3  1D03               	skipz
 18705     12F4  2AF7               	goto	u4595
 18706     12F5  0824               	movf	calculate_diff@prev_ticks,w
 18707     12F6  0220               	subwf	calculate_diff@now,w
 18708     12F7                     u4595:
 18709     12F7  1C03               	skipc
 18710     12F8  2AFA               	goto	u4591
 18711     12F9  2AFB               	goto	u4590
 18712     12FA                     u4591:
 18713     12FA  2B10               	goto	l4355
 18714     12FB                     u4590:
 18715     12FB                     l4353:
 18716                           
 18717                           ;myisr.c: 22: diff = now - prev_ticks;
 18718     12FB  0824               	movf	calculate_diff@prev_ticks,w
 18719     12FC  0220               	subwf	calculate_diff@now,w
 18720     12FD  00A8               	movwf	??_calculate_diff
 18721     12FE  0825               	movf	calculate_diff@prev_ticks+1,w
 18722     12FF  3B21               	subwfb	calculate_diff@now+1,w
 18723     1300  00A9               	movwf	??_calculate_diff+1
 18724     1301  0826               	movf	calculate_diff@prev_ticks+2,w
 18725     1302  3B22               	subwfb	calculate_diff@now+2,w
 18726     1303  00AA               	movwf	??_calculate_diff+2
 18727     1304  0827               	movf	calculate_diff@prev_ticks+3,w
 18728     1305  3B23               	subwfb	calculate_diff@now+3,w
 18729     1306  00AB               	movwf	??_calculate_diff+3
 18730     1307  082B               	movf	??_calculate_diff+3,w
 18731     1308  00B3               	movwf	calculate_diff@diff+3
 18732     1309  082A               	movf	??_calculate_diff+2,w
 18733     130A  00B2               	movwf	calculate_diff@diff+2
 18734     130B  0829               	movf	??_calculate_diff+1,w
 18735     130C  00B1               	movwf	calculate_diff@diff+1
 18736     130D  0828               	movf	??_calculate_diff,w
 18737     130E  00B0               	movwf	calculate_diff@diff
 18738                           
 18739                           ;myisr.c: 23: } else {
 18740     130F  2B34               	goto	l4357
 18741     1310                     l4355:
 18742                           
 18743                           ;myisr.c: 25: diff = ((4294967295UL) - prev_ticks) + now + 1;
 18744     1310  0820               	movf	calculate_diff@now,w
 18745     1311  00A8               	movwf	??_calculate_diff
 18746     1312  0821               	movf	calculate_diff@now+1,w
 18747     1313  00A9               	movwf	??_calculate_diff+1
 18748     1314  0822               	movf	calculate_diff@now+2,w
 18749     1315  00AA               	movwf	??_calculate_diff+2
 18750     1316  0823               	movf	calculate_diff@now+3,w
 18751     1317  00AB               	movwf	??_calculate_diff+3
 18752     1318  0924               	comf	calculate_diff@prev_ticks,w
 18753     1319  00AC               	movwf	??_calculate_diff+4
 18754     131A  0925               	comf	calculate_diff@prev_ticks+1,w
 18755     131B  00AD               	movwf	??_calculate_diff+5
 18756     131C  0926               	comf	calculate_diff@prev_ticks+2,w
 18757     131D  00AE               	movwf	??_calculate_diff+6
 18758     131E  0927               	comf	calculate_diff@prev_ticks+3,w
 18759     131F  00AF               	movwf	??_calculate_diff+7
 18760     1320  082C               	movf	??_calculate_diff+4,w
 18761     1321  07A8               	addwf	??_calculate_diff,f
 18762     1322  082D               	movf	??_calculate_diff+5,w
 18763     1323  3DA9               	addwfc	??_calculate_diff+1,f
 18764     1324  082E               	movf	??_calculate_diff+6,w
 18765     1325  3DAA               	addwfc	??_calculate_diff+2,f
 18766     1326  082F               	movf	??_calculate_diff+7,w
 18767     1327  3DAB               	addwfc	??_calculate_diff+3,f
 18768     1328  3001               	movlw	1
 18769     1329  0728               	addwf	??_calculate_diff,w
 18770     132A  00B0               	movwf	calculate_diff@diff
 18771     132B  3000               	movlw	0
 18772     132C  3D29               	addwfc	??_calculate_diff+1,w
 18773     132D  00B1               	movwf	calculate_diff@diff+1
 18774     132E  3000               	movlw	0
 18775     132F  3D2A               	addwfc	??_calculate_diff+2,w
 18776     1330  00B2               	movwf	calculate_diff@diff+2
 18777     1331  3000               	movlw	0
 18778     1332  3D2B               	addwfc	??_calculate_diff+3,w
 18779     1333  00B3               	movwf	calculate_diff@diff+3
 18780     1334                     l4357:
 18781                           
 18782                           ;myisr.c: 26: };myisr.c: 27: return diff;
 18783     1334  0833               	movf	calculate_diff@diff+3,w
 18784     1335  00A3               	movwf	?_calculate_diff+3
 18785     1336  0832               	movf	calculate_diff@diff+2,w
 18786     1337  00A2               	movwf	?_calculate_diff+2
 18787     1338  0831               	movf	calculate_diff@diff+1,w
 18788     1339  00A1               	movwf	?_calculate_diff+1
 18789     133A  0830               	movf	calculate_diff@diff,w
 18790     133B  00A0               	movwf	?_calculate_diff
 18791     133C                     l327:
 18792     133C  0008               	return
 18793     133D                     __end_of_calculate_diff:
 18794                           
 18795                           	psect	text53
 18796     1CAE                     __ptext53:	
 18797 ;; *************** function _SYSTEM_Initialize *****************
 18798 ;; Defined at:
 18799 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      void 
 18806 ;; Registers used:
 18807 ;;		wreg, status,2, status,0, pclath, cstack
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 0/0
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18817 ;;Total ram usage:        0 bytes
 18818 ;; Hardware stack levels used: 1
 18819 ;; Hardware stack levels required when called: 3
 18820 ;; This function calls:
 18821 ;;		_OSCILLATOR_Initialize
 18822 ;;		_PIN_MANAGER_Initialize
 18823 ;;		_PMD_Initialize
 18824 ;; This function is called by:
 18825 ;;		_main
 18826 ;; This function uses a non-reentrant model
 18827 ;;
 18828                           
 18829     1CAE                     _SYSTEM_Initialize:	
 18830                           ;psect for function _SYSTEM_Initialize
 18831                           
 18832     1CAE                     l4345:	
 18833                           ;incstack = 0
 18834                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18835                           
 18836                           
 18837                           ;mcc.c: 52: PMD_Initialize();
 18838     1CAE  319C  24A4  319C   	fcall	_PMD_Initialize
 18839     1CB1                     l4347:
 18840                           
 18841                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 18842     1CB1  319E  26D3  319C   	fcall	_PIN_MANAGER_Initialize
 18843     1CB4                     l4349:
 18844                           
 18845                           ;mcc.c: 54: OSCILLATOR_Initialize();
 18846     1CB4  319C  249B  319C   	fcall	_OSCILLATOR_Initialize
 18847     1CB7                     l35:
 18848     1CB7  0008               	return
 18849     1CB8                     __end_of_SYSTEM_Initialize:
 18850                           
 18851                           	psect	text54
 18852     1CA4                     __ptext54:	
 18853 ;; *************** function _PMD_Initialize *****************
 18854 ;; Defined at:
 18855 ;;		line 71 in file "mcc_generated_files/mcc.c"
 18856 ;; Parameters:    Size  Location     Type
 18857 ;;		None
 18858 ;; Auto vars:     Size  Location     Type
 18859 ;;		None
 18860 ;; Return value:  Size  Location     Type
 18861 ;;                  1    wreg      void 
 18862 ;; Registers used:
 18863 ;;		status,2
 18864 ;; Tracked objects:
 18865 ;;		On entry : 0/0
 18866 ;;		On exit  : 0/0
 18867 ;;		Unchanged: 0/0
 18868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18873 ;;Total ram usage:        0 bytes
 18874 ;; Hardware stack levels used: 1
 18875 ;; Hardware stack levels required when called: 2
 18876 ;; This function calls:
 18877 ;;		Nothing
 18878 ;; This function is called by:
 18879 ;;		_SYSTEM_Initialize
 18880 ;; This function uses a non-reentrant model
 18881 ;;
 18882                           
 18883     1CA4                     _PMD_Initialize:	
 18884                           ;psect for function _PMD_Initialize
 18885                           
 18886     1CA4                     l3863:	
 18887                           ;incstack = 0
 18888                           ; Regs used in _PMD_Initialize: [status,2]
 18889                           
 18890                           
 18891                           ;mcc.c: 74: PMD0 = 0x00;
 18892     1CA4  014F               	movlb	15	; select bank15
 18893     1CA5  0196               	clrf	22	;volatile
 18894                           
 18895                           ;mcc.c: 76: PMD1 = 0x00;
 18896     1CA6  0197               	clrf	23	;volatile
 18897                           
 18898                           ;mcc.c: 78: PMD2 = 0x00;
 18899     1CA7  0198               	clrf	24	;volatile
 18900                           
 18901                           ;mcc.c: 80: PMD3 = 0x00;
 18902     1CA8  0199               	clrf	25	;volatile
 18903                           
 18904                           ;mcc.c: 82: PMD4 = 0x00;
 18905     1CA9  019A               	clrf	26	;volatile
 18906                           
 18907                           ;mcc.c: 84: PMD5 = 0x00;
 18908     1CAA  019B               	clrf	27	;volatile
 18909                           
 18910                           ;mcc.c: 86: PMD6 = 0x00;
 18911     1CAB  019C               	clrf	28	;volatile
 18912                           
 18913                           ;mcc.c: 88: PMD7 = 0x00;
 18914     1CAC  019D               	clrf	29	;volatile
 18915     1CAD                     l41:
 18916     1CAD  0008               	return
 18917     1CAE                     __end_of_PMD_Initialize:
 18918                           
 18919                           	psect	text55
 18920     1ED3                     __ptext55:	
 18921 ;; *************** function _PIN_MANAGER_Initialize *****************
 18922 ;; Defined at:
 18923 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;		None
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;		None
 18928 ;; Return value:  Size  Location     Type
 18929 ;;                  1    wreg      void 
 18930 ;; Registers used:
 18931 ;;		wreg, status,2
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;Total ram usage:        0 bytes
 18942 ;; Hardware stack levels used: 1
 18943 ;; Hardware stack levels required when called: 2
 18944 ;; This function calls:
 18945 ;;		Nothing
 18946 ;; This function is called by:
 18947 ;;		_SYSTEM_Initialize
 18948 ;; This function uses a non-reentrant model
 18949 ;;
 18950                           
 18951     1ED3                     _PIN_MANAGER_Initialize:	
 18952                           ;psect for function _PIN_MANAGER_Initialize
 18953                           
 18954     1ED3                     l3865:	
 18955                           ;incstack = 0
 18956                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18957                           
 18958                           
 18959                           ;pin_manager.c: 60: LATA = 0x00;
 18960     1ED3  0140               	movlb	0	; select bank0
 18961     1ED4  0198               	clrf	24	;volatile
 18962                           
 18963                           ;pin_manager.c: 61: LATC = 0x00;
 18964     1ED5  019A               	clrf	26	;volatile
 18965     1ED6                     l3867:
 18966                           
 18967                           ;pin_manager.c: 66: TRISA = 0x3F;
 18968     1ED6  303F               	movlw	63
 18969     1ED7  0092               	movwf	18	;volatile
 18970     1ED8                     l3869:
 18971                           
 18972                           ;pin_manager.c: 67: TRISC = 0x13;
 18973     1ED8  3013               	movlw	19
 18974     1ED9  0094               	movwf	20	;volatile
 18975     1EDA                     l3871:
 18976                           
 18977                           ;pin_manager.c: 72: ANSELC = 0x2C;
 18978     1EDA  302C               	movlw	44
 18979     1EDB  017E               	movlb	62	; select bank62
 18980     1EDC  00CE               	movwf	78	;volatile
 18981     1EDD                     l3873:
 18982                           
 18983                           ;pin_manager.c: 73: ANSELA = 0x37;
 18984     1EDD  3037               	movlw	55
 18985     1EDE  00B8               	movwf	56	;volatile
 18986                           
 18987                           ;pin_manager.c: 78: WPUA = 0x00;
 18988     1EDF  01B9               	clrf	57	;volatile
 18989                           
 18990                           ;pin_manager.c: 79: WPUC = 0x00;
 18991     1EE0  01CF               	clrf	79	;volatile
 18992                           
 18993                           ;pin_manager.c: 84: ODCONA = 0x00;
 18994     1EE1  01BA               	clrf	58	;volatile
 18995                           
 18996                           ;pin_manager.c: 85: ODCONC = 0x00;
 18997     1EE2  01D0               	clrf	80	;volatile
 18998     1EE3                     l3875:
 18999                           
 19000                           ;pin_manager.c: 90: SLRCONA = 0x37;
 19001     1EE3  3037               	movlw	55
 19002     1EE4  00BB               	movwf	59	;volatile
 19003     1EE5                     l3877:
 19004                           
 19005                           ;pin_manager.c: 91: SLRCONC = 0x3F;
 19006     1EE5  303F               	movlw	63
 19007     1EE6  00D1               	movwf	81	;volatile
 19008     1EE7                     l3879:
 19009                           
 19010                           ;pin_manager.c: 96: INLVLA = 0x3F;
 19011     1EE7  303F               	movlw	63
 19012     1EE8  00BC               	movwf	60	;volatile
 19013     1EE9                     l3881:
 19014                           
 19015                           ;pin_manager.c: 97: INLVLC = 0x3F;
 19016     1EE9  303F               	movlw	63
 19017     1EEA  00D2               	movwf	82	;volatile
 19018     1EEB                     l3883:
 19019                           
 19020                           ;pin_manager.c: 101: RC0PPS = 0x13;
 19021     1EEB  3013               	movlw	19
 19022     1EEC  00A0               	movwf	32	;volatile
 19023     1EED                     l3885:
 19024                           
 19025                           ;pin_manager.c: 102: SSP1CLKPPS = 0x10;
 19026     1EED  3010               	movlw	16
 19027     1EEE  017D               	movlb	61	; select bank61
 19028     1EEF  00C5               	movwf	69	;volatile
 19029     1EF0                     l3887:
 19030                           
 19031                           ;pin_manager.c: 103: RC3PPS = 0x0F;
 19032     1EF0  300F               	movlw	15
 19033     1EF1  017E               	movlb	62	; select bank62
 19034     1EF2  00A3               	movwf	35	;volatile
 19035     1EF3                     l3889:
 19036                           
 19037                           ;pin_manager.c: 104: RC1PPS = 0x14;
 19038     1EF3  3014               	movlw	20
 19039     1EF4  00A1               	movwf	33	;volatile
 19040     1EF5                     l3891:
 19041                           
 19042                           ;pin_manager.c: 105: RC5PPS = 0x0F;
 19043     1EF5  300F               	movlw	15
 19044     1EF6  00A5               	movwf	37	;volatile
 19045     1EF7                     l3893:
 19046                           
 19047                           ;pin_manager.c: 106: SSP1DATPPS = 0x11;
 19048     1EF7  3011               	movlw	17
 19049     1EF8  017D               	movlb	61	; select bank61
 19050     1EF9  00C6               	movwf	70	;volatile
 19051     1EFA                     l3895:
 19052                           
 19053                           ;pin_manager.c: 107: RX1DTPPS = 0x14;
 19054     1EFA  3014               	movlw	20
 19055     1EFB  00CB               	movwf	75	;volatile
 19056     1EFC                     l86:
 19057     1EFC  0008               	return
 19058     1EFD                     __end_of_PIN_MANAGER_Initialize:
 19059                           
 19060                           	psect	text56
 19061     1C9B                     __ptext56:	
 19062 ;; *************** function _OSCILLATOR_Initialize *****************
 19063 ;; Defined at:
 19064 ;;		line 57 in file "mcc_generated_files/mcc.c"
 19065 ;; Parameters:    Size  Location     Type
 19066 ;;		None
 19067 ;; Auto vars:     Size  Location     Type
 19068 ;;		None
 19069 ;; Return value:  Size  Location     Type
 19070 ;;                  1    wreg      void 
 19071 ;; Registers used:
 19072 ;;		wreg, status,2
 19073 ;; Tracked objects:
 19074 ;;		On entry : 0/0
 19075 ;;		On exit  : 0/0
 19076 ;;		Unchanged: 0/0
 19077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19082 ;;Total ram usage:        0 bytes
 19083 ;; Hardware stack levels used: 1
 19084 ;; Hardware stack levels required when called: 2
 19085 ;; This function calls:
 19086 ;;		Nothing
 19087 ;; This function is called by:
 19088 ;;		_SYSTEM_Initialize
 19089 ;; This function uses a non-reentrant model
 19090 ;;
 19091                           
 19092     1C9B                     _OSCILLATOR_Initialize:	
 19093                           ;psect for function _OSCILLATOR_Initialize
 19094                           
 19095     1C9B                     l3897:	
 19096                           ;incstack = 0
 19097                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 19098                           
 19099                           
 19100                           ;mcc.c: 60: OSCCON1 = 0x62;
 19101     1C9B  3062               	movlw	98
 19102     1C9C  0151               	movlb	17	; select bank17
 19103     1C9D  008D               	movwf	13	;volatile
 19104     1C9E                     l3899:
 19105                           
 19106                           ;mcc.c: 62: OSCCON3 = 0x00;
 19107     1C9E  018F               	clrf	15	;volatile
 19108     1C9F                     l3901:
 19109                           
 19110                           ;mcc.c: 64: OSCEN = 0x00;
 19111     1C9F  0191               	clrf	17	;volatile
 19112                           
 19113                           ;mcc.c: 66: OSCFRQ = 0x02;
 19114     1CA0  3002               	movlw	2
 19115     1CA1  0093               	movwf	19	;volatile
 19116     1CA2                     l3903:
 19117                           
 19118                           ;mcc.c: 68: OSCTUNE = 0x00;
 19119     1CA2  0192               	clrf	18	;volatile
 19120     1CA3                     l38:
 19121     1CA3  0008               	return
 19122     1CA4                     __end_of_OSCILLATOR_Initialize:
 19123                           
 19124                           	psect	text57
 19125     0002                     __ptext57:	
 19126 ;; *************** function _Enable_Global_Interrupt *****************
 19127 ;; Defined at:
 19128 ;;		line 31 in file "myisr.c"
 19129 ;; Parameters:    Size  Location     Type
 19130 ;;		None
 19131 ;; Auto vars:     Size  Location     Type
 19132 ;;		None
 19133 ;; Return value:  Size  Location     Type
 19134 ;;                  1    wreg      void 
 19135 ;; Registers used:
 19136 ;;		None
 19137 ;; Tracked objects:
 19138 ;;		On entry : 0/0
 19139 ;;		On exit  : 0/0
 19140 ;;		Unchanged: 0/0
 19141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19146 ;;Total ram usage:        0 bytes
 19147 ;; Hardware stack levels used: 1
 19148 ;; Hardware stack levels required when called: 2
 19149 ;; This function calls:
 19150 ;;		Nothing
 19151 ;; This function is called by:
 19152 ;;		_main
 19153 ;; This function uses a non-reentrant model
 19154 ;;
 19155                           
 19156     0002                     _Enable_Global_Interrupt:	
 19157                           ;psect for function _Enable_Global_Interrupt
 19158                           
 19159     0002                     l4639:	
 19160                           ;incstack = 0
 19161                           ; Regs used in _Enable_Global_Interrupt: []
 19162                           
 19163                           
 19164                           ;myisr.c: 32: GIE=0;
 19165     0002  138B               	bcf	11,7	;volatile
 19166     0003                     l330:
 19167     0003  0008               	return
 19168     0004                     __end_of_Enable_Global_Interrupt:
 19169                           
 19170                           	psect	text58
 19171     0800                     __ptext58:	
 19172 ;; *************** function _Disable_Global_Interrupt *****************
 19173 ;; Defined at:
 19174 ;;		line 34 in file "myisr.c"
 19175 ;; Parameters:    Size  Location     Type
 19176 ;;		None
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;		None
 19179 ;; Return value:  Size  Location     Type
 19180 ;;                  1    wreg      void 
 19181 ;; Registers used:
 19182 ;;		None
 19183 ;; Tracked objects:
 19184 ;;		On entry : 0/0
 19185 ;;		On exit  : 0/0
 19186 ;;		Unchanged: 0/0
 19187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19192 ;;Total ram usage:        0 bytes
 19193 ;; Hardware stack levels used: 1
 19194 ;; Hardware stack levels required when called: 2
 19195 ;; This function calls:
 19196 ;;		Nothing
 19197 ;; This function is called by:
 19198 ;;		_main
 19199 ;; This function uses a non-reentrant model
 19200 ;;
 19201                           
 19202     0800                     _Disable_Global_Interrupt:	
 19203                           ;psect for function _Disable_Global_Interrupt
 19204                           
 19205     0800                     l4641:	
 19206                           ;incstack = 0
 19207                           ; Regs used in _Disable_Global_Interrupt: []
 19208                           
 19209                           
 19210                           ;myisr.c: 35: GIE=1;
 19211     0800  178B               	bsf	11,7	;volatile
 19212     0801                     l333:
 19213     0801  0008               	return
 19214     0802                     __end_of_Disable_Global_Interrupt:
 19215                           
 19216                           	psect	intentry
 19217     0004                     __pintentry:	
 19218 ;; *************** function _INTERRUPT_InterruptManager *****************
 19219 ;; Defined at:
 19220 ;;		line 63 in file "uart.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;		None
 19223 ;; Auto vars:     Size  Location     Type
 19224 ;;		None
 19225 ;; Return value:  Size  Location     Type
 19226 ;;                  1    wreg      void 
 19227 ;; Registers used:
 19228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19229 ;; Tracked objects:
 19230 ;;		On entry : 0/0
 19231 ;;		On exit  : 0/0
 19232 ;;		Unchanged: 0/0
 19233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19238 ;;Total ram usage:        4 bytes
 19239 ;; Hardware stack levels used: 1
 19240 ;; Hardware stack levels required when called: 1
 19241 ;; This function calls:
 19242 ;;		_get_ticks
 19243 ;;		_i2c_slave_interrupt
 19244 ;; This function is called by:
 19245 ;;		Interrupt level 1
 19246 ;; This function uses a non-reentrant model
 19247 ;;
 19248                           
 19249     0004                     _INTERRUPT_InterruptManager:
 19250                           
 19251                           ;incstack = 0
 19252     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 19253                           
 19254                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19255     0005  3180               	pagesel	$
 19256     0006                     i1l4965:
 19257                           
 19258                           ;uart.c: 68: if (PIR0bits.TMR0IF) {
 19259     0006  014E               	movlb	14	; select bank14
 19260     0007  1E8C               	btfss	12,5	;volatile
 19261     0008  280A               	goto	u499_21
 19262     0009  280B               	goto	u499_20
 19263     000A                     u499_21:
 19264     000A  283B               	goto	i1l4979
 19265     000B                     u499_20:
 19266     000B                     i1l4967:
 19267                           
 19268                           ;uart.c: 69: PIR0bits.TMR0IF = 0;
 19269     000B  128C               	bcf	12,5	;volatile
 19270     000C                     i1l4969:
 19271                           
 19272                           ;uart.c: 70: ticks++;
 19273     000C  3001               	movlw	1
 19274     000D  07F8               	addwf	_ticks,f	;volatile
 19275     000E  3000               	movlw	0
 19276     000F  3DF9               	addwfc	_ticks+1,f	;volatile
 19277     0010  3000               	movlw	0
 19278     0011  3DFA               	addwfc	_ticks+2,f	;volatile
 19279     0012  3000               	movlw	0
 19280     0013  3DFB               	addwfc	_ticks+3,f	;volatile
 19281     0014                     i1l4971:
 19282                           
 19283                           ;uart.c: 73: if((uart_rx_states == BUSY) &&;uart.c: 74: (ticks - uart_rx_ticks > 100)) {
 19284     0014  0140               	movlb	0	; select bank0
 19285     0015  036F               	decf	_uart_rx_states,w	;volatile
 19286     0016  1D03               	btfss	3,2
 19287     0017  2819               	goto	u500_21
 19288     0018  281A               	goto	u500_20
 19289     0019                     u500_21:
 19290     0019  283B               	goto	i1l4979
 19291     001A                     u500_20:
 19292     001A                     i1l4973:
 19293     001A  0142               	movlb	2	; select bank2
 19294     001B  0858               	movf	_uart_rx_ticks^(0+256),w	;volatile
 19295     001C  0278               	subwf	_ticks,w	;volatile
 19296     001D  00F4               	movwf	??_INTERRUPT_InterruptManager
 19297     001E  0859               	movf	(_uart_rx_ticks+1)^(0+256),w	;volatile
 19298     001F  3B79               	subwfb	_ticks+1,w	;volatile
 19299     0020  00F5               	movwf	??_INTERRUPT_InterruptManager+1
 19300     0021  085A               	movf	(_uart_rx_ticks+2)^(0+256),w	;volatile
 19301     0022  3B7A               	subwfb	_ticks+2,w	;volatile
 19302     0023  00F6               	movwf	??_INTERRUPT_InterruptManager+2
 19303     0024  085B               	movf	(_uart_rx_ticks+3)^(0+256),w	;volatile
 19304     0025  3B7B               	subwfb	_ticks+3,w	;volatile
 19305     0026  00F7               	movwf	??_INTERRUPT_InterruptManager+3
 19306     0027  0877               	movf	??_INTERRUPT_InterruptManager+3,w
 19307     0028  1D03               	btfss	3,2
 19308     0029  2836               	goto	u501_20
 19309     002A  0876               	movf	??_INTERRUPT_InterruptManager+2,w
 19310     002B  1D03               	btfss	3,2
 19311     002C  2836               	goto	u501_20
 19312     002D  0875               	movf	??_INTERRUPT_InterruptManager+1,w
 19313     002E  1D03               	btfss	3,2
 19314     002F  2836               	goto	u501_20
 19315     0030  3065               	movlw	101
 19316     0031  0274               	subwf	??_INTERRUPT_InterruptManager,w
 19317     0032  1C03               	btfss	3,0
 19318     0033  2835               	goto	u501_21
 19319     0034  2836               	goto	u501_20
 19320     0035                     u501_21:
 19321     0035  283B               	goto	i1l4979
 19322     0036                     u501_20:
 19323     0036                     i1l4975:
 19324                           
 19325                           ;uart.c: 75: uart_rx_states = IDLE;
 19326     0036  0140               	movlb	0	; select bank0
 19327     0037  01EF               	clrf	_uart_rx_states	;volatile
 19328     0038                     i1l4977:
 19329                           
 19330                           ;uart.c: 76: uart_rx_package_event = 1;
 19331     0038  3001               	movlw	1
 19332     0039  0141               	movlb	1	; select bank1
 19333     003A  00EF               	movwf	_uart_rx_package_event^(0+128)	;volatile
 19334     003B                     i1l4979:
 19335                           
 19336                           ;uart.c: 79: };uart.c: 82: if (PIR3bits.SSP1IF) {
 19337     003B  014E               	movlb	14	; select bank14
 19338     003C  1C0F               	btfss	15,0	;volatile
 19339     003D  283F               	goto	u502_21
 19340     003E  2840               	goto	u502_20
 19341     003F                     u502_21:
 19342     003F  2844               	goto	i1l4985
 19343     0040                     u502_20:
 19344     0040                     i1l4981:
 19345                           
 19346                           ;uart.c: 83: PIR3bits.SSP1IF = 0;
 19347     0040  100F               	bcf	15,0	;volatile
 19348     0041                     i1l4983:
 19349                           
 19350                           ;uart.c: 84: i2c_slave_interrupt();
 19351     0041  3192  2295  3180   	fcall	_i2c_slave_interrupt
 19352     0044                     i1l4985:
 19353                           
 19354                           ;uart.c: 85: };uart.c: 91: if (PIR3bits.RC1IF){
 19355     0044  014E               	movlb	14	; select bank14
 19356     0045  1E8F               	btfss	15,5	;volatile
 19357     0046  2848               	goto	u503_21
 19358     0047  2849               	goto	u503_20
 19359     0048                     u503_21:
 19360     0048  2867               	goto	i1l503
 19361     0049                     u503_20:
 19362     0049                     i1l4987:
 19363                           
 19364                           ;uart.c: 93: uart_rx_ticks = get_ticks();
 19365     0049  319C  2492  3180   	fcall	_get_ticks
 19366     004C  0873               	movf	?_get_ticks+3,w
 19367     004D  0142               	movlb	2	; select bank2
 19368     004E  00DB               	movwf	(_uart_rx_ticks+3)^(0+256)	;volatile
 19369     004F  0872               	movf	?_get_ticks+2,w
 19370     0050  00DA               	movwf	(_uart_rx_ticks+2)^(0+256)	;volatile
 19371     0051  0871               	movf	?_get_ticks+1,w
 19372     0052  00D9               	movwf	(_uart_rx_ticks+1)^(0+256)	;volatile
 19373     0053  0870               	movf	?_get_ticks,w
 19374     0054  00D8               	movwf	_uart_rx_ticks^(0+256)	;volatile
 19375     0055                     i1l4989:
 19376                           
 19377                           ;uart.c: 94: uart_rx_states = BUSY;
 19378     0055  3001               	movlw	1
 19379     0056  0140               	movlb	0	; select bank0
 19380     0057  00EF               	movwf	_uart_rx_states	;volatile
 19381     0058                     i1l4991:
 19382                           
 19383                           ;uart.c: 95: rxbuffer[rxbuffer_index] = RC1REG;
 19384     0058  087D               	movf	_rxbuffer_index,w
 19385     0059  3E20               	addlw	(low (_rxbuffer| (0+256)))& (0+255)
 19386     005A  0086               	movwf	6
 19387     005B  3001               	movlw	1	; select bank2/3
 19388     005C  0087               	movwf	7
 19389     005D  0142               	movlb	2	; select bank2
 19390     005E  0819               	movf	25,w	;volatile
 19391     005F  0081               	movwf	1
 19392     0060                     i1l4993:
 19393                           
 19394                           ;uart.c: 96: rxbuffer_index++;
 19395     0060  3001               	movlw	1
 19396     0061  00F4               	movwf	??_INTERRUPT_InterruptManager
 19397     0062  0874               	movf	??_INTERRUPT_InterruptManager,w
 19398     0063  07FD               	addwf	_rxbuffer_index,f	;volatile
 19399     0064                     i1l4995:
 19400                           
 19401                           ;uart.c: 97: rxbuffer_index = rxbuffer_index % 32;
 19402     0064  087D               	movf	_rxbuffer_index,w	;volatile
 19403     0065  391F               	andlw	31
 19404     0066  00FD               	movwf	_rxbuffer_index	;volatile
 19405     0067                     i1l503:
 19406     0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 19407     0068  0009               	retfie
 19408     0069                     __end_of_INTERRUPT_InterruptManager:
 19409                           
 19410                           	psect	text60
 19411     1295                     __ptext60:	
 19412 ;; *************** function _i2c_slave_interrupt *****************
 19413 ;; Defined at:
 19414 ;;		line 65 in file "i2c_slave.c"
 19415 ;; Parameters:    Size  Location     Type
 19416 ;;		None
 19417 ;; Auto vars:     Size  Location     Type
 19418 ;;  value           1    3[COMMON] unsigned char 
 19419 ;;  isNack          1    2[COMMON] char 
 19420 ;;  isRead          1    1[COMMON] unsigned char 
 19421 ;; Return value:  Size  Location     Type
 19422 ;;                  1    wreg      void 
 19423 ;; Registers used:
 19424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19425 ;; Tracked objects:
 19426 ;;		On entry : 0/0
 19427 ;;		On exit  : 0/0
 19428 ;;		Unchanged: 0/0
 19429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19431 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19432 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19433 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19434 ;;Total ram usage:        4 bytes
 19435 ;; Hardware stack levels used: 1
 19436 ;; This function calls:
 19437 ;;		Nothing
 19438 ;; This function is called by:
 19439 ;;		_INTERRUPT_InterruptManager
 19440 ;; This function uses a non-reentrant model
 19441 ;;
 19442                           
 19443     1295                     _i2c_slave_interrupt:	
 19444                           ;psect for function _i2c_slave_interrupt
 19445                           
 19446     1295                     i1l4665:	
 19447                           ;incstack = 0
 19448                           ; Regs used in _i2c_slave_interrupt: [wreg-fsr1h+status,2+status,0]
 19449                           
 19450                           
 19451                           ;i2c_slave.c: 68: uint8_t isRead = SSP1STATbits.R_nW;
 19452     1295  3000               	movlw	0
 19453     1296  0143               	movlb	3	; select bank3
 19454     1297  190F               	btfsc	15,2	;volatile
 19455     1298  3001               	movlw	1
 19456     1299  00F1               	movwf	i2c_slave_interrupt@isRead
 19457                           
 19458                           ;i2c_slave.c: 69: int8_t isNack = SSP1CON2bits.ACKSTAT;
 19459     129A  3000               	movlw	0
 19460     129B  1B11               	btfsc	17,6	;volatile
 19461     129C  3001               	movlw	1
 19462     129D  00F2               	movwf	i2c_slave_interrupt@isNack
 19463     129E                     i1l4667:
 19464                           
 19465                           ;i2c_slave.c: 72: if (isNack) {
 19466     129E  0872               	movf	i2c_slave_interrupt@isNack,w
 19467     129F  1903               	btfsc	3,2
 19468     12A0  2AA2               	goto	u485_21
 19469     12A1  2AA3               	goto	u485_20
 19470     12A2                     u485_21:
 19471     12A2  2AA6               	goto	i1l4673
 19472     12A3                     u485_20:
 19473     12A3                     i1l4669:
 19474                           
 19475                           ;i2c_slave.c: 73: currentState = 0;
 19476     12A3  0141               	movlb	1	; select bank1
 19477     12A4  01EE               	clrf	_currentState^(0+128)
 19478     12A5  2AE7               	goto	i1l263
 19479     12A6                     i1l4673:
 19480                           
 19481                           ;i2c_slave.c: 75: };i2c_slave.c: 78: if (isRead) {
 19482     12A6  0871               	movf	i2c_slave_interrupt@isRead,w
 19483     12A7  1903               	btfsc	3,2
 19484     12A8  2AAA               	goto	u486_21
 19485     12A9  2AAB               	goto	u486_20
 19486     12AA                     u486_21:
 19487     12AA  2ABE               	goto	i1l4683
 19488     12AB                     u486_20:
 19489     12AB                     i1l4675:
 19490                           
 19491                           ;i2c_slave.c: 80: SSP1BUF = slaveData[currentRegister];
 19492     12AB  087C               	movf	_currentRegister,w
 19493     12AC  3EA0               	addlw	(low (_slaveData| (0+256)))& (0+255)
 19494     12AD  0086               	movwf	6
 19495     12AE  3001               	movlw	1	; select bank3/4
 19496     12AF  0087               	movwf	7
 19497     12B0  0801               	movf	1,w
 19498     12B1  008C               	movwf	12	;volatile
 19499     12B2                     i1l4677:
 19500                           
 19501                           ;i2c_slave.c: 82: currentRegister++;
 19502     12B2  3001               	movlw	1
 19503     12B3  00F0               	movwf	??_i2c_slave_interrupt
 19504     12B4  0870               	movf	??_i2c_slave_interrupt,w
 19505     12B5  07FC               	addwf	_currentRegister,f
 19506     12B6                     i1l4679:
 19507                           
 19508                           ;i2c_slave.c: 84: if (currentRegister >= 64u) {
 19509     12B6  3040               	movlw	64
 19510     12B7  027C               	subwf	_currentRegister,w
 19511     12B8  1C03               	skipc
 19512     12B9  2ABB               	goto	u487_21
 19513     12BA  2ABC               	goto	u487_20
 19514     12BB                     u487_21:
 19515     12BB  2AE5               	goto	i1l266
 19516     12BC                     u487_20:
 19517     12BC                     i1l4681:
 19518                           
 19519                           ;i2c_slave.c: 85: currentRegister = 0;
 19520     12BC  01FC               	clrf	_currentRegister
 19521     12BD  2AE5               	goto	i1l266
 19522     12BE                     i1l4683:
 19523                           
 19524                           ;i2c_slave.c: 90: uint8_t value = SSP1BUF;
 19525     12BE  080C               	movf	12,w	;volatile
 19526     12BF  00F3               	movwf	i2c_slave_interrupt@value
 19527                           
 19528                           ;i2c_slave.c: 92: switch (currentState) {
 19529     12C0  2AD9               	goto	i1l4697
 19530     12C1                     i1l268:	
 19531                           ;i2c_slave.c: 94: case 0:
 19532                           
 19533                           
 19534                           ;i2c_slave.c: 95: currentState = 1;
 19535     12C1  01EE               	clrf	_currentState^(0+128)
 19536     12C2  0AEE               	incf	_currentState^(0+128),f
 19537                           
 19538                           ;i2c_slave.c: 96: break;
 19539     12C3  2AE5               	goto	i1l266
 19540     12C4                     i1l4685:
 19541                           
 19542                           ;i2c_slave.c: 99: currentRegister = value % 64u;
 19543     12C4  0873               	movf	i2c_slave_interrupt@value,w
 19544     12C5  393F               	andlw	63
 19545     12C6  00FC               	movwf	_currentRegister
 19546     12C7                     i1l4687:
 19547                           
 19548                           ;i2c_slave.c: 100: currentState = 2;
 19549     12C7  3002               	movlw	2
 19550     12C8  00EE               	movwf	_currentState^(0+128)
 19551                           
 19552                           ;i2c_slave.c: 101: break;
 19553     12C9  2AE5               	goto	i1l266
 19554     12CA                     i1l4689:
 19555                           
 19556                           ;i2c_slave.c: 105: if (currentRegister < 57) {
 19557     12CA  3039               	movlw	57
 19558     12CB  027C               	subwf	_currentRegister,w
 19559     12CC  1803               	skipnc
 19560     12CD  2ACF               	goto	u488_21
 19561     12CE  2AD0               	goto	u488_20
 19562     12CF                     u488_21:
 19563     12CF  2AD7               	goto	i1l4693
 19564     12D0                     u488_20:
 19565     12D0                     i1l4691:
 19566                           
 19567                           ;i2c_slave.c: 106: slaveData[currentRegister] = value;
 19568     12D0  087C               	movf	_currentRegister,w
 19569     12D1  3EA0               	addlw	(low (_slaveData| (0+256)))& (0+255)
 19570     12D2  0086               	movwf	6
 19571     12D3  3001               	movlw	1	; select bank3/4
 19572     12D4  0087               	movwf	7
 19573     12D5  0873               	movf	i2c_slave_interrupt@value,w
 19574     12D6  0081               	movwf	1
 19575     12D7                     i1l4693:
 19576                           
 19577                           ;i2c_slave.c: 107: };i2c_slave.c: 108: currentState = 0;
 19578     12D7  01EE               	clrf	_currentState^(0+128)
 19579                           
 19580                           ;i2c_slave.c: 109: break;
 19581     12D8  2AE5               	goto	i1l266
 19582     12D9                     i1l4697:
 19583     12D9  0141               	movlb	1	; select bank1
 19584     12DA  086E               	movf	_currentState^(0+128),w
 19585                           
 19586                           ; Switch size 1, requested type "simple"
 19587                           ; Number of cases is 3, Range of values is 0 to 2
 19588                           ; switch strategies available:
 19589                           ; Name         Instructions Cycles
 19590                           ; simple_byte           10     6 (average)
 19591                           ; direct_byte           12     6 (fixed)
 19592                           ; jumptable            260     6 (fixed)
 19593                           ;	Chosen strategy is simple_byte
 19594     12DB  3A00               	xorlw	0	; case 0
 19595     12DC  1903               	skipnz
 19596     12DD  2AC1               	goto	i1l268
 19597     12DE  3A01               	xorlw	1	; case 1
 19598     12DF  1903               	skipnz
 19599     12E0  2AC4               	goto	i1l4685
 19600     12E1  3A03               	xorlw	3	; case 2
 19601     12E2  1903               	skipnz
 19602     12E3  2ACA               	goto	i1l4689
 19603     12E4  2AE5               	goto	i1l266
 19604     12E5                     i1l266:
 19605                           
 19606                           ;i2c_slave.c: 114: };i2c_slave.c: 117: SSP1CON1bits.CKP = 1;
 19607     12E5  0143               	movlb	3	; select bank3
 19608     12E6  1610               	bsf	16,4	;volatile
 19609     12E7                     i1l263:
 19610     12E7  0008               	return
 19611     12E8                     __end_of_i2c_slave_interrupt:
 19612                           
 19613                           	psect	text61
 19614     1C92                     __ptext61:	
 19615 ;; *************** function _get_ticks *****************
 19616 ;; Defined at:
 19617 ;;		line 8 in file "myisr.c"
 19618 ;; Parameters:    Size  Location     Type
 19619 ;;		None
 19620 ;; Auto vars:     Size  Location     Type
 19621 ;;		None
 19622 ;; Return value:  Size  Location     Type
 19623 ;;                  4    0[COMMON] unsigned long 
 19624 ;; Registers used:
 19625 ;;		wreg
 19626 ;; Tracked objects:
 19627 ;;		On entry : 0/0
 19628 ;;		On exit  : 0/0
 19629 ;;		Unchanged: 0/0
 19630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19635 ;;Total ram usage:        4 bytes
 19636 ;; Hardware stack levels used: 1
 19637 ;; This function calls:
 19638 ;;		Nothing
 19639 ;; This function is called by:
 19640 ;;		_INTERRUPT_InterruptManager
 19641 ;;		_is_it_time_up
 19642 ;;		_delay_state
 19643 ;; This function uses a non-reentrant model
 19644 ;;
 19645                           
 19646     1C92                     _get_ticks:	
 19647                           ;psect for function _get_ticks
 19648                           
 19649     1C92                     i1l4699:	
 19650                           ;incstack = 0
 19651                           ; Regs used in _get_ticks: [wreg]
 19652                           
 19653                           
 19654                           ;myisr.c: 9: return ticks;
 19655     1C92  087B               	movf	_ticks+3,w	;volatile
 19656     1C93  00F3               	movwf	?_get_ticks+3
 19657     1C94  087A               	movf	_ticks+2,w	;volatile
 19658     1C95  00F2               	movwf	?_get_ticks+2
 19659     1C96  0879               	movf	_ticks+1,w	;volatile
 19660     1C97  00F1               	movwf	?_get_ticks+1
 19661     1C98  0878               	movf	_ticks,w	;volatile
 19662     1C99  00F0               	movwf	?_get_ticks
 19663     1C9A                     i1l319:
 19664     1C9A  0008               	return
 19665     1C9B                     __end_of_get_ticks:
 19666     007E                     btemp	set	126	;btemp
 19667     007E                     int$flags	set	126
 19668     007E                     wtemp0	set	126
 19669                           
 19670                           	psect	idloc
 19671                           
 19672                           ;Config register IDLOC0 @ 0x8000
 19673                           ;	unspecified, using default values
 19674     8000                     	org	32768
 19675     8000  3FFF               	dw	16383
 19676                           
 19677                           ;Config register IDLOC1 @ 0x8001
 19678                           ;	unspecified, using default values
 19679     8001                     	org	32769
 19680     8001  3FFF               	dw	16383
 19681                           
 19682                           ;Config register IDLOC2 @ 0x8002
 19683                           ;	unspecified, using default values
 19684     8002                     	org	32770
 19685     8002  3FFF               	dw	16383
 19686                           
 19687                           ;Config register IDLOC3 @ 0x8003
 19688                           ;	unspecified, using default values
 19689     8003                     	org	32771
 19690     8003  3FFF               	dw	16383
 19691                           
 19692                           	psect	config
 19693                           
 19694                           ;Config register CONFIG1 @ 0x8007
 19695                           ;	External Oscillator mode selection bits
 19696                           ;	FEXTOSC = OFF, Oscillator not enabled
 19697                           ;	Power-up default value for COSC bits
 19698                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 19699                           ;	Clock Out Enable bit
 19700                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 19701                           ;	Clock Switch Enable bit
 19702                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
 19703                           ;	Fail-Safe Clock Monitor Enable bit
 19704                           ;	FCMEN = OFF, FSCM timer disabled
 19705     8007                     	org	32775
 19706     8007  17EC               	dw	6124
 19707                           
 19708                           ;Config register CONFIG2 @ 0x8008
 19709                           ;	Master Clear Enable bit
 19710                           ;	MCLRE = OFF, MCLR pin function is port defined function
 19711                           ;	Power-up Timer Enable bit
 19712                           ;	PWRTS = OFF, PWRT disabled
 19713                           ;	Low-Power BOR enable bit
 19714                           ;	LPBOREN = OFF, ULPBOR disabled
 19715                           ;	Brown-out reset enable bits
 19716                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 19717                           ;	Brown-out Reset Voltage Selection
 19718                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 19719                           ;	Zero-cross detect disable
 19720                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 19721                           ;	Peripheral Pin Select one-way control
 19722                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 19723                           ;	Stack Overflow/Underflow Reset Enable bit
 19724                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 19725     8008                     	org	32776
 19726     8008  3FFE               	dw	16382
 19727                           
 19728                           ;Config register CONFIG3 @ 0x8009
 19729                           ;	WDT Period Select bits
 19730                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 19731                           ;	WDT operating mode
 19732                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 19733                           ;	WDT Window Select bits
 19734                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 19735                           ;	WDT input clock selector
 19736                           ;	WDTCCS = SC, Software Control
 19737     8009                     	org	32777
 19738     8009  3F9F               	dw	16287
 19739                           
 19740                           ;Config register CONFIG4 @ 0x800A
 19741                           ;	Boot Block Size Selection bits
 19742                           ;	BBSIZE = BB512, 512 words boot block size
 19743                           ;	Boot Block Enable bit
 19744                           ;	BBEN = OFF, Boot Block disabled
 19745                           ;	SAF Enable bit
 19746                           ;	SAFEN = OFF, SAF disabled
 19747                           ;	Application Block Write Protection bit
 19748                           ;	WRTAPP = OFF, Application Block not write protected
 19749                           ;	Boot Block Write Protection bit
 19750                           ;	WRTB = OFF, Boot Block not write protected
 19751                           ;	Configuration Register Write Protection bit
 19752                           ;	WRTC = OFF, Configuration Register not write protected
 19753                           ;	Data EEPROM write protection bit
 19754                           ;	WRTD = OFF, Data EEPROM NOT write protected
 19755                           ;	Storage Area Flash Write Protection bit
 19756                           ;	WRTSAF = OFF, SAF not write protected
 19757                           ;	Low Voltage Programming Enable bit
 19758                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 19759     800A                     	org	32778
 19760     800A  3FFF               	dw	16383
 19761                           
 19762                           ;Config register CONFIG5 @ 0x800B
 19763                           ;	UserNVM Program memory code protection bit
 19764                           ;	CP = ON, UserNVM code protection enabled
 19765     800B                     	org	32779
 19766     800B  3FFE               	dw	16382

Data Sizes:
    Strings     1088
    Constant    30
    Data        128
    BSS         166
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      80
    BANK1            80     78      80
    BANK2            80      0      77
    BANK3            80      0      80
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 4
		 -> get_measured_value@payload_temp(BANK0[4]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 4
		 -> get_measured_value@temp(BANK0[4]), 

    dispatch@b2	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), 

    dispatch@b1	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK1[27]), 

    measurement@value	PTR struct values size(1) Largest target is 17
		 -> main@sensor_value(BANK1[17]), 

    measurement@state	PTR enum E10355 size(1) Largest target is 1
		 -> main@state(BANK1[1]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(BANK0[3]), 

    printf$1648	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_34(CODE[17]), STR_33(CODE[17]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_32(CODE[7]), printf@c(BANK0[1]), ?_printf(BANK0[2]), slaveData(BANK3[64]), 
		 -> sensor_value.temp_value(BANK0[2]), sensor_value.ph_ADC_Low_byte(BANK0[1]), sensor_value.ph_ADC_High_byte(BANK0[1]), sensor_value.ph_ADC_value(BANK0[2]), 
		 -> sensor_value.ph_value(BANK0[1]), STR_3(CODE[11]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 235
		 -> STR_31(CODE[235]), STR_30(CODE[232]), STR_29(CODE[64]), STR_28(CODE[11]), 
		 -> STR_27(CODE[9]), STR_26(CODE[59]), STR_25(CODE[17]), STR_24(CODE[17]), 
		 -> STR_23(CODE[13]), STR_22(CODE[13]), STR_19(CODE[3]), STR_18(CODE[6]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[4]), 
		 -> STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[36]), STR_10(CODE[37]), 
		 -> STR_9(CODE[121]), STR_8(CODE[35]), STR_7(CODE[8]), STR_6(CODE[38]), 
		 -> STR_5(CODE[8]), STR_4(CODE[35]), STR_2(CODE[9]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    save_bottom_adc_point@states	PTR enum E186 size(1) Largest target is 1
		 -> main@state(BANK1[1]), 

    save_bottom_adc_point@sensor_value	PTR struct values size(1) Largest target is 17
		 -> main@sensor_value(BANK1[17]), 

    save_top_adc_point@states	PTR enum E186 size(1) Largest target is 1
		 -> main@state(BANK1[1]), 

    save_top_adc_point@sensor_value	PTR struct values size(1) Largest target is 17
		 -> main@sensor_value(BANK1[17]), 

    get_measured_adc_value@sensor_value	PTR struct values size(1) Largest target is 17
		 -> main@sensor_value(BANK1[17]), 

    calculate_crc_and_fill_array@data	PTR unsigned char  size(1) Largest target is 8
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[8]), save_top_adc_point@save_top_adc_command(BANK0[8]), 

    crc16_modbus@data	PTR unsigned char  size(1) Largest target is 8
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[8]), save_top_adc_point@save_top_adc_command(BANK0[8]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    get_measured_value@sensor_value	PTR struct values size(1) Largest target is 17
		 -> main@sensor_value(BANK1[17]), 

    dispatch@state	PTR enum E10399 size(1) Largest target is 1
		 -> main@state(BANK1[1]), 

    dispatch@b2_clicked_count_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@b2_clicked_count(BANK1[1]), 

    dispatch@b1_clicked_count_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@b1_clicked_count(BANK1[1]), 

    monitoring_sync@state	PTR enum E10399 size(2) Largest target is 8192
		 -> RAM(DATA[8192]), main@state(BANK1[1]), 

    monitoring_sync@b2_clicked_count	PTR unsigned char  size(1) Largest target is 1
		 -> main@b2_clicked_count(BANK1[1]), 

    monitoring_sync@b2	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), 

    monitoring_sync@b1_clicked_count	PTR unsigned char  size(1) Largest target is 1
		 -> main@b1_clicked_count(BANK1[1]), 

    monitoring_sync@b1	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK1[27]), 

    EUSART1_Write_1@txbuf	PTR unsigned char  size(1) Largest target is 32
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[8]), save_top_adc_point@save_top_adc_command(BANK0[8]), measured_adc@measured_adc_command(BANK0[8]), set_bottom_calibrate_point@bottom_slop_point_command(BANK0[32]), 
		 -> set_top_calibrate_point@top_zero_point_command(BANK0[32]), send_measured_command@txbuf(BANK0[32]), 

    reset_long_press_flag@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    reset_single_click_flag@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    is_long_press@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    is_single_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    update_mybutton@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    __is_long_press@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    __is_double_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    __is_single_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    init_button@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK1[27]), main@b1(BANK1[27]), 

    dump_buffer@buffer	PTR const void  size(1) Largest target is 64
		 -> slaveData(BANK3[64]), 

    dump_buffer@p	PTR const unsigned char  size(1) Largest target is 64
		 -> slaveData(BANK3[64]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_get_ticks
    _INTERRUPT_InterruptManager->_i2c_slave_interrupt

Critical Paths under _main in BANK0

    _main->_get_measured_value
    _update_mybutton->___is_single_click
    _set_device_serial_number_to_i2c_slave_memorymap->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _i2c_slave_set_register_with_lock->_i2c_slave_set_register
    _save_top_adc_point->_printf
    _save_bottom_adc_point->_printf
    _calculate_crc_and_fill_array->_crc16_modbus
    _monitoring_sync->_printf
    _measurement->_printf
    _send_measured_command->_EUSART1_Write_1
    _measured_adc->_printf
    _EUSART1_Write_1->_EUSART1_Write
    _get_measured_value->_printf
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _dump_memory_map->_dump_buffer
    _dump_buffer->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                82    82      0   68445
                                             75 BANK0      4     4      0
                                              0 BANK1     78    78      0
           _Disable_Global_Interrupt
            _Enable_Global_Interrupt
                  _SYSTEM_Initialize
                     _calculate_diff
                           _dispatch
                    _dump_memory_map
                 _enable_tx_transmit
                 _enable_uart_printf
             _get_measured_adc_value
                 _get_measured_value
                _get_ticks_with_lock
                     _i2c_slave_init
             _i2c_slave_set_register
                        _init_button
                       _measured_adc
                        _measurement
                    _monitoring_sync
                             _printf
              _save_bottom_adc_point
                 _save_top_adc_point
_set_device_serial_number_to_i2c_sla
                          _tmr0_init
                    _update_mybutton
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _update_mybutton                                     10     5      5    2378
                                             17 BANK0     10     5      5
                  ___is_double_click
                    ___is_long_press
                  ___is_single_click
                _get_ticks_with_lock (ARG)
 ---------------------------------------------------------------------------------
 (2) ___is_single_click                                   17    13      4     553
                                              0 BANK0     17    13      4
 ---------------------------------------------------------------------------------
 (2) ___is_long_press                                     15    11      4     419
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (2) ___is_double_click                                   16    12      4     486
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (1) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_device_serial_number_to_i2c_slave_memorymap      7     7      0    2249
                                             27 BANK0      7     7      0
   _i2c_slave_set_register_with_lock
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                              15    11      4    1493
                                             12 BANK0     15    11      4
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isspace                                              2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isalpha                                              2     2      0     158
                                              2 BANK0      2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (4) _isupper                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_slave_set_register_with_lock                     2     1      1     544
                                              2 BANK0      2     1      1
             _i2c_slave_set_register
 ---------------------------------------------------------------------------------
 (3) _i2c_slave_set_register                               2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _save_top_adc_point                                  18    17      1    7908
                                             50 BANK0     18    17      1
                    _EUSART1_Write_1
       _calculate_crc_and_fill_array
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (1) _save_bottom_adc_point                               18    17      1    7908
                                             50 BANK0     18    17      1
                    _EUSART1_Write_1
       _calculate_crc_and_fill_array
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (2) _calculate_crc_and_fill_array                         5     4      1     712
                                             14 BANK0      5     4      1
                       _crc16_modbus
 ---------------------------------------------------------------------------------
 (3) _crc16_modbus                                        14    12      2     317
                                              0 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 (1) _monitoring_sync                                      6     0      6    7955
                                             50 BANK0      6     0      6
            _LED_flashes_three_times
                      _is_long_press
                    _is_single_click
                             _printf
              _reset_long_press_flag
            _reset_single_click_flag
 ---------------------------------------------------------------------------------
 (2) _reset_single_click_flag                              1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _reset_long_press_flag                                1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _is_single_click                                      1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _is_long_press                                        1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_flashes_three_times                              3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _measurement                                          3     2      1    6958
                                             50 BANK0      3     2      1
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
              _send_measured_command
 ---------------------------------------------------------------------------------
 (2) _send_measured_command                               33    33      0     790
                                              5 BANK0     33    33      0
                    _EUSART1_Write_1
 ---------------------------------------------------------------------------------
 (1) _measured_adc                                         9     9      0    6832
                                             50 BANK0      9     9      0
                    _EUSART1_Write_1
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (2) _enable_uart_printf                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enable_tx_transmit                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write_1                                      4     3      1     766
                                              1 BANK0      4     3      1
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_button                                          1     1      0     396
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_ticks_with_lock                                  8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _get_measured_value                                  27    27      0    8977
                                             50 BANK0     25    25      0
                            ___flmul
                            ___fltol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             35 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _get_measured_adc_value                               3     3      0     133
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _dump_memory_map                                      0     0      0    6756
                        _dump_buffer
 ---------------------------------------------------------------------------------
 (2) _dump_buffer                                         14    12      2    6756
                                             50 BANK0     14    12      2
                            _isprint
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              40    28     12    6042
                                             14 BANK0     36    24     12
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _isprint                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             7     3      4     581
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _calculate_diff                                      20    12      8    1372
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Enable_Global_Interrupt                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Disable_Global_Interrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           4     4      0      91
                                              4 COMMON     4     4      0
                          _get_ticks
                _i2c_slave_interrupt
 ---------------------------------------------------------------------------------
 (6) _i2c_slave_interrupt                                  4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _get_ticks                                            4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Disable_Global_Interrupt
   _Enable_Global_Interrupt
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _calculate_diff
   _dispatch
   _dump_memory_map
     _dump_buffer
       _isprint
       _printf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
   _enable_tx_transmit
   _enable_uart_printf
   _get_measured_adc_value
   _get_measured_value
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
     _printf
   _get_ticks_with_lock
   _i2c_slave_init
   _i2c_slave_set_register
   _init_button
   _measured_adc
     _EUSART1_Write_1
       _EUSART1_Write
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _measurement
     _enable_tx_transmit
     _enable_uart_printf
     _printf
     _send_measured_command
       _EUSART1_Write_1
   _monitoring_sync
     _LED_flashes_three_times
     _is_long_press
     _is_single_click
     _printf
     _reset_long_press_flag
     _reset_single_click_flag
   _printf
   _save_bottom_adc_point
     _EUSART1_Write_1
     _calculate_crc_and_fill_array
       _crc16_modbus
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _save_top_adc_point
     _EUSART1_Write_1
     _calculate_crc_and_fill_array
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _set_device_serial_number_to_i2c_slave_memorymap
     _i2c_slave_set_register_with_lock
       _i2c_slave_set_register
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _tmr0_init
   _update_mybutton
     ___is_double_click
     ___is_long_press
     ___is_single_click
     _get_ticks_with_lock (ARG)
   _usart_init

 _INTERRUPT_InterruptManager (ROOT)
   _get_ticks
   _i2c_slave_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     1CB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     4E      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4D      10       96.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      40      16       80.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1CB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Apr 21 19:35:09 2024

                                         ___bmul@product 0022  
                                                     l41 1CAD  
                                                     l35 1CB7  
                                                     l38 1CA3  
                                                     l86 1EFC  
                              ??_Enable_Global_Interrupt 0020  
                                    ___wmul@multiplicand 0022  
                             __end_of_enable_tx_transmit 1D0A  
                                    __Umul8_16@word_mpld 0026  
                                                    l312 17FF  
                                                    l330 0003  
                                                    l322 1D86  
                                                    l402 1C91  
                                                    l243 1EAE  
                                                    l252 1CD6  
                                                    l333 0801  
                                                    l342 1F00  
                                                    l246 1CCB  
                                                    l327 133C  
                                                    l512 1C6B  
                                                    l600 1DC6  
                                                    l408 1C89  
                                                    l345 1F0D  
                                                    l346 1F28  
                                                    l370 0AE1  
                                                    l603 09D9  
                                                    l515 1D09  
                                                    l291 1CFB  
                                                    l276 1CC1  
                                                    l364 13F8  
                                                    l524 1254  
                                                    l382 15D6  
                                                    l390 1738  
                                                    l471 1CE2  
                                                    l376 08F6  
                                                    l553 1216  
                          __end_of_send_measured_command 1DC7  
                                                    l393 1C81  
                                                    l641 1384  
                                                    l385 16BA  
                                                    l465 1D19  
                                                    l474 1CE5  
                                                    l643 135A  
                                                    l651 1E4F  
                                                    l468 1CD9  
                                                    l900 023B  
                                                    l477 1CEE  
                                                    l549 1676  
                                                    l486 1DF9  
                                                    l670 1F59  
                                                    l591 1E50  
                                                    l399 1C79  
                                                    l664 1F29  
                                                    l648 1396  
                                                    l680 14C8  
                                                    l914 02D3  
                                                    l923 0331  
                                                    l675 1E14  
                                                    l595 1E6E  
                                                    l861 00F3  
                                                    l685 1460  
                                                    l943 0440  
                                                    l919 0302  
                                                    l855 00D5  
                                                    l857 00DB  
                                                    l858 00DD  
                                                    l955 04F2  
                                                    l891 01F9  
                                                    l883 01AF  
                                                    l859 00DF  
                                                    l884 01B0  
                                                    l981 058B  
                                                    l990 1E7A  
                                                    l959 04AF  
                                                    l879 01AD  
                                                    l992 1E8E  
                                                    l986 05BE  
                                                    _GIE 005F  
                                                    mcp0 09A0  
                                                    _tmp 015C  
                                                    wreg 0009  
                                           ___flmul@aexp 003B  
                                           ___flmul@bexp 003C  
                            save_bottom_adc_point@states 0063  
                                           ___flmul@sign 0036  
                                           ___flmul@temp 0041  
                                           ___flmul@prod 003D  
                                           ___fltol@exp1 004C  
                                                   l1004 1F8D  
                                                   l1016 1DB0  
                                                   l1400 1ED2  
                                                   l1262 1FFF  
                                                   l1183 1524  
                                                   l1503 1D9A  
                                                   l1272 1FC2  
                                                   l1176 1539  
                                                   l4001 0ADE  
                                                   l1186 1539  
                                                   l1443 1D5F  
                                                   l4011 08B2  
                                                   l4101 0B20  
                                                   l4013 08B7  
                                                   l4021 08D2  
                                                   l4005 0AE0  
                                                   l1391 07ED  
                                                   l4111 0B3C  
                                                   l4103 0B25  
                                                   l4023 08DC  
                                                   l4015 08BC  
                                                   l1448 1D4C  
                                                   l3401 1F98  
                                                   l1385 0779  
                                                   l4201 1529  
                                                   l4121 0B56  
                                                   l4113 0B42  
                                                   l4105 0B29  
                                                   l4033 08F5  
                                                   l4025 08E1  
                                                   l4017 08C1  
                                                   l4009 0824  
                                                   l4041 159C  
                                                   l1482 0BEB  
                                                   l3411 1FB3  
                                                   l3403 1F9D  
                                                   l3331 1D4F  
                                                   l3323 1CD9  
                                                   l1379 07F9  
                                                   l4211 05C9  
                                                   l4203 152E  
                                                   l4131 0B75  
                                                   l4115 0B46  
                                                   l4107 0B2F  
                                                   l4123 0B5A  
                                                   l1459 0AE4  
                                                   l4027 08EA  
                                                   l4019 08CB  
                                                   l4051 15C1  
                                                   l4043 15A1  
                                                   l3413 1FB8  
                                                   l3405 1FA1  
                                                   l3333 1D50  
                                                   l3325 1CDE  
                                                   l3501 019E  
                                                   l4301 0759  
                                                   l4221 05DE  
                                                   l4213 05CA  
                                                   l4205 05BF  
                                                   l3421 1D63  
                                                   l4141 0BB8  
                                                   l4133 0B7E  
                                                   l4125 0B60  
                                                   l4117 0B4B  
                                                   l4109 0B36  
                                                   l4029 08F3  
                                                   l4053 15CA  
                                                   l4045 15AB  
                                                   l4037 153C  
                                                   l1398 1EC2  
                                                   l1494 1DDF  
                                                   l3407 1FA5  
                                                   l3415 1FBE  
                                                   l3351 1E84  
                                                   l3343 1E6F  
                                                   l3335 1D56  
                                                   l3511 01C3  
                                                   l3503 01AB  
                                                   l3431 00C1  
                                                   l4303 075D  
                                                   l4231 05F2  
                                                   l4223 05E6  
                                                   l4215 05CF  
                                                   l4207 05C3  
                                                   l3327 1CE5  
                                                   l4063 1C7C  
                                                   l4071 1C8C  
                                                   l3423 1D69  
                                                   l4151 0BD3  
                                                   l4143 0BBD  
                                                   l4135 0B81  
                                                   l4127 0B64  
                                                   l4119 0B50  
                                                   l4055 15D3  
                                                   l4047 15B2  
                                                   l4039 1597  
                                                   l3361 1DA2  
                                                   l3409 1FAF  
                                                   l3353 1E8A  
                                                   l3345 1E72  
                                                   l3337 1D5C  
                                                   l3521 01DE  
                                                   l3513 01C7  
                                                   l3505 01B2  
                                                   l3433 00C5  
                                                   l4321 07A7  
                                                   l4313 077E  
                                                   l4305 075E  
                                                   l4241 060E  
                                                   l4233 05F7  
                                                   l4225 05EB  
                                                   l4217 05D4  
                                                   l4209 05C5  
                                                   l4401 1E9E  
                                                   l3329 1CEA  
                                                   l4161 1DC0  
                                                   l4073 1C84  
                                                   l3425 1D6F  
                                                   l1489 1E31  
                                                   l4145 0BC2  
                                                   l4129 0B6C  
                                                   l4081 0AF7  
                                                   l4049 15BC  
                                                   l3363 1DA6  
                                                   l3371 1FC3  
                                                   l3347 1E76  
                                                   l3339 1D5E  
                                                   l3603 0326  
                                                   l3523 01F1  
                                                   l3515 01CA  
                                                   l3507 01B9  
                                                   l3451 00F7  
                                                   l3435 00CB  
                                                   l4331 07D9  
                                                   l4315 0783  
                                                   l4323 07AB  
                                                   l4307 0762  
                                                   l4251 062C  
                                                   l4243 0613  
                                                   l4235 05FC  
                                                   l4227 05ED  
                                                   l4219 05DC  
                                                   l4171 14D3  
                                                   l4403 1EA4  
                                                   l4411 13AD  
                                                   l4067 1C74  
                                                   l4163 1E34  
                                                   l1499 1D72  
                                                   l3427 1D71  
                                                   l3419 1D62  
                                                   l4155 0BE3  
                                                   l4147 0BC8  
                                                   l4139 0B8D  
                                                   l4091 0B0E  
                                                   l4083 0B00  
                                                   l4075 0AE4  
                                                   l4059 15D5  
                                                   l3365 1DA8  
                                                   l3357 1D9D  
                                                   l3381 1FD8  
                                                   l3373 1FC6  
                                                   l3349 1E7F  
                                                   l3701 04B7  
                                                   l3621 037F  
                                                   l3613 0355  
                                                   l3605 0333  
                                                   l3533 0210  
                                                   l3541 022F  
                                                   l3525 0204  
                                                   l3517 01CE  
                                                   l3509 01BD  
                                                   l3461 012A  
                                                   l3453 00FB  
                                                   l3437 00D0  
                                                   l4341 07F1  
                                                   l4333 07DB  
                                                   l4325 07B8  
                                                   l4317 078B  
                                                   l4309 0776  
                                                   l4261 0683  
                                                   l4253 0639  
                                                   l4245 0618  
                                                   l4237 0604  
                                                   l4229 05F1  
                                                   l4181 14F6  
                                                   l4405 1EA8  
                                                   l4421 13D5  
                                                   l4413 13B7  
                                                   l4501 1644  
                                                   l4165 1E3F  
                                                   l4149 0BCE  
                                                   l4093 0B13  
                                                   l4085 0B01  
                                                   l4077 0AEA  
                                                   l4351 12E8  
                                                   l3367 1DAF  
                                                   l3359 1D9E  
                                                   l3391 1FF5  
                                                   l3383 1FDC  
                                                   l3375 1FCC  
                                                   l3711 04E4  
                                                   l3703 04C7  
                                                   l3631 03AC  
                                                   l3623 0383  
                                                   l3551 0257  
                                                   l3535 0214  
                                                   l3527 0209  
                                                   l3519 01D9  
                                                   l3471 0151  
                                                   l3463 012E  
                                                   l3455 0107  
                                                   l3439 00D6  
                                                   l4335 07E6  
                                                   l4327 07C2  
                                                   l4319 078F  
                                                   l4271 06B4  
                                                   l4263 0690  
                                                   l4255 0651  
                                                   l4239 0606  
                                                   l4191 1504  
                                                   l4183 14F8  
                                                   l4175 14DC  
                                                   l4431 13EE  
                                                   l4423 13DA  
                                                   l4415 13C1  
                                                   l4407 1399  
                                                   l4159 1DB1  
                                                   l4511 1666  
                                                   l4503 1649  
                                                   l4167 1E47  
                                                   l4087 0B07  
                                                   l4079 0AEE  
                                                   l4345 1CAE  
                                                   l4353 12FB  
                                                   l3385 1FEB  
                                                   l3377 1FCF  
                                                   l3393 1FFB  
                                                   l3721 0536  
                                                   l3713 04E9  
                                                   l3705 04CC  
                                                   l3641 03D5  
                                                   l3633 03B0  
                                                   l3625 0396  
                                                   l3609 033A  
                                                   l3617 0360  
                                                   l3553 025B  
                                                   l3545 0240  
                                                   l3537 0222  
                                                   l3529 020B  
                                                   l3561 0269  
                                                   l3481 016F  
                                                   l3473 0155  
                                                   l3457 010A  
                                                   l3465 013B  
                                                   l3449 00E1  
                                                   l4337 07EA  
                                                   l4329 07D0  
                                                   l4281 06F1  
                                                   l4273 06BB  
                                                   l4265 0697  
                                                   l4257 065E  
                                                   l4249 0621  
                                                   l4185 14FC  
                                                   l4193 1514  
                                                   l4177 14ED  
                                                   l4169 14C9  
                                                   l4433 13F3  
                                                   l4425 13DF  
                                                   l4417 13CB  
                                                   l4409 13A3  
                                                   l4521 1E52  
                                                   l4513 1669  
                                                   l4505 1650  
                                                   l4601 1420  
                                                   l3801 1F67  
                                                   l4089 0B09  
                                                   l4361 1CEF  
                                                   l4347 1CB1  
                                                   l4355 1310  
                                                   l3387 1FEF  
                                                   l3379 1FD4  
                                                   l3723 053A  
                                                   l3715 04ED  
                                                   l3707 04DB  
                                                   l3651 040B  
                                                   l3643 03E4  
                                                   l3635 03B4  
                                                   l3627 0399  
                                                   l3619 036F  
                                                   l3571 02AE  
                                                   l3555 025F  
                                                   l3547 0244  
                                                   l3539 022A  
                                                   l3563 0293  
                                                   l3491 0181  
                                                   l3483 0174  
                                                   l3475 0160  
                                                   l3467 0146  
                                                   l3459 011B  
                                                   l4611 1DFC  
                                                   l3811 1EB1  
                                                   l4339 07EB  
                                                   l4291 0742  
                                                   l4283 0703  
                                                   l4275 06CD  
                                                   l4267 06A2  
                                                   l4259 0676  
                                                   l4179 14EE  
                                                   l4435 1D73  
                                                   l4427 13E4  
                                                   l4419 13D0  
                                                   l4531 1E6C  
                                                   l4523 1E55  
                                                   l4515 166C  
                                                   l4507 1654  
                                                   l4603 1423  
                                                   l3803 1F6F  
                                                   l4099 0B1A  
                                                   l4363 1CF4  
                                                   l4451 1696  
                                                   l4443 1679  
                                                   l4371 1D0A  
                                                   l3901 1C9F  
                                                   l4349 1CB4  
                                                   l4357 1334  
                                                   l3389 1FF0  
                                                   l3397 1F8E  
                                                   l3741 059C  
                                                   l3733 056E  
                                                   l3725 053F  
                                                   l3717 04F3  
                                                   l3709 04DF  
                                                   l3661 042B  
                                                   l3653 0411  
                                                   l3645 03EA  
                                                   l3637 03C7  
                                                   l3629 03A0  
                                                   l3581 02C8  
                                                   l3573 02B2  
                                                   l3565 029F  
                                                   l3557 0264  
                                                   l3549 0252  
                                                   l3485 0178  
                                                   l3493 0186  
                                                   l3477 0161  
                                                   l3469 014D  
                                                   l4613 1DFC  
                                                   l3821 1ECE  
                                                   l3813 1EB3  
                                                   l4293 0749  
                                                   l4285 0718  
                                                   l4277 06D4  
                                                   l4269 06A9  
                                                   l4621 08F9  
                                                   l4437 1D74  
                                                   l4429 13E9  
                                                   l4541 1F42  
                                                   l4533 1F2B  
                                                   l4525 1E5D  
                                                   l4517 1671  
                                                   l4509 165E  
                                                   l4605 144E  
                                                   l3805 1F76  
                                                   l4365 1CF5  
                                                   l4461 1706  
                                                   l4453 16C2  
                                                   l4445 1681  
                                                   l4381 1D17  
                                                   l4373 1D0D  
                                                   l3903 1CA2  
                                                   l4551 11EE  
                                                   l3751 1D3D  
                                                   l3399 1F95  
                                                   l3743 05A0  
                                                   l3727 0543  
                                                   l3719 051B  
                                                   l3735 057D  
                                                   l3671 0458  
                                                   l3663 042F  
                                                   l3655 0414  
                                                   l3647 03EF  
                                                   l3639 03D2  
                                                   l3583 02CE  
                                                   l3567 02A6  
                                                   l3575 02B8  
                                                   l3495 0188  
                                                   l3487 017C  
                                                   l3479 0165  
                                                   l4615 1E03  
                                                   l3815 1EBA  
                                                   l4295 074D  
                                                   l4287 072F  
                                                   l4279 06E6  
                                                   l4199 151B  
                                                   l4631 0953  
                                                   l4623 08F9  
                                                   l4439 1D7D  
                                                   l4391 1E97  
                                                   l4383 1E8F  
                                                   l3911 1D08  
                                                   l4543 1F51  
                                                   l4535 1F2E  
                                                   l4527 1E66  
                                                   l4519 1671  
                                                   l4471 15E1  
                                                   l4607 1457  
                                                   l3807 1F85  
                                                   l3831 1DD7  
                                                   l4367 1CF7  
                                                   l4463 1718  
                                                   l4455 16CA  
                                                   l4447 1686  
                                                   l4375 1D12  
                                                   l4641 0800  
                                                   l4561 1202  
                                                   l4553 11F3  
                                                   l3753 1D43  
                                                   l3729 0551  
                                                   l3737 0581  
                                                   l3673 045C  
                                                   l3681 046E  
                                                   l3665 043B  
                                                   l3657 041F  
                                                   l3649 03FE  
                                                   l3593 02F7  
                                                   l3585 02D5  
                                                   l3577 02BF  
                                                   l3569 02AA  
                                                   l3497 0191  
                                                   l3489 017D  
                                                   l3745 05AB  
                                                   l3921 173D  
                                                   l4617 1E0B  
                                                   l3817 1EBE  
                                                   l4297 074E  
                                                   l4289 0736  
                                                   l4633 098E  
                                                   l4625 0934  
                                                   l4393 1E99  
                                                   l4385 1E91  
                                                   l3761 1DE2  
                                                   l3905 1C67  
                                                   l4545 1F57  
                                                   l4537 1F36  
                                                   l4529 1E69  
                                                   l4481 1605  
                                                   l4473 15E9  
                                                   l4609 145A  
                                                   l3913 1CCE  
                                                   l3841 1E19  
                                                   l3833 1DDD  
                                                   l3825 1DC9  
                                                   l4369 1CF8  
                                                   l4465 171F  
                                                   l4457 16EE  
                                                   l4449 168E  
                                                   l4377 1D13  
                                                   l4801 0DD7  
                                                   l4721 0BFB  
                                                   l4563 1207  
                                                   l4555 11F8  
                                                   l4547 11DF  
                                                   l3755 1D49  
                                                   l3739 058F  
                                                   l3691 048F  
                                                   l3683 0475  
                                                   l3675 0461  
                                                   l3667 0444  
                                                   l3659 0428  
                                                   l3595 0304  
                                                   l3579 02C3  
                                                   l3499 019A  
                                                   l3931 174E  
                                                   l3923 1740  
                                                   l4619 1CB8  
                                                   l3819 1EC9  
                                                   l4299 0755  
                                                   l4635 09A1  
                                                   l4627 0939  
                                                   l4395 1E9B  
                                                   l4387 1E93  
                                                   l3763 1DE4  
                                                   l3907 1C69  
                                                   l4539 1F3F  
                                                   l4491 1629  
                                                   l4483 160D  
                                                   l4475 15F3  
                                                   l3771 1347  
                                                   l4571 1463  
                                                   l3747 1CC4  
                                                   l3915 1CCF  
                                                   l3843 1E1F  
                                                   l3835 1DDE  
                                                   l3827 1DCB  
                                                   l4651 1235  
                                                   l4643 1217  
                                                   l4467 1731  
                                                   l4459 16FF  
                                                   l4379 1D15  
                                                   l4811 0E36  
                                                   l4803 0E0A  
                                                   l4731 0C1C  
                                                   l4723 0C03  
                                                   l4715 0BEC  
                                                   l4565 120C  
                                                   l4549 11E9  
                                                   l3757 1D4B  
                                                   l3749 1D3C  
                                                   l3693 0493  
                                                   l3685 0479  
                                                   l3677 0466  
                                                   l3669 0449  
                                                   l3589 02DC  
                                                   l3941 178C  
                                                   l3933 175E  
                                                   l3925 174B  
                                                   l4637 09CA  
                                                   l4629 094A  
                                                   l4389 1E95  
                                                   l3765 1DEE  
                                                   l3909 1CFC  
                                                   l4493 1631  
                                                   l4485 1617  
                                                   l4477 15F6  
                                                   l4469 15D7  
                                                   l3781 135F  
                                                   l3773 134A  
                                                   l4581 1488  
                                                   l4573 1471  
                                                   l3917 1CD5  
                                                   l3845 1E25  
                                                   l3829 1DD1  
                                                   l3853 1D89  
                                                   l4653 1236  
                                                   l4901 0F47  
                                                   l4821 0E56  
                                                   l4813 0E39  
                                                   l4805 0E1A  
                                                   l4741 0C25  
                                                   l4733 0C1D  
                                                   l4725 0C0F  
                                                   l4717 0BF5  
                                                   l4639 0002  
                                                   l3871 1EDA  
                                                   l3863 1CA4  
                                                   l4559 11FD  
                                                   l3695 049E  
                                                   l3679 046A  
                                                   l3687 0485  
                                                   l3599 030B  
                                                   l3951 17A6  
                                                   l3943 1793  
                                                   l3935 1777  
                                                   l3919 173B  
                                                   l3767 1DF3  
                                                   l4495 163B  
                                                   l4487 161A  
                                                   l4479 15FB  
                                                   l3791 137F  
                                                   l3783 1364  
                                                   l3775 1358  
                                                   l4591 13FB  
                                                   l4583 148B  
                                                   l4575 1476  
                                                   l3847 1E2D  
                                                   l3839 1E17  
                                                   l3855 1D8F  
                                                   l4655 1242  
                                                   l4911 0F5F  
                                                   l4903 0F4F  
                                                   l4831 0E77  
                                                   l4823 0E61  
                                                   l4815 0E3D  
                                                   l4807 0E1D  
                                                   l4751 0C32  
                                                   l4743 0C29  
                                                   l4735 0C1F  
                                                   l4727 0C18  
                                                   l4719 0BF8  
                                                   l3881 1EE9  
                                                   l3873 1EDD  
                                                   l3865 1ED3  
                                                   l4569 1211  
                                                   l3697 04AA  
                                                   l3689 048B  
                                                   l3961 17E0  
                                                   l3953 17B8  
                                                   l3937 177E  
                                                   l4497 163E  
                                                   l4489 161F  
                                                   l3793 1391  
                                                   l3785 1369  
                                                   l3769 133F  
                                                   l4593 1409  
                                                   l4585 14B6  
                                                   l4577 147B  
                                                   l3849 1E2F  
                                                   l3857 1D95  
                                                   l4657 1249  
                                                   l4649 1219  
                                                   l4913 0F62  
                                                   l4905 0F57  
                                                   l4841 0E96  
                                                   l4833 0E82  
                                                   l4825 0E68  
                                                   l4817 0E4B  
                                                   l4809 0E2D  
                                                   l4761 0C9E  
                                                   l4753 0C45  
                                                   l4745 0C2D  
                                                   l4737 0C21  
                                                   l4729 0C1B  
                                                   l3891 1EF5  
                                                   l3883 1EEB  
                                                   l3875 1EE3  
                                                   l3867 1ED6  
                                                   l3699 04B3  
                                                   l3963 17E9  
                                                   l3955 17BE  
                                                   l3939 1783  
                                                   l4499 1641  
                                                   l3787 136E  
                                                   l4595 140E  
                                                   l4587 14BF  
                                                   l4579 1481  
                                                   l3859 1D99  
                                                   l4659 124E  
                                                   l4931 0FFA  
                                                   l4915 0F7B  
                                                   l4907 0F5A  
                                                   l4851 0ED0  
                                                   l4843 0E9E  
                                                   l4827 0E6C  
                                                   l4819 0E4E  
                                                   l4771 0D06  
                                                   l4923 0F8B  
                                                   l4755 0C47  
                                                   l4747 0C30  
                                                   l4739 0C23  
                                        ?_calculate_diff 0020  
                                                   l3893 1EF7  
                                                   l3885 1EED  
                                                   l3877 1EE5  
                                                   l3869 1ED8  
                                                   l3965 17F0  
                                                   l3957 17D0  
                                                   l3949 1796  
                                                   l3789 1372  
                                                   l4597 1413  
                                                   l4589 14C2  
                                                   l3797 1F5A  
                                                   l3981 0A98  
                                                   l4917 0F84  
                                                   l4909 0F5C  
                                                   l4861 0EE6  
                                                   l4853 0ED9  
                                                   l4845 0EA2  
                                                   l4837 0E8A  
                                                   l4829 0E6F  
                                                   l4781 0D65  
                                                   l4773 0D0D  
                                                   l4925 0FA6  
                                                   l4765 0CB4  
                                                   l4757 0C79  
                                                   l4749 0C31  
                                                   l3895 1EFA  
                                                   l3887 1EF0  
                                                   l3879 1EE7  
                                                   l3959 17DB  
                                                   l3967 17F5  
                                                   l3975 1F02  
                                                   l4599 1419  
                                                   l3799 1F63  
                                                   l3991 0AB6  
                                                   l3983 0A9D  
                                                   l4927 0FB9  
                                                   l4919 0F87  
                                                   l4871 0EFB  
                                                   l4863 0EEA  
                                                   l4855 0EDC  
                                                   l4847 0EAB  
                                                   l4839 0E93  
                                                   l4791 0D87  
                                                   l4783 0D68  
                                                   l4775 0D16  
                                                   l4767 0CC5  
                                                   l4759 0C89  
                                                   l3897 1C9B  
                                                   l3889 1EF3  
                                                   l3977 1F0B  
                                                   l3969 1EFD  
                                                   l3985 0AA2  
                                                   l3993 0ABD  
                                                   l4929 0FEA  
                                                   l4881 0F14  
                                                   l4873 0F04  
                                                   l4865 0EF3  
                                                   l4857 0EE2  
                                                   l4849 0EAE  
                                                   l4793 0DB8  
                                                   l4785 0D78  
                                                   l4769 0CF6  
                                                   l4777 0D19  
                                                   l3899 1C9E  
                                                   l3995 0AC7  
                                                   l3987 0AA7  
                                                   l3979 09DC  
                                                   l4891 0F30  
                                                   l4883 0F1C  
                                                   l4867 0EF5  
                                                   l4859 0EE4  
                                                   l4795 0DC8  
                                                   l4787 0D81  
                                                   l4779 0D4C  
                                                   l3997 0ACC  
                                                   l3989 0AAC  
                                                   l4893 0F32  
                                                   l4885 0F25  
                                                   l4877 0F08  
                                                   l4869 0EF8  
                                                   l4797 0DCB  
                                                   l4789 0D85  
                                                   l3999 0AD5  
                                                   l4895 0F36  
                                                   l4887 0F28  
                                                   l4879 0F11  
                                                   l4799 0DD4  
                                                   l4897 0F39  
                                                   l4889 0F2E  
                                                   l4899 0F3F  
                                                   STR_1 19A9  
                                                   STR_2 1A52  
                                                   STR_3 1A34  
                                                   STR_4 1986  
                                                   STR_5 1A5B  
                                                   STR_6 18F4  
                                                   STR_7 1A5B  
                                                   STR_8 1963  
                                                   STR_9 1800  
                                                   u3000 02AE  
                                                   u3001 02AD  
                                                   u3010 02C8  
                                                   u3011 02C7  
                                                   u3100 0354  
                                                   u3020 02CE  
                                                   u3101 0353  
                                                   u3021 02CD  
                                                   _LATA 0018  
                                                   u3110 035F  
                                                   u3030 02DB  
                                                   u3111 035E  
                                                   u3031 02DA  
                                                   _LATC 001A  
                                                   u3200 03FE  
                                                   u3120 037F  
                                                   u3040 02F6  
                                                   u4000 1568  
                                                   u3201 03FD  
                                                   u3121 037E  
                                                   u3105 0350  
                                                   u3041 02F5  
                                                   u3210 040B  
                                                   u3130 0396  
                                                   u3050 0301  
                                                   u4010 1594  
                                                   u3211 040A  
                                                   u3131 0395  
                                                   u3051 0300  
                                                   u4011 1592  
                                                   u3300 048B  
                                                   u3220 041F  
                                                   u3140 03A0  
                                                   u3060 030A  
                                                   u4100 0B20  
                                                   u4020 1595  
                                                   u3301 048A  
                                                   u3221 041E  
                                                   u3141 039F  
                                                   u3125 037B  
                                                   u3061 0309  
                                                   u3045 02F2  
                                                   u4101 0B1F  
                                                   u3310 048F  
                                                   u3230 042F  
                                                   u3150 03AC  
                                                   u3070 0325  
                                                   u4110 0B2F  
                                                   u4030 159C  
                                                   u3311 048E  
                                                   u3231 042E  
                                                   u3215 0407  
                                                   u3151 03AB  
                                                   u3135 0392  
                                                   u3071 0324  
                                                   u4111 0B2E  
                                                   u4031 159B  
                                                   u3400 058F  
                                                   u3320 049E  
                                                   u3240 043B  
                                                   u3160 03B4  
                                                   u3080 0330  
                                                   u4200 0BC8  
                                                   u4120 0B36  
                                                   u4040 15A1  
                                                   u3401 058E  
                                                   u3321 049D  
                                                   u3241 043A  
                                                   u3225 041B  
                                                   u3161 03B3  
                                                   u3081 032F  
                                                   u4201 0BC7  
                                                   u4121 0B35  
                                                   u4041 15A0  
                                                   u3410 059C  
                                                   u3330 04AA  
                                                   u3250 0444  
                                                   u3170 03C7  
                                                   u3090 0339  
                                                   u4210 0BD3  
                                                   u4130 0B3C  
                                                   u4050 15CA  
                                                   u3411 059B  
                                                   u3331 04A9  
                                                   u3251 0443  
                                                   u3171 03C6  
                                                   u3091 0338  
                                                   u3075 0321  
                                                   u4211 0BD2  
                                                   u4131 0B3B  
                                                   u4051 15C9  
                                                   u2620 1E8A  
                                                   u3420 05AB  
                                                   u3340 04B3  
                                                   u3260 0458  
                                                   u3180 03E4  
                                                   u4220 1DBC  
                                                   u3500 137F  
                                                   u4140 0B42  
                                                   u4060 15D3  
                                                   u2621 1E89  
                                                   u2605 1E7B  
                                                   u3421 05AA  
                                                   u3341 04B2  
                                                   u3261 0457  
                                                   u3181 03E3  
                                                   u3501 137E  
                                                   u4141 0B41  
                                                   u4061 15D2  
                                                   u2630 1DA2  
                                                   u2710 1FFB  
                                                   u2550 1CDE  
                                                   u3430 05BE  
                                                   u3350 04C7  
                                                   u3270 0461  
                                                   u3190 03EA  
                                                   u4310 1529  
                                                   u4230 14D3  
                                                   u3510 1391  
                                                   u4150 0B56  
                                                   u4070 0AF7  
                                                   u2631 1DA1  
                                                   u2711 1FFA  
                                                   u2615 1E80  
                                                   u2551 1CDD  
                                                   u3431 05BD  
                                                   u3415 0598  
                                                   u3351 04C6  
                                                   u3271 0460  
                                                   u3191 03E9  
                                                   u3175 03C3  
                                                   u4311 1528  
                                                   u4231 14D2  
                                                   u3511 1390  
                                                   u4151 0B55  
                                                   u4071 0AF5  
                                                   u3440 1D43  
                                                   u2640 1DAF  
                                                   u2720 1F95  
                                                   u3360 04DB  
                                                   u3280 0475  
                                                   u2800 00CB  
                                                   u4400 0618  
                                                   u4320 152E  
                                                   u4240 14E9  
                                                   u2560 1CEA  
                                                   u3520 1F67  
                                                   u3600 1DD7  
                                                   u4160 0B60  
                                                   u4080 0B07  
                                                   u3441 1D42  
                                                   u2641 1DAE  
                                                   u2705 1FF1  
                                                   u2721 1F94  
                                                   u3361 04DA  
                                                   u3281 0474  
                                                   u2801 00CA  
                                                   u4401 0617  
                                                   u4321 152D  
                                                   u4305 151C  
                                                   u2561 1CE9  
                                                   u3505 137B  
                                                   u3521 1F66  
                                                   u3601 1DD6  
                                                   u4161 0B5F  
                                                   u4081 0B06  
                                                   u3450 1D49  
                                                   u2650 1FCC  
                                                   u2570 1D56  
                                                   u3370 04E4  
                                                   u3290 0484  
                                                   u2810 00F7  
                                                   u4330 05C9  
                                                   u4250 14FC  
                                                   u3610 1DDD  
                                                   u4170 0B6C  
                                                   u4090 0B19  
                                                   u3451 1D48  
                                                   u2651 1FCB  
                                                   u2571 1D55  
                                                   u3371 04E3  
                                                   u3291 0483  
                                                   u2811 00F6  
                                                   u4331 05C8  
                                                   u4251 14FB  
                                                   u3515 138D  
                                                   u3611 1DDC  
                                                   u4171 0B6B  
                                                   u4091 0B18  
                                                   u5107 0D60  
                                                   u2740 1FA5  
                                                   u2580 1D5C  
                                                   u3380 053A  
                                                   u2900 01D9  
                                                   u2820 0107  
                                                   u3700 17B8  
                                                   u4500 0762  
                                                   u4340 05CF  
                                                   u4260 1503  
                                                   u3460 1DF9  
                                                   u3620 1E1F  
                                                   u4180 0B7E  
                                                   u2741 1FA4  
                                                   u2581 1D5B  
                                                   u3381 0539  
                                                   u2901 01D8  
                                                   u2821 0106  
                                                   u3701 17B7  
                                                   u4501 0761  
                                                   u4341 05CE  
                                                   u4261 1502  
                                                   u4245 14E5  
                                                   u3461 1DF8  
                                                   u3621 1E1E  
                                                   u4181 0B7D  
                                                   u5117 0D7C  
                                                   u2670 1FDC  
                                                   u2750 1FAF  
                                                   u2590 1E76  
                                                   u3390 058B  
                                                   u2910 01DE  
                                                   u2830 013A  
                                                   u3710 17E9  
                                                   u4510 0776  
                                                   u4430 070E  
                                                   u4350 05D4  
                                                   u3470 135F  
                                                   u3550 1F85  
                                                   u3630 1E25  
                                                   u4190 0B8C  
                                                   u2671 1FDB  
                                                   u2751 1FAE  
                                                   u2735 1F99  
                                                   u2591 1E75  
                                                   u3391 058A  
                                                   u2911 01DD  
                                                   u2831 0139  
                                                   u3711 17E8  
                                                   u4511 0775  
                                                   u4415 0691  
                                                   u4351 05D3  
                                                   u3471 135E  
                                                   u3551 1F84  
                                                   u3535 1F70  
                                                   u3631 1E24  
                                                   u4191 0B8B  
                                                   u5207 0F20  
                                                   u5127 0DCF  
                                                   u2920 01F1  
                                                   u2840 0146  
                                                   u3720 17FF  
                                                   u3560 1EBE  
                                                   u4520 077D  
                                                   u4440 0725  
                                                   u4360 05F1  
                                                   u4280 1513  
                                                   u4600 1EAE  
                                                   u3640 1E2D  
                                                   u3800 0A95  
                                                   u2665 1FD0  
                                                   u2921 01F0  
                                                   u2841 0145  
                                                   u3721 17FE  
                                                   u3561 1EBD  
                                                   u4521 077C  
                                                   u4425 06BC  
                                                   u4361 05F0  
                                                   u4281 1512  
                                                   u4601 1EAD  
                                                   u3545 1F77  
                                                   u3641 1E2C  
                                                   u3801 0A93  
                                                   u5217 0F7F  
                                                   u5137 0E31  
                                                   u2690 1FEB  
                                                   u2770 1FBE  
                                                   u2930 0204  
                                                   u2850 0160  
                                                   u4530 0783  
                                                   u4370 05F7  
                                                   u4290 151A  
                                                   u3730 1F28  
                                                   u3650 1D8F  
                                                   u3810 0A96  
                                                   u4610 168E  
                                                   u2691 1FEA  
                                                   u2771 1FBD  
                                                   u2755 1FAB  
                                                   u2931 0203  
                                                   u2851 015F  
                                                   u4531 0782  
                                                   u4435 070A  
                                                   u4371 05F6  
                                                   u4291 1519  
                                                   u4275 1505  
                                                   u3731 1F27  
                                                   u5227 14BA  
                                                   u3651 1D8E  
                                                   u4195 0B88  
                                                   u4611 168D  
                                                   u5147 0E8E  
                                                   u2940 020F  
                                                   u2860 016F  
                                                   u3580 1ECE  
                                                   u4540 078F  
                                                   u4380 05FC  
                                                   u4700 1629  
                                                   u2780 1D69  
                                                   u3660 1D95  
                                                   u3900 087D  
                                                   u3820 0A9D  
                                                   u3740 0A07  
                                                   u4620 1696  
                                                   _PMD0 0796  
                                                   u2685 1FDD  
                                                   u2765 1FB4  
                                                   u2941 020E  
                                                   u2925 01ED  
                                                   u2861 016E  
                                                   u3725 17FB  
                                                   u3581 1ECD  
                                                   u4541 078E  
                                                   u4445 0721  
                                                   u4381 05FB  
                                                   u4701 1628  
                                                   u3485 1360  
                                                   u5237 1452  
                                                   u2781 1D68  
                                                   u3661 1D94  
                                                   u3901 087B  
                                                   u3821 0A9C  
                                                   u3741 0A05  
                                                   u4621 1695  
                                                   u5157 0EA6  
                                                   _PMD1 0797  
                                                   u2950 0221  
                                                   u2870 017C  
                                                   u3670 175E  
                                                   u4550 079D  
                                                   u4470 074D  
                                                   u4390 0613  
                                                   u4710 165E  
                                                   u2790 1D6F  
                                                   u3590 1DD1  
                                                   u3910 087E  
                                                   u3830 0AA2  
                                                   u3750 0A08  
                                                   u4630 16C2  
                                                   _PMD2 0798  
                                                   u2695 1FE7  
                                                   u2951 0220  
                                                   u2935 0200  
                                                   u2871 017B  
                                                   u3671 175D  
                                                   u3575 1EC3  
                                                   u4471 074C  
                                                   u4455 0730  
                                                   u4391 0612  
                                                   u3735 1F24  
                                                   u5247 1F06  
                                                   u4711 165D  
                                                   u3495 136A  
                                                   u2791 1D6E  
                                                   u3591 1DD0  
                                                   u3831 0AA1  
                                                   u4631 16C1  
                                                   u5167 0ED4  
                                                   u5087 0C13  
                                                   _PMD3 0799  
                                                   u2960 023B  
                                                   u2880 01AA  
                                                   u3680 178C  
                                                   u4560 07B8  
                                                   u4800 091A  
                                                   u4720 1F4D  
                                                   u3920 08AF  
                                                   u3840 0AA7  
                                                   u3760 0A35  
                                                   u4640 16CA  
                                                   _PMD4 079A  
                                                   u2961 023A  
                                                   u2881 01A9  
                                                   u3681 178B  
                                                   u4561 07B7  
                                                   u4465 0743  
                                                   u5257 1F11  
                                                   u3921 08AD  
                                                   u3841 0AA6  
                                                   u3761 0A33  
                                                   u3745 0A02  
                                                   u4641 16C9  
                                                   u5177 0EEE  
                                                   u5097 0D11  
                                                   _PMD5 079B  
                                                   u4730 11EE  
                                                   u2970 023F  
                                                   u2890 01C3  
                                                   u3690 17A6  
                                                   u4570 07D0  
                                                   u4490 075D  
                                                   u4810 0966  
                                                   u3930 08B0  
                                                   u3850 0AAC  
                                                   u3770 0A36  
                                                   u4650 16FF  
                                                   _PMD6 079C  
                                                   u4731 11ED  
                                                   u2971 023E  
                                                   u2891 01C2  
                                                   u3691 17A5  
                                                   u3675 175A  
                                                   u4571 07CF  
                                                   u4555 0799  
                                                   u4491 075C  
                                                   u5267 1E61  
                                                   u3851 0AAB  
                                                   u4651 16FE  
                                                   u5187 0EFF  
                                                   _PMD7 079D  
                                                   u4740 11F3  
                                                   u2980 0251  
                                                   u4580 07EA  
                                                   u4820 0974  
                                                   u3940 08B7  
                                                   u3860 0AD5  
                                                   u3780 0A67  
                                                   u4660 1718  
                                                   u4900 0CF6  
                                                   u4741 11F2  
                                                   u2981 0250  
                                                   u4581 07E9  
                                                   u4565 07B4  
                                                   u4485 074F  
                                                   u4805 0916  
                                                   u5277 1F3A  
                                                   u3941 08B6  
                                                   u3861 0AD4  
                                                   u3781 0A65  
                                                   u4661 1717  
                                                   u5197 0F0C  
                                                   u4901 0CF5  
                                                   u4590 12FB  
                                                   u4750 1202  
                                                   u2990 029F  
                                                   u3950 08BC  
                                                   u3870 0ADE  
                                                   u3790 0A68  
                                                   u4670 1731  
                                                   u4910 0D4C  
                                                   u4591 12FA  
                                                   u4751 1201  
                                                   u2991 029E  
                                                   u3695 17A2  
                                                   u4575 07CC  
                                                   u4815 0962  
                                                   u5287 1D00  
                                                   u3951 08BB  
                                                   u3871 0ADD  
                                                   u4671 1730  
                                                   u4911 0D4B  
                                                   u4760 1207  
                                                   u4680 15E1  
                                                   u4840 1254  
                                                   u3960 08C1  
                                                   u3880 084F  
                                                   u4920 0DB8  
                                                   u4761 1206  
                                                   u4825 0970  
                                                   u4681 15E0  
                                                   u4841 1253  
                                                   u3961 08C0  
                                                   u3881 084D  
                                                   u4921 0DB7  
                                                   u4690 1605  
                                                   u4770 146D  
                                                   u3970 08EA  
                                                   u3890 0850  
                                                   u4930 0E0A  
                                                   u4595 12F7  
                                                   u4691 1604  
                                                   u3971 08E9  
                                                   u4931 0E09  
                                                   u4780 1405  
                                                   u3980 08F3  
                                                   u4940 0EE2  
                                                   u3981 08F2  
                                                   u3885 084A  
                                                   u4941 0EE1  
                                                   u4790 090C  
                                                   u3990 1567  
                                                   u4950 0F2E  
                                                   u3991 1565  
                                                   u4951 0F2D  
                                                   u4960 0FEA  
                                                   u4961 0FE9  
                                                   u4890 0C79  
                                                   u4795 0908  
                                                   u3995 1562  
                                                   u4891 0C78  
                                                   _WPUA 1F39  
                                                   _WPUC 1F4F  
                                          _EUSART1_Write 1CE3  
                                                   _main 0BEC  
                                                   mcp0b 0992  
                                                   mcp0z 09A1  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                              ??_reset_single_click_flag 0020  
                                                   start 0069  
                                        _update_mybutton 1677  
                                      ___bmul@multiplier 0023  
                                           ?_dump_buffer 0052  
                                           ?_measurement 0052  
                          __end_of_OSCILLATOR_Initialize 1CA4  
                                          ___fltol@sign1 004B  
                                                  ?_main 0070  
                                                  STR_10 191A  
                                                  STR_11 193F  
                                                  STR_20 1A34  
                                                  STR_12 1A70  
                                                  STR_21 1A34  
                                                  STR_13 1A76  
                                                  STR_14 1A7C  
                                                  STR_22 1A03  
                                                  STR_30 10F3  
                                                  STR_15 1A7D  
                                                  STR_23 1A10  
                                                  STR_31 1008  
                                                  STR_16 1A80  
                                                  STR_32 1A63  
                                                  STR_24 19E1  
                                                  STR_17 18B6  
                                                  STR_25 19F2  
                                                  STR_33 19BF  
                                                  STR_18 1A6A  
                                                  STR_34 19D0  
                                                  STR_26 18B9  
                                                  STR_27 1A49  
                                                  STR_28 1A29  
                                                  STR_29 1879  
                                        __end_of___flmul 07FA  
                                    ___is_double_click@b 002F  
                                        __end_of___fltol 153A  
                                           _crc16_modbus 133D  
                                        __end_of___lwdiv 2000  
                         ??_calculate_crc_and_fill_array 002F  
                                                  i1l319 1C9A  
                                                  i1l263 12E7  
                                                  i1l503 0067  
                                        __end_of___lwmod 1FC3  
                                                  i1l266 12E5  
                                                  i1l268 12C1  
                            send_measured_command@F10568 0240  
                                                  _OSCEN 0891  
                                                  u483m0 099B  
                                                  u483m1 09A1  
                                                  _TMR0H 059D  
                                                  _TMR0L 059C  
                                                  _TRISA 0012  
                                           ?_init_button 0070  
                                                  _TRISC 0014  
                                    ___lmul@multiplicand 0024  
                         save_top_adc_point@sensor_value 0052  
                                       ?_monitoring_sync 0052  
                                __end_of_dump_memory_map 1CC2  
                                  update_mybutton@signal 0031  
                                        __end_of_dpowers 1A49  
                                        __end_of_isalpha 1E32  
                                        __end_of_isdigit 1D60  
                                                  _ticks 0078  
                                                  _putch 1CD7  
                                     measured_adc@F10601 0165  
                        calculate_crc_and_fill_array@crc 0030  
                                        __end_of_isspace 1DE0  
                                         ?_EUSART1_Write 0070  
                                        __end_of_isprint 1D4D  
                                        __end_of_isupper 1D73  
                                   main@b2_clicked_count 00A0  
                           ___is_double_click@condition1 002C  
                                      monitoring_sync@b1 0054  
                           ___is_double_click@condition2 002D  
                                      monitoring_sync@b2 0055  
                           ___is_double_click@condition3 002E  
                                                  status 0003  
                                                  wtemp0 007E  
                                        __end_of_toupper 1D9B  
                                        __initialization 006B  
                                      ??_is_single_click 0020  
                                           __end_of_main 1000  
                           ___is_single_click@condition1 002C  
                           ___is_single_click@condition2 002D  
                           ___is_single_click@condition3 002E  
                           ___is_single_click@condition4 002F  
                                      ___is_single_click 09DA  
                                          ?_measured_adc 0070  
                            ?_INTERRUPT_InterruptManager 0070  
                                     ?___is_single_click 0020  
                                                 ??_main 006B  
                        __end_of_reset_single_click_flag 1C92  
                              i2c_slave_interrupt@isNack 0072  
                              i2c_slave_interrupt@isRead 0071  
                                         _i2c_slave_init 1E8F  
                                    ??___is_single_click 0024  
                                          dispatch@state 0026  
                              get_measured_value@payload 005E  
                        monitoring_sync@b2_clicked_count 0057  
                                                 _ANSELA 1F38  
                                                 ?_putch 0070  
                                                 _ANSELC 1F4E  
                                                 _T0CON0 059E  
                                                 _T0CON1 059F  
                                                 _RC1REG 0119  
                                                 _RC0PPS 1F20  
                                                 _RC1PPS 1F21  
                                                 _RA5PPS 1F15  
                                                 _RC1STA 011D  
                                                 _RC3PPS 1F23  
                                __end_of_update_mybutton 1739  
                                                 _RC5PPS 1F25  
                                                 _ODCONA 1F3A  
                                                 _ODCONC 1F50  
                                                 i1l4681 12BC  
                                                 i1l4673 12A6  
                                                 i1l4665 1295  
                                                 i1l4691 12D0  
                                                 i1l4675 12AB  
                                                 i1l4683 12BE  
                                                 i1l4667 129E  
                                                 i1l4693 12D7  
                                                 i1l4685 12C4  
                                                 i1l4677 12B2  
                                                 i1l4669 12A3  
                                                 i1l4687 12C7  
                                                 i1l4679 12B6  
                                                 i1l4689 12CA  
                                                 i1l4697 12D9  
                                                 i1l4699 1C92  
                                                 i1l4971 0014  
                                                 i1l4981 0040  
                                                 i1l4973 001A  
                                                 i1l4965 0006  
                                                 i1l4991 0058  
                                                 i1l4983 0041  
                                                 i1l4975 0036  
                                                 i1l4967 000B  
                                                 i1l4993 0060  
                                                 i1l4985 0044  
                                                 i1l4977 0038  
                                                 i1l4969 000C  
                                                 i1l4995 0064  
                                                 i1l4987 0049  
                                                 i1l4979 003B  
                                                 i1l4989 0055  
                                                 _INLVLA 1F3C  
                                                 _INLVLC 1F52  
                                                 u500_20 001A  
                                                 u500_21 0019  
                                                 u501_20 0036  
                                                 u501_21 0035  
                                                 u502_20 0040  
                                                 u502_21 003F  
                                                 u503_20 0049  
                                                 u503_21 0048  
                                    _i2c_slave_interrupt 1295  
                                                 _OSCFRQ 0893  
                                                 u485_20 12A3  
                                                 u485_21 12A2  
                                                 u486_20 12AB  
                                                 u486_21 12AA  
                                                 u487_20 12BC  
                                                 u487_21 12BB  
                                                 u488_20 12D0  
                                                 u488_21 12CF  
                                                 u499_20 000B  
                                                 u499_21 000A  
                                                 _TX1REG 011A  
                                                 _TX1STA 011E  
                                        _EUSART1_Write_1 1DE0  
                              __end_of___is_single_click 0AE2  
                                     _enable_uart_printf 1C67  
                                       __end_of_dispatch 1217  
                                                 ___bmul 1D9B  
                                                 ___lmul 1F5A  
                                                 ___wmul 1E6F  
                                              ??___flmul 0031  
                                              ??___fltol 0047  
                                         ??_measured_adc 0052  
                                              ??___lwdiv 0024  
                           dispatch@b2_clicked_count_ptr 0023  
                                              ??___lwmod 002C  
                                   ?_i2c_slave_interrupt 0070  
   set_device_serial_number_to_i2c_slave_memorymap@value 003D  
                                                 _printf 00C1  
                                    ?_enable_uart_printf 0070  
                                                 main@b1 00B8  
                                                 main@b2 00D3  
                                        _currentRegister 007C  
                                 __end_of_i2c_slave_init 1EAF  
                                                 _strtol 0AE2  
                       calculate_crc_and_fill_array@data 0032  
                                     _save_top_adc_point 1461  
                                         _PMD_Initialize 1CA4  
                                              ??_isalpha 0022  
                                              ??_isdigit 0020  
                                     main@prev_ticks_btn 0154  
                                              ??_isspace 0020  
                                              ??_isprint 0020  
                          __end_of_save_bottom_adc_point 1461  
                                              ??_isupper 0020  
                            i2c_slave_set_register@value 0020  
                                       ?_dump_memory_map 0070  
                                        ??_EUSART1_Write 0020  
                              ?_Disable_Global_Interrupt 0070  
                                    ?_save_top_adc_point 0052  
                                              ??_toupper 0020  
                                ?_get_measured_adc_value 0070  
                                  ___is_single_click@now 0020  
                                      _SYSTEM_Initialize 1CAE  
                                   ??_enable_uart_printf 0020  
                                __end_of__initialization 00BD  
                                ??_reset_long_press_flag 0020  
                                      ??___is_long_press 0024  
                                     ?_SYSTEM_Initialize 0070  
                                             ___fltol@f1 0043  
                                    ___bmul@multiplicand 0020  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK2 1D2A  
                                           __pidataBANK3 1D1A  
                                           __pidataBANK4 1255  
                                           __pidataBANK5 0802  
                                    ??_SYSTEM_Initialize 0020  
                                   ??_save_top_adc_point 0053  
                             __end_of_get_measured_value 09DA  
                                  ??_i2c_slave_interrupt 0070  
                                          __end_of_putch 1CE3  
                                 __end_of_PMD_Initialize 1CAE  
                                        ?_i2c_slave_init 0070  
                                       ??_calculate_diff 0028  
                         __end_of_get_measured_adc_value 1E15  
                              __end_of_SYSTEM_Initialize 1CB8  
                                                ??_putch 0020  
                                          _is_long_press 1C72  
                                __end_of_EUSART1_Write_1 1DFA  
                                     _enable_tx_transmit 1CFC  
                                             __pbssBANK0 006F  
                                             __pbssBANK1 00EE  
                                             __pbssBANK2 0120  
                                             __pbssBANK3 01A0  
                                             __pbssBANK5 02A0  
                                       ?_update_mybutton 0031  
                                         _rxbuffer_index 007D  
                                    ?_enable_tx_transmit 0070  
                 save_top_adc_point@save_top_adc_command 005B  
                                      __end_of__Umul8_16 1ED3  
                                             __pmaintext 0BEC  
                                                ?___bmul 0020  
                                _LED_flashes_three_times 1EFD  
                                                ?___lmul 0020  
                                                ?___wmul 0020  
                                             __pintentry 0004  
                                    _get_ticks_with_lock 1D73  
                                         ___lmul@product 0028  
                                                ?_printf 002E  
                                        ?_PMD_Initialize 0070  
                                  ___is_double_click@now 0020  
                                                ?_strtol 002C  
                                   ??_enable_tx_transmit 0020  
                                                _SP1BRGH 011C  
                                                _SP1BRGL 011B  
                                  _send_measured_command 1DB1  
                               ??_i2c_slave_set_register 0021  
                                                _OSCCON1 088D  
                                                _OSCCON3 088F  
                                           dump_buffer@i 005C  
                                           dump_buffer@j 005E  
                                           dump_buffer@p 005B  
                                                _OSCTUNE 0892  
                                                _SSP1ADD 018D  
                                                _SLRCONA 1F3B  
                                                _SLRCONC 1F51  
                                                _SSP1BUF 018C  
                                                _SSP1MSK 018E  
                                         ?_is_long_press 0070  
                                              ?_dispatch 0020  
                                   ?_get_ticks_with_lock 0020  
                                   __end_of_measured_adc 1F5A  
                                        _is_single_click 1C7A  
                       set_bottom_calibrate_point@F10597 02C0  
                               ?_Enable_Global_Interrupt 0070  
                                      __end_of_get_ticks 1C9B  
                                                ___flmul 05BF  
                                                ___fltol 14C9  
                                       update_mybutton@b 003A  
                                                ___lwdiv 1FC3  
                                                ___lwmod 1F8E  
                                                __ptext1 1D0A  
                                                __ptext2 1677  
                                                __ptext3 09DA  
                                                __ptext4 153A  
                                                __ptext5 0822  
                                                __ptext6 1CEF  
                                                __ptext7 1217  
                                                __ptext8 0AE2  
                                                __ptext9 1D87  
  set_device_serial_number_to_i2c_slave_memorymap@buffer 003E  
                                      __end_of_hexpowers 1008  
                               dispatch@b1_clicked_count 0024  
                                                _dpowers 1A3F  
                                  _OSCILLATOR_Initialize 1C9B  
                                                _isalpha 1E15  
                                                _isdigit 1D4D  
                  i2c_slave_set_register@registerAddress 0021  
                               ??_PIN_MANAGER_Initialize 0020  
                                                _isspace 1DC7  
                                                _isprint 1D3A  
                                                _isupper 1D60  
                                  ??_get_ticks_with_lock 0024  
                                                clrloop0 1C6D  
                                                main@now 00A2  
                                             ??_dispatch 0024  
                                                _toupper 1D87  
                               ?_reset_single_click_flag 0070  
                                   end_of_initialization 00BD  
                                      __end_of_octpowers 1A29  
                                           init_button@b 0020  
                                      __end_of_tmr0_init 1CFC  
       set_device_serial_number_to_i2c_slave_memorymap@i 0041  
                                       ?_EUSART1_Write_1 0021  
                                 get_measured_value@temp 0066  
                                                init_ram 07FA  
                                         main@prev_ticks 0150  
                                                initloop 07FB  
                               calculate_diff@prev_ticks 0024  
                   __end_of_calculate_crc_and_fill_array 1E50  
                           _calculate_crc_and_fill_array 1E32  
                              ??_LED_flashes_three_times 0020  
                                  main@rev_ticks_btn_399 0148  
                                                printf@c 004F  
                                                printf@f 002E  
                               LED_flashes_three_times@i 0021  
                       __end_of_Disable_Global_Interrupt 0802  
                                                strtol@a 0035  
                                                strtol@c 003A  
                                                strtol@s 0039  
                                        crc16_modbus@crc 002C  
                                              _PORTAbits 000C  
                                        crc16_modbus@len 0020  
                                 ?_send_measured_command 0070  
                                __end_of_is_single_click 1C82  
                                              _TRISAbits 0012  
                                        ??_is_long_press 0020  
                                        ___is_long_press 153A  
                                           strtol@endptr 002C  
                                    EUSART1_Write@txData 0020  
                                            ___flmul@grs 0037  
                                             dispatch@b1 0020  
                                             dispatch@b2 0021  
                        __end_of_Enable_Global_Interrupt 0004  
                                            printf@width 004D  
                                             _usart_init 1D0A  
                          __end_of_reset_long_press_flag 1C8A  
                         get_measured_value@payload_temp 0062  
                          ?_calculate_crc_and_fill_array 002E  
                                       ??_i2c_slave_init 0020  
                                         __end_of___bmul 1DB1  
                                         __end_of___lmul 1F8E  
                                         __end_of___wmul 1E8F  
                                 ?_OSCILLATOR_Initialize 0070  
                                         __end_of_printf 05BF  
                                    ___is_single_click@b 0030  
                                         __end_of_strtol 0BEC  
                                    start_initialization 006B  
                                     _get_measured_value 08F7  
                             send_measured_command@txbuf 0026  
                                  _save_bottom_adc_point 13F9  
                                  __end_of_EUSART1_Write 1CEF  
                                    ?_get_measured_value 0070  
           save_bottom_adc_point@save_bottom_adc_command 005B  
                  i2c_slave_set_register_with_lock@value 0022  
                            __end_of_i2c_slave_interrupt 12E8  
                                 _i2c_slave_set_register 1CC2  
                                               ??___bmul 0021  
                                       ??_PMD_Initialize 0020  
                                               ??___lmul 0028  
                                          ??_dump_buffer 0054  
                                      ??_monitoring_sync 0058  
                                               ??___wmul 0024  
                                          ??_measurement 0053  
                                              __Umul8_16 1EAF  
                                            __pdataBANK2 015D  
                                            __pdataBANK3 01E0  
                                            __pdataBANK4 0220  
                                            __pdataBANK5 02C0  
                                           _measured_adc 1F29  
                                   ??_get_measured_value 0052  
                                __end_of___is_long_press 15D7  
                                               ??_printf 003A  
                                          ?_crc16_modbus 0020  
                                          crc16_modbus@i 0028  
                                          crc16_modbus@j 002A  
                                               ??_strtol 0030  
                                          ??_init_button 0020  
                               _Disable_Global_Interrupt 0800  
                                              ___flmul@a 002D  
                                              ___flmul@b 0029  
                                            __pbssCOMMON 0078  
                                              ___latbits 0002  
                                          __pcstackBANK0 0020  
                                          __pcstackBANK1 00A0  
                                       ?_is_single_click 0070  
                                           _isalpha$1965 0022  
                   calculate_crc_and_fill_array@data_len 002E  
                                     update_mybutton@now 0032  
                                           _isdigit$1931 0020  
                         get_measured_value@sensor_value 006A  
                                           _currentState 00EE  
                                            ?_usart_init 0070  
                                       ___lwdiv@dividend 0022  
                                 _PIN_MANAGER_Initialize 1ED3  
                                               ?___flmul 0029  
                                               ?___fltol 0043  
                                             ?__Umul8_16 0020  
                                               ?___lwdiv 0020  
                      save_bottom_adc_point@sensor_value 0052  
                                               ?___lwmod 0028  
                                         ??_crc16_modbus 0022  
                           ??_INTERRUPT_InterruptManager 0074  
                                              _get_ticks 1C92  
                                       is_single_click@b 0020  
                                               _BAUD1CON 011F  
                                    __end_of_dump_buffer 1800  
                                    __end_of_measurement 1E6F  
                                               ?_isalpha 0070  
                                               ?_isdigit 0070  
                               dispatch@b2_clicked_count 0025  
                                 main@prev_ticks_monitor 014C  
                                               ?_isspace 0070  
                                               ?_isprint 0070  
                                               ?_isupper 0070  
                                 ?_save_bottom_adc_point 0052  
                                      dump_buffer@buffer 005A  
                                              _hexpowers 1000  
                                       ___lwdiv@quotient 0025  
                                               ?_toupper 0070  
                                    __end_of_init_button 13F9  
                                         ___wmul@product 0024  
                                               _LATCbits 001A  
                                              clear_ram0 1C6C  
                                              _octpowers 1A1D  
                                              _tmr0_init 1CEF  
                                         _uart_rx_states 006F  
                                               _PIE0bits 0716  
                                        i2c_slave_init@i 0021  
                                               _PIE3bits 0719  
                                               _PIR0bits 070C  
                                               _PIR3bits 070F  
                                              _slaveData 01A0  
                                               _RX1DTPPS 1ECB  
                            delay_state@prev_ticks_delay 0140  
                                               _SSP1CON1 0190  
                                               _SSP1CON2 0191  
                                      ??_dump_memory_map 0060  
                                               _SSP1STAT 018F  
                                ??_send_measured_command 0025  
                                             ?_get_ticks 0070  
                                       ?___is_long_press 0020  
                                      ___wmul@multiplier 0020  
                               ??_get_measured_adc_value 0020  
                                 reset_long_press_flag@b 0020  
                            __end_of_get_ticks_with_lock 1D87  
                                             printf@flag 0050  
                                             printf@prec 004C  
                                              main@state 00A6  
                                           _isspace$1968 0020  
                          set_top_calibrate_point@F10594 0220  
                                      ___is_double_click 0822  
                                      ___lmul@multiplier 0020  
                                     ?___is_double_click 0020  
                                         is_long_press@b 0020  
                                       main@sensor_value 00A7  
                               i2c_slave_interrupt@value 0073  
                                           _isprint$1934 0020  
                                             ?_tmr0_init 0070  
                                    ??___is_double_click 0024  
                                            _dump_buffer 1739  
                                   EUSART1_Read_1@F10504 02A0  
                                ??_OSCILLATOR_Initialize 0020  
                                            ??__Umul8_16 0022  
                                            _measurement 1E50  
                                      ??_update_mybutton 0036  
                                      _test_recived_data 015D  
                                             _ANSELAbits 1F38  
                                           _isupper$1971 0020  
                                            _init_button 1397  
                              __end_of___is_double_click 08F7  
                                        ___lwdiv@divisor 0020  
                                        ___lwdiv@counter 0027  
                                               __ptext10 1DC7  
                                               __ptext11 1E15  
                                               __ptext20 15D7  
                                               __ptext12 1D60  
                                               __ptext21 1C8A  
                                               __ptext13 1F5A  
                                               __ptext30 1CFC  
                                               __ptext22 1C82  
                                               __ptext14 1CCC  
                                               __ptext31 1DE0  
                                               __ptext23 1C7A  
                                               __ptext15 1CC2  
                                               __ptext40 1DFA  
                                               __ptext32 1CE3  
                                               __ptext24 1C72  
                                               __ptext16 1461  
                                               __ptext41 1CB8  
                                               __ptext33 1397  
                                               __ptext25 1EFD  
                                               __ptext17 13F9  
                                               __ptext50 1D3A  
                                               __ptext42 1739  
                                               __ptext34 1E8F  
                                               __ptext26 1E50  
                                               __ptext18 1E32  
                                               __ptext51 11DD  
                                               __ptext43 00C1  
                                               __ptext35 1D73  
                                               __ptext27 1DB1  
                                               __ptext19 133D  
                                               __ptext60 1295  
                                               __ptext52 12E8  
                                               __ptext44 1CD7  
                                               __ptext36 08F7  
                                               __ptext28 1F29  
                                               __ptext61 1C92  
                                               __ptext53 1CAE  
                                               __ptext45 1D4D  
                                               __ptext37 14C9  
                                               __ptext29 1C67  
                                               __ptext54 1CA4  
                                               __ptext46 1E6F  
                                               __ptext38 05BF  
                                               __ptext55 1ED3  
                                               __ptext47 1F8E  
                                               __ptext39 1EAF  
                                               __ptext56 1C9B  
                                               __ptext48 1FC3  
                                               __ptext57 0002  
                                               __ptext49 1D9B  
                                               __ptext58 0800  
                                           _SSP1CON1bits 0190  
                                           _SSP1CON2bits 0191  
                                  __end_of_is_long_press 1C7A  
                                               _dispatch 11DD  
                              get_ticks_with_lock@result 0024  
                                   main@b1_clicked_count 00A1  
                               ?_LED_flashes_three_times 0070  
                                        _monitoring_sync 15D7  
                                   __end_of_crc16_modbus 1397  
                               reset_single_click_flag@b 0020  
                                ?_i2c_slave_set_register 0020  
                             ___is_long_press@condition1 002C  
                             ___is_long_press@condition2 002D  
                                          _uart_rx_ticks 0158  
__end_of_set_device_serial_number_to_i2c_slave_memorymap 1255  
      ??_set_device_serial_number_to_i2c_slave_memorymap 003B  
       ?_set_device_serial_number_to_i2c_slave_memorymap 0070  
        _set_device_serial_number_to_i2c_slave_memorymap 1217  
                                  _uart_rx_package_event 00EF  
                     get_measured_adc_value@sensor_value 0020  
                                  _reset_long_press_flag 1C82  
                                               int$flags 007E  
                                             strtol@base 002D  
                             ??_Disable_Global_Interrupt 0020  
                           dispatch@b1_clicked_count_ptr 0022  
                                             strtol@sign 0034  
                     __end_of_INTERRUPT_InterruptManager 0069  
                             _INTERRUPT_InterruptManager 0004  
                                              printf@idx 0044  
                                              printf@len 0047  
                                               _rxbuffer 0120  
                                              printf@val 004A  
                                           _SSP1STATbits 018F  
                       measured_adc@measured_adc_command 0053  
                                            ??_get_ticks 0074  
        i2c_slave_set_register_with_lock@registerAddress 0023  
                               save_top_adc_point@F10610 01E8  
                                _Enable_Global_Interrupt 0002  
                                              putch@data 0020  
                                             _INTCONbits 000B  
                        monitoring_sync@b1_clicked_count 0056  
                                         __pstringtext10 193F  
                                         __pstringtext11 1963  
                                         __pstringtext20 1A29  
                                         __pstringtext12 1986  
                                         __pstringtext21 1A34  
                                         __pstringtext13 19A9  
                                         __pstringtext30 1A80  
                                         __pstringtext22 1A49  
                                         __pstringtext14 19BF  
                                         __pstringtext31 0000  
                                         __pstringtext23 1A52  
                                         __pstringtext15 19D0  
                                         __pstringtext24 1A5B  
                                         __pstringtext16 19E1  
                                         __pstringtext25 1A63  
                                         __pstringtext17 19F2  
                                         __pstringtext26 1A6A  
                                         __pstringtext18 1A03  
                                         __pstringtext27 1A70  
                                         __pstringtext19 1A10  
                                         __pstringtext28 1A76  
                                         __pstringtext29 1A7C  
                                               isalpha@c 0023  
                                        main@prev_ticks2 0144  
                                               isdigit@c 0021  
                             __end_of_enable_uart_printf 1C6C  
                                               intlevel1 0000  
                                        _dump_buffer$886 0058  
                         __end_of_i2c_slave_set_register 1CCC  
                                         _calculate_diff 12E8  
                                       ___lwmod@dividend 002A  
                                               isspace@c 0021  
                                ?_PIN_MANAGER_Initialize 0070  
                                               isprint@c 0021  
                                           ??_usart_init 0020  
                                            ??_tmr0_init 0020  
                                               isupper@c 0021  
                                        dump_buffer@size 0052  
                                       measurement@value 0052  
                                       measurement@state 0054  
                                _reset_single_click_flag 1C8A  
                             __end_of_save_top_adc_point 14C9  
                                       EUSART1_Write_1@i 0023  
                                               printf@ap 0049  
                                               printf@cp 0045  
                               save_top_adc_point@states 0063  
                                      ??_EUSART1_Write_1 0022  
                                          __pstringtext1 1A1D  
                                          __pstringtext2 1A3F  
                                          __pstringtext3 1000  
                                          __pstringtext4 10F3  
                                          __pstringtext5 1800  
                                          __pstringtext6 1879  
                                          __pstringtext7 18B9  
                                          __pstringtext8 18F4  
                                          __pstringtext9 191A  
               __end_of_i2c_slave_set_register_with_lock 1CD7  
                     ??_i2c_slave_set_register_with_lock 0023  
                      ?_i2c_slave_set_register_with_lock 0022  
                       _i2c_slave_set_register_with_lock 1CCC  
                                            _printf$1641 003E  
                                            _printf$1642 0040  
                                            _printf$1648 0042  
                                 __Umul8_16@multiplicand 0020  
                                   monitoring_sync@state 0052  
                                ??_save_bottom_adc_point 0053  
                                             _SSP1DATPPS 1EC6  
                                             _SSP1CLKPPS 1EC5  
                                        ___lwmod@divisor 0028  
                                        ___lwmod@counter 002D  
                                               toupper@c 0021  
                                     __end_of_usart_init 1D1A  
                                __end_of_monitoring_sync 1677  
                        __end_of_LED_flashes_three_times 1F29  
                                       crc16_modbus@data 0027  
                                       crc16_modbus@poly 0025  
                                 __end_of_calculate_diff 133D  
                            save_bottom_adc_point@F10616 01E0  
                         __end_of_PIN_MANAGER_Initialize 1EFD  
                                  EUSART1_Write_1@length 0021  
                                        _dump_memory_map 1CB8  
                                 _get_measured_adc_value 1DFA  
                                   __Umul8_16@multiplier 0028  
                                     calculate_diff@diff 0030  
                                   EUSART1_Write_1@txbuf 0024  
                                      calculate_diff@now 0020  
                                 ?_reset_long_press_flag 0070  
                                      __Umul8_16@product 0024  
                                      ___is_long_press@b 002E  
                                    ___is_long_press@now 0020  
