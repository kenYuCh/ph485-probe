

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Apr 22 00:15:24 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18425
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK5,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext29,global,class=STRCODE,delta=2,noexec
    36                           	psect	cinit,global,class=CODE,merge=1,delta=2
    37                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    38                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    39                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    40                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    41                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    42                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    43                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    44                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    45                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,noexec
    46                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    47                           	psect	inittext,global,class=CODE,delta=2
    48                           	psect	clrtext,global,class=CODE,delta=2
    49                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    50                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    51                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    52                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    53                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    54                           	psect	text1,local,class=CODE,merge=1,delta=2
    55                           	psect	text2,local,class=CODE,merge=1,delta=2
    56                           	psect	text3,local,class=CODE,merge=1,delta=2
    57                           	psect	text4,local,class=CODE,merge=1,delta=2
    58                           	psect	text5,local,class=CODE,merge=1,delta=2
    59                           	psect	text6,local,class=CODE,merge=1,delta=2
    60                           	psect	text7,local,class=CODE,merge=1,delta=2
    61                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text14,local,class=CODE,merge=1,delta=2
    68                           	psect	text15,local,class=CODE,merge=1,delta=2
    69                           	psect	text16,local,class=CODE,merge=1,delta=2
    70                           	psect	text17,local,class=CODE,merge=1,delta=2
    71                           	psect	text18,local,class=CODE,merge=1,delta=2
    72                           	psect	text19,local,class=CODE,merge=1,delta=2
    73                           	psect	text20,local,class=CODE,merge=1,delta=2
    74                           	psect	text21,local,class=CODE,merge=1,delta=2
    75                           	psect	text22,local,class=CODE,merge=1,delta=2
    76                           	psect	text23,local,class=CODE,merge=1,delta=2
    77                           	psect	text24,local,class=CODE,merge=1,delta=2
    78                           	psect	text25,local,class=CODE,merge=1,delta=2
    79                           	psect	text26,local,class=CODE,merge=1,delta=2
    80                           	psect	text27,local,class=CODE,merge=1,delta=2
    81                           	psect	text28,local,class=CODE,merge=1,delta=2
    82                           	psect	text29,local,class=CODE,merge=1,delta=2
    83                           	psect	text30,local,class=CODE,merge=1,delta=2
    84                           	psect	text31,local,class=CODE,merge=1,delta=2
    85                           	psect	text32,local,class=CODE,merge=1,delta=2
    86                           	psect	text33,local,class=CODE,merge=1,delta=2
    87                           	psect	text34,local,class=CODE,merge=1,delta=2
    88                           	psect	text35,local,class=CODE,merge=1,delta=2
    89                           	psect	text36,local,class=CODE,merge=1,delta=2
    90                           	psect	text37,local,class=CODE,merge=1,delta=2
    91                           	psect	text38,local,class=CODE,merge=1,delta=2
    92                           	psect	text39,local,class=CODE,merge=1,delta=2
    93                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    94                           	psect	text41,local,class=CODE,merge=1,delta=2
    95                           	psect	text42,local,class=CODE,merge=1,delta=2,group=3
    96                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
   100                           	psect	text47,local,class=CODE,merge=1,delta=2
   101                           	psect	text48,local,class=CODE,merge=1,delta=2
   102                           	psect	text49,local,class=CODE,merge=1,delta=2
   103                           	psect	text50,local,class=CODE,merge=1,delta=2
   104                           	psect	text51,local,class=CODE,merge=1,delta=2
   105                           	psect	text52,local,class=CODE,merge=1,delta=2
   106                           	psect	text53,local,class=CODE,merge=1,delta=2
   107                           	psect	text54,local,class=CODE,merge=1,delta=2
   108                           	psect	intentry,global,class=CODE,delta=2
   109                           	psect	text56,local,class=CODE,merge=1,delta=2
   110                           	psect	text57,local,class=CODE,merge=1,delta=2
   111                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   112                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   113                           	dabs	1,0x7E,2
   114     0000                     
   115                           ; Version 2.40
   116                           ; Generated 04/07/2022 GMT
   117                           ; 
   118                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution. Publication is not required when
   132                           ;        this file is used in an embedded application.
   133                           ; 
   134                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   135                           ;        software without specific prior written permission.
   136                           ; 
   137                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   138                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   139                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   140                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   141                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   142                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   143                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   144                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   145                           ; 
   146                           ; 
   147                           ; Code-generator required, PIC16F18425 Definitions
   148                           ; 
   149                           ; SFR Addresses
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000E                     	;# 
   164     0012                     	;# 
   165     0014                     	;# 
   166     0018                     	;# 
   167     001A                     	;# 
   168     008C                     	;# 
   169     008C                     	;# 
   170     008D                     	;# 
   171     008E                     	;# 
   172     008E                     	;# 
   173     008F                     	;# 
   174     0090                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009B                     	;# 
   191     009C                     	;# 
   192     009D                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     010C                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     010F                     	;# 
   202     0110                     	;# 
   203     0111                     	;# 
   204     0112                     	;# 
   205     0113                     	;# 
   206     0114                     	;# 
   207     0115                     	;# 
   208     0116                     	;# 
   209     0117                     	;# 
   210     0118                     	;# 
   211     0119                     	;# 
   212     0119                     	;# 
   213     0119                     	;# 
   214     011A                     	;# 
   215     011A                     	;# 
   216     011A                     	;# 
   217     011B                     	;# 
   218     011B                     	;# 
   219     011B                     	;# 
   220     011B                     	;# 
   221     011B                     	;# 
   222     011C                     	;# 
   223     011C                     	;# 
   224     011C                     	;# 
   225     011D                     	;# 
   226     011D                     	;# 
   227     011D                     	;# 
   228     011E                     	;# 
   229     011E                     	;# 
   230     011E                     	;# 
   231     011F                     	;# 
   232     011F                     	;# 
   233     011F                     	;# 
   234     011F                     	;# 
   235     011F                     	;# 
   236     018C                     	;# 
   237     018D                     	;# 
   238     018E                     	;# 
   239     018F                     	;# 
   240     0190                     	;# 
   241     0191                     	;# 
   242     0192                     	;# 
   243     0196                     	;# 
   244     0197                     	;# 
   245     0198                     	;# 
   246     0199                     	;# 
   247     019A                     	;# 
   248     019B                     	;# 
   249     019C                     	;# 
   250     020C                     	;# 
   251     020D                     	;# 
   252     020E                     	;# 
   253     020E                     	;# 
   254     020F                     	;# 
   255     020F                     	;# 
   256     0210                     	;# 
   257     0210                     	;# 
   258     0211                     	;# 
   259     0211                     	;# 
   260     0212                     	;# 
   261     0213                     	;# 
   262     0214                     	;# 
   263     0214                     	;# 
   264     0215                     	;# 
   265     0215                     	;# 
   266     0216                     	;# 
   267     0216                     	;# 
   268     0217                     	;# 
   269     0217                     	;# 
   270     0218                     	;# 
   271     0219                     	;# 
   272     021A                     	;# 
   273     021A                     	;# 
   274     021B                     	;# 
   275     021B                     	;# 
   276     021C                     	;# 
   277     021C                     	;# 
   278     021D                     	;# 
   279     021D                     	;# 
   280     021E                     	;# 
   281     021F                     	;# 
   282     028C                     	;# 
   283     028C                     	;# 
   284     028D                     	;# 
   285     028D                     	;# 
   286     028E                     	;# 
   287     028F                     	;# 
   288     0290                     	;# 
   289     0291                     	;# 
   290     0292                     	;# 
   291     0292                     	;# 
   292     0293                     	;# 
   293     0293                     	;# 
   294     0294                     	;# 
   295     0295                     	;# 
   296     0296                     	;# 
   297     0297                     	;# 
   298     0298                     	;# 
   299     0298                     	;# 
   300     0299                     	;# 
   301     0299                     	;# 
   302     029A                     	;# 
   303     029B                     	;# 
   304     029C                     	;# 
   305     029D                     	;# 
   306     029F                     	;# 
   307     030C                     	;# 
   308     030C                     	;# 
   309     030D                     	;# 
   310     030E                     	;# 
   311     030F                     	;# 
   312     0310                     	;# 
   313     0310                     	;# 
   314     0311                     	;# 
   315     0312                     	;# 
   316     0313                     	;# 
   317     0314                     	;# 
   318     0314                     	;# 
   319     0315                     	;# 
   320     0316                     	;# 
   321     0317                     	;# 
   322     0318                     	;# 
   323     0318                     	;# 
   324     0319                     	;# 
   325     031A                     	;# 
   326     031B                     	;# 
   327     038C                     	;# 
   328     038C                     	;# 
   329     038D                     	;# 
   330     038E                     	;# 
   331     0390                     	;# 
   332     0390                     	;# 
   333     0391                     	;# 
   334     0392                     	;# 
   335     048C                     	;# 
   336     048C                     	;# 
   337     048D                     	;# 
   338     048E                     	;# 
   339     048F                     	;# 
   340     048F                     	;# 
   341     0490                     	;# 
   342     0491                     	;# 
   343     0492                     	;# 
   344     0492                     	;# 
   345     0493                     	;# 
   346     0494                     	;# 
   347     0495                     	;# 
   348     0495                     	;# 
   349     0496                     	;# 
   350     0497                     	;# 
   351     0498                     	;# 
   352     0499                     	;# 
   353     049A                     	;# 
   354     049B                     	;# 
   355     049C                     	;# 
   356     049D                     	;# 
   357     058C                     	;# 
   358     058C                     	;# 
   359     058D                     	;# 
   360     058E                     	;# 
   361     058F                     	;# 
   362     058F                     	;# 
   363     0590                     	;# 
   364     0591                     	;# 
   365     0592                     	;# 
   366     0593                     	;# 
   367     059C                     	;# 
   368     059C                     	;# 
   369     059D                     	;# 
   370     059D                     	;# 
   371     059E                     	;# 
   372     059F                     	;# 
   373     060C                     	;# 
   374     060C                     	;# 
   375     060D                     	;# 
   376     060D                     	;# 
   377     060E                     	;# 
   378     060F                     	;# 
   379     0610                     	;# 
   380     0611                     	;# 
   381     0612                     	;# 
   382     0613                     	;# 
   383     0614                     	;# 
   384     0616                     	;# 
   385     0616                     	;# 
   386     0617                     	;# 
   387     0617                     	;# 
   388     0618                     	;# 
   389     0619                     	;# 
   390     061A                     	;# 
   391     061B                     	;# 
   392     061C                     	;# 
   393     061D                     	;# 
   394     061E                     	;# 
   395     070C                     	;# 
   396     070D                     	;# 
   397     070E                     	;# 
   398     070F                     	;# 
   399     0710                     	;# 
   400     0711                     	;# 
   401     0712                     	;# 
   402     0713                     	;# 
   403     0714                     	;# 
   404     0716                     	;# 
   405     0717                     	;# 
   406     0718                     	;# 
   407     0719                     	;# 
   408     071A                     	;# 
   409     071B                     	;# 
   410     071C                     	;# 
   411     071D                     	;# 
   412     071E                     	;# 
   413     0796                     	;# 
   414     0797                     	;# 
   415     0798                     	;# 
   416     0799                     	;# 
   417     079A                     	;# 
   418     079B                     	;# 
   419     079C                     	;# 
   420     079D                     	;# 
   421     080C                     	;# 
   422     080D                     	;# 
   423     080E                     	;# 
   424     080F                     	;# 
   425     0810                     	;# 
   426     0811                     	;# 
   427     0812                     	;# 
   428     0813                     	;# 
   429     0814                     	;# 
   430     081A                     	;# 
   431     081A                     	;# 
   432     081B                     	;# 
   433     081C                     	;# 
   434     081C                     	;# 
   435     081D                     	;# 
   436     081E                     	;# 
   437     081F                     	;# 
   438     088C                     	;# 
   439     088D                     	;# 
   440     088E                     	;# 
   441     088F                     	;# 
   442     0890                     	;# 
   443     0891                     	;# 
   444     0892                     	;# 
   445     0893                     	;# 
   446     0895                     	;# 
   447     0896                     	;# 
   448     0897                     	;# 
   449     0898                     	;# 
   450     0899                     	;# 
   451     089A                     	;# 
   452     089B                     	;# 
   453     090C                     	;# 
   454     090E                     	;# 
   455     090F                     	;# 
   456     091F                     	;# 
   457     098F                     	;# 
   458     098F                     	;# 
   459     0990                     	;# 
   460     0991                     	;# 
   461     0992                     	;# 
   462     0993                     	;# 
   463     0994                     	;# 
   464     0995                     	;# 
   465     0996                     	;# 
   466     0997                     	;# 
   467     1E0F                     	;# 
   468     1E10                     	;# 
   469     1E11                     	;# 
   470     1E12                     	;# 
   471     1E13                     	;# 
   472     1E14                     	;# 
   473     1E15                     	;# 
   474     1E16                     	;# 
   475     1E17                     	;# 
   476     1E18                     	;# 
   477     1E19                     	;# 
   478     1E1A                     	;# 
   479     1E1B                     	;# 
   480     1E1C                     	;# 
   481     1E1D                     	;# 
   482     1E1E                     	;# 
   483     1E1F                     	;# 
   484     1E20                     	;# 
   485     1E21                     	;# 
   486     1E22                     	;# 
   487     1E23                     	;# 
   488     1E24                     	;# 
   489     1E25                     	;# 
   490     1E26                     	;# 
   491     1E27                     	;# 
   492     1E28                     	;# 
   493     1E29                     	;# 
   494     1E2A                     	;# 
   495     1E2B                     	;# 
   496     1E2C                     	;# 
   497     1E2D                     	;# 
   498     1E2E                     	;# 
   499     1E2F                     	;# 
   500     1E30                     	;# 
   501     1E31                     	;# 
   502     1E32                     	;# 
   503     1E33                     	;# 
   504     1E34                     	;# 
   505     1E35                     	;# 
   506     1E36                     	;# 
   507     1E37                     	;# 
   508     1E8F                     	;# 
   509     1E90                     	;# 
   510     1E91                     	;# 
   511     1E92                     	;# 
   512     1E93                     	;# 
   513     1E94                     	;# 
   514     1E95                     	;# 
   515     1E96                     	;# 
   516     1E97                     	;# 
   517     1E9C                     	;# 
   518     1E9D                     	;# 
   519     1E9E                     	;# 
   520     1EA1                     	;# 
   521     1EA2                     	;# 
   522     1EA3                     	;# 
   523     1EA4                     	;# 
   524     1EA9                     	;# 
   525     1EAA                     	;# 
   526     1EB1                     	;# 
   527     1EB2                     	;# 
   528     1EB8                     	;# 
   529     1EB9                     	;# 
   530     1EBA                     	;# 
   531     1EBB                     	;# 
   532     1EBC                     	;# 
   533     1EBD                     	;# 
   534     1EBE                     	;# 
   535     1EC3                     	;# 
   536     1EC5                     	;# 
   537     1EC6                     	;# 
   538     1EC7                     	;# 
   539     1EC8                     	;# 
   540     1EC9                     	;# 
   541     1ECA                     	;# 
   542     1ECB                     	;# 
   543     1ECC                     	;# 
   544     1F10                     	;# 
   545     1F11                     	;# 
   546     1F12                     	;# 
   547     1F14                     	;# 
   548     1F15                     	;# 
   549     1F20                     	;# 
   550     1F21                     	;# 
   551     1F22                     	;# 
   552     1F23                     	;# 
   553     1F24                     	;# 
   554     1F25                     	;# 
   555     1F38                     	;# 
   556     1F39                     	;# 
   557     1F3A                     	;# 
   558     1F3B                     	;# 
   559     1F3C                     	;# 
   560     1F3D                     	;# 
   561     1F3E                     	;# 
   562     1F3F                     	;# 
   563     1F4E                     	;# 
   564     1F4F                     	;# 
   565     1F50                     	;# 
   566     1F51                     	;# 
   567     1F52                     	;# 
   568     1F53                     	;# 
   569     1F54                     	;# 
   570     1F55                     	;# 
   571     1FE4                     	;# 
   572     1FE5                     	;# 
   573     1FE6                     	;# 
   574     1FE7                     	;# 
   575     1FE8                     	;# 
   576     1FE8                     	;# 
   577     1FE9                     	;# 
   578     1FEA                     	;# 
   579     1FEB                     	;# 
   580     1FED                     	;# 
   581     1FEE                     	;# 
   582     1FEF                     	;# 
   583     0000                     	;# 
   584     0001                     	;# 
   585     0002                     	;# 
   586     0003                     	;# 
   587     0004                     	;# 
   588     0005                     	;# 
   589     0006                     	;# 
   590     0007                     	;# 
   591     0008                     	;# 
   592     0009                     	;# 
   593     000A                     	;# 
   594     000B                     	;# 
   595     000C                     	;# 
   596     000E                     	;# 
   597     0012                     	;# 
   598     0014                     	;# 
   599     0018                     	;# 
   600     001A                     	;# 
   601     008C                     	;# 
   602     008C                     	;# 
   603     008D                     	;# 
   604     008E                     	;# 
   605     008E                     	;# 
   606     008F                     	;# 
   607     0090                     	;# 
   608     0090                     	;# 
   609     0091                     	;# 
   610     0092                     	;# 
   611     0092                     	;# 
   612     0093                     	;# 
   613     0094                     	;# 
   614     0094                     	;# 
   615     0095                     	;# 
   616     0096                     	;# 
   617     0096                     	;# 
   618     0097                     	;# 
   619     0098                     	;# 
   620     0099                     	;# 
   621     009A                     	;# 
   622     009B                     	;# 
   623     009B                     	;# 
   624     009C                     	;# 
   625     009D                     	;# 
   626     009D                     	;# 
   627     009E                     	;# 
   628     009F                     	;# 
   629     010C                     	;# 
   630     010C                     	;# 
   631     010D                     	;# 
   632     010E                     	;# 
   633     010F                     	;# 
   634     010F                     	;# 
   635     0110                     	;# 
   636     0111                     	;# 
   637     0112                     	;# 
   638     0113                     	;# 
   639     0114                     	;# 
   640     0115                     	;# 
   641     0116                     	;# 
   642     0117                     	;# 
   643     0118                     	;# 
   644     0119                     	;# 
   645     0119                     	;# 
   646     0119                     	;# 
   647     011A                     	;# 
   648     011A                     	;# 
   649     011A                     	;# 
   650     011B                     	;# 
   651     011B                     	;# 
   652     011B                     	;# 
   653     011B                     	;# 
   654     011B                     	;# 
   655     011C                     	;# 
   656     011C                     	;# 
   657     011C                     	;# 
   658     011D                     	;# 
   659     011D                     	;# 
   660     011D                     	;# 
   661     011E                     	;# 
   662     011E                     	;# 
   663     011E                     	;# 
   664     011F                     	;# 
   665     011F                     	;# 
   666     011F                     	;# 
   667     011F                     	;# 
   668     011F                     	;# 
   669     018C                     	;# 
   670     018D                     	;# 
   671     018E                     	;# 
   672     018F                     	;# 
   673     0190                     	;# 
   674     0191                     	;# 
   675     0192                     	;# 
   676     0196                     	;# 
   677     0197                     	;# 
   678     0198                     	;# 
   679     0199                     	;# 
   680     019A                     	;# 
   681     019B                     	;# 
   682     019C                     	;# 
   683     020C                     	;# 
   684     020D                     	;# 
   685     020E                     	;# 
   686     020E                     	;# 
   687     020F                     	;# 
   688     020F                     	;# 
   689     0210                     	;# 
   690     0210                     	;# 
   691     0211                     	;# 
   692     0211                     	;# 
   693     0212                     	;# 
   694     0213                     	;# 
   695     0214                     	;# 
   696     0214                     	;# 
   697     0215                     	;# 
   698     0215                     	;# 
   699     0216                     	;# 
   700     0216                     	;# 
   701     0217                     	;# 
   702     0217                     	;# 
   703     0218                     	;# 
   704     0219                     	;# 
   705     021A                     	;# 
   706     021A                     	;# 
   707     021B                     	;# 
   708     021B                     	;# 
   709     021C                     	;# 
   710     021C                     	;# 
   711     021D                     	;# 
   712     021D                     	;# 
   713     021E                     	;# 
   714     021F                     	;# 
   715     028C                     	;# 
   716     028C                     	;# 
   717     028D                     	;# 
   718     028D                     	;# 
   719     028E                     	;# 
   720     028F                     	;# 
   721     0290                     	;# 
   722     0291                     	;# 
   723     0292                     	;# 
   724     0292                     	;# 
   725     0293                     	;# 
   726     0293                     	;# 
   727     0294                     	;# 
   728     0295                     	;# 
   729     0296                     	;# 
   730     0297                     	;# 
   731     0298                     	;# 
   732     0298                     	;# 
   733     0299                     	;# 
   734     0299                     	;# 
   735     029A                     	;# 
   736     029B                     	;# 
   737     029C                     	;# 
   738     029D                     	;# 
   739     029F                     	;# 
   740     030C                     	;# 
   741     030C                     	;# 
   742     030D                     	;# 
   743     030E                     	;# 
   744     030F                     	;# 
   745     0310                     	;# 
   746     0310                     	;# 
   747     0311                     	;# 
   748     0312                     	;# 
   749     0313                     	;# 
   750     0314                     	;# 
   751     0314                     	;# 
   752     0315                     	;# 
   753     0316                     	;# 
   754     0317                     	;# 
   755     0318                     	;# 
   756     0318                     	;# 
   757     0319                     	;# 
   758     031A                     	;# 
   759     031B                     	;# 
   760     038C                     	;# 
   761     038C                     	;# 
   762     038D                     	;# 
   763     038E                     	;# 
   764     0390                     	;# 
   765     0390                     	;# 
   766     0391                     	;# 
   767     0392                     	;# 
   768     048C                     	;# 
   769     048C                     	;# 
   770     048D                     	;# 
   771     048E                     	;# 
   772     048F                     	;# 
   773     048F                     	;# 
   774     0490                     	;# 
   775     0491                     	;# 
   776     0492                     	;# 
   777     0492                     	;# 
   778     0493                     	;# 
   779     0494                     	;# 
   780     0495                     	;# 
   781     0495                     	;# 
   782     0496                     	;# 
   783     0497                     	;# 
   784     0498                     	;# 
   785     0499                     	;# 
   786     049A                     	;# 
   787     049B                     	;# 
   788     049C                     	;# 
   789     049D                     	;# 
   790     058C                     	;# 
   791     058C                     	;# 
   792     058D                     	;# 
   793     058E                     	;# 
   794     058F                     	;# 
   795     058F                     	;# 
   796     0590                     	;# 
   797     0591                     	;# 
   798     0592                     	;# 
   799     0593                     	;# 
   800     059C                     	;# 
   801     059C                     	;# 
   802     059D                     	;# 
   803     059D                     	;# 
   804     059E                     	;# 
   805     059F                     	;# 
   806     060C                     	;# 
   807     060C                     	;# 
   808     060D                     	;# 
   809     060D                     	;# 
   810     060E                     	;# 
   811     060F                     	;# 
   812     0610                     	;# 
   813     0611                     	;# 
   814     0612                     	;# 
   815     0613                     	;# 
   816     0614                     	;# 
   817     0616                     	;# 
   818     0616                     	;# 
   819     0617                     	;# 
   820     0617                     	;# 
   821     0618                     	;# 
   822     0619                     	;# 
   823     061A                     	;# 
   824     061B                     	;# 
   825     061C                     	;# 
   826     061D                     	;# 
   827     061E                     	;# 
   828     070C                     	;# 
   829     070D                     	;# 
   830     070E                     	;# 
   831     070F                     	;# 
   832     0710                     	;# 
   833     0711                     	;# 
   834     0712                     	;# 
   835     0713                     	;# 
   836     0714                     	;# 
   837     0716                     	;# 
   838     0717                     	;# 
   839     0718                     	;# 
   840     0719                     	;# 
   841     071A                     	;# 
   842     071B                     	;# 
   843     071C                     	;# 
   844     071D                     	;# 
   845     071E                     	;# 
   846     0796                     	;# 
   847     0797                     	;# 
   848     0798                     	;# 
   849     0799                     	;# 
   850     079A                     	;# 
   851     079B                     	;# 
   852     079C                     	;# 
   853     079D                     	;# 
   854     080C                     	;# 
   855     080D                     	;# 
   856     080E                     	;# 
   857     080F                     	;# 
   858     0810                     	;# 
   859     0811                     	;# 
   860     0812                     	;# 
   861     0813                     	;# 
   862     0814                     	;# 
   863     081A                     	;# 
   864     081A                     	;# 
   865     081B                     	;# 
   866     081C                     	;# 
   867     081C                     	;# 
   868     081D                     	;# 
   869     081E                     	;# 
   870     081F                     	;# 
   871     088C                     	;# 
   872     088D                     	;# 
   873     088E                     	;# 
   874     088F                     	;# 
   875     0890                     	;# 
   876     0891                     	;# 
   877     0892                     	;# 
   878     0893                     	;# 
   879     0895                     	;# 
   880     0896                     	;# 
   881     0897                     	;# 
   882     0898                     	;# 
   883     0899                     	;# 
   884     089A                     	;# 
   885     089B                     	;# 
   886     090C                     	;# 
   887     090E                     	;# 
   888     090F                     	;# 
   889     091F                     	;# 
   890     098F                     	;# 
   891     098F                     	;# 
   892     0990                     	;# 
   893     0991                     	;# 
   894     0992                     	;# 
   895     0993                     	;# 
   896     0994                     	;# 
   897     0995                     	;# 
   898     0996                     	;# 
   899     0997                     	;# 
   900     1E0F                     	;# 
   901     1E10                     	;# 
   902     1E11                     	;# 
   903     1E12                     	;# 
   904     1E13                     	;# 
   905     1E14                     	;# 
   906     1E15                     	;# 
   907     1E16                     	;# 
   908     1E17                     	;# 
   909     1E18                     	;# 
   910     1E19                     	;# 
   911     1E1A                     	;# 
   912     1E1B                     	;# 
   913     1E1C                     	;# 
   914     1E1D                     	;# 
   915     1E1E                     	;# 
   916     1E1F                     	;# 
   917     1E20                     	;# 
   918     1E21                     	;# 
   919     1E22                     	;# 
   920     1E23                     	;# 
   921     1E24                     	;# 
   922     1E25                     	;# 
   923     1E26                     	;# 
   924     1E27                     	;# 
   925     1E28                     	;# 
   926     1E29                     	;# 
   927     1E2A                     	;# 
   928     1E2B                     	;# 
   929     1E2C                     	;# 
   930     1E2D                     	;# 
   931     1E2E                     	;# 
   932     1E2F                     	;# 
   933     1E30                     	;# 
   934     1E31                     	;# 
   935     1E32                     	;# 
   936     1E33                     	;# 
   937     1E34                     	;# 
   938     1E35                     	;# 
   939     1E36                     	;# 
   940     1E37                     	;# 
   941     1E8F                     	;# 
   942     1E90                     	;# 
   943     1E91                     	;# 
   944     1E92                     	;# 
   945     1E93                     	;# 
   946     1E94                     	;# 
   947     1E95                     	;# 
   948     1E96                     	;# 
   949     1E97                     	;# 
   950     1E9C                     	;# 
   951     1E9D                     	;# 
   952     1E9E                     	;# 
   953     1EA1                     	;# 
   954     1EA2                     	;# 
   955     1EA3                     	;# 
   956     1EA4                     	;# 
   957     1EA9                     	;# 
   958     1EAA                     	;# 
   959     1EB1                     	;# 
   960     1EB2                     	;# 
   961     1EB8                     	;# 
   962     1EB9                     	;# 
   963     1EBA                     	;# 
   964     1EBB                     	;# 
   965     1EBC                     	;# 
   966     1EBD                     	;# 
   967     1EBE                     	;# 
   968     1EC3                     	;# 
   969     1EC5                     	;# 
   970     1EC6                     	;# 
   971     1EC7                     	;# 
   972     1EC8                     	;# 
   973     1EC9                     	;# 
   974     1ECA                     	;# 
   975     1ECB                     	;# 
   976     1ECC                     	;# 
   977     1F10                     	;# 
   978     1F11                     	;# 
   979     1F12                     	;# 
   980     1F14                     	;# 
   981     1F15                     	;# 
   982     1F20                     	;# 
   983     1F21                     	;# 
   984     1F22                     	;# 
   985     1F23                     	;# 
   986     1F24                     	;# 
   987     1F25                     	;# 
   988     1F38                     	;# 
   989     1F39                     	;# 
   990     1F3A                     	;# 
   991     1F3B                     	;# 
   992     1F3C                     	;# 
   993     1F3D                     	;# 
   994     1F3E                     	;# 
   995     1F3F                     	;# 
   996     1F4E                     	;# 
   997     1F4F                     	;# 
   998     1F50                     	;# 
   999     1F51                     	;# 
  1000     1F52                     	;# 
  1001     1F53                     	;# 
  1002     1F54                     	;# 
  1003     1F55                     	;# 
  1004     1FE4                     	;# 
  1005     1FE5                     	;# 
  1006     1FE6                     	;# 
  1007     1FE7                     	;# 
  1008     1FE8                     	;# 
  1009     1FE8                     	;# 
  1010     1FE9                     	;# 
  1011     1FEA                     	;# 
  1012     1FEB                     	;# 
  1013     1FED                     	;# 
  1014     1FEE                     	;# 
  1015     1FEF                     	;# 
  1016     0000                     	;# 
  1017     0001                     	;# 
  1018     0002                     	;# 
  1019     0003                     	;# 
  1020     0004                     	;# 
  1021     0005                     	;# 
  1022     0006                     	;# 
  1023     0007                     	;# 
  1024     0008                     	;# 
  1025     0009                     	;# 
  1026     000A                     	;# 
  1027     000B                     	;# 
  1028     000C                     	;# 
  1029     000E                     	;# 
  1030     0012                     	;# 
  1031     0014                     	;# 
  1032     0018                     	;# 
  1033     001A                     	;# 
  1034     008C                     	;# 
  1035     008C                     	;# 
  1036     008D                     	;# 
  1037     008E                     	;# 
  1038     008E                     	;# 
  1039     008F                     	;# 
  1040     0090                     	;# 
  1041     0090                     	;# 
  1042     0091                     	;# 
  1043     0092                     	;# 
  1044     0092                     	;# 
  1045     0093                     	;# 
  1046     0094                     	;# 
  1047     0094                     	;# 
  1048     0095                     	;# 
  1049     0096                     	;# 
  1050     0096                     	;# 
  1051     0097                     	;# 
  1052     0098                     	;# 
  1053     0099                     	;# 
  1054     009A                     	;# 
  1055     009B                     	;# 
  1056     009B                     	;# 
  1057     009C                     	;# 
  1058     009D                     	;# 
  1059     009D                     	;# 
  1060     009E                     	;# 
  1061     009F                     	;# 
  1062     010C                     	;# 
  1063     010C                     	;# 
  1064     010D                     	;# 
  1065     010E                     	;# 
  1066     010F                     	;# 
  1067     010F                     	;# 
  1068     0110                     	;# 
  1069     0111                     	;# 
  1070     0112                     	;# 
  1071     0113                     	;# 
  1072     0114                     	;# 
  1073     0115                     	;# 
  1074     0116                     	;# 
  1075     0117                     	;# 
  1076     0118                     	;# 
  1077     0119                     	;# 
  1078     0119                     	;# 
  1079     0119                     	;# 
  1080     011A                     	;# 
  1081     011A                     	;# 
  1082     011A                     	;# 
  1083     011B                     	;# 
  1084     011B                     	;# 
  1085     011B                     	;# 
  1086     011B                     	;# 
  1087     011B                     	;# 
  1088     011C                     	;# 
  1089     011C                     	;# 
  1090     011C                     	;# 
  1091     011D                     	;# 
  1092     011D                     	;# 
  1093     011D                     	;# 
  1094     011E                     	;# 
  1095     011E                     	;# 
  1096     011E                     	;# 
  1097     011F                     	;# 
  1098     011F                     	;# 
  1099     011F                     	;# 
  1100     011F                     	;# 
  1101     011F                     	;# 
  1102     018C                     	;# 
  1103     018D                     	;# 
  1104     018E                     	;# 
  1105     018F                     	;# 
  1106     0190                     	;# 
  1107     0191                     	;# 
  1108     0192                     	;# 
  1109     0196                     	;# 
  1110     0197                     	;# 
  1111     0198                     	;# 
  1112     0199                     	;# 
  1113     019A                     	;# 
  1114     019B                     	;# 
  1115     019C                     	;# 
  1116     020C                     	;# 
  1117     020D                     	;# 
  1118     020E                     	;# 
  1119     020E                     	;# 
  1120     020F                     	;# 
  1121     020F                     	;# 
  1122     0210                     	;# 
  1123     0210                     	;# 
  1124     0211                     	;# 
  1125     0211                     	;# 
  1126     0212                     	;# 
  1127     0213                     	;# 
  1128     0214                     	;# 
  1129     0214                     	;# 
  1130     0215                     	;# 
  1131     0215                     	;# 
  1132     0216                     	;# 
  1133     0216                     	;# 
  1134     0217                     	;# 
  1135     0217                     	;# 
  1136     0218                     	;# 
  1137     0219                     	;# 
  1138     021A                     	;# 
  1139     021A                     	;# 
  1140     021B                     	;# 
  1141     021B                     	;# 
  1142     021C                     	;# 
  1143     021C                     	;# 
  1144     021D                     	;# 
  1145     021D                     	;# 
  1146     021E                     	;# 
  1147     021F                     	;# 
  1148     028C                     	;# 
  1149     028C                     	;# 
  1150     028D                     	;# 
  1151     028D                     	;# 
  1152     028E                     	;# 
  1153     028F                     	;# 
  1154     0290                     	;# 
  1155     0291                     	;# 
  1156     0292                     	;# 
  1157     0292                     	;# 
  1158     0293                     	;# 
  1159     0293                     	;# 
  1160     0294                     	;# 
  1161     0295                     	;# 
  1162     0296                     	;# 
  1163     0297                     	;# 
  1164     0298                     	;# 
  1165     0298                     	;# 
  1166     0299                     	;# 
  1167     0299                     	;# 
  1168     029A                     	;# 
  1169     029B                     	;# 
  1170     029C                     	;# 
  1171     029D                     	;# 
  1172     029F                     	;# 
  1173     030C                     	;# 
  1174     030C                     	;# 
  1175     030D                     	;# 
  1176     030E                     	;# 
  1177     030F                     	;# 
  1178     0310                     	;# 
  1179     0310                     	;# 
  1180     0311                     	;# 
  1181     0312                     	;# 
  1182     0313                     	;# 
  1183     0314                     	;# 
  1184     0314                     	;# 
  1185     0315                     	;# 
  1186     0316                     	;# 
  1187     0317                     	;# 
  1188     0318                     	;# 
  1189     0318                     	;# 
  1190     0319                     	;# 
  1191     031A                     	;# 
  1192     031B                     	;# 
  1193     038C                     	;# 
  1194     038C                     	;# 
  1195     038D                     	;# 
  1196     038E                     	;# 
  1197     0390                     	;# 
  1198     0390                     	;# 
  1199     0391                     	;# 
  1200     0392                     	;# 
  1201     048C                     	;# 
  1202     048C                     	;# 
  1203     048D                     	;# 
  1204     048E                     	;# 
  1205     048F                     	;# 
  1206     048F                     	;# 
  1207     0490                     	;# 
  1208     0491                     	;# 
  1209     0492                     	;# 
  1210     0492                     	;# 
  1211     0493                     	;# 
  1212     0494                     	;# 
  1213     0495                     	;# 
  1214     0495                     	;# 
  1215     0496                     	;# 
  1216     0497                     	;# 
  1217     0498                     	;# 
  1218     0499                     	;# 
  1219     049A                     	;# 
  1220     049B                     	;# 
  1221     049C                     	;# 
  1222     049D                     	;# 
  1223     058C                     	;# 
  1224     058C                     	;# 
  1225     058D                     	;# 
  1226     058E                     	;# 
  1227     058F                     	;# 
  1228     058F                     	;# 
  1229     0590                     	;# 
  1230     0591                     	;# 
  1231     0592                     	;# 
  1232     0593                     	;# 
  1233     059C                     	;# 
  1234     059C                     	;# 
  1235     059D                     	;# 
  1236     059D                     	;# 
  1237     059E                     	;# 
  1238     059F                     	;# 
  1239     060C                     	;# 
  1240     060C                     	;# 
  1241     060D                     	;# 
  1242     060D                     	;# 
  1243     060E                     	;# 
  1244     060F                     	;# 
  1245     0610                     	;# 
  1246     0611                     	;# 
  1247     0612                     	;# 
  1248     0613                     	;# 
  1249     0614                     	;# 
  1250     0616                     	;# 
  1251     0616                     	;# 
  1252     0617                     	;# 
  1253     0617                     	;# 
  1254     0618                     	;# 
  1255     0619                     	;# 
  1256     061A                     	;# 
  1257     061B                     	;# 
  1258     061C                     	;# 
  1259     061D                     	;# 
  1260     061E                     	;# 
  1261     070C                     	;# 
  1262     070D                     	;# 
  1263     070E                     	;# 
  1264     070F                     	;# 
  1265     0710                     	;# 
  1266     0711                     	;# 
  1267     0712                     	;# 
  1268     0713                     	;# 
  1269     0714                     	;# 
  1270     0716                     	;# 
  1271     0717                     	;# 
  1272     0718                     	;# 
  1273     0719                     	;# 
  1274     071A                     	;# 
  1275     071B                     	;# 
  1276     071C                     	;# 
  1277     071D                     	;# 
  1278     071E                     	;# 
  1279     0796                     	;# 
  1280     0797                     	;# 
  1281     0798                     	;# 
  1282     0799                     	;# 
  1283     079A                     	;# 
  1284     079B                     	;# 
  1285     079C                     	;# 
  1286     079D                     	;# 
  1287     080C                     	;# 
  1288     080D                     	;# 
  1289     080E                     	;# 
  1290     080F                     	;# 
  1291     0810                     	;# 
  1292     0811                     	;# 
  1293     0812                     	;# 
  1294     0813                     	;# 
  1295     0814                     	;# 
  1296     081A                     	;# 
  1297     081A                     	;# 
  1298     081B                     	;# 
  1299     081C                     	;# 
  1300     081C                     	;# 
  1301     081D                     	;# 
  1302     081E                     	;# 
  1303     081F                     	;# 
  1304     088C                     	;# 
  1305     088D                     	;# 
  1306     088E                     	;# 
  1307     088F                     	;# 
  1308     0890                     	;# 
  1309     0891                     	;# 
  1310     0892                     	;# 
  1311     0893                     	;# 
  1312     0895                     	;# 
  1313     0896                     	;# 
  1314     0897                     	;# 
  1315     0898                     	;# 
  1316     0899                     	;# 
  1317     089A                     	;# 
  1318     089B                     	;# 
  1319     090C                     	;# 
  1320     090E                     	;# 
  1321     090F                     	;# 
  1322     091F                     	;# 
  1323     098F                     	;# 
  1324     098F                     	;# 
  1325     0990                     	;# 
  1326     0991                     	;# 
  1327     0992                     	;# 
  1328     0993                     	;# 
  1329     0994                     	;# 
  1330     0995                     	;# 
  1331     0996                     	;# 
  1332     0997                     	;# 
  1333     1E0F                     	;# 
  1334     1E10                     	;# 
  1335     1E11                     	;# 
  1336     1E12                     	;# 
  1337     1E13                     	;# 
  1338     1E14                     	;# 
  1339     1E15                     	;# 
  1340     1E16                     	;# 
  1341     1E17                     	;# 
  1342     1E18                     	;# 
  1343     1E19                     	;# 
  1344     1E1A                     	;# 
  1345     1E1B                     	;# 
  1346     1E1C                     	;# 
  1347     1E1D                     	;# 
  1348     1E1E                     	;# 
  1349     1E1F                     	;# 
  1350     1E20                     	;# 
  1351     1E21                     	;# 
  1352     1E22                     	;# 
  1353     1E23                     	;# 
  1354     1E24                     	;# 
  1355     1E25                     	;# 
  1356     1E26                     	;# 
  1357     1E27                     	;# 
  1358     1E28                     	;# 
  1359     1E29                     	;# 
  1360     1E2A                     	;# 
  1361     1E2B                     	;# 
  1362     1E2C                     	;# 
  1363     1E2D                     	;# 
  1364     1E2E                     	;# 
  1365     1E2F                     	;# 
  1366     1E30                     	;# 
  1367     1E31                     	;# 
  1368     1E32                     	;# 
  1369     1E33                     	;# 
  1370     1E34                     	;# 
  1371     1E35                     	;# 
  1372     1E36                     	;# 
  1373     1E37                     	;# 
  1374     1E8F                     	;# 
  1375     1E90                     	;# 
  1376     1E91                     	;# 
  1377     1E92                     	;# 
  1378     1E93                     	;# 
  1379     1E94                     	;# 
  1380     1E95                     	;# 
  1381     1E96                     	;# 
  1382     1E97                     	;# 
  1383     1E9C                     	;# 
  1384     1E9D                     	;# 
  1385     1E9E                     	;# 
  1386     1EA1                     	;# 
  1387     1EA2                     	;# 
  1388     1EA3                     	;# 
  1389     1EA4                     	;# 
  1390     1EA9                     	;# 
  1391     1EAA                     	;# 
  1392     1EB1                     	;# 
  1393     1EB2                     	;# 
  1394     1EB8                     	;# 
  1395     1EB9                     	;# 
  1396     1EBA                     	;# 
  1397     1EBB                     	;# 
  1398     1EBC                     	;# 
  1399     1EBD                     	;# 
  1400     1EBE                     	;# 
  1401     1EC3                     	;# 
  1402     1EC5                     	;# 
  1403     1EC6                     	;# 
  1404     1EC7                     	;# 
  1405     1EC8                     	;# 
  1406     1EC9                     	;# 
  1407     1ECA                     	;# 
  1408     1ECB                     	;# 
  1409     1ECC                     	;# 
  1410     1F10                     	;# 
  1411     1F11                     	;# 
  1412     1F12                     	;# 
  1413     1F14                     	;# 
  1414     1F15                     	;# 
  1415     1F20                     	;# 
  1416     1F21                     	;# 
  1417     1F22                     	;# 
  1418     1F23                     	;# 
  1419     1F24                     	;# 
  1420     1F25                     	;# 
  1421     1F38                     	;# 
  1422     1F39                     	;# 
  1423     1F3A                     	;# 
  1424     1F3B                     	;# 
  1425     1F3C                     	;# 
  1426     1F3D                     	;# 
  1427     1F3E                     	;# 
  1428     1F3F                     	;# 
  1429     1F4E                     	;# 
  1430     1F4F                     	;# 
  1431     1F50                     	;# 
  1432     1F51                     	;# 
  1433     1F52                     	;# 
  1434     1F53                     	;# 
  1435     1F54                     	;# 
  1436     1F55                     	;# 
  1437     1FE4                     	;# 
  1438     1FE5                     	;# 
  1439     1FE6                     	;# 
  1440     1FE7                     	;# 
  1441     1FE8                     	;# 
  1442     1FE8                     	;# 
  1443     1FE9                     	;# 
  1444     1FEA                     	;# 
  1445     1FEB                     	;# 
  1446     1FED                     	;# 
  1447     1FEE                     	;# 
  1448     1FEF                     	;# 
  1449     0000                     	;# 
  1450     0001                     	;# 
  1451     0002                     	;# 
  1452     0003                     	;# 
  1453     0004                     	;# 
  1454     0005                     	;# 
  1455     0006                     	;# 
  1456     0007                     	;# 
  1457     0008                     	;# 
  1458     0009                     	;# 
  1459     000A                     	;# 
  1460     000B                     	;# 
  1461     000C                     	;# 
  1462     000E                     	;# 
  1463     0012                     	;# 
  1464     0014                     	;# 
  1465     0018                     	;# 
  1466     001A                     	;# 
  1467     008C                     	;# 
  1468     008C                     	;# 
  1469     008D                     	;# 
  1470     008E                     	;# 
  1471     008E                     	;# 
  1472     008F                     	;# 
  1473     0090                     	;# 
  1474     0090                     	;# 
  1475     0091                     	;# 
  1476     0092                     	;# 
  1477     0092                     	;# 
  1478     0093                     	;# 
  1479     0094                     	;# 
  1480     0094                     	;# 
  1481     0095                     	;# 
  1482     0096                     	;# 
  1483     0096                     	;# 
  1484     0097                     	;# 
  1485     0098                     	;# 
  1486     0099                     	;# 
  1487     009A                     	;# 
  1488     009B                     	;# 
  1489     009B                     	;# 
  1490     009C                     	;# 
  1491     009D                     	;# 
  1492     009D                     	;# 
  1493     009E                     	;# 
  1494     009F                     	;# 
  1495     010C                     	;# 
  1496     010C                     	;# 
  1497     010D                     	;# 
  1498     010E                     	;# 
  1499     010F                     	;# 
  1500     010F                     	;# 
  1501     0110                     	;# 
  1502     0111                     	;# 
  1503     0112                     	;# 
  1504     0113                     	;# 
  1505     0114                     	;# 
  1506     0115                     	;# 
  1507     0116                     	;# 
  1508     0117                     	;# 
  1509     0118                     	;# 
  1510     0119                     	;# 
  1511     0119                     	;# 
  1512     0119                     	;# 
  1513     011A                     	;# 
  1514     011A                     	;# 
  1515     011A                     	;# 
  1516     011B                     	;# 
  1517     011B                     	;# 
  1518     011B                     	;# 
  1519     011B                     	;# 
  1520     011B                     	;# 
  1521     011C                     	;# 
  1522     011C                     	;# 
  1523     011C                     	;# 
  1524     011D                     	;# 
  1525     011D                     	;# 
  1526     011D                     	;# 
  1527     011E                     	;# 
  1528     011E                     	;# 
  1529     011E                     	;# 
  1530     011F                     	;# 
  1531     011F                     	;# 
  1532     011F                     	;# 
  1533     011F                     	;# 
  1534     011F                     	;# 
  1535     018C                     	;# 
  1536     018D                     	;# 
  1537     018E                     	;# 
  1538     018F                     	;# 
  1539     0190                     	;# 
  1540     0191                     	;# 
  1541     0192                     	;# 
  1542     0196                     	;# 
  1543     0197                     	;# 
  1544     0198                     	;# 
  1545     0199                     	;# 
  1546     019A                     	;# 
  1547     019B                     	;# 
  1548     019C                     	;# 
  1549     020C                     	;# 
  1550     020D                     	;# 
  1551     020E                     	;# 
  1552     020E                     	;# 
  1553     020F                     	;# 
  1554     020F                     	;# 
  1555     0210                     	;# 
  1556     0210                     	;# 
  1557     0211                     	;# 
  1558     0211                     	;# 
  1559     0212                     	;# 
  1560     0213                     	;# 
  1561     0214                     	;# 
  1562     0214                     	;# 
  1563     0215                     	;# 
  1564     0215                     	;# 
  1565     0216                     	;# 
  1566     0216                     	;# 
  1567     0217                     	;# 
  1568     0217                     	;# 
  1569     0218                     	;# 
  1570     0219                     	;# 
  1571     021A                     	;# 
  1572     021A                     	;# 
  1573     021B                     	;# 
  1574     021B                     	;# 
  1575     021C                     	;# 
  1576     021C                     	;# 
  1577     021D                     	;# 
  1578     021D                     	;# 
  1579     021E                     	;# 
  1580     021F                     	;# 
  1581     028C                     	;# 
  1582     028C                     	;# 
  1583     028D                     	;# 
  1584     028D                     	;# 
  1585     028E                     	;# 
  1586     028F                     	;# 
  1587     0290                     	;# 
  1588     0291                     	;# 
  1589     0292                     	;# 
  1590     0292                     	;# 
  1591     0293                     	;# 
  1592     0293                     	;# 
  1593     0294                     	;# 
  1594     0295                     	;# 
  1595     0296                     	;# 
  1596     0297                     	;# 
  1597     0298                     	;# 
  1598     0298                     	;# 
  1599     0299                     	;# 
  1600     0299                     	;# 
  1601     029A                     	;# 
  1602     029B                     	;# 
  1603     029C                     	;# 
  1604     029D                     	;# 
  1605     029F                     	;# 
  1606     030C                     	;# 
  1607     030C                     	;# 
  1608     030D                     	;# 
  1609     030E                     	;# 
  1610     030F                     	;# 
  1611     0310                     	;# 
  1612     0310                     	;# 
  1613     0311                     	;# 
  1614     0312                     	;# 
  1615     0313                     	;# 
  1616     0314                     	;# 
  1617     0314                     	;# 
  1618     0315                     	;# 
  1619     0316                     	;# 
  1620     0317                     	;# 
  1621     0318                     	;# 
  1622     0318                     	;# 
  1623     0319                     	;# 
  1624     031A                     	;# 
  1625     031B                     	;# 
  1626     038C                     	;# 
  1627     038C                     	;# 
  1628     038D                     	;# 
  1629     038E                     	;# 
  1630     0390                     	;# 
  1631     0390                     	;# 
  1632     0391                     	;# 
  1633     0392                     	;# 
  1634     048C                     	;# 
  1635     048C                     	;# 
  1636     048D                     	;# 
  1637     048E                     	;# 
  1638     048F                     	;# 
  1639     048F                     	;# 
  1640     0490                     	;# 
  1641     0491                     	;# 
  1642     0492                     	;# 
  1643     0492                     	;# 
  1644     0493                     	;# 
  1645     0494                     	;# 
  1646     0495                     	;# 
  1647     0495                     	;# 
  1648     0496                     	;# 
  1649     0497                     	;# 
  1650     0498                     	;# 
  1651     0499                     	;# 
  1652     049A                     	;# 
  1653     049B                     	;# 
  1654     049C                     	;# 
  1655     049D                     	;# 
  1656     058C                     	;# 
  1657     058C                     	;# 
  1658     058D                     	;# 
  1659     058E                     	;# 
  1660     058F                     	;# 
  1661     058F                     	;# 
  1662     0590                     	;# 
  1663     0591                     	;# 
  1664     0592                     	;# 
  1665     0593                     	;# 
  1666     059C                     	;# 
  1667     059C                     	;# 
  1668     059D                     	;# 
  1669     059D                     	;# 
  1670     059E                     	;# 
  1671     059F                     	;# 
  1672     060C                     	;# 
  1673     060C                     	;# 
  1674     060D                     	;# 
  1675     060D                     	;# 
  1676     060E                     	;# 
  1677     060F                     	;# 
  1678     0610                     	;# 
  1679     0611                     	;# 
  1680     0612                     	;# 
  1681     0613                     	;# 
  1682     0614                     	;# 
  1683     0616                     	;# 
  1684     0616                     	;# 
  1685     0617                     	;# 
  1686     0617                     	;# 
  1687     0618                     	;# 
  1688     0619                     	;# 
  1689     061A                     	;# 
  1690     061B                     	;# 
  1691     061C                     	;# 
  1692     061D                     	;# 
  1693     061E                     	;# 
  1694     070C                     	;# 
  1695     070D                     	;# 
  1696     070E                     	;# 
  1697     070F                     	;# 
  1698     0710                     	;# 
  1699     0711                     	;# 
  1700     0712                     	;# 
  1701     0713                     	;# 
  1702     0714                     	;# 
  1703     0716                     	;# 
  1704     0717                     	;# 
  1705     0718                     	;# 
  1706     0719                     	;# 
  1707     071A                     	;# 
  1708     071B                     	;# 
  1709     071C                     	;# 
  1710     071D                     	;# 
  1711     071E                     	;# 
  1712     0796                     	;# 
  1713     0797                     	;# 
  1714     0798                     	;# 
  1715     0799                     	;# 
  1716     079A                     	;# 
  1717     079B                     	;# 
  1718     079C                     	;# 
  1719     079D                     	;# 
  1720     080C                     	;# 
  1721     080D                     	;# 
  1722     080E                     	;# 
  1723     080F                     	;# 
  1724     0810                     	;# 
  1725     0811                     	;# 
  1726     0812                     	;# 
  1727     0813                     	;# 
  1728     0814                     	;# 
  1729     081A                     	;# 
  1730     081A                     	;# 
  1731     081B                     	;# 
  1732     081C                     	;# 
  1733     081C                     	;# 
  1734     081D                     	;# 
  1735     081E                     	;# 
  1736     081F                     	;# 
  1737     088C                     	;# 
  1738     088D                     	;# 
  1739     088E                     	;# 
  1740     088F                     	;# 
  1741     0890                     	;# 
  1742     0891                     	;# 
  1743     0892                     	;# 
  1744     0893                     	;# 
  1745     0895                     	;# 
  1746     0896                     	;# 
  1747     0897                     	;# 
  1748     0898                     	;# 
  1749     0899                     	;# 
  1750     089A                     	;# 
  1751     089B                     	;# 
  1752     090C                     	;# 
  1753     090E                     	;# 
  1754     090F                     	;# 
  1755     091F                     	;# 
  1756     098F                     	;# 
  1757     098F                     	;# 
  1758     0990                     	;# 
  1759     0991                     	;# 
  1760     0992                     	;# 
  1761     0993                     	;# 
  1762     0994                     	;# 
  1763     0995                     	;# 
  1764     0996                     	;# 
  1765     0997                     	;# 
  1766     1E0F                     	;# 
  1767     1E10                     	;# 
  1768     1E11                     	;# 
  1769     1E12                     	;# 
  1770     1E13                     	;# 
  1771     1E14                     	;# 
  1772     1E15                     	;# 
  1773     1E16                     	;# 
  1774     1E17                     	;# 
  1775     1E18                     	;# 
  1776     1E19                     	;# 
  1777     1E1A                     	;# 
  1778     1E1B                     	;# 
  1779     1E1C                     	;# 
  1780     1E1D                     	;# 
  1781     1E1E                     	;# 
  1782     1E1F                     	;# 
  1783     1E20                     	;# 
  1784     1E21                     	;# 
  1785     1E22                     	;# 
  1786     1E23                     	;# 
  1787     1E24                     	;# 
  1788     1E25                     	;# 
  1789     1E26                     	;# 
  1790     1E27                     	;# 
  1791     1E28                     	;# 
  1792     1E29                     	;# 
  1793     1E2A                     	;# 
  1794     1E2B                     	;# 
  1795     1E2C                     	;# 
  1796     1E2D                     	;# 
  1797     1E2E                     	;# 
  1798     1E2F                     	;# 
  1799     1E30                     	;# 
  1800     1E31                     	;# 
  1801     1E32                     	;# 
  1802     1E33                     	;# 
  1803     1E34                     	;# 
  1804     1E35                     	;# 
  1805     1E36                     	;# 
  1806     1E37                     	;# 
  1807     1E8F                     	;# 
  1808     1E90                     	;# 
  1809     1E91                     	;# 
  1810     1E92                     	;# 
  1811     1E93                     	;# 
  1812     1E94                     	;# 
  1813     1E95                     	;# 
  1814     1E96                     	;# 
  1815     1E97                     	;# 
  1816     1E9C                     	;# 
  1817     1E9D                     	;# 
  1818     1E9E                     	;# 
  1819     1EA1                     	;# 
  1820     1EA2                     	;# 
  1821     1EA3                     	;# 
  1822     1EA4                     	;# 
  1823     1EA9                     	;# 
  1824     1EAA                     	;# 
  1825     1EB1                     	;# 
  1826     1EB2                     	;# 
  1827     1EB8                     	;# 
  1828     1EB9                     	;# 
  1829     1EBA                     	;# 
  1830     1EBB                     	;# 
  1831     1EBC                     	;# 
  1832     1EBD                     	;# 
  1833     1EBE                     	;# 
  1834     1EC3                     	;# 
  1835     1EC5                     	;# 
  1836     1EC6                     	;# 
  1837     1EC7                     	;# 
  1838     1EC8                     	;# 
  1839     1EC9                     	;# 
  1840     1ECA                     	;# 
  1841     1ECB                     	;# 
  1842     1ECC                     	;# 
  1843     1F10                     	;# 
  1844     1F11                     	;# 
  1845     1F12                     	;# 
  1846     1F14                     	;# 
  1847     1F15                     	;# 
  1848     1F20                     	;# 
  1849     1F21                     	;# 
  1850     1F22                     	;# 
  1851     1F23                     	;# 
  1852     1F24                     	;# 
  1853     1F25                     	;# 
  1854     1F38                     	;# 
  1855     1F39                     	;# 
  1856     1F3A                     	;# 
  1857     1F3B                     	;# 
  1858     1F3C                     	;# 
  1859     1F3D                     	;# 
  1860     1F3E                     	;# 
  1861     1F3F                     	;# 
  1862     1F4E                     	;# 
  1863     1F4F                     	;# 
  1864     1F50                     	;# 
  1865     1F51                     	;# 
  1866     1F52                     	;# 
  1867     1F53                     	;# 
  1868     1F54                     	;# 
  1869     1F55                     	;# 
  1870     1FE4                     	;# 
  1871     1FE5                     	;# 
  1872     1FE6                     	;# 
  1873     1FE7                     	;# 
  1874     1FE8                     	;# 
  1875     1FE8                     	;# 
  1876     1FE9                     	;# 
  1877     1FEA                     	;# 
  1878     1FEB                     	;# 
  1879     1FED                     	;# 
  1880     1FEE                     	;# 
  1881     1FEF                     	;# 
  1882     0000                     	;# 
  1883     0001                     	;# 
  1884     0002                     	;# 
  1885     0003                     	;# 
  1886     0004                     	;# 
  1887     0005                     	;# 
  1888     0006                     	;# 
  1889     0007                     	;# 
  1890     0008                     	;# 
  1891     0009                     	;# 
  1892     000A                     	;# 
  1893     000B                     	;# 
  1894     000C                     	;# 
  1895     000E                     	;# 
  1896     0012                     	;# 
  1897     0014                     	;# 
  1898     0018                     	;# 
  1899     001A                     	;# 
  1900     008C                     	;# 
  1901     008C                     	;# 
  1902     008D                     	;# 
  1903     008E                     	;# 
  1904     008E                     	;# 
  1905     008F                     	;# 
  1906     0090                     	;# 
  1907     0090                     	;# 
  1908     0091                     	;# 
  1909     0092                     	;# 
  1910     0092                     	;# 
  1911     0093                     	;# 
  1912     0094                     	;# 
  1913     0094                     	;# 
  1914     0095                     	;# 
  1915     0096                     	;# 
  1916     0096                     	;# 
  1917     0097                     	;# 
  1918     0098                     	;# 
  1919     0099                     	;# 
  1920     009A                     	;# 
  1921     009B                     	;# 
  1922     009B                     	;# 
  1923     009C                     	;# 
  1924     009D                     	;# 
  1925     009D                     	;# 
  1926     009E                     	;# 
  1927     009F                     	;# 
  1928     010C                     	;# 
  1929     010C                     	;# 
  1930     010D                     	;# 
  1931     010E                     	;# 
  1932     010F                     	;# 
  1933     010F                     	;# 
  1934     0110                     	;# 
  1935     0111                     	;# 
  1936     0112                     	;# 
  1937     0113                     	;# 
  1938     0114                     	;# 
  1939     0115                     	;# 
  1940     0116                     	;# 
  1941     0117                     	;# 
  1942     0118                     	;# 
  1943     0119                     	;# 
  1944     0119                     	;# 
  1945     0119                     	;# 
  1946     011A                     	;# 
  1947     011A                     	;# 
  1948     011A                     	;# 
  1949     011B                     	;# 
  1950     011B                     	;# 
  1951     011B                     	;# 
  1952     011B                     	;# 
  1953     011B                     	;# 
  1954     011C                     	;# 
  1955     011C                     	;# 
  1956     011C                     	;# 
  1957     011D                     	;# 
  1958     011D                     	;# 
  1959     011D                     	;# 
  1960     011E                     	;# 
  1961     011E                     	;# 
  1962     011E                     	;# 
  1963     011F                     	;# 
  1964     011F                     	;# 
  1965     011F                     	;# 
  1966     011F                     	;# 
  1967     011F                     	;# 
  1968     018C                     	;# 
  1969     018D                     	;# 
  1970     018E                     	;# 
  1971     018F                     	;# 
  1972     0190                     	;# 
  1973     0191                     	;# 
  1974     0192                     	;# 
  1975     0196                     	;# 
  1976     0197                     	;# 
  1977     0198                     	;# 
  1978     0199                     	;# 
  1979     019A                     	;# 
  1980     019B                     	;# 
  1981     019C                     	;# 
  1982     020C                     	;# 
  1983     020D                     	;# 
  1984     020E                     	;# 
  1985     020E                     	;# 
  1986     020F                     	;# 
  1987     020F                     	;# 
  1988     0210                     	;# 
  1989     0210                     	;# 
  1990     0211                     	;# 
  1991     0211                     	;# 
  1992     0212                     	;# 
  1993     0213                     	;# 
  1994     0214                     	;# 
  1995     0214                     	;# 
  1996     0215                     	;# 
  1997     0215                     	;# 
  1998     0216                     	;# 
  1999     0216                     	;# 
  2000     0217                     	;# 
  2001     0217                     	;# 
  2002     0218                     	;# 
  2003     0219                     	;# 
  2004     021A                     	;# 
  2005     021A                     	;# 
  2006     021B                     	;# 
  2007     021B                     	;# 
  2008     021C                     	;# 
  2009     021C                     	;# 
  2010     021D                     	;# 
  2011     021D                     	;# 
  2012     021E                     	;# 
  2013     021F                     	;# 
  2014     028C                     	;# 
  2015     028C                     	;# 
  2016     028D                     	;# 
  2017     028D                     	;# 
  2018     028E                     	;# 
  2019     028F                     	;# 
  2020     0290                     	;# 
  2021     0291                     	;# 
  2022     0292                     	;# 
  2023     0292                     	;# 
  2024     0293                     	;# 
  2025     0293                     	;# 
  2026     0294                     	;# 
  2027     0295                     	;# 
  2028     0296                     	;# 
  2029     0297                     	;# 
  2030     0298                     	;# 
  2031     0298                     	;# 
  2032     0299                     	;# 
  2033     0299                     	;# 
  2034     029A                     	;# 
  2035     029B                     	;# 
  2036     029C                     	;# 
  2037     029D                     	;# 
  2038     029F                     	;# 
  2039     030C                     	;# 
  2040     030C                     	;# 
  2041     030D                     	;# 
  2042     030E                     	;# 
  2043     030F                     	;# 
  2044     0310                     	;# 
  2045     0310                     	;# 
  2046     0311                     	;# 
  2047     0312                     	;# 
  2048     0313                     	;# 
  2049     0314                     	;# 
  2050     0314                     	;# 
  2051     0315                     	;# 
  2052     0316                     	;# 
  2053     0317                     	;# 
  2054     0318                     	;# 
  2055     0318                     	;# 
  2056     0319                     	;# 
  2057     031A                     	;# 
  2058     031B                     	;# 
  2059     038C                     	;# 
  2060     038C                     	;# 
  2061     038D                     	;# 
  2062     038E                     	;# 
  2063     0390                     	;# 
  2064     0390                     	;# 
  2065     0391                     	;# 
  2066     0392                     	;# 
  2067     048C                     	;# 
  2068     048C                     	;# 
  2069     048D                     	;# 
  2070     048E                     	;# 
  2071     048F                     	;# 
  2072     048F                     	;# 
  2073     0490                     	;# 
  2074     0491                     	;# 
  2075     0492                     	;# 
  2076     0492                     	;# 
  2077     0493                     	;# 
  2078     0494                     	;# 
  2079     0495                     	;# 
  2080     0495                     	;# 
  2081     0496                     	;# 
  2082     0497                     	;# 
  2083     0498                     	;# 
  2084     0499                     	;# 
  2085     049A                     	;# 
  2086     049B                     	;# 
  2087     049C                     	;# 
  2088     049D                     	;# 
  2089     058C                     	;# 
  2090     058C                     	;# 
  2091     058D                     	;# 
  2092     058E                     	;# 
  2093     058F                     	;# 
  2094     058F                     	;# 
  2095     0590                     	;# 
  2096     0591                     	;# 
  2097     0592                     	;# 
  2098     0593                     	;# 
  2099     059C                     	;# 
  2100     059C                     	;# 
  2101     059D                     	;# 
  2102     059D                     	;# 
  2103     059E                     	;# 
  2104     059F                     	;# 
  2105     060C                     	;# 
  2106     060C                     	;# 
  2107     060D                     	;# 
  2108     060D                     	;# 
  2109     060E                     	;# 
  2110     060F                     	;# 
  2111     0610                     	;# 
  2112     0611                     	;# 
  2113     0612                     	;# 
  2114     0613                     	;# 
  2115     0614                     	;# 
  2116     0616                     	;# 
  2117     0616                     	;# 
  2118     0617                     	;# 
  2119     0617                     	;# 
  2120     0618                     	;# 
  2121     0619                     	;# 
  2122     061A                     	;# 
  2123     061B                     	;# 
  2124     061C                     	;# 
  2125     061D                     	;# 
  2126     061E                     	;# 
  2127     070C                     	;# 
  2128     070D                     	;# 
  2129     070E                     	;# 
  2130     070F                     	;# 
  2131     0710                     	;# 
  2132     0711                     	;# 
  2133     0712                     	;# 
  2134     0713                     	;# 
  2135     0714                     	;# 
  2136     0716                     	;# 
  2137     0717                     	;# 
  2138     0718                     	;# 
  2139     0719                     	;# 
  2140     071A                     	;# 
  2141     071B                     	;# 
  2142     071C                     	;# 
  2143     071D                     	;# 
  2144     071E                     	;# 
  2145     0796                     	;# 
  2146     0797                     	;# 
  2147     0798                     	;# 
  2148     0799                     	;# 
  2149     079A                     	;# 
  2150     079B                     	;# 
  2151     079C                     	;# 
  2152     079D                     	;# 
  2153     080C                     	;# 
  2154     080D                     	;# 
  2155     080E                     	;# 
  2156     080F                     	;# 
  2157     0810                     	;# 
  2158     0811                     	;# 
  2159     0812                     	;# 
  2160     0813                     	;# 
  2161     0814                     	;# 
  2162     081A                     	;# 
  2163     081A                     	;# 
  2164     081B                     	;# 
  2165     081C                     	;# 
  2166     081C                     	;# 
  2167     081D                     	;# 
  2168     081E                     	;# 
  2169     081F                     	;# 
  2170     088C                     	;# 
  2171     088D                     	;# 
  2172     088E                     	;# 
  2173     088F                     	;# 
  2174     0890                     	;# 
  2175     0891                     	;# 
  2176     0892                     	;# 
  2177     0893                     	;# 
  2178     0895                     	;# 
  2179     0896                     	;# 
  2180     0897                     	;# 
  2181     0898                     	;# 
  2182     0899                     	;# 
  2183     089A                     	;# 
  2184     089B                     	;# 
  2185     090C                     	;# 
  2186     090E                     	;# 
  2187     090F                     	;# 
  2188     091F                     	;# 
  2189     098F                     	;# 
  2190     098F                     	;# 
  2191     0990                     	;# 
  2192     0991                     	;# 
  2193     0992                     	;# 
  2194     0993                     	;# 
  2195     0994                     	;# 
  2196     0995                     	;# 
  2197     0996                     	;# 
  2198     0997                     	;# 
  2199     1E0F                     	;# 
  2200     1E10                     	;# 
  2201     1E11                     	;# 
  2202     1E12                     	;# 
  2203     1E13                     	;# 
  2204     1E14                     	;# 
  2205     1E15                     	;# 
  2206     1E16                     	;# 
  2207     1E17                     	;# 
  2208     1E18                     	;# 
  2209     1E19                     	;# 
  2210     1E1A                     	;# 
  2211     1E1B                     	;# 
  2212     1E1C                     	;# 
  2213     1E1D                     	;# 
  2214     1E1E                     	;# 
  2215     1E1F                     	;# 
  2216     1E20                     	;# 
  2217     1E21                     	;# 
  2218     1E22                     	;# 
  2219     1E23                     	;# 
  2220     1E24                     	;# 
  2221     1E25                     	;# 
  2222     1E26                     	;# 
  2223     1E27                     	;# 
  2224     1E28                     	;# 
  2225     1E29                     	;# 
  2226     1E2A                     	;# 
  2227     1E2B                     	;# 
  2228     1E2C                     	;# 
  2229     1E2D                     	;# 
  2230     1E2E                     	;# 
  2231     1E2F                     	;# 
  2232     1E30                     	;# 
  2233     1E31                     	;# 
  2234     1E32                     	;# 
  2235     1E33                     	;# 
  2236     1E34                     	;# 
  2237     1E35                     	;# 
  2238     1E36                     	;# 
  2239     1E37                     	;# 
  2240     1E8F                     	;# 
  2241     1E90                     	;# 
  2242     1E91                     	;# 
  2243     1E92                     	;# 
  2244     1E93                     	;# 
  2245     1E94                     	;# 
  2246     1E95                     	;# 
  2247     1E96                     	;# 
  2248     1E97                     	;# 
  2249     1E9C                     	;# 
  2250     1E9D                     	;# 
  2251     1E9E                     	;# 
  2252     1EA1                     	;# 
  2253     1EA2                     	;# 
  2254     1EA3                     	;# 
  2255     1EA4                     	;# 
  2256     1EA9                     	;# 
  2257     1EAA                     	;# 
  2258     1EB1                     	;# 
  2259     1EB2                     	;# 
  2260     1EB8                     	;# 
  2261     1EB9                     	;# 
  2262     1EBA                     	;# 
  2263     1EBB                     	;# 
  2264     1EBC                     	;# 
  2265     1EBD                     	;# 
  2266     1EBE                     	;# 
  2267     1EC3                     	;# 
  2268     1EC5                     	;# 
  2269     1EC6                     	;# 
  2270     1EC7                     	;# 
  2271     1EC8                     	;# 
  2272     1EC9                     	;# 
  2273     1ECA                     	;# 
  2274     1ECB                     	;# 
  2275     1ECC                     	;# 
  2276     1F10                     	;# 
  2277     1F11                     	;# 
  2278     1F12                     	;# 
  2279     1F14                     	;# 
  2280     1F15                     	;# 
  2281     1F20                     	;# 
  2282     1F21                     	;# 
  2283     1F22                     	;# 
  2284     1F23                     	;# 
  2285     1F24                     	;# 
  2286     1F25                     	;# 
  2287     1F38                     	;# 
  2288     1F39                     	;# 
  2289     1F3A                     	;# 
  2290     1F3B                     	;# 
  2291     1F3C                     	;# 
  2292     1F3D                     	;# 
  2293     1F3E                     	;# 
  2294     1F3F                     	;# 
  2295     1F4E                     	;# 
  2296     1F4F                     	;# 
  2297     1F50                     	;# 
  2298     1F51                     	;# 
  2299     1F52                     	;# 
  2300     1F53                     	;# 
  2301     1F54                     	;# 
  2302     1F55                     	;# 
  2303     1FE4                     	;# 
  2304     1FE5                     	;# 
  2305     1FE6                     	;# 
  2306     1FE7                     	;# 
  2307     1FE8                     	;# 
  2308     1FE8                     	;# 
  2309     1FE9                     	;# 
  2310     1FEA                     	;# 
  2311     1FEB                     	;# 
  2312     1FED                     	;# 
  2313     1FEE                     	;# 
  2314     1FEF                     	;# 
  2315     0000                     	;# 
  2316     0001                     	;# 
  2317     0002                     	;# 
  2318     0003                     	;# 
  2319     0004                     	;# 
  2320     0005                     	;# 
  2321     0006                     	;# 
  2322     0007                     	;# 
  2323     0008                     	;# 
  2324     0009                     	;# 
  2325     000A                     	;# 
  2326     000B                     	;# 
  2327     000C                     	;# 
  2328     000E                     	;# 
  2329     0012                     	;# 
  2330     0014                     	;# 
  2331     0018                     	;# 
  2332     001A                     	;# 
  2333     008C                     	;# 
  2334     008C                     	;# 
  2335     008D                     	;# 
  2336     008E                     	;# 
  2337     008E                     	;# 
  2338     008F                     	;# 
  2339     0090                     	;# 
  2340     0090                     	;# 
  2341     0091                     	;# 
  2342     0092                     	;# 
  2343     0092                     	;# 
  2344     0093                     	;# 
  2345     0094                     	;# 
  2346     0094                     	;# 
  2347     0095                     	;# 
  2348     0096                     	;# 
  2349     0096                     	;# 
  2350     0097                     	;# 
  2351     0098                     	;# 
  2352     0099                     	;# 
  2353     009A                     	;# 
  2354     009B                     	;# 
  2355     009B                     	;# 
  2356     009C                     	;# 
  2357     009D                     	;# 
  2358     009D                     	;# 
  2359     009E                     	;# 
  2360     009F                     	;# 
  2361     010C                     	;# 
  2362     010C                     	;# 
  2363     010D                     	;# 
  2364     010E                     	;# 
  2365     010F                     	;# 
  2366     010F                     	;# 
  2367     0110                     	;# 
  2368     0111                     	;# 
  2369     0112                     	;# 
  2370     0113                     	;# 
  2371     0114                     	;# 
  2372     0115                     	;# 
  2373     0116                     	;# 
  2374     0117                     	;# 
  2375     0118                     	;# 
  2376     0119                     	;# 
  2377     0119                     	;# 
  2378     0119                     	;# 
  2379     011A                     	;# 
  2380     011A                     	;# 
  2381     011A                     	;# 
  2382     011B                     	;# 
  2383     011B                     	;# 
  2384     011B                     	;# 
  2385     011B                     	;# 
  2386     011B                     	;# 
  2387     011C                     	;# 
  2388     011C                     	;# 
  2389     011C                     	;# 
  2390     011D                     	;# 
  2391     011D                     	;# 
  2392     011D                     	;# 
  2393     011E                     	;# 
  2394     011E                     	;# 
  2395     011E                     	;# 
  2396     011F                     	;# 
  2397     011F                     	;# 
  2398     011F                     	;# 
  2399     011F                     	;# 
  2400     011F                     	;# 
  2401     018C                     	;# 
  2402     018D                     	;# 
  2403     018E                     	;# 
  2404     018F                     	;# 
  2405     0190                     	;# 
  2406     0191                     	;# 
  2407     0192                     	;# 
  2408     0196                     	;# 
  2409     0197                     	;# 
  2410     0198                     	;# 
  2411     0199                     	;# 
  2412     019A                     	;# 
  2413     019B                     	;# 
  2414     019C                     	;# 
  2415     020C                     	;# 
  2416     020D                     	;# 
  2417     020E                     	;# 
  2418     020E                     	;# 
  2419     020F                     	;# 
  2420     020F                     	;# 
  2421     0210                     	;# 
  2422     0210                     	;# 
  2423     0211                     	;# 
  2424     0211                     	;# 
  2425     0212                     	;# 
  2426     0213                     	;# 
  2427     0214                     	;# 
  2428     0214                     	;# 
  2429     0215                     	;# 
  2430     0215                     	;# 
  2431     0216                     	;# 
  2432     0216                     	;# 
  2433     0217                     	;# 
  2434     0217                     	;# 
  2435     0218                     	;# 
  2436     0219                     	;# 
  2437     021A                     	;# 
  2438     021A                     	;# 
  2439     021B                     	;# 
  2440     021B                     	;# 
  2441     021C                     	;# 
  2442     021C                     	;# 
  2443     021D                     	;# 
  2444     021D                     	;# 
  2445     021E                     	;# 
  2446     021F                     	;# 
  2447     028C                     	;# 
  2448     028C                     	;# 
  2449     028D                     	;# 
  2450     028D                     	;# 
  2451     028E                     	;# 
  2452     028F                     	;# 
  2453     0290                     	;# 
  2454     0291                     	;# 
  2455     0292                     	;# 
  2456     0292                     	;# 
  2457     0293                     	;# 
  2458     0293                     	;# 
  2459     0294                     	;# 
  2460     0295                     	;# 
  2461     0296                     	;# 
  2462     0297                     	;# 
  2463     0298                     	;# 
  2464     0298                     	;# 
  2465     0299                     	;# 
  2466     0299                     	;# 
  2467     029A                     	;# 
  2468     029B                     	;# 
  2469     029C                     	;# 
  2470     029D                     	;# 
  2471     029F                     	;# 
  2472     030C                     	;# 
  2473     030C                     	;# 
  2474     030D                     	;# 
  2475     030E                     	;# 
  2476     030F                     	;# 
  2477     0310                     	;# 
  2478     0310                     	;# 
  2479     0311                     	;# 
  2480     0312                     	;# 
  2481     0313                     	;# 
  2482     0314                     	;# 
  2483     0314                     	;# 
  2484     0315                     	;# 
  2485     0316                     	;# 
  2486     0317                     	;# 
  2487     0318                     	;# 
  2488     0318                     	;# 
  2489     0319                     	;# 
  2490     031A                     	;# 
  2491     031B                     	;# 
  2492     038C                     	;# 
  2493     038C                     	;# 
  2494     038D                     	;# 
  2495     038E                     	;# 
  2496     0390                     	;# 
  2497     0390                     	;# 
  2498     0391                     	;# 
  2499     0392                     	;# 
  2500     048C                     	;# 
  2501     048C                     	;# 
  2502     048D                     	;# 
  2503     048E                     	;# 
  2504     048F                     	;# 
  2505     048F                     	;# 
  2506     0490                     	;# 
  2507     0491                     	;# 
  2508     0492                     	;# 
  2509     0492                     	;# 
  2510     0493                     	;# 
  2511     0494                     	;# 
  2512     0495                     	;# 
  2513     0495                     	;# 
  2514     0496                     	;# 
  2515     0497                     	;# 
  2516     0498                     	;# 
  2517     0499                     	;# 
  2518     049A                     	;# 
  2519     049B                     	;# 
  2520     049C                     	;# 
  2521     049D                     	;# 
  2522     058C                     	;# 
  2523     058C                     	;# 
  2524     058D                     	;# 
  2525     058E                     	;# 
  2526     058F                     	;# 
  2527     058F                     	;# 
  2528     0590                     	;# 
  2529     0591                     	;# 
  2530     0592                     	;# 
  2531     0593                     	;# 
  2532     059C                     	;# 
  2533     059C                     	;# 
  2534     059D                     	;# 
  2535     059D                     	;# 
  2536     059E                     	;# 
  2537     059F                     	;# 
  2538     060C                     	;# 
  2539     060C                     	;# 
  2540     060D                     	;# 
  2541     060D                     	;# 
  2542     060E                     	;# 
  2543     060F                     	;# 
  2544     0610                     	;# 
  2545     0611                     	;# 
  2546     0612                     	;# 
  2547     0613                     	;# 
  2548     0614                     	;# 
  2549     0616                     	;# 
  2550     0616                     	;# 
  2551     0617                     	;# 
  2552     0617                     	;# 
  2553     0618                     	;# 
  2554     0619                     	;# 
  2555     061A                     	;# 
  2556     061B                     	;# 
  2557     061C                     	;# 
  2558     061D                     	;# 
  2559     061E                     	;# 
  2560     070C                     	;# 
  2561     070D                     	;# 
  2562     070E                     	;# 
  2563     070F                     	;# 
  2564     0710                     	;# 
  2565     0711                     	;# 
  2566     0712                     	;# 
  2567     0713                     	;# 
  2568     0714                     	;# 
  2569     0716                     	;# 
  2570     0717                     	;# 
  2571     0718                     	;# 
  2572     0719                     	;# 
  2573     071A                     	;# 
  2574     071B                     	;# 
  2575     071C                     	;# 
  2576     071D                     	;# 
  2577     071E                     	;# 
  2578     0796                     	;# 
  2579     0797                     	;# 
  2580     0798                     	;# 
  2581     0799                     	;# 
  2582     079A                     	;# 
  2583     079B                     	;# 
  2584     079C                     	;# 
  2585     079D                     	;# 
  2586     080C                     	;# 
  2587     080D                     	;# 
  2588     080E                     	;# 
  2589     080F                     	;# 
  2590     0810                     	;# 
  2591     0811                     	;# 
  2592     0812                     	;# 
  2593     0813                     	;# 
  2594     0814                     	;# 
  2595     081A                     	;# 
  2596     081A                     	;# 
  2597     081B                     	;# 
  2598     081C                     	;# 
  2599     081C                     	;# 
  2600     081D                     	;# 
  2601     081E                     	;# 
  2602     081F                     	;# 
  2603     088C                     	;# 
  2604     088D                     	;# 
  2605     088E                     	;# 
  2606     088F                     	;# 
  2607     0890                     	;# 
  2608     0891                     	;# 
  2609     0892                     	;# 
  2610     0893                     	;# 
  2611     0895                     	;# 
  2612     0896                     	;# 
  2613     0897                     	;# 
  2614     0898                     	;# 
  2615     0899                     	;# 
  2616     089A                     	;# 
  2617     089B                     	;# 
  2618     090C                     	;# 
  2619     090E                     	;# 
  2620     090F                     	;# 
  2621     091F                     	;# 
  2622     098F                     	;# 
  2623     098F                     	;# 
  2624     0990                     	;# 
  2625     0991                     	;# 
  2626     0992                     	;# 
  2627     0993                     	;# 
  2628     0994                     	;# 
  2629     0995                     	;# 
  2630     0996                     	;# 
  2631     0997                     	;# 
  2632     1E0F                     	;# 
  2633     1E10                     	;# 
  2634     1E11                     	;# 
  2635     1E12                     	;# 
  2636     1E13                     	;# 
  2637     1E14                     	;# 
  2638     1E15                     	;# 
  2639     1E16                     	;# 
  2640     1E17                     	;# 
  2641     1E18                     	;# 
  2642     1E19                     	;# 
  2643     1E1A                     	;# 
  2644     1E1B                     	;# 
  2645     1E1C                     	;# 
  2646     1E1D                     	;# 
  2647     1E1E                     	;# 
  2648     1E1F                     	;# 
  2649     1E20                     	;# 
  2650     1E21                     	;# 
  2651     1E22                     	;# 
  2652     1E23                     	;# 
  2653     1E24                     	;# 
  2654     1E25                     	;# 
  2655     1E26                     	;# 
  2656     1E27                     	;# 
  2657     1E28                     	;# 
  2658     1E29                     	;# 
  2659     1E2A                     	;# 
  2660     1E2B                     	;# 
  2661     1E2C                     	;# 
  2662     1E2D                     	;# 
  2663     1E2E                     	;# 
  2664     1E2F                     	;# 
  2665     1E30                     	;# 
  2666     1E31                     	;# 
  2667     1E32                     	;# 
  2668     1E33                     	;# 
  2669     1E34                     	;# 
  2670     1E35                     	;# 
  2671     1E36                     	;# 
  2672     1E37                     	;# 
  2673     1E8F                     	;# 
  2674     1E90                     	;# 
  2675     1E91                     	;# 
  2676     1E92                     	;# 
  2677     1E93                     	;# 
  2678     1E94                     	;# 
  2679     1E95                     	;# 
  2680     1E96                     	;# 
  2681     1E97                     	;# 
  2682     1E9C                     	;# 
  2683     1E9D                     	;# 
  2684     1E9E                     	;# 
  2685     1EA1                     	;# 
  2686     1EA2                     	;# 
  2687     1EA3                     	;# 
  2688     1EA4                     	;# 
  2689     1EA9                     	;# 
  2690     1EAA                     	;# 
  2691     1EB1                     	;# 
  2692     1EB2                     	;# 
  2693     1EB8                     	;# 
  2694     1EB9                     	;# 
  2695     1EBA                     	;# 
  2696     1EBB                     	;# 
  2697     1EBC                     	;# 
  2698     1EBD                     	;# 
  2699     1EBE                     	;# 
  2700     1EC3                     	;# 
  2701     1EC5                     	;# 
  2702     1EC6                     	;# 
  2703     1EC7                     	;# 
  2704     1EC8                     	;# 
  2705     1EC9                     	;# 
  2706     1ECA                     	;# 
  2707     1ECB                     	;# 
  2708     1ECC                     	;# 
  2709     1F10                     	;# 
  2710     1F11                     	;# 
  2711     1F12                     	;# 
  2712     1F14                     	;# 
  2713     1F15                     	;# 
  2714     1F20                     	;# 
  2715     1F21                     	;# 
  2716     1F22                     	;# 
  2717     1F23                     	;# 
  2718     1F24                     	;# 
  2719     1F25                     	;# 
  2720     1F38                     	;# 
  2721     1F39                     	;# 
  2722     1F3A                     	;# 
  2723     1F3B                     	;# 
  2724     1F3C                     	;# 
  2725     1F3D                     	;# 
  2726     1F3E                     	;# 
  2727     1F3F                     	;# 
  2728     1F4E                     	;# 
  2729     1F4F                     	;# 
  2730     1F50                     	;# 
  2731     1F51                     	;# 
  2732     1F52                     	;# 
  2733     1F53                     	;# 
  2734     1F54                     	;# 
  2735     1F55                     	;# 
  2736     1FE4                     	;# 
  2737     1FE5                     	;# 
  2738     1FE6                     	;# 
  2739     1FE7                     	;# 
  2740     1FE8                     	;# 
  2741     1FE8                     	;# 
  2742     1FE9                     	;# 
  2743     1FEA                     	;# 
  2744     1FEB                     	;# 
  2745     1FED                     	;# 
  2746     1FEE                     	;# 
  2747     1FEF                     	;# 
  2748     0000                     	;# 
  2749     0001                     	;# 
  2750     0002                     	;# 
  2751     0003                     	;# 
  2752     0004                     	;# 
  2753     0005                     	;# 
  2754     0006                     	;# 
  2755     0007                     	;# 
  2756     0008                     	;# 
  2757     0009                     	;# 
  2758     000A                     	;# 
  2759     000B                     	;# 
  2760     000C                     	;# 
  2761     000E                     	;# 
  2762     0012                     	;# 
  2763     0014                     	;# 
  2764     0018                     	;# 
  2765     001A                     	;# 
  2766     008C                     	;# 
  2767     008C                     	;# 
  2768     008D                     	;# 
  2769     008E                     	;# 
  2770     008E                     	;# 
  2771     008F                     	;# 
  2772     0090                     	;# 
  2773     0090                     	;# 
  2774     0091                     	;# 
  2775     0092                     	;# 
  2776     0092                     	;# 
  2777     0093                     	;# 
  2778     0094                     	;# 
  2779     0094                     	;# 
  2780     0095                     	;# 
  2781     0096                     	;# 
  2782     0096                     	;# 
  2783     0097                     	;# 
  2784     0098                     	;# 
  2785     0099                     	;# 
  2786     009A                     	;# 
  2787     009B                     	;# 
  2788     009B                     	;# 
  2789     009C                     	;# 
  2790     009D                     	;# 
  2791     009D                     	;# 
  2792     009E                     	;# 
  2793     009F                     	;# 
  2794     010C                     	;# 
  2795     010C                     	;# 
  2796     010D                     	;# 
  2797     010E                     	;# 
  2798     010F                     	;# 
  2799     010F                     	;# 
  2800     0110                     	;# 
  2801     0111                     	;# 
  2802     0112                     	;# 
  2803     0113                     	;# 
  2804     0114                     	;# 
  2805     0115                     	;# 
  2806     0116                     	;# 
  2807     0117                     	;# 
  2808     0118                     	;# 
  2809     0119                     	;# 
  2810     0119                     	;# 
  2811     0119                     	;# 
  2812     011A                     	;# 
  2813     011A                     	;# 
  2814     011A                     	;# 
  2815     011B                     	;# 
  2816     011B                     	;# 
  2817     011B                     	;# 
  2818     011B                     	;# 
  2819     011B                     	;# 
  2820     011C                     	;# 
  2821     011C                     	;# 
  2822     011C                     	;# 
  2823     011D                     	;# 
  2824     011D                     	;# 
  2825     011D                     	;# 
  2826     011E                     	;# 
  2827     011E                     	;# 
  2828     011E                     	;# 
  2829     011F                     	;# 
  2830     011F                     	;# 
  2831     011F                     	;# 
  2832     011F                     	;# 
  2833     011F                     	;# 
  2834     018C                     	;# 
  2835     018D                     	;# 
  2836     018E                     	;# 
  2837     018F                     	;# 
  2838     0190                     	;# 
  2839     0191                     	;# 
  2840     0192                     	;# 
  2841     0196                     	;# 
  2842     0197                     	;# 
  2843     0198                     	;# 
  2844     0199                     	;# 
  2845     019A                     	;# 
  2846     019B                     	;# 
  2847     019C                     	;# 
  2848     020C                     	;# 
  2849     020D                     	;# 
  2850     020E                     	;# 
  2851     020E                     	;# 
  2852     020F                     	;# 
  2853     020F                     	;# 
  2854     0210                     	;# 
  2855     0210                     	;# 
  2856     0211                     	;# 
  2857     0211                     	;# 
  2858     0212                     	;# 
  2859     0213                     	;# 
  2860     0214                     	;# 
  2861     0214                     	;# 
  2862     0215                     	;# 
  2863     0215                     	;# 
  2864     0216                     	;# 
  2865     0216                     	;# 
  2866     0217                     	;# 
  2867     0217                     	;# 
  2868     0218                     	;# 
  2869     0219                     	;# 
  2870     021A                     	;# 
  2871     021A                     	;# 
  2872     021B                     	;# 
  2873     021B                     	;# 
  2874     021C                     	;# 
  2875     021C                     	;# 
  2876     021D                     	;# 
  2877     021D                     	;# 
  2878     021E                     	;# 
  2879     021F                     	;# 
  2880     028C                     	;# 
  2881     028C                     	;# 
  2882     028D                     	;# 
  2883     028D                     	;# 
  2884     028E                     	;# 
  2885     028F                     	;# 
  2886     0290                     	;# 
  2887     0291                     	;# 
  2888     0292                     	;# 
  2889     0292                     	;# 
  2890     0293                     	;# 
  2891     0293                     	;# 
  2892     0294                     	;# 
  2893     0295                     	;# 
  2894     0296                     	;# 
  2895     0297                     	;# 
  2896     0298                     	;# 
  2897     0298                     	;# 
  2898     0299                     	;# 
  2899     0299                     	;# 
  2900     029A                     	;# 
  2901     029B                     	;# 
  2902     029C                     	;# 
  2903     029D                     	;# 
  2904     029F                     	;# 
  2905     030C                     	;# 
  2906     030C                     	;# 
  2907     030D                     	;# 
  2908     030E                     	;# 
  2909     030F                     	;# 
  2910     0310                     	;# 
  2911     0310                     	;# 
  2912     0311                     	;# 
  2913     0312                     	;# 
  2914     0313                     	;# 
  2915     0314                     	;# 
  2916     0314                     	;# 
  2917     0315                     	;# 
  2918     0316                     	;# 
  2919     0317                     	;# 
  2920     0318                     	;# 
  2921     0318                     	;# 
  2922     0319                     	;# 
  2923     031A                     	;# 
  2924     031B                     	;# 
  2925     038C                     	;# 
  2926     038C                     	;# 
  2927     038D                     	;# 
  2928     038E                     	;# 
  2929     0390                     	;# 
  2930     0390                     	;# 
  2931     0391                     	;# 
  2932     0392                     	;# 
  2933     048C                     	;# 
  2934     048C                     	;# 
  2935     048D                     	;# 
  2936     048E                     	;# 
  2937     048F                     	;# 
  2938     048F                     	;# 
  2939     0490                     	;# 
  2940     0491                     	;# 
  2941     0492                     	;# 
  2942     0492                     	;# 
  2943     0493                     	;# 
  2944     0494                     	;# 
  2945     0495                     	;# 
  2946     0495                     	;# 
  2947     0496                     	;# 
  2948     0497                     	;# 
  2949     0498                     	;# 
  2950     0499                     	;# 
  2951     049A                     	;# 
  2952     049B                     	;# 
  2953     049C                     	;# 
  2954     049D                     	;# 
  2955     058C                     	;# 
  2956     058C                     	;# 
  2957     058D                     	;# 
  2958     058E                     	;# 
  2959     058F                     	;# 
  2960     058F                     	;# 
  2961     0590                     	;# 
  2962     0591                     	;# 
  2963     0592                     	;# 
  2964     0593                     	;# 
  2965     059C                     	;# 
  2966     059C                     	;# 
  2967     059D                     	;# 
  2968     059D                     	;# 
  2969     059E                     	;# 
  2970     059F                     	;# 
  2971     060C                     	;# 
  2972     060C                     	;# 
  2973     060D                     	;# 
  2974     060D                     	;# 
  2975     060E                     	;# 
  2976     060F                     	;# 
  2977     0610                     	;# 
  2978     0611                     	;# 
  2979     0612                     	;# 
  2980     0613                     	;# 
  2981     0614                     	;# 
  2982     0616                     	;# 
  2983     0616                     	;# 
  2984     0617                     	;# 
  2985     0617                     	;# 
  2986     0618                     	;# 
  2987     0619                     	;# 
  2988     061A                     	;# 
  2989     061B                     	;# 
  2990     061C                     	;# 
  2991     061D                     	;# 
  2992     061E                     	;# 
  2993     070C                     	;# 
  2994     070D                     	;# 
  2995     070E                     	;# 
  2996     070F                     	;# 
  2997     0710                     	;# 
  2998     0711                     	;# 
  2999     0712                     	;# 
  3000     0713                     	;# 
  3001     0714                     	;# 
  3002     0716                     	;# 
  3003     0717                     	;# 
  3004     0718                     	;# 
  3005     0719                     	;# 
  3006     071A                     	;# 
  3007     071B                     	;# 
  3008     071C                     	;# 
  3009     071D                     	;# 
  3010     071E                     	;# 
  3011     0796                     	;# 
  3012     0797                     	;# 
  3013     0798                     	;# 
  3014     0799                     	;# 
  3015     079A                     	;# 
  3016     079B                     	;# 
  3017     079C                     	;# 
  3018     079D                     	;# 
  3019     080C                     	;# 
  3020     080D                     	;# 
  3021     080E                     	;# 
  3022     080F                     	;# 
  3023     0810                     	;# 
  3024     0811                     	;# 
  3025     0812                     	;# 
  3026     0813                     	;# 
  3027     0814                     	;# 
  3028     081A                     	;# 
  3029     081A                     	;# 
  3030     081B                     	;# 
  3031     081C                     	;# 
  3032     081C                     	;# 
  3033     081D                     	;# 
  3034     081E                     	;# 
  3035     081F                     	;# 
  3036     088C                     	;# 
  3037     088D                     	;# 
  3038     088E                     	;# 
  3039     088F                     	;# 
  3040     0890                     	;# 
  3041     0891                     	;# 
  3042     0892                     	;# 
  3043     0893                     	;# 
  3044     0895                     	;# 
  3045     0896                     	;# 
  3046     0897                     	;# 
  3047     0898                     	;# 
  3048     0899                     	;# 
  3049     089A                     	;# 
  3050     089B                     	;# 
  3051     090C                     	;# 
  3052     090E                     	;# 
  3053     090F                     	;# 
  3054     091F                     	;# 
  3055     098F                     	;# 
  3056     098F                     	;# 
  3057     0990                     	;# 
  3058     0991                     	;# 
  3059     0992                     	;# 
  3060     0993                     	;# 
  3061     0994                     	;# 
  3062     0995                     	;# 
  3063     0996                     	;# 
  3064     0997                     	;# 
  3065     1E0F                     	;# 
  3066     1E10                     	;# 
  3067     1E11                     	;# 
  3068     1E12                     	;# 
  3069     1E13                     	;# 
  3070     1E14                     	;# 
  3071     1E15                     	;# 
  3072     1E16                     	;# 
  3073     1E17                     	;# 
  3074     1E18                     	;# 
  3075     1E19                     	;# 
  3076     1E1A                     	;# 
  3077     1E1B                     	;# 
  3078     1E1C                     	;# 
  3079     1E1D                     	;# 
  3080     1E1E                     	;# 
  3081     1E1F                     	;# 
  3082     1E20                     	;# 
  3083     1E21                     	;# 
  3084     1E22                     	;# 
  3085     1E23                     	;# 
  3086     1E24                     	;# 
  3087     1E25                     	;# 
  3088     1E26                     	;# 
  3089     1E27                     	;# 
  3090     1E28                     	;# 
  3091     1E29                     	;# 
  3092     1E2A                     	;# 
  3093     1E2B                     	;# 
  3094     1E2C                     	;# 
  3095     1E2D                     	;# 
  3096     1E2E                     	;# 
  3097     1E2F                     	;# 
  3098     1E30                     	;# 
  3099     1E31                     	;# 
  3100     1E32                     	;# 
  3101     1E33                     	;# 
  3102     1E34                     	;# 
  3103     1E35                     	;# 
  3104     1E36                     	;# 
  3105     1E37                     	;# 
  3106     1E8F                     	;# 
  3107     1E90                     	;# 
  3108     1E91                     	;# 
  3109     1E92                     	;# 
  3110     1E93                     	;# 
  3111     1E94                     	;# 
  3112     1E95                     	;# 
  3113     1E96                     	;# 
  3114     1E97                     	;# 
  3115     1E9C                     	;# 
  3116     1E9D                     	;# 
  3117     1E9E                     	;# 
  3118     1EA1                     	;# 
  3119     1EA2                     	;# 
  3120     1EA3                     	;# 
  3121     1EA4                     	;# 
  3122     1EA9                     	;# 
  3123     1EAA                     	;# 
  3124     1EB1                     	;# 
  3125     1EB2                     	;# 
  3126     1EB8                     	;# 
  3127     1EB9                     	;# 
  3128     1EBA                     	;# 
  3129     1EBB                     	;# 
  3130     1EBC                     	;# 
  3131     1EBD                     	;# 
  3132     1EBE                     	;# 
  3133     1EC3                     	;# 
  3134     1EC5                     	;# 
  3135     1EC6                     	;# 
  3136     1EC7                     	;# 
  3137     1EC8                     	;# 
  3138     1EC9                     	;# 
  3139     1ECA                     	;# 
  3140     1ECB                     	;# 
  3141     1ECC                     	;# 
  3142     1F10                     	;# 
  3143     1F11                     	;# 
  3144     1F12                     	;# 
  3145     1F14                     	;# 
  3146     1F15                     	;# 
  3147     1F20                     	;# 
  3148     1F21                     	;# 
  3149     1F22                     	;# 
  3150     1F23                     	;# 
  3151     1F24                     	;# 
  3152     1F25                     	;# 
  3153     1F38                     	;# 
  3154     1F39                     	;# 
  3155     1F3A                     	;# 
  3156     1F3B                     	;# 
  3157     1F3C                     	;# 
  3158     1F3D                     	;# 
  3159     1F3E                     	;# 
  3160     1F3F                     	;# 
  3161     1F4E                     	;# 
  3162     1F4F                     	;# 
  3163     1F50                     	;# 
  3164     1F51                     	;# 
  3165     1F52                     	;# 
  3166     1F53                     	;# 
  3167     1F54                     	;# 
  3168     1F55                     	;# 
  3169     1FE4                     	;# 
  3170     1FE5                     	;# 
  3171     1FE6                     	;# 
  3172     1FE7                     	;# 
  3173     1FE8                     	;# 
  3174     1FE8                     	;# 
  3175     1FE9                     	;# 
  3176     1FEA                     	;# 
  3177     1FEB                     	;# 
  3178     1FED                     	;# 
  3179     1FEE                     	;# 
  3180     1FEF                     	;# 
  3181     0000                     	;# 
  3182     0001                     	;# 
  3183     0002                     	;# 
  3184     0003                     	;# 
  3185     0004                     	;# 
  3186     0005                     	;# 
  3187     0006                     	;# 
  3188     0007                     	;# 
  3189     0008                     	;# 
  3190     0009                     	;# 
  3191     000A                     	;# 
  3192     000B                     	;# 
  3193     000C                     	;# 
  3194     000E                     	;# 
  3195     0012                     	;# 
  3196     0014                     	;# 
  3197     0018                     	;# 
  3198     001A                     	;# 
  3199     008C                     	;# 
  3200     008C                     	;# 
  3201     008D                     	;# 
  3202     008E                     	;# 
  3203     008E                     	;# 
  3204     008F                     	;# 
  3205     0090                     	;# 
  3206     0090                     	;# 
  3207     0091                     	;# 
  3208     0092                     	;# 
  3209     0092                     	;# 
  3210     0093                     	;# 
  3211     0094                     	;# 
  3212     0094                     	;# 
  3213     0095                     	;# 
  3214     0096                     	;# 
  3215     0096                     	;# 
  3216     0097                     	;# 
  3217     0098                     	;# 
  3218     0099                     	;# 
  3219     009A                     	;# 
  3220     009B                     	;# 
  3221     009B                     	;# 
  3222     009C                     	;# 
  3223     009D                     	;# 
  3224     009D                     	;# 
  3225     009E                     	;# 
  3226     009F                     	;# 
  3227     010C                     	;# 
  3228     010C                     	;# 
  3229     010D                     	;# 
  3230     010E                     	;# 
  3231     010F                     	;# 
  3232     010F                     	;# 
  3233     0110                     	;# 
  3234     0111                     	;# 
  3235     0112                     	;# 
  3236     0113                     	;# 
  3237     0114                     	;# 
  3238     0115                     	;# 
  3239     0116                     	;# 
  3240     0117                     	;# 
  3241     0118                     	;# 
  3242     0119                     	;# 
  3243     0119                     	;# 
  3244     0119                     	;# 
  3245     011A                     	;# 
  3246     011A                     	;# 
  3247     011A                     	;# 
  3248     011B                     	;# 
  3249     011B                     	;# 
  3250     011B                     	;# 
  3251     011B                     	;# 
  3252     011B                     	;# 
  3253     011C                     	;# 
  3254     011C                     	;# 
  3255     011C                     	;# 
  3256     011D                     	;# 
  3257     011D                     	;# 
  3258     011D                     	;# 
  3259     011E                     	;# 
  3260     011E                     	;# 
  3261     011E                     	;# 
  3262     011F                     	;# 
  3263     011F                     	;# 
  3264     011F                     	;# 
  3265     011F                     	;# 
  3266     011F                     	;# 
  3267     018C                     	;# 
  3268     018D                     	;# 
  3269     018E                     	;# 
  3270     018F                     	;# 
  3271     0190                     	;# 
  3272     0191                     	;# 
  3273     0192                     	;# 
  3274     0196                     	;# 
  3275     0197                     	;# 
  3276     0198                     	;# 
  3277     0199                     	;# 
  3278     019A                     	;# 
  3279     019B                     	;# 
  3280     019C                     	;# 
  3281     020C                     	;# 
  3282     020D                     	;# 
  3283     020E                     	;# 
  3284     020E                     	;# 
  3285     020F                     	;# 
  3286     020F                     	;# 
  3287     0210                     	;# 
  3288     0210                     	;# 
  3289     0211                     	;# 
  3290     0211                     	;# 
  3291     0212                     	;# 
  3292     0213                     	;# 
  3293     0214                     	;# 
  3294     0214                     	;# 
  3295     0215                     	;# 
  3296     0215                     	;# 
  3297     0216                     	;# 
  3298     0216                     	;# 
  3299     0217                     	;# 
  3300     0217                     	;# 
  3301     0218                     	;# 
  3302     0219                     	;# 
  3303     021A                     	;# 
  3304     021A                     	;# 
  3305     021B                     	;# 
  3306     021B                     	;# 
  3307     021C                     	;# 
  3308     021C                     	;# 
  3309     021D                     	;# 
  3310     021D                     	;# 
  3311     021E                     	;# 
  3312     021F                     	;# 
  3313     028C                     	;# 
  3314     028C                     	;# 
  3315     028D                     	;# 
  3316     028D                     	;# 
  3317     028E                     	;# 
  3318     028F                     	;# 
  3319     0290                     	;# 
  3320     0291                     	;# 
  3321     0292                     	;# 
  3322     0292                     	;# 
  3323     0293                     	;# 
  3324     0293                     	;# 
  3325     0294                     	;# 
  3326     0295                     	;# 
  3327     0296                     	;# 
  3328     0297                     	;# 
  3329     0298                     	;# 
  3330     0298                     	;# 
  3331     0299                     	;# 
  3332     0299                     	;# 
  3333     029A                     	;# 
  3334     029B                     	;# 
  3335     029C                     	;# 
  3336     029D                     	;# 
  3337     029F                     	;# 
  3338     030C                     	;# 
  3339     030C                     	;# 
  3340     030D                     	;# 
  3341     030E                     	;# 
  3342     030F                     	;# 
  3343     0310                     	;# 
  3344     0310                     	;# 
  3345     0311                     	;# 
  3346     0312                     	;# 
  3347     0313                     	;# 
  3348     0314                     	;# 
  3349     0314                     	;# 
  3350     0315                     	;# 
  3351     0316                     	;# 
  3352     0317                     	;# 
  3353     0318                     	;# 
  3354     0318                     	;# 
  3355     0319                     	;# 
  3356     031A                     	;# 
  3357     031B                     	;# 
  3358     038C                     	;# 
  3359     038C                     	;# 
  3360     038D                     	;# 
  3361     038E                     	;# 
  3362     0390                     	;# 
  3363     0390                     	;# 
  3364     0391                     	;# 
  3365     0392                     	;# 
  3366     048C                     	;# 
  3367     048C                     	;# 
  3368     048D                     	;# 
  3369     048E                     	;# 
  3370     048F                     	;# 
  3371     048F                     	;# 
  3372     0490                     	;# 
  3373     0491                     	;# 
  3374     0492                     	;# 
  3375     0492                     	;# 
  3376     0493                     	;# 
  3377     0494                     	;# 
  3378     0495                     	;# 
  3379     0495                     	;# 
  3380     0496                     	;# 
  3381     0497                     	;# 
  3382     0498                     	;# 
  3383     0499                     	;# 
  3384     049A                     	;# 
  3385     049B                     	;# 
  3386     049C                     	;# 
  3387     049D                     	;# 
  3388     058C                     	;# 
  3389     058C                     	;# 
  3390     058D                     	;# 
  3391     058E                     	;# 
  3392     058F                     	;# 
  3393     058F                     	;# 
  3394     0590                     	;# 
  3395     0591                     	;# 
  3396     0592                     	;# 
  3397     0593                     	;# 
  3398     059C                     	;# 
  3399     059C                     	;# 
  3400     059D                     	;# 
  3401     059D                     	;# 
  3402     059E                     	;# 
  3403     059F                     	;# 
  3404     060C                     	;# 
  3405     060C                     	;# 
  3406     060D                     	;# 
  3407     060D                     	;# 
  3408     060E                     	;# 
  3409     060F                     	;# 
  3410     0610                     	;# 
  3411     0611                     	;# 
  3412     0612                     	;# 
  3413     0613                     	;# 
  3414     0614                     	;# 
  3415     0616                     	;# 
  3416     0616                     	;# 
  3417     0617                     	;# 
  3418     0617                     	;# 
  3419     0618                     	;# 
  3420     0619                     	;# 
  3421     061A                     	;# 
  3422     061B                     	;# 
  3423     061C                     	;# 
  3424     061D                     	;# 
  3425     061E                     	;# 
  3426     070C                     	;# 
  3427     070D                     	;# 
  3428     070E                     	;# 
  3429     070F                     	;# 
  3430     0710                     	;# 
  3431     0711                     	;# 
  3432     0712                     	;# 
  3433     0713                     	;# 
  3434     0714                     	;# 
  3435     0716                     	;# 
  3436     0717                     	;# 
  3437     0718                     	;# 
  3438     0719                     	;# 
  3439     071A                     	;# 
  3440     071B                     	;# 
  3441     071C                     	;# 
  3442     071D                     	;# 
  3443     071E                     	;# 
  3444     0796                     	;# 
  3445     0797                     	;# 
  3446     0798                     	;# 
  3447     0799                     	;# 
  3448     079A                     	;# 
  3449     079B                     	;# 
  3450     079C                     	;# 
  3451     079D                     	;# 
  3452     080C                     	;# 
  3453     080D                     	;# 
  3454     080E                     	;# 
  3455     080F                     	;# 
  3456     0810                     	;# 
  3457     0811                     	;# 
  3458     0812                     	;# 
  3459     0813                     	;# 
  3460     0814                     	;# 
  3461     081A                     	;# 
  3462     081A                     	;# 
  3463     081B                     	;# 
  3464     081C                     	;# 
  3465     081C                     	;# 
  3466     081D                     	;# 
  3467     081E                     	;# 
  3468     081F                     	;# 
  3469     088C                     	;# 
  3470     088D                     	;# 
  3471     088E                     	;# 
  3472     088F                     	;# 
  3473     0890                     	;# 
  3474     0891                     	;# 
  3475     0892                     	;# 
  3476     0893                     	;# 
  3477     0895                     	;# 
  3478     0896                     	;# 
  3479     0897                     	;# 
  3480     0898                     	;# 
  3481     0899                     	;# 
  3482     089A                     	;# 
  3483     089B                     	;# 
  3484     090C                     	;# 
  3485     090E                     	;# 
  3486     090F                     	;# 
  3487     091F                     	;# 
  3488     098F                     	;# 
  3489     098F                     	;# 
  3490     0990                     	;# 
  3491     0991                     	;# 
  3492     0992                     	;# 
  3493     0993                     	;# 
  3494     0994                     	;# 
  3495     0995                     	;# 
  3496     0996                     	;# 
  3497     0997                     	;# 
  3498     1E0F                     	;# 
  3499     1E10                     	;# 
  3500     1E11                     	;# 
  3501     1E12                     	;# 
  3502     1E13                     	;# 
  3503     1E14                     	;# 
  3504     1E15                     	;# 
  3505     1E16                     	;# 
  3506     1E17                     	;# 
  3507     1E18                     	;# 
  3508     1E19                     	;# 
  3509     1E1A                     	;# 
  3510     1E1B                     	;# 
  3511     1E1C                     	;# 
  3512     1E1D                     	;# 
  3513     1E1E                     	;# 
  3514     1E1F                     	;# 
  3515     1E20                     	;# 
  3516     1E21                     	;# 
  3517     1E22                     	;# 
  3518     1E23                     	;# 
  3519     1E24                     	;# 
  3520     1E25                     	;# 
  3521     1E26                     	;# 
  3522     1E27                     	;# 
  3523     1E28                     	;# 
  3524     1E29                     	;# 
  3525     1E2A                     	;# 
  3526     1E2B                     	;# 
  3527     1E2C                     	;# 
  3528     1E2D                     	;# 
  3529     1E2E                     	;# 
  3530     1E2F                     	;# 
  3531     1E30                     	;# 
  3532     1E31                     	;# 
  3533     1E32                     	;# 
  3534     1E33                     	;# 
  3535     1E34                     	;# 
  3536     1E35                     	;# 
  3537     1E36                     	;# 
  3538     1E37                     	;# 
  3539     1E8F                     	;# 
  3540     1E90                     	;# 
  3541     1E91                     	;# 
  3542     1E92                     	;# 
  3543     1E93                     	;# 
  3544     1E94                     	;# 
  3545     1E95                     	;# 
  3546     1E96                     	;# 
  3547     1E97                     	;# 
  3548     1E9C                     	;# 
  3549     1E9D                     	;# 
  3550     1E9E                     	;# 
  3551     1EA1                     	;# 
  3552     1EA2                     	;# 
  3553     1EA3                     	;# 
  3554     1EA4                     	;# 
  3555     1EA9                     	;# 
  3556     1EAA                     	;# 
  3557     1EB1                     	;# 
  3558     1EB2                     	;# 
  3559     1EB8                     	;# 
  3560     1EB9                     	;# 
  3561     1EBA                     	;# 
  3562     1EBB                     	;# 
  3563     1EBC                     	;# 
  3564     1EBD                     	;# 
  3565     1EBE                     	;# 
  3566     1EC3                     	;# 
  3567     1EC5                     	;# 
  3568     1EC6                     	;# 
  3569     1EC7                     	;# 
  3570     1EC8                     	;# 
  3571     1EC9                     	;# 
  3572     1ECA                     	;# 
  3573     1ECB                     	;# 
  3574     1ECC                     	;# 
  3575     1F10                     	;# 
  3576     1F11                     	;# 
  3577     1F12                     	;# 
  3578     1F14                     	;# 
  3579     1F15                     	;# 
  3580     1F20                     	;# 
  3581     1F21                     	;# 
  3582     1F22                     	;# 
  3583     1F23                     	;# 
  3584     1F24                     	;# 
  3585     1F25                     	;# 
  3586     1F38                     	;# 
  3587     1F39                     	;# 
  3588     1F3A                     	;# 
  3589     1F3B                     	;# 
  3590     1F3C                     	;# 
  3591     1F3D                     	;# 
  3592     1F3E                     	;# 
  3593     1F3F                     	;# 
  3594     1F4E                     	;# 
  3595     1F4F                     	;# 
  3596     1F50                     	;# 
  3597     1F51                     	;# 
  3598     1F52                     	;# 
  3599     1F53                     	;# 
  3600     1F54                     	;# 
  3601     1F55                     	;# 
  3602     1FE4                     	;# 
  3603     1FE5                     	;# 
  3604     1FE6                     	;# 
  3605     1FE7                     	;# 
  3606     1FE8                     	;# 
  3607     1FE8                     	;# 
  3608     1FE9                     	;# 
  3609     1FEA                     	;# 
  3610     1FEB                     	;# 
  3611     1FED                     	;# 
  3612     1FEE                     	;# 
  3613     1FEF                     	;# 
  3614     0000                     	;# 
  3615     0001                     	;# 
  3616     0002                     	;# 
  3617     0003                     	;# 
  3618     0004                     	;# 
  3619     0005                     	;# 
  3620     0006                     	;# 
  3621     0007                     	;# 
  3622     0008                     	;# 
  3623     0009                     	;# 
  3624     000A                     	;# 
  3625     000B                     	;# 
  3626     000C                     	;# 
  3627     000E                     	;# 
  3628     0012                     	;# 
  3629     0014                     	;# 
  3630     0018                     	;# 
  3631     001A                     	;# 
  3632     008C                     	;# 
  3633     008C                     	;# 
  3634     008D                     	;# 
  3635     008E                     	;# 
  3636     008E                     	;# 
  3637     008F                     	;# 
  3638     0090                     	;# 
  3639     0090                     	;# 
  3640     0091                     	;# 
  3641     0092                     	;# 
  3642     0092                     	;# 
  3643     0093                     	;# 
  3644     0094                     	;# 
  3645     0094                     	;# 
  3646     0095                     	;# 
  3647     0096                     	;# 
  3648     0096                     	;# 
  3649     0097                     	;# 
  3650     0098                     	;# 
  3651     0099                     	;# 
  3652     009A                     	;# 
  3653     009B                     	;# 
  3654     009B                     	;# 
  3655     009C                     	;# 
  3656     009D                     	;# 
  3657     009D                     	;# 
  3658     009E                     	;# 
  3659     009F                     	;# 
  3660     010C                     	;# 
  3661     010C                     	;# 
  3662     010D                     	;# 
  3663     010E                     	;# 
  3664     010F                     	;# 
  3665     010F                     	;# 
  3666     0110                     	;# 
  3667     0111                     	;# 
  3668     0112                     	;# 
  3669     0113                     	;# 
  3670     0114                     	;# 
  3671     0115                     	;# 
  3672     0116                     	;# 
  3673     0117                     	;# 
  3674     0118                     	;# 
  3675     0119                     	;# 
  3676     0119                     	;# 
  3677     0119                     	;# 
  3678     011A                     	;# 
  3679     011A                     	;# 
  3680     011A                     	;# 
  3681     011B                     	;# 
  3682     011B                     	;# 
  3683     011B                     	;# 
  3684     011B                     	;# 
  3685     011B                     	;# 
  3686     011C                     	;# 
  3687     011C                     	;# 
  3688     011C                     	;# 
  3689     011D                     	;# 
  3690     011D                     	;# 
  3691     011D                     	;# 
  3692     011E                     	;# 
  3693     011E                     	;# 
  3694     011E                     	;# 
  3695     011F                     	;# 
  3696     011F                     	;# 
  3697     011F                     	;# 
  3698     011F                     	;# 
  3699     011F                     	;# 
  3700     018C                     	;# 
  3701     018D                     	;# 
  3702     018E                     	;# 
  3703     018F                     	;# 
  3704     0190                     	;# 
  3705     0191                     	;# 
  3706     0192                     	;# 
  3707     0196                     	;# 
  3708     0197                     	;# 
  3709     0198                     	;# 
  3710     0199                     	;# 
  3711     019A                     	;# 
  3712     019B                     	;# 
  3713     019C                     	;# 
  3714     020C                     	;# 
  3715     020D                     	;# 
  3716     020E                     	;# 
  3717     020E                     	;# 
  3718     020F                     	;# 
  3719     020F                     	;# 
  3720     0210                     	;# 
  3721     0210                     	;# 
  3722     0211                     	;# 
  3723     0211                     	;# 
  3724     0212                     	;# 
  3725     0213                     	;# 
  3726     0214                     	;# 
  3727     0214                     	;# 
  3728     0215                     	;# 
  3729     0215                     	;# 
  3730     0216                     	;# 
  3731     0216                     	;# 
  3732     0217                     	;# 
  3733     0217                     	;# 
  3734     0218                     	;# 
  3735     0219                     	;# 
  3736     021A                     	;# 
  3737     021A                     	;# 
  3738     021B                     	;# 
  3739     021B                     	;# 
  3740     021C                     	;# 
  3741     021C                     	;# 
  3742     021D                     	;# 
  3743     021D                     	;# 
  3744     021E                     	;# 
  3745     021F                     	;# 
  3746     028C                     	;# 
  3747     028C                     	;# 
  3748     028D                     	;# 
  3749     028D                     	;# 
  3750     028E                     	;# 
  3751     028F                     	;# 
  3752     0290                     	;# 
  3753     0291                     	;# 
  3754     0292                     	;# 
  3755     0292                     	;# 
  3756     0293                     	;# 
  3757     0293                     	;# 
  3758     0294                     	;# 
  3759     0295                     	;# 
  3760     0296                     	;# 
  3761     0297                     	;# 
  3762     0298                     	;# 
  3763     0298                     	;# 
  3764     0299                     	;# 
  3765     0299                     	;# 
  3766     029A                     	;# 
  3767     029B                     	;# 
  3768     029C                     	;# 
  3769     029D                     	;# 
  3770     029F                     	;# 
  3771     030C                     	;# 
  3772     030C                     	;# 
  3773     030D                     	;# 
  3774     030E                     	;# 
  3775     030F                     	;# 
  3776     0310                     	;# 
  3777     0310                     	;# 
  3778     0311                     	;# 
  3779     0312                     	;# 
  3780     0313                     	;# 
  3781     0314                     	;# 
  3782     0314                     	;# 
  3783     0315                     	;# 
  3784     0316                     	;# 
  3785     0317                     	;# 
  3786     0318                     	;# 
  3787     0318                     	;# 
  3788     0319                     	;# 
  3789     031A                     	;# 
  3790     031B                     	;# 
  3791     038C                     	;# 
  3792     038C                     	;# 
  3793     038D                     	;# 
  3794     038E                     	;# 
  3795     0390                     	;# 
  3796     0390                     	;# 
  3797     0391                     	;# 
  3798     0392                     	;# 
  3799     048C                     	;# 
  3800     048C                     	;# 
  3801     048D                     	;# 
  3802     048E                     	;# 
  3803     048F                     	;# 
  3804     048F                     	;# 
  3805     0490                     	;# 
  3806     0491                     	;# 
  3807     0492                     	;# 
  3808     0492                     	;# 
  3809     0493                     	;# 
  3810     0494                     	;# 
  3811     0495                     	;# 
  3812     0495                     	;# 
  3813     0496                     	;# 
  3814     0497                     	;# 
  3815     0498                     	;# 
  3816     0499                     	;# 
  3817     049A                     	;# 
  3818     049B                     	;# 
  3819     049C                     	;# 
  3820     049D                     	;# 
  3821     058C                     	;# 
  3822     058C                     	;# 
  3823     058D                     	;# 
  3824     058E                     	;# 
  3825     058F                     	;# 
  3826     058F                     	;# 
  3827     0590                     	;# 
  3828     0591                     	;# 
  3829     0592                     	;# 
  3830     0593                     	;# 
  3831     059C                     	;# 
  3832     059C                     	;# 
  3833     059D                     	;# 
  3834     059D                     	;# 
  3835     059E                     	;# 
  3836     059F                     	;# 
  3837     060C                     	;# 
  3838     060C                     	;# 
  3839     060D                     	;# 
  3840     060D                     	;# 
  3841     060E                     	;# 
  3842     060F                     	;# 
  3843     0610                     	;# 
  3844     0611                     	;# 
  3845     0612                     	;# 
  3846     0613                     	;# 
  3847     0614                     	;# 
  3848     0616                     	;# 
  3849     0616                     	;# 
  3850     0617                     	;# 
  3851     0617                     	;# 
  3852     0618                     	;# 
  3853     0619                     	;# 
  3854     061A                     	;# 
  3855     061B                     	;# 
  3856     061C                     	;# 
  3857     061D                     	;# 
  3858     061E                     	;# 
  3859     070C                     	;# 
  3860     070D                     	;# 
  3861     070E                     	;# 
  3862     070F                     	;# 
  3863     0710                     	;# 
  3864     0711                     	;# 
  3865     0712                     	;# 
  3866     0713                     	;# 
  3867     0714                     	;# 
  3868     0716                     	;# 
  3869     0717                     	;# 
  3870     0718                     	;# 
  3871     0719                     	;# 
  3872     071A                     	;# 
  3873     071B                     	;# 
  3874     071C                     	;# 
  3875     071D                     	;# 
  3876     071E                     	;# 
  3877     0796                     	;# 
  3878     0797                     	;# 
  3879     0798                     	;# 
  3880     0799                     	;# 
  3881     079A                     	;# 
  3882     079B                     	;# 
  3883     079C                     	;# 
  3884     079D                     	;# 
  3885     080C                     	;# 
  3886     080D                     	;# 
  3887     080E                     	;# 
  3888     080F                     	;# 
  3889     0810                     	;# 
  3890     0811                     	;# 
  3891     0812                     	;# 
  3892     0813                     	;# 
  3893     0814                     	;# 
  3894     081A                     	;# 
  3895     081A                     	;# 
  3896     081B                     	;# 
  3897     081C                     	;# 
  3898     081C                     	;# 
  3899     081D                     	;# 
  3900     081E                     	;# 
  3901     081F                     	;# 
  3902     088C                     	;# 
  3903     088D                     	;# 
  3904     088E                     	;# 
  3905     088F                     	;# 
  3906     0890                     	;# 
  3907     0891                     	;# 
  3908     0892                     	;# 
  3909     0893                     	;# 
  3910     0895                     	;# 
  3911     0896                     	;# 
  3912     0897                     	;# 
  3913     0898                     	;# 
  3914     0899                     	;# 
  3915     089A                     	;# 
  3916     089B                     	;# 
  3917     090C                     	;# 
  3918     090E                     	;# 
  3919     090F                     	;# 
  3920     091F                     	;# 
  3921     098F                     	;# 
  3922     098F                     	;# 
  3923     0990                     	;# 
  3924     0991                     	;# 
  3925     0992                     	;# 
  3926     0993                     	;# 
  3927     0994                     	;# 
  3928     0995                     	;# 
  3929     0996                     	;# 
  3930     0997                     	;# 
  3931     1E0F                     	;# 
  3932     1E10                     	;# 
  3933     1E11                     	;# 
  3934     1E12                     	;# 
  3935     1E13                     	;# 
  3936     1E14                     	;# 
  3937     1E15                     	;# 
  3938     1E16                     	;# 
  3939     1E17                     	;# 
  3940     1E18                     	;# 
  3941     1E19                     	;# 
  3942     1E1A                     	;# 
  3943     1E1B                     	;# 
  3944     1E1C                     	;# 
  3945     1E1D                     	;# 
  3946     1E1E                     	;# 
  3947     1E1F                     	;# 
  3948     1E20                     	;# 
  3949     1E21                     	;# 
  3950     1E22                     	;# 
  3951     1E23                     	;# 
  3952     1E24                     	;# 
  3953     1E25                     	;# 
  3954     1E26                     	;# 
  3955     1E27                     	;# 
  3956     1E28                     	;# 
  3957     1E29                     	;# 
  3958     1E2A                     	;# 
  3959     1E2B                     	;# 
  3960     1E2C                     	;# 
  3961     1E2D                     	;# 
  3962     1E2E                     	;# 
  3963     1E2F                     	;# 
  3964     1E30                     	;# 
  3965     1E31                     	;# 
  3966     1E32                     	;# 
  3967     1E33                     	;# 
  3968     1E34                     	;# 
  3969     1E35                     	;# 
  3970     1E36                     	;# 
  3971     1E37                     	;# 
  3972     1E8F                     	;# 
  3973     1E90                     	;# 
  3974     1E91                     	;# 
  3975     1E92                     	;# 
  3976     1E93                     	;# 
  3977     1E94                     	;# 
  3978     1E95                     	;# 
  3979     1E96                     	;# 
  3980     1E97                     	;# 
  3981     1E9C                     	;# 
  3982     1E9D                     	;# 
  3983     1E9E                     	;# 
  3984     1EA1                     	;# 
  3985     1EA2                     	;# 
  3986     1EA3                     	;# 
  3987     1EA4                     	;# 
  3988     1EA9                     	;# 
  3989     1EAA                     	;# 
  3990     1EB1                     	;# 
  3991     1EB2                     	;# 
  3992     1EB8                     	;# 
  3993     1EB9                     	;# 
  3994     1EBA                     	;# 
  3995     1EBB                     	;# 
  3996     1EBC                     	;# 
  3997     1EBD                     	;# 
  3998     1EBE                     	;# 
  3999     1EC3                     	;# 
  4000     1EC5                     	;# 
  4001     1EC6                     	;# 
  4002     1EC7                     	;# 
  4003     1EC8                     	;# 
  4004     1EC9                     	;# 
  4005     1ECA                     	;# 
  4006     1ECB                     	;# 
  4007     1ECC                     	;# 
  4008     1F10                     	;# 
  4009     1F11                     	;# 
  4010     1F12                     	;# 
  4011     1F14                     	;# 
  4012     1F15                     	;# 
  4013     1F20                     	;# 
  4014     1F21                     	;# 
  4015     1F22                     	;# 
  4016     1F23                     	;# 
  4017     1F24                     	;# 
  4018     1F25                     	;# 
  4019     1F38                     	;# 
  4020     1F39                     	;# 
  4021     1F3A                     	;# 
  4022     1F3B                     	;# 
  4023     1F3C                     	;# 
  4024     1F3D                     	;# 
  4025     1F3E                     	;# 
  4026     1F3F                     	;# 
  4027     1F4E                     	;# 
  4028     1F4F                     	;# 
  4029     1F50                     	;# 
  4030     1F51                     	;# 
  4031     1F52                     	;# 
  4032     1F53                     	;# 
  4033     1F54                     	;# 
  4034     1F55                     	;# 
  4035     1FE4                     	;# 
  4036     1FE5                     	;# 
  4037     1FE6                     	;# 
  4038     1FE7                     	;# 
  4039     1FE8                     	;# 
  4040     1FE8                     	;# 
  4041     1FE9                     	;# 
  4042     1FEA                     	;# 
  4043     1FEB                     	;# 
  4044     1FED                     	;# 
  4045     1FEE                     	;# 
  4046     1FEF                     	;# 
  4047     0000                     	;# 
  4048     0001                     	;# 
  4049     0002                     	;# 
  4050     0003                     	;# 
  4051     0004                     	;# 
  4052     0005                     	;# 
  4053     0006                     	;# 
  4054     0007                     	;# 
  4055     0008                     	;# 
  4056     0009                     	;# 
  4057     000A                     	;# 
  4058     000B                     	;# 
  4059     000C                     	;# 
  4060     000E                     	;# 
  4061     0012                     	;# 
  4062     0014                     	;# 
  4063     0018                     	;# 
  4064     001A                     	;# 
  4065     008C                     	;# 
  4066     008C                     	;# 
  4067     008D                     	;# 
  4068     008E                     	;# 
  4069     008E                     	;# 
  4070     008F                     	;# 
  4071     0090                     	;# 
  4072     0090                     	;# 
  4073     0091                     	;# 
  4074     0092                     	;# 
  4075     0092                     	;# 
  4076     0093                     	;# 
  4077     0094                     	;# 
  4078     0094                     	;# 
  4079     0095                     	;# 
  4080     0096                     	;# 
  4081     0096                     	;# 
  4082     0097                     	;# 
  4083     0098                     	;# 
  4084     0099                     	;# 
  4085     009A                     	;# 
  4086     009B                     	;# 
  4087     009B                     	;# 
  4088     009C                     	;# 
  4089     009D                     	;# 
  4090     009D                     	;# 
  4091     009E                     	;# 
  4092     009F                     	;# 
  4093     010C                     	;# 
  4094     010C                     	;# 
  4095     010D                     	;# 
  4096     010E                     	;# 
  4097     010F                     	;# 
  4098     010F                     	;# 
  4099     0110                     	;# 
  4100     0111                     	;# 
  4101     0112                     	;# 
  4102     0113                     	;# 
  4103     0114                     	;# 
  4104     0115                     	;# 
  4105     0116                     	;# 
  4106     0117                     	;# 
  4107     0118                     	;# 
  4108     0119                     	;# 
  4109     0119                     	;# 
  4110     0119                     	;# 
  4111     011A                     	;# 
  4112     011A                     	;# 
  4113     011A                     	;# 
  4114     011B                     	;# 
  4115     011B                     	;# 
  4116     011B                     	;# 
  4117     011B                     	;# 
  4118     011B                     	;# 
  4119     011C                     	;# 
  4120     011C                     	;# 
  4121     011C                     	;# 
  4122     011D                     	;# 
  4123     011D                     	;# 
  4124     011D                     	;# 
  4125     011E                     	;# 
  4126     011E                     	;# 
  4127     011E                     	;# 
  4128     011F                     	;# 
  4129     011F                     	;# 
  4130     011F                     	;# 
  4131     011F                     	;# 
  4132     011F                     	;# 
  4133     018C                     	;# 
  4134     018D                     	;# 
  4135     018E                     	;# 
  4136     018F                     	;# 
  4137     0190                     	;# 
  4138     0191                     	;# 
  4139     0192                     	;# 
  4140     0196                     	;# 
  4141     0197                     	;# 
  4142     0198                     	;# 
  4143     0199                     	;# 
  4144     019A                     	;# 
  4145     019B                     	;# 
  4146     019C                     	;# 
  4147     020C                     	;# 
  4148     020D                     	;# 
  4149     020E                     	;# 
  4150     020E                     	;# 
  4151     020F                     	;# 
  4152     020F                     	;# 
  4153     0210                     	;# 
  4154     0210                     	;# 
  4155     0211                     	;# 
  4156     0211                     	;# 
  4157     0212                     	;# 
  4158     0213                     	;# 
  4159     0214                     	;# 
  4160     0214                     	;# 
  4161     0215                     	;# 
  4162     0215                     	;# 
  4163     0216                     	;# 
  4164     0216                     	;# 
  4165     0217                     	;# 
  4166     0217                     	;# 
  4167     0218                     	;# 
  4168     0219                     	;# 
  4169     021A                     	;# 
  4170     021A                     	;# 
  4171     021B                     	;# 
  4172     021B                     	;# 
  4173     021C                     	;# 
  4174     021C                     	;# 
  4175     021D                     	;# 
  4176     021D                     	;# 
  4177     021E                     	;# 
  4178     021F                     	;# 
  4179     028C                     	;# 
  4180     028C                     	;# 
  4181     028D                     	;# 
  4182     028D                     	;# 
  4183     028E                     	;# 
  4184     028F                     	;# 
  4185     0290                     	;# 
  4186     0291                     	;# 
  4187     0292                     	;# 
  4188     0292                     	;# 
  4189     0293                     	;# 
  4190     0293                     	;# 
  4191     0294                     	;# 
  4192     0295                     	;# 
  4193     0296                     	;# 
  4194     0297                     	;# 
  4195     0298                     	;# 
  4196     0298                     	;# 
  4197     0299                     	;# 
  4198     0299                     	;# 
  4199     029A                     	;# 
  4200     029B                     	;# 
  4201     029C                     	;# 
  4202     029D                     	;# 
  4203     029F                     	;# 
  4204     030C                     	;# 
  4205     030C                     	;# 
  4206     030D                     	;# 
  4207     030E                     	;# 
  4208     030F                     	;# 
  4209     0310                     	;# 
  4210     0310                     	;# 
  4211     0311                     	;# 
  4212     0312                     	;# 
  4213     0313                     	;# 
  4214     0314                     	;# 
  4215     0314                     	;# 
  4216     0315                     	;# 
  4217     0316                     	;# 
  4218     0317                     	;# 
  4219     0318                     	;# 
  4220     0318                     	;# 
  4221     0319                     	;# 
  4222     031A                     	;# 
  4223     031B                     	;# 
  4224     038C                     	;# 
  4225     038C                     	;# 
  4226     038D                     	;# 
  4227     038E                     	;# 
  4228     0390                     	;# 
  4229     0390                     	;# 
  4230     0391                     	;# 
  4231     0392                     	;# 
  4232     048C                     	;# 
  4233     048C                     	;# 
  4234     048D                     	;# 
  4235     048E                     	;# 
  4236     048F                     	;# 
  4237     048F                     	;# 
  4238     0490                     	;# 
  4239     0491                     	;# 
  4240     0492                     	;# 
  4241     0492                     	;# 
  4242     0493                     	;# 
  4243     0494                     	;# 
  4244     0495                     	;# 
  4245     0495                     	;# 
  4246     0496                     	;# 
  4247     0497                     	;# 
  4248     0498                     	;# 
  4249     0499                     	;# 
  4250     049A                     	;# 
  4251     049B                     	;# 
  4252     049C                     	;# 
  4253     049D                     	;# 
  4254     058C                     	;# 
  4255     058C                     	;# 
  4256     058D                     	;# 
  4257     058E                     	;# 
  4258     058F                     	;# 
  4259     058F                     	;# 
  4260     0590                     	;# 
  4261     0591                     	;# 
  4262     0592                     	;# 
  4263     0593                     	;# 
  4264     059C                     	;# 
  4265     059C                     	;# 
  4266     059D                     	;# 
  4267     059D                     	;# 
  4268     059E                     	;# 
  4269     059F                     	;# 
  4270     060C                     	;# 
  4271     060C                     	;# 
  4272     060D                     	;# 
  4273     060D                     	;# 
  4274     060E                     	;# 
  4275     060F                     	;# 
  4276     0610                     	;# 
  4277     0611                     	;# 
  4278     0612                     	;# 
  4279     0613                     	;# 
  4280     0614                     	;# 
  4281     0616                     	;# 
  4282     0616                     	;# 
  4283     0617                     	;# 
  4284     0617                     	;# 
  4285     0618                     	;# 
  4286     0619                     	;# 
  4287     061A                     	;# 
  4288     061B                     	;# 
  4289     061C                     	;# 
  4290     061D                     	;# 
  4291     061E                     	;# 
  4292     070C                     	;# 
  4293     070D                     	;# 
  4294     070E                     	;# 
  4295     070F                     	;# 
  4296     0710                     	;# 
  4297     0711                     	;# 
  4298     0712                     	;# 
  4299     0713                     	;# 
  4300     0714                     	;# 
  4301     0716                     	;# 
  4302     0717                     	;# 
  4303     0718                     	;# 
  4304     0719                     	;# 
  4305     071A                     	;# 
  4306     071B                     	;# 
  4307     071C                     	;# 
  4308     071D                     	;# 
  4309     071E                     	;# 
  4310     0796                     	;# 
  4311     0797                     	;# 
  4312     0798                     	;# 
  4313     0799                     	;# 
  4314     079A                     	;# 
  4315     079B                     	;# 
  4316     079C                     	;# 
  4317     079D                     	;# 
  4318     080C                     	;# 
  4319     080D                     	;# 
  4320     080E                     	;# 
  4321     080F                     	;# 
  4322     0810                     	;# 
  4323     0811                     	;# 
  4324     0812                     	;# 
  4325     0813                     	;# 
  4326     0814                     	;# 
  4327     081A                     	;# 
  4328     081A                     	;# 
  4329     081B                     	;# 
  4330     081C                     	;# 
  4331     081C                     	;# 
  4332     081D                     	;# 
  4333     081E                     	;# 
  4334     081F                     	;# 
  4335     088C                     	;# 
  4336     088D                     	;# 
  4337     088E                     	;# 
  4338     088F                     	;# 
  4339     0890                     	;# 
  4340     0891                     	;# 
  4341     0892                     	;# 
  4342     0893                     	;# 
  4343     0895                     	;# 
  4344     0896                     	;# 
  4345     0897                     	;# 
  4346     0898                     	;# 
  4347     0899                     	;# 
  4348     089A                     	;# 
  4349     089B                     	;# 
  4350     090C                     	;# 
  4351     090E                     	;# 
  4352     090F                     	;# 
  4353     091F                     	;# 
  4354     098F                     	;# 
  4355     098F                     	;# 
  4356     0990                     	;# 
  4357     0991                     	;# 
  4358     0992                     	;# 
  4359     0993                     	;# 
  4360     0994                     	;# 
  4361     0995                     	;# 
  4362     0996                     	;# 
  4363     0997                     	;# 
  4364     1E0F                     	;# 
  4365     1E10                     	;# 
  4366     1E11                     	;# 
  4367     1E12                     	;# 
  4368     1E13                     	;# 
  4369     1E14                     	;# 
  4370     1E15                     	;# 
  4371     1E16                     	;# 
  4372     1E17                     	;# 
  4373     1E18                     	;# 
  4374     1E19                     	;# 
  4375     1E1A                     	;# 
  4376     1E1B                     	;# 
  4377     1E1C                     	;# 
  4378     1E1D                     	;# 
  4379     1E1E                     	;# 
  4380     1E1F                     	;# 
  4381     1E20                     	;# 
  4382     1E21                     	;# 
  4383     1E22                     	;# 
  4384     1E23                     	;# 
  4385     1E24                     	;# 
  4386     1E25                     	;# 
  4387     1E26                     	;# 
  4388     1E27                     	;# 
  4389     1E28                     	;# 
  4390     1E29                     	;# 
  4391     1E2A                     	;# 
  4392     1E2B                     	;# 
  4393     1E2C                     	;# 
  4394     1E2D                     	;# 
  4395     1E2E                     	;# 
  4396     1E2F                     	;# 
  4397     1E30                     	;# 
  4398     1E31                     	;# 
  4399     1E32                     	;# 
  4400     1E33                     	;# 
  4401     1E34                     	;# 
  4402     1E35                     	;# 
  4403     1E36                     	;# 
  4404     1E37                     	;# 
  4405     1E8F                     	;# 
  4406     1E90                     	;# 
  4407     1E91                     	;# 
  4408     1E92                     	;# 
  4409     1E93                     	;# 
  4410     1E94                     	;# 
  4411     1E95                     	;# 
  4412     1E96                     	;# 
  4413     1E97                     	;# 
  4414     1E9C                     	;# 
  4415     1E9D                     	;# 
  4416     1E9E                     	;# 
  4417     1EA1                     	;# 
  4418     1EA2                     	;# 
  4419     1EA3                     	;# 
  4420     1EA4                     	;# 
  4421     1EA9                     	;# 
  4422     1EAA                     	;# 
  4423     1EB1                     	;# 
  4424     1EB2                     	;# 
  4425     1EB8                     	;# 
  4426     1EB9                     	;# 
  4427     1EBA                     	;# 
  4428     1EBB                     	;# 
  4429     1EBC                     	;# 
  4430     1EBD                     	;# 
  4431     1EBE                     	;# 
  4432     1EC3                     	;# 
  4433     1EC5                     	;# 
  4434     1EC6                     	;# 
  4435     1EC7                     	;# 
  4436     1EC8                     	;# 
  4437     1EC9                     	;# 
  4438     1ECA                     	;# 
  4439     1ECB                     	;# 
  4440     1ECC                     	;# 
  4441     1F10                     	;# 
  4442     1F11                     	;# 
  4443     1F12                     	;# 
  4444     1F14                     	;# 
  4445     1F15                     	;# 
  4446     1F20                     	;# 
  4447     1F21                     	;# 
  4448     1F22                     	;# 
  4449     1F23                     	;# 
  4450     1F24                     	;# 
  4451     1F25                     	;# 
  4452     1F38                     	;# 
  4453     1F39                     	;# 
  4454     1F3A                     	;# 
  4455     1F3B                     	;# 
  4456     1F3C                     	;# 
  4457     1F3D                     	;# 
  4458     1F3E                     	;# 
  4459     1F3F                     	;# 
  4460     1F4E                     	;# 
  4461     1F4F                     	;# 
  4462     1F50                     	;# 
  4463     1F51                     	;# 
  4464     1F52                     	;# 
  4465     1F53                     	;# 
  4466     1F54                     	;# 
  4467     1F55                     	;# 
  4468     1FE4                     	;# 
  4469     1FE5                     	;# 
  4470     1FE6                     	;# 
  4471     1FE7                     	;# 
  4472     1FE8                     	;# 
  4473     1FE8                     	;# 
  4474     1FE9                     	;# 
  4475     1FEA                     	;# 
  4476     1FEB                     	;# 
  4477     1FED                     	;# 
  4478     1FEE                     	;# 
  4479     1FEF                     	;# 
  4480     0000                     	;# 
  4481     0001                     	;# 
  4482     0002                     	;# 
  4483     0003                     	;# 
  4484     0004                     	;# 
  4485     0005                     	;# 
  4486     0006                     	;# 
  4487     0007                     	;# 
  4488     0008                     	;# 
  4489     0009                     	;# 
  4490     000A                     	;# 
  4491     000B                     	;# 
  4492     000C                     	;# 
  4493     000E                     	;# 
  4494     0012                     	;# 
  4495     0014                     	;# 
  4496     0018                     	;# 
  4497     001A                     	;# 
  4498     008C                     	;# 
  4499     008C                     	;# 
  4500     008D                     	;# 
  4501     008E                     	;# 
  4502     008E                     	;# 
  4503     008F                     	;# 
  4504     0090                     	;# 
  4505     0090                     	;# 
  4506     0091                     	;# 
  4507     0092                     	;# 
  4508     0092                     	;# 
  4509     0093                     	;# 
  4510     0094                     	;# 
  4511     0094                     	;# 
  4512     0095                     	;# 
  4513     0096                     	;# 
  4514     0096                     	;# 
  4515     0097                     	;# 
  4516     0098                     	;# 
  4517     0099                     	;# 
  4518     009A                     	;# 
  4519     009B                     	;# 
  4520     009B                     	;# 
  4521     009C                     	;# 
  4522     009D                     	;# 
  4523     009D                     	;# 
  4524     009E                     	;# 
  4525     009F                     	;# 
  4526     010C                     	;# 
  4527     010C                     	;# 
  4528     010D                     	;# 
  4529     010E                     	;# 
  4530     010F                     	;# 
  4531     010F                     	;# 
  4532     0110                     	;# 
  4533     0111                     	;# 
  4534     0112                     	;# 
  4535     0113                     	;# 
  4536     0114                     	;# 
  4537     0115                     	;# 
  4538     0116                     	;# 
  4539     0117                     	;# 
  4540     0118                     	;# 
  4541     0119                     	;# 
  4542     0119                     	;# 
  4543     0119                     	;# 
  4544     011A                     	;# 
  4545     011A                     	;# 
  4546     011A                     	;# 
  4547     011B                     	;# 
  4548     011B                     	;# 
  4549     011B                     	;# 
  4550     011B                     	;# 
  4551     011B                     	;# 
  4552     011C                     	;# 
  4553     011C                     	;# 
  4554     011C                     	;# 
  4555     011D                     	;# 
  4556     011D                     	;# 
  4557     011D                     	;# 
  4558     011E                     	;# 
  4559     011E                     	;# 
  4560     011E                     	;# 
  4561     011F                     	;# 
  4562     011F                     	;# 
  4563     011F                     	;# 
  4564     011F                     	;# 
  4565     011F                     	;# 
  4566     018C                     	;# 
  4567     018D                     	;# 
  4568     018E                     	;# 
  4569     018F                     	;# 
  4570     0190                     	;# 
  4571     0191                     	;# 
  4572     0192                     	;# 
  4573     0196                     	;# 
  4574     0197                     	;# 
  4575     0198                     	;# 
  4576     0199                     	;# 
  4577     019A                     	;# 
  4578     019B                     	;# 
  4579     019C                     	;# 
  4580     020C                     	;# 
  4581     020D                     	;# 
  4582     020E                     	;# 
  4583     020E                     	;# 
  4584     020F                     	;# 
  4585     020F                     	;# 
  4586     0210                     	;# 
  4587     0210                     	;# 
  4588     0211                     	;# 
  4589     0211                     	;# 
  4590     0212                     	;# 
  4591     0213                     	;# 
  4592     0214                     	;# 
  4593     0214                     	;# 
  4594     0215                     	;# 
  4595     0215                     	;# 
  4596     0216                     	;# 
  4597     0216                     	;# 
  4598     0217                     	;# 
  4599     0217                     	;# 
  4600     0218                     	;# 
  4601     0219                     	;# 
  4602     021A                     	;# 
  4603     021A                     	;# 
  4604     021B                     	;# 
  4605     021B                     	;# 
  4606     021C                     	;# 
  4607     021C                     	;# 
  4608     021D                     	;# 
  4609     021D                     	;# 
  4610     021E                     	;# 
  4611     021F                     	;# 
  4612     028C                     	;# 
  4613     028C                     	;# 
  4614     028D                     	;# 
  4615     028D                     	;# 
  4616     028E                     	;# 
  4617     028F                     	;# 
  4618     0290                     	;# 
  4619     0291                     	;# 
  4620     0292                     	;# 
  4621     0292                     	;# 
  4622     0293                     	;# 
  4623     0293                     	;# 
  4624     0294                     	;# 
  4625     0295                     	;# 
  4626     0296                     	;# 
  4627     0297                     	;# 
  4628     0298                     	;# 
  4629     0298                     	;# 
  4630     0299                     	;# 
  4631     0299                     	;# 
  4632     029A                     	;# 
  4633     029B                     	;# 
  4634     029C                     	;# 
  4635     029D                     	;# 
  4636     029F                     	;# 
  4637     030C                     	;# 
  4638     030C                     	;# 
  4639     030D                     	;# 
  4640     030E                     	;# 
  4641     030F                     	;# 
  4642     0310                     	;# 
  4643     0310                     	;# 
  4644     0311                     	;# 
  4645     0312                     	;# 
  4646     0313                     	;# 
  4647     0314                     	;# 
  4648     0314                     	;# 
  4649     0315                     	;# 
  4650     0316                     	;# 
  4651     0317                     	;# 
  4652     0318                     	;# 
  4653     0318                     	;# 
  4654     0319                     	;# 
  4655     031A                     	;# 
  4656     031B                     	;# 
  4657     038C                     	;# 
  4658     038C                     	;# 
  4659     038D                     	;# 
  4660     038E                     	;# 
  4661     0390                     	;# 
  4662     0390                     	;# 
  4663     0391                     	;# 
  4664     0392                     	;# 
  4665     048C                     	;# 
  4666     048C                     	;# 
  4667     048D                     	;# 
  4668     048E                     	;# 
  4669     048F                     	;# 
  4670     048F                     	;# 
  4671     0490                     	;# 
  4672     0491                     	;# 
  4673     0492                     	;# 
  4674     0492                     	;# 
  4675     0493                     	;# 
  4676     0494                     	;# 
  4677     0495                     	;# 
  4678     0495                     	;# 
  4679     0496                     	;# 
  4680     0497                     	;# 
  4681     0498                     	;# 
  4682     0499                     	;# 
  4683     049A                     	;# 
  4684     049B                     	;# 
  4685     049C                     	;# 
  4686     049D                     	;# 
  4687     058C                     	;# 
  4688     058C                     	;# 
  4689     058D                     	;# 
  4690     058E                     	;# 
  4691     058F                     	;# 
  4692     058F                     	;# 
  4693     0590                     	;# 
  4694     0591                     	;# 
  4695     0592                     	;# 
  4696     0593                     	;# 
  4697     059C                     	;# 
  4698     059C                     	;# 
  4699     059D                     	;# 
  4700     059D                     	;# 
  4701     059E                     	;# 
  4702     059F                     	;# 
  4703     060C                     	;# 
  4704     060C                     	;# 
  4705     060D                     	;# 
  4706     060D                     	;# 
  4707     060E                     	;# 
  4708     060F                     	;# 
  4709     0610                     	;# 
  4710     0611                     	;# 
  4711     0612                     	;# 
  4712     0613                     	;# 
  4713     0614                     	;# 
  4714     0616                     	;# 
  4715     0616                     	;# 
  4716     0617                     	;# 
  4717     0617                     	;# 
  4718     0618                     	;# 
  4719     0619                     	;# 
  4720     061A                     	;# 
  4721     061B                     	;# 
  4722     061C                     	;# 
  4723     061D                     	;# 
  4724     061E                     	;# 
  4725     070C                     	;# 
  4726     070D                     	;# 
  4727     070E                     	;# 
  4728     070F                     	;# 
  4729     0710                     	;# 
  4730     0711                     	;# 
  4731     0712                     	;# 
  4732     0713                     	;# 
  4733     0714                     	;# 
  4734     0716                     	;# 
  4735     0717                     	;# 
  4736     0718                     	;# 
  4737     0719                     	;# 
  4738     071A                     	;# 
  4739     071B                     	;# 
  4740     071C                     	;# 
  4741     071D                     	;# 
  4742     071E                     	;# 
  4743     0796                     	;# 
  4744     0797                     	;# 
  4745     0798                     	;# 
  4746     0799                     	;# 
  4747     079A                     	;# 
  4748     079B                     	;# 
  4749     079C                     	;# 
  4750     079D                     	;# 
  4751     080C                     	;# 
  4752     080D                     	;# 
  4753     080E                     	;# 
  4754     080F                     	;# 
  4755     0810                     	;# 
  4756     0811                     	;# 
  4757     0812                     	;# 
  4758     0813                     	;# 
  4759     0814                     	;# 
  4760     081A                     	;# 
  4761     081A                     	;# 
  4762     081B                     	;# 
  4763     081C                     	;# 
  4764     081C                     	;# 
  4765     081D                     	;# 
  4766     081E                     	;# 
  4767     081F                     	;# 
  4768     088C                     	;# 
  4769     088D                     	;# 
  4770     088E                     	;# 
  4771     088F                     	;# 
  4772     0890                     	;# 
  4773     0891                     	;# 
  4774     0892                     	;# 
  4775     0893                     	;# 
  4776     0895                     	;# 
  4777     0896                     	;# 
  4778     0897                     	;# 
  4779     0898                     	;# 
  4780     0899                     	;# 
  4781     089A                     	;# 
  4782     089B                     	;# 
  4783     090C                     	;# 
  4784     090E                     	;# 
  4785     090F                     	;# 
  4786     091F                     	;# 
  4787     098F                     	;# 
  4788     098F                     	;# 
  4789     0990                     	;# 
  4790     0991                     	;# 
  4791     0992                     	;# 
  4792     0993                     	;# 
  4793     0994                     	;# 
  4794     0995                     	;# 
  4795     0996                     	;# 
  4796     0997                     	;# 
  4797     1E0F                     	;# 
  4798     1E10                     	;# 
  4799     1E11                     	;# 
  4800     1E12                     	;# 
  4801     1E13                     	;# 
  4802     1E14                     	;# 
  4803     1E15                     	;# 
  4804     1E16                     	;# 
  4805     1E17                     	;# 
  4806     1E18                     	;# 
  4807     1E19                     	;# 
  4808     1E1A                     	;# 
  4809     1E1B                     	;# 
  4810     1E1C                     	;# 
  4811     1E1D                     	;# 
  4812     1E1E                     	;# 
  4813     1E1F                     	;# 
  4814     1E20                     	;# 
  4815     1E21                     	;# 
  4816     1E22                     	;# 
  4817     1E23                     	;# 
  4818     1E24                     	;# 
  4819     1E25                     	;# 
  4820     1E26                     	;# 
  4821     1E27                     	;# 
  4822     1E28                     	;# 
  4823     1E29                     	;# 
  4824     1E2A                     	;# 
  4825     1E2B                     	;# 
  4826     1E2C                     	;# 
  4827     1E2D                     	;# 
  4828     1E2E                     	;# 
  4829     1E2F                     	;# 
  4830     1E30                     	;# 
  4831     1E31                     	;# 
  4832     1E32                     	;# 
  4833     1E33                     	;# 
  4834     1E34                     	;# 
  4835     1E35                     	;# 
  4836     1E36                     	;# 
  4837     1E37                     	;# 
  4838     1E8F                     	;# 
  4839     1E90                     	;# 
  4840     1E91                     	;# 
  4841     1E92                     	;# 
  4842     1E93                     	;# 
  4843     1E94                     	;# 
  4844     1E95                     	;# 
  4845     1E96                     	;# 
  4846     1E97                     	;# 
  4847     1E9C                     	;# 
  4848     1E9D                     	;# 
  4849     1E9E                     	;# 
  4850     1EA1                     	;# 
  4851     1EA2                     	;# 
  4852     1EA3                     	;# 
  4853     1EA4                     	;# 
  4854     1EA9                     	;# 
  4855     1EAA                     	;# 
  4856     1EB1                     	;# 
  4857     1EB2                     	;# 
  4858     1EB8                     	;# 
  4859     1EB9                     	;# 
  4860     1EBA                     	;# 
  4861     1EBB                     	;# 
  4862     1EBC                     	;# 
  4863     1EBD                     	;# 
  4864     1EBE                     	;# 
  4865     1EC3                     	;# 
  4866     1EC5                     	;# 
  4867     1EC6                     	;# 
  4868     1EC7                     	;# 
  4869     1EC8                     	;# 
  4870     1EC9                     	;# 
  4871     1ECA                     	;# 
  4872     1ECB                     	;# 
  4873     1ECC                     	;# 
  4874     1F10                     	;# 
  4875     1F11                     	;# 
  4876     1F12                     	;# 
  4877     1F14                     	;# 
  4878     1F15                     	;# 
  4879     1F20                     	;# 
  4880     1F21                     	;# 
  4881     1F22                     	;# 
  4882     1F23                     	;# 
  4883     1F24                     	;# 
  4884     1F25                     	;# 
  4885     1F38                     	;# 
  4886     1F39                     	;# 
  4887     1F3A                     	;# 
  4888     1F3B                     	;# 
  4889     1F3C                     	;# 
  4890     1F3D                     	;# 
  4891     1F3E                     	;# 
  4892     1F3F                     	;# 
  4893     1F4E                     	;# 
  4894     1F4F                     	;# 
  4895     1F50                     	;# 
  4896     1F51                     	;# 
  4897     1F52                     	;# 
  4898     1F53                     	;# 
  4899     1F54                     	;# 
  4900     1F55                     	;# 
  4901     1FE4                     	;# 
  4902     1FE5                     	;# 
  4903     1FE6                     	;# 
  4904     1FE7                     	;# 
  4905     1FE8                     	;# 
  4906     1FE8                     	;# 
  4907     1FE9                     	;# 
  4908     1FEA                     	;# 
  4909     1FEB                     	;# 
  4910     1FED                     	;# 
  4911     1FEE                     	;# 
  4912     1FEF                     	;# 
  4913     0000                     	;# 
  4914     0001                     	;# 
  4915     0002                     	;# 
  4916     0003                     	;# 
  4917     0004                     	;# 
  4918     0005                     	;# 
  4919     0006                     	;# 
  4920     0007                     	;# 
  4921     0008                     	;# 
  4922     0009                     	;# 
  4923     000A                     	;# 
  4924     000B                     	;# 
  4925     000C                     	;# 
  4926     000E                     	;# 
  4927     0012                     	;# 
  4928     0014                     	;# 
  4929     0018                     	;# 
  4930     001A                     	;# 
  4931     008C                     	;# 
  4932     008C                     	;# 
  4933     008D                     	;# 
  4934     008E                     	;# 
  4935     008E                     	;# 
  4936     008F                     	;# 
  4937     0090                     	;# 
  4938     0090                     	;# 
  4939     0091                     	;# 
  4940     0092                     	;# 
  4941     0092                     	;# 
  4942     0093                     	;# 
  4943     0094                     	;# 
  4944     0094                     	;# 
  4945     0095                     	;# 
  4946     0096                     	;# 
  4947     0096                     	;# 
  4948     0097                     	;# 
  4949     0098                     	;# 
  4950     0099                     	;# 
  4951     009A                     	;# 
  4952     009B                     	;# 
  4953     009B                     	;# 
  4954     009C                     	;# 
  4955     009D                     	;# 
  4956     009D                     	;# 
  4957     009E                     	;# 
  4958     009F                     	;# 
  4959     010C                     	;# 
  4960     010C                     	;# 
  4961     010D                     	;# 
  4962     010E                     	;# 
  4963     010F                     	;# 
  4964     010F                     	;# 
  4965     0110                     	;# 
  4966     0111                     	;# 
  4967     0112                     	;# 
  4968     0113                     	;# 
  4969     0114                     	;# 
  4970     0115                     	;# 
  4971     0116                     	;# 
  4972     0117                     	;# 
  4973     0118                     	;# 
  4974     0119                     	;# 
  4975     0119                     	;# 
  4976     0119                     	;# 
  4977     011A                     	;# 
  4978     011A                     	;# 
  4979     011A                     	;# 
  4980     011B                     	;# 
  4981     011B                     	;# 
  4982     011B                     	;# 
  4983     011B                     	;# 
  4984     011B                     	;# 
  4985     011C                     	;# 
  4986     011C                     	;# 
  4987     011C                     	;# 
  4988     011D                     	;# 
  4989     011D                     	;# 
  4990     011D                     	;# 
  4991     011E                     	;# 
  4992     011E                     	;# 
  4993     011E                     	;# 
  4994     011F                     	;# 
  4995     011F                     	;# 
  4996     011F                     	;# 
  4997     011F                     	;# 
  4998     011F                     	;# 
  4999     018C                     	;# 
  5000     018D                     	;# 
  5001     018E                     	;# 
  5002     018F                     	;# 
  5003     0190                     	;# 
  5004     0191                     	;# 
  5005     0192                     	;# 
  5006     0196                     	;# 
  5007     0197                     	;# 
  5008     0198                     	;# 
  5009     0199                     	;# 
  5010     019A                     	;# 
  5011     019B                     	;# 
  5012     019C                     	;# 
  5013     020C                     	;# 
  5014     020D                     	;# 
  5015     020E                     	;# 
  5016     020E                     	;# 
  5017     020F                     	;# 
  5018     020F                     	;# 
  5019     0210                     	;# 
  5020     0210                     	;# 
  5021     0211                     	;# 
  5022     0211                     	;# 
  5023     0212                     	;# 
  5024     0213                     	;# 
  5025     0214                     	;# 
  5026     0214                     	;# 
  5027     0215                     	;# 
  5028     0215                     	;# 
  5029     0216                     	;# 
  5030     0216                     	;# 
  5031     0217                     	;# 
  5032     0217                     	;# 
  5033     0218                     	;# 
  5034     0219                     	;# 
  5035     021A                     	;# 
  5036     021A                     	;# 
  5037     021B                     	;# 
  5038     021B                     	;# 
  5039     021C                     	;# 
  5040     021C                     	;# 
  5041     021D                     	;# 
  5042     021D                     	;# 
  5043     021E                     	;# 
  5044     021F                     	;# 
  5045     028C                     	;# 
  5046     028C                     	;# 
  5047     028D                     	;# 
  5048     028D                     	;# 
  5049     028E                     	;# 
  5050     028F                     	;# 
  5051     0290                     	;# 
  5052     0291                     	;# 
  5053     0292                     	;# 
  5054     0292                     	;# 
  5055     0293                     	;# 
  5056     0293                     	;# 
  5057     0294                     	;# 
  5058     0295                     	;# 
  5059     0296                     	;# 
  5060     0297                     	;# 
  5061     0298                     	;# 
  5062     0298                     	;# 
  5063     0299                     	;# 
  5064     0299                     	;# 
  5065     029A                     	;# 
  5066     029B                     	;# 
  5067     029C                     	;# 
  5068     029D                     	;# 
  5069     029F                     	;# 
  5070     030C                     	;# 
  5071     030C                     	;# 
  5072     030D                     	;# 
  5073     030E                     	;# 
  5074     030F                     	;# 
  5075     0310                     	;# 
  5076     0310                     	;# 
  5077     0311                     	;# 
  5078     0312                     	;# 
  5079     0313                     	;# 
  5080     0314                     	;# 
  5081     0314                     	;# 
  5082     0315                     	;# 
  5083     0316                     	;# 
  5084     0317                     	;# 
  5085     0318                     	;# 
  5086     0318                     	;# 
  5087     0319                     	;# 
  5088     031A                     	;# 
  5089     031B                     	;# 
  5090     038C                     	;# 
  5091     038C                     	;# 
  5092     038D                     	;# 
  5093     038E                     	;# 
  5094     0390                     	;# 
  5095     0390                     	;# 
  5096     0391                     	;# 
  5097     0392                     	;# 
  5098     048C                     	;# 
  5099     048C                     	;# 
  5100     048D                     	;# 
  5101     048E                     	;# 
  5102     048F                     	;# 
  5103     048F                     	;# 
  5104     0490                     	;# 
  5105     0491                     	;# 
  5106     0492                     	;# 
  5107     0492                     	;# 
  5108     0493                     	;# 
  5109     0494                     	;# 
  5110     0495                     	;# 
  5111     0495                     	;# 
  5112     0496                     	;# 
  5113     0497                     	;# 
  5114     0498                     	;# 
  5115     0499                     	;# 
  5116     049A                     	;# 
  5117     049B                     	;# 
  5118     049C                     	;# 
  5119     049D                     	;# 
  5120     058C                     	;# 
  5121     058C                     	;# 
  5122     058D                     	;# 
  5123     058E                     	;# 
  5124     058F                     	;# 
  5125     058F                     	;# 
  5126     0590                     	;# 
  5127     0591                     	;# 
  5128     0592                     	;# 
  5129     0593                     	;# 
  5130     059C                     	;# 
  5131     059C                     	;# 
  5132     059D                     	;# 
  5133     059D                     	;# 
  5134     059E                     	;# 
  5135     059F                     	;# 
  5136     060C                     	;# 
  5137     060C                     	;# 
  5138     060D                     	;# 
  5139     060D                     	;# 
  5140     060E                     	;# 
  5141     060F                     	;# 
  5142     0610                     	;# 
  5143     0611                     	;# 
  5144     0612                     	;# 
  5145     0613                     	;# 
  5146     0614                     	;# 
  5147     0616                     	;# 
  5148     0616                     	;# 
  5149     0617                     	;# 
  5150     0617                     	;# 
  5151     0618                     	;# 
  5152     0619                     	;# 
  5153     061A                     	;# 
  5154     061B                     	;# 
  5155     061C                     	;# 
  5156     061D                     	;# 
  5157     061E                     	;# 
  5158     070C                     	;# 
  5159     070D                     	;# 
  5160     070E                     	;# 
  5161     070F                     	;# 
  5162     0710                     	;# 
  5163     0711                     	;# 
  5164     0712                     	;# 
  5165     0713                     	;# 
  5166     0714                     	;# 
  5167     0716                     	;# 
  5168     0717                     	;# 
  5169     0718                     	;# 
  5170     0719                     	;# 
  5171     071A                     	;# 
  5172     071B                     	;# 
  5173     071C                     	;# 
  5174     071D                     	;# 
  5175     071E                     	;# 
  5176     0796                     	;# 
  5177     0797                     	;# 
  5178     0798                     	;# 
  5179     0799                     	;# 
  5180     079A                     	;# 
  5181     079B                     	;# 
  5182     079C                     	;# 
  5183     079D                     	;# 
  5184     080C                     	;# 
  5185     080D                     	;# 
  5186     080E                     	;# 
  5187     080F                     	;# 
  5188     0810                     	;# 
  5189     0811                     	;# 
  5190     0812                     	;# 
  5191     0813                     	;# 
  5192     0814                     	;# 
  5193     081A                     	;# 
  5194     081A                     	;# 
  5195     081B                     	;# 
  5196     081C                     	;# 
  5197     081C                     	;# 
  5198     081D                     	;# 
  5199     081E                     	;# 
  5200     081F                     	;# 
  5201     088C                     	;# 
  5202     088D                     	;# 
  5203     088E                     	;# 
  5204     088F                     	;# 
  5205     0890                     	;# 
  5206     0891                     	;# 
  5207     0892                     	;# 
  5208     0893                     	;# 
  5209     0895                     	;# 
  5210     0896                     	;# 
  5211     0897                     	;# 
  5212     0898                     	;# 
  5213     0899                     	;# 
  5214     089A                     	;# 
  5215     089B                     	;# 
  5216     090C                     	;# 
  5217     090E                     	;# 
  5218     090F                     	;# 
  5219     091F                     	;# 
  5220     098F                     	;# 
  5221     098F                     	;# 
  5222     0990                     	;# 
  5223     0991                     	;# 
  5224     0992                     	;# 
  5225     0993                     	;# 
  5226     0994                     	;# 
  5227     0995                     	;# 
  5228     0996                     	;# 
  5229     0997                     	;# 
  5230     1E0F                     	;# 
  5231     1E10                     	;# 
  5232     1E11                     	;# 
  5233     1E12                     	;# 
  5234     1E13                     	;# 
  5235     1E14                     	;# 
  5236     1E15                     	;# 
  5237     1E16                     	;# 
  5238     1E17                     	;# 
  5239     1E18                     	;# 
  5240     1E19                     	;# 
  5241     1E1A                     	;# 
  5242     1E1B                     	;# 
  5243     1E1C                     	;# 
  5244     1E1D                     	;# 
  5245     1E1E                     	;# 
  5246     1E1F                     	;# 
  5247     1E20                     	;# 
  5248     1E21                     	;# 
  5249     1E22                     	;# 
  5250     1E23                     	;# 
  5251     1E24                     	;# 
  5252     1E25                     	;# 
  5253     1E26                     	;# 
  5254     1E27                     	;# 
  5255     1E28                     	;# 
  5256     1E29                     	;# 
  5257     1E2A                     	;# 
  5258     1E2B                     	;# 
  5259     1E2C                     	;# 
  5260     1E2D                     	;# 
  5261     1E2E                     	;# 
  5262     1E2F                     	;# 
  5263     1E30                     	;# 
  5264     1E31                     	;# 
  5265     1E32                     	;# 
  5266     1E33                     	;# 
  5267     1E34                     	;# 
  5268     1E35                     	;# 
  5269     1E36                     	;# 
  5270     1E37                     	;# 
  5271     1E8F                     	;# 
  5272     1E90                     	;# 
  5273     1E91                     	;# 
  5274     1E92                     	;# 
  5275     1E93                     	;# 
  5276     1E94                     	;# 
  5277     1E95                     	;# 
  5278     1E96                     	;# 
  5279     1E97                     	;# 
  5280     1E9C                     	;# 
  5281     1E9D                     	;# 
  5282     1E9E                     	;# 
  5283     1EA1                     	;# 
  5284     1EA2                     	;# 
  5285     1EA3                     	;# 
  5286     1EA4                     	;# 
  5287     1EA9                     	;# 
  5288     1EAA                     	;# 
  5289     1EB1                     	;# 
  5290     1EB2                     	;# 
  5291     1EB8                     	;# 
  5292     1EB9                     	;# 
  5293     1EBA                     	;# 
  5294     1EBB                     	;# 
  5295     1EBC                     	;# 
  5296     1EBD                     	;# 
  5297     1EBE                     	;# 
  5298     1EC3                     	;# 
  5299     1EC5                     	;# 
  5300     1EC6                     	;# 
  5301     1EC7                     	;# 
  5302     1EC8                     	;# 
  5303     1EC9                     	;# 
  5304     1ECA                     	;# 
  5305     1ECB                     	;# 
  5306     1ECC                     	;# 
  5307     1F10                     	;# 
  5308     1F11                     	;# 
  5309     1F12                     	;# 
  5310     1F14                     	;# 
  5311     1F15                     	;# 
  5312     1F20                     	;# 
  5313     1F21                     	;# 
  5314     1F22                     	;# 
  5315     1F23                     	;# 
  5316     1F24                     	;# 
  5317     1F25                     	;# 
  5318     1F38                     	;# 
  5319     1F39                     	;# 
  5320     1F3A                     	;# 
  5321     1F3B                     	;# 
  5322     1F3C                     	;# 
  5323     1F3D                     	;# 
  5324     1F3E                     	;# 
  5325     1F3F                     	;# 
  5326     1F4E                     	;# 
  5327     1F4F                     	;# 
  5328     1F50                     	;# 
  5329     1F51                     	;# 
  5330     1F52                     	;# 
  5331     1F53                     	;# 
  5332     1F54                     	;# 
  5333     1F55                     	;# 
  5334     1FE4                     	;# 
  5335     1FE5                     	;# 
  5336     1FE6                     	;# 
  5337     1FE7                     	;# 
  5338     1FE8                     	;# 
  5339     1FE8                     	;# 
  5340     1FE9                     	;# 
  5341     1FEA                     	;# 
  5342     1FEB                     	;# 
  5343     1FED                     	;# 
  5344     1FEE                     	;# 
  5345     1FEF                     	;# 
  5346     0000                     	;# 
  5347     0001                     	;# 
  5348     0002                     	;# 
  5349     0003                     	;# 
  5350     0004                     	;# 
  5351     0005                     	;# 
  5352     0006                     	;# 
  5353     0007                     	;# 
  5354     0008                     	;# 
  5355     0009                     	;# 
  5356     000A                     	;# 
  5357     000B                     	;# 
  5358     000C                     	;# 
  5359     000E                     	;# 
  5360     0012                     	;# 
  5361     0014                     	;# 
  5362     0018                     	;# 
  5363     001A                     	;# 
  5364     008C                     	;# 
  5365     008C                     	;# 
  5366     008D                     	;# 
  5367     008E                     	;# 
  5368     008E                     	;# 
  5369     008F                     	;# 
  5370     0090                     	;# 
  5371     0090                     	;# 
  5372     0091                     	;# 
  5373     0092                     	;# 
  5374     0092                     	;# 
  5375     0093                     	;# 
  5376     0094                     	;# 
  5377     0094                     	;# 
  5378     0095                     	;# 
  5379     0096                     	;# 
  5380     0096                     	;# 
  5381     0097                     	;# 
  5382     0098                     	;# 
  5383     0099                     	;# 
  5384     009A                     	;# 
  5385     009B                     	;# 
  5386     009B                     	;# 
  5387     009C                     	;# 
  5388     009D                     	;# 
  5389     009D                     	;# 
  5390     009E                     	;# 
  5391     009F                     	;# 
  5392     010C                     	;# 
  5393     010C                     	;# 
  5394     010D                     	;# 
  5395     010E                     	;# 
  5396     010F                     	;# 
  5397     010F                     	;# 
  5398     0110                     	;# 
  5399     0111                     	;# 
  5400     0112                     	;# 
  5401     0113                     	;# 
  5402     0114                     	;# 
  5403     0115                     	;# 
  5404     0116                     	;# 
  5405     0117                     	;# 
  5406     0118                     	;# 
  5407     0119                     	;# 
  5408     0119                     	;# 
  5409     0119                     	;# 
  5410     011A                     	;# 
  5411     011A                     	;# 
  5412     011A                     	;# 
  5413     011B                     	;# 
  5414     011B                     	;# 
  5415     011B                     	;# 
  5416     011B                     	;# 
  5417     011B                     	;# 
  5418     011C                     	;# 
  5419     011C                     	;# 
  5420     011C                     	;# 
  5421     011D                     	;# 
  5422     011D                     	;# 
  5423     011D                     	;# 
  5424     011E                     	;# 
  5425     011E                     	;# 
  5426     011E                     	;# 
  5427     011F                     	;# 
  5428     011F                     	;# 
  5429     011F                     	;# 
  5430     011F                     	;# 
  5431     011F                     	;# 
  5432     018C                     	;# 
  5433     018D                     	;# 
  5434     018E                     	;# 
  5435     018F                     	;# 
  5436     0190                     	;# 
  5437     0191                     	;# 
  5438     0192                     	;# 
  5439     0196                     	;# 
  5440     0197                     	;# 
  5441     0198                     	;# 
  5442     0199                     	;# 
  5443     019A                     	;# 
  5444     019B                     	;# 
  5445     019C                     	;# 
  5446     020C                     	;# 
  5447     020D                     	;# 
  5448     020E                     	;# 
  5449     020E                     	;# 
  5450     020F                     	;# 
  5451     020F                     	;# 
  5452     0210                     	;# 
  5453     0210                     	;# 
  5454     0211                     	;# 
  5455     0211                     	;# 
  5456     0212                     	;# 
  5457     0213                     	;# 
  5458     0214                     	;# 
  5459     0214                     	;# 
  5460     0215                     	;# 
  5461     0215                     	;# 
  5462     0216                     	;# 
  5463     0216                     	;# 
  5464     0217                     	;# 
  5465     0217                     	;# 
  5466     0218                     	;# 
  5467     0219                     	;# 
  5468     021A                     	;# 
  5469     021A                     	;# 
  5470     021B                     	;# 
  5471     021B                     	;# 
  5472     021C                     	;# 
  5473     021C                     	;# 
  5474     021D                     	;# 
  5475     021D                     	;# 
  5476     021E                     	;# 
  5477     021F                     	;# 
  5478     028C                     	;# 
  5479     028C                     	;# 
  5480     028D                     	;# 
  5481     028D                     	;# 
  5482     028E                     	;# 
  5483     028F                     	;# 
  5484     0290                     	;# 
  5485     0291                     	;# 
  5486     0292                     	;# 
  5487     0292                     	;# 
  5488     0293                     	;# 
  5489     0293                     	;# 
  5490     0294                     	;# 
  5491     0295                     	;# 
  5492     0296                     	;# 
  5493     0297                     	;# 
  5494     0298                     	;# 
  5495     0298                     	;# 
  5496     0299                     	;# 
  5497     0299                     	;# 
  5498     029A                     	;# 
  5499     029B                     	;# 
  5500     029C                     	;# 
  5501     029D                     	;# 
  5502     029F                     	;# 
  5503     030C                     	;# 
  5504     030C                     	;# 
  5505     030D                     	;# 
  5506     030E                     	;# 
  5507     030F                     	;# 
  5508     0310                     	;# 
  5509     0310                     	;# 
  5510     0311                     	;# 
  5511     0312                     	;# 
  5512     0313                     	;# 
  5513     0314                     	;# 
  5514     0314                     	;# 
  5515     0315                     	;# 
  5516     0316                     	;# 
  5517     0317                     	;# 
  5518     0318                     	;# 
  5519     0318                     	;# 
  5520     0319                     	;# 
  5521     031A                     	;# 
  5522     031B                     	;# 
  5523     038C                     	;# 
  5524     038C                     	;# 
  5525     038D                     	;# 
  5526     038E                     	;# 
  5527     0390                     	;# 
  5528     0390                     	;# 
  5529     0391                     	;# 
  5530     0392                     	;# 
  5531     048C                     	;# 
  5532     048C                     	;# 
  5533     048D                     	;# 
  5534     048E                     	;# 
  5535     048F                     	;# 
  5536     048F                     	;# 
  5537     0490                     	;# 
  5538     0491                     	;# 
  5539     0492                     	;# 
  5540     0492                     	;# 
  5541     0493                     	;# 
  5542     0494                     	;# 
  5543     0495                     	;# 
  5544     0495                     	;# 
  5545     0496                     	;# 
  5546     0497                     	;# 
  5547     0498                     	;# 
  5548     0499                     	;# 
  5549     049A                     	;# 
  5550     049B                     	;# 
  5551     049C                     	;# 
  5552     049D                     	;# 
  5553     058C                     	;# 
  5554     058C                     	;# 
  5555     058D                     	;# 
  5556     058E                     	;# 
  5557     058F                     	;# 
  5558     058F                     	;# 
  5559     0590                     	;# 
  5560     0591                     	;# 
  5561     0592                     	;# 
  5562     0593                     	;# 
  5563     059C                     	;# 
  5564     059C                     	;# 
  5565     059D                     	;# 
  5566     059D                     	;# 
  5567     059E                     	;# 
  5568     059F                     	;# 
  5569     060C                     	;# 
  5570     060C                     	;# 
  5571     060D                     	;# 
  5572     060D                     	;# 
  5573     060E                     	;# 
  5574     060F                     	;# 
  5575     0610                     	;# 
  5576     0611                     	;# 
  5577     0612                     	;# 
  5578     0613                     	;# 
  5579     0614                     	;# 
  5580     0616                     	;# 
  5581     0616                     	;# 
  5582     0617                     	;# 
  5583     0617                     	;# 
  5584     0618                     	;# 
  5585     0619                     	;# 
  5586     061A                     	;# 
  5587     061B                     	;# 
  5588     061C                     	;# 
  5589     061D                     	;# 
  5590     061E                     	;# 
  5591     070C                     	;# 
  5592     070D                     	;# 
  5593     070E                     	;# 
  5594     070F                     	;# 
  5595     0710                     	;# 
  5596     0711                     	;# 
  5597     0712                     	;# 
  5598     0713                     	;# 
  5599     0714                     	;# 
  5600     0716                     	;# 
  5601     0717                     	;# 
  5602     0718                     	;# 
  5603     0719                     	;# 
  5604     071A                     	;# 
  5605     071B                     	;# 
  5606     071C                     	;# 
  5607     071D                     	;# 
  5608     071E                     	;# 
  5609     0796                     	;# 
  5610     0797                     	;# 
  5611     0798                     	;# 
  5612     0799                     	;# 
  5613     079A                     	;# 
  5614     079B                     	;# 
  5615     079C                     	;# 
  5616     079D                     	;# 
  5617     080C                     	;# 
  5618     080D                     	;# 
  5619     080E                     	;# 
  5620     080F                     	;# 
  5621     0810                     	;# 
  5622     0811                     	;# 
  5623     0812                     	;# 
  5624     0813                     	;# 
  5625     0814                     	;# 
  5626     081A                     	;# 
  5627     081A                     	;# 
  5628     081B                     	;# 
  5629     081C                     	;# 
  5630     081C                     	;# 
  5631     081D                     	;# 
  5632     081E                     	;# 
  5633     081F                     	;# 
  5634     088C                     	;# 
  5635     088D                     	;# 
  5636     088E                     	;# 
  5637     088F                     	;# 
  5638     0890                     	;# 
  5639     0891                     	;# 
  5640     0892                     	;# 
  5641     0893                     	;# 
  5642     0895                     	;# 
  5643     0896                     	;# 
  5644     0897                     	;# 
  5645     0898                     	;# 
  5646     0899                     	;# 
  5647     089A                     	;# 
  5648     089B                     	;# 
  5649     090C                     	;# 
  5650     090E                     	;# 
  5651     090F                     	;# 
  5652     091F                     	;# 
  5653     098F                     	;# 
  5654     098F                     	;# 
  5655     0990                     	;# 
  5656     0991                     	;# 
  5657     0992                     	;# 
  5658     0993                     	;# 
  5659     0994                     	;# 
  5660     0995                     	;# 
  5661     0996                     	;# 
  5662     0997                     	;# 
  5663     1E0F                     	;# 
  5664     1E10                     	;# 
  5665     1E11                     	;# 
  5666     1E12                     	;# 
  5667     1E13                     	;# 
  5668     1E14                     	;# 
  5669     1E15                     	;# 
  5670     1E16                     	;# 
  5671     1E17                     	;# 
  5672     1E18                     	;# 
  5673     1E19                     	;# 
  5674     1E1A                     	;# 
  5675     1E1B                     	;# 
  5676     1E1C                     	;# 
  5677     1E1D                     	;# 
  5678     1E1E                     	;# 
  5679     1E1F                     	;# 
  5680     1E20                     	;# 
  5681     1E21                     	;# 
  5682     1E22                     	;# 
  5683     1E23                     	;# 
  5684     1E24                     	;# 
  5685     1E25                     	;# 
  5686     1E26                     	;# 
  5687     1E27                     	;# 
  5688     1E28                     	;# 
  5689     1E29                     	;# 
  5690     1E2A                     	;# 
  5691     1E2B                     	;# 
  5692     1E2C                     	;# 
  5693     1E2D                     	;# 
  5694     1E2E                     	;# 
  5695     1E2F                     	;# 
  5696     1E30                     	;# 
  5697     1E31                     	;# 
  5698     1E32                     	;# 
  5699     1E33                     	;# 
  5700     1E34                     	;# 
  5701     1E35                     	;# 
  5702     1E36                     	;# 
  5703     1E37                     	;# 
  5704     1E8F                     	;# 
  5705     1E90                     	;# 
  5706     1E91                     	;# 
  5707     1E92                     	;# 
  5708     1E93                     	;# 
  5709     1E94                     	;# 
  5710     1E95                     	;# 
  5711     1E96                     	;# 
  5712     1E97                     	;# 
  5713     1E9C                     	;# 
  5714     1E9D                     	;# 
  5715     1E9E                     	;# 
  5716     1EA1                     	;# 
  5717     1EA2                     	;# 
  5718     1EA3                     	;# 
  5719     1EA4                     	;# 
  5720     1EA9                     	;# 
  5721     1EAA                     	;# 
  5722     1EB1                     	;# 
  5723     1EB2                     	;# 
  5724     1EB8                     	;# 
  5725     1EB9                     	;# 
  5726     1EBA                     	;# 
  5727     1EBB                     	;# 
  5728     1EBC                     	;# 
  5729     1EBD                     	;# 
  5730     1EBE                     	;# 
  5731     1EC3                     	;# 
  5732     1EC5                     	;# 
  5733     1EC6                     	;# 
  5734     1EC7                     	;# 
  5735     1EC8                     	;# 
  5736     1EC9                     	;# 
  5737     1ECA                     	;# 
  5738     1ECB                     	;# 
  5739     1ECC                     	;# 
  5740     1F10                     	;# 
  5741     1F11                     	;# 
  5742     1F12                     	;# 
  5743     1F14                     	;# 
  5744     1F15                     	;# 
  5745     1F20                     	;# 
  5746     1F21                     	;# 
  5747     1F22                     	;# 
  5748     1F23                     	;# 
  5749     1F24                     	;# 
  5750     1F25                     	;# 
  5751     1F38                     	;# 
  5752     1F39                     	;# 
  5753     1F3A                     	;# 
  5754     1F3B                     	;# 
  5755     1F3C                     	;# 
  5756     1F3D                     	;# 
  5757     1F3E                     	;# 
  5758     1F3F                     	;# 
  5759     1F4E                     	;# 
  5760     1F4F                     	;# 
  5761     1F50                     	;# 
  5762     1F51                     	;# 
  5763     1F52                     	;# 
  5764     1F53                     	;# 
  5765     1F54                     	;# 
  5766     1F55                     	;# 
  5767     1FE4                     	;# 
  5768     1FE5                     	;# 
  5769     1FE6                     	;# 
  5770     1FE7                     	;# 
  5771     1FE8                     	;# 
  5772     1FE8                     	;# 
  5773     1FE9                     	;# 
  5774     1FEA                     	;# 
  5775     1FEB                     	;# 
  5776     1FED                     	;# 
  5777     1FEE                     	;# 
  5778     1FEF                     	;# 
  5779                           
  5780                           	psect	idataBANK2
  5781     151B                     __pidataBANK2:
  5782                           
  5783                           ;initializer for save_top_adc_point@F10616
  5784     151B  3401               	retlw	1
  5785     151C  3406               	retlw	6
  5786     151D  3400               	retlw	0
  5787     151E  343E               	retlw	62
  5788     151F  3400               	retlw	0
  5789     1520  34FF               	retlw	255
  5790     1521  34A8               	retlw	168
  5791     1522  3446               	retlw	70
  5792                           
  5793                           ;initializer for _test_recived_data
  5794     1523  3401               	retlw	1
  5795     1524  3403               	retlw	3
  5796     1525  3402               	retlw	2
  5797     1526  342E               	retlw	46
  5798     1527  34E0               	retlw	224
  5799     1528  34A4               	retlw	164
  5800     1529  346C               	retlw	108
  5801     152A  3400               	retlw	0
  5802                           
  5803                           ;initializer for measured_adc@F10605
  5804     152B  3401               	retlw	1
  5805     152C  3403               	retlw	3
  5806     152D  3400               	retlw	0
  5807     152E  3466               	retlw	102
  5808     152F  3400               	retlw	0
  5809     1530  3401               	retlw	1
  5810     1531  3464               	retlw	100
  5811     1532  3415               	retlw	21
  5812                           
  5813                           	psect	idataBANK3
  5814     07D8                     __pidataBANK3:
  5815                           
  5816                           ;initializer for send_measured_command@F10571
  5817     07D8  3401               	retlw	1
  5818     07D9  3403               	retlw	3
  5819     07DA  3400               	retlw	0
  5820     07DB  3401               	retlw	1
  5821     07DC  3400               	retlw	0
  5822     07DD  3404               	retlw	4
  5823     07DE  3415               	retlw	21
  5824     07DF  34C9               	retlw	201
  5825     07E0  3400               	retlw	0
  5826     07E1  3400               	retlw	0
  5827     07E2  3400               	retlw	0
  5828     07E3  3400               	retlw	0
  5829     07E4  3400               	retlw	0
  5830     07E5  3400               	retlw	0
  5831     07E6  3400               	retlw	0
  5832     07E7  3400               	retlw	0
  5833     07E8  3400               	retlw	0
  5834     07E9  3400               	retlw	0
  5835     07EA  3400               	retlw	0
  5836     07EB  3400               	retlw	0
  5837     07EC  3400               	retlw	0
  5838     07ED  3400               	retlw	0
  5839     07EE  3400               	retlw	0
  5840     07EF  3400               	retlw	0
  5841     07F0  3400               	retlw	0
  5842     07F1  3400               	retlw	0
  5843     07F2  3400               	retlw	0
  5844     07F3  3400               	retlw	0
  5845     07F4  3400               	retlw	0
  5846     07F5  3400               	retlw	0
  5847     07F6  3400               	retlw	0
  5848     07F7  3400               	retlw	0
  5849                           
  5850                           ;initializer for save_bottom_adc_point@F10625
  5851     07F8  3401               	retlw	1
  5852     07F9  3406               	retlw	6
  5853     07FA  3400               	retlw	0
  5854     07FB  343F               	retlw	63
  5855     07FC  3400               	retlw	0
  5856     07FD  34FF               	retlw	255
  5857     07FE  34F9               	retlw	249
  5858     07FF  3486               	retlw	134
  5859                           
  5860                           	psect	idataBANK5
  5861     17C0                     __pidataBANK5:
  5862                           
  5863                           ;initializer for set_bottom_calibrate_point@F10600
  5864     17C0  3401               	retlw	1
  5865     17C1  3406               	retlw	6
  5866     17C2  3400               	retlw	0
  5867     17C3  3438               	retlw	56
  5868     17C4  3401               	retlw	1
  5869     17C5  34C9               	retlw	201
  5870     17C6  34C7               	retlw	199
  5871     17C7  3400               	retlw	0
  5872     17C8  3400               	retlw	0
  5873     17C9  3400               	retlw	0
  5874     17CA  3400               	retlw	0
  5875     17CB  3400               	retlw	0
  5876     17CC  3400               	retlw	0
  5877     17CD  3400               	retlw	0
  5878     17CE  3400               	retlw	0
  5879     17CF  3400               	retlw	0
  5880     17D0  3400               	retlw	0
  5881     17D1  3400               	retlw	0
  5882     17D2  3400               	retlw	0
  5883     17D3  3400               	retlw	0
  5884     17D4  3400               	retlw	0
  5885     17D5  3400               	retlw	0
  5886     17D6  3400               	retlw	0
  5887     17D7  3400               	retlw	0
  5888     17D8  3400               	retlw	0
  5889     17D9  3400               	retlw	0
  5890     17DA  3400               	retlw	0
  5891     17DB  3400               	retlw	0
  5892     17DC  3400               	retlw	0
  5893     17DD  3400               	retlw	0
  5894     17DE  3400               	retlw	0
  5895     17DF  3400               	retlw	0
  5896                           
  5897                           ;initializer for set_top_calibrate_point@F10597
  5898     17E0  3401               	retlw	1
  5899     17E1  3406               	retlw	6
  5900     17E2  3400               	retlw	0
  5901     17E3  3436               	retlw	54
  5902     17E4  3401               	retlw	1
  5903     17E5  34A8               	retlw	168
  5904     17E6  3404               	retlw	4
  5905     17E7  3400               	retlw	0
  5906     17E8  3400               	retlw	0
  5907     17E9  3400               	retlw	0
  5908     17EA  3400               	retlw	0
  5909     17EB  3400               	retlw	0
  5910     17EC  3400               	retlw	0
  5911     17ED  3400               	retlw	0
  5912     17EE  3400               	retlw	0
  5913     17EF  3400               	retlw	0
  5914     17F0  3400               	retlw	0
  5915     17F1  3400               	retlw	0
  5916     17F2  3400               	retlw	0
  5917     17F3  3400               	retlw	0
  5918     17F4  3400               	retlw	0
  5919     17F5  3400               	retlw	0
  5920     17F6  3400               	retlw	0
  5921     17F7  3400               	retlw	0
  5922     17F8  3400               	retlw	0
  5923     17F9  3400               	retlw	0
  5924     17FA  3400               	retlw	0
  5925     17FB  3400               	retlw	0
  5926     17FC  3400               	retlw	0
  5927     17FD  3400               	retlw	0
  5928     17FE  3400               	retlw	0
  5929     17FF  3400               	retlw	0
  5930                           
  5931                           	psect	stringtext1
  5932     197D                     __pstringtext1:
  5933     197D                     _dpowers:
  5934     197D  3401               	retlw	1
  5935     197E  3400               	retlw	0
  5936     197F  340A               	retlw	10
  5937     1980  3400               	retlw	0
  5938     1981  3464               	retlw	100
  5939     1982  3400               	retlw	0
  5940     1983  34E8               	retlw	232
  5941     1984  3403               	retlw	3
  5942     1985  3410               	retlw	16
  5943     1986  3427               	retlw	39
  5944     1987                     __end_of_dpowers:
  5945                           
  5946                           	psect	stringtext2
  5947     1000                     __pstringtext2:
  5948     1000                     _hexpowers:
  5949     1000  3401               	retlw	1
  5950     1001  3400               	retlw	0
  5951     1002  3410               	retlw	16
  5952     1003  3400               	retlw	0
  5953     1004  3400               	retlw	0
  5954     1005  3401               	retlw	1
  5955     1006  3400               	retlw	0
  5956     1007  3410               	retlw	16
  5957     1008                     __end_of_hexpowers:
  5958     001A                     _LATCbits	set	26
  5959     000C                     _PORTAbits	set	12
  5960     000B                     _INTCONbits	set	11
  5961     0012                     _TRISAbits	set	18
  5962     0014                     _TRISC	set	20
  5963     0012                     _TRISA	set	18
  5964     001A                     _LATC	set	26
  5965     0018                     _LATA	set	24
  5966     005F                     _GIE	set	95
  5967     0119                     _RC1REG	set	281
  5968     011A                     _TX1REG	set	282
  5969     011D                     _RC1STA	set	285
  5970     011E                     _TX1STA	set	286
  5971     011C                     _SP1BRGH	set	284
  5972     011B                     _SP1BRGL	set	283
  5973     011F                     _BAUD1CON	set	287
  5974     0190                     _SSP1CON1bits	set	400
  5975     018C                     _SSP1BUF	set	396
  5976     0191                     _SSP1CON2bits	set	401
  5977     018F                     _SSP1STATbits	set	399
  5978     018E                     _SSP1MSK	set	398
  5979     018D                     _SSP1ADD	set	397
  5980     0191                     _SSP1CON2	set	401
  5981     0190                     _SSP1CON1	set	400
  5982     018F                     _SSP1STAT	set	399
  5983     059E                     _T0CON0	set	1438
  5984     059C                     _TMR0L	set	1436
  5985     059D                     _TMR0H	set	1437
  5986     059F                     _T0CON1	set	1439
  5987     0716                     _PIE0bits	set	1814
  5988     070C                     _PIR0bits	set	1804
  5989     0719                     _PIE3bits	set	1817
  5990     070F                     _PIR3bits	set	1807
  5991     079D                     _PMD7	set	1949
  5992     079C                     _PMD6	set	1948
  5993     079B                     _PMD5	set	1947
  5994     079A                     _PMD4	set	1946
  5995     0799                     _PMD3	set	1945
  5996     0798                     _PMD2	set	1944
  5997     0797                     _PMD1	set	1943
  5998     0796                     _PMD0	set	1942
  5999     0892                     _OSCTUNE	set	2194
  6000     0893                     _OSCFRQ	set	2195
  6001     0891                     _OSCEN	set	2193
  6002     088F                     _OSCCON3	set	2191
  6003     088D                     _OSCCON1	set	2189
  6004     1ECB                     _RX1DTPPS	set	7883
  6005     1EC6                     _SSP1DATPPS	set	7878
  6006     1EC5                     _SSP1CLKPPS	set	7877
  6007     1F15                     _RA5PPS	set	7957
  6008     1F38                     _ANSELAbits	set	7992
  6009     1F25                     _RC5PPS	set	7973
  6010     1F21                     _RC1PPS	set	7969
  6011     1F23                     _RC3PPS	set	7971
  6012     1F20                     _RC0PPS	set	7968
  6013     1F52                     _INLVLC	set	8018
  6014     1F3C                     _INLVLA	set	7996
  6015     1F51                     _SLRCONC	set	8017
  6016     1F3B                     _SLRCONA	set	7995
  6017     1F50                     _ODCONC	set	8016
  6018     1F3A                     _ODCONA	set	7994
  6019     1F4F                     _WPUC	set	8015
  6020     1F39                     _WPUA	set	7993
  6021     1F38                     _ANSELA	set	7992
  6022     1F4E                     _ANSELC	set	8014
  6023     1008                     STR_29:
  6024     1008  345B               	retlw	91	;'['
  6025     1009  3452               	retlw	82	;'R'
  6026     100A  3458               	retlw	88	;'X'
  6027     100B  342D               	retlw	45	;'-'
  6028     100C  3442               	retlw	66	;'B'
  6029     100D  3455               	retlw	85	;'U'
  6030     100E  3446               	retlw	70	;'F'
  6031     100F  3446               	retlw	70	;'F'
  6032     1010  3445               	retlw	69	;'E'
  6033     1011  3452               	retlw	82	;'R'
  6034     1012  345D               	retlw	93	;']'
  6035     1013  3420               	retlw	32	;' '
  6036     1014  3470               	retlw	112	;'p'
  6037     1015  3448               	retlw	72	;'H'
  6038     1016  3434               	retlw	52	;'4'
  6039     1017  3438               	retlw	56	;'8'
  6040     1018  3435               	retlw	53	;'5'
  6041     1019  342D               	retlw	45	;'-'
  6042     101A  3443               	retlw	67	;'C'
  6043     101B  3461               	retlw	97	;'a'
  6044     101C  346C               	retlw	108	;'l'
  6045     101D  3469               	retlw	105	;'i'
  6046     101E  3462               	retlw	98	;'b'
  6047     101F  3472               	retlw	114	;'r'
  6048     1020  3461               	retlw	97	;'a'
  6049     1021  3474               	retlw	116	;'t'
  6050     1022  3469               	retlw	105	;'i'
  6051     1023  346F               	retlw	111	;'o'
  6052     1024  346E               	retlw	110	;'n'
  6053     1025  345F               	retlw	95	;'_'
  6054     1026  3442               	retlw	66	;'B'
  6055     1027  346F               	retlw	111	;'o'
  6056     1028  3474               	retlw	116	;'t'
  6057     1029  3474               	retlw	116	;'t'
  6058     102A  346F               	retlw	111	;'o'
  6059     102B  346D               	retlw	109	;'m'
  6060     102C  345F               	retlw	95	;'_'
  6061     102D  3456               	retlw	86	;'V'
  6062     102E  3461               	retlw	97	;'a'
  6063     102F  346C               	retlw	108	;'l'
  6064     1030  3475               	retlw	117	;'u'
  6065     1031  3465               	retlw	101	;'e'
  6066     1032  343A               	retlw	58	;':'
  6067     1033  3420               	retlw	32	;' '
  6068     1034  342D               	retlw	45	;'-'
  6069     1035  342D               	retlw	45	;'-'
  6070     1036  342D               	retlw	45	;'-'
  6071     1037  342D               	retlw	45	;'-'
  6072     1038  3420               	retlw	32	;' '
  6073     1039  340D               	retlw	13
  6074     103A  340A               	retlw	10
  6075     103B  3420               	retlw	32	;' '
  6076     103C  3470               	retlw	112	;'p'
  6077     103D  3448               	retlw	72	;'H'
  6078     103E  3420               	retlw	32	;' '
  6079     103F  3441               	retlw	65	;'A'
  6080     1040  3444               	retlw	68	;'D'
  6081     1041  3443               	retlw	67	;'C'
  6082     1042  345F               	retlw	95	;'_'
  6083     1043  3476               	retlw	118	;'v'
  6084     1044  3461               	retlw	97	;'a'
  6085     1045  346C               	retlw	108	;'l'
  6086     1046  3475               	retlw	117	;'u'
  6087     1047  3465               	retlw	101	;'e'
  6088     1048  343A               	retlw	58	;':'
  6089     1049  3420               	retlw	32	;' '
  6090     104A  3425               	retlw	37	;'%'
  6091     104B  3475               	retlw	117	;'u'
  6092     104C  3420               	retlw	32	;' '
  6093     104D  340D               	retlw	13
  6094     104E  340A               	retlw	10
  6095     104F  3470               	retlw	112	;'p'
  6096     1050  3448               	retlw	72	;'H'
  6097     1051  3420               	retlw	32	;' '
  6098     1052  3441               	retlw	65	;'A'
  6099     1053  3444               	retlw	68	;'D'
  6100     1054  3443               	retlw	67	;'C'
  6101     1055  345F               	retlw	95	;'_'
  6102     1056  3448               	retlw	72	;'H'
  6103     1057  3469               	retlw	105	;'i'
  6104     1058  3467               	retlw	103	;'g'
  6105     1059  3468               	retlw	104	;'h'
  6106     105A  3420               	retlw	32	;' '
  6107     105B  3442               	retlw	66	;'B'
  6108     105C  3479               	retlw	121	;'y'
  6109     105D  3474               	retlw	116	;'t'
  6110     105E  3465               	retlw	101	;'e'
  6111     105F  3473               	retlw	115	;'s'
  6112     1060  343A               	retlw	58	;':'
  6113     1061  3420               	retlw	32	;' '
  6114     1062  3430               	retlw	48	;'0'
  6115     1063  3478               	retlw	120	;'x'
  6116     1064  3425               	retlw	37	;'%'
  6117     1065  3430               	retlw	48	;'0'
  6118     1066  3432               	retlw	50	;'2'
  6119     1067  3458               	retlw	88	;'X'
  6120     1068  3420               	retlw	32	;' '
  6121     1069  340D               	retlw	13
  6122     106A  340A               	retlw	10
  6123     106B  3470               	retlw	112	;'p'
  6124     106C  3448               	retlw	72	;'H'
  6125     106D  3420               	retlw	32	;' '
  6126     106E  3441               	retlw	65	;'A'
  6127     106F  3444               	retlw	68	;'D'
  6128     1070  3443               	retlw	67	;'C'
  6129     1071  345F               	retlw	95	;'_'
  6130     1072  344C               	retlw	76	;'L'
  6131     1073  346F               	retlw	111	;'o'
  6132     1074  3477               	retlw	119	;'w'
  6133     1075  3420               	retlw	32	;' '
  6134     1076  3420               	retlw	32	;' '
  6135     1077  3442               	retlw	66	;'B'
  6136     1078  3479               	retlw	121	;'y'
  6137     1079  3474               	retlw	116	;'t'
  6138     107A  3465               	retlw	101	;'e'
  6139     107B  3473               	retlw	115	;'s'
  6140     107C  343A               	retlw	58	;':'
  6141     107D  3420               	retlw	32	;' '
  6142     107E  3430               	retlw	48	;'0'
  6143     107F  3478               	retlw	120	;'x'
  6144     1080  3425               	retlw	37	;'%'
  6145     1081  3430               	retlw	48	;'0'
  6146     1082  3432               	retlw	50	;'2'
  6147     1083  3458               	retlw	88	;'X'
  6148     1084  3420               	retlw	32	;' '
  6149     1085  340D               	retlw	13
  6150     1086  340A               	retlw	10
  6151     1087  3470               	retlw	112	;'p'
  6152     1088  3448               	retlw	72	;'H'
  6153     1089  3420               	retlw	32	;' '
  6154     108A  3441               	retlw	65	;'A'
  6155     108B  3444               	retlw	68	;'D'
  6156     108C  3443               	retlw	67	;'C'
  6157     108D  345F               	retlw	95	;'_'
  6158     108E  344C               	retlw	76	;'L'
  6159     108F  346F               	retlw	111	;'o'
  6160     1090  3477               	retlw	119	;'w'
  6161     1091  3420               	retlw	32	;' '
  6162     1092  3420               	retlw	32	;' '
  6163     1093  3443               	retlw	67	;'C'
  6164     1094  3452               	retlw	82	;'R'
  6165     1095  3443               	retlw	67	;'C'
  6166     1096  3420               	retlw	32	;' '
  6167     1097  3448               	retlw	72	;'H'
  6168     1098  3469               	retlw	105	;'i'
  6169     1099  3467               	retlw	103	;'g'
  6170     109A  3468               	retlw	104	;'h'
  6171     109B  3420               	retlw	32	;' '
  6172     109C  3442               	retlw	66	;'B'
  6173     109D  3479               	retlw	121	;'y'
  6174     109E  3474               	retlw	116	;'t'
  6175     109F  3465               	retlw	101	;'e'
  6176     10A0  343A               	retlw	58	;':'
  6177     10A1  3420               	retlw	32	;' '
  6178     10A2  3430               	retlw	48	;'0'
  6179     10A3  3478               	retlw	120	;'x'
  6180     10A4  3425               	retlw	37	;'%'
  6181     10A5  3430               	retlw	48	;'0'
  6182     10A6  3432               	retlw	50	;'2'
  6183     10A7  3458               	retlw	88	;'X'
  6184     10A8  3420               	retlw	32	;' '
  6185     10A9  340D               	retlw	13
  6186     10AA  340A               	retlw	10
  6187     10AB  3470               	retlw	112	;'p'
  6188     10AC  3448               	retlw	72	;'H'
  6189     10AD  3420               	retlw	32	;' '
  6190     10AE  3441               	retlw	65	;'A'
  6191     10AF  3444               	retlw	68	;'D'
  6192     10B0  3443               	retlw	67	;'C'
  6193     10B1  345F               	retlw	95	;'_'
  6194     10B2  344C               	retlw	76	;'L'
  6195     10B3  346F               	retlw	111	;'o'
  6196     10B4  3477               	retlw	119	;'w'
  6197     10B5  3420               	retlw	32	;' '
  6198     10B6  3420               	retlw	32	;' '
  6199     10B7  3443               	retlw	67	;'C'
  6200     10B8  3452               	retlw	82	;'R'
  6201     10B9  3443               	retlw	67	;'C'
  6202     10BA  3420               	retlw	32	;' '
  6203     10BB  3448               	retlw	72	;'H'
  6204     10BC  3469               	retlw	105	;'i'
  6205     10BD  3467               	retlw	103	;'g'
  6206     10BE  3468               	retlw	104	;'h'
  6207     10BF  3420               	retlw	32	;' '
  6208     10C0  3442               	retlw	66	;'B'
  6209     10C1  3479               	retlw	121	;'y'
  6210     10C2  3474               	retlw	116	;'t'
  6211     10C3  3465               	retlw	101	;'e'
  6212     10C4  343A               	retlw	58	;':'
  6213     10C5  3420               	retlw	32	;' '
  6214     10C6  3430               	retlw	48	;'0'
  6215     10C7  3478               	retlw	120	;'x'
  6216     10C8  3425               	retlw	37	;'%'
  6217     10C9  3430               	retlw	48	;'0'
  6218     10CA  3432               	retlw	50	;'2'
  6219     10CB  3458               	retlw	88	;'X'
  6220     10CC  3420               	retlw	32	;' '
  6221     10CD  340D               	retlw	13
  6222     10CE  340A               	retlw	10
  6223     10CF  3400               	retlw	0
  6224                           
  6225                           	psect	stringtext3
  6226     10D0                     __pstringtext3:
  6227     10D0                     STR_27:
  6228     10D0  345B               	retlw	91	;'['
  6229     10D1  3452               	retlw	82	;'R'
  6230     10D2  3458               	retlw	88	;'X'
  6231     10D3  342D               	retlw	45	;'-'
  6232     10D4  3442               	retlw	66	;'B'
  6233     10D5  3455               	retlw	85	;'U'
  6234     10D6  3446               	retlw	70	;'F'
  6235     10D7  3446               	retlw	70	;'F'
  6236     10D8  3445               	retlw	69	;'E'
  6237     10D9  3452               	retlw	82	;'R'
  6238     10DA  345D               	retlw	93	;']'
  6239     10DB  3420               	retlw	32	;' '
  6240     10DC  3470               	retlw	112	;'p'
  6241     10DD  3448               	retlw	72	;'H'
  6242     10DE  3434               	retlw	52	;'4'
  6243     10DF  3438               	retlw	56	;'8'
  6244     10E0  3435               	retlw	53	;'5'
  6245     10E1  342D               	retlw	45	;'-'
  6246     10E2  3443               	retlw	67	;'C'
  6247     10E3  3461               	retlw	97	;'a'
  6248     10E4  346C               	retlw	108	;'l'
  6249     10E5  3469               	retlw	105	;'i'
  6250     10E6  3462               	retlw	98	;'b'
  6251     10E7  3472               	retlw	114	;'r'
  6252     10E8  3461               	retlw	97	;'a'
  6253     10E9  3474               	retlw	116	;'t'
  6254     10EA  3469               	retlw	105	;'i'
  6255     10EB  346F               	retlw	111	;'o'
  6256     10EC  346E               	retlw	110	;'n'
  6257     10ED  345F               	retlw	95	;'_'
  6258     10EE  3454               	retlw	84	;'T'
  6259     10EF  346F               	retlw	111	;'o'
  6260     10F0  3470               	retlw	112	;'p'
  6261     10F1  345F               	retlw	95	;'_'
  6262     10F2  3456               	retlw	86	;'V'
  6263     10F3  3461               	retlw	97	;'a'
  6264     10F4  346C               	retlw	108	;'l'
  6265     10F5  3475               	retlw	117	;'u'
  6266     10F6  3465               	retlw	101	;'e'
  6267     10F7  343A               	retlw	58	;':'
  6268     10F8  3420               	retlw	32	;' '
  6269     10F9  342D               	retlw	45	;'-'
  6270     10FA  342D               	retlw	45	;'-'
  6271     10FB  342D               	retlw	45	;'-'
  6272     10FC  342D               	retlw	45	;'-'
  6273     10FD  3420               	retlw	32	;' '
  6274     10FE  340D               	retlw	13
  6275     10FF  340A               	retlw	10
  6276     1100  3420               	retlw	32	;' '
  6277     1101  3470               	retlw	112	;'p'
  6278     1102  3448               	retlw	72	;'H'
  6279     1103  3420               	retlw	32	;' '
  6280     1104  3441               	retlw	65	;'A'
  6281     1105  3444               	retlw	68	;'D'
  6282     1106  3443               	retlw	67	;'C'
  6283     1107  345F               	retlw	95	;'_'
  6284     1108  3476               	retlw	118	;'v'
  6285     1109  3461               	retlw	97	;'a'
  6286     110A  346C               	retlw	108	;'l'
  6287     110B  3475               	retlw	117	;'u'
  6288     110C  3465               	retlw	101	;'e'
  6289     110D  343A               	retlw	58	;':'
  6290     110E  3420               	retlw	32	;' '
  6291     110F  3425               	retlw	37	;'%'
  6292     1110  3475               	retlw	117	;'u'
  6293     1111  3420               	retlw	32	;' '
  6294     1112  340D               	retlw	13
  6295     1113  340A               	retlw	10
  6296     1114  3470               	retlw	112	;'p'
  6297     1115  3448               	retlw	72	;'H'
  6298     1116  3420               	retlw	32	;' '
  6299     1117  3441               	retlw	65	;'A'
  6300     1118  3444               	retlw	68	;'D'
  6301     1119  3443               	retlw	67	;'C'
  6302     111A  345F               	retlw	95	;'_'
  6303     111B  3448               	retlw	72	;'H'
  6304     111C  3469               	retlw	105	;'i'
  6305     111D  3467               	retlw	103	;'g'
  6306     111E  3468               	retlw	104	;'h'
  6307     111F  3420               	retlw	32	;' '
  6308     1120  3442               	retlw	66	;'B'
  6309     1121  3479               	retlw	121	;'y'
  6310     1122  3474               	retlw	116	;'t'
  6311     1123  3465               	retlw	101	;'e'
  6312     1124  3473               	retlw	115	;'s'
  6313     1125  343A               	retlw	58	;':'
  6314     1126  3420               	retlw	32	;' '
  6315     1127  3430               	retlw	48	;'0'
  6316     1128  3478               	retlw	120	;'x'
  6317     1129  3425               	retlw	37	;'%'
  6318     112A  3430               	retlw	48	;'0'
  6319     112B  3432               	retlw	50	;'2'
  6320     112C  3458               	retlw	88	;'X'
  6321     112D  3420               	retlw	32	;' '
  6322     112E  340D               	retlw	13
  6323     112F  340A               	retlw	10
  6324     1130  3470               	retlw	112	;'p'
  6325     1131  3448               	retlw	72	;'H'
  6326     1132  3420               	retlw	32	;' '
  6327     1133  3441               	retlw	65	;'A'
  6328     1134  3444               	retlw	68	;'D'
  6329     1135  3443               	retlw	67	;'C'
  6330     1136  345F               	retlw	95	;'_'
  6331     1137  344C               	retlw	76	;'L'
  6332     1138  346F               	retlw	111	;'o'
  6333     1139  3477               	retlw	119	;'w'
  6334     113A  3420               	retlw	32	;' '
  6335     113B  3420               	retlw	32	;' '
  6336     113C  3442               	retlw	66	;'B'
  6337     113D  3479               	retlw	121	;'y'
  6338     113E  3474               	retlw	116	;'t'
  6339     113F  3465               	retlw	101	;'e'
  6340     1140  3473               	retlw	115	;'s'
  6341     1141  343A               	retlw	58	;':'
  6342     1142  3420               	retlw	32	;' '
  6343     1143  3430               	retlw	48	;'0'
  6344     1144  3478               	retlw	120	;'x'
  6345     1145  3425               	retlw	37	;'%'
  6346     1146  3430               	retlw	48	;'0'
  6347     1147  3432               	retlw	50	;'2'
  6348     1148  3458               	retlw	88	;'X'
  6349     1149  3420               	retlw	32	;' '
  6350     114A  340D               	retlw	13
  6351     114B  340A               	retlw	10
  6352     114C  3470               	retlw	112	;'p'
  6353     114D  3448               	retlw	72	;'H'
  6354     114E  3420               	retlw	32	;' '
  6355     114F  3441               	retlw	65	;'A'
  6356     1150  3444               	retlw	68	;'D'
  6357     1151  3443               	retlw	67	;'C'
  6358     1152  345F               	retlw	95	;'_'
  6359     1153  344C               	retlw	76	;'L'
  6360     1154  346F               	retlw	111	;'o'
  6361     1155  3477               	retlw	119	;'w'
  6362     1156  3420               	retlw	32	;' '
  6363     1157  3420               	retlw	32	;' '
  6364     1158  3443               	retlw	67	;'C'
  6365     1159  3452               	retlw	82	;'R'
  6366     115A  3443               	retlw	67	;'C'
  6367     115B  3420               	retlw	32	;' '
  6368     115C  3448               	retlw	72	;'H'
  6369     115D  3469               	retlw	105	;'i'
  6370     115E  3467               	retlw	103	;'g'
  6371     115F  3468               	retlw	104	;'h'
  6372     1160  3420               	retlw	32	;' '
  6373     1161  3442               	retlw	66	;'B'
  6374     1162  3479               	retlw	121	;'y'
  6375     1163  3474               	retlw	116	;'t'
  6376     1164  3465               	retlw	101	;'e'
  6377     1165  343A               	retlw	58	;':'
  6378     1166  3420               	retlw	32	;' '
  6379     1167  3430               	retlw	48	;'0'
  6380     1168  3478               	retlw	120	;'x'
  6381     1169  3425               	retlw	37	;'%'
  6382     116A  3430               	retlw	48	;'0'
  6383     116B  3432               	retlw	50	;'2'
  6384     116C  3458               	retlw	88	;'X'
  6385     116D  3420               	retlw	32	;' '
  6386     116E  340D               	retlw	13
  6387     116F  340A               	retlw	10
  6388     1170  3470               	retlw	112	;'p'
  6389     1171  3448               	retlw	72	;'H'
  6390     1172  3420               	retlw	32	;' '
  6391     1173  3441               	retlw	65	;'A'
  6392     1174  3444               	retlw	68	;'D'
  6393     1175  3443               	retlw	67	;'C'
  6394     1176  345F               	retlw	95	;'_'
  6395     1177  344C               	retlw	76	;'L'
  6396     1178  346F               	retlw	111	;'o'
  6397     1179  3477               	retlw	119	;'w'
  6398     117A  3420               	retlw	32	;' '
  6399     117B  3420               	retlw	32	;' '
  6400     117C  3443               	retlw	67	;'C'
  6401     117D  3452               	retlw	82	;'R'
  6402     117E  3443               	retlw	67	;'C'
  6403     117F  3420               	retlw	32	;' '
  6404     1180  3448               	retlw	72	;'H'
  6405     1181  3469               	retlw	105	;'i'
  6406     1182  3467               	retlw	103	;'g'
  6407     1183  3468               	retlw	104	;'h'
  6408     1184  3420               	retlw	32	;' '
  6409     1185  3442               	retlw	66	;'B'
  6410     1186  3479               	retlw	121	;'y'
  6411     1187  3474               	retlw	116	;'t'
  6412     1188  3465               	retlw	101	;'e'
  6413     1189  343A               	retlw	58	;':'
  6414     118A  3420               	retlw	32	;' '
  6415     118B  3430               	retlw	48	;'0'
  6416     118C  3478               	retlw	120	;'x'
  6417     118D  3425               	retlw	37	;'%'
  6418     118E  3430               	retlw	48	;'0'
  6419     118F  3432               	retlw	50	;'2'
  6420     1190  3458               	retlw	88	;'X'
  6421     1191  3420               	retlw	32	;' '
  6422     1192  340D               	retlw	13
  6423     1193  340A               	retlw	10
  6424     1194  3400               	retlw	0
  6425                           
  6426                           	psect	stringtext4
  6427     1195                     __pstringtext4:
  6428     1195                     STR_4:
  6429     1195  345B               	retlw	91	;'['
  6430     1196  3452               	retlw	82	;'R'
  6431     1197  3458               	retlw	88	;'X'
  6432     1198  342D               	retlw	45	;'-'
  6433     1199  3442               	retlw	66	;'B'
  6434     119A  3455               	retlw	85	;'U'
  6435     119B  3446               	retlw	70	;'F'
  6436     119C  3446               	retlw	70	;'F'
  6437     119D  3445               	retlw	69	;'E'
  6438     119E  3452               	retlw	82	;'R'
  6439     119F  345D               	retlw	93	;']'
  6440     11A0  3420               	retlw	32	;' '
  6441     11A1  3441               	retlw	65	;'A'
  6442     11A2  3444               	retlw	68	;'D'
  6443     11A3  3443               	retlw	67	;'C'
  6444     11A4  345F               	retlw	95	;'_'
  6445     11A5  3476               	retlw	118	;'v'
  6446     11A6  3461               	retlw	97	;'a'
  6447     11A7  346C               	retlw	108	;'l'
  6448     11A8  3475               	retlw	117	;'u'
  6449     11A9  3465               	retlw	101	;'e'
  6450     11AA  3420               	retlw	32	;' '
  6451     11AB  3466               	retlw	102	;'f'
  6452     11AC  3472               	retlw	114	;'r'
  6453     11AD  346F               	retlw	111	;'o'
  6454     11AE  346D               	retlw	109	;'m'
  6455     11AF  3420               	retlw	32	;' '
  6456     11B0  3470               	retlw	112	;'p'
  6457     11B1  3448               	retlw	72	;'H'
  6458     11B2  3434               	retlw	52	;'4'
  6459     11B3  3438               	retlw	56	;'8'
  6460     11B4  3435               	retlw	53	;'5'
  6461     11B5  345F               	retlw	95	;'_'
  6462     11B6  3470               	retlw	112	;'p'
  6463     11B7  3472               	retlw	114	;'r'
  6464     11B8  346F               	retlw	111	;'o'
  6465     11B9  3462               	retlw	98	;'b'
  6466     11BA  3465               	retlw	101	;'e'
  6467     11BB  343A               	retlw	58	;':'
  6468     11BC  3420               	retlw	32	;' '
  6469     11BD  340D               	retlw	13
  6470     11BE  340A               	retlw	10
  6471     11BF  3470               	retlw	112	;'p'
  6472     11C0  3468               	retlw	104	;'h'
  6473     11C1  3420               	retlw	32	;' '
  6474     11C2  3441               	retlw	65	;'A'
  6475     11C3  3444               	retlw	68	;'D'
  6476     11C4  3443               	retlw	67	;'C'
  6477     11C5  345F               	retlw	95	;'_'
  6478     11C6  3476               	retlw	118	;'v'
  6479     11C7  3461               	retlw	97	;'a'
  6480     11C8  346C               	retlw	108	;'l'
  6481     11C9  3475               	retlw	117	;'u'
  6482     11CA  3465               	retlw	101	;'e'
  6483     11CB  345F               	retlw	95	;'_'
  6484     11CC  344C               	retlw	76	;'L'
  6485     11CD  3469               	retlw	105	;'i'
  6486     11CE  3473               	retlw	115	;'s'
  6487     11CF  3474               	retlw	116	;'t'
  6488     11D0  343A               	retlw	58	;':'
  6489     11D1  3420               	retlw	32	;' '
  6490     11D2  3425               	retlw	37	;'%'
  6491     11D3  3475               	retlw	117	;'u'
  6492     11D4  3420               	retlw	32	;' '
  6493     11D5  340D               	retlw	13
  6494     11D6  340A               	retlw	10
  6495     11D7  3470               	retlw	112	;'p'
  6496     11D8  3448               	retlw	72	;'H'
  6497     11D9  3420               	retlw	32	;' '
  6498     11DA  3454               	retlw	84	;'T'
  6499     11DB  346F               	retlw	111	;'o'
  6500     11DC  3470               	retlw	112	;'p'
  6501     11DD  345F               	retlw	95	;'_'
  6502     11DE  3450               	retlw	80	;'P'
  6503     11DF  346F               	retlw	111	;'o'
  6504     11E0  3469               	retlw	105	;'i'
  6505     11E1  346E               	retlw	110	;'n'
  6506     11E2  3474               	retlw	116	;'t'
  6507     11E3  3420               	retlw	32	;' '
  6508     11E4  3441               	retlw	65	;'A'
  6509     11E5  3444               	retlw	68	;'D'
  6510     11E6  3443               	retlw	67	;'C'
  6511     11E7  343A               	retlw	58	;':'
  6512     11E8  3420               	retlw	32	;' '
  6513     11E9  3420               	retlw	32	;' '
  6514     11EA  3420               	retlw	32	;' '
  6515     11EB  3420               	retlw	32	;' '
  6516     11EC  3420               	retlw	32	;' '
  6517     11ED  3425               	retlw	37	;'%'
  6518     11EE  3475               	retlw	117	;'u'
  6519     11EF  3420               	retlw	32	;' '
  6520     11F0  340D               	retlw	13
  6521     11F1  340A               	retlw	10
  6522     11F2  3470               	retlw	112	;'p'
  6523     11F3  3448               	retlw	72	;'H'
  6524     11F4  3420               	retlw	32	;' '
  6525     11F5  3442               	retlw	66	;'B'
  6526     11F6  346F               	retlw	111	;'o'
  6527     11F7  3474               	retlw	116	;'t'
  6528     11F8  3474               	retlw	116	;'t'
  6529     11F9  346F               	retlw	111	;'o'
  6530     11FA  346D               	retlw	109	;'m'
  6531     11FB  345F               	retlw	95	;'_'
  6532     11FC  3450               	retlw	80	;'P'
  6533     11FD  346F               	retlw	111	;'o'
  6534     11FE  3469               	retlw	105	;'i'
  6535     11FF  346E               	retlw	110	;'n'
  6536     1200  3474               	retlw	116	;'t'
  6537     1201  3420               	retlw	32	;' '
  6538     1202  3441               	retlw	65	;'A'
  6539     1203  3444               	retlw	68	;'D'
  6540     1204  3443               	retlw	67	;'C'
  6541     1205  343A               	retlw	58	;':'
  6542     1206  3420               	retlw	32	;' '
  6543     1207  3420               	retlw	32	;' '
  6544     1208  3425               	retlw	37	;'%'
  6545     1209  3475               	retlw	117	;'u'
  6546     120A  3420               	retlw	32	;' '
  6547     120B  340D               	retlw	13
  6548     120C  340A               	retlw	10
  6549     120D  3400               	retlw	0
  6550                           
  6551                           	psect	stringtext5
  6552     120E                     __pstringtext5:
  6553     120E                     STR_5:
  6554     120E  345B               	retlw	91	;'['
  6555     120F  3443               	retlw	67	;'C'
  6556     1210  3461               	retlw	97	;'a'
  6557     1211  346C               	retlw	108	;'l'
  6558     1212  3469               	retlw	105	;'i'
  6559     1213  3462               	retlw	98	;'b'
  6560     1214  3472               	retlw	114	;'r'
  6561     1215  3461               	retlw	97	;'a'
  6562     1216  3474               	retlw	116	;'t'
  6563     1217  3469               	retlw	105	;'i'
  6564     1218  346F               	retlw	111	;'o'
  6565     1219  346E               	retlw	110	;'n'
  6566     121A  345D               	retlw	93	;']'
  6567     121B  3420               	retlw	32	;' '
  6568     121C  342D               	retlw	45	;'-'
  6569     121D  342D               	retlw	45	;'-'
  6570     121E  342D               	retlw	45	;'-'
  6571     121F  3420               	retlw	32	;' '
  6572     1220  340D               	retlw	13
  6573     1221  340A               	retlw	10
  6574     1222  342D               	retlw	45	;'-'
  6575     1223  342D               	retlw	45	;'-'
  6576     1224  3459               	retlw	89	;'Y'
  6577     1225  346F               	retlw	111	;'o'
  6578     1226  3475               	retlw	117	;'u'
  6579     1227  3420               	retlw	32	;' '
  6580     1228  3468               	retlw	104	;'h'
  6581     1229  3461               	retlw	97	;'a'
  6582     122A  3476               	retlw	118	;'v'
  6583     122B  3465               	retlw	101	;'e'
  6584     122C  3420               	retlw	32	;' '
  6585     122D  3435               	retlw	53	;'5'
  6586     122E  3420               	retlw	32	;' '
  6587     122F  3473               	retlw	115	;'s'
  6588     1230  3465               	retlw	101	;'e'
  6589     1231  3463               	retlw	99	;'c'
  6590     1232  346F               	retlw	111	;'o'
  6591     1233  346E               	retlw	110	;'n'
  6592     1234  3464               	retlw	100	;'d'
  6593     1235  3473               	retlw	115	;'s'
  6594     1236  3420               	retlw	32	;' '
  6595     1237  3474               	retlw	116	;'t'
  6596     1238  346F               	retlw	111	;'o'
  6597     1239  3420               	retlw	32	;' '
  6598     123A  3470               	retlw	112	;'p'
  6599     123B  3472               	retlw	114	;'r'
  6600     123C  3465               	retlw	101	;'e'
  6601     123D  3473               	retlw	115	;'s'
  6602     123E  3473               	retlw	115	;'s'
  6603     123F  3420               	retlw	32	;' '
  6604     1240  3474               	retlw	116	;'t'
  6605     1241  3468               	retlw	104	;'h'
  6606     1242  3465               	retlw	101	;'e'
  6607     1243  3420               	retlw	32	;' '
  6608     1244  3463               	retlw	99	;'c'
  6609     1245  3461               	retlw	97	;'a'
  6610     1246  346C               	retlw	108	;'l'
  6611     1247  3469               	retlw	105	;'i'
  6612     1248  3462               	retlw	98	;'b'
  6613     1249  3472               	retlw	114	;'r'
  6614     124A  3461               	retlw	97	;'a'
  6615     124B  3474               	retlw	116	;'t'
  6616     124C  3469               	retlw	105	;'i'
  6617     124D  346F               	retlw	111	;'o'
  6618     124E  346E               	retlw	110	;'n'
  6619     124F  3420               	retlw	32	;' '
  6620     1250  3462               	retlw	98	;'b'
  6621     1251  3475               	retlw	117	;'u'
  6622     1252  3474               	retlw	116	;'t'
  6623     1253  3474               	retlw	116	;'t'
  6624     1254  346F               	retlw	111	;'o'
  6625     1255  346E               	retlw	110	;'n'
  6626     1256  342D               	retlw	45	;'-'
  6627     1257  342D               	retlw	45	;'-'
  6628     1258  3420               	retlw	32	;' '
  6629     1259  340D               	retlw	13
  6630     125A  340A               	retlw	10
  6631     125B  3400               	retlw	0
  6632                           
  6633                           	psect	stringtext6
  6634     125C                     __pstringtext6:
  6635     125C                     STR_24:
  6636     125C  345B               	retlw	91	;'['
  6637     125D  3452               	retlw	82	;'R'
  6638     125E  3465               	retlw	101	;'e'
  6639     125F  3471               	retlw	113	;'q'
  6640     1260  3475               	retlw	117	;'u'
  6641     1261  3465               	retlw	101	;'e'
  6642     1262  3473               	retlw	115	;'s'
  6643     1263  3474               	retlw	116	;'t'
  6644     1264  345D               	retlw	93	;']'
  6645     1265  3420               	retlw	32	;' '
  6646     1266  3453               	retlw	83	;'S'
  6647     1267  3465               	retlw	101	;'e'
  6648     1268  346E               	retlw	110	;'n'
  6649     1269  3464               	retlw	100	;'d'
  6650     126A  3420               	retlw	32	;' '
  6651     126B  3441               	retlw	65	;'A'
  6652     126C  3444               	retlw	68	;'D'
  6653     126D  3443               	retlw	67	;'C'
  6654     126E  345F               	retlw	95	;'_'
  6655     126F  3464               	retlw	100	;'d'
  6656     1270  3461               	retlw	97	;'a'
  6657     1271  3474               	retlw	116	;'t'
  6658     1272  3461               	retlw	97	;'a'
  6659     1273  3420               	retlw	32	;' '
  6660     1274  3472               	retlw	114	;'r'
  6661     1275  3465               	retlw	101	;'e'
  6662     1276  3471               	retlw	113	;'q'
  6663     1277  3475               	retlw	117	;'u'
  6664     1278  3465               	retlw	101	;'e'
  6665     1279  3473               	retlw	115	;'s'
  6666     127A  3474               	retlw	116	;'t'
  6667     127B  3420               	retlw	32	;' '
  6668     127C  3474               	retlw	116	;'t'
  6669     127D  346F               	retlw	111	;'o'
  6670     127E  3420               	retlw	32	;' '
  6671     127F  3470               	retlw	112	;'p'
  6672     1280  3448               	retlw	72	;'H'
  6673     1281  3434               	retlw	52	;'4'
  6674     1282  3438               	retlw	56	;'8'
  6675     1283  3435               	retlw	53	;'5'
  6676     1284  345F               	retlw	95	;'_'
  6677     1285  3470               	retlw	112	;'p'
  6678     1286  3472               	retlw	114	;'r'
  6679     1287  346F               	retlw	111	;'o'
  6680     1288  3462               	retlw	98	;'b'
  6681     1289  3465               	retlw	101	;'e'
  6682     128A  3420               	retlw	32	;' '
  6683     128B  342D               	retlw	45	;'-'
  6684     128C  3420               	retlw	32	;' '
  6685     128D  3443               	retlw	67	;'C'
  6686     128E  3441               	retlw	65	;'A'
  6687     128F  344C               	retlw	76	;'L'
  6688     1290  3449               	retlw	73	;'I'
  6689     1291  3442               	retlw	66	;'B'
  6690     1292  3452               	retlw	82	;'R'
  6691     1293  3441               	retlw	65	;'A'
  6692     1294  3454               	retlw	84	;'T'
  6693     1295  3449               	retlw	73	;'I'
  6694     1296  344F               	retlw	79	;'O'
  6695     1297  344E               	retlw	78	;'N'
  6696     1298  3420               	retlw	32	;' '
  6697     1299  344D               	retlw	77	;'M'
  6698     129A  344F               	retlw	79	;'O'
  6699     129B  3444               	retlw	68	;'D'
  6700     129C  3445               	retlw	69	;'E'
  6701     129D  3420               	retlw	32	;' '
  6702     129E  342D               	retlw	45	;'-'
  6703     129F  342D               	retlw	45	;'-'
  6704     12A0  342D               	retlw	45	;'-'
  6705     12A1  3420               	retlw	32	;' '
  6706     12A2  3420               	retlw	32	;' '
  6707     12A3  340D               	retlw	13
  6708     12A4  340A               	retlw	10
  6709     12A5  3400               	retlw	0
  6710                           
  6711                           	psect	stringtext7
  6712     12A6                     __pstringtext7:
  6713     12A6                     STR_22:
  6714     12A6  345B               	retlw	91	;'['
  6715     12A7  3452               	retlw	82	;'R'
  6716     12A8  3465               	retlw	101	;'e'
  6717     12A9  3471               	retlw	113	;'q'
  6718     12AA  3475               	retlw	117	;'u'
  6719     12AB  3465               	retlw	101	;'e'
  6720     12AC  3473               	retlw	115	;'s'
  6721     12AD  3474               	retlw	116	;'t'
  6722     12AE  345D               	retlw	93	;']'
  6723     12AF  3420               	retlw	32	;' '
  6724     12B0  3453               	retlw	83	;'S'
  6725     12B1  3465               	retlw	101	;'e'
  6726     12B2  346E               	retlw	110	;'n'
  6727     12B3  3464               	retlw	100	;'d'
  6728     12B4  3420               	retlw	32	;' '
  6729     12B5  3464               	retlw	100	;'d'
  6730     12B6  3461               	retlw	97	;'a'
  6731     12B7  3474               	retlw	116	;'t'
  6732     12B8  3461               	retlw	97	;'a'
  6733     12B9  3420               	retlw	32	;' '
  6734     12BA  3472               	retlw	114	;'r'
  6735     12BB  3465               	retlw	101	;'e'
  6736     12BC  3471               	retlw	113	;'q'
  6737     12BD  3475               	retlw	117	;'u'
  6738     12BE  3465               	retlw	101	;'e'
  6739     12BF  3473               	retlw	115	;'s'
  6740     12C0  3474               	retlw	116	;'t'
  6741     12C1  3420               	retlw	32	;' '
  6742     12C2  3474               	retlw	116	;'t'
  6743     12C3  346F               	retlw	111	;'o'
  6744     12C4  3420               	retlw	32	;' '
  6745     12C5  3470               	retlw	112	;'p'
  6746     12C6  3448               	retlw	72	;'H'
  6747     12C7  3434               	retlw	52	;'4'
  6748     12C8  3438               	retlw	56	;'8'
  6749     12C9  3435               	retlw	53	;'5'
  6750     12CA  345F               	retlw	95	;'_'
  6751     12CB  3470               	retlw	112	;'p'
  6752     12CC  3472               	retlw	114	;'r'
  6753     12CD  346F               	retlw	111	;'o'
  6754     12CE  3462               	retlw	98	;'b'
  6755     12CF  3465               	retlw	101	;'e'
  6756     12D0  3420               	retlw	32	;' '
  6757     12D1  342D               	retlw	45	;'-'
  6758     12D2  3420               	retlw	32	;' '
  6759     12D3  344D               	retlw	77	;'M'
  6760     12D4  3445               	retlw	69	;'E'
  6761     12D5  3441               	retlw	65	;'A'
  6762     12D6  3453               	retlw	83	;'S'
  6763     12D7  3455               	retlw	85	;'U'
  6764     12D8  3452               	retlw	82	;'R'
  6765     12D9  3445               	retlw	69	;'E'
  6766     12DA  344D               	retlw	77	;'M'
  6767     12DB  3445               	retlw	69	;'E'
  6768     12DC  344E               	retlw	78	;'N'
  6769     12DD  3454               	retlw	84	;'T'
  6770     12DE  3420               	retlw	32	;' '
  6771     12DF  344D               	retlw	77	;'M'
  6772     12E0  344F               	retlw	79	;'O'
  6773     12E1  3444               	retlw	68	;'D'
  6774     12E2  3445               	retlw	69	;'E'
  6775     12E3  3420               	retlw	32	;' '
  6776     12E4  342D               	retlw	45	;'-'
  6777     12E5  342D               	retlw	45	;'-'
  6778     12E6  342D               	retlw	45	;'-'
  6779     12E7  3420               	retlw	32	;' '
  6780     12E8  3420               	retlw	32	;' '
  6781     12E9  340D               	retlw	13
  6782     12EA  340A               	retlw	10
  6783     12EB  3400               	retlw	0
  6784                           
  6785                           	psect	stringtext8
  6786     1800                     __pstringtext8:
  6787     1800                     STR_6:
  6788     1800  345B               	retlw	91	;'['
  6789     1801  3452               	retlw	82	;'R'
  6790     1802  3458               	retlw	88	;'X'
  6791     1803  342D               	retlw	45	;'-'
  6792     1804  3442               	retlw	66	;'B'
  6793     1805  3455               	retlw	85	;'U'
  6794     1806  3446               	retlw	70	;'F'
  6795     1807  3446               	retlw	70	;'F'
  6796     1808  3445               	retlw	69	;'E'
  6797     1809  3452               	retlw	82	;'R'
  6798     180A  345D               	retlw	93	;']'
  6799     180B  3420               	retlw	32	;' '
  6800     180C  3476               	retlw	118	;'v'
  6801     180D  3461               	retlw	97	;'a'
  6802     180E  346C               	retlw	108	;'l'
  6803     180F  3475               	retlw	117	;'u'
  6804     1810  3465               	retlw	101	;'e'
  6805     1811  3420               	retlw	32	;' '
  6806     1812  3466               	retlw	102	;'f'
  6807     1813  3472               	retlw	114	;'r'
  6808     1814  346F               	retlw	111	;'o'
  6809     1815  346D               	retlw	109	;'m'
  6810     1816  3420               	retlw	32	;' '
  6811     1817  3470               	retlw	112	;'p'
  6812     1818  3448               	retlw	72	;'H'
  6813     1819  3434               	retlw	52	;'4'
  6814     181A  3438               	retlw	56	;'8'
  6815     181B  3435               	retlw	53	;'5'
  6816     181C  345F               	retlw	95	;'_'
  6817     181D  3470               	retlw	112	;'p'
  6818     181E  3472               	retlw	114	;'r'
  6819     181F  346F               	retlw	111	;'o'
  6820     1820  3462               	retlw	98	;'b'
  6821     1821  3465               	retlw	101	;'e'
  6822     1822  343A               	retlw	58	;':'
  6823     1823  3420               	retlw	32	;' '
  6824     1824  340D               	retlw	13
  6825     1825  340A               	retlw	10
  6826     1826  3470               	retlw	112	;'p'
  6827     1827  3448               	retlw	72	;'H'
  6828     1828  3420               	retlw	32	;' '
  6829     1829  3420               	retlw	32	;' '
  6830     182A  343A               	retlw	58	;':'
  6831     182B  3420               	retlw	32	;' '
  6832     182C  3425               	retlw	37	;'%'
  6833     182D  3475               	retlw	117	;'u'
  6834     182E  3420               	retlw	32	;' '
  6835     182F  340D               	retlw	13
  6836     1830  340A               	retlw	10
  6837     1831  3454               	retlw	84	;'T'
  6838     1832  3445               	retlw	69	;'E'
  6839     1833  344D               	retlw	77	;'M'
  6840     1834  3450               	retlw	80	;'P'
  6841     1835  343A               	retlw	58	;':'
  6842     1836  3420               	retlw	32	;' '
  6843     1837  3425               	retlw	37	;'%'
  6844     1838  3475               	retlw	117	;'u'
  6845     1839  3420               	retlw	32	;' '
  6846     183A  340D               	retlw	13
  6847     183B  340A               	retlw	10
  6848     183C  3400               	retlw	0
  6849                           
  6850                           	psect	stringtext9
  6851     183D                     __pstringtext9:
  6852     183D                     STR_28:
  6853     183D  3453               	retlw	83	;'S'
  6854     183E  3454               	retlw	84	;'T'
  6855     183F  3441               	retlw	65	;'A'
  6856     1840  3454               	retlw	84	;'T'
  6857     1841  3445               	retlw	69	;'E'
  6858     1842  345F               	retlw	95	;'_'
  6859     1843  3453               	retlw	83	;'S'
  6860     1844  3441               	retlw	65	;'A'
  6861     1845  3456               	retlw	86	;'V'
  6862     1846  3445               	retlw	69	;'E'
  6863     1847  345F               	retlw	95	;'_'
  6864     1848  3442               	retlw	66	;'B'
  6865     1849  344F               	retlw	79	;'O'
  6866     184A  3454               	retlw	84	;'T'
  6867     184B  3454               	retlw	84	;'T'
  6868     184C  344F               	retlw	79	;'O'
  6869     184D  344D               	retlw	77	;'M'
  6870     184E  345F               	retlw	95	;'_'
  6871     184F  3443               	retlw	67	;'C'
  6872     1850  3441               	retlw	65	;'A'
  6873     1851  344C               	retlw	76	;'L'
  6874     1852  3449               	retlw	73	;'I'
  6875     1853  3442               	retlw	66	;'B'
  6876     1854  3452               	retlw	82	;'R'
  6877     1855  3441               	retlw	65	;'A'
  6878     1856  3454               	retlw	84	;'T'
  6879     1857  3449               	retlw	73	;'I'
  6880     1858  344F               	retlw	79	;'O'
  6881     1859  344E               	retlw	78	;'N'
  6882     185A  345F               	retlw	95	;'_'
  6883     185B  3450               	retlw	80	;'P'
  6884     185C  344F               	retlw	79	;'O'
  6885     185D  3449               	retlw	73	;'I'
  6886     185E  344E               	retlw	78	;'N'
  6887     185F  3454               	retlw	84	;'T'
  6888     1860  3420               	retlw	32	;' '
  6889     1861  3453               	retlw	83	;'S'
  6890     1862  3461               	retlw	97	;'a'
  6891     1863  3476               	retlw	118	;'v'
  6892     1864  3465               	retlw	101	;'e'
  6893     1865  3464               	retlw	100	;'d'
  6894     1866  3420               	retlw	32	;' '
  6895     1867  340D               	retlw	13
  6896     1868  340A               	retlw	10
  6897     1869  3400               	retlw	0
  6898                           
  6899                           	psect	stringtext10
  6900     186A                     __pstringtext10:
  6901     186A                     STR_26:
  6902     186A  3453               	retlw	83	;'S'
  6903     186B  3454               	retlw	84	;'T'
  6904     186C  3441               	retlw	65	;'A'
  6905     186D  3454               	retlw	84	;'T'
  6906     186E  3445               	retlw	69	;'E'
  6907     186F  345F               	retlw	95	;'_'
  6908     1870  3453               	retlw	83	;'S'
  6909     1871  3441               	retlw	65	;'A'
  6910     1872  3456               	retlw	86	;'V'
  6911     1873  3445               	retlw	69	;'E'
  6912     1874  345F               	retlw	95	;'_'
  6913     1875  3454               	retlw	84	;'T'
  6914     1876  344F               	retlw	79	;'O'
  6915     1877  3450               	retlw	80	;'P'
  6916     1878  345F               	retlw	95	;'_'
  6917     1879  3443               	retlw	67	;'C'
  6918     187A  3441               	retlw	65	;'A'
  6919     187B  344C               	retlw	76	;'L'
  6920     187C  3449               	retlw	73	;'I'
  6921     187D  3442               	retlw	66	;'B'
  6922     187E  3452               	retlw	82	;'R'
  6923     187F  3441               	retlw	65	;'A'
  6924     1880  3454               	retlw	84	;'T'
  6925     1881  3449               	retlw	73	;'I'
  6926     1882  344F               	retlw	79	;'O'
  6927     1883  344E               	retlw	78	;'N'
  6928     1884  345F               	retlw	95	;'_'
  6929     1885  3450               	retlw	80	;'P'
  6930     1886  344F               	retlw	79	;'O'
  6931     1887  3449               	retlw	73	;'I'
  6932     1888  344E               	retlw	78	;'N'
  6933     1889  3454               	retlw	84	;'T'
  6934     188A  3420               	retlw	32	;' '
  6935     188B  3453               	retlw	83	;'S'
  6936     188C  3461               	retlw	97	;'a'
  6937     188D  3476               	retlw	118	;'v'
  6938     188E  3465               	retlw	101	;'e'
  6939     188F  3464               	retlw	100	;'d'
  6940     1890  3420               	retlw	32	;' '
  6941     1891  340D               	retlw	13
  6942     1892  340A               	retlw	10
  6943     1893  3400               	retlw	0
  6944                           
  6945                           	psect	stringtext11
  6946     1894                     __pstringtext11:
  6947     1894                     STR_25:
  6948     1894  345B               	retlw	91	;'['
  6949     1895  3452               	retlw	82	;'R'
  6950     1896  3465               	retlw	101	;'e'
  6951     1897  3463               	retlw	99	;'c'
  6952     1898  3465               	retlw	101	;'e'
  6953     1899  3469               	retlw	105	;'i'
  6954     189A  3476               	retlw	118	;'v'
  6955     189B  3465               	retlw	101	;'e'
  6956     189C  345D               	retlw	93	;']'
  6957     189D  3420               	retlw	32	;' '
  6958     189E  3441               	retlw	65	;'A'
  6959     189F  3444               	retlw	68	;'D'
  6960     18A0  3443               	retlw	67	;'C'
  6961     18A1  345F               	retlw	95	;'_'
  6962     18A2  3464               	retlw	100	;'d'
  6963     18A3  3461               	retlw	97	;'a'
  6964     18A4  3474               	retlw	116	;'t'
  6965     18A5  3461               	retlw	97	;'a'
  6966     18A6  3420               	retlw	32	;' '
  6967     18A7  3466               	retlw	102	;'f'
  6968     18A8  3472               	retlw	114	;'r'
  6969     18A9  346F               	retlw	111	;'o'
  6970     18AA  346D               	retlw	109	;'m'
  6971     18AB  3420               	retlw	32	;' '
  6972     18AC  3470               	retlw	112	;'p'
  6973     18AD  3448               	retlw	72	;'H'
  6974     18AE  3434               	retlw	52	;'4'
  6975     18AF  3438               	retlw	56	;'8'
  6976     18B0  3435               	retlw	53	;'5'
  6977     18B1  345F               	retlw	95	;'_'
  6978     18B2  3470               	retlw	112	;'p'
  6979     18B3  3472               	retlw	114	;'r'
  6980     18B4  346F               	retlw	111	;'o'
  6981     18B5  3462               	retlw	98	;'b'
  6982     18B6  3465               	retlw	101	;'e'
  6983     18B7  3420               	retlw	32	;' '
  6984     18B8  340D               	retlw	13
  6985     18B9  340A               	retlw	10
  6986     18BA  3400               	retlw	0
  6987                           
  6988                           	psect	stringtext12
  6989     18BB                     __pstringtext12:
  6990     18BB                     STR_23:
  6991     18BB  345B               	retlw	91	;'['
  6992     18BC  3452               	retlw	82	;'R'
  6993     18BD  3465               	retlw	101	;'e'
  6994     18BE  3463               	retlw	99	;'c'
  6995     18BF  3465               	retlw	101	;'e'
  6996     18C0  3469               	retlw	105	;'i'
  6997     18C1  3476               	retlw	118	;'v'
  6998     18C2  3465               	retlw	101	;'e'
  6999     18C3  345D               	retlw	93	;']'
  7000     18C4  3420               	retlw	32	;' '
  7001     18C5  3464               	retlw	100	;'d'
  7002     18C6  3461               	retlw	97	;'a'
  7003     18C7  3474               	retlw	116	;'t'
  7004     18C8  3461               	retlw	97	;'a'
  7005     18C9  3420               	retlw	32	;' '
  7006     18CA  3466               	retlw	102	;'f'
  7007     18CB  3472               	retlw	114	;'r'
  7008     18CC  346F               	retlw	111	;'o'
  7009     18CD  346D               	retlw	109	;'m'
  7010     18CE  3420               	retlw	32	;' '
  7011     18CF  3470               	retlw	112	;'p'
  7012     18D0  3448               	retlw	72	;'H'
  7013     18D1  3434               	retlw	52	;'4'
  7014     18D2  3438               	retlw	56	;'8'
  7015     18D3  3435               	retlw	53	;'5'
  7016     18D4  345F               	retlw	95	;'_'
  7017     18D5  3470               	retlw	112	;'p'
  7018     18D6  3472               	retlw	114	;'r'
  7019     18D7  346F               	retlw	111	;'o'
  7020     18D8  3462               	retlw	98	;'b'
  7021     18D9  3465               	retlw	101	;'e'
  7022     18DA  3420               	retlw	32	;' '
  7023     18DB  340D               	retlw	13
  7024     18DC  340A               	retlw	10
  7025     18DD  3400               	retlw	0
  7026                           
  7027                           	psect	stringtext13
  7028     18DE                     __pstringtext13:
  7029     18DE                     STR_7:
  7030     18DE  342D               	retlw	45	;'-'
  7031     18DF  342D               	retlw	45	;'-'
  7032     18E0  342D               	retlw	45	;'-'
  7033     18E1  342D               	retlw	45	;'-'
  7034     18E2  342D               	retlw	45	;'-'
  7035     18E3  342D               	retlw	45	;'-'
  7036     18E4  342D               	retlw	45	;'-'
  7037     18E5  342D               	retlw	45	;'-'
  7038     18E6  342D               	retlw	45	;'-'
  7039     18E7  342D               	retlw	45	;'-'
  7040     18E8  342D               	retlw	45	;'-'
  7041     18E9  342D               	retlw	45	;'-'
  7042     18EA  342D               	retlw	45	;'-'
  7043     18EB  342D               	retlw	45	;'-'
  7044     18EC  342D               	retlw	45	;'-'
  7045     18ED  342D               	retlw	45	;'-'
  7046     18EE  342D               	retlw	45	;'-'
  7047     18EF  342D               	retlw	45	;'-'
  7048     18F0  342D               	retlw	45	;'-'
  7049     18F1  342D               	retlw	45	;'-'
  7050     18F2  342D               	retlw	45	;'-'
  7051     18F3  342D               	retlw	45	;'-'
  7052     18F4  342D               	retlw	45	;'-'
  7053     18F5  342D               	retlw	45	;'-'
  7054     18F6  342D               	retlw	45	;'-'
  7055     18F7  342D               	retlw	45	;'-'
  7056     18F8  342D               	retlw	45	;'-'
  7057     18F9  342D               	retlw	45	;'-'
  7058     18FA  3420               	retlw	32	;' '
  7059     18FB  340D               	retlw	13
  7060     18FC  340A               	retlw	10
  7061     18FD  3400               	retlw	0
  7062                           
  7063                           	psect	stringtext14
  7064     18FE                     __pstringtext14:
  7065     18FE                     STR_1:
  7066     18FE  3450               	retlw	80	;'P'
  7067     18FF  3448               	retlw	72	;'H'
  7068     1900  3420               	retlw	32	;' '
  7069     1901  3450               	retlw	80	;'P'
  7070     1902  3472               	retlw	114	;'r'
  7071     1903  346F               	retlw	111	;'o'
  7072     1904  3462               	retlw	98	;'b'
  7073     1905  3465               	retlw	101	;'e'
  7074     1906  3420               	retlw	32	;' '
  7075     1907  3477               	retlw	119	;'w'
  7076     1908  3469               	retlw	105	;'i'
  7077     1909  3474               	retlw	116	;'t'
  7078     190A  3468               	retlw	104	;'h'
  7079     190B  3420               	retlw	32	;' '
  7080     190C  3452               	retlw	82	;'R'
  7081     190D  3453               	retlw	83	;'S'
  7082     190E  3434               	retlw	52	;'4'
  7083     190F  3438               	retlw	56	;'8'
  7084     1910  3435               	retlw	53	;'5'
  7085     1911  340D               	retlw	13
  7086     1912  340A               	retlw	10
  7087     1913  3400               	retlw	0
  7088                           
  7089                           	psect	stringtext15
  7090     1914                     __pstringtext15:
  7091     1914                     STR_31:
  7092     1914  3430               	retlw	48	;'0'
  7093     1915  3431               	retlw	49	;'1'
  7094     1916  3432               	retlw	50	;'2'
  7095     1917  3433               	retlw	51	;'3'
  7096     1918  3434               	retlw	52	;'4'
  7097     1919  3435               	retlw	53	;'5'
  7098     191A  3436               	retlw	54	;'6'
  7099     191B  3437               	retlw	55	;'7'
  7100     191C  3438               	retlw	56	;'8'
  7101     191D  3439               	retlw	57	;'9'
  7102     191E  3441               	retlw	65	;'A'
  7103     191F  3442               	retlw	66	;'B'
  7104     1920  3443               	retlw	67	;'C'
  7105     1921  3444               	retlw	68	;'D'
  7106     1922  3445               	retlw	69	;'E'
  7107     1923  3446               	retlw	70	;'F'
  7108     1924  3400               	retlw	0
  7109                           
  7110                           	psect	stringtext16
  7111     1925                     __pstringtext16:
  7112     1925                     STR_32:
  7113     1925  3430               	retlw	48	;'0'
  7114     1926  3431               	retlw	49	;'1'
  7115     1927  3432               	retlw	50	;'2'
  7116     1928  3433               	retlw	51	;'3'
  7117     1929  3434               	retlw	52	;'4'
  7118     192A  3435               	retlw	53	;'5'
  7119     192B  3436               	retlw	54	;'6'
  7120     192C  3437               	retlw	55	;'7'
  7121     192D  3438               	retlw	56	;'8'
  7122     192E  3439               	retlw	57	;'9'
  7123     192F  3461               	retlw	97	;'a'
  7124     1930  3462               	retlw	98	;'b'
  7125     1931  3463               	retlw	99	;'c'
  7126     1932  3464               	retlw	100	;'d'
  7127     1933  3465               	retlw	101	;'e'
  7128     1934  3466               	retlw	102	;'f'
  7129     1935  3400               	retlw	0
  7130                           
  7131                           	psect	stringtext17
  7132     1936                     __pstringtext17:
  7133     1936                     STR_20:
  7134     1936  3462               	retlw	98	;'b'
  7135     1937  3431               	retlw	49	;'1'
  7136     1938  3420               	retlw	32	;' '
  7137     1939  346C               	retlw	108	;'l'
  7138     193A  346F               	retlw	111	;'o'
  7139     193B  346E               	retlw	110	;'n'
  7140     193C  3467               	retlw	103	;'g'
  7141     193D  3420               	retlw	32	;' '
  7142     193E  3470               	retlw	112	;'p'
  7143     193F  3472               	retlw	114	;'r'
  7144     1940  3465               	retlw	101	;'e'
  7145     1941  3473               	retlw	115	;'s'
  7146     1942  3473               	retlw	115	;'s'
  7147     1943  3420               	retlw	32	;' '
  7148     1944  340D               	retlw	13
  7149     1945  340A               	retlw	10
  7150     1946  3400               	retlw	0
  7151                           
  7152                           	psect	stringtext18
  7153     1947                     __pstringtext18:
  7154     1947                     STR_21:
  7155     1947  3462               	retlw	98	;'b'
  7156     1948  3432               	retlw	50	;'2'
  7157     1949  3420               	retlw	32	;' '
  7158     194A  346C               	retlw	108	;'l'
  7159     194B  346F               	retlw	111	;'o'
  7160     194C  346E               	retlw	110	;'n'
  7161     194D  3467               	retlw	103	;'g'
  7162     194E  3420               	retlw	32	;' '
  7163     194F  3470               	retlw	112	;'p'
  7164     1950  3472               	retlw	114	;'r'
  7165     1951  3465               	retlw	101	;'e'
  7166     1952  3473               	retlw	115	;'s'
  7167     1953  3473               	retlw	115	;'s'
  7168     1954  3420               	retlw	32	;' '
  7169     1955  340D               	retlw	13
  7170     1956  340A               	retlw	10
  7171     1957  3400               	retlw	0
  7172                           
  7173                           	psect	stringtext19
  7174     1958                     __pstringtext19:
  7175     1958                     STR_18:
  7176     1958  3462               	retlw	98	;'b'
  7177     1959  3431               	retlw	49	;'1'
  7178     195A  3420               	retlw	32	;' '
  7179     195B  3463               	retlw	99	;'c'
  7180     195C  346C               	retlw	108	;'l'
  7181     195D  3469               	retlw	105	;'i'
  7182     195E  3463               	retlw	99	;'c'
  7183     195F  346B               	retlw	107	;'k'
  7184     1960  3465               	retlw	101	;'e'
  7185     1961  3464               	retlw	100	;'d'
  7186     1962  340D               	retlw	13
  7187     1963  340A               	retlw	10
  7188     1964  3400               	retlw	0
  7189                           
  7190                           	psect	stringtext20
  7191     1965                     __pstringtext20:
  7192     1965                     STR_19:
  7193     1965  3462               	retlw	98	;'b'
  7194     1966  3432               	retlw	50	;'2'
  7195     1967  3420               	retlw	32	;' '
  7196     1968  3463               	retlw	99	;'c'
  7197     1969  346C               	retlw	108	;'l'
  7198     196A  3469               	retlw	105	;'i'
  7199     196B  3463               	retlw	99	;'c'
  7200     196C  346B               	retlw	107	;'k'
  7201     196D  3465               	retlw	101	;'e'
  7202     196E  3464               	retlw	100	;'d'
  7203     196F  340D               	retlw	13
  7204     1970  340A               	retlw	10
  7205     1971  3400               	retlw	0
  7206                           
  7207                           	psect	stringtext21
  7208     1972                     __pstringtext21:
  7209     1972                     STR_3:
  7210     1972  3430               	retlw	48	;'0'
  7211     1973  3441               	retlw	65	;'A'
  7212     1974  3430               	retlw	48	;'0'
  7213     1975  3431               	retlw	49	;'1'
  7214     1976  3438               	retlw	56	;'8'
  7215     1977  3432               	retlw	50	;'2'
  7216     1978  3430               	retlw	48	;'0'
  7217     1979  3430               	retlw	48	;'0'
  7218     197A  3430               	retlw	48	;'0'
  7219     197B  3431               	retlw	49	;'1'
  7220     197C  3400               	retlw	0
  7221                           
  7222                           	psect	stringtext22
  7223     1987                     __pstringtext22:
  7224     1987                     STR_2:
  7225     1987  3473               	retlw	115	;'s'
  7226     1988  346E               	retlw	110	;'n'
  7227     1989  343A               	retlw	58	;':'
  7228     198A  3420               	retlw	32	;' '
  7229     198B  3425               	retlw	37	;'%'
  7230     198C  3473               	retlw	115	;'s'
  7231     198D  340D               	retlw	13
  7232     198E  340A               	retlw	10
  7233     198F  3400               	retlw	0
  7234                           
  7235                           	psect	stringtext23
  7236     1990                     __pstringtext23:
  7237     1990                     STR_30:
  7238     1990  3428               	retlw	40	;'('
  7239     1991  346E               	retlw	110	;'n'
  7240     1992  3475               	retlw	117	;'u'
  7241     1993  346C               	retlw	108	;'l'
  7242     1994  346C               	retlw	108	;'l'
  7243     1995  3429               	retlw	41	;')'
  7244     1996  3400               	retlw	0
  7245                           
  7246                           	psect	stringtext24
  7247     1997                     __pstringtext24:
  7248     1997                     STR_14:
  7249     1997  3425               	retlw	37	;'%'
  7250     1998  3430               	retlw	48	;'0'
  7251     1999  3432               	retlw	50	;'2'
  7252     199A  3458               	retlw	88	;'X'
  7253     199B  3420               	retlw	32	;' '
  7254     199C  3400               	retlw	0
  7255                           
  7256                           	psect	stringtext25
  7257     199D                     __pstringtext25:
  7258     199D                     STR_8:
  7259     199D  3425               	retlw	37	;'%'
  7260     199E  3430               	retlw	48	;'0'
  7261     199F  3438               	retlw	56	;'8'
  7262     19A0  3478               	retlw	120	;'x'
  7263     19A1  343A               	retlw	58	;':'
  7264     19A2  3400               	retlw	0
  7265                           
  7266                           	psect	stringtext26
  7267     19A3                     __pstringtext26:
  7268     19A3                     STR_9:
  7269     19A3  3420               	retlw	32	;' '
  7270     19A4  3425               	retlw	37	;'%'
  7271     19A5  3430               	retlw	48	;'0'
  7272     19A6  3432               	retlw	50	;'2'
  7273     19A7  3478               	retlw	120	;'x'
  7274     19A8  3400               	retlw	0
  7275                           
  7276                           	psect	stringtext27
  7277     19A9                     __pstringtext27:
  7278     19A9                     STR_10:
  7279     19A9  3420               	retlw	32	;' '
  7280     19AA  3420               	retlw	32	;' '
  7281     19AB  3420               	retlw	32	;' '
  7282     19AC  3400               	retlw	0
  7283                           
  7284                           	psect	stringtext28
  7285     19AD                     __pstringtext28:
  7286     19AD                     STR_12:
  7287     19AD  3425               	retlw	37	;'%'
  7288     19AE  3463               	retlw	99	;'c'
  7289     19AF  3400               	retlw	0
  7290                           
  7291                           	psect	stringtext29
  7292     0000                     __pstringtext29:
  7293     12A3                     
  7294                           	psect	cinit
  7295     006B                     start_initialization:	
  7296                           ; #config settings
  7297                           
  7298     006B                     __initialization:
  7299                           
  7300                           ; Initialize objects allocated to BANK2
  7301     006B  301B               	movlw	low __pidataBANK2
  7302     006C  0084               	movwf	4
  7303     006D  3095               	movlw	(high __pidataBANK2)| (0+128)
  7304     006E  0085               	movwf	5
  7305     006F  3053               	movlw	low __pdataBANK2
  7306     0070  0086               	movwf	6
  7307     0071  3001               	movlw	high __pdataBANK2
  7308     0072  0087               	movwf	7
  7309     0073  3018               	movlw	24
  7310     0074  3193  23F6  3180   	fcall	init_ram
  7311                           
  7312                           ; Initialize objects allocated to BANK3
  7313     0077  30D8               	movlw	low __pidataBANK3
  7314     0078  0084               	movwf	4
  7315     0079  3087               	movlw	(high __pidataBANK3)| (0+128)
  7316     007A  0085               	movwf	5
  7317     007B  30A0               	movlw	low __pdataBANK3
  7318     007C  0086               	movwf	6
  7319     007D  3001               	movlw	high __pdataBANK3
  7320     007E  0087               	movwf	7
  7321     007F  3028               	movlw	40
  7322     0080  3193  23F6  3180   	fcall	init_ram
  7323                           
  7324                           ; Initialize objects allocated to BANK5
  7325     0083  30C0               	movlw	low __pidataBANK5
  7326     0084  0084               	movwf	4
  7327     0085  3097               	movlw	(high __pidataBANK5)| (0+128)
  7328     0086  0085               	movwf	5
  7329     0087  30A0               	movlw	low __pdataBANK5
  7330     0088  0086               	movwf	6
  7331     0089  3002               	movlw	high __pdataBANK5
  7332     008A  0087               	movwf	7
  7333     008B  3040               	movlw	64
  7334     008C  3193  23F6  3180   	fcall	init_ram
  7335                           
  7336                           ; Clear objects allocated to COMMON
  7337     008F  01F8               	clrf	__pbssCOMMON& (0+127)
  7338     0090  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  7339     0091  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  7340     0092  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  7341     0093  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  7342     0094  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  7343                           
  7344                           ; Clear objects allocated to BANK0
  7345     0095  01EB               	clrf	__pbssBANK0& (0+127)
  7346     0096  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  7347     0097  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  7348     0098  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  7349     0099  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  7350                           
  7351                           ; Clear objects allocated to BANK1
  7352     009A  30E4               	movlw	low __pbssBANK1
  7353     009B  0084               	movwf	4
  7354     009C  3000               	movlw	high __pbssBANK1
  7355     009D  0085               	movwf	5
  7356     009E  3009               	movlw	9
  7357     009F  3193  23F0  3180   	fcall	clear_ram0
  7358                           
  7359                           ; Clear objects allocated to BANK2
  7360     00A2  303B               	movlw	low __pbssBANK2
  7361     00A3  0084               	movwf	4
  7362     00A4  3001               	movlw	high __pbssBANK2
  7363     00A5  0085               	movwf	5
  7364     00A6  3018               	movlw	24
  7365     00A7  3193  23F0  3180   	fcall	clear_ram0
  7366                           
  7367                           ; Clear objects allocated to BANK3
  7368     00AA  30C8               	movlw	low __pbssBANK3
  7369     00AB  0084               	movwf	4
  7370     00AC  3001               	movlw	high __pbssBANK3
  7371     00AD  0085               	movwf	5
  7372     00AE  3020               	movlw	32
  7373     00AF  3193  23F0  3180   	fcall	clear_ram0
  7374                           
  7375                           ; Clear objects allocated to BANK4
  7376     00B2  3020               	movlw	low __pbssBANK4
  7377     00B3  0084               	movwf	4
  7378     00B4  3002               	movlw	high __pbssBANK4
  7379     00B5  0085               	movwf	5
  7380     00B6  3040               	movlw	64
  7381     00B7  3193  23F0  3180   	fcall	clear_ram0
  7382                           
  7383                           ; Clear objects allocated to BANK6
  7384     00BA  3020               	movlw	low __pbssBANK6
  7385     00BB  0084               	movwf	4
  7386     00BC  3003               	movlw	high __pbssBANK6
  7387     00BD  0085               	movwf	5
  7388     00BE  3020               	movlw	32
  7389     00BF  3193  23F0  3180   	fcall	clear_ram0
  7390     00C2                     end_of_initialization:	
  7391                           ;End of C runtime variable initialization code
  7392                           
  7393     00C2                     __end_of__initialization:
  7394     00C2  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7395     00C3  0140               	movlb	0
  7396     00C4  3180  28C6         	ljmp	_main	;jump to C main() function
  7397                           
  7398                           	psect	bssCOMMON
  7399     0078                     __pbssCOMMON:
  7400     0078                     _ticks:
  7401     0078                     	ds	4
  7402     007C                     _currentRegister:
  7403     007C                     	ds	1
  7404     007D                     _rxbuffer_index:
  7405     007D                     	ds	1
  7406                           
  7407                           	psect	bssBANK0
  7408     006B                     __pbssBANK0:
  7409     006B                     _currentState:
  7410     006B                     	ds	1
  7411     006C                     _is_printing:
  7412     006C                     	ds	1
  7413     006D                     _is_RA5_button_pressed:
  7414     006D                     	ds	1
  7415     006E                     _uart_rx_states:
  7416     006E                     	ds	1
  7417     006F                     _tmp:
  7418     006F                     	ds	1
  7419                           
  7420                           	psect	bssBANK1
  7421     00E4                     __pbssBANK1:
  7422     00E4                     main@prev_ticks_btn:
  7423     00E4                     	ds	4
  7424     00E8                     _uart_rx_ticks:
  7425     00E8                     	ds	4
  7426     00EC                     _uart_rx_package_event:
  7427     00EC                     	ds	1
  7428                           
  7429                           	psect	bssBANK2
  7430     013B                     __pbssBANK2:
  7431     013B                     delay_state@prev_ticks_delay:
  7432     013B                     	ds	4
  7433     013F                     main@prev_ticks2:
  7434     013F                     	ds	4
  7435     0143                     main@prev_ticks_calibrate:
  7436     0143                     	ds	4
  7437     0147                     main@rev_ticks_btn_407:
  7438     0147                     	ds	4
  7439     014B                     main@prev_ticks_monitor:
  7440     014B                     	ds	4
  7441     014F                     main@prev_ticks:
  7442     014F                     	ds	4
  7443                           
  7444                           	psect	dataBANK2
  7445     0153                     __pdataBANK2:
  7446     0153                     save_top_adc_point@F10616:
  7447     0153                     	ds	8
  7448     015B                     _test_recived_data:
  7449     015B                     	ds	8
  7450     0163                     measured_adc@F10605:
  7451     0163                     	ds	8
  7452                           
  7453                           	psect	bssBANK3
  7454     01C8                     __pbssBANK3:
  7455     01C8                     _rxbuffer:
  7456     01C8                     	ds	32
  7457                           
  7458                           	psect	dataBANK3
  7459     01A0                     __pdataBANK3:
  7460     01A0                     send_measured_command@F10571:
  7461     01A0                     	ds	32
  7462     01C0                     save_bottom_adc_point@F10625:
  7463     01C0                     	ds	8
  7464                           
  7465                           	psect	bssBANK4
  7466     0220                     __pbssBANK4:
  7467     0220                     _slaveData:
  7468     0220                     	ds	64
  7469                           
  7470                           	psect	dataBANK5
  7471     02A0                     __pdataBANK5:
  7472     02A0                     set_bottom_calibrate_point@F10600:
  7473     02A0                     	ds	32
  7474     02C0                     set_top_calibrate_point@F10597:
  7475     02C0                     	ds	32
  7476                           
  7477                           	psect	bssBANK6
  7478     0320                     __pbssBANK6:
  7479     0320                     EUSART1_Read_1@F10506:
  7480     0320                     	ds	32
  7481                           
  7482                           	psect	inittext
  7483     13F6                     init_ram:
  7484     13F6  00FE               	movwf	btemp
  7485     13F7                     initloop:
  7486     13F7  0012               	moviw fsr0++
  7487     13F8  001E               	movwi fsr1++
  7488     13F9  0BFE               	decfsz	btemp,f
  7489     13FA  2BF7               	goto	initloop
  7490     13FB  3400               	retlw	0
  7491                           
  7492                           	psect	clrtext
  7493     13F0                     clear_ram0:	
  7494                           ;	Called with FSR0 containing the base address, and
  7495                           ;	WREG with the size to clear
  7496                           
  7497     13F0  0064               	clrwdt	;clear the watchdog before getting into this loop
  7498     13F1                     clrloop0:
  7499     13F1  0180               	clrf	0	;clear RAM location pointed to by FSR
  7500     13F2  3101               	addfsr 0,1
  7501     13F3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  7502     13F4  2BF1               	goto	clrloop0	;have we reached the end yet?
  7503     13F5  3400               	retlw	0	;all done for this memory range, return
  7504                           
  7505                           	psect	cstackBANK2
  7506     0120                     __pcstackBANK2:
  7507     0120                     main@b2:
  7508                           
  7509                           ; 27 bytes @ 0x0
  7510     0120                     	ds	27
  7511                           
  7512                           	psect	cstackBANK1
  7513     00A0                     __pcstackBANK1:
  7514     00A0                     main@now:
  7515                           
  7516                           ; 4 bytes @ 0x0
  7517     00A0                     	ds	4
  7518     00A4                     main@sensor_value:
  7519                           
  7520                           ; 37 bytes @ 0x4
  7521     00A4                     	ds	37
  7522     00C9                     main@b1:
  7523                           
  7524                           ; 27 bytes @ 0x29
  7525     00C9                     	ds	27
  7526                           
  7527                           	psect	cstackCOMMON
  7528     0070                     __pcstackCOMMON:
  7529     0070                     ?_isprint:
  7530     0070                     ?_isdigit:	
  7531                           ; 1 bit 
  7532                           
  7533     0070                     ?_isspace:	
  7534                           ; 1 bit 
  7535                           
  7536     0070                     ?_isalpha:	
  7537                           ; 1 bit 
  7538                           
  7539     0070                     ?_isupper:	
  7540                           ; 1 bit 
  7541                           
  7542     0070                     ?_PMD_Initialize:	
  7543                           ; 1 bit 
  7544                           
  7545     0070                     ?_PIN_MANAGER_Initialize:	
  7546                           ; 1 bytes @ 0x0
  7547                           
  7548     0070                     ?_OSCILLATOR_Initialize:	
  7549                           ; 1 bytes @ 0x0
  7550                           
  7551     0070                     ?_tmr0_init:	
  7552                           ; 1 bytes @ 0x0
  7553                           
  7554     0070                     ?_usart_init:	
  7555                           ; 1 bytes @ 0x0
  7556                           
  7557     0070                     ?_i2c_slave_init:	
  7558                           ; 1 bytes @ 0x0
  7559                           
  7560     0070                     ?_enable_uart_printf:	
  7561                           ; 1 bytes @ 0x0
  7562                           
  7563     0070                     ?_enable_tx_transmit:	
  7564                           ; 1 bytes @ 0x0
  7565                           
  7566     0070                     ?_measured_adc:	
  7567                           ; 1 bytes @ 0x0
  7568                           
  7569     0070                     ?_get_measured_adc_value:	
  7570                           ; 1 bytes @ 0x0
  7571                           
  7572     0070                     ?_dump_memory_map:	
  7573                           ; 1 bytes @ 0x0
  7574                           
  7575     0070                     ?_LED_flashes_three_times:	
  7576                           ; 1 bytes @ 0x0
  7577                           
  7578     0070                     ?_get_measured_value:	
  7579                           ; 1 bytes @ 0x0
  7580                           
  7581     0070                     ?_Enable_Global_Interrupt:	
  7582                           ; 1 bytes @ 0x0
  7583                           
  7584     0070                     ?_Disable_Global_Interrupt:	
  7585                           ; 1 bytes @ 0x0
  7586                           
  7587     0070                     ?_set_device_serial_number_to_i2c_slave_memorymap:	
  7588                           ; 1 bytes @ 0x0
  7589                           
  7590     0070                     ?_send_measured_command:	
  7591                           ; 1 bytes @ 0x0
  7592                           
  7593     0070                     ?_toupper:	
  7594                           ; 1 bytes @ 0x0
  7595                           
  7596     0070                     ?_SYSTEM_Initialize:	
  7597                           ; 1 bytes @ 0x0
  7598                           
  7599     0070                     ?_main:	
  7600                           ; 1 bytes @ 0x0
  7601                           
  7602     0070                     ?_i2c_slave_interrupt:	
  7603                           ; 1 bytes @ 0x0
  7604                           
  7605     0070                     ??_i2c_slave_interrupt:	
  7606                           ; 1 bytes @ 0x0
  7607                           
  7608     0070                     ?_putch:	
  7609                           ; 1 bytes @ 0x0
  7610                           
  7611     0070                     ?_EUSART1_Write:	
  7612                           ; 1 bytes @ 0x0
  7613                           
  7614     0070                     ?_INTERRUPT_InterruptManager:	
  7615                           ; 1 bytes @ 0x0
  7616                           
  7617     0070                     ?_get_ticks:	
  7618                           ; 1 bytes @ 0x0
  7619                           
  7620                           
  7621                           ; 4 bytes @ 0x0
  7622     0070                     	ds	1
  7623     0071                     i2c_slave_interrupt@isRead:
  7624                           
  7625                           ; 1 bytes @ 0x1
  7626     0071                     	ds	1
  7627     0072                     i2c_slave_interrupt@isNack:
  7628                           
  7629                           ; 1 bytes @ 0x2
  7630     0072                     	ds	1
  7631     0073                     i2c_slave_interrupt@value:
  7632                           
  7633                           ; 1 bytes @ 0x3
  7634     0073                     	ds	1
  7635     0074                     ??_get_ticks:
  7636     0074                     ??_INTERRUPT_InterruptManager:	
  7637                           ; 1 bytes @ 0x4
  7638                           
  7639                           
  7640                           ; 1 bytes @ 0x4
  7641     0074                     	ds	4
  7642                           
  7643                           	psect	cstackBANK0
  7644     0020                     __pcstackBANK0:
  7645     0020                     ??_PMD_Initialize:
  7646     0020                     ??_PIN_MANAGER_Initialize:	
  7647                           ; 1 bytes @ 0x0
  7648                           
  7649     0020                     ??_OSCILLATOR_Initialize:	
  7650                           ; 1 bytes @ 0x0
  7651                           
  7652     0020                     ??_tmr0_init:	
  7653                           ; 1 bytes @ 0x0
  7654                           
  7655     0020                     ??_usart_init:	
  7656                           ; 1 bytes @ 0x0
  7657                           
  7658     0020                     ??_i2c_slave_init:	
  7659                           ; 1 bytes @ 0x0
  7660                           
  7661     0020                     ?_init_button:	
  7662                           ; 1 bytes @ 0x0
  7663                           
  7664     0020                     ??_enable_uart_printf:	
  7665                           ; 1 bytes @ 0x0
  7666                           
  7667     0020                     ??_enable_tx_transmit:	
  7668                           ; 1 bytes @ 0x0
  7669                           
  7670     0020                     ?_dispatch:	
  7671                           ; 1 bytes @ 0x0
  7672                           
  7673     0020                     ??_LED_flashes_three_times:	
  7674                           ; 1 bytes @ 0x0
  7675                           
  7676     0020                     ??_Enable_Global_Interrupt:	
  7677                           ; 1 bytes @ 0x0
  7678                           
  7679     0020                     ?_i2c_slave_set_register:	
  7680                           ; 1 bytes @ 0x0
  7681                           
  7682     0020                     ??_Disable_Global_Interrupt:	
  7683                           ; 1 bytes @ 0x0
  7684                           
  7685     0020                     ??_isprint:	
  7686                           ; 1 bytes @ 0x0
  7687                           
  7688     0020                     ??_isdigit:	
  7689                           ; 1 bytes @ 0x0
  7690                           
  7691     0020                     ??_isspace:	
  7692                           ; 1 bytes @ 0x0
  7693                           
  7694     0020                     ??_toupper:	
  7695                           ; 1 bytes @ 0x0
  7696                           
  7697     0020                     ??_isupper:	
  7698                           ; 1 bytes @ 0x0
  7699                           
  7700     0020                     ??_SYSTEM_Initialize:	
  7701                           ; 1 bytes @ 0x0
  7702                           
  7703     0020                     ?___is_single_click:	
  7704                           ; 1 bytes @ 0x0
  7705                           
  7706     0020                     ?___is_double_click:	
  7707                           ; 1 bytes @ 0x0
  7708                           
  7709     0020                     ?___is_long_press:	
  7710                           ; 1 bytes @ 0x0
  7711                           
  7712     0020                     ?_is_single_click:	
  7713                           ; 1 bytes @ 0x0
  7714                           
  7715     0020                     ?_is_long_press:	
  7716                           ; 1 bytes @ 0x0
  7717                           
  7718     0020                     ?_reset_single_click_flag:	
  7719                           ; 1 bytes @ 0x0
  7720                           
  7721     0020                     ?_reset_long_press_flag:	
  7722                           ; 1 bytes @ 0x0
  7723                           
  7724     0020                     ??_putch:	
  7725                           ; 1 bytes @ 0x0
  7726                           
  7727     0020                     ??_EUSART1_Write:	
  7728                           ; 1 bytes @ 0x0
  7729                           
  7730     0020                     ?_crc16_modbus:	
  7731                           ; 1 bytes @ 0x0
  7732                           
  7733     0020                     ?___wmul:	
  7734                           ; 2 bytes @ 0x0
  7735                           
  7736     0020                     ?___lwdiv:	
  7737                           ; 2 bytes @ 0x0
  7738                           
  7739     0020                     ?_calculate_diff:	
  7740                           ; 2 bytes @ 0x0
  7741                           
  7742     0020                     ?_get_ticks_with_lock:	
  7743                           ; 4 bytes @ 0x0
  7744                           
  7745     0020                     ?___lmul:	
  7746                           ; 4 bytes @ 0x0
  7747                           
  7748     0020                     i2c_slave_set_register@value:	
  7749                           ; 4 bytes @ 0x0
  7750                           
  7751     0020                     putch@data:	
  7752                           ; 1 bytes @ 0x0
  7753                           
  7754     0020                     EUSART1_Write@txData:	
  7755                           ; 1 bytes @ 0x0
  7756                           
  7757     0020                     dispatch@b1:	
  7758                           ; 1 bytes @ 0x0
  7759                           
  7760     0020                     crc16_modbus@len:	
  7761                           ; 1 bytes @ 0x0
  7762                           
  7763     0020                     _isdigit$1945:	
  7764                           ; 1 bytes @ 0x0
  7765                           
  7766     0020                     _isprint$1948:	
  7767                           ; 1 bytes @ 0x0
  7768                           
  7769     0020                     _isspace$1982:	
  7770                           ; 1 bytes @ 0x0
  7771                           
  7772     0020                     _isupper$1985:	
  7773                           ; 1 bytes @ 0x0
  7774                           
  7775     0020                     init_button@b:	
  7776                           ; 1 bytes @ 0x0
  7777                           
  7778     0020                     ___is_single_click@b:	
  7779                           ; 2 bytes @ 0x0
  7780                           
  7781     0020                     ___is_double_click@b:	
  7782                           ; 2 bytes @ 0x0
  7783                           
  7784     0020                     ___is_long_press@b:	
  7785                           ; 2 bytes @ 0x0
  7786                           
  7787     0020                     is_single_click@b:	
  7788                           ; 2 bytes @ 0x0
  7789                           
  7790     0020                     is_long_press@b:	
  7791                           ; 2 bytes @ 0x0
  7792                           
  7793     0020                     reset_single_click_flag@b:	
  7794                           ; 2 bytes @ 0x0
  7795                           
  7796     0020                     reset_long_press_flag@b:	
  7797                           ; 2 bytes @ 0x0
  7798                           
  7799     0020                     ___wmul@multiplier:	
  7800                           ; 2 bytes @ 0x0
  7801                           
  7802     0020                     ___lwdiv@divisor:	
  7803                           ; 2 bytes @ 0x0
  7804                           
  7805     0020                     calculate_diff@now:	
  7806                           ; 2 bytes @ 0x0
  7807                           
  7808     0020                     ___lmul@multiplier:	
  7809                           ; 4 bytes @ 0x0
  7810                           
  7811                           
  7812                           ; 4 bytes @ 0x0
  7813     0020                     	ds	1
  7814     0021                     ??_i2c_slave_set_register:
  7815     0021                     ?_EUSART1_Write_1:	
  7816                           ; 1 bytes @ 0x1
  7817                           
  7818     0021                     i2c_slave_init@i:	
  7819                           ; 1 bytes @ 0x1
  7820                           
  7821     0021                     i2c_slave_set_register@registerAddress:	
  7822                           ; 1 bytes @ 0x1
  7823                           
  7824     0021                     EUSART1_Write_1@length:	
  7825                           ; 1 bytes @ 0x1
  7826                           
  7827     0021                     dispatch@b2:	
  7828                           ; 1 bytes @ 0x1
  7829                           
  7830     0021                     isdigit@c:	
  7831                           ; 1 bytes @ 0x1
  7832                           
  7833     0021                     isprint@c:	
  7834                           ; 1 bytes @ 0x1
  7835                           
  7836     0021                     isspace@c:	
  7837                           ; 1 bytes @ 0x1
  7838                           
  7839     0021                     isupper@c:	
  7840                           ; 1 bytes @ 0x1
  7841                           
  7842     0021                     toupper@c:	
  7843                           ; 1 bytes @ 0x1
  7844                           
  7845     0021                     LED_flashes_three_times@i:	
  7846                           ; 1 bytes @ 0x1
  7847                           
  7848                           
  7849                           ; 2 bytes @ 0x1
  7850     0021                     	ds	1
  7851     0022                     ??_init_button:
  7852     0022                     ??_isalpha:	
  7853                           ; 1 bytes @ 0x2
  7854                           
  7855     0022                     ?_i2c_slave_set_register_with_lock:	
  7856                           ; 1 bytes @ 0x2
  7857                           
  7858     0022                     ??_is_single_click:	
  7859                           ; 1 bytes @ 0x2
  7860                           
  7861     0022                     ??_is_long_press:	
  7862                           ; 1 bytes @ 0x2
  7863                           
  7864     0022                     ??_reset_single_click_flag:	
  7865                           ; 1 bytes @ 0x2
  7866                           
  7867     0022                     ??_reset_long_press_flag:	
  7868                           ; 1 bytes @ 0x2
  7869                           
  7870     0022                     ??_EUSART1_Write_1:	
  7871                           ; 1 bytes @ 0x2
  7872                           
  7873     0022                     ??_crc16_modbus:	
  7874                           ; 1 bytes @ 0x2
  7875                           
  7876     0022                     i2c_slave_set_register_with_lock@value:	
  7877                           ; 1 bytes @ 0x2
  7878                           
  7879     0022                     dispatch@b1_clicked_count_ptr:	
  7880                           ; 1 bytes @ 0x2
  7881                           
  7882     0022                     _isalpha$1979:	
  7883                           ; 1 bytes @ 0x2
  7884                           
  7885     0022                     ___wmul@multiplicand:	
  7886                           ; 1 bytes @ 0x2
  7887                           
  7888     0022                     ___lwdiv@dividend:	
  7889                           ; 2 bytes @ 0x2
  7890                           
  7891     0022                     ___is_single_click@now:	
  7892                           ; 2 bytes @ 0x2
  7893                           
  7894     0022                     ___is_double_click@now:	
  7895                           ; 4 bytes @ 0x2
  7896                           
  7897     0022                     ___is_long_press@now:	
  7898                           ; 4 bytes @ 0x2
  7899                           
  7900                           
  7901                           ; 4 bytes @ 0x2
  7902     0022                     	ds	1
  7903     0023                     ??_i2c_slave_set_register_with_lock:
  7904     0023                     i2c_slave_set_register_with_lock@registerAddress:	
  7905                           ; 1 bytes @ 0x3
  7906                           
  7907     0023                     EUSART1_Write_1@i:	
  7908                           ; 1 bytes @ 0x3
  7909                           
  7910     0023                     dispatch@b2_clicked_count_ptr:	
  7911                           ; 1 bytes @ 0x3
  7912                           
  7913     0023                     isalpha@c:	
  7914                           ; 1 bytes @ 0x3
  7915                           
  7916                           
  7917                           ; 1 bytes @ 0x3
  7918     0023                     	ds	1
  7919     0024                     ??_get_ticks_with_lock:
  7920     0024                     ??_dispatch:	
  7921                           ; 1 bytes @ 0x4
  7922                           
  7923     0024                     ??___wmul:	
  7924                           ; 1 bytes @ 0x4
  7925                           
  7926     0024                     ??___lwdiv:	
  7927                           ; 1 bytes @ 0x4
  7928                           
  7929     0024                     EUSART1_Write_1@txbuf:	
  7930                           ; 1 bytes @ 0x4
  7931                           
  7932     0024                     dispatch@b1_clicked_count:	
  7933                           ; 1 bytes @ 0x4
  7934                           
  7935     0024                     ___wmul@product:	
  7936                           ; 1 bytes @ 0x4
  7937                           
  7938     0024                     get_ticks_with_lock@result:	
  7939                           ; 2 bytes @ 0x4
  7940                           
  7941     0024                     calculate_diff@prev_ticks:	
  7942                           ; 4 bytes @ 0x4
  7943                           
  7944     0024                     ___lmul@multiplicand:	
  7945                           ; 4 bytes @ 0x4
  7946                           
  7947                           
  7948                           ; 4 bytes @ 0x4
  7949     0024                     	ds	1
  7950     0025                     ??_send_measured_command:
  7951     0025                     dispatch@b2_clicked_count:	
  7952                           ; 1 bytes @ 0x5
  7953                           
  7954     0025                     crc16_modbus@poly:	
  7955                           ; 1 bytes @ 0x5
  7956                           
  7957     0025                     ___lwdiv@quotient:	
  7958                           ; 2 bytes @ 0x5
  7959                           
  7960                           
  7961                           ; 2 bytes @ 0x5
  7962     0025                     	ds	1
  7963     0026                     ??___is_single_click:
  7964     0026                     ??___is_double_click:	
  7965                           ; 1 bytes @ 0x6
  7966                           
  7967     0026                     ??___is_long_press:	
  7968                           ; 1 bytes @ 0x6
  7969                           
  7970     0026                     dispatch@state:	
  7971                           ; 1 bytes @ 0x6
  7972                           
  7973     0026                     send_measured_command@txbuf:	
  7974                           ; 1 bytes @ 0x6
  7975                           
  7976                           
  7977                           ; 32 bytes @ 0x6
  7978     0026                     	ds	1
  7979     0027                     crc16_modbus@data:
  7980     0027                     ___lwdiv@counter:	
  7981                           ; 1 bytes @ 0x7
  7982                           
  7983                           
  7984                           ; 1 bytes @ 0x7
  7985     0027                     	ds	1
  7986     0028                     ??_calculate_diff:
  7987     0028                     ??___lmul:	
  7988                           ; 1 bytes @ 0x8
  7989                           
  7990     0028                     ?___lwmod:	
  7991                           ; 1 bytes @ 0x8
  7992                           
  7993     0028                     crc16_modbus@i:	
  7994                           ; 2 bytes @ 0x8
  7995                           
  7996     0028                     ___lwmod@divisor:	
  7997                           ; 2 bytes @ 0x8
  7998                           
  7999     0028                     ___lmul@product:	
  8000                           ; 2 bytes @ 0x8
  8001                           
  8002                           
  8003                           ; 4 bytes @ 0x8
  8004     0028                     	ds	2
  8005     002A                     crc16_modbus@j:
  8006     002A                     ___lwmod@dividend:	
  8007                           ; 2 bytes @ 0xA
  8008                           
  8009                           
  8010                           ; 2 bytes @ 0xA
  8011     002A                     	ds	2
  8012     002C                     ??___lwmod:
  8013     002C                     ?_strtol:	
  8014                           ; 1 bytes @ 0xC
  8015                           
  8016     002C                     strtol@endptr:	
  8017                           ; 4 bytes @ 0xC
  8018                           
  8019     002C                     crc16_modbus@crc:	
  8020                           ; 1 bytes @ 0xC
  8021                           
  8022                           
  8023                           ; 2 bytes @ 0xC
  8024     002C                     	ds	1
  8025     002D                     ___lwmod@counter:
  8026     002D                     strtol@base:	
  8027                           ; 1 bytes @ 0xD
  8028                           
  8029                           
  8030                           ; 2 bytes @ 0xD
  8031     002D                     	ds	1
  8032     002E                     ?_calculate_crc_and_fill_array:
  8033     002E                     ?_printf:	
  8034                           ; 1 bytes @ 0xE
  8035                           
  8036     002E                     ___is_single_click@condition1:	
  8037                           ; 2 bytes @ 0xE
  8038                           
  8039     002E                     ___is_double_click@condition1:	
  8040                           ; 1 bytes @ 0xE
  8041                           
  8042     002E                     ___is_long_press@condition1:	
  8043                           ; 1 bytes @ 0xE
  8044                           
  8045     002E                     calculate_crc_and_fill_array@data_len:	
  8046                           ; 1 bytes @ 0xE
  8047                           
  8048     002E                     printf@f:	
  8049                           ; 1 bytes @ 0xE
  8050                           
  8051                           
  8052                           ; 2 bytes @ 0xE
  8053     002E                     	ds	1
  8054     002F                     ??_calculate_crc_and_fill_array:
  8055     002F                     ___is_single_click@condition2:	
  8056                           ; 1 bytes @ 0xF
  8057                           
  8058     002F                     ___is_double_click@condition2:	
  8059                           ; 1 bytes @ 0xF
  8060                           
  8061     002F                     ___is_long_press@condition2:	
  8062                           ; 1 bytes @ 0xF
  8063                           
  8064                           
  8065                           ; 1 bytes @ 0xF
  8066     002F                     	ds	1
  8067     0030                     ??_strtol:
  8068     0030                     ___is_single_click@condition3:	
  8069                           ; 1 bytes @ 0x10
  8070                           
  8071     0030                     ___is_double_click@condition3:	
  8072                           ; 1 bytes @ 0x10
  8073                           
  8074     0030                     calculate_crc_and_fill_array@crc:	
  8075                           ; 1 bytes @ 0x10
  8076                           
  8077     0030                     calculate_diff@diff:	
  8078                           ; 2 bytes @ 0x10
  8079                           
  8080                           
  8081                           ; 4 bytes @ 0x10
  8082     0030                     	ds	1
  8083     0031                     ___is_single_click@condition4:
  8084                           
  8085                           ; 1 bytes @ 0x11
  8086     0031                     	ds	1
  8087     0032                     ?_update_mybutton:
  8088     0032                     calculate_crc_and_fill_array@data:	
  8089                           ; 1 bytes @ 0x12
  8090                           
  8091     0032                     update_mybutton@b:	
  8092                           ; 1 bytes @ 0x12
  8093                           
  8094                           
  8095                           ; 2 bytes @ 0x12
  8096     0032                     	ds	2
  8097     0034                     update_mybutton@signal:
  8098     0034                     strtol@sign:	
  8099                           ; 1 bytes @ 0x14
  8100                           
  8101                           
  8102                           ; 1 bytes @ 0x14
  8103     0034                     	ds	1
  8104     0035                     update_mybutton@now:
  8105     0035                     strtol@a:	
  8106                           ; 4 bytes @ 0x15
  8107                           
  8108                           
  8109                           ; 4 bytes @ 0x15
  8110     0035                     	ds	4
  8111     0039                     ??_update_mybutton:
  8112     0039                     strtol@s:	
  8113                           ; 1 bytes @ 0x19
  8114                           
  8115                           
  8116                           ; 1 bytes @ 0x19
  8117     0039                     	ds	1
  8118     003A                     ??_printf:
  8119     003A                     strtol@c:	
  8120                           ; 1 bytes @ 0x1A
  8121                           
  8122                           
  8123                           ; 1 bytes @ 0x1A
  8124     003A                     	ds	1
  8125     003B                     ??_set_device_serial_number_to_i2c_slave_memorymap:
  8126                           
  8127                           ; 1 bytes @ 0x1B
  8128     003B                     	ds	2
  8129     003D                     set_device_serial_number_to_i2c_slave_memorymap@value:
  8130                           
  8131                           ; 1 bytes @ 0x1D
  8132     003D                     	ds	1
  8133     003E                     _printf$1662:
  8134     003E                     set_device_serial_number_to_i2c_slave_memorymap@buffer:	
  8135                           ; 2 bytes @ 0x1E
  8136                           
  8137                           
  8138                           ; 3 bytes @ 0x1E
  8139     003E                     	ds	2
  8140     0040                     printf@idx:
  8141                           
  8142                           ; 1 bytes @ 0x20
  8143     0040                     	ds	1
  8144     0041                     set_device_serial_number_to_i2c_slave_memorymap@i:
  8145     0041                     printf@prec:	
  8146                           ; 1 bytes @ 0x21
  8147                           
  8148                           
  8149                           ; 1 bytes @ 0x21
  8150     0041                     	ds	1
  8151     0042                     printf@cp:
  8152                           
  8153                           ; 2 bytes @ 0x22
  8154     0042                     	ds	2
  8155     0044                     printf@val:
  8156                           
  8157                           ; 2 bytes @ 0x24
  8158     0044                     	ds	2
  8159     0046                     printf@ap:
  8160                           
  8161                           ; 1 bytes @ 0x26
  8162     0046                     	ds	1
  8163     0047                     printf@len:
  8164                           
  8165                           ; 2 bytes @ 0x27
  8166     0047                     	ds	2
  8167     0049                     printf@flag:
  8168                           
  8169                           ; 1 bytes @ 0x29
  8170     0049                     	ds	1
  8171     004A                     printf@width:
  8172                           
  8173                           ; 2 bytes @ 0x2A
  8174     004A                     	ds	2
  8175     004C                     printf@c:
  8176                           
  8177                           ; 1 bytes @ 0x2C
  8178     004C                     	ds	1
  8179     004D                     ?_measurement:
  8180     004D                     ?_monitoring_sync:	
  8181                           ; 1 bytes @ 0x2D
  8182                           
  8183     004D                     ??_measured_adc:	
  8184                           ; 1 bytes @ 0x2D
  8185                           
  8186     004D                     ?_save_top_adc_point:	
  8187                           ; 1 bytes @ 0x2D
  8188                           
  8189     004D                     ?_save_bottom_adc_point:	
  8190                           ; 1 bytes @ 0x2D
  8191                           
  8192     004D                     ??_get_measured_adc_value:	
  8193                           ; 1 bytes @ 0x2D
  8194                           
  8195     004D                     ??_get_measured_value:	
  8196                           ; 1 bytes @ 0x2D
  8197                           
  8198     004D                     ?_dump_buffer:	
  8199                           ; 1 bytes @ 0x2D
  8200                           
  8201     004D                     monitoring_sync@b1:	
  8202                           ; 1 bytes @ 0x2D
  8203                           
  8204     004D                     measurement@value:	
  8205                           ; 1 bytes @ 0x2D
  8206                           
  8207     004D                     save_top_adc_point@sensor_value:	
  8208                           ; 1 bytes @ 0x2D
  8209                           
  8210     004D                     save_bottom_adc_point@sensor_value:	
  8211                           ; 1 bytes @ 0x2D
  8212                           
  8213     004D                     dump_buffer@size:	
  8214                           ; 1 bytes @ 0x2D
  8215                           
  8216                           
  8217                           ; 2 bytes @ 0x2D
  8218     004D                     	ds	1
  8219     004E                     ??_measurement:
  8220     004E                     ??_save_top_adc_point:	
  8221                           ; 1 bytes @ 0x2E
  8222                           
  8223     004E                     ??_save_bottom_adc_point:	
  8224                           ; 1 bytes @ 0x2E
  8225                           
  8226     004E                     monitoring_sync@b2:	
  8227                           ; 1 bytes @ 0x2E
  8228                           
  8229     004E                     get_measured_adc_value@sensor_value:	
  8230                           ; 1 bytes @ 0x2E
  8231                           
  8232     004E                     measured_adc@measured_adc_command:	
  8233                           ; 1 bytes @ 0x2E
  8234                           
  8235                           
  8236                           ; 8 bytes @ 0x2E
  8237     004E                     	ds	1
  8238     004F                     ??_dump_buffer:
  8239     004F                     monitoring_sync@b1_clicked_count:	
  8240                           ; 1 bytes @ 0x2F
  8241                           
  8242     004F                     measurement@state:	
  8243                           ; 1 bytes @ 0x2F
  8244                           
  8245                           
  8246                           ; 1 bytes @ 0x2F
  8247     004F                     	ds	1
  8248     0050                     monitoring_sync@b2_clicked_count:
  8249                           
  8250                           ; 1 bytes @ 0x30
  8251     0050                     	ds	1
  8252     0051                     ??_monitoring_sync:
  8253     0051                     monitoring_sync@state:	
  8254                           ; 1 bytes @ 0x31
  8255                           
  8256                           
  8257                           ; 1 bytes @ 0x31
  8258     0051                     	ds	2
  8259     0053                     _dump_buffer$891:
  8260                           
  8261                           ; 2 bytes @ 0x33
  8262     0053                     	ds	2
  8263     0055                     dump_buffer@buffer:
  8264                           
  8265                           ; 1 bytes @ 0x35
  8266     0055                     	ds	1
  8267     0056                     dump_buffer@p:
  8268     0056                     save_top_adc_point@save_top_adc_command:	
  8269                           ; 1 bytes @ 0x36
  8270                           
  8271     0056                     save_bottom_adc_point@save_bottom_adc_command:	
  8272                           ; 8 bytes @ 0x36
  8273                           
  8274                           
  8275                           ; 8 bytes @ 0x36
  8276     0056                     	ds	1
  8277     0057                     dump_buffer@i:
  8278                           
  8279                           ; 2 bytes @ 0x37
  8280     0057                     	ds	2
  8281     0059                     dump_buffer@j:
  8282     0059                     get_measured_value@ph:	
  8283                           ; 2 bytes @ 0x39
  8284                           
  8285                           
  8286                           ; 2 bytes @ 0x39
  8287     0059                     	ds	2
  8288     005B                     ??_dump_memory_map:
  8289     005B                     get_measured_value@temp:	
  8290                           ; 1 bytes @ 0x3B
  8291                           
  8292                           
  8293                           ; 2 bytes @ 0x3B
  8294     005B                     	ds	2
  8295     005D                     get_measured_value@payload_ph:
  8296                           
  8297                           ; 4 bytes @ 0x3D
  8298     005D                     	ds	1
  8299     005E                     save_top_adc_point@states:
  8300     005E                     save_bottom_adc_point@states:	
  8301                           ; 1 bytes @ 0x3E
  8302                           
  8303                           
  8304                           ; 1 bytes @ 0x3E
  8305     005E                     	ds	3
  8306     0061                     get_measured_value@payload_temp:
  8307                           
  8308                           ; 4 bytes @ 0x41
  8309     0061                     	ds	4
  8310     0065                     get_measured_value@sensor_value:
  8311                           
  8312                           ; 1 bytes @ 0x45
  8313     0065                     	ds	1
  8314     0066                     ??_main:
  8315                           
  8316                           ; 1 bytes @ 0x46
  8317     0066                     	ds	2
  8318     0068                     main@b2_clicked_count:
  8319                           
  8320                           ; 1 bytes @ 0x48
  8321     0068                     	ds	1
  8322     0069                     main@b1_clicked_count:
  8323                           
  8324                           ; 1 bytes @ 0x49
  8325     0069                     	ds	1
  8326     006A                     main@state:
  8327                           
  8328                           ; 1 bytes @ 0x4A
  8329     006A                     	ds	1
  8330                           
  8331                           	psect	maintext
  8332     00C6                     __pmaintext:	
  8333 ;;
  8334 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  8335 ;;
  8336 ;; *************** function _main *****************
  8337 ;; Defined at:
  8338 ;;		line 33 in file "main.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;		None
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  now             4    0[BANK1 ] unsigned long 
  8343 ;;  sensor_value   37    4[BANK1 ] struct values
  8344 ;;  b2             27    0[BANK2 ] struct mybutton
  8345 ;;  b1             27   41[BANK1 ] struct mybutton
  8346 ;;  state           1   74[BANK0 ] enum E10545
  8347 ;;  b1_clicked_c    1   73[BANK0 ] unsigned char 
  8348 ;;  b2_clicked_c    1   72[BANK0 ] unsigned char 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : B3F/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Locals:         0       3      68      27       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Totals:         0       5      68      27       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;Total ram usage:      100 bytes
  8363 ;; Hardware stack levels required when called: 6
  8364 ;; This function calls:
  8365 ;;		_Disable_Global_Interrupt
  8366 ;;		_Enable_Global_Interrupt
  8367 ;;		_LED_flashes_three_times
  8368 ;;		_SYSTEM_Initialize
  8369 ;;		_calculate_diff
  8370 ;;		_dispatch
  8371 ;;		_dump_memory_map
  8372 ;;		_enable_tx_transmit
  8373 ;;		_enable_uart_printf
  8374 ;;		_get_measured_adc_value
  8375 ;;		_get_measured_value
  8376 ;;		_get_ticks_with_lock
  8377 ;;		_i2c_slave_init
  8378 ;;		_i2c_slave_set_register
  8379 ;;		_init_button
  8380 ;;		_measured_adc
  8381 ;;		_measurement
  8382 ;;		_monitoring_sync
  8383 ;;		_printf
  8384 ;;		_save_bottom_adc_point
  8385 ;;		_save_top_adc_point
  8386 ;;		_set_device_serial_number_to_i2c_slave_memorymap
  8387 ;;		_tmr0_init
  8388 ;;		_update_mybutton
  8389 ;;		_usart_init
  8390 ;; This function is called by:
  8391 ;;		Startup code after reset
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395     00C6                     _main:	
  8396                           ;psect for function _main
  8397                           
  8398     00C6                     l4399:	
  8399                           ;incstack = 0
  8400                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8401                           
  8402                           
  8403                           ;main.c: 34: SYSTEM_Initialize();
  8404     00C6  3194  2438  3180   	fcall	_SYSTEM_Initialize
  8405                           
  8406                           ;main.c: 35: tmr0_init();
  8407     00C9  3194  2479  3180   	fcall	_tmr0_init
  8408                           
  8409                           ;main.c: 36: usart_init();
  8410     00CC  3194  2494  3180   	fcall	_usart_init
  8411     00CF                     l4401:
  8412                           
  8413                           ;main.c: 37: i2c_slave_init();
  8414     00CF  3195  25C6  3180   	fcall	_i2c_slave_init
  8415     00D2                     l4403:
  8416                           
  8417                           ;main.c: 40: ANSELAbits.ANSA4 = 0;
  8418     00D2  017E               	movlb	62	; select bank62
  8419     00D3  1238               	bcf	56,4	;volatile
  8420     00D4                     l4405:
  8421                           
  8422                           ;main.c: 41: TRISAbits.TRISA4 = 1;
  8423     00D4  0140               	movlb	0	; select bank0
  8424     00D5  1612               	bsf	18,4	;volatile
  8425     00D6                     l4407:
  8426                           
  8427                           ;main.c: 42: ANSELAbits.ANSA5 = 0;
  8428     00D6  017E               	movlb	62	; select bank62
  8429     00D7  12B8               	bcf	56,5	;volatile
  8430     00D8                     l4409:
  8431                           
  8432                           ;main.c: 43: TRISAbits.TRISA5 = 1;
  8433     00D8  0140               	movlb	0	; select bank0
  8434     00D9  1692               	bsf	18,5	;volatile
  8435     00DA                     l4411:
  8436                           
  8437                           ;main.c: 45: MyButton b1;;main.c: 46: MyButton b2;;main.c: 48: init_button(&b1);
  8438     00DA  30C9               	movlw	low main@b1
  8439     00DB  00A0               	movwf	init_button@b
  8440     00DC  3000               	movlw	high main@b1
  8441     00DD  00A1               	movwf	init_button@b+1
  8442     00DE  3189  211D  3180   	fcall	_init_button
  8443     00E1                     l4413:
  8444                           
  8445                           ;main.c: 49: init_button(&b2);
  8446     00E1  3020               	movlw	low main@b2
  8447     00E2  0140               	movlb	0	; select bank0
  8448     00E3  00A0               	movwf	init_button@b
  8449     00E4  3001               	movlw	high main@b2
  8450     00E5  00A1               	movwf	init_button@b+1
  8451     00E6  3189  211D  3180   	fcall	_init_button
  8452     00E9                     l4415:
  8453                           
  8454                           ;main.c: 51: States state = STATE_MEASURE;
  8455     00E9  3002               	movlw	2
  8456     00EA  0140               	movlb	0	; select bank0
  8457     00EB  00EA               	movwf	main@state
  8458     00EC                     l4417:
  8459                           
  8460                           ;main.c: 53: uint8_t b1_clicked_count = 0;
  8461     00EC  01E9               	clrf	main@b1_clicked_count
  8462     00ED                     l4419:
  8463                           
  8464                           ;main.c: 54: uint8_t b2_clicked_count = 0;
  8465     00ED  01E8               	clrf	main@b2_clicked_count
  8466     00EE                     l4421:
  8467                           
  8468                           ;main.c: 56: SensorValue sensor_value;;main.c: 59: enable_uart_printf();
  8469     00EE  3193  23EB  3180   	fcall	_enable_uart_printf
  8470     00F1                     l4423:
  8471                           
  8472                           ;main.c: 60: printf("PH Probe with RS485\r\n");
  8473     00F1  30FE               	movlw	low (STR_1| (0+32768))
  8474     00F2  0140               	movlb	0	; select bank0
  8475     00F3  00AE               	movwf	printf@f
  8476     00F4  3098               	movlw	high (STR_1| (0+32768))
  8477     00F5  00AF               	movwf	printf@f+1
  8478     00F6  3183  23A0  3180   	fcall	_printf
  8479     00F9                     l4425:
  8480                           
  8481                           ;main.c: 61: printf("sn: %s\r\n", "0A01820001");
  8482     00F9  3087               	movlw	low (STR_2| (0+32768))
  8483     00FA  0140               	movlb	0	; select bank0
  8484     00FB  00AE               	movwf	printf@f
  8485     00FC  3099               	movlw	high (STR_2| (0+32768))
  8486     00FD  00AF               	movwf	printf@f+1
  8487     00FE  3072               	movlw	low (STR_3| (0+32768))
  8488     00FF  00B0               	movwf	low ((?_printf| 0+2))
  8489     0100  3099               	movlw	high (STR_3| (0+32768))
  8490     0101  00B1               	movwf	(low ((?_printf| 0+2))+1)
  8491     0102  3183  23A0  3180   	fcall	_printf
  8492     0105                     l4427:
  8493                           
  8494                           ;main.c: 62: _delay((unsigned long)((10)*(1000000/4000.0)));
  8495     0105  3004               	movlw	4
  8496     0106  0140               	movlb	0	; select bank0
  8497     0107  00E6               	movwf	??_main
  8498     0108  303D               	movlw	61
  8499     0109                     u3867:
  8500     0109  0B89               	decfsz	9,f
  8501     010A  2909               	goto	u3867
  8502     010B  0BE6               	decfsz	??_main,f
  8503     010C  2909               	goto	u3867
  8504     010D  3200               	nop2
  8505     010E                     l4429:
  8506                           
  8507                           ;main.c: 63: enable_tx_transmit();
  8508     010E  3194  2486  3180   	fcall	_enable_tx_transmit
  8509     0111                     l4431:
  8510                           
  8511                           ;main.c: 67: INTCONbits.GIE = 1;
  8512     0111  178B               	bsf	11,7	;volatile
  8513     0112                     l4433:
  8514                           
  8515                           ;main.c: 68: INTCONbits.PEIE = 1;
  8516     0112  170B               	bsf	11,6	;volatile
  8517     0113                     l4435:
  8518                           
  8519                           ;main.c: 72: uint32_t now = get_ticks_with_lock();
  8520     0113  3194  24DD  3180   	fcall	_get_ticks_with_lock
  8521     0116  0140               	movlb	0	; select bank0
  8522     0117  0823               	movf	?_get_ticks_with_lock+3,w
  8523     0118  0141               	movlb	1	; select bank1
  8524     0119  00A3               	movwf	(main@now+3)^(0+128)
  8525     011A  0140               	movlb	0	; select bank0
  8526     011B  0822               	movf	?_get_ticks_with_lock+2,w
  8527     011C  0141               	movlb	1	; select bank1
  8528     011D  00A2               	movwf	(main@now+2)^(0+128)
  8529     011E  0140               	movlb	0	; select bank0
  8530     011F  0821               	movf	?_get_ticks_with_lock+1,w
  8531     0120  0141               	movlb	1	; select bank1
  8532     0121  00A1               	movwf	(main@now+1)^(0+128)
  8533     0122  0140               	movlb	0	; select bank0
  8534     0123  0820               	movf	?_get_ticks_with_lock,w
  8535     0124  0141               	movlb	1	; select bank1
  8536     0125  00A0               	movwf	main@now^(0+128)
  8537     0126                     l4437:
  8538                           
  8539                           ;main.c: 73: static uint32_t prev_ticks_btn = 0;;main.c: 78: if(calculate_diff(now, prev
      +                          _ticks_btn) >= 20){
  8540     0126  0823               	movf	(main@now+3)^(0+128),w
  8541     0127  0140               	movlb	0	; select bank0
  8542     0128  00A3               	movwf	calculate_diff@now+3
  8543     0129  0141               	movlb	1	; select bank1
  8544     012A  0822               	movf	(main@now+2)^(0+128),w
  8545     012B  0140               	movlb	0	; select bank0
  8546     012C  00A2               	movwf	calculate_diff@now+2
  8547     012D  0141               	movlb	1	; select bank1
  8548     012E  0821               	movf	(main@now+1)^(0+128),w
  8549     012F  0140               	movlb	0	; select bank0
  8550     0130  00A1               	movwf	calculate_diff@now+1
  8551     0131  0141               	movlb	1	; select bank1
  8552     0132  0820               	movf	main@now^(0+128),w
  8553     0133  0140               	movlb	0	; select bank0
  8554     0134  00A0               	movwf	calculate_diff@now
  8555     0135  0141               	movlb	1	; select bank1
  8556     0136  0867               	movf	(main@prev_ticks_btn+3)^(0+128),w
  8557     0137  0140               	movlb	0	; select bank0
  8558     0138  00A7               	movwf	calculate_diff@prev_ticks+3
  8559     0139  0141               	movlb	1	; select bank1
  8560     013A  0866               	movf	(main@prev_ticks_btn+2)^(0+128),w
  8561     013B  0140               	movlb	0	; select bank0
  8562     013C  00A6               	movwf	calculate_diff@prev_ticks+2
  8563     013D  0141               	movlb	1	; select bank1
  8564     013E  0865               	movf	(main@prev_ticks_btn+1)^(0+128),w
  8565     013F  0140               	movlb	0	; select bank0
  8566     0140  00A5               	movwf	calculate_diff@prev_ticks+1
  8567     0141  0141               	movlb	1	; select bank1
  8568     0142  0864               	movf	main@prev_ticks_btn^(0+128),w
  8569     0143  0140               	movlb	0	; select bank0
  8570     0144  00A4               	movwf	calculate_diff@prev_ticks
  8571     0145  3188  206E  3180   	fcall	_calculate_diff
  8572     0148  0140               	movlb	0	; select bank0
  8573     0149  0823               	movf	?_calculate_diff+3,w
  8574     014A  1D03               	btfss	3,2
  8575     014B  2958               	goto	u3820
  8576     014C  0822               	movf	?_calculate_diff+2,w
  8577     014D  1D03               	btfss	3,2
  8578     014E  2958               	goto	u3820
  8579     014F  0821               	movf	?_calculate_diff+1,w
  8580     0150  1D03               	btfss	3,2
  8581     0151  2958               	goto	u3820
  8582     0152  3014               	movlw	20
  8583     0153  0220               	subwf	?_calculate_diff,w
  8584     0154  1C03               	btfss	3,0
  8585     0155  2957               	goto	u3821
  8586     0156  2958               	goto	u3820
  8587     0157                     u3821:
  8588     0157  2B2E               	goto	l4541
  8589     0158                     u3820:
  8590     0158                     l4439:
  8591                           
  8592                           ;main.c: 79: prev_ticks_btn = now;
  8593     0158  0141               	movlb	1	; select bank1
  8594     0159  0823               	movf	(main@now+3)^(0+128),w
  8595     015A  00E7               	movwf	(main@prev_ticks_btn+3)^(0+128)
  8596     015B  0822               	movf	(main@now+2)^(0+128),w
  8597     015C  00E6               	movwf	(main@prev_ticks_btn+2)^(0+128)
  8598     015D  0821               	movf	(main@now+1)^(0+128),w
  8599     015E  00E5               	movwf	(main@prev_ticks_btn+1)^(0+128)
  8600     015F  0820               	movf	main@now^(0+128),w
  8601     0160  00E4               	movwf	main@prev_ticks_btn^(0+128)
  8602     0161                     l4441:
  8603                           
  8604                           ;main.c: 80: update_mybutton(&b1, PORTAbits.RA4, get_ticks_with_lock());
  8605     0161  30C9               	movlw	low main@b1
  8606     0162  0140               	movlb	0	; select bank0
  8607     0163  00B2               	movwf	update_mybutton@b
  8608     0164  3000               	movlw	high main@b1
  8609     0165  00B3               	movwf	update_mybutton@b+1
  8610     0166  3000               	movlw	0
  8611     0167  1A0C               	btfsc	12,4	;volatile
  8612     0168  3001               	movlw	1
  8613     0169  00B4               	movwf	update_mybutton@signal
  8614     016A  3194  24DD  3180   	fcall	_get_ticks_with_lock
  8615     016D  0140               	movlb	0	; select bank0
  8616     016E  0823               	movf	?_get_ticks_with_lock+3,w
  8617     016F  00B8               	movwf	update_mybutton@now+3
  8618     0170  0822               	movf	?_get_ticks_with_lock+2,w
  8619     0171  00B7               	movwf	update_mybutton@now+2
  8620     0172  0821               	movf	?_get_ticks_with_lock+1,w
  8621     0173  00B6               	movwf	update_mybutton@now+1
  8622     0174  0820               	movf	?_get_ticks_with_lock,w
  8623     0175  00B5               	movwf	update_mybutton@now
  8624     0176  318E  2602  3180   	fcall	_update_mybutton
  8625     0179                     l4443:
  8626                           
  8627                           ;main.c: 81: update_mybutton(&b2, PORTAbits.RA5, get_ticks_with_lock());
  8628     0179  3020               	movlw	low main@b2
  8629     017A  0140               	movlb	0	; select bank0
  8630     017B  00B2               	movwf	update_mybutton@b
  8631     017C  3001               	movlw	high main@b2
  8632     017D  00B3               	movwf	update_mybutton@b+1
  8633     017E  3000               	movlw	0
  8634     017F  1A8C               	btfsc	12,5	;volatile
  8635     0180  3001               	movlw	1
  8636     0181  00B4               	movwf	update_mybutton@signal
  8637     0182  3194  24DD  3180   	fcall	_get_ticks_with_lock
  8638     0185  0140               	movlb	0	; select bank0
  8639     0186  0823               	movf	?_get_ticks_with_lock+3,w
  8640     0187  00B8               	movwf	update_mybutton@now+3
  8641     0188  0822               	movf	?_get_ticks_with_lock+2,w
  8642     0189  00B7               	movwf	update_mybutton@now+2
  8643     018A  0821               	movf	?_get_ticks_with_lock+1,w
  8644     018B  00B6               	movwf	update_mybutton@now+1
  8645     018C  0820               	movf	?_get_ticks_with_lock,w
  8646     018D  00B5               	movwf	update_mybutton@now
  8647     018E  318E  2602  3180   	fcall	_update_mybutton
  8648     0191  2B2E               	goto	l4541
  8649     0192                     l4447:
  8650                           
  8651                           ;main.c: 96: if(calculate_diff(now, prev_ticks) >= 5000){
  8652     0192  0141               	movlb	1	; select bank1
  8653     0193  0823               	movf	(main@now+3)^(0+128),w
  8654     0194  0140               	movlb	0	; select bank0
  8655     0195  00A3               	movwf	calculate_diff@now+3
  8656     0196  0141               	movlb	1	; select bank1
  8657     0197  0822               	movf	(main@now+2)^(0+128),w
  8658     0198  0140               	movlb	0	; select bank0
  8659     0199  00A2               	movwf	calculate_diff@now+2
  8660     019A  0141               	movlb	1	; select bank1
  8661     019B  0821               	movf	(main@now+1)^(0+128),w
  8662     019C  0140               	movlb	0	; select bank0
  8663     019D  00A1               	movwf	calculate_diff@now+1
  8664     019E  0141               	movlb	1	; select bank1
  8665     019F  0820               	movf	main@now^(0+128),w
  8666     01A0  0140               	movlb	0	; select bank0
  8667     01A1  00A0               	movwf	calculate_diff@now
  8668     01A2  0142               	movlb	2	; select bank2
  8669     01A3  0852               	movf	(main@prev_ticks+3)^(0+256),w
  8670     01A4  0140               	movlb	0	; select bank0
  8671     01A5  00A7               	movwf	calculate_diff@prev_ticks+3
  8672     01A6  0142               	movlb	2	; select bank2
  8673     01A7  0851               	movf	(main@prev_ticks+2)^(0+256),w
  8674     01A8  0140               	movlb	0	; select bank0
  8675     01A9  00A6               	movwf	calculate_diff@prev_ticks+2
  8676     01AA  0142               	movlb	2	; select bank2
  8677     01AB  0850               	movf	(main@prev_ticks+1)^(0+256),w
  8678     01AC  0140               	movlb	0	; select bank0
  8679     01AD  00A5               	movwf	calculate_diff@prev_ticks+1
  8680     01AE  0142               	movlb	2	; select bank2
  8681     01AF  084F               	movf	main@prev_ticks^(0+256),w
  8682     01B0  0140               	movlb	0	; select bank0
  8683     01B1  00A4               	movwf	calculate_diff@prev_ticks
  8684     01B2  3188  206E  3180   	fcall	_calculate_diff
  8685     01B5  0140               	movlb	0	; select bank0
  8686     01B6  0823               	movf	?_calculate_diff+3,w
  8687     01B7  1D03               	btfss	3,2
  8688     01B8  29C4               	goto	u3830
  8689     01B9  0822               	movf	?_calculate_diff+2,w
  8690     01BA  1D03               	btfss	3,2
  8691     01BB  29C4               	goto	u3830
  8692     01BC  3088               	movlw	136
  8693     01BD  0220               	subwf	?_calculate_diff,w
  8694     01BE  3013               	movlw	19
  8695     01BF  3B21               	subwfb	?_calculate_diff+1,w
  8696     01C0  1C03               	btfss	3,0
  8697     01C1  29C3               	goto	u3831
  8698     01C2  29C4               	goto	u3830
  8699     01C3                     u3831:
  8700     01C3  29DE               	goto	l4455
  8701     01C4                     u3830:
  8702     01C4                     l4449:
  8703                           
  8704                           ;main.c: 97: prev_ticks = now;
  8705     01C4  0141               	movlb	1	; select bank1
  8706     01C5  0823               	movf	(main@now+3)^(0+128),w
  8707     01C6  0142               	movlb	2	; select bank2
  8708     01C7  00D2               	movwf	(main@prev_ticks+3)^(0+256)
  8709     01C8  0141               	movlb	1	; select bank1
  8710     01C9  0822               	movf	(main@now+2)^(0+128),w
  8711     01CA  0142               	movlb	2	; select bank2
  8712     01CB  00D1               	movwf	(main@prev_ticks+2)^(0+256)
  8713     01CC  0141               	movlb	1	; select bank1
  8714     01CD  0821               	movf	(main@now+1)^(0+128),w
  8715     01CE  0142               	movlb	2	; select bank2
  8716     01CF  00D0               	movwf	(main@prev_ticks+1)^(0+256)
  8717     01D0  0141               	movlb	1	; select bank1
  8718     01D1  0820               	movf	main@now^(0+128),w
  8719     01D2  0142               	movlb	2	; select bank2
  8720     01D3  00CF               	movwf	main@prev_ticks^(0+256)
  8721     01D4                     l4451:
  8722                           
  8723                           ;main.c: 100: if(1){
  8724     01D4  30A4               	movlw	(low (main@sensor_value| 0))& (0+255)
  8725     01D5  0140               	movlb	0	; select bank0
  8726     01D6  00CD               	movwf	measurement@value
  8727     01D7  306A               	movlw	(low (main@state| 0))& (0+255)
  8728     01D8  3195  2587  3180   	fcall	_measurement
  8729     01DB                     l4453:
  8730                           
  8731                           ;main.c: 101: state = STATE_OUTPUT_VALUE;
  8732     01DB  3006               	movlw	6
  8733     01DC  0140               	movlb	0	; select bank0
  8734     01DD  00EA               	movwf	main@state
  8735     01DE                     l4455:
  8736                           
  8737                           ;main.c: 103: };;main.c: 104: _delay((unsigned long)((10)*(1000000/4000.0)));
  8738     01DE  3004               	movlw	4
  8739     01DF  0140               	movlb	0	; select bank0
  8740     01E0  00E6               	movwf	??_main
  8741     01E1  303D               	movlw	61
  8742     01E2                     u3877:
  8743     01E2  0B89               	decfsz	9,f
  8744     01E3  29E2               	goto	u3877
  8745     01E4  0BE6               	decfsz	??_main,f
  8746     01E5  29E2               	goto	u3877
  8747     01E6  3200               	nop2
  8748     01E7                     l4457:
  8749                           
  8750                           ;main.c: 106: enable_uart_printf();
  8751     01E7  3193  23EB  3180   	fcall	_enable_uart_printf
  8752     01EA                     l4459:
  8753                           
  8754                           ;main.c: 107: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  8755     01EA  30C9               	movlw	(low (main@b1| 0))& (0+255)
  8756     01EB  0140               	movlb	0	; select bank0
  8757     01EC  00CD               	movwf	monitoring_sync@b1
  8758     01ED  3020               	movlw	(low (main@b2| (0+256)))& (0+255)
  8759     01EE  00CE               	movwf	monitoring_sync@b2
  8760     01EF  3069               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  8761     01F0  00CF               	movwf	monitoring_sync@b1_clicked_count
  8762     01F1  3068               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  8763     01F2  00D0               	movwf	monitoring_sync@b2_clicked_count
  8764     01F3  306A               	movlw	(low (main@state| 0))& (0+255)
  8765     01F4  318B  2387  3180   	fcall	_monitoring_sync
  8766     01F7                     l4461:
  8767                           
  8768                           ;main.c: 108: _delay((unsigned long)((10)*(1000000/4000.0)));
  8769     01F7  3004               	movlw	4
  8770     01F8  0140               	movlb	0	; select bank0
  8771     01F9  00E6               	movwf	??_main
  8772     01FA  303D               	movlw	61
  8773     01FB                     u3887:
  8774     01FB  0B89               	decfsz	9,f
  8775     01FC  29FB               	goto	u3887
  8776     01FD  0BE6               	decfsz	??_main,f
  8777     01FE  29FB               	goto	u3887
  8778     01FF  3200               	nop2
  8779                           
  8780                           ;main.c: 109: enable_tx_transmit();
  8781     0200  3194  2486  3180   	fcall	_enable_tx_transmit
  8782                           
  8783                           ;main.c: 110: break;
  8784     0203  2B46               	goto	l4543
  8785     0204                     l4463:
  8786                           
  8787                           ;main.c: 114: b1_clicked_count = 0;
  8788     0204  01E9               	clrf	main@b1_clicked_count
  8789                           
  8790                           ;main.c: 115: b2_clicked_count = 0;
  8791     0205  01E8               	clrf	main@b2_clicked_count
  8792     0206                     l4465:
  8793                           
  8794                           ;main.c: 117: if(calculate_diff(now, prev_ticks_calibrate) >= 5000){
  8795     0206  0141               	movlb	1	; select bank1
  8796     0207  0823               	movf	(main@now+3)^(0+128),w
  8797     0208  0140               	movlb	0	; select bank0
  8798     0209  00A3               	movwf	calculate_diff@now+3
  8799     020A  0141               	movlb	1	; select bank1
  8800     020B  0822               	movf	(main@now+2)^(0+128),w
  8801     020C  0140               	movlb	0	; select bank0
  8802     020D  00A2               	movwf	calculate_diff@now+2
  8803     020E  0141               	movlb	1	; select bank1
  8804     020F  0821               	movf	(main@now+1)^(0+128),w
  8805     0210  0140               	movlb	0	; select bank0
  8806     0211  00A1               	movwf	calculate_diff@now+1
  8807     0212  0141               	movlb	1	; select bank1
  8808     0213  0820               	movf	main@now^(0+128),w
  8809     0214  0140               	movlb	0	; select bank0
  8810     0215  00A0               	movwf	calculate_diff@now
  8811     0216  0142               	movlb	2	; select bank2
  8812     0217  0846               	movf	(main@prev_ticks_calibrate+3)^(0+256),w
  8813     0218  0140               	movlb	0	; select bank0
  8814     0219  00A7               	movwf	calculate_diff@prev_ticks+3
  8815     021A  0142               	movlb	2	; select bank2
  8816     021B  0845               	movf	(main@prev_ticks_calibrate+2)^(0+256),w
  8817     021C  0140               	movlb	0	; select bank0
  8818     021D  00A6               	movwf	calculate_diff@prev_ticks+2
  8819     021E  0142               	movlb	2	; select bank2
  8820     021F  0844               	movf	(main@prev_ticks_calibrate+1)^(0+256),w
  8821     0220  0140               	movlb	0	; select bank0
  8822     0221  00A5               	movwf	calculate_diff@prev_ticks+1
  8823     0222  0142               	movlb	2	; select bank2
  8824     0223  0843               	movf	main@prev_ticks_calibrate^(0+256),w
  8825     0224  0140               	movlb	0	; select bank0
  8826     0225  00A4               	movwf	calculate_diff@prev_ticks
  8827     0226  3188  206E  3180   	fcall	_calculate_diff
  8828     0229  0140               	movlb	0	; select bank0
  8829     022A  0823               	movf	?_calculate_diff+3,w
  8830     022B  1D03               	btfss	3,2
  8831     022C  2A38               	goto	u3840
  8832     022D  0822               	movf	?_calculate_diff+2,w
  8833     022E  1D03               	btfss	3,2
  8834     022F  2A38               	goto	u3840
  8835     0230  3088               	movlw	136
  8836     0231  0220               	subwf	?_calculate_diff,w
  8837     0232  3013               	movlw	19
  8838     0233  3B21               	subwfb	?_calculate_diff+1,w
  8839     0234  1C03               	btfss	3,0
  8840     0235  2A37               	goto	u3841
  8841     0236  2A38               	goto	u3840
  8842     0237                     u3841:
  8843     0237  2A57               	goto	l4475
  8844     0238                     u3840:
  8845     0238                     l4467:
  8846                           
  8847                           ;main.c: 118: prev_ticks_calibrate = now;
  8848     0238  0141               	movlb	1	; select bank1
  8849     0239  0823               	movf	(main@now+3)^(0+128),w
  8850     023A  0142               	movlb	2	; select bank2
  8851     023B  00C6               	movwf	(main@prev_ticks_calibrate+3)^(0+256)
  8852     023C  0141               	movlb	1	; select bank1
  8853     023D  0822               	movf	(main@now+2)^(0+128),w
  8854     023E  0142               	movlb	2	; select bank2
  8855     023F  00C5               	movwf	(main@prev_ticks_calibrate+2)^(0+256)
  8856     0240  0141               	movlb	1	; select bank1
  8857     0241  0821               	movf	(main@now+1)^(0+128),w
  8858     0242  0142               	movlb	2	; select bank2
  8859     0243  00C4               	movwf	(main@prev_ticks_calibrate+1)^(0+256)
  8860     0244  0141               	movlb	1	; select bank1
  8861     0245  0820               	movf	main@now^(0+128),w
  8862     0246  0142               	movlb	2	; select bank2
  8863     0247  00C3               	movwf	main@prev_ticks_calibrate^(0+256)
  8864     0248                     l4469:
  8865                           
  8866                           ;main.c: 119: measured_adc();
  8867     0248  3197  270C  3180   	fcall	_measured_adc
  8868     024B                     l4471:
  8869                           
  8870                           ;main.c: 122: if(1){
  8871     024B  3004               	movlw	4
  8872     024C  0140               	movlb	0	; select bank0
  8873     024D  00E6               	movwf	??_main
  8874     024E  303D               	movlw	61
  8875     024F                     u3897:
  8876     024F  0B89               	decfsz	9,f
  8877     0250  2A4F               	goto	u3897
  8878     0251  0BE6               	decfsz	??_main,f
  8879     0252  2A4F               	goto	u3897
  8880     0253  3200               	nop2
  8881     0254                     l4473:
  8882                           
  8883                           ;main.c: 123: state = STATE_OUTPUT_ADC;
  8884     0254  3005               	movlw	5
  8885     0255  0140               	movlb	0	; select bank0
  8886     0256  00EA               	movwf	main@state
  8887     0257                     l4475:
  8888                           
  8889                           ;main.c: 125: };;main.c: 127: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_c
      +                          licked_count);
  8890     0257  30C9               	movlw	(low (main@b1| 0))& (0+255)
  8891     0258  0140               	movlb	0	; select bank0
  8892     0259  00CD               	movwf	monitoring_sync@b1
  8893     025A  3020               	movlw	(low (main@b2| (0+256)))& (0+255)
  8894     025B  00CE               	movwf	monitoring_sync@b2
  8895     025C  3069               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  8896     025D  00CF               	movwf	monitoring_sync@b1_clicked_count
  8897     025E  3068               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  8898     025F  00D0               	movwf	monitoring_sync@b2_clicked_count
  8899     0260  306A               	movlw	(low (main@state| 0))& (0+255)
  8900     0261  318B  2387  3180   	fcall	_monitoring_sync
  8901                           
  8902                           ;main.c: 128: _delay((unsigned long)((10)*(1000000/4000.0)));
  8903     0264  3004               	movlw	4
  8904     0265  0140               	movlb	0	; select bank0
  8905     0266  00E6               	movwf	??_main
  8906     0267  303D               	movlw	61
  8907     0268                     u3907:
  8908     0268  0B89               	decfsz	9,f
  8909     0269  2A68               	goto	u3907
  8910     026A  0BE6               	decfsz	??_main,f
  8911     026B  2A68               	goto	u3907
  8912     026C  3200               	nop2
  8913     026D                     l4477:
  8914                           
  8915                           ;main.c: 129: dispatch(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  8916     026D  30C9               	movlw	(low (main@b1| 0))& (0+255)
  8917     026E  0140               	movlb	0	; select bank0
  8918     026F  00A0               	movwf	dispatch@b1
  8919     0270  3020               	movlw	(low (main@b2| (0+256)))& (0+255)
  8920     0271  00A1               	movwf	dispatch@b2
  8921     0272  3069               	movlw	(low (main@b1_clicked_count| 0))& (0+255)
  8922     0273  00A2               	movwf	dispatch@b1_clicked_count_ptr
  8923     0274  3068               	movlw	(low (main@b2_clicked_count| 0))& (0+255)
  8924     0275  00A3               	movwf	dispatch@b2_clicked_count_ptr
  8925     0276  306A               	movlw	(low (main@state| 0))& (0+255)
  8926     0277  3196  266F  3180   	fcall	_dispatch
  8927                           
  8928                           ;main.c: 131: break;
  8929     027A  2B46               	goto	l4543
  8930     027B                     l4479:
  8931                           
  8932                           ;main.c: 138: save_top_adc_point(&state, &sensor_value);
  8933     027B  30A4               	movlw	(low (main@sensor_value| 0))& (0+255)
  8934     027C  00CD               	movwf	save_top_adc_point@sensor_value
  8935     027D  306A               	movlw	(low (main@state| 0))& (0+255)
  8936     027E  318A  2230  3180   	fcall	_save_top_adc_point
  8937     0281                     l4481:
  8938                           
  8939                           ;main.c: 139: state = STATE_CALIBRATE;
  8940     0281  3004               	movlw	4
  8941     0282  0140               	movlb	0	; select bank0
  8942     0283  00EA               	movwf	main@state
  8943                           
  8944                           ;main.c: 140: break;
  8945     0284  2B46               	goto	l4543
  8946     0285                     l4483:
  8947                           
  8948                           ;main.c: 143: save_bottom_adc_point(&state, &sensor_value);
  8949     0285  30A4               	movlw	(low (main@sensor_value| 0))& (0+255)
  8950     0286  00CD               	movwf	save_bottom_adc_point@sensor_value
  8951     0287  306A               	movlw	(low (main@state| 0))& (0+255)
  8952     0288  3189  2193  3180   	fcall	_save_bottom_adc_point
  8953     028B  2A81               	goto	l4481
  8954     028C                     l4487:
  8955                           
  8956                           ;main.c: 149: uart_rx_package_event = 0;
  8957     028C  0141               	movlb	1	; select bank1
  8958     028D  01EC               	clrf	_uart_rx_package_event^(0+128)	;volatile
  8959                           
  8960                           ;main.c: 150: rxbuffer_index = 0;
  8961     028E  01FD               	clrf	_rxbuffer_index	;volatile
  8962     028F                     l4489:
  8963                           
  8964                           ;main.c: 151: get_measured_adc_value(&sensor_value);
  8965     028F  30A4               	movlw	(low (main@sensor_value| 0))& (0+255)
  8966     0290  3196  263C  3180   	fcall	_get_measured_adc_value
  8967     0293                     l4491:
  8968                           
  8969                           ;main.c: 152: _delay((unsigned long)((10)*(1000000/4000.0)));
  8970     0293  3004               	movlw	4
  8971     0294  0140               	movlb	0	; select bank0
  8972     0295  00E6               	movwf	??_main
  8973     0296  303D               	movlw	61
  8974     0297                     u3917:
  8975     0297  0B89               	decfsz	9,f
  8976     0298  2A97               	goto	u3917
  8977     0299  0BE6               	decfsz	??_main,f
  8978     029A  2A97               	goto	u3917
  8979     029B  3200               	nop2
  8980     029C                     l4493:
  8981                           
  8982                           ;main.c: 154: enable_uart_printf();
  8983     029C  3193  23EB  3180   	fcall	_enable_uart_printf
  8984     029F                     l4495:
  8985                           
  8986                           ;main.c: 155: dump_memory_map();
  8987     029F  3194  2442  3180   	fcall	_dump_memory_map
  8988     02A2                     l4497:
  8989                           
  8990                           ;main.c: 156: printf("[RX-BUFFER] ADC_value from pH485_probe: \r\n";main.c: 157: "ph ADC
      +                          _value_List: %u \r\n";main.c: 158: "pH Top_Point ADC:     %u \r\n";main.c: 159: "pH Bott
      +                          om_Point ADC:  %u \r\n",;main.c: 160: sensor_value.ph_ADC_value,;main.c: 161: sensor_val
      +                          ue.ph_top_point_adc_value,;main.c: 162: sensor_value.ph_bottom_point_adc_value;main.c: 1
      +                          63: );
  8991     02A2  3095               	movlw	low (STR_4| (0+32768))
  8992     02A3  0140               	movlb	0	; select bank0
  8993     02A4  00AE               	movwf	printf@f
  8994     02A5  3091               	movlw	high (STR_4| (0+32768))
  8995     02A6  00AF               	movwf	printf@f+1
  8996     02A7  0141               	movlb	1	; select bank1
  8997     02A8  0826               	movf	((main@sensor_value+1)^(0+128)+1),w
  8998     02A9  0140               	movlb	0	; select bank0
  8999     02AA  00B1               	movwf	?_printf+3
  9000     02AB  0141               	movlb	1	; select bank1
  9001     02AC  0825               	movf	(main@sensor_value^(0+128)+1),w
  9002     02AD  0140               	movlb	0	; select bank0
  9003     02AE  00B0               	movwf	?_printf+2
  9004     02AF  0141               	movlb	1	; select bank1
  9005     02B0  083E               	movf	((main@sensor_value+1)^(0+128)+25),w
  9006     02B1  0140               	movlb	0	; select bank0
  9007     02B2  00B3               	movwf	?_printf+5
  9008     02B3  0141               	movlb	1	; select bank1
  9009     02B4  083D               	movf	(main@sensor_value^(0+128)+25),w
  9010     02B5  0140               	movlb	0	; select bank0
  9011     02B6  00B2               	movwf	?_printf+4
  9012     02B7  0141               	movlb	1	; select bank1
  9013     02B8  0842               	movf	((main@sensor_value+1)^(0+128)+29),w
  9014     02B9  0140               	movlb	0	; select bank0
  9015     02BA  00B5               	movwf	?_printf+7
  9016     02BB  0141               	movlb	1	; select bank1
  9017     02BC  0841               	movf	(main@sensor_value^(0+128)+29),w
  9018     02BD  0140               	movlb	0	; select bank0
  9019     02BE  00B4               	movwf	?_printf+6
  9020     02BF  3183  23A0  3180   	fcall	_printf
  9021     02C2                     l4499:
  9022                           
  9023                           ;main.c: 165: printf("[Calibration] --- \r\n--You have 5 seconds to press the calibratio
      +                          n button-- \r\n");
  9024     02C2  300E               	movlw	low (STR_5| (0+32768))
  9025     02C3  0140               	movlb	0	; select bank0
  9026     02C4  00AE               	movwf	printf@f
  9027     02C5  3092               	movlw	high (STR_5| (0+32768))
  9028     02C6  00AF               	movwf	printf@f+1
  9029     02C7  3183  23A0  3180   	fcall	_printf
  9030     02CA                     l4501:
  9031                           
  9032                           ;main.c: 166: LED_flashes_three_times();
  9033     02CA  3196  2610  3180   	fcall	_LED_flashes_three_times
  9034     02CD                     l4503:
  9035                           
  9036                           ;main.c: 167: enable_tx_transmit();
  9037     02CD  3194  2486  3180   	fcall	_enable_tx_transmit
  9038     02D0  2A81               	goto	l4481
  9039     02D1                     l4507:
  9040                           
  9041                           ;main.c: 173: uart_rx_package_event = 0;
  9042     02D1  0141               	movlb	1	; select bank1
  9043     02D2  01EC               	clrf	_uart_rx_package_event^(0+128)	;volatile
  9044                           
  9045                           ;main.c: 174: rxbuffer_index = 0;
  9046     02D3  01FD               	clrf	_rxbuffer_index	;volatile
  9047     02D4                     l4509:
  9048     02D4  0140               	movlb	0	; select bank0
  9049     02D5  111A               	bcf	26,2	;volatile
  9050     02D6                     l4511:
  9051                           
  9052                           ;main.c: 176: get_measured_value(&sensor_value);
  9053     02D6  30A4               	movlw	(low (main@sensor_value| 0))& (0+255)
  9054     02D7  3187  270E  3180   	fcall	_get_measured_value
  9055     02DA                     l4513:
  9056                           
  9057                           ;main.c: 178: Enable_Global_Interrupt();
  9058     02DA  3180  2002  3180   	fcall	_Enable_Global_Interrupt
  9059     02DD                     l4515:
  9060                           
  9061                           ;main.c: 180: i2c_slave_set_register(0x00, (uint8_t)(sensor_value.ph_value >> 8) & 0xFF)
      +                          ;
  9062     02DD  0140               	movlb	0	; select bank0
  9063     02DE  01A0               	clrf	i2c_slave_set_register@value
  9064     02DF  3000               	movlw	0
  9065     02E0  3194  244C  3180   	fcall	_i2c_slave_set_register
  9066     02E3                     l4517:
  9067                           
  9068                           ;main.c: 181: i2c_slave_set_register(0x01, (uint8_t)(sensor_value.ph_value >> 0) & 0xFF)
      +                          ;
  9069     02E3  0141               	movlb	1	; select bank1
  9070     02E4  0824               	movf	main@sensor_value^(0+128),w
  9071     02E5  0140               	movlb	0	; select bank0
  9072     02E6  00A0               	movwf	i2c_slave_set_register@value
  9073     02E7  3001               	movlw	1
  9074     02E8  3194  244C  3180   	fcall	_i2c_slave_set_register
  9075     02EB                     l4519:
  9076                           
  9077                           ;main.c: 182: i2c_slave_set_register(0x02, (uint8_t)(sensor_value.temp_value >> 8) & 0xF
      +                          F);
  9078     02EB  0141               	movlb	1	; select bank1
  9079     02EC  0846               	movf	((main@sensor_value+1)^(0+128)+33),w
  9080     02ED  0140               	movlb	0	; select bank0
  9081     02EE  00A0               	movwf	i2c_slave_set_register@value
  9082     02EF  3002               	movlw	2
  9083     02F0  3194  244C  3180   	fcall	_i2c_slave_set_register
  9084     02F3                     l4521:
  9085                           
  9086                           ;main.c: 183: i2c_slave_set_register(0x03, (uint8_t)(sensor_value.temp_value >> 0) & 0xF
      +                          F);
  9087     02F3  0141               	movlb	1	; select bank1
  9088     02F4  0845               	movf	(main@sensor_value^(0+128)+33),w
  9089     02F5  0140               	movlb	0	; select bank0
  9090     02F6  00A0               	movwf	i2c_slave_set_register@value
  9091     02F7  3003               	movlw	3
  9092     02F8  3194  244C  3180   	fcall	_i2c_slave_set_register
  9093     02FB                     l4523:
  9094                           
  9095                           ;main.c: 184: Disable_Global_Interrupt();
  9096     02FB  3193  23E9  3180   	fcall	_Disable_Global_Interrupt
  9097     02FE                     l4525:
  9098     02FE  0140               	movlb	0	; select bank0
  9099     02FF  151A               	bsf	26,2	;volatile
  9100     0300                     l4527:
  9101                           
  9102                           ;main.c: 188: enable_uart_printf();
  9103     0300  3193  23EB  3180   	fcall	_enable_uart_printf
  9104     0303                     l4529:
  9105                           
  9106                           ;main.c: 189: dump_memory_map();
  9107     0303  3194  2442  3180   	fcall	_dump_memory_map
  9108     0306                     l4531:
  9109                           
  9110                           ;main.c: 190: printf("[RX-BUFFER] value from pH485_probe: \r\n";main.c: 191: "pH  : %u \
      +                          r\n";main.c: 192: "TEMP: %u \r\n",;main.c: 193: sensor_value.ph_value,;main.c: 194: sens
      +                          or_value.temp_value;main.c: 195: );
  9111     0306  3000               	movlw	low (STR_6| (0+32768))
  9112     0307  0140               	movlb	0	; select bank0
  9113     0308  00AE               	movwf	printf@f
  9114     0309  3098               	movlw	high (STR_6| (0+32768))
  9115     030A  00AF               	movwf	printf@f+1
  9116     030B  0141               	movlb	1	; select bank1
  9117     030C  0824               	movf	main@sensor_value^(0+128),w
  9118     030D  0140               	movlb	0	; select bank0
  9119     030E  00E6               	movwf	??_main
  9120     030F  01E7               	clrf	??_main+1
  9121     0310  0866               	movf	??_main,w
  9122     0311  00B0               	movwf	?_printf+2
  9123     0312  0867               	movf	??_main+1,w
  9124     0313  00B1               	movwf	?_printf+3
  9125     0314  0141               	movlb	1	; select bank1
  9126     0315  0846               	movf	((main@sensor_value+1)^(0+128)+33),w
  9127     0316  0140               	movlb	0	; select bank0
  9128     0317  00B3               	movwf	?_printf+5
  9129     0318  0141               	movlb	1	; select bank1
  9130     0319  0845               	movf	(main@sensor_value^(0+128)+33),w
  9131     031A  0140               	movlb	0	; select bank0
  9132     031B  00B2               	movwf	?_printf+4
  9133     031C  3183  23A0  3180   	fcall	_printf
  9134     031F                     l4533:
  9135                           
  9136                           ;main.c: 196: printf("---------------------------- \r\n");
  9137     031F  30DE               	movlw	low (STR_7| (0+32768))
  9138     0320  0140               	movlb	0	; select bank0
  9139     0321  00AE               	movwf	printf@f
  9140     0322  3098               	movlw	high (STR_7| (0+32768))
  9141     0323  00AF               	movwf	printf@f+1
  9142     0324  3183  23A0  3180   	fcall	_printf
  9143     0327                     l4535:
  9144                           
  9145                           ;main.c: 198: enable_tx_transmit();
  9146     0327  3194  2486  3180   	fcall	_enable_tx_transmit
  9147     032A                     l4537:
  9148                           
  9149                           ;main.c: 200: state = STATE_MEASURE;
  9150     032A  3002               	movlw	2
  9151     032B  0140               	movlb	0	; select bank0
  9152     032C  00EA               	movwf	main@state
  9153                           
  9154                           ;main.c: 202: break;
  9155     032D  2B46               	goto	l4543
  9156     032E                     l4541:
  9157     032E  0140               	movlb	0	; select bank0
  9158     032F  086A               	movf	main@state,w
  9159                           
  9160                           ; Switch size 1, requested type "simple"
  9161                           ; Number of cases is 7, Range of values is 2 to 8
  9162                           ; switch strategies available:
  9163                           ; Name         Instructions Cycles
  9164                           ; simple_byte           22    12 (average)
  9165                           ; direct_byte           23     9 (fixed)
  9166                           ; jumptable            263     9 (fixed)
  9167                           ;	Chosen strategy is simple_byte
  9168     0330  3A02               	xorlw	2	; case 2
  9169     0331  1903               	skipnz
  9170     0332  2992               	goto	l4447
  9171     0333  3A01               	xorlw	1	; case 3
  9172     0334  1903               	skipnz
  9173     0335  2B46               	goto	l4543
  9174     0336  3A07               	xorlw	7	; case 4
  9175     0337  1903               	skipnz
  9176     0338  2A04               	goto	l4463
  9177     0339  3A01               	xorlw	1	; case 5
  9178     033A  1903               	skipnz
  9179     033B  2A8C               	goto	l4487
  9180     033C  3A03               	xorlw	3	; case 6
  9181     033D  1903               	skipnz
  9182     033E  2AD1               	goto	l4507
  9183     033F  3A01               	xorlw	1	; case 7
  9184     0340  1903               	skipnz
  9185     0341  2A7B               	goto	l4479
  9186     0342  3A0F               	xorlw	15	; case 8
  9187     0343  1903               	skipnz
  9188     0344  2A85               	goto	l4483
  9189     0345  2B46               	goto	l4543
  9190     0346                     l4543:
  9191                           
  9192                           ;main.c: 208: now = get_ticks_with_lock();
  9193     0346  3194  24DD  3180   	fcall	_get_ticks_with_lock
  9194     0349  0140               	movlb	0	; select bank0
  9195     034A  0823               	movf	?_get_ticks_with_lock+3,w
  9196     034B  0141               	movlb	1	; select bank1
  9197     034C  00A3               	movwf	(main@now+3)^(0+128)
  9198     034D  0140               	movlb	0	; select bank0
  9199     034E  0822               	movf	?_get_ticks_with_lock+2,w
  9200     034F  0141               	movlb	1	; select bank1
  9201     0350  00A2               	movwf	(main@now+2)^(0+128)
  9202     0351  0140               	movlb	0	; select bank0
  9203     0352  0821               	movf	?_get_ticks_with_lock+1,w
  9204     0353  0141               	movlb	1	; select bank1
  9205     0354  00A1               	movwf	(main@now+1)^(0+128)
  9206     0355  0140               	movlb	0	; select bank0
  9207     0356  0820               	movf	?_get_ticks_with_lock,w
  9208     0357  0141               	movlb	1	; select bank1
  9209     0358  00A0               	movwf	main@now^(0+128)
  9210     0359                     l4545:
  9211                           
  9212                           ;main.c: 209: static uint32_t prev_ticks2 = 0;;main.c: 210: if(calculate_diff(now, prev_
      +                          ticks2) >= 2000){
  9213     0359  0823               	movf	(main@now+3)^(0+128),w
  9214     035A  0140               	movlb	0	; select bank0
  9215     035B  00A3               	movwf	calculate_diff@now+3
  9216     035C  0141               	movlb	1	; select bank1
  9217     035D  0822               	movf	(main@now+2)^(0+128),w
  9218     035E  0140               	movlb	0	; select bank0
  9219     035F  00A2               	movwf	calculate_diff@now+2
  9220     0360  0141               	movlb	1	; select bank1
  9221     0361  0821               	movf	(main@now+1)^(0+128),w
  9222     0362  0140               	movlb	0	; select bank0
  9223     0363  00A1               	movwf	calculate_diff@now+1
  9224     0364  0141               	movlb	1	; select bank1
  9225     0365  0820               	movf	main@now^(0+128),w
  9226     0366  0140               	movlb	0	; select bank0
  9227     0367  00A0               	movwf	calculate_diff@now
  9228     0368  0142               	movlb	2	; select bank2
  9229     0369  0842               	movf	(main@prev_ticks2+3)^(0+256),w
  9230     036A  0140               	movlb	0	; select bank0
  9231     036B  00A7               	movwf	calculate_diff@prev_ticks+3
  9232     036C  0142               	movlb	2	; select bank2
  9233     036D  0841               	movf	(main@prev_ticks2+2)^(0+256),w
  9234     036E  0140               	movlb	0	; select bank0
  9235     036F  00A6               	movwf	calculate_diff@prev_ticks+2
  9236     0370  0142               	movlb	2	; select bank2
  9237     0371  0840               	movf	(main@prev_ticks2+1)^(0+256),w
  9238     0372  0140               	movlb	0	; select bank0
  9239     0373  00A5               	movwf	calculate_diff@prev_ticks+1
  9240     0374  0142               	movlb	2	; select bank2
  9241     0375  083F               	movf	main@prev_ticks2^(0+256),w
  9242     0376  0140               	movlb	0	; select bank0
  9243     0377  00A4               	movwf	calculate_diff@prev_ticks
  9244     0378  3188  206E  3180   	fcall	_calculate_diff
  9245     037B  0140               	movlb	0	; select bank0
  9246     037C  0823               	movf	?_calculate_diff+3,w
  9247     037D  1D03               	btfss	3,2
  9248     037E  2B8A               	goto	u3850
  9249     037F  0822               	movf	?_calculate_diff+2,w
  9250     0380  1D03               	btfss	3,2
  9251     0381  2B8A               	goto	u3850
  9252     0382  30D0               	movlw	208
  9253     0383  0220               	subwf	?_calculate_diff,w
  9254     0384  3007               	movlw	7
  9255     0385  3B21               	subwfb	?_calculate_diff+1,w
  9256     0386  1C03               	btfss	3,0
  9257     0387  2B89               	goto	u3851
  9258     0388  2B8A               	goto	u3850
  9259     0389                     u3851:
  9260     0389  2913               	goto	l4435
  9261     038A                     u3850:
  9262     038A                     l4547:
  9263                           
  9264                           ;main.c: 211: prev_ticks2 = now;
  9265     038A  0141               	movlb	1	; select bank1
  9266     038B  0823               	movf	(main@now+3)^(0+128),w
  9267     038C  0142               	movlb	2	; select bank2
  9268     038D  00C2               	movwf	(main@prev_ticks2+3)^(0+256)
  9269     038E  0141               	movlb	1	; select bank1
  9270     038F  0822               	movf	(main@now+2)^(0+128),w
  9271     0390  0142               	movlb	2	; select bank2
  9272     0391  00C1               	movwf	(main@prev_ticks2+2)^(0+256)
  9273     0392  0141               	movlb	1	; select bank1
  9274     0393  0821               	movf	(main@now+1)^(0+128),w
  9275     0394  0142               	movlb	2	; select bank2
  9276     0395  00C0               	movwf	(main@prev_ticks2+1)^(0+256)
  9277     0396  0141               	movlb	1	; select bank1
  9278     0397  0820               	movf	main@now^(0+128),w
  9279     0398  0142               	movlb	2	; select bank2
  9280     0399  00BF               	movwf	main@prev_ticks2^(0+256)
  9281     039A                     l4549:
  9282                           
  9283                           ;main.c: 212: set_device_serial_number_to_i2c_slave_memorymap();
  9284     039A  3197  2782  3180   	fcall	_set_device_serial_number_to_i2c_slave_memorymap
  9285     039D  2913               	goto	l4435
  9286     039E  3180  2869         	ljmp	start
  9287     03A0                     __end_of_main:
  9288                           
  9289                           	psect	text1
  9290     1494                     __ptext1:	
  9291 ;; *************** function _usart_init *****************
  9292 ;; Defined at:
  9293 ;;		line 13 in file "uart.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;		None
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;Total ram usage:        0 bytes
  9312 ;; Hardware stack levels used: 1
  9313 ;; Hardware stack levels required when called: 2
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_main
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321     1494                     _usart_init:	
  9322                           ;psect for function _usart_init
  9323                           
  9324     1494                     l3539:	
  9325                           ;incstack = 0
  9326                           ; Regs used in _usart_init: [wreg+status,2]
  9327                           
  9328                           
  9329                           ;uart.c: 14: PIE3bits.RC1IE = 0;
  9330     1494  014E               	movlb	14	; select bank14
  9331     1495  1299               	bcf	25,5	;volatile
  9332                           
  9333                           ;uart.c: 15: PIE3bits.TX1IE = 0;
  9334     1496  1219               	bcf	25,4	;volatile
  9335     1497                     l3541:
  9336                           
  9337                           ;uart.c: 18: BAUD1CON = 0x08;
  9338     1497  3008               	movlw	8
  9339     1498  0142               	movlb	2	; select bank2
  9340     1499  009F               	movwf	31	;volatile
  9341                           
  9342                           ;uart.c: 19: SP1BRGL = 0x19;
  9343     149A  3019               	movlw	25
  9344     149B  009B               	movwf	27	;volatile
  9345     149C                     l3543:
  9346                           
  9347                           ;uart.c: 20: SP1BRGH = 0x00;
  9348     149C  019C               	clrf	28	;volatile
  9349     149D                     l3545:
  9350                           
  9351                           ;uart.c: 22: TX1STA = 0x24;
  9352     149D  3024               	movlw	36
  9353     149E  009E               	movwf	30	;volatile
  9354     149F                     l3547:
  9355                           
  9356                           ;uart.c: 23: RC1STA = 0x90;
  9357     149F  3090               	movlw	144
  9358     14A0  009D               	movwf	29	;volatile
  9359     14A1                     l3549:
  9360                           
  9361                           ;uart.c: 25: PIE3bits.RC1IE = 1;
  9362     14A1  014E               	movlb	14	; select bank14
  9363     14A2  1699               	bsf	25,5	;volatile
  9364     14A3                     l470:
  9365     14A3  0008               	return
  9366     14A4                     __end_of_usart_init:
  9367                           
  9368                           	psect	text2
  9369     0E02                     __ptext2:	
  9370 ;; *************** function _update_mybutton *****************
  9371 ;; Defined at:
  9372 ;;		line 100 in file "mybutton.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;  b               2   18[BANK0 ] PTR struct mybutton
  9375 ;;		 -> main@b2(27), main@b1(27), 
  9376 ;;  signal          1   20[BANK0 ] unsigned char 
  9377 ;;  now             4   21[BANK0 ] unsigned long 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;		None
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  1    wreg      void 
  9382 ;; Registers used:
  9383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9389 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;Total ram usage:       11 bytes
  9394 ;; Hardware stack levels used: 1
  9395 ;; Hardware stack levels required when called: 3
  9396 ;; This function calls:
  9397 ;;		___is_double_click
  9398 ;;		___is_long_press
  9399 ;;		___is_single_click
  9400 ;; This function is called by:
  9401 ;;		_main
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           
  9405     0E02                     _update_mybutton:	
  9406                           ;psect for function _update_mybutton
  9407                           
  9408     0E02                     l4313:	
  9409                           ;incstack = 0
  9410                           ; Regs used in _update_mybutton: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9411                           
  9412                           
  9413                           ;mybutton.c: 102: b->signals[0] = b->signals[1];
  9414     0E02  0140               	movlb	0	; select bank0
  9415     0E03  0832               	movf	update_mybutton@b,w
  9416     0E04  0086               	movwf	6
  9417     0E05  0833               	movf	update_mybutton@b+1,w
  9418     0E06  0087               	movwf	7
  9419     0E07  3141               	addfsr 1,1
  9420     0E08  0801               	movf	1,w
  9421     0E09  00B9               	movwf	??_update_mybutton
  9422     0E0A  0832               	movf	update_mybutton@b,w
  9423     0E0B  0086               	movwf	6
  9424     0E0C  0833               	movf	update_mybutton@b+1,w
  9425     0E0D  0087               	movwf	7
  9426     0E0E  0839               	movf	??_update_mybutton,w
  9427     0E0F  0081               	movwf	1
  9428     0E10                     l4315:
  9429                           
  9430                           ;mybutton.c: 103: b->signals[1] = signal;
  9431     0E10  0832               	movf	update_mybutton@b,w
  9432     0E11  3E01               	addlw	1
  9433     0E12  00B9               	movwf	??_update_mybutton
  9434     0E13  3000               	movlw	0
  9435     0E14  3D33               	addwfc	update_mybutton@b+1,w
  9436     0E15  00BA               	movwf	??_update_mybutton+1
  9437     0E16  0839               	movf	??_update_mybutton,w
  9438     0E17  0086               	movwf	6
  9439     0E18  083A               	movf	??_update_mybutton+1,w
  9440     0E19  0087               	movwf	7
  9441     0E1A  0834               	movf	update_mybutton@signal,w
  9442     0E1B  0081               	movwf	1
  9443     0E1C                     l4317:
  9444                           
  9445                           ;mybutton.c: 105: if( 1 == b->signals[0] && 0 == b->signals[1] ){
  9446     0E1C  0832               	movf	update_mybutton@b,w
  9447     0E1D  0086               	movwf	6
  9448     0E1E  0833               	movf	update_mybutton@b+1,w
  9449     0E1F  0087               	movwf	7
  9450     0E20  0301               	decf	1,w
  9451     0E21  1D03               	btfss	3,2
  9452     0E22  2E24               	goto	u3711
  9453     0E23  2E25               	goto	u3710
  9454     0E24                     u3711:
  9455     0E24  2E56               	goto	l4325
  9456     0E25                     u3710:
  9457     0E25                     l4319:
  9458     0E25  0832               	movf	update_mybutton@b,w
  9459     0E26  0086               	movwf	6
  9460     0E27  0833               	movf	update_mybutton@b+1,w
  9461     0E28  0087               	movwf	7
  9462     0E29  3141               	addfsr 1,1
  9463     0E2A  0801               	movf	1,w
  9464     0E2B  1D03               	btfss	3,2
  9465     0E2C  2E2E               	goto	u3721
  9466     0E2D  2E2F               	goto	u3720
  9467     0E2E                     u3721:
  9468     0E2E  2E56               	goto	l4325
  9469     0E2F                     u3720:
  9470     0E2F                     l4321:
  9471                           
  9472                           ;mybutton.c: 106: b->falling_ts[0] = b->falling_ts[1];
  9473     0E2F  0832               	movf	update_mybutton@b,w
  9474     0E30  0086               	movwf	6
  9475     0E31  0833               	movf	update_mybutton@b+1,w
  9476     0E32  0087               	movwf	7
  9477     0E33  3146               	addfsr 1,6
  9478     0E34  3F40               	moviw [0]fsr1
  9479     0E35  00B9               	movwf	??_update_mybutton
  9480     0E36  3F41               	moviw [1]fsr1
  9481     0E37  00BA               	movwf	??_update_mybutton+1
  9482     0E38  3F42               	moviw [2]fsr1
  9483     0E39  00BB               	movwf	??_update_mybutton+2
  9484     0E3A  3F43               	moviw [3]fsr1
  9485     0E3B  00BC               	movwf	??_update_mybutton+3
  9486     0E3C  0832               	movf	update_mybutton@b,w
  9487     0E3D  0086               	movwf	6
  9488     0E3E  0833               	movf	update_mybutton@b+1,w
  9489     0E3F  0087               	movwf	7
  9490     0E40  3142               	addfsr 1,2
  9491     0E41  0839               	movf	??_update_mybutton,w
  9492     0E42  3FC0               	movwi [0]fsr1
  9493     0E43  083A               	movf	??_update_mybutton+1,w
  9494     0E44  3FC1               	movwi [1]fsr1
  9495     0E45  083B               	movf	??_update_mybutton+2,w
  9496     0E46  3FC2               	movwi [2]fsr1
  9497     0E47  083C               	movf	??_update_mybutton+3,w
  9498     0E48  3FC3               	movwi [3]fsr1
  9499     0E49                     l4323:
  9500                           
  9501                           ;mybutton.c: 107: b->falling_ts[1] = now;
  9502     0E49  0832               	movf	update_mybutton@b,w
  9503     0E4A  0086               	movwf	6
  9504     0E4B  0833               	movf	update_mybutton@b+1,w
  9505     0E4C  0087               	movwf	7
  9506     0E4D  3146               	addfsr 1,6
  9507     0E4E  0835               	movf	update_mybutton@now,w
  9508     0E4F  3FC0               	movwi [0]fsr1
  9509     0E50  0836               	movf	update_mybutton@now+1,w
  9510     0E51  3FC1               	movwi [1]fsr1
  9511     0E52  0837               	movf	update_mybutton@now+2,w
  9512     0E53  3FC2               	movwi [2]fsr1
  9513     0E54  0838               	movf	update_mybutton@now+3,w
  9514     0E55  3FC3               	movwi [3]fsr1
  9515     0E56                     l4325:
  9516                           
  9517                           ;mybutton.c: 108: };mybutton.c: 110: if( 0 == b->signals[0] && 1 == b->signals[1] ){
  9518     0E56  0832               	movf	update_mybutton@b,w
  9519     0E57  0086               	movwf	6
  9520     0E58  0833               	movf	update_mybutton@b+1,w
  9521     0E59  0087               	movwf	7
  9522     0E5A  0801               	movf	1,w
  9523     0E5B  1D03               	btfss	3,2
  9524     0E5C  2E5E               	goto	u3731
  9525     0E5D  2E5F               	goto	u3730
  9526     0E5E                     u3731:
  9527     0E5E  2E90               	goto	l4333
  9528     0E5F                     u3730:
  9529     0E5F                     l4327:
  9530     0E5F  0832               	movf	update_mybutton@b,w
  9531     0E60  0086               	movwf	6
  9532     0E61  0833               	movf	update_mybutton@b+1,w
  9533     0E62  0087               	movwf	7
  9534     0E63  3141               	addfsr 1,1
  9535     0E64  0301               	decf	1,w
  9536     0E65  1D03               	btfss	3,2
  9537     0E66  2E68               	goto	u3741
  9538     0E67  2E69               	goto	u3740
  9539     0E68                     u3741:
  9540     0E68  2E90               	goto	l4333
  9541     0E69                     u3740:
  9542     0E69                     l4329:
  9543                           
  9544                           ;mybutton.c: 111: b->rising_ts[0] = b->rising_ts[1];
  9545     0E69  0832               	movf	update_mybutton@b,w
  9546     0E6A  0086               	movwf	6
  9547     0E6B  0833               	movf	update_mybutton@b+1,w
  9548     0E6C  0087               	movwf	7
  9549     0E6D  314E               	addfsr 1,14
  9550     0E6E  3F40               	moviw [0]fsr1
  9551     0E6F  00B9               	movwf	??_update_mybutton
  9552     0E70  3F41               	moviw [1]fsr1
  9553     0E71  00BA               	movwf	??_update_mybutton+1
  9554     0E72  3F42               	moviw [2]fsr1
  9555     0E73  00BB               	movwf	??_update_mybutton+2
  9556     0E74  3F43               	moviw [3]fsr1
  9557     0E75  00BC               	movwf	??_update_mybutton+3
  9558     0E76  0832               	movf	update_mybutton@b,w
  9559     0E77  0086               	movwf	6
  9560     0E78  0833               	movf	update_mybutton@b+1,w
  9561     0E79  0087               	movwf	7
  9562     0E7A  314A               	addfsr 1,10
  9563     0E7B  0839               	movf	??_update_mybutton,w
  9564     0E7C  3FC0               	movwi [0]fsr1
  9565     0E7D  083A               	movf	??_update_mybutton+1,w
  9566     0E7E  3FC1               	movwi [1]fsr1
  9567     0E7F  083B               	movf	??_update_mybutton+2,w
  9568     0E80  3FC2               	movwi [2]fsr1
  9569     0E81  083C               	movf	??_update_mybutton+3,w
  9570     0E82  3FC3               	movwi [3]fsr1
  9571     0E83                     l4331:
  9572                           
  9573                           ;mybutton.c: 112: b->rising_ts[1] = now;
  9574     0E83  0832               	movf	update_mybutton@b,w
  9575     0E84  0086               	movwf	6
  9576     0E85  0833               	movf	update_mybutton@b+1,w
  9577     0E86  0087               	movwf	7
  9578     0E87  314E               	addfsr 1,14
  9579     0E88  0835               	movf	update_mybutton@now,w
  9580     0E89  3FC0               	movwi [0]fsr1
  9581     0E8A  0836               	movf	update_mybutton@now+1,w
  9582     0E8B  3FC1               	movwi [1]fsr1
  9583     0E8C  0837               	movf	update_mybutton@now+2,w
  9584     0E8D  3FC2               	movwi [2]fsr1
  9585     0E8E  0838               	movf	update_mybutton@now+3,w
  9586     0E8F  3FC3               	movwi [3]fsr1
  9587     0E90                     l4333:
  9588                           
  9589                           ;mybutton.c: 113: };mybutton.c: 115: if( __is_single_click(b, now) ){
  9590     0E90  0833               	movf	update_mybutton@b+1,w
  9591     0E91  00A1               	movwf	___is_single_click@b+1
  9592     0E92  0832               	movf	update_mybutton@b,w
  9593     0E93  00A0               	movwf	___is_single_click@b
  9594     0E94  0838               	movf	update_mybutton@now+3,w
  9595     0E95  00A5               	movwf	___is_single_click@now+3
  9596     0E96  0837               	movf	update_mybutton@now+2,w
  9597     0E97  00A4               	movwf	___is_single_click@now+2
  9598     0E98  0836               	movf	update_mybutton@now+1,w
  9599     0E99  00A3               	movwf	___is_single_click@now+1
  9600     0E9A  0835               	movf	update_mybutton@now,w
  9601     0E9B  00A2               	movwf	___is_single_click@now
  9602     0E9C  3185  25E6  318E   	fcall	___is_single_click
  9603     0E9F  3A00               	xorlw	0
  9604     0EA0  1903               	skipnz
  9605     0EA1  2EA3               	goto	u3751
  9606     0EA2  2EA4               	goto	u3750
  9607     0EA3                     u3751:
  9608     0EA3  2EB1               	goto	l4337
  9609     0EA4                     u3750:
  9610     0EA4                     l4335:
  9611                           
  9612                           ;mybutton.c: 116: b->single_clicked_flag = 1;
  9613     0EA4  0140               	movlb	0	; select bank0
  9614     0EA5  0832               	movf	update_mybutton@b,w
  9615     0EA6  3E18               	addlw	24
  9616     0EA7  00B9               	movwf	??_update_mybutton
  9617     0EA8  3000               	movlw	0
  9618     0EA9  3D33               	addwfc	update_mybutton@b+1,w
  9619     0EAA  00BA               	movwf	??_update_mybutton+1
  9620     0EAB  0839               	movf	??_update_mybutton,w
  9621     0EAC  0086               	movwf	6
  9622     0EAD  083A               	movf	??_update_mybutton+1,w
  9623     0EAE  0087               	movwf	7
  9624     0EAF  3001               	movlw	1
  9625     0EB0  0081               	movwf	1
  9626     0EB1                     l4337:
  9627                           
  9628                           ;mybutton.c: 117: };mybutton.c: 119: if( __is_double_click(b, now) ){
  9629     0EB1  0140               	movlb	0	; select bank0
  9630     0EB2  0833               	movf	update_mybutton@b+1,w
  9631     0EB3  00A1               	movwf	___is_double_click@b+1
  9632     0EB4  0832               	movf	update_mybutton@b,w
  9633     0EB5  00A0               	movwf	___is_double_click@b
  9634     0EB6  0838               	movf	update_mybutton@now+3,w
  9635     0EB7  00A5               	movwf	___is_double_click@now+3
  9636     0EB8  0837               	movf	update_mybutton@now+2,w
  9637     0EB9  00A4               	movwf	___is_double_click@now+2
  9638     0EBA  0836               	movf	update_mybutton@now+1,w
  9639     0EBB  00A3               	movwf	___is_double_click@now+1
  9640     0EBC  0835               	movf	update_mybutton@now,w
  9641     0EBD  00A2               	movwf	___is_double_click@now
  9642     0EBE  318D  250E  318E   	fcall	___is_double_click
  9643     0EC1  3A00               	xorlw	0
  9644     0EC2  1903               	skipnz
  9645     0EC3  2EC5               	goto	u3761
  9646     0EC4  2EC6               	goto	u3760
  9647     0EC5                     u3761:
  9648     0EC5  2ED3               	goto	l4341
  9649     0EC6                     u3760:
  9650     0EC6                     l4339:
  9651                           
  9652                           ;mybutton.c: 120: b->double_clicked_flag = 1;
  9653     0EC6  0140               	movlb	0	; select bank0
  9654     0EC7  0832               	movf	update_mybutton@b,w
  9655     0EC8  3E19               	addlw	25
  9656     0EC9  00B9               	movwf	??_update_mybutton
  9657     0ECA  3000               	movlw	0
  9658     0ECB  3D33               	addwfc	update_mybutton@b+1,w
  9659     0ECC  00BA               	movwf	??_update_mybutton+1
  9660     0ECD  0839               	movf	??_update_mybutton,w
  9661     0ECE  0086               	movwf	6
  9662     0ECF  083A               	movf	??_update_mybutton+1,w
  9663     0ED0  0087               	movwf	7
  9664     0ED1  3001               	movlw	1
  9665     0ED2  0081               	movwf	1
  9666     0ED3                     l4341:
  9667                           
  9668                           ;mybutton.c: 121: };mybutton.c: 123: if( __is_long_press(b, now) ){
  9669     0ED3  0140               	movlb	0	; select bank0
  9670     0ED4  0833               	movf	update_mybutton@b+1,w
  9671     0ED5  00A1               	movwf	___is_long_press@b+1
  9672     0ED6  0832               	movf	update_mybutton@b,w
  9673     0ED7  00A0               	movwf	___is_long_press@b
  9674     0ED8  0838               	movf	update_mybutton@now+3,w
  9675     0ED9  00A5               	movwf	___is_long_press@now+3
  9676     0EDA  0837               	movf	update_mybutton@now+2,w
  9677     0EDB  00A4               	movwf	___is_long_press@now+2
  9678     0EDC  0836               	movf	update_mybutton@now+1,w
  9679     0EDD  00A3               	movwf	___is_long_press@now+1
  9680     0EDE  0835               	movf	update_mybutton@now,w
  9681     0EDF  00A2               	movwf	___is_long_press@now
  9682     0EE0  318A  22CD  318E   	fcall	___is_long_press
  9683     0EE3  3A00               	xorlw	0
  9684     0EE4  1903               	skipnz
  9685     0EE5  2EE7               	goto	u3771
  9686     0EE6  2EE8               	goto	u3770
  9687     0EE7                     u3771:
  9688     0EE7  2EF5               	goto	l391
  9689     0EE8                     u3770:
  9690     0EE8                     l4343:
  9691                           
  9692                           ;mybutton.c: 124: b->long_press_flag = 1;
  9693     0EE8  0140               	movlb	0	; select bank0
  9694     0EE9  0832               	movf	update_mybutton@b,w
  9695     0EEA  3E1A               	addlw	26
  9696     0EEB  00B9               	movwf	??_update_mybutton
  9697     0EEC  3000               	movlw	0
  9698     0EED  3D33               	addwfc	update_mybutton@b+1,w
  9699     0EEE  00BA               	movwf	??_update_mybutton+1
  9700     0EEF  0839               	movf	??_update_mybutton,w
  9701     0EF0  0086               	movwf	6
  9702     0EF1  083A               	movf	??_update_mybutton+1,w
  9703     0EF2  0087               	movwf	7
  9704     0EF3  3001               	movlw	1
  9705     0EF4  0081               	movwf	1
  9706     0EF5                     l391:
  9707     0EF5  0008               	return
  9708     0EF6                     __end_of_update_mybutton:
  9709                           
  9710                           	psect	text3
  9711     05E6                     __ptext3:	
  9712 ;; *************** function ___is_single_click *****************
  9713 ;; Defined at:
  9714 ;;		line 37 in file "mybutton.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  b               2    0[BANK0 ] PTR struct mybutton
  9717 ;;		 -> main@b2(27), main@b1(27), 
  9718 ;;  now             4    2[BANK0 ] unsigned long 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;  condition4      1   17[BANK0 ] unsigned char 
  9721 ;;  condition3      1   16[BANK0 ] unsigned char 
  9722 ;;  condition2      1   15[BANK0 ] unsigned char 
  9723 ;;  condition1      1   14[BANK0 ] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      unsigned char 
  9726 ;; Registers used:
  9727 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9733 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;Total ram usage:       18 bytes
  9738 ;; Hardware stack levels used: 1
  9739 ;; Hardware stack levels required when called: 2
  9740 ;; This function calls:
  9741 ;;		Nothing
  9742 ;; This function is called by:
  9743 ;;		_update_mybutton
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747     05E6                     ___is_single_click:	
  9748                           ;psect for function ___is_single_click
  9749                           
  9750     05E6                     l4181:	
  9751                           ;incstack = 0
  9752                           ; Regs used in ___is_single_click: [wreg+fsr1l+fsr1h+status,2+status,0]
  9753                           
  9754                           
  9755                           ;mybutton.c: 39: bool condition1 = (b->rising_ts[1] > b->falling_ts[1]);
  9756     05E6  0140               	movlb	0	; select bank0
  9757     05E7  0820               	movf	___is_single_click@b,w
  9758     05E8  0086               	movwf	6
  9759     05E9  0821               	movf	___is_single_click@b+1,w
  9760     05EA  0087               	movwf	7
  9761     05EB  314E               	addfsr 1,14
  9762     05EC  3F40               	moviw [0]fsr1
  9763     05ED  00A6               	movwf	??___is_single_click
  9764     05EE  3F41               	moviw [1]fsr1
  9765     05EF  00A7               	movwf	??___is_single_click+1
  9766     05F0  3F42               	moviw [2]fsr1
  9767     05F1  00A8               	movwf	??___is_single_click+2
  9768     05F2  3F43               	moviw [3]fsr1
  9769     05F3  00A9               	movwf	??___is_single_click+3
  9770     05F4  0820               	movf	___is_single_click@b,w
  9771     05F5  0086               	movwf	6
  9772     05F6  0821               	movf	___is_single_click@b+1,w
  9773     05F7  0087               	movwf	7
  9774     05F8  3146               	addfsr 1,6
  9775     05F9  3F40               	moviw [0]fsr1
  9776     05FA  00AA               	movwf	??___is_single_click+4
  9777     05FB  3F41               	moviw [1]fsr1
  9778     05FC  00AB               	movwf	??___is_single_click+5
  9779     05FD  3F42               	moviw [2]fsr1
  9780     05FE  00AC               	movwf	??___is_single_click+6
  9781     05FF  3F43               	moviw [3]fsr1
  9782     0600  00AD               	movwf	??___is_single_click+7
  9783     0601  0829               	movf	??___is_single_click+3,w
  9784     0602  022D               	subwf	??___is_single_click+7,w
  9785     0603  1D03               	skipz
  9786     0604  2E0F               	goto	u3385
  9787     0605  0828               	movf	??___is_single_click+2,w
  9788     0606  022C               	subwf	??___is_single_click+6,w
  9789     0607  1D03               	skipz
  9790     0608  2E0F               	goto	u3385
  9791     0609  0827               	movf	??___is_single_click+1,w
  9792     060A  022B               	subwf	??___is_single_click+5,w
  9793     060B  1D03               	skipz
  9794     060C  2E0F               	goto	u3385
  9795     060D  0826               	movf	??___is_single_click,w
  9796     060E  022A               	subwf	??___is_single_click+4,w
  9797     060F                     u3385:
  9798     060F  1C03               	skipc
  9799     0610  2E12               	goto	u3381
  9800     0611  2E14               	goto	u3380
  9801     0612                     u3381:
  9802     0612  3001               	movlw	1
  9803     0613  2E15               	goto	u3390
  9804     0614                     u3380:
  9805     0614  3000               	movlw	0
  9806     0615                     u3390:
  9807     0615  00AE               	movwf	___is_single_click@condition1
  9808     0616                     l4183:
  9809                           
  9810                           ;mybutton.c: 40: bool condition2 = (now - b->rising_ts[1] > 200);
  9811     0616  0820               	movf	___is_single_click@b,w
  9812     0617  0086               	movwf	6
  9813     0618  0821               	movf	___is_single_click@b+1,w
  9814     0619  0087               	movwf	7
  9815     061A  314E               	addfsr 1,14
  9816     061B  3F40               	moviw [0]fsr1
  9817     061C  00A6               	movwf	??___is_single_click
  9818     061D  3F41               	moviw [1]fsr1
  9819     061E  00A7               	movwf	??___is_single_click+1
  9820     061F  3F42               	moviw [2]fsr1
  9821     0620  00A8               	movwf	??___is_single_click+2
  9822     0621  3F43               	moviw [3]fsr1
  9823     0622  00A9               	movwf	??___is_single_click+3
  9824     0623  0822               	movf	___is_single_click@now,w
  9825     0624  00AA               	movwf	??___is_single_click+4
  9826     0625  0823               	movf	___is_single_click@now+1,w
  9827     0626  00AB               	movwf	??___is_single_click+5
  9828     0627  0824               	movf	___is_single_click@now+2,w
  9829     0628  00AC               	movwf	??___is_single_click+6
  9830     0629  0825               	movf	___is_single_click@now+3,w
  9831     062A  00AD               	movwf	??___is_single_click+7
  9832     062B  0826               	movf	??___is_single_click,w
  9833     062C  02AA               	subwf	??___is_single_click+4,f
  9834     062D  0827               	movf	??___is_single_click+1,w
  9835     062E  3BAB               	subwfb	??___is_single_click+5,f
  9836     062F  0828               	movf	??___is_single_click+2,w
  9837     0630  3BAC               	subwfb	??___is_single_click+6,f
  9838     0631  0829               	movf	??___is_single_click+3,w
  9839     0632  3BAD               	subwfb	??___is_single_click+7,f
  9840     0633  082D               	movf	??___is_single_click+7,w
  9841     0634  1D03               	btfss	3,2
  9842     0635  2E41               	goto	u3401
  9843     0636  082C               	movf	??___is_single_click+6,w
  9844     0637  1D03               	btfss	3,2
  9845     0638  2E41               	goto	u3401
  9846     0639  082B               	movf	??___is_single_click+5,w
  9847     063A  1D03               	btfss	3,2
  9848     063B  2E41               	goto	u3401
  9849     063C  30C9               	movlw	201
  9850     063D  022A               	subwf	??___is_single_click+4,w
  9851     063E  1803               	btfsc	3,0
  9852     063F  2E41               	goto	u3401
  9853     0640  2E43               	goto	u3400
  9854     0641                     u3401:
  9855     0641  3001               	movlw	1
  9856     0642  2E44               	goto	u3410
  9857     0643                     u3400:
  9858     0643  3000               	movlw	0
  9859     0644                     u3410:
  9860     0644  0140               	movlb	0	; select bank0
  9861     0645  00AF               	movwf	___is_single_click@condition2
  9862     0646                     l4185:
  9863                           
  9864                           ;mybutton.c: 41: bool condition3 = (b->rising_ts[1] - b->rising_ts[0] > 500);
  9865     0646  0820               	movf	___is_single_click@b,w
  9866     0647  0086               	movwf	6
  9867     0648  0821               	movf	___is_single_click@b+1,w
  9868     0649  0087               	movwf	7
  9869     064A  314A               	addfsr 1,10
  9870     064B  3F40               	moviw [0]fsr1
  9871     064C  00A6               	movwf	??___is_single_click
  9872     064D  3F41               	moviw [1]fsr1
  9873     064E  00A7               	movwf	??___is_single_click+1
  9874     064F  3F42               	moviw [2]fsr1
  9875     0650  00A8               	movwf	??___is_single_click+2
  9876     0651  3F43               	moviw [3]fsr1
  9877     0652  00A9               	movwf	??___is_single_click+3
  9878     0653  0820               	movf	___is_single_click@b,w
  9879     0654  0086               	movwf	6
  9880     0655  0821               	movf	___is_single_click@b+1,w
  9881     0656  0087               	movwf	7
  9882     0657  314E               	addfsr 1,14
  9883     0658  3F40               	moviw [0]fsr1
  9884     0659  00AA               	movwf	??___is_single_click+4
  9885     065A  3F41               	moviw [1]fsr1
  9886     065B  00AB               	movwf	??___is_single_click+5
  9887     065C  3F42               	moviw [2]fsr1
  9888     065D  00AC               	movwf	??___is_single_click+6
  9889     065E  3F43               	moviw [3]fsr1
  9890     065F  00AD               	movwf	??___is_single_click+7
  9891     0660  0826               	movf	??___is_single_click,w
  9892     0661  02AA               	subwf	??___is_single_click+4,f
  9893     0662  0827               	movf	??___is_single_click+1,w
  9894     0663  3BAB               	subwfb	??___is_single_click+5,f
  9895     0664  0828               	movf	??___is_single_click+2,w
  9896     0665  3BAC               	subwfb	??___is_single_click+6,f
  9897     0666  0829               	movf	??___is_single_click+3,w
  9898     0667  3BAD               	subwfb	??___is_single_click+7,f
  9899     0668  082D               	movf	??___is_single_click+7,w
  9900     0669  1D03               	btfss	3,2
  9901     066A  2E75               	goto	u3421
  9902     066B  082C               	movf	??___is_single_click+6,w
  9903     066C  1D03               	btfss	3,2
  9904     066D  2E75               	goto	u3421
  9905     066E  30F5               	movlw	245
  9906     066F  022A               	subwf	??___is_single_click+4,w
  9907     0670  3001               	movlw	1
  9908     0671  3B2B               	subwfb	??___is_single_click+5,w
  9909     0672  1803               	btfsc	3,0
  9910     0673  2E75               	goto	u3421
  9911     0674  2E77               	goto	u3420
  9912     0675                     u3421:
  9913     0675  3001               	movlw	1
  9914     0676  2E78               	goto	u3430
  9915     0677                     u3420:
  9916     0677  3000               	movlw	0
  9917     0678                     u3430:
  9918     0678  0140               	movlb	0	; select bank0
  9919     0679  00B0               	movwf	___is_single_click@condition3
  9920     067A                     l4187:
  9921                           
  9922                           ;mybutton.c: 42: bool condition4 = (now - b->falling_ts[1] < 4000);
  9923     067A  0820               	movf	___is_single_click@b,w
  9924     067B  0086               	movwf	6
  9925     067C  0821               	movf	___is_single_click@b+1,w
  9926     067D  0087               	movwf	7
  9927     067E  3146               	addfsr 1,6
  9928     067F  3F40               	moviw [0]fsr1
  9929     0680  00A6               	movwf	??___is_single_click
  9930     0681  3F41               	moviw [1]fsr1
  9931     0682  00A7               	movwf	??___is_single_click+1
  9932     0683  3F42               	moviw [2]fsr1
  9933     0684  00A8               	movwf	??___is_single_click+2
  9934     0685  3F43               	moviw [3]fsr1
  9935     0686  00A9               	movwf	??___is_single_click+3
  9936     0687  0822               	movf	___is_single_click@now,w
  9937     0688  00AA               	movwf	??___is_single_click+4
  9938     0689  0823               	movf	___is_single_click@now+1,w
  9939     068A  00AB               	movwf	??___is_single_click+5
  9940     068B  0824               	movf	___is_single_click@now+2,w
  9941     068C  00AC               	movwf	??___is_single_click+6
  9942     068D  0825               	movf	___is_single_click@now+3,w
  9943     068E  00AD               	movwf	??___is_single_click+7
  9944     068F  0826               	movf	??___is_single_click,w
  9945     0690  02AA               	subwf	??___is_single_click+4,f
  9946     0691  0827               	movf	??___is_single_click+1,w
  9947     0692  3BAB               	subwfb	??___is_single_click+5,f
  9948     0693  0828               	movf	??___is_single_click+2,w
  9949     0694  3BAC               	subwfb	??___is_single_click+6,f
  9950     0695  0829               	movf	??___is_single_click+3,w
  9951     0696  3BAD               	subwfb	??___is_single_click+7,f
  9952     0697  082D               	movf	??___is_single_click+7,w
  9953     0698  1D03               	btfss	3,2
  9954     0699  2EA6               	goto	u3440
  9955     069A  082C               	movf	??___is_single_click+6,w
  9956     069B  1D03               	btfss	3,2
  9957     069C  2EA6               	goto	u3440
  9958     069D  30A0               	movlw	160
  9959     069E  022A               	subwf	??___is_single_click+4,w
  9960     069F  300F               	movlw	15
  9961     06A0  3B2B               	subwfb	??___is_single_click+5,w
  9962     06A1  1C03               	btfss	3,0
  9963     06A2  2EA4               	goto	u3441
  9964     06A3  2EA6               	goto	u3440
  9965     06A4                     u3441:
  9966     06A4  3001               	movlw	1
  9967     06A5  2EA7               	goto	u3450
  9968     06A6                     u3440:
  9969     06A6  3000               	movlw	0
  9970     06A7                     u3450:
  9971     06A7  0140               	movlb	0	; select bank0
  9972     06A8  00B1               	movwf	___is_single_click@condition4
  9973     06A9                     l4189:
  9974                           
  9975                           ;mybutton.c: 44: if (condition1 && condition2 && condition3 && condition4){
  9976     06A9  082E               	movf	___is_single_click@condition1,w
  9977     06AA  1903               	btfsc	3,2
  9978     06AB  2EAD               	goto	u3461
  9979     06AC  2EAE               	goto	u3460
  9980     06AD                     u3461:
  9981     06AD  2EDD               	goto	l4199
  9982     06AE                     u3460:
  9983     06AE                     l4191:
  9984     06AE  082F               	movf	___is_single_click@condition2,w
  9985     06AF  1903               	btfsc	3,2
  9986     06B0  2EB2               	goto	u3471
  9987     06B1  2EB3               	goto	u3470
  9988     06B2                     u3471:
  9989     06B2  2EDD               	goto	l4199
  9990     06B3                     u3470:
  9991     06B3                     l4193:
  9992     06B3  0830               	movf	___is_single_click@condition3,w
  9993     06B4  1903               	btfsc	3,2
  9994     06B5  2EB7               	goto	u3481
  9995     06B6  2EB8               	goto	u3480
  9996     06B7                     u3481:
  9997     06B7  2EDD               	goto	l4199
  9998     06B8                     u3480:
  9999     06B8                     l4195:
 10000     06B8  0831               	movf	___is_single_click@condition4,w
 10001     06B9  1903               	btfsc	3,2
 10002     06BA  2EBC               	goto	u3491
 10003     06BB  2EBD               	goto	u3490
 10004     06BC                     u3491:
 10005     06BC  2EDD               	goto	l4199
 10006     06BD                     u3490:
 10007     06BD                     l4197:
 10008                           
 10009                           ;mybutton.c: 45: b->single_click_tmps[0] = b->single_click_tmps[1];
 10010     06BD  0820               	movf	___is_single_click@b,w
 10011     06BE  0086               	movwf	6
 10012     06BF  0821               	movf	___is_single_click@b+1,w
 10013     06C0  0087               	movwf	7
 10014     06C1  3153               	addfsr 1,19
 10015     06C2  0801               	movf	1,w
 10016     06C3  00A6               	movwf	??___is_single_click
 10017     06C4  0820               	movf	___is_single_click@b,w
 10018     06C5  3E12               	addlw	18
 10019     06C6  00A7               	movwf	??___is_single_click+1
 10020     06C7  3000               	movlw	0
 10021     06C8  3D21               	addwfc	___is_single_click@b+1,w
 10022     06C9  00A8               	movwf	??___is_single_click+2
 10023     06CA  0827               	movf	??___is_single_click+1,w
 10024     06CB  0086               	movwf	6
 10025     06CC  0828               	movf	??___is_single_click+2,w
 10026     06CD  0087               	movwf	7
 10027     06CE  0826               	movf	??___is_single_click,w
 10028     06CF  0081               	movwf	1
 10029                           
 10030                           ;mybutton.c: 46: b->single_click_tmps[1] = 1;
 10031     06D0  0820               	movf	___is_single_click@b,w
 10032     06D1  3E13               	addlw	19
 10033     06D2  00A6               	movwf	??___is_single_click
 10034     06D3  3000               	movlw	0
 10035     06D4  3D21               	addwfc	___is_single_click@b+1,w
 10036     06D5  00A7               	movwf	??___is_single_click+1
 10037     06D6  0826               	movf	??___is_single_click,w
 10038     06D7  0086               	movwf	6
 10039     06D8  0827               	movf	??___is_single_click+1,w
 10040     06D9  0087               	movwf	7
 10041     06DA  3001               	movlw	1
 10042     06DB  0081               	movwf	1
 10043                           
 10044                           ;mybutton.c: 47: }else{
 10045     06DC  2EF6               	goto	l4203
 10046     06DD                     l4199:
 10047                           
 10048                           ;mybutton.c: 48: b->single_click_tmps[0] = b->single_click_tmps[1];
 10049     06DD  0820               	movf	___is_single_click@b,w
 10050     06DE  0086               	movwf	6
 10051     06DF  0821               	movf	___is_single_click@b+1,w
 10052     06E0  0087               	movwf	7
 10053     06E1  3153               	addfsr 1,19
 10054     06E2  0801               	movf	1,w
 10055     06E3  00A6               	movwf	??___is_single_click
 10056     06E4  0820               	movf	___is_single_click@b,w
 10057     06E5  3E12               	addlw	18
 10058     06E6  00A7               	movwf	??___is_single_click+1
 10059     06E7  3000               	movlw	0
 10060     06E8  3D21               	addwfc	___is_single_click@b+1,w
 10061     06E9  00A8               	movwf	??___is_single_click+2
 10062     06EA  0827               	movf	??___is_single_click+1,w
 10063     06EB  0086               	movwf	6
 10064     06EC  0828               	movf	??___is_single_click+2,w
 10065     06ED  0087               	movwf	7
 10066     06EE  0826               	movf	??___is_single_click,w
 10067     06EF  0081               	movwf	1
 10068     06F0                     l4201:
 10069                           
 10070                           ;mybutton.c: 49: b->single_click_tmps[1] = 0;
 10071     06F0  0820               	movf	___is_single_click@b,w
 10072     06F1  0086               	movwf	6
 10073     06F2  0821               	movf	___is_single_click@b+1,w
 10074     06F3  0087               	movwf	7
 10075     06F4  3153               	addfsr 1,19
 10076     06F5  0181               	clrf	1
 10077     06F6                     l4203:
 10078                           
 10079                           ;mybutton.c: 50: };mybutton.c: 52: if(0 == b->single_click_tmps[0] && 1 == b->single_cli
      +                          ck_tmps[1]){
 10080     06F6  0820               	movf	___is_single_click@b,w
 10081     06F7  0086               	movwf	6
 10082     06F8  0821               	movf	___is_single_click@b+1,w
 10083     06F9  0087               	movwf	7
 10084     06FA  3152               	addfsr 1,18
 10085     06FB  0801               	movf	1,w
 10086     06FC  1D03               	btfss	3,2
 10087     06FD  2EFF               	goto	u3501
 10088     06FE  2F00               	goto	u3500
 10089     06FF                     u3501:
 10090     06FF  2F0C               	goto	l4211
 10091     0700                     u3500:
 10092     0700                     l4205:
 10093     0700  0820               	movf	___is_single_click@b,w
 10094     0701  0086               	movwf	6
 10095     0702  0821               	movf	___is_single_click@b+1,w
 10096     0703  0087               	movwf	7
 10097     0704  3153               	addfsr 1,19
 10098     0705  0301               	decf	1,w
 10099     0706  1D03               	btfss	3,2
 10100     0707  2F09               	goto	u3511
 10101     0708  2F0A               	goto	u3510
 10102     0709                     u3511:
 10103     0709  2F0C               	goto	l4211
 10104     070A                     u3510:
 10105     070A                     l4207:
 10106                           
 10107                           ;mybutton.c: 53: return 1;
 10108     070A  3001               	movlw	1
 10109     070B  2F0D               	goto	l371
 10110     070C                     l4211:
 10111                           
 10112                           ;mybutton.c: 54: };mybutton.c: 55: return 0;
 10113     070C  3000               	movlw	0
 10114     070D                     l371:
 10115     070D  0008               	return
 10116     070E                     __end_of___is_single_click:
 10117                           
 10118                           	psect	text4
 10119     0ACD                     __ptext4:	
 10120 ;; *************** function ___is_long_press *****************
 10121 ;; Defined at:
 10122 ;;		line 80 in file "mybutton.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;  b               2    0[BANK0 ] PTR struct mybutton
 10125 ;;		 -> main@b2(27), main@b1(27), 
 10126 ;;  now             4    2[BANK0 ] unsigned long 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;  condition2      1   15[BANK0 ] unsigned char 
 10129 ;;  condition1      1   14[BANK0 ] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      unsigned char 
 10132 ;; Registers used:
 10133 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10139 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;Total ram usage:       16 bytes
 10144 ;; Hardware stack levels used: 1
 10145 ;; Hardware stack levels required when called: 2
 10146 ;; This function calls:
 10147 ;;		Nothing
 10148 ;; This function is called by:
 10149 ;;		_update_mybutton
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           
 10153     0ACD                     ___is_long_press:	
 10154                           ;psect for function ___is_long_press
 10155                           
 10156     0ACD                     l4245:	
 10157                           ;incstack = 0
 10158                           ; Regs used in ___is_long_press: [wreg+fsr1l+fsr1h+status,2+status,0]
 10159                           
 10160                           
 10161                           ;mybutton.c: 81: bool condition1 = (b->falling_ts[1] > b->rising_ts[1]);
 10162     0ACD  0140               	movlb	0	; select bank0
 10163     0ACE  0820               	movf	___is_long_press@b,w
 10164     0ACF  0086               	movwf	6
 10165     0AD0  0821               	movf	___is_long_press@b+1,w
 10166     0AD1  0087               	movwf	7
 10167     0AD2  3146               	addfsr 1,6
 10168     0AD3  3F40               	moviw [0]fsr1
 10169     0AD4  00A6               	movwf	??___is_long_press
 10170     0AD5  3F41               	moviw [1]fsr1
 10171     0AD6  00A7               	movwf	??___is_long_press+1
 10172     0AD7  3F42               	moviw [2]fsr1
 10173     0AD8  00A8               	movwf	??___is_long_press+2
 10174     0AD9  3F43               	moviw [3]fsr1
 10175     0ADA  00A9               	movwf	??___is_long_press+3
 10176     0ADB  0820               	movf	___is_long_press@b,w
 10177     0ADC  0086               	movwf	6
 10178     0ADD  0821               	movf	___is_long_press@b+1,w
 10179     0ADE  0087               	movwf	7
 10180     0ADF  314E               	addfsr 1,14
 10181     0AE0  3F40               	moviw [0]fsr1
 10182     0AE1  00AA               	movwf	??___is_long_press+4
 10183     0AE2  3F41               	moviw [1]fsr1
 10184     0AE3  00AB               	movwf	??___is_long_press+5
 10185     0AE4  3F42               	moviw [2]fsr1
 10186     0AE5  00AC               	movwf	??___is_long_press+6
 10187     0AE6  3F43               	moviw [3]fsr1
 10188     0AE7  00AD               	movwf	??___is_long_press+7
 10189     0AE8  0829               	movf	??___is_long_press+3,w
 10190     0AE9  022D               	subwf	??___is_long_press+7,w
 10191     0AEA  1D03               	skipz
 10192     0AEB  2AF6               	goto	u3635
 10193     0AEC  0828               	movf	??___is_long_press+2,w
 10194     0AED  022C               	subwf	??___is_long_press+6,w
 10195     0AEE  1D03               	skipz
 10196     0AEF  2AF6               	goto	u3635
 10197     0AF0  0827               	movf	??___is_long_press+1,w
 10198     0AF1  022B               	subwf	??___is_long_press+5,w
 10199     0AF2  1D03               	skipz
 10200     0AF3  2AF6               	goto	u3635
 10201     0AF4  0826               	movf	??___is_long_press,w
 10202     0AF5  022A               	subwf	??___is_long_press+4,w
 10203     0AF6                     u3635:
 10204     0AF6  1C03               	skipc
 10205     0AF7  2AF9               	goto	u3631
 10206     0AF8  2AFB               	goto	u3630
 10207     0AF9                     u3631:
 10208     0AF9  3001               	movlw	1
 10209     0AFA  2AFC               	goto	u3640
 10210     0AFB                     u3630:
 10211     0AFB  3000               	movlw	0
 10212     0AFC                     u3640:
 10213     0AFC  00AE               	movwf	___is_long_press@condition1
 10214     0AFD                     l4247:
 10215                           
 10216                           ;mybutton.c: 82: bool condition2 = (now - b->falling_ts[1] > 4000);
 10217     0AFD  0820               	movf	___is_long_press@b,w
 10218     0AFE  0086               	movwf	6
 10219     0AFF  0821               	movf	___is_long_press@b+1,w
 10220     0B00  0087               	movwf	7
 10221     0B01  3146               	addfsr 1,6
 10222     0B02  3F40               	moviw [0]fsr1
 10223     0B03  00A6               	movwf	??___is_long_press
 10224     0B04  3F41               	moviw [1]fsr1
 10225     0B05  00A7               	movwf	??___is_long_press+1
 10226     0B06  3F42               	moviw [2]fsr1
 10227     0B07  00A8               	movwf	??___is_long_press+2
 10228     0B08  3F43               	moviw [3]fsr1
 10229     0B09  00A9               	movwf	??___is_long_press+3
 10230     0B0A  0822               	movf	___is_long_press@now,w
 10231     0B0B  00AA               	movwf	??___is_long_press+4
 10232     0B0C  0823               	movf	___is_long_press@now+1,w
 10233     0B0D  00AB               	movwf	??___is_long_press+5
 10234     0B0E  0824               	movf	___is_long_press@now+2,w
 10235     0B0F  00AC               	movwf	??___is_long_press+6
 10236     0B10  0825               	movf	___is_long_press@now+3,w
 10237     0B11  00AD               	movwf	??___is_long_press+7
 10238     0B12  0826               	movf	??___is_long_press,w
 10239     0B13  02AA               	subwf	??___is_long_press+4,f
 10240     0B14  0827               	movf	??___is_long_press+1,w
 10241     0B15  3BAB               	subwfb	??___is_long_press+5,f
 10242     0B16  0828               	movf	??___is_long_press+2,w
 10243     0B17  3BAC               	subwfb	??___is_long_press+6,f
 10244     0B18  0829               	movf	??___is_long_press+3,w
 10245     0B19  3BAD               	subwfb	??___is_long_press+7,f
 10246     0B1A  082D               	movf	??___is_long_press+7,w
 10247     0B1B  1D03               	btfss	3,2
 10248     0B1C  2B27               	goto	u3651
 10249     0B1D  082C               	movf	??___is_long_press+6,w
 10250     0B1E  1D03               	btfss	3,2
 10251     0B1F  2B27               	goto	u3651
 10252     0B20  30A1               	movlw	161
 10253     0B21  022A               	subwf	??___is_long_press+4,w
 10254     0B22  300F               	movlw	15
 10255     0B23  3B2B               	subwfb	??___is_long_press+5,w
 10256     0B24  1803               	btfsc	3,0
 10257     0B25  2B27               	goto	u3651
 10258     0B26  2B29               	goto	u3650
 10259     0B27                     u3651:
 10260     0B27  3001               	movlw	1
 10261     0B28  2B2A               	goto	u3660
 10262     0B29                     u3650:
 10263     0B29  3000               	movlw	0
 10264     0B2A                     u3660:
 10265     0B2A  0140               	movlb	0	; select bank0
 10266     0B2B  00AF               	movwf	___is_long_press@condition2
 10267     0B2C                     l4249:
 10268                           
 10269                           ;mybutton.c: 84: if(condition1 && condition2){
 10270     0B2C  082E               	movf	___is_long_press@condition1,w
 10271     0B2D  1903               	btfsc	3,2
 10272     0B2E  2B30               	goto	u3671
 10273     0B2F  2B31               	goto	u3670
 10274     0B30                     u3671:
 10275     0B30  2B56               	goto	l4255
 10276     0B31                     u3670:
 10277     0B31                     l4251:
 10278     0B31  082F               	movf	___is_long_press@condition2,w
 10279     0B32  1903               	btfsc	3,2
 10280     0B33  2B35               	goto	u3681
 10281     0B34  2B36               	goto	u3680
 10282     0B35                     u3681:
 10283     0B35  2B56               	goto	l4255
 10284     0B36                     u3680:
 10285     0B36                     l4253:
 10286                           
 10287                           ;mybutton.c: 85: b->long_press_tmps[0] = b->long_press_tmps[1];
 10288     0B36  0820               	movf	___is_long_press@b,w
 10289     0B37  0086               	movwf	6
 10290     0B38  0821               	movf	___is_long_press@b+1,w
 10291     0B39  0087               	movwf	7
 10292     0B3A  3157               	addfsr 1,23
 10293     0B3B  0801               	movf	1,w
 10294     0B3C  00A6               	movwf	??___is_long_press
 10295     0B3D  0820               	movf	___is_long_press@b,w
 10296     0B3E  3E16               	addlw	22
 10297     0B3F  00A7               	movwf	??___is_long_press+1
 10298     0B40  3000               	movlw	0
 10299     0B41  3D21               	addwfc	___is_long_press@b+1,w
 10300     0B42  00A8               	movwf	??___is_long_press+2
 10301     0B43  0827               	movf	??___is_long_press+1,w
 10302     0B44  0086               	movwf	6
 10303     0B45  0828               	movf	??___is_long_press+2,w
 10304     0B46  0087               	movwf	7
 10305     0B47  0826               	movf	??___is_long_press,w
 10306     0B48  0081               	movwf	1
 10307                           
 10308                           ;mybutton.c: 86: b->long_press_tmps[1] = 1;
 10309     0B49  0820               	movf	___is_long_press@b,w
 10310     0B4A  3E17               	addlw	23
 10311     0B4B  00A6               	movwf	??___is_long_press
 10312     0B4C  3000               	movlw	0
 10313     0B4D  3D21               	addwfc	___is_long_press@b+1,w
 10314     0B4E  00A7               	movwf	??___is_long_press+1
 10315     0B4F  0826               	movf	??___is_long_press,w
 10316     0B50  0086               	movwf	6
 10317     0B51  0827               	movf	??___is_long_press+1,w
 10318     0B52  0087               	movwf	7
 10319     0B53  3001               	movlw	1
 10320     0B54  0081               	movwf	1
 10321                           
 10322                           ;mybutton.c: 87: }else{
 10323     0B55  2B6F               	goto	l4259
 10324     0B56                     l4255:
 10325                           
 10326                           ;mybutton.c: 88: b->long_press_tmps[0] = b->long_press_tmps[1];
 10327     0B56  0820               	movf	___is_long_press@b,w
 10328     0B57  0086               	movwf	6
 10329     0B58  0821               	movf	___is_long_press@b+1,w
 10330     0B59  0087               	movwf	7
 10331     0B5A  3157               	addfsr 1,23
 10332     0B5B  0801               	movf	1,w
 10333     0B5C  00A6               	movwf	??___is_long_press
 10334     0B5D  0820               	movf	___is_long_press@b,w
 10335     0B5E  3E16               	addlw	22
 10336     0B5F  00A7               	movwf	??___is_long_press+1
 10337     0B60  3000               	movlw	0
 10338     0B61  3D21               	addwfc	___is_long_press@b+1,w
 10339     0B62  00A8               	movwf	??___is_long_press+2
 10340     0B63  0827               	movf	??___is_long_press+1,w
 10341     0B64  0086               	movwf	6
 10342     0B65  0828               	movf	??___is_long_press+2,w
 10343     0B66  0087               	movwf	7
 10344     0B67  0826               	movf	??___is_long_press,w
 10345     0B68  0081               	movwf	1
 10346     0B69                     l4257:
 10347                           
 10348                           ;mybutton.c: 89: b->long_press_tmps[1] = 0;
 10349     0B69  0820               	movf	___is_long_press@b,w
 10350     0B6A  0086               	movwf	6
 10351     0B6B  0821               	movf	___is_long_press@b+1,w
 10352     0B6C  0087               	movwf	7
 10353     0B6D  3157               	addfsr 1,23
 10354     0B6E  0181               	clrf	1
 10355     0B6F                     l4259:
 10356                           
 10357                           ;mybutton.c: 90: };mybutton.c: 92: if(0 == b->long_press_tmps[0] && 1 == b->long_press_t
      +                          mps[1]){
 10358     0B6F  0820               	movf	___is_long_press@b,w
 10359     0B70  0086               	movwf	6
 10360     0B71  0821               	movf	___is_long_press@b+1,w
 10361     0B72  0087               	movwf	7
 10362     0B73  3156               	addfsr 1,22
 10363     0B74  0801               	movf	1,w
 10364     0B75  1D03               	btfss	3,2
 10365     0B76  2B78               	goto	u3691
 10366     0B77  2B79               	goto	u3690
 10367     0B78                     u3691:
 10368     0B78  2B85               	goto	l4267
 10369     0B79                     u3690:
 10370     0B79                     l4261:
 10371     0B79  0820               	movf	___is_long_press@b,w
 10372     0B7A  0086               	movwf	6
 10373     0B7B  0821               	movf	___is_long_press@b+1,w
 10374     0B7C  0087               	movwf	7
 10375     0B7D  3157               	addfsr 1,23
 10376     0B7E  0301               	decf	1,w
 10377     0B7F  1D03               	btfss	3,2
 10378     0B80  2B82               	goto	u3701
 10379     0B81  2B83               	goto	u3700
 10380     0B82                     u3701:
 10381     0B82  2B85               	goto	l4267
 10382     0B83                     u3700:
 10383     0B83                     l4263:
 10384                           
 10385                           ;mybutton.c: 93: return 1;
 10386     0B83  3001               	movlw	1
 10387     0B84  2B86               	goto	l383
 10388     0B85                     l4267:
 10389                           
 10390                           ;mybutton.c: 94: };mybutton.c: 95: return 0;
 10391     0B85  3000               	movlw	0
 10392     0B86                     l383:
 10393     0B86  0008               	return
 10394     0B87                     __end_of___is_long_press:
 10395                           
 10396                           	psect	text5
 10397     0D0E                     __ptext5:	
 10398 ;; *************** function ___is_double_click *****************
 10399 ;; Defined at:
 10400 ;;		line 59 in file "mybutton.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;  b               2    0[BANK0 ] PTR struct mybutton
 10403 ;;		 -> main@b2(27), main@b1(27), 
 10404 ;;  now             4    2[BANK0 ] unsigned long 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;  condition3      1   16[BANK0 ] unsigned char 
 10407 ;;  condition2      1   15[BANK0 ] unsigned char 
 10408 ;;  condition1      1   14[BANK0 ] unsigned char 
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      unsigned char 
 10411 ;; Registers used:
 10412 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10418 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;Total ram usage:       17 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; Hardware stack levels required when called: 2
 10425 ;; This function calls:
 10426 ;;		Nothing
 10427 ;; This function is called by:
 10428 ;;		_update_mybutton
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432     0D0E                     ___is_double_click:	
 10433                           ;psect for function ___is_double_click
 10434                           
 10435     0D0E                     l4215:	
 10436                           ;incstack = 0
 10437                           ; Regs used in ___is_double_click: [wreg+fsr1l+fsr1h+status,2+status,0]
 10438                           
 10439                           
 10440                           ;mybutton.c: 61: bool condition1 = (b->rising_ts[1] > b->falling_ts[1]);
 10441     0D0E  0140               	movlb	0	; select bank0
 10442     0D0F  0820               	movf	___is_double_click@b,w
 10443     0D10  0086               	movwf	6
 10444     0D11  0821               	movf	___is_double_click@b+1,w
 10445     0D12  0087               	movwf	7
 10446     0D13  314E               	addfsr 1,14
 10447     0D14  3F40               	moviw [0]fsr1
 10448     0D15  00A6               	movwf	??___is_double_click
 10449     0D16  3F41               	moviw [1]fsr1
 10450     0D17  00A7               	movwf	??___is_double_click+1
 10451     0D18  3F42               	moviw [2]fsr1
 10452     0D19  00A8               	movwf	??___is_double_click+2
 10453     0D1A  3F43               	moviw [3]fsr1
 10454     0D1B  00A9               	movwf	??___is_double_click+3
 10455     0D1C  0820               	movf	___is_double_click@b,w
 10456     0D1D  0086               	movwf	6
 10457     0D1E  0821               	movf	___is_double_click@b+1,w
 10458     0D1F  0087               	movwf	7
 10459     0D20  3146               	addfsr 1,6
 10460     0D21  3F40               	moviw [0]fsr1
 10461     0D22  00AA               	movwf	??___is_double_click+4
 10462     0D23  3F41               	moviw [1]fsr1
 10463     0D24  00AB               	movwf	??___is_double_click+5
 10464     0D25  3F42               	moviw [2]fsr1
 10465     0D26  00AC               	movwf	??___is_double_click+6
 10466     0D27  3F43               	moviw [3]fsr1
 10467     0D28  00AD               	movwf	??___is_double_click+7
 10468     0D29  0829               	movf	??___is_double_click+3,w
 10469     0D2A  022D               	subwf	??___is_double_click+7,w
 10470     0D2B  1D03               	skipz
 10471     0D2C  2D37               	goto	u3525
 10472     0D2D  0828               	movf	??___is_double_click+2,w
 10473     0D2E  022C               	subwf	??___is_double_click+6,w
 10474     0D2F  1D03               	skipz
 10475     0D30  2D37               	goto	u3525
 10476     0D31  0827               	movf	??___is_double_click+1,w
 10477     0D32  022B               	subwf	??___is_double_click+5,w
 10478     0D33  1D03               	skipz
 10479     0D34  2D37               	goto	u3525
 10480     0D35  0826               	movf	??___is_double_click,w
 10481     0D36  022A               	subwf	??___is_double_click+4,w
 10482     0D37                     u3525:
 10483     0D37  1C03               	skipc
 10484     0D38  2D3A               	goto	u3521
 10485     0D39  2D3C               	goto	u3520
 10486     0D3A                     u3521:
 10487     0D3A  3001               	movlw	1
 10488     0D3B  2D3D               	goto	u3530
 10489     0D3C                     u3520:
 10490     0D3C  3000               	movlw	0
 10491     0D3D                     u3530:
 10492     0D3D  00AE               	movwf	___is_double_click@condition1
 10493     0D3E                     l4217:
 10494                           
 10495                           ;mybutton.c: 62: bool condition2 = (now - b->rising_ts[1] > 200);
 10496     0D3E  0820               	movf	___is_double_click@b,w
 10497     0D3F  0086               	movwf	6
 10498     0D40  0821               	movf	___is_double_click@b+1,w
 10499     0D41  0087               	movwf	7
 10500     0D42  314E               	addfsr 1,14
 10501     0D43  3F40               	moviw [0]fsr1
 10502     0D44  00A6               	movwf	??___is_double_click
 10503     0D45  3F41               	moviw [1]fsr1
 10504     0D46  00A7               	movwf	??___is_double_click+1
 10505     0D47  3F42               	moviw [2]fsr1
 10506     0D48  00A8               	movwf	??___is_double_click+2
 10507     0D49  3F43               	moviw [3]fsr1
 10508     0D4A  00A9               	movwf	??___is_double_click+3
 10509     0D4B  0822               	movf	___is_double_click@now,w
 10510     0D4C  00AA               	movwf	??___is_double_click+4
 10511     0D4D  0823               	movf	___is_double_click@now+1,w
 10512     0D4E  00AB               	movwf	??___is_double_click+5
 10513     0D4F  0824               	movf	___is_double_click@now+2,w
 10514     0D50  00AC               	movwf	??___is_double_click+6
 10515     0D51  0825               	movf	___is_double_click@now+3,w
 10516     0D52  00AD               	movwf	??___is_double_click+7
 10517     0D53  0826               	movf	??___is_double_click,w
 10518     0D54  02AA               	subwf	??___is_double_click+4,f
 10519     0D55  0827               	movf	??___is_double_click+1,w
 10520     0D56  3BAB               	subwfb	??___is_double_click+5,f
 10521     0D57  0828               	movf	??___is_double_click+2,w
 10522     0D58  3BAC               	subwfb	??___is_double_click+6,f
 10523     0D59  0829               	movf	??___is_double_click+3,w
 10524     0D5A  3BAD               	subwfb	??___is_double_click+7,f
 10525     0D5B  082D               	movf	??___is_double_click+7,w
 10526     0D5C  1D03               	btfss	3,2
 10527     0D5D  2D69               	goto	u3541
 10528     0D5E  082C               	movf	??___is_double_click+6,w
 10529     0D5F  1D03               	btfss	3,2
 10530     0D60  2D69               	goto	u3541
 10531     0D61  082B               	movf	??___is_double_click+5,w
 10532     0D62  1D03               	btfss	3,2
 10533     0D63  2D69               	goto	u3541
 10534     0D64  30C9               	movlw	201
 10535     0D65  022A               	subwf	??___is_double_click+4,w
 10536     0D66  1803               	btfsc	3,0
 10537     0D67  2D69               	goto	u3541
 10538     0D68  2D6B               	goto	u3540
 10539     0D69                     u3541:
 10540     0D69  3001               	movlw	1
 10541     0D6A  2D6C               	goto	u3550
 10542     0D6B                     u3540:
 10543     0D6B  3000               	movlw	0
 10544     0D6C                     u3550:
 10545     0D6C  0140               	movlb	0	; select bank0
 10546     0D6D  00AF               	movwf	___is_double_click@condition2
 10547     0D6E                     l4219:
 10548                           
 10549                           ;mybutton.c: 63: bool condition3 = (b->rising_ts[1] - b->rising_ts[0] < 500);
 10550     0D6E  0820               	movf	___is_double_click@b,w
 10551     0D6F  0086               	movwf	6
 10552     0D70  0821               	movf	___is_double_click@b+1,w
 10553     0D71  0087               	movwf	7
 10554     0D72  314A               	addfsr 1,10
 10555     0D73  3F40               	moviw [0]fsr1
 10556     0D74  00A6               	movwf	??___is_double_click
 10557     0D75  3F41               	moviw [1]fsr1
 10558     0D76  00A7               	movwf	??___is_double_click+1
 10559     0D77  3F42               	moviw [2]fsr1
 10560     0D78  00A8               	movwf	??___is_double_click+2
 10561     0D79  3F43               	moviw [3]fsr1
 10562     0D7A  00A9               	movwf	??___is_double_click+3
 10563     0D7B  0820               	movf	___is_double_click@b,w
 10564     0D7C  0086               	movwf	6
 10565     0D7D  0821               	movf	___is_double_click@b+1,w
 10566     0D7E  0087               	movwf	7
 10567     0D7F  314E               	addfsr 1,14
 10568     0D80  3F40               	moviw [0]fsr1
 10569     0D81  00AA               	movwf	??___is_double_click+4
 10570     0D82  3F41               	moviw [1]fsr1
 10571     0D83  00AB               	movwf	??___is_double_click+5
 10572     0D84  3F42               	moviw [2]fsr1
 10573     0D85  00AC               	movwf	??___is_double_click+6
 10574     0D86  3F43               	moviw [3]fsr1
 10575     0D87  00AD               	movwf	??___is_double_click+7
 10576     0D88  0826               	movf	??___is_double_click,w
 10577     0D89  02AA               	subwf	??___is_double_click+4,f
 10578     0D8A  0827               	movf	??___is_double_click+1,w
 10579     0D8B  3BAB               	subwfb	??___is_double_click+5,f
 10580     0D8C  0828               	movf	??___is_double_click+2,w
 10581     0D8D  3BAC               	subwfb	??___is_double_click+6,f
 10582     0D8E  0829               	movf	??___is_double_click+3,w
 10583     0D8F  3BAD               	subwfb	??___is_double_click+7,f
 10584     0D90  082D               	movf	??___is_double_click+7,w
 10585     0D91  1D03               	btfss	3,2
 10586     0D92  2D9F               	goto	u3560
 10587     0D93  082C               	movf	??___is_double_click+6,w
 10588     0D94  1D03               	btfss	3,2
 10589     0D95  2D9F               	goto	u3560
 10590     0D96  30F4               	movlw	244
 10591     0D97  022A               	subwf	??___is_double_click+4,w
 10592     0D98  3001               	movlw	1
 10593     0D99  3B2B               	subwfb	??___is_double_click+5,w
 10594     0D9A  1C03               	btfss	3,0
 10595     0D9B  2D9D               	goto	u3561
 10596     0D9C  2D9F               	goto	u3560
 10597     0D9D                     u3561:
 10598     0D9D  3001               	movlw	1
 10599     0D9E  2DA0               	goto	u3570
 10600     0D9F                     u3560:
 10601     0D9F  3000               	movlw	0
 10602     0DA0                     u3570:
 10603     0DA0  0140               	movlb	0	; select bank0
 10604     0DA1  00B0               	movwf	___is_double_click@condition3
 10605     0DA2                     l4221:
 10606                           
 10607                           ;mybutton.c: 65: if (condition1 && condition2 && condition3){
 10608     0DA2  082E               	movf	___is_double_click@condition1,w
 10609     0DA3  1903               	btfsc	3,2
 10610     0DA4  2DA6               	goto	u3581
 10611     0DA5  2DA7               	goto	u3580
 10612     0DA6                     u3581:
 10613     0DA6  2DD1               	goto	l4229
 10614     0DA7                     u3580:
 10615     0DA7                     l4223:
 10616     0DA7  082F               	movf	___is_double_click@condition2,w
 10617     0DA8  1903               	btfsc	3,2
 10618     0DA9  2DAB               	goto	u3591
 10619     0DAA  2DAC               	goto	u3590
 10620     0DAB                     u3591:
 10621     0DAB  2DD1               	goto	l4229
 10622     0DAC                     u3590:
 10623     0DAC                     l4225:
 10624     0DAC  0830               	movf	___is_double_click@condition3,w
 10625     0DAD  1903               	btfsc	3,2
 10626     0DAE  2DB0               	goto	u3601
 10627     0DAF  2DB1               	goto	u3600
 10628     0DB0                     u3601:
 10629     0DB0  2DD1               	goto	l4229
 10630     0DB1                     u3600:
 10631     0DB1                     l4227:
 10632                           
 10633                           ;mybutton.c: 66: b->double_click_tmps[0] = b->double_click_tmps[1];
 10634     0DB1  0820               	movf	___is_double_click@b,w
 10635     0DB2  0086               	movwf	6
 10636     0DB3  0821               	movf	___is_double_click@b+1,w
 10637     0DB4  0087               	movwf	7
 10638     0DB5  3155               	addfsr 1,21
 10639     0DB6  0801               	movf	1,w
 10640     0DB7  00A6               	movwf	??___is_double_click
 10641     0DB8  0820               	movf	___is_double_click@b,w
 10642     0DB9  3E14               	addlw	20
 10643     0DBA  00A7               	movwf	??___is_double_click+1
 10644     0DBB  3000               	movlw	0
 10645     0DBC  3D21               	addwfc	___is_double_click@b+1,w
 10646     0DBD  00A8               	movwf	??___is_double_click+2
 10647     0DBE  0827               	movf	??___is_double_click+1,w
 10648     0DBF  0086               	movwf	6
 10649     0DC0  0828               	movf	??___is_double_click+2,w
 10650     0DC1  0087               	movwf	7
 10651     0DC2  0826               	movf	??___is_double_click,w
 10652     0DC3  0081               	movwf	1
 10653                           
 10654                           ;mybutton.c: 67: b->double_click_tmps[1] = 1;
 10655     0DC4  0820               	movf	___is_double_click@b,w
 10656     0DC5  3E15               	addlw	21
 10657     0DC6  00A6               	movwf	??___is_double_click
 10658     0DC7  3000               	movlw	0
 10659     0DC8  3D21               	addwfc	___is_double_click@b+1,w
 10660     0DC9  00A7               	movwf	??___is_double_click+1
 10661     0DCA  0826               	movf	??___is_double_click,w
 10662     0DCB  0086               	movwf	6
 10663     0DCC  0827               	movf	??___is_double_click+1,w
 10664     0DCD  0087               	movwf	7
 10665     0DCE  3001               	movlw	1
 10666     0DCF  0081               	movwf	1
 10667                           
 10668                           ;mybutton.c: 68: }else{
 10669     0DD0  2DEA               	goto	l4233
 10670     0DD1                     l4229:
 10671                           
 10672                           ;mybutton.c: 69: b->double_click_tmps[0] = b->double_click_tmps[1];
 10673     0DD1  0820               	movf	___is_double_click@b,w
 10674     0DD2  0086               	movwf	6
 10675     0DD3  0821               	movf	___is_double_click@b+1,w
 10676     0DD4  0087               	movwf	7
 10677     0DD5  3155               	addfsr 1,21
 10678     0DD6  0801               	movf	1,w
 10679     0DD7  00A6               	movwf	??___is_double_click
 10680     0DD8  0820               	movf	___is_double_click@b,w
 10681     0DD9  3E14               	addlw	20
 10682     0DDA  00A7               	movwf	??___is_double_click+1
 10683     0DDB  3000               	movlw	0
 10684     0DDC  3D21               	addwfc	___is_double_click@b+1,w
 10685     0DDD  00A8               	movwf	??___is_double_click+2
 10686     0DDE  0827               	movf	??___is_double_click+1,w
 10687     0DDF  0086               	movwf	6
 10688     0DE0  0828               	movf	??___is_double_click+2,w
 10689     0DE1  0087               	movwf	7
 10690     0DE2  0826               	movf	??___is_double_click,w
 10691     0DE3  0081               	movwf	1
 10692     0DE4                     l4231:
 10693                           
 10694                           ;mybutton.c: 70: b->double_click_tmps[1] = 0;
 10695     0DE4  0820               	movf	___is_double_click@b,w
 10696     0DE5  0086               	movwf	6
 10697     0DE6  0821               	movf	___is_double_click@b+1,w
 10698     0DE7  0087               	movwf	7
 10699     0DE8  3155               	addfsr 1,21
 10700     0DE9  0181               	clrf	1
 10701     0DEA                     l4233:
 10702                           
 10703                           ;mybutton.c: 71: };mybutton.c: 73: if(0 == b->double_click_tmps[0] && 1 == b->double_cli
      +                          ck_tmps[1]){
 10704     0DEA  0820               	movf	___is_double_click@b,w
 10705     0DEB  0086               	movwf	6
 10706     0DEC  0821               	movf	___is_double_click@b+1,w
 10707     0DED  0087               	movwf	7
 10708     0DEE  3154               	addfsr 1,20
 10709     0DEF  0801               	movf	1,w
 10710     0DF0  1D03               	btfss	3,2
 10711     0DF1  2DF3               	goto	u3611
 10712     0DF2  2DF4               	goto	u3610
 10713     0DF3                     u3611:
 10714     0DF3  2E00               	goto	l4241
 10715     0DF4                     u3610:
 10716     0DF4                     l4235:
 10717     0DF4  0820               	movf	___is_double_click@b,w
 10718     0DF5  0086               	movwf	6
 10719     0DF6  0821               	movf	___is_double_click@b+1,w
 10720     0DF7  0087               	movwf	7
 10721     0DF8  3155               	addfsr 1,21
 10722     0DF9  0301               	decf	1,w
 10723     0DFA  1D03               	btfss	3,2
 10724     0DFB  2DFD               	goto	u3621
 10725     0DFC  2DFE               	goto	u3620
 10726     0DFD                     u3621:
 10727     0DFD  2E00               	goto	l4241
 10728     0DFE                     u3620:
 10729     0DFE                     l4237:
 10730                           
 10731                           ;mybutton.c: 74: return 1;
 10732     0DFE  3001               	movlw	1
 10733     0DFF  2E01               	goto	l377
 10734     0E00                     l4241:
 10735                           
 10736                           ;mybutton.c: 75: };mybutton.c: 76: return 0;
 10737     0E00  3000               	movlw	0
 10738     0E01                     l377:
 10739     0E01  0008               	return
 10740     0E02                     __end_of___is_double_click:
 10741                           
 10742                           	psect	text6
 10743     1479                     __ptext6:	
 10744 ;; *************** function _tmr0_init *****************
 10745 ;; Defined at:
 10746 ;;		line 5 in file "tmr0.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      void 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;Total ram usage:        0 bytes
 10765 ;; Hardware stack levels used: 1
 10766 ;; Hardware stack levels required when called: 2
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_main
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774     1479                     _tmr0_init:	
 10775                           ;psect for function _tmr0_init
 10776                           
 10777     1479                     l3529:	
 10778                           ;incstack = 0
 10779                           ; Regs used in _tmr0_init: [wreg+status,2]
 10780                           
 10781                           
 10782                           ;tmr0.c: 8: T0CON1 = 0x40;
 10783     1479  3040               	movlw	64
 10784     147A  014B               	movlb	11	; select bank11
 10785     147B  009F               	movwf	31	;volatile
 10786                           
 10787                           ;tmr0.c: 11: TMR0H = 0xF3;
 10788     147C  30F3               	movlw	243
 10789     147D  009D               	movwf	29	;volatile
 10790     147E                     l3531:
 10791                           
 10792                           ;tmr0.c: 14: TMR0L = 0x00;
 10793     147E  019C               	clrf	28	;volatile
 10794     147F                     l3533:
 10795                           
 10796                           ;tmr0.c: 17: PIR0bits.TMR0IF = 0;
 10797     147F  014E               	movlb	14	; select bank14
 10798     1480  128C               	bcf	12,5	;volatile
 10799     1481                     l3535:
 10800                           
 10801                           ;tmr0.c: 20: PIE0bits.TMR0IE = 1;
 10802     1481  1696               	bsf	22,5	;volatile
 10803     1482                     l3537:
 10804                           
 10805                           ;tmr0.c: 23: T0CON0 = 0x80;
 10806     1482  3080               	movlw	128
 10807     1483  014B               	movlb	11	; select bank11
 10808     1484  009E               	movwf	30	;volatile
 10809     1485                     l292:
 10810     1485  0008               	return
 10811     1486                     __end_of_tmr0_init:
 10812                           
 10813                           	psect	text7
 10814     1782                     __ptext7:	
 10815 ;; *************** function _set_device_serial_number_to_i2c_slave_memorymap *****************
 10816 ;; Defined at:
 10817 ;;		line 9 in file "set_device_i2c_sn.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;		None
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;  buffer          3   30[BANK0 ] unsigned char [3]
 10822 ;;  value           1   29[BANK0 ] unsigned char 
 10823 ;;  i               1   33[BANK0 ] unsigned char 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  1    wreg      void 
 10826 ;; Registers used:
 10827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10834 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;Total ram usage:        7 bytes
 10838 ;; Hardware stack levels used: 1
 10839 ;; Hardware stack levels required when called: 5
 10840 ;; This function calls:
 10841 ;;		_i2c_slave_set_register_with_lock
 10842 ;;		_strtol
 10843 ;; This function is called by:
 10844 ;;		_main
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848     1782                     _set_device_serial_number_to_i2c_slave_memorymap:	
 10849                           ;psect for function _set_device_serial_number_to_i2c_slave_memorymap
 10850                           
 10851     1782                     l3861:	
 10852                           ;incstack = 0
 10853                           ; Regs used in _set_device_serial_number_to_i2c_slave_memorymap: [wreg-fsr1h+status,2+st
      +                          atus,0+pclath+cstack]
 10854                           
 10855                           
 10856                           ;set_device_i2c_sn.c: 10: for (uint8_t i = 0; i < 5; i++) {
 10857     1782  0140               	movlb	0	; select bank0
 10858     1783  01C1               	clrf	set_device_serial_number_to_i2c_slave_memorymap@i
 10859     1784                     l3867:
 10860                           
 10861                           ;set_device_i2c_sn.c: 11: char buffer[3];;set_device_i2c_sn.c: 12: buffer[0] = "0A018200
      +                          01"[i * 2];
 10862     1784  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 10863     1785  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 10864     1786  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
 10865     1787  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
 10866     1788  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
 10867     1789  3072               	movlw	low STR_3
 10868     178A  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 10869     178B  0084               	movwf	4
 10870     178C  3019               	movlw	high STR_3
 10871     178D  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
 10872     178E  3880               	iorlw	128
 10873     178F  0085               	movwf	5
 10874     1790  0800               	movf	0,w	;code access
 10875     1791  00BE               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer
 10876                           
 10877                           ;set_device_i2c_sn.c: 13: buffer[1] = "0A01820001"[i * 2 + 1];
 10878     1792  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 10879     1793  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 10880     1794  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
 10881     1795  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
 10882     1796  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
 10883     1797  3073               	movlw	low (STR_3+1)
 10884     1798  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 10885     1799  0084               	movwf	4
 10886     179A  3019               	movlw	high (STR_3+1)
 10887     179B  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
 10888     179C  3880               	iorlw	128
 10889     179D  0085               	movwf	5
 10890     179E  0800               	movf	0,w	;code access
 10891     179F  00BF               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer+1
 10892     17A0                     l3869:
 10893                           
 10894                           ;set_device_i2c_sn.c: 14: buffer[2] = '\0';
 10895     17A0  01C0               	clrf	set_device_serial_number_to_i2c_slave_memorymap@buffer+2
 10896     17A1                     l3871:
 10897                           
 10898                           ;set_device_i2c_sn.c: 16: uint8_t value = (uint8_t)strtol(buffer, (0), 16);
 10899     17A1  01AC               	clrf	strtol@endptr
 10900     17A2  3010               	movlw	16
 10901     17A3  00AD               	movwf	strtol@base
 10902     17A4  3000               	movlw	0
 10903     17A5  00AE               	movwf	strtol@base+1
 10904     17A6  303E               	movlw	(low (set_device_serial_number_to_i2c_slave_memorymap@buffer| 0))& (0+255)
 10905     17A7  318E  26F6  3197   	fcall	_strtol
 10906     17AA  0140               	movlb	0	; select bank0
 10907     17AB  082C               	movf	?_strtol,w
 10908     17AC  00BD               	movwf	set_device_serial_number_to_i2c_slave_memorymap@value
 10909     17AD                     l3873:
 10910                           
 10911                           ;set_device_i2c_sn.c: 17: i2c_slave_set_register_with_lock(57u + i, value);
 10912     17AD  083D               	movf	set_device_serial_number_to_i2c_slave_memorymap@value,w
 10913     17AE  00A2               	movwf	i2c_slave_set_register_with_lock@value
 10914     17AF  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 10915     17B0  3E39               	addlw	57
 10916     17B1  3194  2456  3197   	fcall	_i2c_slave_set_register_with_lock
 10917     17B4                     l3875:
 10918     17B4  3001               	movlw	1
 10919     17B5  0140               	movlb	0	; select bank0
 10920     17B6  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 10921     17B7  083B               	movf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 10922     17B8  07C1               	addwf	set_device_serial_number_to_i2c_slave_memorymap@i,f
 10923     17B9                     l3877:
 10924     17B9  3005               	movlw	5
 10925     17BA  0241               	subwf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 10926     17BB  1C03               	skipc
 10927     17BC  2FBE               	goto	u3181
 10928     17BD  2FBF               	goto	u3180
 10929     17BE                     u3181:
 10930     17BE  2F84               	goto	l3867
 10931     17BF                     u3180:
 10932     17BF                     l529:
 10933     17BF  0008               	return
 10934     17C0                     __end_of_set_device_serial_number_to_i2c_slave_memorymap:
 10935                           
 10936                           	psect	text8
 10937     0EF6                     __ptext8:	
 10938 ;; *************** function _strtol *****************
 10939 ;; Defined at:
 10940 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/strtol.c"
 10941 ;; Parameters:    Size  Location     Type
 10942 ;;  s               1    wreg     PTR const unsigned char 
 10943 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
 10944 ;;  endptr          1   12[BANK0 ] PTR PTR unsigned char 
 10945 ;;		 -> NULL(0), 
 10946 ;;  base            2   13[BANK0 ] int 
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  s               1   25[BANK0 ] PTR const unsigned char 
 10949 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
 10950 ;;  a               4   21[BANK0 ] long 
 10951 ;;  c               1   26[BANK0 ] unsigned char 
 10952 ;;  sign            1   20[BANK0 ] unsigned char 
 10953 ;; Return value:  Size  Location     Type
 10954 ;;                  4   12[BANK0 ] long 
 10955 ;; Registers used:
 10956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10957 ;; Tracked objects:
 10958 ;;		On entry : 0/0
 10959 ;;		On exit  : 0/0
 10960 ;;		Unchanged: 0/0
 10961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10962 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;Total ram usage:       15 bytes
 10967 ;; Hardware stack levels used: 1
 10968 ;; Hardware stack levels required when called: 4
 10969 ;; This function calls:
 10970 ;;		___lmul
 10971 ;;		_isalpha
 10972 ;;		_isdigit
 10973 ;;		_isspace
 10974 ;;		_toupper
 10975 ;; This function is called by:
 10976 ;;		_set_device_serial_number_to_i2c_slave_memorymap
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980     0EF6                     _strtol:	
 10981                           ;psect for function _strtol
 10982                           
 10983                           
 10984                           ;incstack = 0
 10985                           ; Regs used in _strtol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10986                           ;strtol@s stored from wreg
 10987     0EF6  0140               	movlb	0	; select bank0
 10988     0EF7  00B9               	movwf	strtol@s
 10989     0EF8                     l1401:
 10990     0EF8                     l3419:
 10991     0EF8  0140               	movlb	0	; select bank0
 10992     0EF9  0839               	movf	strtol@s,w
 10993     0EFA  0086               	movwf	6
 10994     0EFB  0187               	clrf	7
 10995     0EFC  0801               	movf	1,w
 10996     0EFD  00BA               	movwf	strtol@c
 10997     0EFE                     l3421:
 10998     0EFE  3001               	movlw	1
 10999     0EFF  00B0               	movwf	??_strtol
 11000     0F00  0830               	movf	??_strtol,w
 11001     0F01  07B9               	addwf	strtol@s,f
 11002     0F02                     l3423:
 11003     0F02  083A               	movf	strtol@c,w
 11004     0F03  3195  2533  318E   	fcall	_isspace
 11005     0F06  1803               	btfsc	3,0
 11006     0F07  2F09               	goto	u2761
 11007     0F08  2F0B               	goto	u2760
 11008     0F09                     u2761:
 11009     0F09  0140               	movlb	0	; select bank0
 11010     0F0A  2EF8               	goto	l1401
 11011     0F0B                     u2760:
 11012     0F0B                     l3425:
 11013     0F0B  3000               	movlw	0
 11014     0F0C  0140               	movlb	0	; select bank0
 11015     0F0D  00B8               	movwf	strtol@a+3
 11016     0F0E  3000               	movlw	0
 11017     0F0F  00B7               	movwf	strtol@a+2
 11018     0F10  3000               	movlw	0
 11019     0F11  00B6               	movwf	strtol@a+1
 11020     0F12  3000               	movlw	0
 11021     0F13  00B5               	movwf	strtol@a
 11022     0F14                     l3427:
 11023     0F14  01B4               	clrf	strtol@sign
 11024     0F15                     l3429:
 11025     0F15  302D               	movlw	45
 11026     0F16  063A               	xorwf	strtol@c,w
 11027     0F17  1D03               	btfss	3,2
 11028     0F18  2F1A               	goto	u2771
 11029     0F19  2F1B               	goto	u2770
 11030     0F1A                     u2771:
 11031     0F1A  2F27               	goto	l3437
 11032     0F1B                     u2770:
 11033     0F1B                     l3431:
 11034     0F1B  01B4               	clrf	strtol@sign
 11035     0F1C  0AB4               	incf	strtol@sign,f
 11036     0F1D                     l3433:
 11037     0F1D  0839               	movf	strtol@s,w
 11038     0F1E  0086               	movwf	6
 11039     0F1F  0187               	clrf	7
 11040     0F20  0801               	movf	1,w
 11041     0F21  00BA               	movwf	strtol@c
 11042     0F22                     l3435:
 11043     0F22  3001               	movlw	1
 11044     0F23  00B0               	movwf	??_strtol
 11045     0F24  0830               	movf	??_strtol,w
 11046     0F25  07B9               	addwf	strtol@s,f
 11047     0F26  2F2E               	goto	l3443
 11048     0F27                     l3437:
 11049     0F27  302B               	movlw	43
 11050     0F28  063A               	xorwf	strtol@c,w
 11051     0F29  1D03               	btfss	3,2
 11052     0F2A  2F2C               	goto	u2781
 11053     0F2B  2F2D               	goto	u2780
 11054     0F2C                     u2781:
 11055     0F2C  2F2E               	goto	l3443
 11056     0F2D                     u2780:
 11057     0F2D  2F1D               	goto	l3433
 11058     0F2E                     l3443:
 11059     0F2E  3030               	movlw	48
 11060     0F2F  063A               	xorwf	strtol@c,w
 11061     0F30  1D03               	btfss	3,2
 11062     0F31  2F33               	goto	u2791
 11063     0F32  2F34               	goto	u2790
 11064     0F33                     u2791:
 11065     0F33  2F6E               	goto	l3467
 11066     0F34                     u2790:
 11067     0F34                     l3445:
 11068     0F34  0839               	movf	strtol@s,w
 11069     0F35  0086               	movwf	6
 11070     0F36  0187               	clrf	7
 11071     0F37  0801               	movf	1,w
 11072     0F38  00BA               	movwf	strtol@c
 11073     0F39                     l3447:
 11074     0F39  3001               	movlw	1
 11075     0F3A  00B0               	movwf	??_strtol
 11076     0F3B  0830               	movf	??_strtol,w
 11077     0F3C  07B9               	addwf	strtol@s,f
 11078     0F3D                     l3449:
 11079     0F3D  082D               	movf	strtol@base,w
 11080     0F3E  042E               	iorwf	strtol@base+1,w
 11081     0F3F  1903               	btfsc	3,2
 11082     0F40  2F42               	goto	u2801
 11083     0F41  2F43               	goto	u2800
 11084     0F42                     u2801:
 11085     0F42  2F4A               	goto	l3453
 11086     0F43                     u2800:
 11087     0F43                     l3451:
 11088     0F43  3010               	movlw	16
 11089     0F44  062D               	xorwf	strtol@base,w
 11090     0F45  042E               	iorwf	strtol@base+1,w
 11091     0F46  1D03               	btfss	3,2
 11092     0F47  2F49               	goto	u2811
 11093     0F48  2F4A               	goto	u2810
 11094     0F49                     u2811:
 11095     0F49  2F64               	goto	l3463
 11096     0F4A                     u2810:
 11097     0F4A                     l3453:
 11098     0F4A  3078               	movlw	120
 11099     0F4B  063A               	xorwf	strtol@c,w
 11100     0F4C  1903               	btfsc	3,2
 11101     0F4D  2F4F               	goto	u2821
 11102     0F4E  2F50               	goto	u2820
 11103     0F4F                     u2821:
 11104     0F4F  2F56               	goto	l3457
 11105     0F50                     u2820:
 11106     0F50                     l3455:
 11107     0F50  3058               	movlw	88
 11108     0F51  063A               	xorwf	strtol@c,w
 11109     0F52  1D03               	btfss	3,2
 11110     0F53  2F55               	goto	u2831
 11111     0F54  2F56               	goto	u2830
 11112     0F55                     u2831:
 11113     0F55  2F64               	goto	l3463
 11114     0F56                     u2830:
 11115     0F56                     l3457:
 11116     0F56  3010               	movlw	16
 11117     0F57  00AD               	movwf	strtol@base
 11118     0F58  3000               	movlw	0
 11119     0F59  00AE               	movwf	strtol@base+1
 11120     0F5A                     l3459:
 11121     0F5A  0839               	movf	strtol@s,w
 11122     0F5B  0086               	movwf	6
 11123     0F5C  0187               	clrf	7
 11124     0F5D  0801               	movf	1,w
 11125     0F5E  00BA               	movwf	strtol@c
 11126     0F5F                     l3461:
 11127     0F5F  3001               	movlw	1
 11128     0F60  00B0               	movwf	??_strtol
 11129     0F61  0830               	movf	??_strtol,w
 11130     0F62  07B9               	addwf	strtol@s,f
 11131     0F63  2F6E               	goto	l3467
 11132     0F64                     l3463:
 11133     0F64  082D               	movf	strtol@base,w
 11134     0F65  042E               	iorwf	strtol@base+1,w
 11135     0F66  1D03               	btfss	3,2
 11136     0F67  2F69               	goto	u2841
 11137     0F68  2F6A               	goto	u2840
 11138     0F69                     u2841:
 11139     0F69  2F6E               	goto	l3467
 11140     0F6A                     u2840:
 11141     0F6A                     l3465:
 11142     0F6A  3008               	movlw	8
 11143     0F6B  00AD               	movwf	strtol@base
 11144     0F6C  3000               	movlw	0
 11145     0F6D  00AE               	movwf	strtol@base+1
 11146     0F6E                     l3467:
 11147     0F6E  082D               	movf	strtol@base,w
 11148     0F6F  042E               	iorwf	strtol@base+1,w
 11149     0F70  1D03               	btfss	3,2
 11150     0F71  2F73               	goto	u2851
 11151     0F72  2F74               	goto	u2850
 11152     0F73                     u2851:
 11153     0F73  2F78               	goto	l3471
 11154     0F74                     u2850:
 11155     0F74                     l3469:
 11156     0F74  300A               	movlw	10
 11157     0F75  00AD               	movwf	strtol@base
 11158     0F76  3000               	movlw	0
 11159     0F77  00AE               	movwf	strtol@base+1
 11160     0F78                     l3471:
 11161     0F78  083A               	movf	strtol@c,w
 11162     0F79  3195  254C  318E   	fcall	_isalpha
 11163     0F7C  1C03               	btfss	3,0
 11164     0F7D  2F7F               	goto	u2861
 11165     0F7E  2F80               	goto	u2860
 11166     0F7F                     u2861:
 11167     0F7F  2F89               	goto	l3475
 11168     0F80                     u2860:
 11169     0F80                     l3473:
 11170     0F80  0140               	movlb	0	; select bank0
 11171     0F81  083A               	movf	strtol@c,w
 11172     0F82  3194  24F1  318E   	fcall	_toupper
 11173     0F85  3EC9               	addlw	201
 11174     0F86  0140               	movlb	0	; select bank0
 11175     0F87  00BA               	movwf	strtol@c
 11176     0F88  2F95               	goto	l3479
 11177     0F89                     l3475:
 11178     0F89  0140               	movlb	0	; select bank0
 11179     0F8A  083A               	movf	strtol@c,w
 11180     0F8B  3194  24B7  318E   	fcall	_isdigit
 11181     0F8E  1C03               	btfss	3,0
 11182     0F8F  2F91               	goto	u2871
 11183     0F90  2F92               	goto	u2870
 11184     0F91                     u2871:
 11185     0F91  2FD6               	goto	l3489
 11186     0F92                     u2870:
 11187     0F92                     l3477:
 11188     0F92  3030               	movlw	48
 11189     0F93  0140               	movlb	0	; select bank0
 11190     0F94  02BA               	subwf	strtol@c,f
 11191     0F95                     l3479:
 11192     0F95  082E               	movf	strtol@base+1,w
 11193     0F96  3A80               	xorlw	128
 11194     0F97  3C80               	sublw	128
 11195     0F98  1D03               	skipz
 11196     0F99  2F9C               	goto	u2885
 11197     0F9A  082D               	movf	strtol@base,w
 11198     0F9B  023A               	subwf	strtol@c,w
 11199     0F9C                     u2885:
 11200     0F9C  1C03               	skipc
 11201     0F9D  2F9F               	goto	u2881
 11202     0F9E  2FA0               	goto	u2880
 11203     0F9F                     u2881:
 11204     0F9F  2FA1               	goto	l3483
 11205     0FA0                     u2880:
 11206     0FA0  2FD6               	goto	l3489
 11207     0FA1                     l3483:
 11208     0FA1  0140               	movlb	0	; select bank0
 11209     0FA2  083A               	movf	strtol@c,w
 11210     0FA3  00B0               	movwf	??_strtol
 11211     0FA4  01B1               	clrf	??_strtol+1
 11212     0FA5  01B2               	clrf	??_strtol+2
 11213     0FA6  01B3               	clrf	??_strtol+3
 11214     0FA7  082D               	movf	strtol@base,w
 11215     0FA8  00A0               	movwf	___lmul@multiplier
 11216     0FA9  082E               	movf	strtol@base+1,w
 11217     0FAA  00A1               	movwf	___lmul@multiplier+1
 11218     0FAB  0D89               	rlf	9,f
 11219     0FAC  3B89               	subwfb	9,f
 11220     0FAD  0989               	comf	9,f
 11221     0FAE  00A2               	movwf	___lmul@multiplier+2
 11222     0FAF  00A3               	movwf	___lmul@multiplier+3
 11223     0FB0  0838               	movf	strtol@a+3,w
 11224     0FB1  00A7               	movwf	___lmul@multiplicand+3
 11225     0FB2  0837               	movf	strtol@a+2,w
 11226     0FB3  00A6               	movwf	___lmul@multiplicand+2
 11227     0FB4  0836               	movf	strtol@a+1,w
 11228     0FB5  00A5               	movwf	___lmul@multiplicand+1
 11229     0FB6  0835               	movf	strtol@a,w
 11230     0FB7  00A4               	movwf	___lmul@multiplicand
 11231     0FB8  3196  26A3  318E   	fcall	___lmul
 11232     0FBB  0140               	movlb	0	; select bank0
 11233     0FBC  0820               	movf	?___lmul,w
 11234     0FBD  07B0               	addwf	??_strtol,f
 11235     0FBE  0821               	movf	?___lmul+1,w
 11236     0FBF  3DB1               	addwfc	??_strtol+1,f
 11237     0FC0  0822               	movf	?___lmul+2,w
 11238     0FC1  3DB2               	addwfc	??_strtol+2,f
 11239     0FC2  0823               	movf	?___lmul+3,w
 11240     0FC3  3DB3               	addwfc	??_strtol+3,f
 11241     0FC4  0833               	movf	??_strtol+3,w
 11242     0FC5  00B8               	movwf	strtol@a+3
 11243     0FC6  0832               	movf	??_strtol+2,w
 11244     0FC7  00B7               	movwf	strtol@a+2
 11245     0FC8  0831               	movf	??_strtol+1,w
 11246     0FC9  00B6               	movwf	strtol@a+1
 11247     0FCA  0830               	movf	??_strtol,w
 11248     0FCB  00B5               	movwf	strtol@a
 11249     0FCC                     l3485:
 11250     0FCC  0839               	movf	strtol@s,w
 11251     0FCD  0086               	movwf	6
 11252     0FCE  0187               	clrf	7
 11253     0FCF  0801               	movf	1,w
 11254     0FD0  00BA               	movwf	strtol@c
 11255     0FD1                     l3487:
 11256     0FD1  3001               	movlw	1
 11257     0FD2  00B0               	movwf	??_strtol
 11258     0FD3  0830               	movf	??_strtol,w
 11259     0FD4  07B9               	addwf	strtol@s,f
 11260     0FD5  2F78               	goto	l3471
 11261     0FD6                     l3489:
 11262     0FD6  0140               	movlb	0	; select bank0
 11263     0FD7  082C               	movf	strtol@endptr,w
 11264     0FD8  1903               	btfsc	3,2
 11265     0FD9  2FDB               	goto	u2891
 11266     0FDA  2FDC               	goto	u2890
 11267     0FDB                     u2891:
 11268     0FDB  2FE2               	goto	l3493
 11269     0FDC                     u2890:
 11270     0FDC                     l3491:
 11271     0FDC  082C               	movf	strtol@endptr,w
 11272     0FDD  0086               	movwf	6
 11273     0FDE  0187               	clrf	7
 11274     0FDF  0839               	movf	strtol@s,w
 11275     0FE0  3EFF               	addlw	-1
 11276     0FE1  0081               	movwf	1
 11277     0FE2                     l3493:
 11278     0FE2  0834               	movf	strtol@sign,w
 11279     0FE3  1903               	btfsc	3,2
 11280     0FE4  2FE6               	goto	u2901
 11281     0FE5  2FE7               	goto	u2900
 11282     0FE6                     u2901:
 11283     0FE6  2FF7               	goto	l3499
 11284     0FE7                     u2900:
 11285     0FE7                     l3495:
 11286     0FE7  0935               	comf	strtol@a,w
 11287     0FE8  00AC               	movwf	?_strtol
 11288     0FE9  0936               	comf	strtol@a+1,w
 11289     0FEA  00AD               	movwf	?_strtol+1
 11290     0FEB  0937               	comf	strtol@a+2,w
 11291     0FEC  00AE               	movwf	?_strtol+2
 11292     0FED  0938               	comf	strtol@a+3,w
 11293     0FEE  00AF               	movwf	?_strtol+3
 11294     0FEF  0AAC               	incf	?_strtol,f
 11295     0FF0  1903               	skipnz
 11296     0FF1  0AAD               	incf	?_strtol+1,f
 11297     0FF2  1903               	skipnz
 11298     0FF3  0AAE               	incf	?_strtol+2,f
 11299     0FF4  1903               	skipnz
 11300     0FF5  0AAF               	incf	?_strtol+3,f
 11301     0FF6  2FFF               	goto	l1424
 11302     0FF7                     l3499:
 11303     0FF7  0838               	movf	strtol@a+3,w
 11304     0FF8  00AF               	movwf	?_strtol+3
 11305     0FF9  0837               	movf	strtol@a+2,w
 11306     0FFA  00AE               	movwf	?_strtol+2
 11307     0FFB  0836               	movf	strtol@a+1,w
 11308     0FFC  00AD               	movwf	?_strtol+1
 11309     0FFD  0835               	movf	strtol@a,w
 11310     0FFE  00AC               	movwf	?_strtol
 11311     0FFF                     l1424:
 11312     0FFF  0008               	return
 11313     1000                     __end_of_strtol:
 11314                           
 11315                           	psect	text9
 11316     14F1                     __ptext9:	
 11317 ;; *************** function _toupper *****************
 11318 ;; Defined at:
 11319 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/toupper.c"
 11320 ;; Parameters:    Size  Location     Type
 11321 ;;  c               1    wreg     unsigned char 
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;  c               1    1[BANK0 ] unsigned char 
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  1    wreg      unsigned char 
 11326 ;; Registers used:
 11327 ;;		wreg, status,2, status,0
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11335 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11337 ;;Total ram usage:        2 bytes
 11338 ;; Hardware stack levels used: 1
 11339 ;; Hardware stack levels required when called: 2
 11340 ;; This function calls:
 11341 ;;		Nothing
 11342 ;; This function is called by:
 11343 ;;		_strtol
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           
 11347     14F1                     _toupper:	
 11348                           ;psect for function _toupper
 11349                           
 11350                           
 11351                           ;incstack = 0
 11352                           ; Regs used in _toupper: [wreg+status,2+status,0]
 11353                           ;toupper@c stored from wreg
 11354     14F1  0140               	movlb	0	; select bank0
 11355     14F2  00A1               	movwf	toupper@c
 11356     14F3                     l3191:
 11357     14F3  307B               	movlw	123
 11358     14F4  0221               	subwf	toupper@c,w
 11359     14F5  1803               	skipnc
 11360     14F6  2CF8               	goto	u2341
 11361     14F7  2CF9               	goto	u2340
 11362     14F8                     u2341:
 11363     14F8  2D03               	goto	l3197
 11364     14F9                     u2340:
 11365     14F9                     l3193:
 11366     14F9  3061               	movlw	97
 11367     14FA  0221               	subwf	toupper@c,w
 11368     14FB  1C03               	skipc
 11369     14FC  2CFE               	goto	u2351
 11370     14FD  2CFF               	goto	u2350
 11371     14FE                     u2351:
 11372     14FE  2D03               	goto	l3197
 11373     14FF                     u2350:
 11374     14FF                     l3195:
 11375     14FF  30DF               	movlw	223
 11376     1500  00A0               	movwf	??_toupper
 11377     1501  0820               	movf	??_toupper,w
 11378     1502  05A1               	andwf	toupper@c,f
 11379     1503                     l3197:
 11380     1503  0821               	movf	toupper@c,w
 11381     1504                     l1445:
 11382     1504  0008               	return
 11383     1505                     __end_of_toupper:
 11384                           
 11385                           	psect	text10
 11386     1533                     __ptext10:	
 11387 ;; *************** function _isspace *****************
 11388 ;; Defined at:
 11389 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isspace.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;  c               1    wreg     unsigned char 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;  c               1    1[BANK0 ] unsigned char 
 11394 ;; Return value:  Size  Location     Type
 11395 ;;		None               void
 11396 ;; Registers used:
 11397 ;;		wreg, status,2, status,0
 11398 ;; Tracked objects:
 11399 ;;		On entry : 0/0
 11400 ;;		On exit  : 0/0
 11401 ;;		Unchanged: 0/0
 11402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11404 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11407 ;;Total ram usage:        2 bytes
 11408 ;; Hardware stack levels used: 1
 11409 ;; Hardware stack levels required when called: 2
 11410 ;; This function calls:
 11411 ;;		Nothing
 11412 ;; This function is called by:
 11413 ;;		_strtol
 11414 ;; This function uses a non-reentrant model
 11415 ;;
 11416                           
 11417     1533                     _isspace:	
 11418                           ;psect for function _isspace
 11419                           
 11420                           
 11421                           ;incstack = 0
 11422                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11423                           ;isspace@c stored from wreg
 11424     1533  0140               	movlb	0	; select bank0
 11425     1534  00A1               	movwf	isspace@c
 11426     1535                     l3163:
 11427     1535  01A0               	clrf	_isspace$1982
 11428     1536  0AA0               	incf	_isspace$1982,f
 11429     1537                     l3165:
 11430     1537  3020               	movlw	32
 11431     1538  0621               	xorwf	isspace@c,w
 11432     1539  1903               	btfsc	3,2
 11433     153A  2D3C               	goto	u2281
 11434     153B  2D3D               	goto	u2280
 11435     153C                     u2281:
 11436     153C  2D4A               	goto	l3173
 11437     153D                     u2280:
 11438     153D                     l3167:
 11439     153D  300E               	movlw	14
 11440     153E  0221               	subwf	isspace@c,w
 11441     153F  1803               	skipnc
 11442     1540  2D42               	goto	u2291
 11443     1541  2D43               	goto	u2290
 11444     1542                     u2291:
 11445     1542  2D49               	goto	l3171
 11446     1543                     u2290:
 11447     1543                     l3169:
 11448     1543  3009               	movlw	9
 11449     1544  0221               	subwf	isspace@c,w
 11450     1545  1803               	skipnc
 11451     1546  2D48               	goto	u2301
 11452     1547  2D49               	goto	u2300
 11453     1548                     u2301:
 11454     1548  2D4A               	goto	l3173
 11455     1549                     u2300:
 11456     1549                     l3171:
 11457     1549  01A0               	clrf	_isspace$1982
 11458     154A                     l3173:
 11459     154A  0C20               	rrf	_isspace$1982,w
 11460     154B                     l1436:
 11461     154B  0008               	return
 11462     154C                     __end_of_isspace:
 11463                           
 11464                           	psect	text11
 11465     154C                     __ptext11:	
 11466 ;; *************** function _isalpha *****************
 11467 ;; Defined at:
 11468 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isalpha.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;  c               1    wreg     unsigned char 
 11471 ;; Auto vars:     Size  Location     Type
 11472 ;;  c               1    3[BANK0 ] unsigned char 
 11473 ;; Return value:  Size  Location     Type
 11474 ;;		None               void
 11475 ;; Registers used:
 11476 ;;		wreg, status,2, status,0, pclath, cstack
 11477 ;; Tracked objects:
 11478 ;;		On entry : 0/0
 11479 ;;		On exit  : 0/0
 11480 ;;		Unchanged: 0/0
 11481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11483 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;Total ram usage:        2 bytes
 11487 ;; Hardware stack levels used: 1
 11488 ;; Hardware stack levels required when called: 3
 11489 ;; This function calls:
 11490 ;;		_isupper
 11491 ;; This function is called by:
 11492 ;;		_strtol
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496     154C                     _isalpha:	
 11497                           ;psect for function _isalpha
 11498                           
 11499                           
 11500                           ;incstack = 0
 11501                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
 11502                           ;isalpha@c stored from wreg
 11503     154C  0140               	movlb	0	; select bank0
 11504     154D  00A3               	movwf	isalpha@c
 11505     154E                     l3177:
 11506     154E  01A2               	clrf	_isalpha$1979
 11507     154F  0AA2               	incf	_isalpha$1979,f
 11508     1550                     l3179:
 11509     1550  307B               	movlw	123
 11510     1551  0223               	subwf	isalpha@c,w
 11511     1552  1803               	skipnc
 11512     1553  2D55               	goto	u2311
 11513     1554  2D56               	goto	u2310
 11514     1555                     u2311:
 11515     1555  2D5C               	goto	l3183
 11516     1556                     u2310:
 11517     1556                     l3181:
 11518     1556  3061               	movlw	97
 11519     1557  0223               	subwf	isalpha@c,w
 11520     1558  1803               	skipnc
 11521     1559  2D5B               	goto	u2321
 11522     155A  2D5C               	goto	u2320
 11523     155B                     u2321:
 11524     155B  2D66               	goto	l3187
 11525     155C                     u2320:
 11526     155C                     l3183:
 11527     155C  0823               	movf	isalpha@c,w
 11528     155D  3194  24CA  3195   	fcall	_isupper
 11529     1560  1803               	btfsc	3,0
 11530     1561  2D63               	goto	u2331
 11531     1562  2D64               	goto	u2330
 11532     1563                     u2331:
 11533     1563  2D66               	goto	l3187
 11534     1564                     u2330:
 11535     1564                     l3185:
 11536     1564  0140               	movlb	0	; select bank0
 11537     1565  01A2               	clrf	_isalpha$1979
 11538     1566                     l3187:
 11539     1566  0140               	movlb	0	; select bank0
 11540     1567  0C22               	rrf	_isalpha$1979,w
 11541     1568                     l1431:
 11542     1568  0008               	return
 11543     1569                     __end_of_isalpha:
 11544                           
 11545                           	psect	text12
 11546     14CA                     __ptext12:	
 11547 ;; *************** function _isupper *****************
 11548 ;; Defined at:
 11549 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isupper.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;  c               1    wreg     unsigned char 
 11552 ;; Auto vars:     Size  Location     Type
 11553 ;;  c               1    1[BANK0 ] unsigned char 
 11554 ;; Return value:  Size  Location     Type
 11555 ;;		None               void
 11556 ;; Registers used:
 11557 ;;		wreg, status,2, status,0
 11558 ;; Tracked objects:
 11559 ;;		On entry : 0/0
 11560 ;;		On exit  : 0/0
 11561 ;;		Unchanged: 0/0
 11562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11564 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11566 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11567 ;;Total ram usage:        2 bytes
 11568 ;; Hardware stack levels used: 1
 11569 ;; Hardware stack levels required when called: 2
 11570 ;; This function calls:
 11571 ;;		Nothing
 11572 ;; This function is called by:
 11573 ;;		_isalpha
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577     14CA                     _isupper:	
 11578                           ;psect for function _isupper
 11579                           
 11580                           
 11581                           ;incstack = 0
 11582                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11583                           ;isupper@c stored from wreg
 11584     14CA  0140               	movlb	0	; select bank0
 11585     14CB  00A1               	movwf	isupper@c
 11586     14CC                     l2945:
 11587     14CC  01A0               	clrf	_isupper$1985
 11588     14CD                     l2947:
 11589     14CD  305B               	movlw	91
 11590     14CE  0221               	subwf	isupper@c,w
 11591     14CF  1803               	skipnc
 11592     14D0  2CD2               	goto	u1911
 11593     14D1  2CD3               	goto	u1910
 11594     14D2                     u1911:
 11595     14D2  2CDB               	goto	l2953
 11596     14D3                     u1910:
 11597     14D3                     l2949:
 11598     14D3  3041               	movlw	65
 11599     14D4  0221               	subwf	isupper@c,w
 11600     14D5  1C03               	skipc
 11601     14D6  2CD8               	goto	u1921
 11602     14D7  2CD9               	goto	u1920
 11603     14D8                     u1921:
 11604     14D8  2CDB               	goto	l2953
 11605     14D9                     u1920:
 11606     14D9                     l2951:
 11607     14D9  01A0               	clrf	_isupper$1985
 11608     14DA  0AA0               	incf	_isupper$1985,f
 11609     14DB                     l2953:
 11610     14DB  0C20               	rrf	_isupper$1985,w
 11611     14DC                     l1441:
 11612     14DC  0008               	return
 11613     14DD                     __end_of_isupper:
 11614                           
 11615                           	psect	text13
 11616     16A3                     __ptext13:	
 11617 ;; *************** function ___lmul *****************
 11618 ;; Defined at:
 11619 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul32.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11622 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;  product         4    8[BANK0 ] unsigned long 
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  4    0[BANK0 ] unsigned long 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11634 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;Total ram usage:       12 bytes
 11639 ;; Hardware stack levels used: 1
 11640 ;; Hardware stack levels required when called: 2
 11641 ;; This function calls:
 11642 ;;		Nothing
 11643 ;; This function is called by:
 11644 ;;		_strtol
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648     16A3                     ___lmul:	
 11649                           ;psect for function ___lmul
 11650                           
 11651     16A3                     l3149:	
 11652                           ;incstack = 0
 11653                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11654                           
 11655     16A3  3000               	movlw	0
 11656     16A4  0140               	movlb	0	; select bank0
 11657     16A5  00AB               	movwf	___lmul@product+3
 11658     16A6  3000               	movlw	0
 11659     16A7  00AA               	movwf	___lmul@product+2
 11660     16A8  3000               	movlw	0
 11661     16A9  00A9               	movwf	___lmul@product+1
 11662     16AA  3000               	movlw	0
 11663     16AB  00A8               	movwf	___lmul@product
 11664     16AC                     l3151:
 11665     16AC  1C20               	btfss	___lmul@multiplier,0
 11666     16AD  2EAF               	goto	u2241
 11667     16AE  2EB0               	goto	u2240
 11668     16AF                     u2241:
 11669     16AF  2EB8               	goto	l3155
 11670     16B0                     u2240:
 11671     16B0                     l3153:
 11672     16B0  0824               	movf	___lmul@multiplicand,w
 11673     16B1  07A8               	addwf	___lmul@product,f
 11674     16B2  0825               	movf	___lmul@multiplicand+1,w
 11675     16B3  3DA9               	addwfc	___lmul@product+1,f
 11676     16B4  0826               	movf	___lmul@multiplicand+2,w
 11677     16B5  3DAA               	addwfc	___lmul@product+2,f
 11678     16B6  0827               	movf	___lmul@multiplicand+3,w
 11679     16B7  3DAB               	addwfc	___lmul@product+3,f
 11680     16B8                     l3155:
 11681     16B8  3001               	movlw	1
 11682     16B9                     u2255:
 11683     16B9  35A4               	lslf	___lmul@multiplicand,f
 11684     16BA  0DA5               	rlf	___lmul@multiplicand+1,f
 11685     16BB  0DA6               	rlf	___lmul@multiplicand+2,f
 11686     16BC  0DA7               	rlf	___lmul@multiplicand+3,f
 11687     16BD  0B89               	decfsz	9,f
 11688     16BE  2EB9               	goto	u2255
 11689     16BF                     l3157:
 11690     16BF  3001               	movlw	1
 11691     16C0                     u2265:
 11692     16C0  36A3               	lsrf	___lmul@multiplier+3,f
 11693     16C1  0CA2               	rrf	___lmul@multiplier+2,f
 11694     16C2  0CA1               	rrf	___lmul@multiplier+1,f
 11695     16C3  0CA0               	rrf	___lmul@multiplier,f
 11696     16C4  0B89               	decfsz	9,f
 11697     16C5  2EC0               	goto	u2265
 11698     16C6  0823               	movf	___lmul@multiplier+3,w
 11699     16C7  0422               	iorwf	___lmul@multiplier+2,w
 11700     16C8  0421               	iorwf	___lmul@multiplier+1,w
 11701     16C9  0420               	iorwf	___lmul@multiplier,w
 11702     16CA  1D03               	skipz
 11703     16CB  2ECD               	goto	u2271
 11704     16CC  2ECE               	goto	u2270
 11705     16CD                     u2271:
 11706     16CD  2EAC               	goto	l3151
 11707     16CE                     u2270:
 11708     16CE                     l3159:
 11709     16CE  082B               	movf	___lmul@product+3,w
 11710     16CF  00A3               	movwf	?___lmul+3
 11711     16D0  082A               	movf	___lmul@product+2,w
 11712     16D1  00A2               	movwf	?___lmul+2
 11713     16D2  0829               	movf	___lmul@product+1,w
 11714     16D3  00A1               	movwf	?___lmul+1
 11715     16D4  0828               	movf	___lmul@product,w
 11716     16D5  00A0               	movwf	?___lmul
 11717     16D6                     l946:
 11718     16D6  0008               	return
 11719     16D7                     __end_of___lmul:
 11720                           
 11721                           	psect	text14
 11722     1456                     __ptext14:	
 11723 ;; *************** function _i2c_slave_set_register_with_lock *****************
 11724 ;; Defined at:
 11725 ;;		line 41 in file "i2c_slave.c"
 11726 ;; Parameters:    Size  Location     Type
 11727 ;;  registerAddr    1    wreg     unsigned char 
 11728 ;;  value           1    2[BANK0 ] unsigned char 
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;  registerAddr    1    3[BANK0 ] unsigned char 
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  1    wreg      void 
 11733 ;; Registers used:
 11734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11740 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11743 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11744 ;;Total ram usage:        2 bytes
 11745 ;; Hardware stack levels used: 1
 11746 ;; Hardware stack levels required when called: 3
 11747 ;; This function calls:
 11748 ;;		_i2c_slave_set_register
 11749 ;; This function is called by:
 11750 ;;		_set_device_serial_number_to_i2c_slave_memorymap
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754     1456                     _i2c_slave_set_register_with_lock:	
 11755                           ;psect for function _i2c_slave_set_register_with_lock
 11756                           
 11757                           
 11758                           ;incstack = 0
 11759                           ; Regs used in _i2c_slave_set_register_with_lock: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
 11760                           ;i2c_slave_set_register_with_lock@registerAddress stored from wreg
 11761     1456  0140               	movlb	0	; select bank0
 11762     1457  00A3               	movwf	i2c_slave_set_register_with_lock@registerAddress
 11763     1458                     l3261:
 11764                           
 11765                           ;i2c_slave.c: 42: GIE = 0;
 11766     1458  138B               	bcf	11,7	;volatile
 11767     1459                     l3263:
 11768                           
 11769                           ;i2c_slave.c: 43: i2c_slave_set_register(registerAddress, value);
 11770     1459  0822               	movf	i2c_slave_set_register_with_lock@value,w
 11771     145A  00A0               	movwf	i2c_slave_set_register@value
 11772     145B  0823               	movf	i2c_slave_set_register_with_lock@registerAddress,w
 11773     145C  3194  244C  3194   	fcall	_i2c_slave_set_register
 11774     145F                     l3265:
 11775                           
 11776                           ;i2c_slave.c: 44: GIE = 1;
 11777     145F  178B               	bsf	11,7	;volatile
 11778     1460                     l253:
 11779     1460  0008               	return
 11780     1461                     __end_of_i2c_slave_set_register_with_lock:
 11781                           
 11782                           	psect	text15
 11783     144C                     __ptext15:	
 11784 ;; *************** function _i2c_slave_set_register *****************
 11785 ;; Defined at:
 11786 ;;		line 32 in file "i2c_slave.c"
 11787 ;; Parameters:    Size  Location     Type
 11788 ;;  registerAddr    1    wreg     unsigned char 
 11789 ;;  value           1    0[BANK0 ] unsigned char 
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;  registerAddr    1    1[BANK0 ] unsigned char 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11801 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;Total ram usage:        2 bytes
 11806 ;; Hardware stack levels used: 1
 11807 ;; Hardware stack levels required when called: 2
 11808 ;; This function calls:
 11809 ;;		Nothing
 11810 ;; This function is called by:
 11811 ;;		_main
 11812 ;;		_i2c_slave_set_register_with_lock
 11813 ;; This function uses a non-reentrant model
 11814 ;;
 11815                           
 11816     144C                     _i2c_slave_set_register:	
 11817                           ;psect for function _i2c_slave_set_register
 11818                           
 11819                           
 11820                           ;incstack = 0
 11821                           ; Regs used in _i2c_slave_set_register: [wreg+fsr1l+fsr1h+status,2+status,0]
 11822                           ;i2c_slave_set_register@registerAddress stored from wreg
 11823     144C  0140               	movlb	0	; select bank0
 11824     144D  00A1               	movwf	i2c_slave_set_register@registerAddress
 11825     144E                     l3099:
 11826                           
 11827                           ;i2c_slave.c: 33: slaveData[registerAddress] = value;
 11828     144E  0821               	movf	i2c_slave_set_register@registerAddress,w
 11829     144F  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 11830     1450  0086               	movwf	6
 11831     1451  3002               	movlw	2	; select bank4/5
 11832     1452  0087               	movwf	7
 11833     1453  0820               	movf	i2c_slave_set_register@value,w
 11834     1454  0081               	movwf	1
 11835     1455                     l247:
 11836     1455  0008               	return
 11837     1456                     __end_of_i2c_slave_set_register:
 11838                           
 11839                           	psect	text16
 11840     0A30                     __ptext16:	
 11841 ;; *************** function _save_top_adc_point *****************
 11842 ;; Defined at:
 11843 ;;		line 98 in file "calibration.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;  states          1    wreg     PTR enum E186
 11846 ;;		 -> main@state(1), 
 11847 ;;  sensor_value    1   45[BANK0 ] PTR struct values
 11848 ;;		 -> main@sensor_value(37), 
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  states          1   62[BANK0 ] PTR enum E186
 11851 ;;		 -> main@state(1), 
 11852 ;;  save_top_adc    8   54[BANK0 ] unsigned char [8]
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  1    wreg      void 
 11855 ;; Registers used:
 11856 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11862 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11863 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11864 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;Total ram usage:       18 bytes
 11867 ;; Hardware stack levels used: 1
 11868 ;; Hardware stack levels required when called: 4
 11869 ;; This function calls:
 11870 ;;		_EUSART1_Write_1
 11871 ;;		_calculate_crc_and_fill_array
 11872 ;;		_enable_tx_transmit
 11873 ;;		_enable_uart_printf
 11874 ;;		_printf
 11875 ;; This function is called by:
 11876 ;;		_main
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880     0A30                     _save_top_adc_point:	
 11881                           ;psect for function _save_top_adc_point
 11882                           
 11883                           
 11884                           ;incstack = 0
 11885                           ; Regs used in _save_top_adc_point: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11886                           ;save_top_adc_point@states stored from wreg
 11887     0A30  0140               	movlb	0	; select bank0
 11888     0A31  00DE               	movwf	save_top_adc_point@states
 11889     0A32                     l3751:
 11890                           
 11891                           ;calibration.c: 99: enable_uart_printf();
 11892     0A32  3193  23EB  318A   	fcall	_enable_uart_printf
 11893     0A35                     l3753:
 11894                           
 11895                           ;calibration.c: 100: printf("STATE_SAVE_TOP_CALIBRATION_POINT Saved \r\n");
 11896     0A35  306A               	movlw	low (STR_26| (0+32768))
 11897     0A36  0140               	movlb	0	; select bank0
 11898     0A37  00AE               	movwf	printf@f
 11899     0A38  3098               	movlw	high (STR_26| (0+32768))
 11900     0A39  00AF               	movwf	printf@f+1
 11901     0A3A  3183  23A0  318A   	fcall	_printf
 11902     0A3D                     l3755:
 11903                           
 11904                           ;calibration.c: 101: _delay((unsigned long)((10)*(1000000/4000.0)));
 11905     0A3D  3004               	movlw	4
 11906     0A3E  0140               	movlb	0	; select bank0
 11907     0A3F  00CE               	movwf	??_save_top_adc_point
 11908     0A40  303D               	movlw	61
 11909     0A41                     u3927:
 11910     0A41  0B89               	decfsz	9,f
 11911     0A42  2A41               	goto	u3927
 11912     0A43  0BCE               	decfsz	??_save_top_adc_point,f
 11913     0A44  2A41               	goto	u3927
 11914     0A45  3200               	nop2
 11915     0A46                     l3757:
 11916                           
 11917                           ;calibration.c: 102: enable_tx_transmit();
 11918     0A46  3194  2486  318A   	fcall	_enable_tx_transmit
 11919     0A49                     l3759:
 11920                           
 11921                           ;calibration.c: 104: uint8_t save_top_adc_command[8] = {0x01, 0x06, 0x00, 0x3E, 0x00, 0x
      +                          FF, 0xA8, 0x46};
 11922     0A49  3053               	movlw	low save_top_adc_point@F10616
 11923     0A4A  0086               	movwf	6
 11924     0A4B  3001               	movlw	high save_top_adc_point@F10616
 11925     0A4C  0087               	movwf	7
 11926     0A4D  3056               	movlw	low save_top_adc_point@save_top_adc_command
 11927     0A4E  0084               	movwf	4
 11928     0A4F  3000               	movlw	high save_top_adc_point@save_top_adc_command
 11929     0A50  0085               	movwf	5
 11930     0A51  3008               	movlw	8
 11931     0A52  0140               	movlb	0	; select bank0
 11932     0A53  00CE               	movwf	??_save_top_adc_point
 11933     0A54                     u3100:
 11934     0A54  0016               	moviw fsr1++
 11935     0A55  001A               	movwi fsr0++
 11936     0A56  0BCE               	decfsz	??_save_top_adc_point,f
 11937     0A57  2A54               	goto	u3100
 11938     0A58                     l3761:
 11939                           
 11940                           ;calibration.c: 105: save_top_adc_command[4] = sensor_value->ph_ADC_High_byte;
 11941     0A58  084D               	movf	save_top_adc_point@sensor_value,w
 11942     0A59  0086               	movwf	6
 11943     0A5A  0187               	clrf	7
 11944     0A5B  3F43               	moviw [3]fsr1
 11945     0A5C  00DA               	movwf	save_top_adc_point@save_top_adc_command+4
 11946     0A5D                     l3763:
 11947                           
 11948                           ;calibration.c: 106: save_top_adc_command[5] = sensor_value->ph_ADC_Low_byte;
 11949     0A5D  084D               	movf	save_top_adc_point@sensor_value,w
 11950     0A5E  0086               	movwf	6
 11951     0A5F  0187               	clrf	7
 11952     0A60  3F44               	moviw [4]fsr1
 11953     0A61  00DB               	movwf	save_top_adc_point@save_top_adc_command+5
 11954     0A62                     l3765:
 11955                           
 11956                           ;calibration.c: 107: sensor_value->ph_top_point_adc_value = sensor_value->ph_ADC_value;
 11957     0A62  0A4D               	incf	save_top_adc_point@sensor_value,w
 11958     0A63  0086               	movwf	6
 11959     0A64  0187               	clrf	7
 11960     0A65  084D               	movf	save_top_adc_point@sensor_value,w
 11961     0A66  3E19               	addlw	25
 11962     0A67  0084               	movwf	4
 11963     0A68  0185               	clrf	5
 11964     0A69  3F40               	moviw [0]fsr1
 11965     0A6A  3F80               	movwi [0]fsr0
 11966     0A6B  3F41               	moviw [1]fsr1
 11967     0A6C  3F81               	movwi [1]fsr0
 11968     0A6D                     l3767:
 11969                           
 11970                           ;calibration.c: 109: calculate_crc_and_fill_array(save_top_adc_command, 6);
 11971     0A6D  3006               	movlw	6
 11972     0A6E  00AE               	movwf	calculate_crc_and_fill_array@data_len
 11973     0A6F  3056               	movlw	(low (save_top_adc_point@save_top_adc_command| 0))& (0+255)
 11974     0A70  3195  2569  318A   	fcall	_calculate_crc_and_fill_array
 11975     0A73                     l3769:
 11976                           
 11977                           ;calibration.c: 111: EUSART1_Write_1(save_top_adc_command, 8);
 11978     0A73  3008               	movlw	8
 11979     0A74  0140               	movlb	0	; select bank0
 11980     0A75  00A1               	movwf	EUSART1_Write_1@length
 11981     0A76  3056               	movlw	(low (save_top_adc_point@save_top_adc_command| 0))& (0+255)
 11982     0A77  3188  2001  318A   	fcall	_EUSART1_Write_1
 11983     0A7A                     l3771:
 11984                           
 11985                           ;calibration.c: 112: _delay((unsigned long)((10)*(1000000/4000.0)));
 11986     0A7A  3004               	movlw	4
 11987     0A7B  0140               	movlb	0	; select bank0
 11988     0A7C  00CE               	movwf	??_save_top_adc_point
 11989     0A7D  303D               	movlw	61
 11990     0A7E                     u3937:
 11991     0A7E  0B89               	decfsz	9,f
 11992     0A7F  2A7E               	goto	u3937
 11993     0A80  0BCE               	decfsz	??_save_top_adc_point,f
 11994     0A81  2A7E               	goto	u3937
 11995     0A82  3200               	nop2
 11996     0A83                     l3773:
 11997                           
 11998                           ;calibration.c: 114: enable_uart_printf();
 11999     0A83  3193  23EB  318A   	fcall	_enable_uart_printf
 12000     0A86                     l3775:
 12001                           
 12002                           ;calibration.c: 115: _delay((unsigned long)((10)*(1000000/4000.0)));
 12003     0A86  3004               	movlw	4
 12004     0A87  0140               	movlb	0	; select bank0
 12005     0A88  00CE               	movwf	??_save_top_adc_point
 12006     0A89  303D               	movlw	61
 12007     0A8A                     u3947:
 12008     0A8A  0B89               	decfsz	9,f
 12009     0A8B  2A8A               	goto	u3947
 12010     0A8C  0BCE               	decfsz	??_save_top_adc_point,f
 12011     0A8D  2A8A               	goto	u3947
 12012     0A8E  3200               	nop2
 12013     0A8F                     l3777:
 12014                           
 12015                           ;calibration.c: 116: printf("[RX-BUFFER] pH485-Calibration_Top_Value: ---- \r\n ";calibr
      +                          ation.c: 117: "pH ADC_value: %u \r\n";calibration.c: 118: "pH ADC_High Bytes: 0x%02X \r\
      +                          n";calibration.c: 119: "pH ADC_Low  Bytes: 0x%02X \r\n";calibration.c: 120: "pH ADC_Low 
      +                           CRC High Byte: 0x%02X \r\n";calibration.c: 121: "pH ADC_Low  CRC High Byte: 0x%02X \r\n
      +                          ",;calibration.c: 122: sensor_value->ph_ADC_value,;calibration.c: 123: save_top_adc_comm
      +                          and[4],;calibration.c: 124: save_top_adc_command[5],;calibration.c: 125: save_top_adc_co
      +                          mmand[6],
 12016     0A8F  30D0               	movlw	low (STR_27| (0+32768))
 12017     0A90  0140               	movlb	0	; select bank0
 12018     0A91  00AE               	movwf	printf@f
 12019     0A92  3090               	movlw	high (STR_27| (0+32768))
 12020     0A93  00AF               	movwf	printf@f+1
 12021     0A94  0A4D               	incf	save_top_adc_point@sensor_value,w
 12022     0A95  0086               	movwf	6
 12023     0A96  0187               	clrf	7
 12024     0A97  3F40               	moviw [0]fsr1
 12025     0A98  00B0               	movwf	?_printf+2
 12026     0A99  3F41               	moviw [1]fsr1
 12027     0A9A  00B1               	movwf	?_printf+3
 12028     0A9B  085A               	movf	save_top_adc_point@save_top_adc_command+4,w
 12029     0A9C  00CE               	movwf	??_save_top_adc_point
 12030     0A9D  01CF               	clrf	??_save_top_adc_point+1
 12031     0A9E  084E               	movf	??_save_top_adc_point,w
 12032     0A9F  00B2               	movwf	?_printf+4
 12033     0AA0  084F               	movf	??_save_top_adc_point+1,w
 12034     0AA1  00B3               	movwf	?_printf+5
 12035     0AA2  085B               	movf	save_top_adc_point@save_top_adc_command+5,w
 12036     0AA3  00D0               	movwf	??_save_top_adc_point+2
 12037     0AA4  01D1               	clrf	??_save_top_adc_point+3
 12038     0AA5  0850               	movf	??_save_top_adc_point+2,w
 12039     0AA6  00B4               	movwf	?_printf+6
 12040     0AA7  0851               	movf	??_save_top_adc_point+3,w
 12041     0AA8  00B5               	movwf	?_printf+7
 12042     0AA9  085C               	movf	save_top_adc_point@save_top_adc_command+6,w
 12043     0AAA  00D2               	movwf	??_save_top_adc_point+4
 12044     0AAB  01D3               	clrf	??_save_top_adc_point+5
 12045     0AAC  0852               	movf	??_save_top_adc_point+4,w
 12046     0AAD  00B6               	movwf	?_printf+8
 12047     0AAE  0853               	movf	??_save_top_adc_point+5,w
 12048     0AAF  00B7               	movwf	?_printf+9
 12049     0AB0  085D               	movf	save_top_adc_point@save_top_adc_command+7,w
 12050     0AB1  00D4               	movwf	??_save_top_adc_point+6
 12051     0AB2  01D5               	clrf	??_save_top_adc_point+7
 12052     0AB3  0854               	movf	??_save_top_adc_point+6,w
 12053     0AB4  00B8               	movwf	?_printf+10
 12054     0AB5  0855               	movf	??_save_top_adc_point+7,w
 12055     0AB6  00B9               	movwf	?_printf+11
 12056     0AB7  3183  23A0  318A   	fcall	_printf
 12057     0ABA                     l3779:
 12058                           
 12059                           ;calibration.c: 128: _delay((unsigned long)((10)*(1000000/4000.0)));
 12060     0ABA  3004               	movlw	4
 12061     0ABB  0140               	movlb	0	; select bank0
 12062     0ABC  00CE               	movwf	??_save_top_adc_point
 12063     0ABD  303D               	movlw	61
 12064     0ABE                     u3957:
 12065     0ABE  0B89               	decfsz	9,f
 12066     0ABF  2ABE               	goto	u3957
 12067     0AC0  0BCE               	decfsz	??_save_top_adc_point,f
 12068     0AC1  2ABE               	goto	u3957
 12069     0AC2  3200               	nop2
 12070                           
 12071                           ;calibration.c: 129: enable_tx_transmit();
 12072     0AC3  3194  2486  318A   	fcall	_enable_tx_transmit
 12073     0AC6                     l3781:
 12074                           
 12075                           ;calibration.c: 130: *states = STATE_CALIBRATE;
 12076     0AC6  0140               	movlb	0	; select bank0
 12077     0AC7  085E               	movf	save_top_adc_point@states,w
 12078     0AC8  0086               	movwf	6
 12079     0AC9  0187               	clrf	7
 12080     0ACA  3004               	movlw	4
 12081     0ACB  0081               	movwf	1
 12082     0ACC                     l693:
 12083     0ACC  0008               	return
 12084     0ACD                     __end_of_save_top_adc_point:
 12085                           
 12086                           	psect	text17
 12087     0993                     __ptext17:	
 12088 ;; *************** function _save_bottom_adc_point *****************
 12089 ;; Defined at:
 12090 ;;		line 132 in file "calibration.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;  states          1    wreg     PTR enum E186
 12093 ;;		 -> main@state(1), 
 12094 ;;  sensor_value    1   45[BANK0 ] PTR struct values
 12095 ;;		 -> main@sensor_value(37), 
 12096 ;; Auto vars:     Size  Location     Type
 12097 ;;  states          1   62[BANK0 ] PTR enum E186
 12098 ;;		 -> main@state(1), 
 12099 ;;  save_bottom_    8   54[BANK0 ] unsigned char [8]
 12100 ;; Return value:  Size  Location     Type
 12101 ;;                  1    wreg      void 
 12102 ;; Registers used:
 12103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12104 ;; Tracked objects:
 12105 ;;		On entry : 0/0
 12106 ;;		On exit  : 0/0
 12107 ;;		Unchanged: 0/0
 12108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12109 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12110 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12111 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;Total ram usage:       18 bytes
 12114 ;; Hardware stack levels used: 1
 12115 ;; Hardware stack levels required when called: 4
 12116 ;; This function calls:
 12117 ;;		_EUSART1_Write_1
 12118 ;;		_calculate_crc_and_fill_array
 12119 ;;		_enable_tx_transmit
 12120 ;;		_enable_uart_printf
 12121 ;;		_printf
 12122 ;; This function is called by:
 12123 ;;		_main
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127     0993                     _save_bottom_adc_point:	
 12128                           ;psect for function _save_bottom_adc_point
 12129                           
 12130                           
 12131                           ;incstack = 0
 12132                           ; Regs used in _save_bottom_adc_point: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12133                           ;save_bottom_adc_point@states stored from wreg
 12134     0993  0140               	movlb	0	; select bank0
 12135     0994  00DE               	movwf	save_bottom_adc_point@states
 12136     0995                     l3783:
 12137                           
 12138                           ;calibration.c: 133: enable_uart_printf();
 12139     0995  3193  23EB  3189   	fcall	_enable_uart_printf
 12140     0998                     l3785:
 12141                           
 12142                           ;calibration.c: 134: printf("STATE_SAVE_BOTTOM_CALIBRATION_POINT Saved \r\n");
 12143     0998  303D               	movlw	low (STR_28| (0+32768))
 12144     0999  0140               	movlb	0	; select bank0
 12145     099A  00AE               	movwf	printf@f
 12146     099B  3098               	movlw	high (STR_28| (0+32768))
 12147     099C  00AF               	movwf	printf@f+1
 12148     099D  3183  23A0  3189   	fcall	_printf
 12149     09A0                     l3787:
 12150                           
 12151                           ;calibration.c: 135: _delay((unsigned long)((10)*(1000000/4000.0)));
 12152     09A0  3004               	movlw	4
 12153     09A1  0140               	movlb	0	; select bank0
 12154     09A2  00CE               	movwf	??_save_bottom_adc_point
 12155     09A3  303D               	movlw	61
 12156     09A4                     u3967:
 12157     09A4  0B89               	decfsz	9,f
 12158     09A5  29A4               	goto	u3967
 12159     09A6  0BCE               	decfsz	??_save_bottom_adc_point,f
 12160     09A7  29A4               	goto	u3967
 12161     09A8  3200               	nop2
 12162     09A9                     l3789:
 12163                           
 12164                           ;calibration.c: 136: enable_tx_transmit();
 12165     09A9  3194  2486  3189   	fcall	_enable_tx_transmit
 12166     09AC                     l3791:
 12167                           
 12168                           ;calibration.c: 138: uint8_t save_bottom_adc_command[8] = {0x01, 0x06, 0x00, 0x3F, 0x00,
      +                           0xFF, 0xF9, 0x86};
 12169     09AC  30C0               	movlw	low save_bottom_adc_point@F10625
 12170     09AD  0086               	movwf	6
 12171     09AE  3001               	movlw	high save_bottom_adc_point@F10625
 12172     09AF  0087               	movwf	7
 12173     09B0  3056               	movlw	low save_bottom_adc_point@save_bottom_adc_command
 12174     09B1  0084               	movwf	4
 12175     09B2  3000               	movlw	high save_bottom_adc_point@save_bottom_adc_command
 12176     09B3  0085               	movwf	5
 12177     09B4  3008               	movlw	8
 12178     09B5  0140               	movlb	0	; select bank0
 12179     09B6  00CE               	movwf	??_save_bottom_adc_point
 12180     09B7                     u3110:
 12181     09B7  0016               	moviw fsr1++
 12182     09B8  001A               	movwi fsr0++
 12183     09B9  0BCE               	decfsz	??_save_bottom_adc_point,f
 12184     09BA  29B7               	goto	u3110
 12185     09BB                     l3793:
 12186                           
 12187                           ;calibration.c: 139: save_bottom_adc_command[4] = sensor_value->ph_ADC_High_byte;
 12188     09BB  084D               	movf	save_bottom_adc_point@sensor_value,w
 12189     09BC  0086               	movwf	6
 12190     09BD  0187               	clrf	7
 12191     09BE  3F43               	moviw [3]fsr1
 12192     09BF  00DA               	movwf	save_bottom_adc_point@save_bottom_adc_command+4
 12193     09C0                     l3795:
 12194                           
 12195                           ;calibration.c: 140: save_bottom_adc_command[5] = sensor_value->ph_ADC_Low_byte;
 12196     09C0  084D               	movf	save_bottom_adc_point@sensor_value,w
 12197     09C1  0086               	movwf	6
 12198     09C2  0187               	clrf	7
 12199     09C3  3F44               	moviw [4]fsr1
 12200     09C4  00DB               	movwf	save_bottom_adc_point@save_bottom_adc_command+5
 12201     09C5                     l3797:
 12202                           
 12203                           ;calibration.c: 141: sensor_value->ph_bottom_point_adc_value = sensor_value->ph_ADC_valu
      +                          e;
 12204     09C5  0A4D               	incf	save_bottom_adc_point@sensor_value,w
 12205     09C6  0086               	movwf	6
 12206     09C7  0187               	clrf	7
 12207     09C8  084D               	movf	save_bottom_adc_point@sensor_value,w
 12208     09C9  3E1D               	addlw	29
 12209     09CA  0084               	movwf	4
 12210     09CB  0185               	clrf	5
 12211     09CC  3F40               	moviw [0]fsr1
 12212     09CD  3F80               	movwi [0]fsr0
 12213     09CE  3F41               	moviw [1]fsr1
 12214     09CF  3F81               	movwi [1]fsr0
 12215     09D0                     l3799:
 12216                           
 12217                           ;calibration.c: 142: calculate_crc_and_fill_array(save_bottom_adc_command, 6);
 12218     09D0  3006               	movlw	6
 12219     09D1  00AE               	movwf	calculate_crc_and_fill_array@data_len
 12220     09D2  3056               	movlw	(low (save_bottom_adc_point@save_bottom_adc_command| 0))& (0+255)
 12221     09D3  3195  2569  3189   	fcall	_calculate_crc_and_fill_array
 12222     09D6                     l3801:
 12223                           
 12224                           ;calibration.c: 144: EUSART1_Write_1(save_bottom_adc_command, 8);
 12225     09D6  3008               	movlw	8
 12226     09D7  0140               	movlb	0	; select bank0
 12227     09D8  00A1               	movwf	EUSART1_Write_1@length
 12228     09D9  3056               	movlw	(low (save_bottom_adc_point@save_bottom_adc_command| 0))& (0+255)
 12229     09DA  3188  2001  3189   	fcall	_EUSART1_Write_1
 12230     09DD                     l3803:
 12231                           
 12232                           ;calibration.c: 145: _delay((unsigned long)((10)*(1000000/4000.0)));
 12233     09DD  3004               	movlw	4
 12234     09DE  0140               	movlb	0	; select bank0
 12235     09DF  00CE               	movwf	??_save_bottom_adc_point
 12236     09E0  303D               	movlw	61
 12237     09E1                     u3977:
 12238     09E1  0B89               	decfsz	9,f
 12239     09E2  29E1               	goto	u3977
 12240     09E3  0BCE               	decfsz	??_save_bottom_adc_point,f
 12241     09E4  29E1               	goto	u3977
 12242     09E5  3200               	nop2
 12243     09E6                     l3805:
 12244                           
 12245                           ;calibration.c: 147: enable_uart_printf();
 12246     09E6  3193  23EB  3189   	fcall	_enable_uart_printf
 12247     09E9                     l3807:
 12248                           
 12249                           ;calibration.c: 148: _delay((unsigned long)((10)*(1000000/4000.0)));
 12250     09E9  3004               	movlw	4
 12251     09EA  0140               	movlb	0	; select bank0
 12252     09EB  00CE               	movwf	??_save_bottom_adc_point
 12253     09EC  303D               	movlw	61
 12254     09ED                     u3987:
 12255     09ED  0B89               	decfsz	9,f
 12256     09EE  29ED               	goto	u3987
 12257     09EF  0BCE               	decfsz	??_save_bottom_adc_point,f
 12258     09F0  29ED               	goto	u3987
 12259     09F1  3200               	nop2
 12260     09F2                     l3809:
 12261                           
 12262                           ;calibration.c: 149: printf("[RX-BUFFER] pH485-Calibration_Bottom_Value: ---- \r\n ";cal
      +                          ibration.c: 150: "pH ADC_value: %u \r\n";calibration.c: 151: "pH ADC_High Bytes: 0x%02X 
      +                          \r\n";calibration.c: 152: "pH ADC_Low  Bytes: 0x%02X \r\n";calibration.c: 153: "pH ADC_L
      +                          ow  CRC High Byte: 0x%02X \r\n";calibration.c: 154: "pH ADC_Low  CRC High Byte: 0x%02X \
      +                          r\n",;calibration.c: 155: sensor_value->ph_ADC_value,;calibration.c: 156: save_bottom_ad
      +                          c_command[4],;calibration.c: 157: save_bottom_adc_command[5],;calibration.c: 158: save_b
      +                          ottom_adc_command[6],
 12263     09F2  3008               	movlw	low (STR_29| (0+32768))
 12264     09F3  0140               	movlb	0	; select bank0
 12265     09F4  00AE               	movwf	printf@f
 12266     09F5  3090               	movlw	high (STR_29| (0+32768))
 12267     09F6  00AF               	movwf	printf@f+1
 12268     09F7  0A4D               	incf	save_bottom_adc_point@sensor_value,w
 12269     09F8  0086               	movwf	6
 12270     09F9  0187               	clrf	7
 12271     09FA  3F40               	moviw [0]fsr1
 12272     09FB  00B0               	movwf	?_printf+2
 12273     09FC  3F41               	moviw [1]fsr1
 12274     09FD  00B1               	movwf	?_printf+3
 12275     09FE  085A               	movf	save_bottom_adc_point@save_bottom_adc_command+4,w
 12276     09FF  00CE               	movwf	??_save_bottom_adc_point
 12277     0A00  01CF               	clrf	??_save_bottom_adc_point+1
 12278     0A01  084E               	movf	??_save_bottom_adc_point,w
 12279     0A02  00B2               	movwf	?_printf+4
 12280     0A03  084F               	movf	??_save_bottom_adc_point+1,w
 12281     0A04  00B3               	movwf	?_printf+5
 12282     0A05  085B               	movf	save_bottom_adc_point@save_bottom_adc_command+5,w
 12283     0A06  00D0               	movwf	??_save_bottom_adc_point+2
 12284     0A07  01D1               	clrf	??_save_bottom_adc_point+3
 12285     0A08  0850               	movf	??_save_bottom_adc_point+2,w
 12286     0A09  00B4               	movwf	?_printf+6
 12287     0A0A  0851               	movf	??_save_bottom_adc_point+3,w
 12288     0A0B  00B5               	movwf	?_printf+7
 12289     0A0C  085C               	movf	save_bottom_adc_point@save_bottom_adc_command+6,w
 12290     0A0D  00D2               	movwf	??_save_bottom_adc_point+4
 12291     0A0E  01D3               	clrf	??_save_bottom_adc_point+5
 12292     0A0F  0852               	movf	??_save_bottom_adc_point+4,w
 12293     0A10  00B6               	movwf	?_printf+8
 12294     0A11  0853               	movf	??_save_bottom_adc_point+5,w
 12295     0A12  00B7               	movwf	?_printf+9
 12296     0A13  085D               	movf	save_bottom_adc_point@save_bottom_adc_command+7,w
 12297     0A14  00D4               	movwf	??_save_bottom_adc_point+6
 12298     0A15  01D5               	clrf	??_save_bottom_adc_point+7
 12299     0A16  0854               	movf	??_save_bottom_adc_point+6,w
 12300     0A17  00B8               	movwf	?_printf+10
 12301     0A18  0855               	movf	??_save_bottom_adc_point+7,w
 12302     0A19  00B9               	movwf	?_printf+11
 12303     0A1A  3183  23A0  3189   	fcall	_printf
 12304     0A1D                     l3811:
 12305                           
 12306                           ;calibration.c: 161: _delay((unsigned long)((10)*(1000000/4000.0)));
 12307     0A1D  3004               	movlw	4
 12308     0A1E  0140               	movlb	0	; select bank0
 12309     0A1F  00CE               	movwf	??_save_bottom_adc_point
 12310     0A20  303D               	movlw	61
 12311     0A21                     u3997:
 12312     0A21  0B89               	decfsz	9,f
 12313     0A22  2A21               	goto	u3997
 12314     0A23  0BCE               	decfsz	??_save_bottom_adc_point,f
 12315     0A24  2A21               	goto	u3997
 12316     0A25  3200               	nop2
 12317                           
 12318                           ;calibration.c: 162: enable_tx_transmit();
 12319     0A26  3194  2486  3189   	fcall	_enable_tx_transmit
 12320     0A29                     l3813:
 12321                           
 12322                           ;calibration.c: 163: *states = STATE_CALIBRATE;
 12323     0A29  0140               	movlb	0	; select bank0
 12324     0A2A  085E               	movf	save_bottom_adc_point@states,w
 12325     0A2B  0086               	movwf	6
 12326     0A2C  0187               	clrf	7
 12327     0A2D  3004               	movlw	4
 12328     0A2E  0081               	movwf	1
 12329     0A2F                     l698:
 12330     0A2F  0008               	return
 12331     0A30                     __end_of_save_bottom_adc_point:
 12332                           
 12333                           	psect	text18
 12334     1569                     __ptext18:	
 12335 ;; *************** function _calculate_crc_and_fill_array *****************
 12336 ;; Defined at:
 12337 ;;		line 45 in file "calibration.c"
 12338 ;; Parameters:    Size  Location     Type
 12339 ;;  data            1    wreg     PTR unsigned char 
 12340 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), 
 12341 ;;  data_len        1   14[BANK0 ] unsigned char 
 12342 ;; Auto vars:     Size  Location     Type
 12343 ;;  data            1   18[BANK0 ] PTR unsigned char 
 12344 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), 
 12345 ;;  crc             2   16[BANK0 ] unsigned int 
 12346 ;; Return value:  Size  Location     Type
 12347 ;;                  1    wreg      void 
 12348 ;; Registers used:
 12349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12350 ;; Tracked objects:
 12351 ;;		On entry : 0/0
 12352 ;;		On exit  : 0/0
 12353 ;;		Unchanged: 0/0
 12354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12355 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12356 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12357 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12358 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12359 ;;Total ram usage:        5 bytes
 12360 ;; Hardware stack levels used: 1
 12361 ;; Hardware stack levels required when called: 3
 12362 ;; This function calls:
 12363 ;;		_crc16_modbus
 12364 ;; This function is called by:
 12365 ;;		_save_top_adc_point
 12366 ;;		_save_bottom_adc_point
 12367 ;; This function uses a non-reentrant model
 12368 ;;
 12369                           
 12370     1569                     _calculate_crc_and_fill_array:	
 12371                           ;psect for function _calculate_crc_and_fill_array
 12372                           
 12373                           
 12374                           ;incstack = 0
 12375                           ; Regs used in _calculate_crc_and_fill_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 12376                           ;calculate_crc_and_fill_array@data stored from wreg
 12377     1569  0140               	movlb	0	; select bank0
 12378     156A  00B2               	movwf	calculate_crc_and_fill_array@data
 12379     156B                     l3507:
 12380                           
 12381                           ;calibration.c: 46: uint16_t crc = crc16_modbus(data, data_len);
 12382     156B  082E               	movf	calculate_crc_and_fill_array@data_len,w
 12383     156C  00A0               	movwf	crc16_modbus@len
 12384     156D  0832               	movf	calculate_crc_and_fill_array@data,w
 12385     156E  3188  20C3  3195   	fcall	_crc16_modbus
 12386     1571  0140               	movlb	0	; select bank0
 12387     1572  0821               	movf	?_crc16_modbus+1,w
 12388     1573  00B1               	movwf	calculate_crc_and_fill_array@crc+1
 12389     1574  0820               	movf	?_crc16_modbus,w
 12390     1575  00B0               	movwf	calculate_crc_and_fill_array@crc
 12391     1576                     l3509:
 12392                           
 12393                           ;calibration.c: 47: data[data_len] = crc & 0xFF;
 12394     1576  082E               	movf	calculate_crc_and_fill_array@data_len,w
 12395     1577  0732               	addwf	calculate_crc_and_fill_array@data,w
 12396     1578  00AF               	movwf	??_calculate_crc_and_fill_array
 12397     1579  082F               	movf	??_calculate_crc_and_fill_array,w
 12398     157A  0086               	movwf	6
 12399     157B  0187               	clrf	7
 12400     157C  0830               	movf	calculate_crc_and_fill_array@crc,w
 12401     157D  0081               	movwf	1
 12402     157E                     l3511:
 12403                           
 12404                           ;calibration.c: 48: data[data_len+1] = (crc >> 8) & 0xFF;
 12405     157E  082E               	movf	calculate_crc_and_fill_array@data_len,w
 12406     157F  0732               	addwf	calculate_crc_and_fill_array@data,w
 12407     1580  00AF               	movwf	??_calculate_crc_and_fill_array
 12408     1581  0A2F               	incf	??_calculate_crc_and_fill_array,w
 12409     1582  0086               	movwf	6
 12410     1583  0187               	clrf	7
 12411     1584  0831               	movf	calculate_crc_and_fill_array@crc+1,w
 12412     1585  0081               	movwf	1
 12413     1586                     l664:
 12414     1586  0008               	return
 12415     1587                     __end_of_calculate_crc_and_fill_array:
 12416                           
 12417                           	psect	text19
 12418     08C3                     __ptext19:	
 12419 ;; *************** function _crc16_modbus *****************
 12420 ;; Defined at:
 12421 ;;		line 27 in file "calibration.c"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  data            1    wreg     PTR unsigned char 
 12424 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), 
 12425 ;;  len             1    0[BANK0 ] unsigned char 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  data            1    7[BANK0 ] PTR unsigned char 
 12428 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), 
 12429 ;;  j               2   10[BANK0 ] int 
 12430 ;;  i               2    8[BANK0 ] int 
 12431 ;;  crc             2   12[BANK0 ] unsigned int 
 12432 ;;  poly            2    5[BANK0 ] unsigned int 
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  2    0[BANK0 ] unsigned int 
 12435 ;; Registers used:
 12436 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12442 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12446 ;;Total ram usage:       14 bytes
 12447 ;; Hardware stack levels used: 1
 12448 ;; Hardware stack levels required when called: 2
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_calculate_crc_and_fill_array
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456     08C3                     _crc16_modbus:	
 12457                           ;psect for function _crc16_modbus
 12458                           
 12459                           
 12460                           ;incstack = 0
 12461                           ; Regs used in _crc16_modbus: [wreg+fsr1l+fsr1h+status,2+status,0]
 12462                           ;crc16_modbus@data stored from wreg
 12463     08C3  0140               	movlb	0	; select bank0
 12464     08C4  00A7               	movwf	crc16_modbus@data
 12465     08C5                     l3121:
 12466                           
 12467                           ;calibration.c: 28: uint16_t crc = 0xFFFF;
 12468     08C5  30FF               	movlw	255
 12469     08C6  00AC               	movwf	crc16_modbus@crc
 12470     08C7  30FF               	movlw	255
 12471     08C8  00AD               	movwf	crc16_modbus@crc+1
 12472                           
 12473                           ;calibration.c: 29: uint16_t poly = 0xA001;
 12474     08C9  3001               	movlw	1
 12475     08CA  00A5               	movwf	crc16_modbus@poly
 12476     08CB  30A0               	movlw	160
 12477     08CC  00A6               	movwf	crc16_modbus@poly+1
 12478     08CD                     l3123:
 12479                           
 12480                           ;calibration.c: 31: for (int i = 0; i < len; i++) {
 12481     08CD  01A8               	clrf	crc16_modbus@i
 12482     08CE  01A9               	clrf	crc16_modbus@i+1
 12483     08CF  290A               	goto	l654
 12484     08D0                     l3125:
 12485                           
 12486                           ;calibration.c: 32: crc ^= data[i];
 12487     08D0  0140               	movlb	0	; select bank0
 12488     08D1  0828               	movf	crc16_modbus@i,w
 12489     08D2  0727               	addwf	crc16_modbus@data,w
 12490     08D3  00A2               	movwf	??_crc16_modbus
 12491     08D4  0822               	movf	??_crc16_modbus,w
 12492     08D5  0086               	movwf	6
 12493     08D6  0187               	clrf	7
 12494     08D7  0801               	movf	1,w
 12495     08D8  00A3               	movwf	??_crc16_modbus+1
 12496     08D9  01A4               	clrf	??_crc16_modbus+2
 12497     08DA  0823               	movf	??_crc16_modbus+1,w
 12498     08DB  06AC               	xorwf	crc16_modbus@crc,f
 12499     08DC  0824               	movf	??_crc16_modbus+2,w
 12500     08DD  06AD               	xorwf	crc16_modbus@crc+1,f
 12501     08DE                     l3127:
 12502                           
 12503                           ;calibration.c: 33: for (int j = 0; j < 8; j++) {
 12504     08DE  01AA               	clrf	crc16_modbus@j
 12505     08DF  01AB               	clrf	crc16_modbus@j+1
 12506     08E0                     l656:
 12507                           
 12508                           ;calibration.c: 34: if (crc & 0x0001) {
 12509     08E0  0140               	movlb	0	; select bank0
 12510     08E1  1C2C               	btfss	crc16_modbus@crc,0
 12511     08E2  28E4               	goto	u2191
 12512     08E3  28E5               	goto	u2190
 12513     08E4                     u2191:
 12514     08E4  28EF               	goto	l3137
 12515     08E5                     u2190:
 12516     08E5                     l3133:
 12517                           
 12518                           ;calibration.c: 35: crc >>= 1;
 12519     08E5  3001               	movlw	1
 12520     08E6                     u2205:
 12521     08E6  36AD               	lsrf	crc16_modbus@crc+1,f
 12522     08E7  0CAC               	rrf	crc16_modbus@crc,f
 12523     08E8  0B89               	decfsz	9,f
 12524     08E9  28E6               	goto	u2205
 12525     08EA                     l3135:
 12526                           
 12527                           ;calibration.c: 36: crc ^= poly;
 12528     08EA  0825               	movf	crc16_modbus@poly,w
 12529     08EB  06AC               	xorwf	crc16_modbus@crc,f
 12530     08EC  0826               	movf	crc16_modbus@poly+1,w
 12531     08ED  06AD               	xorwf	crc16_modbus@crc+1,f
 12532                           
 12533                           ;calibration.c: 37: } else {
 12534     08EE  28F4               	goto	l3139
 12535     08EF                     l3137:
 12536                           
 12537                           ;calibration.c: 38: crc >>= 1;
 12538     08EF  3001               	movlw	1
 12539     08F0                     u2215:
 12540     08F0  36AD               	lsrf	crc16_modbus@crc+1,f
 12541     08F1  0CAC               	rrf	crc16_modbus@crc,f
 12542     08F2  0B89               	decfsz	9,f
 12543     08F3  28F0               	goto	u2215
 12544     08F4                     l3139:
 12545     08F4  3001               	movlw	1
 12546     08F5  07AA               	addwf	crc16_modbus@j,f
 12547     08F6  3000               	movlw	0
 12548     08F7  3DAB               	addwfc	crc16_modbus@j+1,f
 12549     08F8                     l3141:
 12550     08F8  082B               	movf	crc16_modbus@j+1,w
 12551     08F9  3A80               	xorlw	128
 12552     08FA  00A2               	movwf	??_crc16_modbus
 12553     08FB  3080               	movlw	128
 12554     08FC  0222               	subwf	??_crc16_modbus,w
 12555     08FD  1D03               	skipz
 12556     08FE  2901               	goto	u2225
 12557     08FF  3008               	movlw	8
 12558     0900  022A               	subwf	crc16_modbus@j,w
 12559     0901                     u2225:
 12560     0901  1C03               	skipc
 12561     0902  2904               	goto	u2221
 12562     0903  2905               	goto	u2220
 12563     0904                     u2221:
 12564     0904  28E0               	goto	l656
 12565     0905                     u2220:
 12566     0905                     l3143:
 12567     0905  3001               	movlw	1
 12568     0906  0140               	movlb	0	; select bank0
 12569     0907  07A8               	addwf	crc16_modbus@i,f
 12570     0908  3000               	movlw	0
 12571     0909  3DA9               	addwfc	crc16_modbus@i+1,f
 12572     090A                     l654:
 12573     090A  0829               	movf	crc16_modbus@i+1,w
 12574     090B  3A80               	xorlw	128
 12575     090C  00A2               	movwf	??_crc16_modbus
 12576     090D  3080               	movlw	128
 12577     090E  0222               	subwf	??_crc16_modbus,w
 12578     090F  1D03               	skipz
 12579     0910  2913               	goto	u2235
 12580     0911  0820               	movf	crc16_modbus@len,w
 12581     0912  0228               	subwf	crc16_modbus@i,w
 12582     0913                     u2235:
 12583     0913  1C03               	skipc
 12584     0914  2916               	goto	u2231
 12585     0915  2917               	goto	u2230
 12586     0916                     u2231:
 12587     0916  28D0               	goto	l3125
 12588     0917                     u2230:
 12589     0917                     l3145:
 12590                           
 12591                           ;calibration.c: 39: };calibration.c: 40: };calibration.c: 41: };calibration.c: 43: retur
      +                          n crc;
 12592     0917  0140               	movlb	0	; select bank0
 12593     0918  082D               	movf	crc16_modbus@crc+1,w
 12594     0919  00A1               	movwf	?_crc16_modbus+1
 12595     091A  082C               	movf	crc16_modbus@crc,w
 12596     091B  00A0               	movwf	?_crc16_modbus
 12597     091C                     l661:
 12598     091C  0008               	return
 12599     091D                     __end_of_crc16_modbus:
 12600                           
 12601                           	psect	text20
 12602     0B87                     __ptext20:	
 12603 ;; *************** function _monitoring_sync *****************
 12604 ;; Defined at:
 12605 ;;		line 14 in file "monitor_sync.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  state           1    wreg     PTR enum E10399
 12608 ;;		 -> main@state(1), 
 12609 ;;  b1              1   45[BANK0 ] PTR struct mybutton
 12610 ;;		 -> main@b1(27), 
 12611 ;;  b2              1   46[BANK0 ] PTR struct mybutton
 12612 ;;		 -> main@b2(27), 
 12613 ;;  b1_clicked_c    1   47[BANK0 ] PTR unsigned char 
 12614 ;;		 -> main@b1_clicked_count(1), 
 12615 ;;  b2_clicked_c    1   48[BANK0 ] PTR unsigned char 
 12616 ;;		 -> main@b2_clicked_count(1), 
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;  state           1   49[BANK0 ] PTR enum E10399
 12619 ;;		 -> main@state(1), 
 12620 ;; Return value:  Size  Location     Type
 12621 ;;                  1    wreg      void 
 12622 ;; Registers used:
 12623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12624 ;; Tracked objects:
 12625 ;;		On entry : 0/0
 12626 ;;		On exit  : 0/0
 12627 ;;		Unchanged: 0/0
 12628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12629 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;Total ram usage:        5 bytes
 12634 ;; Hardware stack levels used: 1
 12635 ;; Hardware stack levels required when called: 4
 12636 ;; This function calls:
 12637 ;;		_LED_flashes_three_times
 12638 ;;		_is_long_press
 12639 ;;		_is_single_click
 12640 ;;		_printf
 12641 ;;		_reset_long_press_flag
 12642 ;;		_reset_single_click_flag
 12643 ;; This function is called by:
 12644 ;;		_main
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648     0B87                     _monitoring_sync:	
 12649                           ;psect for function _monitoring_sync
 12650                           
 12651                           
 12652                           ;incstack = 0
 12653                           ; Regs used in _monitoring_sync: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12654                           ;monitoring_sync@state stored from wreg
 12655     0B87  0140               	movlb	0	; select bank0
 12656     0B88  00D1               	movwf	monitoring_sync@state
 12657     0B89                     l4345:
 12658                           
 12659                           ;monitor_sync.c: 17: if( is_single_click(b1)){
 12660     0B89  084D               	movf	monitoring_sync@b1,w
 12661     0B8A  00A0               	movwf	is_single_click@b
 12662     0B8B  3000               	movlw	0
 12663     0B8C  00A1               	movwf	is_single_click@b+1
 12664     0B8D  3194  2404  318B   	fcall	_is_single_click
 12665     0B90  3A00               	xorlw	0
 12666     0B91  1903               	skipnz
 12667     0B92  2B94               	goto	u3781
 12668     0B93  2B95               	goto	u3780
 12669     0B94                     u3781:
 12670     0B94  2BB2               	goto	l4355
 12671     0B95                     u3780:
 12672     0B95                     l4347:
 12673                           
 12674                           ;monitor_sync.c: 18: printf("b1 clicked\r\n");
 12675     0B95  3058               	movlw	low (STR_18| (0+32768))
 12676     0B96  0140               	movlb	0	; select bank0
 12677     0B97  00AE               	movwf	printf@f
 12678     0B98  3099               	movlw	high (STR_18| (0+32768))
 12679     0B99  00AF               	movwf	printf@f+1
 12680     0B9A  3183  23A0  318B   	fcall	_printf
 12681     0B9D                     l4349:
 12682                           
 12683                           ;monitor_sync.c: 19: *b1_clicked_count = (*b1_clicked_count) + 1;
 12684     0B9D  0140               	movlb	0	; select bank0
 12685     0B9E  084F               	movf	monitoring_sync@b1_clicked_count,w
 12686     0B9F  0086               	movwf	6
 12687     0BA0  0187               	clrf	7
 12688     0BA1  084F               	movf	monitoring_sync@b1_clicked_count,w
 12689     0BA2  0084               	movwf	4
 12690     0BA3  0185               	clrf	5
 12691     0BA4  0800               	movf	0,w
 12692     0BA5  3E01               	addlw	1
 12693     0BA6  0081               	movwf	1
 12694     0BA7                     l4351:
 12695                           
 12696                           ;monitor_sync.c: 20: LED_flashes_three_times();
 12697     0BA7  3196  2610  318B   	fcall	_LED_flashes_three_times
 12698     0BAA                     l4353:
 12699                           
 12700                           ;monitor_sync.c: 21: reset_single_click_flag(b1);
 12701     0BAA  0140               	movlb	0	; select bank0
 12702     0BAB  084D               	movf	monitoring_sync@b1,w
 12703     0BAC  00A0               	movwf	reset_single_click_flag@b
 12704     0BAD  3000               	movlw	0
 12705     0BAE  00A1               	movwf	reset_single_click_flag@b+1
 12706     0BAF  3194  2414  318B   	fcall	_reset_single_click_flag
 12707     0BB2                     l4355:
 12708                           
 12709                           ;monitor_sync.c: 23: };;monitor_sync.c: 25: if( is_single_click(b2)){
 12710     0BB2  0140               	movlb	0	; select bank0
 12711     0BB3  084E               	movf	monitoring_sync@b2,w
 12712     0BB4  00A0               	movwf	is_single_click@b
 12713     0BB5  3001               	movlw	1
 12714     0BB6  00A1               	movwf	is_single_click@b+1
 12715     0BB7  3194  2404  318B   	fcall	_is_single_click
 12716     0BBA  3A00               	xorlw	0
 12717     0BBB  1903               	skipnz
 12718     0BBC  2BBE               	goto	u3791
 12719     0BBD  2BBF               	goto	u3790
 12720     0BBE                     u3791:
 12721     0BBE  2BDC               	goto	l4365
 12722     0BBF                     u3790:
 12723     0BBF                     l4357:
 12724                           
 12725                           ;monitor_sync.c: 26: printf("b2 clicked\r\n");
 12726     0BBF  3065               	movlw	low (STR_19| (0+32768))
 12727     0BC0  0140               	movlb	0	; select bank0
 12728     0BC1  00AE               	movwf	printf@f
 12729     0BC2  3099               	movlw	high (STR_19| (0+32768))
 12730     0BC3  00AF               	movwf	printf@f+1
 12731     0BC4  3183  23A0  318B   	fcall	_printf
 12732     0BC7                     l4359:
 12733                           
 12734                           ;monitor_sync.c: 27: *b2_clicked_count = (*b2_clicked_count) + 1;
 12735     0BC7  0140               	movlb	0	; select bank0
 12736     0BC8  0850               	movf	monitoring_sync@b2_clicked_count,w
 12737     0BC9  0086               	movwf	6
 12738     0BCA  0187               	clrf	7
 12739     0BCB  0850               	movf	monitoring_sync@b2_clicked_count,w
 12740     0BCC  0084               	movwf	4
 12741     0BCD  0185               	clrf	5
 12742     0BCE  0800               	movf	0,w
 12743     0BCF  3E01               	addlw	1
 12744     0BD0  0081               	movwf	1
 12745     0BD1                     l4361:
 12746                           
 12747                           ;monitor_sync.c: 28: LED_flashes_three_times();
 12748     0BD1  3196  2610  318B   	fcall	_LED_flashes_three_times
 12749     0BD4                     l4363:
 12750                           
 12751                           ;monitor_sync.c: 29: reset_single_click_flag(b2);
 12752     0BD4  0140               	movlb	0	; select bank0
 12753     0BD5  084E               	movf	monitoring_sync@b2,w
 12754     0BD6  00A0               	movwf	reset_single_click_flag@b
 12755     0BD7  3001               	movlw	1
 12756     0BD8  00A1               	movwf	reset_single_click_flag@b+1
 12757     0BD9  3194  2414  318B   	fcall	_reset_single_click_flag
 12758     0BDC                     l4365:
 12759                           
 12760                           ;monitor_sync.c: 31: };;monitor_sync.c: 33: if( is_long_press(b1)){
 12761     0BDC  0140               	movlb	0	; select bank0
 12762     0BDD  084D               	movf	monitoring_sync@b1,w
 12763     0BDE  00A0               	movwf	is_long_press@b
 12764     0BDF  3000               	movlw	0
 12765     0BE0  00A1               	movwf	is_long_press@b+1
 12766     0BE1  3193  23FC  318B   	fcall	_is_long_press
 12767     0BE4  3A00               	xorlw	0
 12768     0BE5  1903               	skipnz
 12769     0BE6  2BE8               	goto	u3801
 12770     0BE7  2BE9               	goto	u3800
 12771     0BE8                     u3801:
 12772     0BE8  2C16               	goto	l4383
 12773     0BE9                     u3800:
 12774     0BE9                     l4367:
 12775                           
 12776                           ;monitor_sync.c: 34: printf("b1 long press \r\n");
 12777     0BE9  3036               	movlw	low (STR_20| (0+32768))
 12778     0BEA  0140               	movlb	0	; select bank0
 12779     0BEB  00AE               	movwf	printf@f
 12780     0BEC  3099               	movlw	high (STR_20| (0+32768))
 12781     0BED  00AF               	movwf	printf@f+1
 12782     0BEE  3183  23A0  318B   	fcall	_printf
 12783     0BF1                     l4369:
 12784                           
 12785                           ;monitor_sync.c: 35: *b1_clicked_count = (*b1_clicked_count) + 1;
 12786     0BF1  0140               	movlb	0	; select bank0
 12787     0BF2  084F               	movf	monitoring_sync@b1_clicked_count,w
 12788     0BF3  0086               	movwf	6
 12789     0BF4  0187               	clrf	7
 12790     0BF5  084F               	movf	monitoring_sync@b1_clicked_count,w
 12791     0BF6  0084               	movwf	4
 12792     0BF7  0185               	clrf	5
 12793     0BF8  0800               	movf	0,w
 12794     0BF9  3E01               	addlw	1
 12795     0BFA  0081               	movwf	1
 12796     0BFB                     l4371:
 12797                           
 12798                           ;monitor_sync.c: 37: LED_flashes_three_times();
 12799     0BFB  3196  2610  318B   	fcall	_LED_flashes_three_times
 12800     0BFE                     l4373:
 12801                           
 12802                           ;monitor_sync.c: 38: LED_flashes_three_times();
 12803     0BFE  3196  2610  318B   	fcall	_LED_flashes_three_times
 12804     0C01                     l4375:
 12805                           
 12806                           ;monitor_sync.c: 39: LED_flashes_three_times();
 12807     0C01  3196  2610  318B   	fcall	_LED_flashes_three_times
 12808     0C04                     l4377:
 12809                           
 12810                           ;monitor_sync.c: 40: reset_long_press_flag(b1);
 12811     0C04  0140               	movlb	0	; select bank0
 12812     0C05  084D               	movf	monitoring_sync@b1,w
 12813     0C06  00A0               	movwf	reset_long_press_flag@b
 12814     0C07  3000               	movlw	0
 12815     0C08  00A1               	movwf	reset_long_press_flag@b+1
 12816     0C09  3194  240C  318B   	fcall	_reset_long_press_flag
 12817     0C0C                     l4379:
 12818                           
 12819                           ;monitor_sync.c: 41: *state = STATE_CALIBRATE;
 12820     0C0C  0140               	movlb	0	; select bank0
 12821     0C0D  0851               	movf	monitoring_sync@state,w
 12822     0C0E  0086               	movwf	6
 12823     0C0F  0187               	clrf	7
 12824     0C10  3004               	movlw	4
 12825     0C11  0081               	movwf	1
 12826     0C12                     l4381:
 12827                           
 12828                           ;monitor_sync.c: 42: *b1_clicked_count = 0;
 12829     0C12  084F               	movf	monitoring_sync@b1_clicked_count,w
 12830     0C13  0086               	movwf	6
 12831     0C14  0187               	clrf	7
 12832     0C15  0181               	clrf	1
 12833     0C16                     l4383:
 12834                           
 12835                           ;monitor_sync.c: 43: };;monitor_sync.c: 44: if( is_long_press(b2)){
 12836     0C16  0140               	movlb	0	; select bank0
 12837     0C17  084E               	movf	monitoring_sync@b2,w
 12838     0C18  00A0               	movwf	is_long_press@b
 12839     0C19  3001               	movlw	1
 12840     0C1A  00A1               	movwf	is_long_press@b+1
 12841     0C1B  3193  23FC  318B   	fcall	_is_long_press
 12842     0C1E  3A00               	xorlw	0
 12843     0C1F  1903               	skipnz
 12844     0C20  2C22               	goto	u3811
 12845     0C21  2C23               	goto	u3810
 12846     0C22                     u3811:
 12847     0C22  2C46               	goto	l554
 12848     0C23                     u3810:
 12849     0C23                     l4385:
 12850                           
 12851                           ;monitor_sync.c: 45: printf("b2 long press \r\n");
 12852     0C23  3047               	movlw	low (STR_21| (0+32768))
 12853     0C24  0140               	movlb	0	; select bank0
 12854     0C25  00AE               	movwf	printf@f
 12855     0C26  3099               	movlw	high (STR_21| (0+32768))
 12856     0C27  00AF               	movwf	printf@f+1
 12857     0C28  3183  23A0  318B   	fcall	_printf
 12858     0C2B                     l4387:
 12859                           
 12860                           ;monitor_sync.c: 46: LED_flashes_three_times();
 12861     0C2B  3196  2610  318B   	fcall	_LED_flashes_three_times
 12862     0C2E                     l4389:
 12863                           
 12864                           ;monitor_sync.c: 47: LED_flashes_three_times();
 12865     0C2E  3196  2610  318B   	fcall	_LED_flashes_three_times
 12866     0C31                     l4391:
 12867                           
 12868                           ;monitor_sync.c: 48: LED_flashes_three_times();
 12869     0C31  3196  2610  318B   	fcall	_LED_flashes_three_times
 12870     0C34                     l4393:
 12871                           
 12872                           ;monitor_sync.c: 49: reset_long_press_flag(b2);
 12873     0C34  0140               	movlb	0	; select bank0
 12874     0C35  084E               	movf	monitoring_sync@b2,w
 12875     0C36  00A0               	movwf	reset_long_press_flag@b
 12876     0C37  3001               	movlw	1
 12877     0C38  00A1               	movwf	reset_long_press_flag@b+1
 12878     0C39  3194  240C  318B   	fcall	_reset_long_press_flag
 12879     0C3C                     l4395:
 12880                           
 12881                           ;monitor_sync.c: 50: *state = STATE_MEASURE;
 12882     0C3C  0140               	movlb	0	; select bank0
 12883     0C3D  0851               	movf	monitoring_sync@state,w
 12884     0C3E  0086               	movwf	6
 12885     0C3F  0187               	clrf	7
 12886     0C40  3002               	movlw	2
 12887     0C41  0081               	movwf	1
 12888     0C42                     l4397:
 12889                           
 12890                           ;monitor_sync.c: 51: *b1_clicked_count = 0;
 12891     0C42  084F               	movf	monitoring_sync@b1_clicked_count,w
 12892     0C43  0086               	movwf	6
 12893     0C44  0187               	clrf	7
 12894     0C45  0181               	clrf	1
 12895     0C46                     l554:
 12896     0C46  0008               	return
 12897     0C47                     __end_of_monitoring_sync:
 12898                           
 12899                           	psect	text21
 12900     1414                     __ptext21:	
 12901 ;; *************** function _reset_single_click_flag *****************
 12902 ;; Defined at:
 12903 ;;		line 141 in file "mybutton.c"
 12904 ;; Parameters:    Size  Location     Type
 12905 ;;  b               2    0[BANK0 ] PTR struct mybutton
 12906 ;;		 -> main@b2(27), main@b1(27), 
 12907 ;; Auto vars:     Size  Location     Type
 12908 ;;		None
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      void 
 12911 ;; Registers used:
 12912 ;;		wreg, fsr1l, fsr1h, status,2
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12921 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12922 ;;Total ram usage:        2 bytes
 12923 ;; Hardware stack levels used: 1
 12924 ;; Hardware stack levels required when called: 2
 12925 ;; This function calls:
 12926 ;;		Nothing
 12927 ;; This function is called by:
 12928 ;;		_monitoring_sync
 12929 ;; This function uses a non-reentrant model
 12930 ;;
 12931                           
 12932     1414                     _reset_single_click_flag:	
 12933                           ;psect for function _reset_single_click_flag
 12934                           
 12935     1414                     l4279:	
 12936                           ;incstack = 0
 12937                           ; Regs used in _reset_single_click_flag: [wreg+fsr1l+fsr1h+status,2]
 12938                           
 12939                           
 12940                           ;mybutton.c: 142: b->single_clicked_flag = 0;
 12941     1414  0140               	movlb	0	; select bank0
 12942     1415  0820               	movf	reset_single_click_flag@b,w
 12943     1416  0086               	movwf	6
 12944     1417  0821               	movf	reset_single_click_flag@b+1,w
 12945     1418  0087               	movwf	7
 12946     1419  3158               	addfsr 1,24
 12947     141A  0181               	clrf	1
 12948     141B                     l403:
 12949     141B  0008               	return
 12950     141C                     __end_of_reset_single_click_flag:
 12951                           
 12952                           	psect	text22
 12953     140C                     __ptext22:	
 12954 ;; *************** function _reset_long_press_flag *****************
 12955 ;; Defined at:
 12956 ;;		line 149 in file "mybutton.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;  b               2    0[BANK0 ] PTR struct mybutton
 12959 ;;		 -> main@b2(27), main@b1(27), 
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;		None
 12962 ;; Return value:  Size  Location     Type
 12963 ;;                  1    wreg      void 
 12964 ;; Registers used:
 12965 ;;		wreg, fsr1l, fsr1h, status,2
 12966 ;; Tracked objects:
 12967 ;;		On entry : 0/0
 12968 ;;		On exit  : 0/0
 12969 ;;		Unchanged: 0/0
 12970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12971 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;Total ram usage:        2 bytes
 12976 ;; Hardware stack levels used: 1
 12977 ;; Hardware stack levels required when called: 2
 12978 ;; This function calls:
 12979 ;;		Nothing
 12980 ;; This function is called by:
 12981 ;;		_monitoring_sync
 12982 ;; This function uses a non-reentrant model
 12983 ;;
 12984                           
 12985     140C                     _reset_long_press_flag:	
 12986                           ;psect for function _reset_long_press_flag
 12987                           
 12988     140C                     l4281:	
 12989                           ;incstack = 0
 12990                           ; Regs used in _reset_long_press_flag: [wreg+fsr1l+fsr1h+status,2]
 12991                           
 12992                           
 12993                           ;mybutton.c: 150: b->long_press_flag = 0;
 12994     140C  0140               	movlb	0	; select bank0
 12995     140D  0820               	movf	reset_long_press_flag@b,w
 12996     140E  0086               	movwf	6
 12997     140F  0821               	movf	reset_long_press_flag@b+1,w
 12998     1410  0087               	movwf	7
 12999     1411  315A               	addfsr 1,26
 13000     1412  0181               	clrf	1
 13001     1413                     l409:
 13002     1413  0008               	return
 13003     1414                     __end_of_reset_long_press_flag:
 13004                           
 13005                           	psect	text23
 13006     1404                     __ptext23:	
 13007 ;; *************** function _is_single_click *****************
 13008 ;; Defined at:
 13009 ;;		line 129 in file "mybutton.c"
 13010 ;; Parameters:    Size  Location     Type
 13011 ;;  b               2    0[BANK0 ] PTR struct mybutton
 13012 ;;		 -> main@b2(27), main@b1(27), 
 13013 ;; Auto vars:     Size  Location     Type
 13014 ;;		None
 13015 ;; Return value:  Size  Location     Type
 13016 ;;                  1    wreg      unsigned char 
 13017 ;; Registers used:
 13018 ;;		wreg, fsr1l, fsr1h
 13019 ;; Tracked objects:
 13020 ;;		On entry : 0/0
 13021 ;;		On exit  : 0/0
 13022 ;;		Unchanged: 0/0
 13023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13027 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13028 ;;Total ram usage:        2 bytes
 13029 ;; Hardware stack levels used: 1
 13030 ;; Hardware stack levels required when called: 2
 13031 ;; This function calls:
 13032 ;;		Nothing
 13033 ;; This function is called by:
 13034 ;;		_monitoring_sync
 13035 ;; This function uses a non-reentrant model
 13036 ;;
 13037                           
 13038     1404                     _is_single_click:	
 13039                           ;psect for function _is_single_click
 13040                           
 13041     1404                     l4271:	
 13042                           ;incstack = 0
 13043                           ; Regs used in _is_single_click: [wregfsr1]
 13044                           
 13045                           
 13046                           ;mybutton.c: 130: return b->single_clicked_flag;
 13047     1404  0140               	movlb	0	; select bank0
 13048     1405  0820               	movf	is_single_click@b,w
 13049     1406  0086               	movwf	6
 13050     1407  0821               	movf	is_single_click@b+1,w
 13051     1408  0087               	movwf	7
 13052     1409  3158               	addfsr 1,24
 13053     140A  0801               	movf	1,w
 13054     140B                     l394:
 13055     140B  0008               	return
 13056     140C                     __end_of_is_single_click:
 13057                           
 13058                           	psect	text24
 13059     13FC                     __ptext24:	
 13060 ;; *************** function _is_long_press *****************
 13061 ;; Defined at:
 13062 ;;		line 137 in file "mybutton.c"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;  b               2    0[BANK0 ] PTR struct mybutton
 13065 ;;		 -> main@b2(27), main@b1(27), 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;		None
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  1    wreg      unsigned char 
 13070 ;; Registers used:
 13071 ;;		wreg, fsr1l, fsr1h
 13072 ;; Tracked objects:
 13073 ;;		On entry : 0/0
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13077 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13080 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13081 ;;Total ram usage:        2 bytes
 13082 ;; Hardware stack levels used: 1
 13083 ;; Hardware stack levels required when called: 2
 13084 ;; This function calls:
 13085 ;;		Nothing
 13086 ;; This function is called by:
 13087 ;;		_monitoring_sync
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           
 13091     13FC                     _is_long_press:	
 13092                           ;psect for function _is_long_press
 13093                           
 13094     13FC                     l4275:	
 13095                           ;incstack = 0
 13096                           ; Regs used in _is_long_press: [wregfsr1]
 13097                           
 13098                           
 13099                           ;mybutton.c: 138: return b->long_press_flag;
 13100     13FC  0140               	movlb	0	; select bank0
 13101     13FD  0820               	movf	is_long_press@b,w
 13102     13FE  0086               	movwf	6
 13103     13FF  0821               	movf	is_long_press@b+1,w
 13104     1400  0087               	movwf	7
 13105     1401  315A               	addfsr 1,26
 13106     1402  0801               	movf	1,w
 13107     1403                     l400:
 13108     1403  0008               	return
 13109     1404                     __end_of_is_long_press:
 13110                           
 13111                           	psect	text25
 13112     1610                     __ptext25:	
 13113 ;; *************** function _LED_flashes_three_times *****************
 13114 ;; Defined at:
 13115 ;;		line 9 in file "led.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;		None
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;  i               2    1[BANK0 ] int 
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  1    wreg      void 
 13122 ;; Registers used:
 13123 ;;		wreg, status,2
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13133 ;;Total ram usage:        3 bytes
 13134 ;; Hardware stack levels used: 1
 13135 ;; Hardware stack levels required when called: 2
 13136 ;; This function calls:
 13137 ;;		Nothing
 13138 ;; This function is called by:
 13139 ;;		_main
 13140 ;;		_monitoring_sync
 13141 ;; This function uses a non-reentrant model
 13142 ;;
 13143                           
 13144     1610                     _LED_flashes_three_times:	
 13145                           ;psect for function _LED_flashes_three_times
 13146                           
 13147     1610                     l3251:	
 13148                           ;incstack = 0
 13149                           ; Regs used in _LED_flashes_three_times: [wreg+status,2]
 13150                           
 13151                           
 13152                           ;led.c: 10: for (int i = 0; i < 3; i++) {
 13153     1610  0140               	movlb	0	; select bank0
 13154     1611  01A1               	clrf	LED_flashes_three_times@i
 13155     1612  01A2               	clrf	LED_flashes_three_times@i+1
 13156     1613                     l343:	
 13157                           ;led.c: 12: do { LATCbits.LATC2 = 0; } while(0);
 13158                           
 13159     1613  0140               	movlb	0	; select bank0
 13160     1614  111A               	bcf	26,2	;volatile
 13161     1615                     l3257:
 13162                           
 13163                           ;led.c: 13: _delay((unsigned long)((50)*(1000000/4000.0)));
 13164     1615  3011               	movlw	17
 13165     1616  0140               	movlb	0	; select bank0
 13166     1617  00A0               	movwf	??_LED_flashes_three_times
 13167     1618  303A               	movlw	58
 13168     1619                     u4007:
 13169     1619  0B89               	decfsz	9,f
 13170     161A  2E19               	goto	u4007
 13171     161B  0BA0               	decfsz	??_LED_flashes_three_times,f
 13172     161C  2E19               	goto	u4007
 13173     161D  0000               	nop
 13174     161E                     l3259:
 13175     161E  0140               	movlb	0	; select bank0
 13176     161F  151A               	bsf	26,2	;volatile
 13177     1620                     l346:
 13178                           
 13179                           ;led.c: 16: _delay((unsigned long)((50)*(1000000/4000.0)));
 13180     1620  3011               	movlw	17
 13181     1621  0140               	movlb	0	; select bank0
 13182     1622  00A0               	movwf	??_LED_flashes_three_times
 13183     1623  303A               	movlw	58
 13184     1624                     u4017:
 13185     1624  0B89               	decfsz	9,f
 13186     1625  2E24               	goto	u4017
 13187     1626  0BA0               	decfsz	??_LED_flashes_three_times,f
 13188     1627  2E24               	goto	u4017
 13189     1628  0000               	nop
 13190     1629  3001               	movlw	1
 13191     162A  0140               	movlb	0	; select bank0
 13192     162B  07A1               	addwf	LED_flashes_three_times@i,f
 13193     162C  3000               	movlw	0
 13194     162D  3DA2               	addwfc	LED_flashes_three_times@i+1,f
 13195     162E  0822               	movf	LED_flashes_three_times@i+1,w
 13196     162F  3A80               	xorlw	128
 13197     1630  00A0               	movwf	??_LED_flashes_three_times
 13198     1631  3080               	movlw	128
 13199     1632  0220               	subwf	??_LED_flashes_three_times,w
 13200     1633  1D03               	skipz
 13201     1634  2E37               	goto	u2365
 13202     1635  3003               	movlw	3
 13203     1636  0221               	subwf	LED_flashes_three_times@i,w
 13204     1637                     u2365:
 13205     1637  1C03               	skipc
 13206     1638  2E3A               	goto	u2361
 13207     1639  2E3B               	goto	u2360
 13208     163A                     u2361:
 13209     163A  2E13               	goto	l343
 13210     163B                     u2360:
 13211     163B                     l347:
 13212     163B  0008               	return
 13213     163C                     __end_of_LED_flashes_three_times:
 13214                           
 13215                           	psect	text26
 13216     1587                     __ptext26:	
 13217 ;; *************** function _measurement *****************
 13218 ;; Defined at:
 13219 ;;		line 14 in file "measurement.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;  state           1    wreg     PTR enum E10355
 13222 ;;		 -> main@state(1), 
 13223 ;;  value           1   45[BANK0 ] PTR struct values
 13224 ;;		 -> main@sensor_value(37), 
 13225 ;; Auto vars:     Size  Location     Type
 13226 ;;  state           1   47[BANK0 ] PTR enum E10355
 13227 ;;		 -> main@state(1), 
 13228 ;; Return value:  Size  Location     Type
 13229 ;;                  1    wreg      void 
 13230 ;; Registers used:
 13231 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13232 ;; Tracked objects:
 13233 ;;		On entry : 0/0
 13234 ;;		On exit  : 0/0
 13235 ;;		Unchanged: 0/0
 13236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13237 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13241 ;;Total ram usage:        3 bytes
 13242 ;; Hardware stack levels used: 1
 13243 ;; Hardware stack levels required when called: 5
 13244 ;; This function calls:
 13245 ;;		_enable_tx_transmit
 13246 ;;		_enable_uart_printf
 13247 ;;		_printf
 13248 ;;		_send_measured_command
 13249 ;; This function is called by:
 13250 ;;		_main
 13251 ;; This function uses a non-reentrant model
 13252 ;;
 13253                           
 13254     1587                     _measurement:	
 13255                           ;psect for function _measurement
 13256                           
 13257     1587                     l600:	
 13258                           ;incstack = 0
 13259                           ; Regs used in _measurement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13260                           ;measurement.c: 15: do { LATCbits.LATC2 = 0; } while(0);
 13261                           
 13262     1587  0140               	movlb	0	; select bank0
 13263     1588  111A               	bcf	26,2	;volatile
 13264     1589                     l3645:
 13265                           
 13266                           ;measurement.c: 17: enable_uart_printf();
 13267     1589  3193  23EB  3195   	fcall	_enable_uart_printf
 13268     158C                     l3647:
 13269                           
 13270                           ;measurement.c: 18: printf("[Request] Send data request to pH485_probe - MEASUREMENT MOD
      +                          E ---  \r\n");
 13271     158C  30A6               	movlw	low (STR_22| (0+32768))
 13272     158D  0140               	movlb	0	; select bank0
 13273     158E  00AE               	movwf	printf@f
 13274     158F  3092               	movlw	high (STR_22| (0+32768))
 13275     1590  00AF               	movwf	printf@f+1
 13276     1591  3183  23A0  3195   	fcall	_printf
 13277     1594                     l3649:
 13278                           
 13279                           ;measurement.c: 19: _delay((unsigned long)((10)*(1000000/4000.0)));
 13280     1594  3004               	movlw	4
 13281     1595  0140               	movlb	0	; select bank0
 13282     1596  00CE               	movwf	??_measurement
 13283     1597  303D               	movlw	61
 13284     1598                     u4027:
 13285     1598  0B89               	decfsz	9,f
 13286     1599  2D98               	goto	u4027
 13287     159A  0BCE               	decfsz	??_measurement,f
 13288     159B  2D98               	goto	u4027
 13289     159C  3200               	nop2
 13290     159D                     l3651:
 13291                           
 13292                           ;measurement.c: 20: enable_tx_transmit();
 13293     159D  3194  2486  3195   	fcall	_enable_tx_transmit
 13294     15A0                     l3653:
 13295                           
 13296                           ;measurement.c: 23: send_measured_command();
 13297     15A0  3195  2505  3195   	fcall	_send_measured_command
 13298     15A3                     l3655:
 13299     15A3  0140               	movlb	0	; select bank0
 13300     15A4  151A               	bsf	26,2	;volatile
 13301     15A5                     l604:
 13302     15A5  0008               	return
 13303     15A6                     __end_of_measurement:
 13304                           
 13305                           	psect	text27
 13306     1505                     __ptext27:	
 13307 ;; *************** function _send_measured_command *****************
 13308 ;; Defined at:
 13309 ;;		line 28 in file "measurement.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;		None
 13312 ;; Auto vars:     Size  Location     Type
 13313 ;;  txbuf          32    6[BANK0 ] unsigned char [32]
 13314 ;; Return value:  Size  Location     Type
 13315 ;;                  1    wreg      void 
 13316 ;; Registers used:
 13317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13318 ;; Tracked objects:
 13319 ;;		On entry : 0/0
 13320 ;;		On exit  : 0/0
 13321 ;;		Unchanged: 0/0
 13322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13325 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13326 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13327 ;;Total ram usage:       33 bytes
 13328 ;; Hardware stack levels used: 1
 13329 ;; Hardware stack levels required when called: 4
 13330 ;; This function calls:
 13331 ;;		_EUSART1_Write_1
 13332 ;; This function is called by:
 13333 ;;		_measurement
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337     1505                     _send_measured_command:	
 13338                           ;psect for function _send_measured_command
 13339                           
 13340     1505                     l3503:	
 13341                           ;incstack = 0
 13342                           ; Regs used in _send_measured_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13343                           
 13344                           
 13345                           ;measurement.c: 29: char txbuf[32] = {0x01, 0x03, 0x00, 0x01, 0x00, 0x04, 0x15, 0xC9};
 13346     1505  30A0               	movlw	low send_measured_command@F10571
 13347     1506  0086               	movwf	6
 13348     1507  3001               	movlw	high send_measured_command@F10571
 13349     1508  0087               	movwf	7
 13350     1509  3026               	movlw	low send_measured_command@txbuf
 13351     150A  0084               	movwf	4
 13352     150B  3000               	movlw	high send_measured_command@txbuf
 13353     150C  0085               	movwf	5
 13354     150D  3020               	movlw	32
 13355     150E  0140               	movlb	0	; select bank0
 13356     150F  00A5               	movwf	??_send_measured_command
 13357     1510                     u2910:
 13358     1510  0016               	moviw fsr1++
 13359     1511  001A               	movwi fsr0++
 13360     1512  0BA5               	decfsz	??_send_measured_command,f
 13361     1513  2D10               	goto	u2910
 13362     1514                     l3505:
 13363                           
 13364                           ;measurement.c: 30: EUSART1_Write_1(txbuf, 8);
 13365     1514  3008               	movlw	8
 13366     1515  00A1               	movwf	EUSART1_Write_1@length
 13367     1516  3026               	movlw	(low (send_measured_command@txbuf| 0))& (0+255)
 13368     1517  3188  2001  3195   	fcall	_EUSART1_Write_1
 13369     151A                     l609:
 13370     151A  0008               	return
 13371     151B                     __end_of_send_measured_command:
 13372                           
 13373                           	psect	text28
 13374     170C                     __ptext28:	
 13375 ;; *************** function _measured_adc *****************
 13376 ;; Defined at:
 13377 ;;		line 63 in file "calibration.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;		None
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;  measured_adc    8   46[BANK0 ] unsigned char [8]
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  1    wreg      void 
 13384 ;; Registers used:
 13385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13392 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13394 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13395 ;;Total ram usage:        9 bytes
 13396 ;; Hardware stack levels used: 1
 13397 ;; Hardware stack levels required when called: 4
 13398 ;; This function calls:
 13399 ;;		_EUSART1_Write_1
 13400 ;;		_enable_tx_transmit
 13401 ;;		_enable_uart_printf
 13402 ;;		_printf
 13403 ;; This function is called by:
 13404 ;;		_main
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408     170C                     _measured_adc:	
 13409                           ;psect for function _measured_adc
 13410                           
 13411     170C                     l3711:	
 13412                           ;incstack = 0
 13413                           ; Regs used in _measured_adc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13414                           
 13415                           
 13416                           ;calibration.c: 64: enable_uart_printf();
 13417     170C  3193  23EB  3197   	fcall	_enable_uart_printf
 13418     170F                     l3713:
 13419                           
 13420                           ;calibration.c: 65: printf("[Request] Send ADC_data request to pH485_probe - CALIBRATION
      +                           MODE ---  \r\n");
 13421     170F  305C               	movlw	low (STR_24| (0+32768))
 13422     1710  0140               	movlb	0	; select bank0
 13423     1711  00AE               	movwf	printf@f
 13424     1712  3092               	movlw	high (STR_24| (0+32768))
 13425     1713  00AF               	movwf	printf@f+1
 13426     1714  3183  23A0  3197   	fcall	_printf
 13427     1717                     l3715:
 13428                           
 13429                           ;calibration.c: 66: _delay((unsigned long)((10)*(1000000/4000.0)));
 13430     1717  3004               	movlw	4
 13431     1718  0140               	movlb	0	; select bank0
 13432     1719  00CD               	movwf	??_measured_adc
 13433     171A  303D               	movlw	61
 13434     171B                     u4037:
 13435     171B  0B89               	decfsz	9,f
 13436     171C  2F1B               	goto	u4037
 13437     171D  0BCD               	decfsz	??_measured_adc,f
 13438     171E  2F1B               	goto	u4037
 13439     171F  3200               	nop2
 13440     1720                     l3717:
 13441                           
 13442                           ;calibration.c: 67: enable_tx_transmit();
 13443     1720  3194  2486  3197   	fcall	_enable_tx_transmit
 13444     1723                     l3719:
 13445                           
 13446                           ;calibration.c: 68: _delay((unsigned long)((10)*(1000000/4000.0)));
 13447     1723  3004               	movlw	4
 13448     1724  0140               	movlb	0	; select bank0
 13449     1725  00CD               	movwf	??_measured_adc
 13450     1726  303D               	movlw	61
 13451     1727                     u4047:
 13452     1727  0B89               	decfsz	9,f
 13453     1728  2F27               	goto	u4047
 13454     1729  0BCD               	decfsz	??_measured_adc,f
 13455     172A  2F27               	goto	u4047
 13456     172B  3200               	nop2
 13457     172C                     l3721:
 13458                           
 13459                           ;calibration.c: 71: char measured_adc_command[8] = {0x01, 0x03, 0x00, 0x66, 0x00, 0x01, 
      +                          0x64, 0x15};
 13460     172C  3063               	movlw	low measured_adc@F10605
 13461     172D  0086               	movwf	6
 13462     172E  3001               	movlw	high measured_adc@F10605
 13463     172F  0087               	movwf	7
 13464     1730  304E               	movlw	low measured_adc@measured_adc_command
 13465     1731  0084               	movwf	4
 13466     1732  3000               	movlw	high measured_adc@measured_adc_command
 13467     1733  0085               	movwf	5
 13468     1734  3008               	movlw	8
 13469     1735  0140               	movlb	0	; select bank0
 13470     1736  00CD               	movwf	??_measured_adc
 13471     1737                     u3050:
 13472     1737  0016               	moviw fsr1++
 13473     1738  001A               	movwi fsr0++
 13474     1739  0BCD               	decfsz	??_measured_adc,f
 13475     173A  2F37               	goto	u3050
 13476     173B                     l3723:
 13477     173B  111A               	bcf	26,2	;volatile
 13478     173C                     l3725:
 13479                           
 13480                           ;calibration.c: 73: EUSART1_Write_1(measured_adc_command, 8);
 13481     173C  3008               	movlw	8
 13482     173D  00A1               	movwf	EUSART1_Write_1@length
 13483     173E  304E               	movlw	(low (measured_adc@measured_adc_command| 0))& (0+255)
 13484     173F  3188  2001  3197   	fcall	_EUSART1_Write_1
 13485     1742                     l3727:
 13486     1742  0140               	movlb	0	; select bank0
 13487     1743  151A               	bsf	26,2	;volatile
 13488     1744                     l683:
 13489     1744  0008               	return
 13490     1745                     __end_of_measured_adc:
 13491                           
 13492                           	psect	text29
 13493     0801                     __ptext29:	
 13494 ;; *************** function _EUSART1_Write_1 *****************
 13495 ;; Defined at:
 13496 ;;		line 48 in file "uart.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  txbuf           1    wreg     PTR unsigned char 
 13499 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), measured_adc@measu
      +red_adc_command(8), set_bottom_calibrate_point@bottom_slop_point_command(32), 
 13500 ;;		 -> set_top_calibrate_point@top_zero_point_command(32), send_measured_command@txbuf(32), 
 13501 ;;  length          1    1[BANK0 ] unsigned char 
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;  txbuf           1    4[BANK0 ] PTR unsigned char 
 13504 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(8), save_top_adc_point@save_top_adc_command(8), measured_adc@measu
      +red_adc_command(8), set_bottom_calibrate_point@bottom_slop_point_command(32), 
 13505 ;;		 -> set_top_calibrate_point@top_zero_point_command(32), send_measured_command@txbuf(32), 
 13506 ;;  i               1    3[BANK0 ] unsigned char 
 13507 ;; Return value:  Size  Location     Type
 13508 ;;                  1    wreg      void 
 13509 ;; Registers used:
 13510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13511 ;; Tracked objects:
 13512 ;;		On entry : 0/0
 13513 ;;		On exit  : 0/0
 13514 ;;		Unchanged: 0/0
 13515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13516 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13519 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13520 ;;Total ram usage:        4 bytes
 13521 ;; Hardware stack levels used: 1
 13522 ;; Hardware stack levels required when called: 3
 13523 ;; This function calls:
 13524 ;;		_EUSART1_Write
 13525 ;; This function is called by:
 13526 ;;		_send_measured_command
 13527 ;;		_measured_adc
 13528 ;;		_save_top_adc_point
 13529 ;;		_save_bottom_adc_point
 13530 ;;		_set_top_calibrate_point
 13531 ;;		_set_bottom_calibrate_point
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535     0801                     _EUSART1_Write_1:	
 13536                           ;psect for function _EUSART1_Write_1
 13537                           
 13538                           
 13539                           ;incstack = 0
 13540                           ; Regs used in _EUSART1_Write_1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13541                           ;EUSART1_Write_1@txbuf stored from wreg
 13542     0801  0140               	movlb	0	; select bank0
 13543     0802  00A4               	movwf	EUSART1_Write_1@txbuf
 13544     0803                     l3113:
 13545                           
 13546                           ;uart.c: 49: for(uint8_t i=0; i<length; i++){
 13547     0803  01A3               	clrf	EUSART1_Write_1@i
 13548     0804  2814               	goto	l3119
 13549     0805                     l3115:
 13550                           
 13551                           ;uart.c: 50: EUSART1_Write(txbuf[i]);
 13552     0805  0823               	movf	EUSART1_Write_1@i,w
 13553     0806  0724               	addwf	EUSART1_Write_1@txbuf,w
 13554     0807  00A2               	movwf	??_EUSART1_Write_1
 13555     0808  0822               	movf	??_EUSART1_Write_1,w
 13556     0809  0086               	movwf	6
 13557     080A  0187               	clrf	7
 13558     080B  0801               	movf	1,w
 13559     080C  3194  246D  3188   	fcall	_EUSART1_Write
 13560     080F                     l3117:
 13561     080F  3001               	movlw	1
 13562     0810  0140               	movlb	0	; select bank0
 13563     0811  00A2               	movwf	??_EUSART1_Write_1
 13564     0812  0822               	movf	??_EUSART1_Write_1,w
 13565     0813  07A3               	addwf	EUSART1_Write_1@i,f
 13566     0814                     l3119:
 13567     0814  0821               	movf	EUSART1_Write_1@length,w
 13568     0815  0223               	subwf	EUSART1_Write_1@i,w
 13569     0816  1C03               	skipc
 13570     0817  2819               	goto	u2181
 13571     0818  281A               	goto	u2180
 13572     0819                     u2181:
 13573     0819  2805               	goto	l3115
 13574     081A                     u2180:
 13575     081A                     l491:
 13576     081A  0008               	return
 13577     081B                     __end_of_EUSART1_Write_1:
 13578                           
 13579                           	psect	text30
 13580     146D                     __ptext30:	
 13581 ;; *************** function _EUSART1_Write *****************
 13582 ;; Defined at:
 13583 ;;		line 35 in file "uart.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;  txData          1    wreg     unsigned char 
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;  txData          1    0[BANK0 ] unsigned char 
 13588 ;; Return value:  Size  Location     Type
 13589 ;;                  1    wreg      void 
 13590 ;; Registers used:
 13591 ;;		wreg
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13601 ;;Total ram usage:        1 bytes
 13602 ;; Hardware stack levels used: 1
 13603 ;; Hardware stack levels required when called: 2
 13604 ;; This function calls:
 13605 ;;		Nothing
 13606 ;; This function is called by:
 13607 ;;		_EUSART1_Write_1
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611     146D                     _EUSART1_Write:	
 13612                           ;psect for function _EUSART1_Write
 13613                           
 13614                           
 13615                           ;incstack = 0
 13616                           ; Regs used in _EUSART1_Write: [wreg]
 13617                           ;EUSART1_Write@txData stored from wreg
 13618     146D  0140               	movlb	0	; select bank0
 13619     146E  00A0               	movwf	EUSART1_Write@txData
 13620     146F                     l2867:
 13621     146F                     l479:	
 13622                           ;uart.c: 37: while(0 == PIR3bits.TX1IF);
 13623                           
 13624     146F  014E               	movlb	14	; select bank14
 13625     1470  1E0F               	btfss	15,4	;volatile
 13626     1471  2C73               	goto	u1711
 13627     1472  2C74               	goto	u1710
 13628     1473                     u1711:
 13629     1473  2C6F               	goto	l479
 13630     1474                     u1710:
 13631     1474                     l2869:
 13632                           
 13633                           ;uart.c: 38: TX1REG = txData;
 13634     1474  0140               	movlb	0	; select bank0
 13635     1475  0820               	movf	EUSART1_Write@txData,w
 13636     1476  0142               	movlb	2	; select bank2
 13637     1477  009A               	movwf	26	;volatile
 13638     1478                     l482:
 13639     1478  0008               	return
 13640     1479                     __end_of_EUSART1_Write:
 13641                           
 13642                           	psect	text31
 13643     091D                     __ptext31:	
 13644 ;; *************** function _init_button *****************
 13645 ;; Defined at:
 13646 ;;		line 12 in file "mybutton.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;  b               2    0[BANK0 ] PTR struct mybutton
 13649 ;;		 -> main@b2(27), main@b1(27), 
 13650 ;; Auto vars:     Size  Location     Type
 13651 ;;		None
 13652 ;; Return value:  Size  Location     Type
 13653 ;;                  1    wreg      void 
 13654 ;; Registers used:
 13655 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13656 ;; Tracked objects:
 13657 ;;		On entry : 0/0
 13658 ;;		On exit  : 0/0
 13659 ;;		Unchanged: 0/0
 13660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13665 ;;Total ram usage:        4 bytes
 13666 ;; Hardware stack levels used: 1
 13667 ;; Hardware stack levels required when called: 2
 13668 ;; This function calls:
 13669 ;;		Nothing
 13670 ;; This function is called by:
 13671 ;;		_main
 13672 ;; This function uses a non-reentrant model
 13673 ;;
 13674                           
 13675     091D                     _init_button:	
 13676                           ;psect for function _init_button
 13677                           
 13678     091D                     l4283:	
 13679                           ;incstack = 0
 13680                           ; Regs used in _init_button: [wreg+fsr1l+fsr1h+status,2+status,0]
 13681                           
 13682                           
 13683                           ;mybutton.c: 14: b->signals[0] = 1;
 13684     091D  0140               	movlb	0	; select bank0
 13685     091E  0820               	movf	init_button@b,w
 13686     091F  0086               	movwf	6
 13687     0920  0821               	movf	init_button@b+1,w
 13688     0921  0087               	movwf	7
 13689     0922  3001               	movlw	1
 13690     0923  0081               	movwf	1
 13691     0924                     l4285:
 13692                           
 13693                           ;mybutton.c: 15: b->signals[1] = 1;
 13694     0924  0820               	movf	init_button@b,w
 13695     0925  3E01               	addlw	1
 13696     0926  00A2               	movwf	??_init_button
 13697     0927  3000               	movlw	0
 13698     0928  3D21               	addwfc	init_button@b+1,w
 13699     0929  00A3               	movwf	??_init_button+1
 13700     092A  0822               	movf	??_init_button,w
 13701     092B  0086               	movwf	6
 13702     092C  0823               	movf	??_init_button+1,w
 13703     092D  0087               	movwf	7
 13704     092E  3001               	movlw	1
 13705     092F  0081               	movwf	1
 13706     0930                     l4287:
 13707                           
 13708                           ;mybutton.c: 17: b->falling_ts[0] = 1;
 13709     0930  0820               	movf	init_button@b,w
 13710     0931  0086               	movwf	6
 13711     0932  0821               	movf	init_button@b+1,w
 13712     0933  0087               	movwf	7
 13713     0934  3142               	addfsr 1,2
 13714     0935  3001               	movlw	1
 13715     0936  3FC0               	movwi [0]fsr1
 13716     0937  3000               	movlw	0
 13717     0938  3FC1               	movwi [1]fsr1
 13718     0939  3FC2               	movwi [2]fsr1
 13719     093A  3FC3               	movwi [3]fsr1
 13720     093B                     l4289:
 13721                           
 13722                           ;mybutton.c: 18: b->falling_ts[1] = 1;
 13723     093B  0820               	movf	init_button@b,w
 13724     093C  0086               	movwf	6
 13725     093D  0821               	movf	init_button@b+1,w
 13726     093E  0087               	movwf	7
 13727     093F  3146               	addfsr 1,6
 13728     0940  3001               	movlw	1
 13729     0941  3FC0               	movwi [0]fsr1
 13730     0942  3000               	movlw	0
 13731     0943  3FC1               	movwi [1]fsr1
 13732     0944  3FC2               	movwi [2]fsr1
 13733     0945  3FC3               	movwi [3]fsr1
 13734     0946                     l4291:
 13735                           
 13736                           ;mybutton.c: 19: b->rising_ts[0] = 1;
 13737     0946  0820               	movf	init_button@b,w
 13738     0947  0086               	movwf	6
 13739     0948  0821               	movf	init_button@b+1,w
 13740     0949  0087               	movwf	7
 13741     094A  314A               	addfsr 1,10
 13742     094B  3001               	movlw	1
 13743     094C  3FC0               	movwi [0]fsr1
 13744     094D  3000               	movlw	0
 13745     094E  3FC1               	movwi [1]fsr1
 13746     094F  3FC2               	movwi [2]fsr1
 13747     0950  3FC3               	movwi [3]fsr1
 13748     0951                     l4293:
 13749                           
 13750                           ;mybutton.c: 20: b->rising_ts[1] = 1;
 13751     0951  0820               	movf	init_button@b,w
 13752     0952  0086               	movwf	6
 13753     0953  0821               	movf	init_button@b+1,w
 13754     0954  0087               	movwf	7
 13755     0955  314E               	addfsr 1,14
 13756     0956  3001               	movlw	1
 13757     0957  3FC0               	movwi [0]fsr1
 13758     0958  3000               	movlw	0
 13759     0959  3FC1               	movwi [1]fsr1
 13760     095A  3FC2               	movwi [2]fsr1
 13761     095B  3FC3               	movwi [3]fsr1
 13762     095C                     l4295:
 13763                           
 13764                           ;mybutton.c: 22: b->single_click_tmps[0] = 0;
 13765     095C  0820               	movf	init_button@b,w
 13766     095D  0086               	movwf	6
 13767     095E  0821               	movf	init_button@b+1,w
 13768     095F  0087               	movwf	7
 13769     0960  3152               	addfsr 1,18
 13770     0961  0181               	clrf	1
 13771     0962                     l4297:
 13772                           
 13773                           ;mybutton.c: 23: b->single_click_tmps[1] = 0;
 13774     0962  0820               	movf	init_button@b,w
 13775     0963  0086               	movwf	6
 13776     0964  0821               	movf	init_button@b+1,w
 13777     0965  0087               	movwf	7
 13778     0966  3153               	addfsr 1,19
 13779     0967  0181               	clrf	1
 13780     0968                     l4299:
 13781                           
 13782                           ;mybutton.c: 24: b->double_click_tmps[0] = 0;
 13783     0968  0820               	movf	init_button@b,w
 13784     0969  0086               	movwf	6
 13785     096A  0821               	movf	init_button@b+1,w
 13786     096B  0087               	movwf	7
 13787     096C  3154               	addfsr 1,20
 13788     096D  0181               	clrf	1
 13789     096E                     l4301:
 13790                           
 13791                           ;mybutton.c: 25: b->double_click_tmps[1] = 0;
 13792     096E  0820               	movf	init_button@b,w
 13793     096F  0086               	movwf	6
 13794     0970  0821               	movf	init_button@b+1,w
 13795     0971  0087               	movwf	7
 13796     0972  3155               	addfsr 1,21
 13797     0973  0181               	clrf	1
 13798     0974                     l4303:
 13799                           
 13800                           ;mybutton.c: 26: b->long_press_tmps[0] = 0;
 13801     0974  0820               	movf	init_button@b,w
 13802     0975  0086               	movwf	6
 13803     0976  0821               	movf	init_button@b+1,w
 13804     0977  0087               	movwf	7
 13805     0978  3156               	addfsr 1,22
 13806     0979  0181               	clrf	1
 13807     097A                     l4305:
 13808                           
 13809                           ;mybutton.c: 27: b->long_press_tmps[1] = 0;
 13810     097A  0820               	movf	init_button@b,w
 13811     097B  0086               	movwf	6
 13812     097C  0821               	movf	init_button@b+1,w
 13813     097D  0087               	movwf	7
 13814     097E  3157               	addfsr 1,23
 13815     097F  0181               	clrf	1
 13816     0980                     l4307:
 13817                           
 13818                           ;mybutton.c: 29: b->single_clicked_flag = 0;
 13819     0980  0820               	movf	init_button@b,w
 13820     0981  0086               	movwf	6
 13821     0982  0821               	movf	init_button@b+1,w
 13822     0983  0087               	movwf	7
 13823     0984  3158               	addfsr 1,24
 13824     0985  0181               	clrf	1
 13825     0986                     l4309:
 13826                           
 13827                           ;mybutton.c: 30: b->double_clicked_flag = 0;
 13828     0986  0820               	movf	init_button@b,w
 13829     0987  0086               	movwf	6
 13830     0988  0821               	movf	init_button@b+1,w
 13831     0989  0087               	movwf	7
 13832     098A  3159               	addfsr 1,25
 13833     098B  0181               	clrf	1
 13834     098C                     l4311:
 13835                           
 13836                           ;mybutton.c: 31: b->long_press_flag = 0;
 13837     098C  0820               	movf	init_button@b,w
 13838     098D  0086               	movwf	6
 13839     098E  0821               	movf	init_button@b+1,w
 13840     098F  0087               	movwf	7
 13841     0990  315A               	addfsr 1,26
 13842     0991  0181               	clrf	1
 13843     0992                     l365:
 13844     0992  0008               	return
 13845     0993                     __end_of_init_button:
 13846                           
 13847                           	psect	text32
 13848     15C6                     __ptext32:	
 13849 ;; *************** function _i2c_slave_init *****************
 13850 ;; Defined at:
 13851 ;;		line 14 in file "i2c_slave.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;		None
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;  i               1    1[BANK0 ] unsigned char 
 13856 ;; Return value:  Size  Location     Type
 13857 ;;                  1    wreg      void 
 13858 ;; Registers used:
 13859 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13860 ;; Tracked objects:
 13861 ;;		On entry : 0/0
 13862 ;;		On exit  : 0/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13867 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13869 ;;Total ram usage:        2 bytes
 13870 ;; Hardware stack levels used: 1
 13871 ;; Hardware stack levels required when called: 2
 13872 ;; This function calls:
 13873 ;;		Nothing
 13874 ;; This function is called by:
 13875 ;;		_main
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879     15C6                     _i2c_slave_init:	
 13880                           ;psect for function _i2c_slave_init
 13881                           
 13882     15C6                     l3551:	
 13883                           ;incstack = 0
 13884                           ; Regs used in _i2c_slave_init: [wreg+fsr1l+fsr1h+status,2+status,0]
 13885                           
 13886                           
 13887                           ;i2c_slave.c: 15: SSP1STAT = 0x00;
 13888     15C6  0143               	movlb	3	; select bank3
 13889     15C7  018F               	clrf	15	;volatile
 13890     15C8                     l3553:
 13891                           
 13892                           ;i2c_slave.c: 16: SSP1CON1 = 0x36;
 13893     15C8  3036               	movlw	54
 13894     15C9  0090               	movwf	16	;volatile
 13895     15CA                     l3555:
 13896                           
 13897                           ;i2c_slave.c: 17: SSP1CON2 = 0x01;
 13898     15CA  3001               	movlw	1
 13899     15CB  0091               	movwf	17	;volatile
 13900     15CC                     l3557:
 13901                           
 13902                           ;i2c_slave.c: 20: SSP1ADD = 0x68 << 1;
 13903     15CC  30D0               	movlw	208
 13904     15CD  008D               	movwf	13	;volatile
 13905     15CE                     l3559:
 13906                           
 13907                           ;i2c_slave.c: 21: SSP1MSK = 0xFF;
 13908     15CE  30FF               	movlw	255
 13909     15CF  008E               	movwf	14	;volatile
 13910     15D0                     l3561:
 13911                           
 13912                           ;i2c_slave.c: 23: PIR3bits.SSP1IF = 0;
 13913     15D0  014E               	movlb	14	; select bank14
 13914     15D1  100F               	bcf	15,0	;volatile
 13915     15D2                     l3563:
 13916                           
 13917                           ;i2c_slave.c: 24: PIE3bits.SSP1IE = 1;
 13918     15D2  1419               	bsf	25,0	;volatile
 13919                           
 13920                           ;i2c_slave.c: 27: for (uint8_t i = 0; i < 64u; i++) {
 13921     15D3  0140               	movlb	0	; select bank0
 13922     15D4  01A1               	clrf	i2c_slave_init@i
 13923     15D5                     l3569:
 13924                           
 13925                           ;i2c_slave.c: 28: slaveData[i] = 0;
 13926     15D5  0821               	movf	i2c_slave_init@i,w
 13927     15D6  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 13928     15D7  0086               	movwf	6
 13929     15D8  3002               	movlw	2	; select bank4/5
 13930     15D9  0087               	movwf	7
 13931     15DA  0181               	clrf	1
 13932     15DB                     l3571:
 13933     15DB  3001               	movlw	1
 13934     15DC  00A0               	movwf	??_i2c_slave_init
 13935     15DD  0820               	movf	??_i2c_slave_init,w
 13936     15DE  07A1               	addwf	i2c_slave_init@i,f
 13937     15DF                     l3573:
 13938     15DF  3040               	movlw	64
 13939     15E0  0221               	subwf	i2c_slave_init@i,w
 13940     15E1  1C03               	skipc
 13941     15E2  2DE4               	goto	u2931
 13942     15E3  2DE5               	goto	u2930
 13943     15E4                     u2931:
 13944     15E4  2DD5               	goto	l3569
 13945     15E5                     u2930:
 13946     15E5                     l244:
 13947     15E5  0008               	return
 13948     15E6                     __end_of_i2c_slave_init:
 13949                           
 13950                           	psect	text33
 13951     14DD                     __ptext33:	
 13952 ;; *************** function _get_ticks_with_lock *****************
 13953 ;; Defined at:
 13954 ;;		line 12 in file "myisr.c"
 13955 ;; Parameters:    Size  Location     Type
 13956 ;;		None
 13957 ;; Auto vars:     Size  Location     Type
 13958 ;;  result          4    4[BANK0 ] unsigned long 
 13959 ;; Return value:  Size  Location     Type
 13960 ;;                  4    0[BANK0 ] unsigned long 
 13961 ;; Registers used:
 13962 ;;		wreg
 13963 ;; Tracked objects:
 13964 ;;		On entry : 0/0
 13965 ;;		On exit  : 0/0
 13966 ;;		Unchanged: 0/0
 13967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13968 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13969 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13972 ;;Total ram usage:        8 bytes
 13973 ;; Hardware stack levels used: 1
 13974 ;; Hardware stack levels required when called: 2
 13975 ;; This function calls:
 13976 ;;		Nothing
 13977 ;; This function is called by:
 13978 ;;		_main
 13979 ;;		_is_it_time_over
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983     14DD                     _get_ticks_with_lock:	
 13984                           ;psect for function _get_ticks_with_lock
 13985                           
 13986     14DD                     l3605:	
 13987                           ;incstack = 0
 13988                           ; Regs used in _get_ticks_with_lock: [wreg]
 13989                           
 13990                           
 13991                           ;myisr.c: 13: GIE = 0;
 13992     14DD  138B               	bcf	11,7	;volatile
 13993     14DE                     l3607:
 13994                           
 13995                           ;myisr.c: 14: uint32_t result = ticks;
 13996     14DE  087B               	movf	_ticks+3,w	;volatile
 13997     14DF  0140               	movlb	0	; select bank0
 13998     14E0  00A7               	movwf	get_ticks_with_lock@result+3
 13999     14E1  087A               	movf	_ticks+2,w	;volatile
 14000     14E2  00A6               	movwf	get_ticks_with_lock@result+2
 14001     14E3  0879               	movf	_ticks+1,w	;volatile
 14002     14E4  00A5               	movwf	get_ticks_with_lock@result+1
 14003     14E5  0878               	movf	_ticks,w	;volatile
 14004     14E6  00A4               	movwf	get_ticks_with_lock@result
 14005     14E7                     l3609:
 14006                           
 14007                           ;myisr.c: 15: GIE = 1;
 14008     14E7  178B               	bsf	11,7	;volatile
 14009                           
 14010                           ;myisr.c: 16: return result;
 14011     14E8  0827               	movf	get_ticks_with_lock@result+3,w
 14012     14E9  00A3               	movwf	?_get_ticks_with_lock+3
 14013     14EA  0826               	movf	get_ticks_with_lock@result+2,w
 14014     14EB  00A2               	movwf	?_get_ticks_with_lock+2
 14015     14EC  0825               	movf	get_ticks_with_lock@result+1,w
 14016     14ED  00A1               	movwf	?_get_ticks_with_lock+1
 14017     14EE  0824               	movf	get_ticks_with_lock@result,w
 14018     14EF  00A0               	movwf	?_get_ticks_with_lock
 14019     14F0                     l323:
 14020     14F0  0008               	return
 14021     14F1                     __end_of_get_ticks_with_lock:
 14022                           
 14023                           	psect	text34
 14024     070E                     __ptext34:	
 14025 ;; *************** function _get_measured_value *****************
 14026 ;; Defined at:
 14027 ;;		line 33 in file "measurement.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;  sensor_value    1    wreg     PTR struct values
 14030 ;;		 -> main@sensor_value(37), 
 14031 ;; Auto vars:     Size  Location     Type
 14032 ;;  sensor_value    1   69[BANK0 ] PTR struct values
 14033 ;;		 -> main@sensor_value(37), 
 14034 ;;  payload_temp    4   65[BANK0 ] unsigned long 
 14035 ;;  payload_ph      4   61[BANK0 ] unsigned long 
 14036 ;;  temp            2   59[BANK0 ] unsigned int 
 14037 ;;  ph              2   57[BANK0 ] unsigned int 
 14038 ;; Return value:  Size  Location     Type
 14039 ;;                  1    wreg      void 
 14040 ;; Registers used:
 14041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14042 ;; Tracked objects:
 14043 ;;		On entry : 0/0
 14044 ;;		On exit  : 0/0
 14045 ;;		Unchanged: 0/0
 14046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14048 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14049 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14050 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14051 ;;Total ram usage:       25 bytes
 14052 ;; Hardware stack levels used: 1
 14053 ;; Hardware stack levels required when called: 4
 14054 ;; This function calls:
 14055 ;;		_enable_tx_transmit
 14056 ;;		_enable_uart_printf
 14057 ;;		_printf
 14058 ;; This function is called by:
 14059 ;;		_main
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063     070E                     _get_measured_value:	
 14064                           ;psect for function _get_measured_value
 14065                           
 14066                           
 14067                           ;incstack = 0
 14068                           ; Regs used in _get_measured_value: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14069                           ;get_measured_value@sensor_value stored from wreg
 14070     070E  0140               	movlb	0	; select bank0
 14071     070F  00E5               	movwf	get_measured_value@sensor_value
 14072     0710                     l3833:
 14073                           
 14074                           ;measurement.c: 34: enable_uart_printf();
 14075     0710  3193  23EB  3187   	fcall	_enable_uart_printf
 14076     0713                     l3835:
 14077                           
 14078                           ;measurement.c: 35: printf("[Receive] data from pH485_probe \r\n");
 14079     0713  30BB               	movlw	low (STR_23| (0+32768))
 14080     0714  0140               	movlb	0	; select bank0
 14081     0715  00AE               	movwf	printf@f
 14082     0716  3098               	movlw	high (STR_23| (0+32768))
 14083     0717  00AF               	movwf	printf@f+1
 14084     0718  3183  23A0  3187   	fcall	_printf
 14085     071B                     l3837:
 14086                           
 14087                           ;measurement.c: 36: _delay((unsigned long)((10)*(1000000/4000.0)));
 14088     071B  3004               	movlw	4
 14089     071C  0140               	movlb	0	; select bank0
 14090     071D  00CD               	movwf	??_get_measured_value
 14091     071E  303D               	movlw	61
 14092     071F                     u4057:
 14093     071F  0B89               	decfsz	9,f
 14094     0720  2F1F               	goto	u4057
 14095     0721  0BCD               	decfsz	??_get_measured_value,f
 14096     0722  2F1F               	goto	u4057
 14097     0723  3200               	nop2
 14098     0724                     l3839:
 14099                           
 14100                           ;measurement.c: 37: enable_tx_transmit();
 14101     0724  3194  2486  3187   	fcall	_enable_tx_transmit
 14102     0727                     l3841:
 14103                           
 14104                           ;measurement.c: 48: uint16_t ph = 0;
 14105     0727  0140               	movlb	0	; select bank0
 14106     0728  01D9               	clrf	get_measured_value@ph
 14107     0729  01DA               	clrf	get_measured_value@ph+1
 14108     072A                     l3843:
 14109                           
 14110                           ;measurement.c: 49: uint32_t payload_ph = ((uint32_t)rxbuffer[5] << 24) |;measurement.c:
      +                           50: ((uint32_t)rxbuffer[6]) << 16 |;measurement.c: 51: ((uint32_t)rxbuffer[3]) << 8 |;m
      +                          easurement.c: 52: ((uint32_t)rxbuffer[4] << 0);
 14111     072A  0143               	movlb	3	; select bank3
 14112     072B  084C               	movf	(_rxbuffer^(0+384)+4),w	;volatile
 14113     072C  0140               	movlb	0	; select bank0
 14114     072D  00CD               	movwf	??_get_measured_value
 14115     072E  01CE               	clrf	??_get_measured_value+1
 14116     072F  01CF               	clrf	??_get_measured_value+2
 14117     0730  01D0               	clrf	??_get_measured_value+3
 14118     0731  0143               	movlb	3	; select bank3
 14119     0732  084B               	movf	(_rxbuffer^(0+384)+3),w	;volatile
 14120     0733  0140               	movlb	0	; select bank0
 14121     0734  00D1               	movwf	??_get_measured_value+4
 14122     0735  01D2               	clrf	??_get_measured_value+5
 14123     0736  01D3               	clrf	??_get_measured_value+6
 14124     0737  01D4               	clrf	??_get_measured_value+7
 14125     0738  3008               	movlw	8
 14126     0739                     u3125:
 14127     0739  35D1               	lslf	??_get_measured_value+4,f
 14128     073A  0DD2               	rlf	??_get_measured_value+5,f
 14129     073B  0DD3               	rlf	??_get_measured_value+6,f
 14130     073C  0DD4               	rlf	??_get_measured_value+7,f
 14131     073D                     u3120:
 14132     073D  0B89               	decfsz	9,f
 14133     073E  2F39               	goto	u3125
 14134     073F  0143               	movlb	3	; select bank3
 14135     0740  084E               	movf	(_rxbuffer^(0+384)+6),w	;volatile
 14136     0741  0140               	movlb	0	; select bank0
 14137     0742  00D5               	movwf	??_get_measured_value+8
 14138     0743  01D6               	clrf	??_get_measured_value+9
 14139     0744  01D7               	clrf	??_get_measured_value+10
 14140     0745  01D8               	clrf	??_get_measured_value+11
 14141     0746  3010               	movlw	16
 14142     0747                     u3135:
 14143     0747  35D5               	lslf	??_get_measured_value+8,f
 14144     0748  0DD6               	rlf	??_get_measured_value+9,f
 14145     0749  0DD7               	rlf	??_get_measured_value+10,f
 14146     074A  0DD8               	rlf	??_get_measured_value+11,f
 14147     074B                     u3130:
 14148     074B  0B89               	decfsz	9,f
 14149     074C  2F47               	goto	u3135
 14150     074D  0143               	movlb	3	; select bank3
 14151     074E  084D               	movf	(_rxbuffer^(0+384)+5),w	;volatile
 14152     074F  0140               	movlb	0	; select bank0
 14153     0750  04D8               	iorwf	??_get_measured_value+11,f
 14154     0751  0855               	movf	??_get_measured_value+8,w
 14155     0752  04D1               	iorwf	??_get_measured_value+4,f
 14156     0753  0856               	movf	??_get_measured_value+9,w
 14157     0754  04D2               	iorwf	??_get_measured_value+5,f
 14158     0755  0857               	movf	??_get_measured_value+10,w
 14159     0756  04D3               	iorwf	??_get_measured_value+6,f
 14160     0757  0858               	movf	??_get_measured_value+11,w
 14161     0758  04D4               	iorwf	??_get_measured_value+7,f
 14162     0759  084D               	movf	??_get_measured_value,w
 14163     075A  0451               	iorwf	??_get_measured_value+4,w
 14164     075B  00DD               	movwf	get_measured_value@payload_ph
 14165     075C  084E               	movf	??_get_measured_value+1,w
 14166     075D  0452               	iorwf	??_get_measured_value+5,w
 14167     075E  00DE               	movwf	get_measured_value@payload_ph+1
 14168     075F  084F               	movf	??_get_measured_value+2,w
 14169     0760  0453               	iorwf	??_get_measured_value+6,w
 14170     0761  00DF               	movwf	get_measured_value@payload_ph+2
 14171     0762  0850               	movf	??_get_measured_value+3,w
 14172     0763  0454               	iorwf	??_get_measured_value+7,w
 14173     0764  00E0               	movwf	get_measured_value@payload_ph+3
 14174     0765                     l3845:
 14175                           
 14176                           ;measurement.c: 53: __builtin_memcpy(&ph,&payload_ph,sizeof(uint16_t));
 14177     0765  3059               	movlw	low (get_measured_value@ph| 0)
 14178     0766  0086               	movwf	6
 14179     0767  0187               	clrf	7
 14180     0768  2F77               	goto	mcp0
 14181     0769                     mcp0b:
 14182     0769  305D               	movlw	low (get_measured_value@payload_ph| 0)
 14183     076A  0084               	movwf	4
 14184     076B  0185               	clrf	5
 14185     076C  3002               	movlw	2
 14186     076D  0140               	movlb	0	; select bank0
 14187     076E  00CD               	movwf	??_get_measured_value
 14188     076F  084D               	movf	??_get_measured_value,w
 14189     0770  1903               	skipnz
 14190     0771  2F78               	goto	mcp0z
 14191     0772                     u314m0:
 14192     0772  0012               	moviw fsr0++
 14193     0773  001E               	movwi fsr1++
 14194     0774  0BCD               	decfsz	??_get_measured_value,f
 14195     0775  2F72               	goto	u314m0
 14196     0776  2F78               	goto	u314m1
 14197     0777                     mcp0:
 14198     0777  2F69               	goto	mcp0b
 14199     0778                     u314m1:
 14200     0778                     mcp0z:
 14201     0778                     l3847:
 14202                           
 14203                           ;measurement.c: 54: sensor_value->ph_value = payload_ph;
 14204     0778  0140               	movlb	0	; select bank0
 14205     0779  0865               	movf	get_measured_value@sensor_value,w
 14206     077A  0086               	movwf	6
 14207     077B  0187               	clrf	7
 14208     077C  085D               	movf	get_measured_value@payload_ph,w
 14209     077D  0081               	movwf	1
 14210     077E                     l3849:
 14211                           
 14212                           ;measurement.c: 67: uint16_t temp = 0;
 14213     077E  01DB               	clrf	get_measured_value@temp
 14214     077F  01DC               	clrf	get_measured_value@temp+1
 14215     0780                     l3851:
 14216                           
 14217                           ;measurement.c: 68: uint32_t payload_temp = ((uint32_t)rxbuffer[9] << 24) |;measurement.
      +                          c: 69: ((uint32_t)rxbuffer[10]) << 16 |;measurement.c: 70: ((uint32_t)rxbuffer[7]) << 8 
      +                          |;measurement.c: 71: ((uint32_t)rxbuffer[8] << 0);
 14218     0780  0143               	movlb	3	; select bank3
 14219     0781  0850               	movf	(_rxbuffer^(0+384)+8),w	;volatile
 14220     0782  0140               	movlb	0	; select bank0
 14221     0783  00CD               	movwf	??_get_measured_value
 14222     0784  01CE               	clrf	??_get_measured_value+1
 14223     0785  01CF               	clrf	??_get_measured_value+2
 14224     0786  01D0               	clrf	??_get_measured_value+3
 14225     0787  0143               	movlb	3	; select bank3
 14226     0788  084F               	movf	(_rxbuffer^(0+384)+7),w	;volatile
 14227     0789  0140               	movlb	0	; select bank0
 14228     078A  00D1               	movwf	??_get_measured_value+4
 14229     078B  01D2               	clrf	??_get_measured_value+5
 14230     078C  01D3               	clrf	??_get_measured_value+6
 14231     078D  01D4               	clrf	??_get_measured_value+7
 14232     078E  3008               	movlw	8
 14233     078F                     u3155:
 14234     078F  35D1               	lslf	??_get_measured_value+4,f
 14235     0790  0DD2               	rlf	??_get_measured_value+5,f
 14236     0791  0DD3               	rlf	??_get_measured_value+6,f
 14237     0792  0DD4               	rlf	??_get_measured_value+7,f
 14238     0793                     u3150:
 14239     0793  0B89               	decfsz	9,f
 14240     0794  2F8F               	goto	u3155
 14241     0795  0143               	movlb	3	; select bank3
 14242     0796  0852               	movf	(_rxbuffer^(0+384)+10),w	;volatile
 14243     0797  0140               	movlb	0	; select bank0
 14244     0798  00D5               	movwf	??_get_measured_value+8
 14245     0799  01D6               	clrf	??_get_measured_value+9
 14246     079A  01D7               	clrf	??_get_measured_value+10
 14247     079B  01D8               	clrf	??_get_measured_value+11
 14248     079C  3010               	movlw	16
 14249     079D                     u3165:
 14250     079D  35D5               	lslf	??_get_measured_value+8,f
 14251     079E  0DD6               	rlf	??_get_measured_value+9,f
 14252     079F  0DD7               	rlf	??_get_measured_value+10,f
 14253     07A0  0DD8               	rlf	??_get_measured_value+11,f
 14254     07A1                     u3160:
 14255     07A1  0B89               	decfsz	9,f
 14256     07A2  2F9D               	goto	u3165
 14257     07A3  0143               	movlb	3	; select bank3
 14258     07A4  0851               	movf	(_rxbuffer^(0+384)+9),w	;volatile
 14259     07A5  0140               	movlb	0	; select bank0
 14260     07A6  04D8               	iorwf	??_get_measured_value+11,f
 14261     07A7  0855               	movf	??_get_measured_value+8,w
 14262     07A8  04D1               	iorwf	??_get_measured_value+4,f
 14263     07A9  0856               	movf	??_get_measured_value+9,w
 14264     07AA  04D2               	iorwf	??_get_measured_value+5,f
 14265     07AB  0857               	movf	??_get_measured_value+10,w
 14266     07AC  04D3               	iorwf	??_get_measured_value+6,f
 14267     07AD  0858               	movf	??_get_measured_value+11,w
 14268     07AE  04D4               	iorwf	??_get_measured_value+7,f
 14269     07AF  084D               	movf	??_get_measured_value,w
 14270     07B0  0451               	iorwf	??_get_measured_value+4,w
 14271     07B1  00E1               	movwf	get_measured_value@payload_temp
 14272     07B2  084E               	movf	??_get_measured_value+1,w
 14273     07B3  0452               	iorwf	??_get_measured_value+5,w
 14274     07B4  00E2               	movwf	get_measured_value@payload_temp+1
 14275     07B5  084F               	movf	??_get_measured_value+2,w
 14276     07B6  0453               	iorwf	??_get_measured_value+6,w
 14277     07B7  00E3               	movwf	get_measured_value@payload_temp+2
 14278     07B8  0850               	movf	??_get_measured_value+3,w
 14279     07B9  0454               	iorwf	??_get_measured_value+7,w
 14280     07BA  00E4               	movwf	get_measured_value@payload_temp+3
 14281     07BB                     l3853:
 14282                           
 14283                           ;measurement.c: 72: __builtin_memcpy(&temp,&payload_temp,sizeof(uint16_t));
 14284     07BB  305B               	movlw	low (get_measured_value@temp| 0)
 14285     07BC  0086               	movwf	6
 14286     07BD  0187               	clrf	7
 14287     07BE  2FCD               	goto	mcp1
 14288     07BF                     mcp1b:
 14289     07BF  3061               	movlw	low (get_measured_value@payload_temp| 0)
 14290     07C0  0084               	movwf	4
 14291     07C1  0185               	clrf	5
 14292     07C2  3002               	movlw	2
 14293     07C3  0140               	movlb	0	; select bank0
 14294     07C4  00CD               	movwf	??_get_measured_value
 14295     07C5  084D               	movf	??_get_measured_value,w
 14296     07C6  1903               	skipnz
 14297     07C7  2FCE               	goto	mcp1z
 14298     07C8                     u317m0:
 14299     07C8  0012               	moviw fsr0++
 14300     07C9  001E               	movwi fsr1++
 14301     07CA  0BCD               	decfsz	??_get_measured_value,f
 14302     07CB  2FC8               	goto	u317m0
 14303     07CC  2FCE               	goto	u317m1
 14304     07CD                     mcp1:
 14305     07CD  2FBF               	goto	mcp1b
 14306     07CE                     u317m1:
 14307     07CE                     mcp1z:
 14308     07CE                     l3855:
 14309                           
 14310                           ;measurement.c: 73: sensor_value->temp_value = payload_temp;
 14311     07CE  0140               	movlb	0	; select bank0
 14312     07CF  0865               	movf	get_measured_value@sensor_value,w
 14313     07D0  3E21               	addlw	33
 14314     07D1  0086               	movwf	6
 14315     07D2  0187               	clrf	7
 14316     07D3  0861               	movf	get_measured_value@payload_temp,w
 14317     07D4  3FC0               	movwi [0]fsr1
 14318     07D5  0862               	movf	get_measured_value@payload_temp+1,w
 14319     07D6  3FC1               	movwi [1]fsr1
 14320     07D7                     l612:
 14321     07D7  0008               	return
 14322     07D8                     __end_of_get_measured_value:
 14323                           
 14324                           	psect	text35
 14325     163C                     __ptext35:	
 14326 ;; *************** function _get_measured_adc_value *****************
 14327 ;; Defined at:
 14328 ;;		line 79 in file "calibration.c"
 14329 ;; Parameters:    Size  Location     Type
 14330 ;;  sensor_value    1    wreg     PTR struct values
 14331 ;;		 -> main@sensor_value(37), 
 14332 ;; Auto vars:     Size  Location     Type
 14333 ;;  sensor_value    1   46[BANK0 ] PTR struct values
 14334 ;;		 -> main@sensor_value(37), 
 14335 ;;  ph_adc_value    2    0        unsigned int 
 14336 ;; Return value:  Size  Location     Type
 14337 ;;                  1    wreg      void 
 14338 ;; Registers used:
 14339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14340 ;; Tracked objects:
 14341 ;;		On entry : 0/0
 14342 ;;		On exit  : 0/0
 14343 ;;		Unchanged: 0/0
 14344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;Total ram usage:        2 bytes
 14350 ;; Hardware stack levels used: 1
 14351 ;; Hardware stack levels required when called: 4
 14352 ;; This function calls:
 14353 ;;		_enable_tx_transmit
 14354 ;;		_enable_uart_printf
 14355 ;;		_printf
 14356 ;; This function is called by:
 14357 ;;		_main
 14358 ;; This function uses a non-reentrant model
 14359 ;;
 14360                           
 14361     163C                     _get_measured_adc_value:	
 14362                           ;psect for function _get_measured_adc_value
 14363                           
 14364                           
 14365                           ;incstack = 0
 14366                           ; Regs used in _get_measured_adc_value: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14367                           ;get_measured_adc_value@sensor_value stored from wreg
 14368     163C  0140               	movlb	0	; select bank0
 14369     163D  00CE               	movwf	get_measured_adc_value@sensor_value
 14370     163E                     l3815:
 14371                           
 14372                           ;calibration.c: 80: enable_uart_printf();
 14373     163E  3193  23EB  3196   	fcall	_enable_uart_printf
 14374     1641                     l3817:
 14375                           
 14376                           ;calibration.c: 81: printf("[Receive] ADC_data from pH485_probe \r\n");
 14377     1641  3094               	movlw	low (STR_25| (0+32768))
 14378     1642  0140               	movlb	0	; select bank0
 14379     1643  00AE               	movwf	printf@f
 14380     1644  3098               	movlw	high (STR_25| (0+32768))
 14381     1645  00AF               	movwf	printf@f+1
 14382     1646  3183  23A0  3196   	fcall	_printf
 14383     1649                     l3819:
 14384                           
 14385                           ;calibration.c: 82: _delay((unsigned long)((10)*(1000000/4000.0)));
 14386     1649  3004               	movlw	4
 14387     164A  0140               	movlb	0	; select bank0
 14388     164B  00CD               	movwf	??_get_measured_adc_value
 14389     164C  303D               	movlw	61
 14390     164D                     u4067:
 14391     164D  0B89               	decfsz	9,f
 14392     164E  2E4D               	goto	u4067
 14393     164F  0BCD               	decfsz	??_get_measured_adc_value,f
 14394     1650  2E4D               	goto	u4067
 14395     1651  3200               	nop2
 14396     1652                     l3821:
 14397                           
 14398                           ;calibration.c: 83: enable_tx_transmit();
 14399     1652  3194  2486  3196   	fcall	_enable_tx_transmit
 14400     1655                     l3823:
 14401     1655                     l3825:
 14402                           
 14403                           ;calibration.c: 91: sensor_value->ph_ADC_High_byte = test_recived_data[3];
 14404     1655  0140               	movlb	0	; select bank0
 14405     1656  084E               	movf	get_measured_adc_value@sensor_value,w
 14406     1657  3E03               	addlw	3
 14407     1658  0086               	movwf	6
 14408     1659  0187               	clrf	7
 14409     165A  0142               	movlb	2	; select bank2
 14410     165B  085E               	movf	(_test_recived_data^(0+256)+3),w
 14411     165C  0081               	movwf	1
 14412     165D                     l3827:
 14413                           
 14414                           ;calibration.c: 92: sensor_value->ph_ADC_Low_byte = test_recived_data[4];
 14415     165D  0140               	movlb	0	; select bank0
 14416     165E  084E               	movf	get_measured_adc_value@sensor_value,w
 14417     165F  3E04               	addlw	4
 14418     1660  0086               	movwf	6
 14419     1661  0187               	clrf	7
 14420     1662  0142               	movlb	2	; select bank2
 14421     1663  085F               	movf	(_test_recived_data^(0+256)+4),w
 14422     1664  0081               	movwf	1
 14423     1665                     l3829:
 14424                           
 14425                           ;calibration.c: 93: sensor_value->ph_ADC_value = (test_recived_data[3] << 8) | test_reci
      +                          ved_data[4];
 14426     1665  0140               	movlb	0	; select bank0
 14427     1666  0A4E               	incf	get_measured_adc_value@sensor_value,w
 14428     1667  0086               	movwf	6
 14429     1668  0187               	clrf	7
 14430     1669  0142               	movlb	2	; select bank2
 14431     166A  085F               	movf	(_test_recived_data^(0+256)+4),w
 14432     166B  3FC0               	movwi [0]fsr1
 14433     166C  085E               	movf	(_test_recived_data^(0+256)+3),w
 14434     166D  3FC1               	movwi [1]fsr1
 14435     166E                     l688:
 14436     166E  0008               	return
 14437     166F                     __end_of_get_measured_adc_value:
 14438                           
 14439                           	psect	text36
 14440     13EB                     __ptext36:	
 14441 ;; *************** function _enable_uart_printf *****************
 14442 ;; Defined at:
 14443 ;;		line 129 in file "uart.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;		None
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;		None
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  1    wreg      void 
 14450 ;; Registers used:
 14451 ;;		wreg, status,2
 14452 ;; Tracked objects:
 14453 ;;		On entry : 0/0
 14454 ;;		On exit  : 0/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14461 ;;Total ram usage:        0 bytes
 14462 ;; Hardware stack levels used: 1
 14463 ;; Hardware stack levels required when called: 2
 14464 ;; This function calls:
 14465 ;;		Nothing
 14466 ;; This function is called by:
 14467 ;;		_main
 14468 ;;		_measurement
 14469 ;;		_get_measured_value
 14470 ;;		_measured_adc
 14471 ;;		_get_measured_adc_value
 14472 ;;		_save_top_adc_point
 14473 ;;		_save_bottom_adc_point
 14474 ;; This function uses a non-reentrant model
 14475 ;;
 14476                           
 14477     13EB                     _enable_uart_printf:	
 14478                           ;psect for function _enable_uart_printf
 14479                           
 14480     13EB                     l3243:	
 14481                           ;incstack = 0
 14482                           ; Regs used in _enable_uart_printf: [wreg+status,2]
 14483                           
 14484                           
 14485                           ;uart.c: 130: (RC3PPS = 0x00);
 14486     13EB  017E               	movlb	62	; select bank62
 14487     13EC  01A3               	clrf	35	;volatile
 14488     13ED                     l3245:
 14489                           
 14490                           ;uart.c: 131: (RA5PPS = 0x0F);
 14491     13ED  300F               	movlw	15
 14492     13EE  0095               	movwf	21	;volatile
 14493     13EF                     l517:
 14494     13EF  0008               	return
 14495     13F0                     __end_of_enable_uart_printf:
 14496                           
 14497                           	psect	text37
 14498     1486                     __ptext37:	
 14499 ;; *************** function _enable_tx_transmit *****************
 14500 ;; Defined at:
 14501 ;;		line 133 in file "uart.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;		None
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;		None
 14506 ;; Return value:  Size  Location     Type
 14507 ;;                  1    wreg      void 
 14508 ;; Registers used:
 14509 ;;		wreg, status,2
 14510 ;; Tracked objects:
 14511 ;;		On entry : 0/0
 14512 ;;		On exit  : 0/0
 14513 ;;		Unchanged: 0/0
 14514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14519 ;;Total ram usage:        1 bytes
 14520 ;; Hardware stack levels used: 1
 14521 ;; Hardware stack levels required when called: 2
 14522 ;; This function calls:
 14523 ;;		Nothing
 14524 ;; This function is called by:
 14525 ;;		_main
 14526 ;;		_measurement
 14527 ;;		_get_measured_value
 14528 ;;		_measured_adc
 14529 ;;		_get_measured_adc_value
 14530 ;;		_save_top_adc_point
 14531 ;;		_save_bottom_adc_point
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           
 14535     1486                     _enable_tx_transmit:	
 14536                           ;psect for function _enable_tx_transmit
 14537                           
 14538     1486                     l3247:	
 14539                           ;incstack = 0
 14540                           ; Regs used in _enable_tx_transmit: [wreg+status,2]
 14541                           
 14542                           
 14543                           ;uart.c: 134: _delay((unsigned long)((10)*(1000000/4000.0)));
 14544     1486  3004               	movlw	4
 14545     1487  0140               	movlb	0	; select bank0
 14546     1488  00A0               	movwf	??_enable_tx_transmit
 14547     1489  303D               	movlw	61
 14548     148A                     u4077:
 14549     148A  0B89               	decfsz	9,f
 14550     148B  2C8A               	goto	u4077
 14551     148C  0BA0               	decfsz	??_enable_tx_transmit,f
 14552     148D  2C8A               	goto	u4077
 14553     148E  3200               	nop2
 14554                           
 14555                           ;uart.c: 135: (RC3PPS = 0x0F);
 14556     148F  300F               	movlw	15
 14557     1490  017E               	movlb	62	; select bank62
 14558     1491  00A3               	movwf	35	;volatile
 14559     1492                     l3249:
 14560                           
 14561                           ;uart.c: 136: (RA5PPS = 0x00);
 14562     1492  0195               	clrf	21	;volatile
 14563     1493                     l520:
 14564     1493  0008               	return
 14565     1494                     __end_of_enable_tx_transmit:
 14566                           
 14567                           	psect	text38
 14568     1442                     __ptext38:	
 14569 ;; *************** function _dump_memory_map *****************
 14570 ;; Defined at:
 14571 ;;		line 121 in file "i2c_slave.c"
 14572 ;; Parameters:    Size  Location     Type
 14573 ;;		None
 14574 ;; Auto vars:     Size  Location     Type
 14575 ;;		None
 14576 ;; Return value:  Size  Location     Type
 14577 ;;                  1    wreg      void 
 14578 ;; Registers used:
 14579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14580 ;; Tracked objects:
 14581 ;;		On entry : 0/0
 14582 ;;		On exit  : 0/0
 14583 ;;		Unchanged: 0/0
 14584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14589 ;;Total ram usage:        0 bytes
 14590 ;; Hardware stack levels used: 1
 14591 ;; Hardware stack levels required when called: 5
 14592 ;; This function calls:
 14593 ;;		_dump_buffer
 14594 ;; This function is called by:
 14595 ;;		_main
 14596 ;; This function uses a non-reentrant model
 14597 ;;
 14598                           
 14599     1442                     _dump_memory_map:	
 14600                           ;psect for function _dump_memory_map
 14601                           
 14602     1442                     l3831:	
 14603                           ;incstack = 0
 14604                           ; Regs used in _dump_memory_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14605                           
 14606                           
 14607                           ;i2c_slave.c: 122: dump_buffer(slaveData, sizeof(slaveData));
 14608     1442  3040               	movlw	64
 14609     1443  0140               	movlb	0	; select bank0
 14610     1444  00CD               	movwf	dump_buffer@size
 14611     1445  3000               	movlw	0
 14612     1446  00CE               	movwf	dump_buffer@size+1
 14613     1447  3020               	movlw	(low (_slaveData| (0+512)))& (0+255)
 14614     1448  318C  2447  3194   	fcall	_dump_buffer
 14615     144B                     l277:
 14616     144B  0008               	return
 14617     144C                     __end_of_dump_memory_map:
 14618                           
 14619                           	psect	text39
 14620     0C47                     __ptext39:	
 14621 ;; *************** function _dump_buffer *****************
 14622 ;; Defined at:
 14623 ;;		line 7 in file "my_helpers.c"
 14624 ;; Parameters:    Size  Location     Type
 14625 ;;  buffer          1    wreg     PTR const void 
 14626 ;;		 -> slaveData(64), 
 14627 ;;  size            2   45[BANK0 ] unsigned int 
 14628 ;; Auto vars:     Size  Location     Type
 14629 ;;  buffer          1   53[BANK0 ] PTR const void 
 14630 ;;		 -> slaveData(64), 
 14631 ;;  j               2   57[BANK0 ] unsigned int 
 14632 ;;  i               2   55[BANK0 ] unsigned int 
 14633 ;;  p               1   54[BANK0 ] PTR const unsigned char 
 14634 ;;		 -> slaveData(64), 
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  1    wreg      void 
 14637 ;; Registers used:
 14638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/0
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14644 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14648 ;;Total ram usage:       14 bytes
 14649 ;; Hardware stack levels used: 1
 14650 ;; Hardware stack levels required when called: 4
 14651 ;; This function calls:
 14652 ;;		_isprint
 14653 ;;		_printf
 14654 ;; This function is called by:
 14655 ;;		_dump_memory_map
 14656 ;; This function uses a non-reentrant model
 14657 ;;
 14658                           
 14659     0C47                     _dump_buffer:	
 14660                           ;psect for function _dump_buffer
 14661                           
 14662                           
 14663                           ;incstack = 0
 14664                           ; Regs used in _dump_buffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14665                           ;dump_buffer@buffer stored from wreg
 14666     0C47  0140               	movlb	0	; select bank0
 14667     0C48  00D5               	movwf	dump_buffer@buffer
 14668     0C49                     l3267:
 14669                           
 14670                           ;my_helpers.c: 8: const uint8_t *p = (const uint8_t *)buffer;
 14671     0C49  0855               	movf	dump_buffer@buffer,w
 14672     0C4A  00D6               	movwf	dump_buffer@p
 14673     0C4B                     l3269:
 14674                           
 14675                           ;my_helpers.c: 9: size_t i, j;;my_helpers.c: 11: for (i = 0; i < size; i += 16) {
 14676     0C4B  01D7               	clrf	dump_buffer@i
 14677     0C4C  01D8               	clrf	dump_buffer@i+1
 14678     0C4D  2D03               	goto	l3315
 14679     0C4E                     l3271:
 14680                           
 14681                           ;my_helpers.c: 12: printf("%08x:", (unsigned int)i);
 14682     0C4E  309D               	movlw	low (STR_8| (0+32768))
 14683     0C4F  00AE               	movwf	printf@f
 14684     0C50  3099               	movlw	high (STR_8| (0+32768))
 14685     0C51  00AF               	movwf	printf@f+1
 14686     0C52  0858               	movf	dump_buffer@i+1,w
 14687     0C53  00B1               	movwf	?_printf+3
 14688     0C54  0857               	movf	dump_buffer@i,w
 14689     0C55  00B0               	movwf	?_printf+2
 14690     0C56  3183  23A0  318C   	fcall	_printf
 14691     0C59                     l3273:
 14692                           
 14693                           ;my_helpers.c: 13: for (j = 0; j < 16; j++) {
 14694     0C59  0140               	movlb	0	; select bank0
 14695     0C5A  01D9               	clrf	dump_buffer@j
 14696     0C5B  01DA               	clrf	dump_buffer@j+1
 14697     0C5C                     l3279:
 14698                           
 14699                           ;my_helpers.c: 14: if (i + j < size) {
 14700     0C5C  0859               	movf	dump_buffer@j,w
 14701     0C5D  0757               	addwf	dump_buffer@i,w
 14702     0C5E  00CF               	movwf	??_dump_buffer
 14703     0C5F  085A               	movf	dump_buffer@j+1,w
 14704     0C60  3D58               	addwfc	dump_buffer@i+1,w
 14705     0C61  00D0               	movwf	??_dump_buffer+1
 14706     0C62  084E               	movf	dump_buffer@size+1,w
 14707     0C63  0250               	subwf	??_dump_buffer+1,w
 14708     0C64  1D03               	skipz
 14709     0C65  2C68               	goto	u2375
 14710     0C66  084D               	movf	dump_buffer@size,w
 14711     0C67  024F               	subwf	??_dump_buffer,w
 14712     0C68                     u2375:
 14713     0C68  1803               	skipnc
 14714     0C69  2C6B               	goto	u2371
 14715     0C6A  2C6C               	goto	u2370
 14716     0C6B                     u2371:
 14717     0C6B  2C85               	goto	l3283
 14718     0C6C                     u2370:
 14719     0C6C                     l3281:
 14720                           
 14721                           ;my_helpers.c: 15: printf(" %02x", p[i + j]);
 14722     0C6C  30A3               	movlw	low (STR_9| (0+32768))
 14723     0C6D  00AE               	movwf	printf@f
 14724     0C6E  3099               	movlw	high (STR_9| (0+32768))
 14725     0C6F  00AF               	movwf	printf@f+1
 14726     0C70  0857               	movf	dump_buffer@i,w
 14727     0C71  0756               	addwf	dump_buffer@p,w
 14728     0C72  00CF               	movwf	??_dump_buffer
 14729     0C73  0859               	movf	dump_buffer@j,w
 14730     0C74  074F               	addwf	??_dump_buffer,w
 14731     0C75  00D0               	movwf	??_dump_buffer+1
 14732     0C76  0850               	movf	??_dump_buffer+1,w
 14733     0C77  0086               	movwf	6
 14734     0C78  3002               	movlw	2	; select bank4/5
 14735     0C79  0087               	movwf	7
 14736     0C7A  0801               	movf	1,w
 14737     0C7B  00D1               	movwf	??_dump_buffer+2
 14738     0C7C  01D2               	clrf	??_dump_buffer+3
 14739     0C7D  0851               	movf	??_dump_buffer+2,w
 14740     0C7E  00B0               	movwf	?_printf+2
 14741     0C7F  0852               	movf	??_dump_buffer+3,w
 14742     0C80  00B1               	movwf	?_printf+3
 14743     0C81  3183  23A0  318C   	fcall	_printf
 14744                           
 14745                           ;my_helpers.c: 16: } else {
 14746     0C84  2C8C               	goto	l3285
 14747     0C85                     l3283:
 14748                           
 14749                           ;my_helpers.c: 17: printf("   ");
 14750     0C85  30A9               	movlw	low (STR_10| (0+32768))
 14751     0C86  00AE               	movwf	printf@f
 14752     0C87  3099               	movlw	high (STR_10| (0+32768))
 14753     0C88  00AF               	movwf	printf@f+1
 14754     0C89  3183  23A0  318C   	fcall	_printf
 14755     0C8C                     l3285:
 14756     0C8C  3001               	movlw	1
 14757     0C8D  0140               	movlb	0	; select bank0
 14758     0C8E  07D9               	addwf	dump_buffer@j,f
 14759     0C8F  3000               	movlw	0
 14760     0C90  3DDA               	addwfc	dump_buffer@j+1,f
 14761     0C91                     l3287:
 14762     0C91  3000               	movlw	0
 14763     0C92  025A               	subwf	dump_buffer@j+1,w
 14764     0C93  3010               	movlw	16
 14765     0C94  1903               	skipnz
 14766     0C95  0259               	subwf	dump_buffer@j,w
 14767     0C96  1C03               	skipc
 14768     0C97  2C99               	goto	u2381
 14769     0C98  2C9A               	goto	u2380
 14770     0C99                     u2381:
 14771     0C99  2C5C               	goto	l3279
 14772     0C9A                     u2380:
 14773     0C9A                     l3289:
 14774                           
 14775                           ;my_helpers.c: 18: };my_helpers.c: 19: };my_helpers.c: 20: printf("  ");
 14776     0C9A  30AA               	movlw	low ((STR_10+1)| (0+32768))
 14777     0C9B  00AE               	movwf	printf@f
 14778     0C9C  3099               	movlw	high ((STR_10+1)| (0+32768))
 14779     0C9D  00AF               	movwf	printf@f+1
 14780     0C9E  3183  23A0  318C   	fcall	_printf
 14781     0CA1                     l3291:
 14782                           
 14783                           ;my_helpers.c: 21: for (j = 0; j < 16; j++) {
 14784     0CA1  0140               	movlb	0	; select bank0
 14785     0CA2  01D9               	clrf	dump_buffer@j
 14786     0CA3  01DA               	clrf	dump_buffer@j+1
 14787     0CA4                     l3297:
 14788                           
 14789                           ;my_helpers.c: 22: if (i + j < size) {
 14790     0CA4  0859               	movf	dump_buffer@j,w
 14791     0CA5  0757               	addwf	dump_buffer@i,w
 14792     0CA6  00CF               	movwf	??_dump_buffer
 14793     0CA7  085A               	movf	dump_buffer@j+1,w
 14794     0CA8  3D58               	addwfc	dump_buffer@i+1,w
 14795     0CA9  00D0               	movwf	??_dump_buffer+1
 14796     0CAA  084E               	movf	dump_buffer@size+1,w
 14797     0CAB  0250               	subwf	??_dump_buffer+1,w
 14798     0CAC  1D03               	skipz
 14799     0CAD  2CB0               	goto	u2395
 14800     0CAE  084D               	movf	dump_buffer@size,w
 14801     0CAF  024F               	subwf	??_dump_buffer,w
 14802     0CB0                     u2395:
 14803     0CB0  1803               	skipnc
 14804     0CB1  2CB3               	goto	u2391
 14805     0CB2  2CB4               	goto	u2390
 14806     0CB3                     u2391:
 14807     0CB3  2CE9               	goto	l3307
 14808     0CB4                     u2390:
 14809     0CB4                     l3299:
 14810                           
 14811                           ;my_helpers.c: 23: printf("%c", isprint(p[i + j]) ? p[i + j] : '.');
 14812     0CB4  0857               	movf	dump_buffer@i,w
 14813     0CB5  0756               	addwf	dump_buffer@p,w
 14814     0CB6  00CF               	movwf	??_dump_buffer
 14815     0CB7  0859               	movf	dump_buffer@j,w
 14816     0CB8  074F               	addwf	??_dump_buffer,w
 14817     0CB9  00D0               	movwf	??_dump_buffer+1
 14818     0CBA  0850               	movf	??_dump_buffer+1,w
 14819     0CBB  0086               	movwf	6
 14820     0CBC  3002               	movlw	2	; select bank4/5
 14821     0CBD  0087               	movwf	7
 14822     0CBE  0801               	movf	1,w
 14823     0CBF  3194  24A4  318C   	fcall	_isprint
 14824     0CC2  1803               	btfsc	3,0
 14825     0CC3  2CC5               	goto	u2401
 14826     0CC4  2CC6               	goto	u2400
 14827     0CC5                     u2401:
 14828     0CC5  2CCC               	goto	l3303
 14829     0CC6                     u2400:
 14830     0CC6                     l3301:
 14831     0CC6  302E               	movlw	46
 14832     0CC7  0140               	movlb	0	; select bank0
 14833     0CC8  00D3               	movwf	_dump_buffer$891
 14834     0CC9  3000               	movlw	0
 14835     0CCA  00D4               	movwf	_dump_buffer$891+1
 14836     0CCB  2CDE               	goto	l3305
 14837     0CCC                     l3303:
 14838     0CCC  0140               	movlb	0	; select bank0
 14839     0CCD  0857               	movf	dump_buffer@i,w
 14840     0CCE  0756               	addwf	dump_buffer@p,w
 14841     0CCF  00CF               	movwf	??_dump_buffer
 14842     0CD0  0859               	movf	dump_buffer@j,w
 14843     0CD1  074F               	addwf	??_dump_buffer,w
 14844     0CD2  00D0               	movwf	??_dump_buffer+1
 14845     0CD3  0850               	movf	??_dump_buffer+1,w
 14846     0CD4  0086               	movwf	6
 14847     0CD5  3002               	movlw	2	; select bank4/5
 14848     0CD6  0087               	movwf	7
 14849     0CD7  0801               	movf	1,w
 14850     0CD8  00D1               	movwf	??_dump_buffer+2
 14851     0CD9  01D2               	clrf	??_dump_buffer+3
 14852     0CDA  0851               	movf	??_dump_buffer+2,w
 14853     0CDB  00D3               	movwf	_dump_buffer$891
 14854     0CDC  0852               	movf	??_dump_buffer+3,w
 14855     0CDD  00D4               	movwf	_dump_buffer$891+1
 14856     0CDE                     l3305:
 14857     0CDE  30AD               	movlw	low (STR_12| (0+32768))
 14858     0CDF  00AE               	movwf	printf@f
 14859     0CE0  3099               	movlw	high (STR_12| (0+32768))
 14860     0CE1  00AF               	movwf	printf@f+1
 14861     0CE2  0854               	movf	_dump_buffer$891+1,w
 14862     0CE3  00B1               	movwf	?_printf+3
 14863     0CE4  0853               	movf	_dump_buffer$891,w
 14864     0CE5  00B0               	movwf	?_printf+2
 14865     0CE6  3183  23A0  318C   	fcall	_printf
 14866     0CE9                     l3307:
 14867     0CE9  3001               	movlw	1
 14868     0CEA  0140               	movlb	0	; select bank0
 14869     0CEB  07D9               	addwf	dump_buffer@j,f
 14870     0CEC  3000               	movlw	0
 14871     0CED  3DDA               	addwfc	dump_buffer@j+1,f
 14872     0CEE                     l3309:
 14873     0CEE  3000               	movlw	0
 14874     0CEF  025A               	subwf	dump_buffer@j+1,w
 14875     0CF0  3010               	movlw	16
 14876     0CF1  1903               	skipnz
 14877     0CF2  0259               	subwf	dump_buffer@j,w
 14878     0CF3  1C03               	skipc
 14879     0CF4  2CF6               	goto	u2411
 14880     0CF5  2CF7               	goto	u2410
 14881     0CF6                     u2411:
 14882     0CF6  2CA4               	goto	l3297
 14883     0CF7                     u2410:
 14884     0CF7                     l3311:
 14885                           
 14886                           ;my_helpers.c: 24: };my_helpers.c: 25: };my_helpers.c: 26: printf("\r\n");
 14887     0CF7  30A3               	movlw	low ((STR_24+71)| (0+32768))
 14888     0CF8  00AE               	movwf	printf@f
 14889     0CF9  3092               	movlw	high ((STR_24+71)| (0+32768))
 14890     0CFA  00AF               	movwf	printf@f+1
 14891     0CFB  3183  23A0  318C   	fcall	_printf
 14892     0CFE                     l3313:
 14893     0CFE  3010               	movlw	16
 14894     0CFF  0140               	movlb	0	; select bank0
 14895     0D00  07D7               	addwf	dump_buffer@i,f
 14896     0D01  3000               	movlw	0
 14897     0D02  3DD8               	addwfc	dump_buffer@i+1,f
 14898     0D03                     l3315:
 14899     0D03  084E               	movf	dump_buffer@size+1,w
 14900     0D04  0258               	subwf	dump_buffer@i+1,w
 14901     0D05  1D03               	skipz
 14902     0D06  2D09               	goto	u2425
 14903     0D07  084D               	movf	dump_buffer@size,w
 14904     0D08  0257               	subwf	dump_buffer@i,w
 14905     0D09                     u2425:
 14906     0D09  1C03               	skipc
 14907     0D0A  2D0C               	goto	u2421
 14908     0D0B  2D0D               	goto	u2420
 14909     0D0C                     u2421:
 14910     0D0C  2C4E               	goto	l3271
 14911     0D0D                     u2420:
 14912     0D0D                     l313:
 14913     0D0D  0008               	return
 14914     0D0E                     __end_of_dump_buffer:
 14915                           
 14916                           	psect	text40
 14917     03A0                     __ptext40:	
 14918 ;; *************** function _printf *****************
 14919 ;; Defined at:
 14920 ;;		line 477 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 14923 ;;		 -> STR_29(200), STR_28(45), STR_27(197), STR_26(42), 
 14924 ;;		 -> STR_25(39), STR_24(74), STR_23(35), STR_22(70), 
 14925 ;;		 -> STR_21(17), STR_20(17), STR_19(13), STR_18(13), 
 14926 ;;		 -> STR_15(3), STR_14(6), STR_13(3), STR_12(3), 
 14927 ;;		 -> STR_11(3), STR_10(4), STR_9(6), STR_8(6), 
 14928 ;;		 -> STR_7(32), STR_6(61), STR_5(78), STR_4(121), 
 14929 ;;		 -> STR_2(9), STR_1(22), 
 14930 ;; Auto vars:     Size  Location     Type
 14931 ;;  idx             1   32[BANK0 ] unsigned char 
 14932 ;;  tmpval          4    0        struct .
 14933 ;;  width           2   42[BANK0 ] int 
 14934 ;;  len             2   39[BANK0 ] unsigned int 
 14935 ;;  val             2   36[BANK0 ] unsigned int 
 14936 ;;  cp              2   34[BANK0 ] PTR const unsigned char 
 14937 ;;		 -> sensor_value.ph_ADC_Low_byte(1), sensor_value.ph_ADC_High_byte(1), STR_30(7), printf@c(1), 
 14938 ;;		 -> ?_printf(2), slaveData(64), sensor_value.ph_ADC_value(2), STR_3(11), 
 14939 ;;  c               1   44[BANK0 ] unsigned char 
 14940 ;;  flag            1   41[BANK0 ] unsigned char 
 14941 ;;  ap              1   38[BANK0 ] PTR void [1]
 14942 ;;		 -> ?_printf(2), 
 14943 ;;  prec            1   33[BANK0 ] char 
 14944 ;; Return value:  Size  Location     Type
 14945 ;;                  2   14[BANK0 ] int 
 14946 ;; Registers used:
 14947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14948 ;; Tracked objects:
 14949 ;;		On entry : 0/0
 14950 ;;		On exit  : 0/0
 14951 ;;		Unchanged: 0/0
 14952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14953 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14954 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14956 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14957 ;;Total ram usage:       31 bytes
 14958 ;; Hardware stack levels used: 1
 14959 ;; Hardware stack levels required when called: 3
 14960 ;; This function calls:
 14961 ;;		___lwdiv
 14962 ;;		___lwmod
 14963 ;;		___wmul
 14964 ;;		_isdigit
 14965 ;;		_putch
 14966 ;; This function is called by:
 14967 ;;		_main
 14968 ;;		_dump_buffer
 14969 ;;		_monitoring_sync
 14970 ;;		_measurement
 14971 ;;		_get_measured_value
 14972 ;;		_measured_adc
 14973 ;;		_get_measured_adc_value
 14974 ;;		_save_top_adc_point
 14975 ;;		_save_bottom_adc_point
 14976 ;;		_print_buffer
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980     03A0                     _printf:	
 14981                           ;psect for function _printf
 14982                           
 14983     03A0                     l2957:	
 14984                           ;incstack = 0
 14985                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14986                           
 14987                           
 14988                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 14989     03A0  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
 14990     03A1  0140               	movlb	0	; select bank0
 14991     03A2  00C6               	movwf	printf@ap
 14992                           
 14993                           ;doprnt.c: 553: while((c = *f++)) {
 14994     03A3  2DD2               	goto	l3097
 14995     03A4                     l2959:
 14996                           
 14997                           ;doprnt.c: 555: if(c != '%')
 14998     03A4  3025               	movlw	37
 14999     03A5  064C               	xorwf	printf@c,w
 15000     03A6  1903               	btfsc	3,2
 15001     03A7  2BA9               	goto	u1931
 15002     03A8  2BAA               	goto	u1930
 15003     03A9                     u1931:
 15004     03A9  2BAF               	goto	l2963
 15005     03AA                     u1930:
 15006     03AA                     l2961:
 15007                           
 15008                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
 15009     03AA  084C               	movf	printf@c,w
 15010     03AB  3194  2461  3183   	fcall	_putch
 15011                           
 15012                           ;doprnt.c: 559: continue;
 15013     03AE  2DD2               	goto	l3097
 15014     03AF                     l2963:
 15015                           
 15016                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15017     03AF  01CA               	clrf	printf@width
 15018     03B0  01CB               	clrf	printf@width+1
 15019                           
 15020                           ;doprnt.c: 565: flag = 0;
 15021     03B1  01C9               	clrf	printf@flag
 15022     03B2  2BB8               	goto	l2969
 15023     03B3                     l866:	
 15024                           ;doprnt.c: 596: case '0':
 15025                           
 15026                           
 15027                           ;doprnt.c: 597: flag |= 0x04;
 15028     03B3  1549               	bsf	printf@flag,2
 15029     03B4                     l2965:
 15030                           
 15031                           ;doprnt.c: 598: f++;
 15032     03B4  3001               	movlw	1
 15033     03B5  07AE               	addwf	printf@f,f
 15034     03B6  3000               	movlw	0
 15035     03B7  3DAF               	addwfc	printf@f+1,f
 15036     03B8                     l2969:	
 15037                           ;doprnt.c: 599: continue;
 15038                           
 15039     03B8  082E               	movf	printf@f,w
 15040     03B9  0084               	movwf	4
 15041     03BA  082F               	movf	printf@f+1,w
 15042     03BB  0085               	movwf	5
 15043     03BC  0800               	movf	0,w	;code access
 15044                           
 15045                           ; Switch size 1, requested type "simple"
 15046                           ; Number of cases is 1, Range of values is 48 to 48
 15047                           ; switch strategies available:
 15048                           ; Name         Instructions Cycles
 15049                           ; simple_byte            4     3 (average)
 15050                           ; direct_byte           11     9 (fixed)
 15051                           ; jumptable            263     9 (fixed)
 15052                           ;	Chosen strategy is simple_byte
 15053     03BD  3A30               	xorlw	48	; case 48
 15054     03BE  1903               	skipnz
 15055     03BF  2BB3               	goto	l866
 15056     03C0  2BC1               	goto	l2971
 15057     03C1                     l2971:
 15058                           
 15059                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15060     03C1  082E               	movf	printf@f,w
 15061     03C2  0084               	movwf	4
 15062     03C3  082F               	movf	printf@f+1,w
 15063     03C4  0085               	movwf	5
 15064     03C5  0800               	movf	0,w	;code access
 15065     03C6  3194  24B7  3183   	fcall	_isdigit
 15066     03C9  1C03               	btfss	3,0
 15067     03CA  2BCC               	goto	u1941
 15068     03CB  2BCD               	goto	u1940
 15069     03CC                     u1941:
 15070     03CC  2C80               	goto	l3025
 15071     03CD                     u1940:
 15072     03CD                     l2973:
 15073                           
 15074                           ;doprnt.c: 615: width = 0;
 15075     03CD  0140               	movlb	0	; select bank0
 15076     03CE  01CA               	clrf	printf@width
 15077     03CF  01CB               	clrf	printf@width+1
 15078     03D0                     l2975:
 15079                           
 15080                           ;doprnt.c: 617: width *= 10;
 15081     03D0  300A               	movlw	10
 15082     03D1  0140               	movlb	0	; select bank0
 15083     03D2  00A0               	movwf	___wmul@multiplier
 15084     03D3  3000               	movlw	0
 15085     03D4  00A1               	movwf	___wmul@multiplier+1
 15086     03D5  084B               	movf	printf@width+1,w
 15087     03D6  00A3               	movwf	___wmul@multiplicand+1
 15088     03D7  084A               	movf	printf@width,w
 15089     03D8  00A2               	movwf	___wmul@multiplicand
 15090     03D9  3195  25A6  3183   	fcall	___wmul
 15091     03DC  0140               	movlb	0	; select bank0
 15092     03DD  0821               	movf	?___wmul+1,w
 15093     03DE  00CB               	movwf	printf@width+1
 15094     03DF  0820               	movf	?___wmul,w
 15095     03E0  00CA               	movwf	printf@width
 15096     03E1                     l2977:
 15097                           
 15098                           ;doprnt.c: 618: width += *f++ - '0';
 15099     03E1  082E               	movf	printf@f,w
 15100     03E2  0084               	movwf	4
 15101     03E3  082F               	movf	printf@f+1,w
 15102     03E4  0085               	movwf	5
 15103     03E5  0800               	movf	0,w	;code access
 15104     03E6  3ED0               	addlw	208
 15105     03E7  00BA               	movwf	??_printf
 15106     03E8  30FF               	movlw	255
 15107     03E9  1803               	skipnc
 15108     03EA  3000               	movlw	0
 15109     03EB  00BB               	movwf	??_printf+1
 15110     03EC  083A               	movf	??_printf,w
 15111     03ED  07CA               	addwf	printf@width,f
 15112     03EE  083B               	movf	??_printf+1,w
 15113     03EF  3DCB               	addwfc	printf@width+1,f
 15114     03F0                     l2979:
 15115     03F0  3001               	movlw	1
 15116     03F1  07AE               	addwf	printf@f,f
 15117     03F2  3000               	movlw	0
 15118     03F3  3DAF               	addwfc	printf@f+1,f
 15119     03F4                     l2981:
 15120                           
 15121                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15122     03F4  082E               	movf	printf@f,w
 15123     03F5  0084               	movwf	4
 15124     03F6  082F               	movf	printf@f+1,w
 15125     03F7  0085               	movwf	5
 15126     03F8  0800               	movf	0,w	;code access
 15127     03F9  3194  24B7  3183   	fcall	_isdigit
 15128     03FC  1803               	btfsc	3,0
 15129     03FD  2BFF               	goto	u1951
 15130     03FE  2C00               	goto	u1950
 15131     03FF                     u1951:
 15132     03FF  2BD0               	goto	l2975
 15133     0400                     u1950:
 15134     0400  2C80               	goto	l3025
 15135     0401                     l876:	
 15136                           ;doprnt.c: 738: case 'X':
 15137                           
 15138                           
 15139                           ;doprnt.c: 740: flag |= 0x20;
 15140     0401  16C9               	bsf	printf@flag,5
 15141     0402                     l877:	
 15142                           ;doprnt.c: 744: case 'x':
 15143                           
 15144                           
 15145                           ;doprnt.c: 747: flag |= 0x80;
 15146     0402  17C9               	bsf	printf@flag,7
 15147                           
 15148                           ;doprnt.c: 749: break;
 15149     0403  2CA1               	goto	l3027
 15150     0404                     l2983:
 15151                           
 15152                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 15153     0404  0846               	movf	printf@ap,w
 15154     0405  0086               	movwf	6
 15155     0406  0187               	clrf	7
 15156     0407  3F40               	moviw [0]fsr1
 15157     0408  00C2               	movwf	printf@cp
 15158     0409  3F41               	moviw [1]fsr1
 15159     040A  00C3               	movwf	printf@cp+1
 15160     040B                     l2985:
 15161     040B  3002               	movlw	2
 15162     040C  00BA               	movwf	??_printf
 15163     040D  083A               	movf	??_printf,w
 15164     040E  07C6               	addwf	printf@ap,f
 15165     040F                     l2987:
 15166                           
 15167                           ;doprnt.c: 766: if(!cp)
 15168     040F  0842               	movf	printf@cp,w
 15169     0410  0443               	iorwf	printf@cp+1,w
 15170     0411  1D03               	btfss	3,2
 15171     0412  2C14               	goto	u1961
 15172     0413  2C15               	goto	u1960
 15173     0414                     u1961:
 15174     0414  2C19               	goto	l2991
 15175     0415                     u1960:
 15176     0415                     l2989:
 15177                           
 15178                           ;doprnt.c: 767: cp = "(null)";
 15179     0415  3090               	movlw	low (STR_30| (0+32768))
 15180     0416  00C2               	movwf	printf@cp
 15181     0417  3099               	movlw	high (STR_30| (0+32768))
 15182     0418  00C3               	movwf	printf@cp+1
 15183     0419                     l2991:
 15184                           
 15185                           ;doprnt.c: 771: len = 0;
 15186     0419  01C7               	clrf	printf@len
 15187     041A  01C8               	clrf	printf@len+1
 15188                           
 15189                           ;doprnt.c: 772: while(cp[len])
 15190     041B  2C20               	goto	l2995
 15191     041C                     l2993:
 15192                           
 15193                           ;doprnt.c: 773: len++;
 15194     041C  3001               	movlw	1
 15195     041D  07C7               	addwf	printf@len,f
 15196     041E  3000               	movlw	0
 15197     041F  3DC8               	addwfc	printf@len+1,f
 15198     0420                     l2995:
 15199     0420  0842               	movf	printf@cp,w
 15200     0421  0747               	addwf	printf@len,w
 15201     0422  0084               	movwf	4
 15202     0423  0843               	movf	printf@cp+1,w
 15203     0424  3D48               	addwfc	printf@len+1,w
 15204     0425  0085               	movwf	5
 15205     0426  0012               	moviw fsr0++
 15206     0427  1D03               	btfss	3,2
 15207     0428  2C2A               	goto	u1971
 15208     0429  2C2B               	goto	u1970
 15209     042A                     u1971:
 15210     042A  2C1C               	goto	l2993
 15211     042B                     u1970:
 15212     042B                     l2997:
 15213                           
 15214                           ;doprnt.c: 783: if(((unsigned)width) > len)
 15215     042B  084B               	movf	printf@width+1,w
 15216     042C  0248               	subwf	printf@len+1,w
 15217     042D  1D03               	skipz
 15218     042E  2C31               	goto	u1985
 15219     042F  084A               	movf	printf@width,w
 15220     0430  0247               	subwf	printf@len,w
 15221     0431                     u1985:
 15222     0431  1803               	skipnc
 15223     0432  2C34               	goto	u1981
 15224     0433  2C35               	goto	u1980
 15225     0434                     u1981:
 15226     0434  2C3A               	goto	l3001
 15227     0435                     u1980:
 15228     0435                     l2999:
 15229                           
 15230                           ;doprnt.c: 784: width -= len;
 15231     0435  0847               	movf	printf@len,w
 15232     0436  02CA               	subwf	printf@width,f
 15233     0437  0848               	movf	printf@len+1,w
 15234     0438  3BCB               	subwfb	printf@width+1,f
 15235     0439  2C41               	goto	l3005
 15236     043A                     l3001:
 15237                           
 15238                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
 15239     043A  01CA               	clrf	printf@width
 15240     043B  01CB               	clrf	printf@width+1
 15241     043C  2C41               	goto	l3005
 15242     043D                     l3003:
 15243                           
 15244                           ;doprnt.c: 791: (putch(' ') );
 15245     043D  3020               	movlw	32
 15246     043E  3194  2461  3183   	fcall	_putch
 15247     0441                     l3005:
 15248     0441  30FF               	movlw	255
 15249     0442  0140               	movlb	0	; select bank0
 15250     0443  07CA               	addwf	printf@width,f
 15251     0444  30FF               	movlw	255
 15252     0445  3DCB               	addwfc	printf@width+1,f
 15253     0446  0A4A               	incf	printf@width,w
 15254     0447  1D03               	skipz
 15255     0448  2C4D               	goto	u1991
 15256     0449  0A4B               	incf	printf@width+1,w
 15257     044A  1D03               	btfss	3,2
 15258     044B  2C4D               	goto	u1991
 15259     044C  2C4E               	goto	u1990
 15260     044D                     u1991:
 15261     044D  2C3D               	goto	l3003
 15262     044E                     u1990:
 15263     044E  2C5C               	goto	l3011
 15264     044F                     l3007:
 15265                           
 15266                           ;doprnt.c: 794: (putch(*cp++) );
 15267     044F  0842               	movf	printf@cp,w
 15268     0450  0084               	movwf	4
 15269     0451  0843               	movf	printf@cp+1,w
 15270     0452  0085               	movwf	5
 15271     0453  0800               	movf	0,w	;code access
 15272     0454  3194  2461  3183   	fcall	_putch
 15273     0457                     l3009:
 15274     0457  3001               	movlw	1
 15275     0458  0140               	movlb	0	; select bank0
 15276     0459  07C2               	addwf	printf@cp,f
 15277     045A  3000               	movlw	0
 15278     045B  3DC3               	addwfc	printf@cp+1,f
 15279     045C                     l3011:
 15280     045C  3001               	movlw	1
 15281     045D  02C7               	subwf	printf@len,f
 15282     045E  3000               	movlw	0
 15283     045F  3BC8               	subwfb	printf@len+1,f
 15284     0460  0A47               	incf	printf@len,w
 15285     0461  1D03               	skipz
 15286     0462  2C67               	goto	u2001
 15287     0463  0A48               	incf	printf@len+1,w
 15288     0464  1D03               	btfss	3,2
 15289     0465  2C67               	goto	u2001
 15290     0466  2C68               	goto	u2000
 15291     0467                     u2001:
 15292     0467  2C4F               	goto	l3007
 15293     0468                     u2000:
 15294     0468  2DD2               	goto	l3097
 15295     0469                     l3013:
 15296                           
 15297                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
 15298     0469  0846               	movf	printf@ap,w
 15299     046A  0086               	movwf	6
 15300     046B  0187               	clrf	7
 15301     046C  0801               	movf	1,w
 15302     046D  00CC               	movwf	printf@c
 15303     046E                     l3015:
 15304     046E  3002               	movlw	2
 15305     046F  00BA               	movwf	??_printf
 15306     0470  083A               	movf	??_printf,w
 15307     0471  07C6               	addwf	printf@ap,f
 15308     0472                     l3017:
 15309                           
 15310                           ;doprnt.c: 831: cp = (char *)&c;
 15311     0472  304C               	movlw	low printf@c
 15312     0473  00C2               	movwf	printf@cp
 15313     0474  3000               	movlw	high printf@c
 15314     0475  00C3               	movwf	printf@cp+1
 15315     0476                     l3019:
 15316                           
 15317                           ;doprnt.c: 832: len = 1;
 15318     0476  3001               	movlw	1
 15319     0477  00C7               	movwf	printf@len
 15320     0478  3000               	movlw	0
 15321     0479  00C8               	movwf	printf@len+1
 15322                           
 15323                           ;doprnt.c: 833: goto dostring;
 15324     047A  2C2B               	goto	l2997
 15325     047B                     l3021:
 15326                           
 15327                           ;doprnt.c: 844: flag |= 0xC0;
 15328     047B  30C0               	movlw	192
 15329     047C  00BA               	movwf	??_printf
 15330     047D  083A               	movf	??_printf,w
 15331     047E  04C9               	iorwf	printf@flag,f
 15332                           
 15333                           ;doprnt.c: 845: break;
 15334     047F  2CA1               	goto	l3027
 15335     0480                     l3025:
 15336     0480  0140               	movlb	0	; select bank0
 15337     0481  082F               	movf	printf@f+1,w
 15338     0482  00BB               	movwf	??_printf+1
 15339     0483  082E               	movf	printf@f,w
 15340     0484  00BA               	movwf	??_printf
 15341     0485  0AAE               	incf	printf@f,f
 15342     0486  1903               	skipnz
 15343     0487  0AAF               	incf	printf@f+1,f
 15344     0488  083A               	movf	??_printf,w
 15345     0489  0084               	movwf	4
 15346     048A  083B               	movf	??_printf+1,w
 15347     048B  0085               	movwf	5
 15348     048C  0800               	movf	0,w	;code access
 15349     048D  00CC               	movwf	printf@c
 15350                           
 15351                           ; Switch size 1, requested type "simple"
 15352                           ; Number of cases is 6, Range of values is 0 to 120
 15353                           ; switch strategies available:
 15354                           ; Name         Instructions Cycles
 15355                           ; simple_byte           19    10 (average)
 15356                           ; direct_byte          248     6 (fixed)
 15357                           ; jumptable            260     6 (fixed)
 15358                           ;	Chosen strategy is simple_byte
 15359     048E  3A00               	xorlw	0	; case 0
 15360     048F  1903               	skipnz
 15361     0490  2DE5               	goto	l928
 15362     0491  3A58               	xorlw	88	; case 88
 15363     0492  1903               	skipnz
 15364     0493  2C01               	goto	l876
 15365     0494  3A3B               	xorlw	59	; case 99
 15366     0495  1903               	skipnz
 15367     0496  2C69               	goto	l3013
 15368     0497  3A10               	xorlw	16	; case 115
 15369     0498  1903               	skipnz
 15370     0499  2C04               	goto	l2983
 15371     049A  3A06               	xorlw	6	; case 117
 15372     049B  1903               	skipnz
 15373     049C  2C7B               	goto	l3021
 15374     049D  3A0D               	xorlw	13	; case 120
 15375     049E  1903               	skipnz
 15376     049F  2C02               	goto	l877
 15377     04A0  2C72               	goto	l3017
 15378     04A1                     l3027:
 15379                           
 15380                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
 15381     04A1  0846               	movf	printf@ap,w
 15382     04A2  0086               	movwf	6
 15383     04A3  0187               	clrf	7
 15384     04A4  3F40               	moviw [0]fsr1
 15385     04A5  00C4               	movwf	printf@val
 15386     04A6  3F41               	moviw [1]fsr1
 15387     04A7  00C5               	movwf	printf@val+1
 15388     04A8                     l3029:
 15389     04A8  3002               	movlw	2
 15390     04A9  00BA               	movwf	??_printf
 15391     04AA  083A               	movf	??_printf,w
 15392     04AB  07C6               	addwf	printf@ap,f
 15393                           
 15394                           ;doprnt.c: 1313: };doprnt.c: 1320: switch((unsigned char)(flag & (0xC0))) {
 15395     04AC  2D0B               	goto	l3053
 15396     04AD                     l897:	
 15397                           ;doprnt.c: 1328: case 0xC0:
 15398                           
 15399                           
 15400                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15401     04AD  01CC               	clrf	printf@c
 15402     04AE  0ACC               	incf	printf@c,f
 15403     04AF                     l3031:
 15404     04AF  3005               	movlw	5
 15405     04B0  064C               	xorwf	printf@c,w
 15406     04B1  1D03               	btfss	3,2
 15407     04B2  2CB4               	goto	u2011
 15408     04B3  2CB5               	goto	u2010
 15409     04B4                     u2011:
 15410     04B4  2CB6               	goto	l3035
 15411     04B5                     u2010:
 15412     04B5  2D14               	goto	l3055
 15413     04B6                     l3035:
 15414                           
 15415                           ;doprnt.c: 1332: if(val < dpowers[c])
 15416     04B6  084C               	movf	printf@c,w
 15417     04B7  00BA               	movwf	??_printf
 15418     04B8  01BB               	clrf	??_printf+1
 15419     04B9  35BA               	lslf	??_printf,f
 15420     04BA  0DBB               	rlf	??_printf+1,f
 15421     04BB  307D               	movlw	low _dpowers
 15422     04BC  073A               	addwf	??_printf,w
 15423     04BD  0084               	movwf	4
 15424     04BE  3019               	movlw	high _dpowers
 15425     04BF  3D3B               	addwfc	??_printf+1,w
 15426     04C0  3880               	iorlw	128
 15427     04C1  0085               	movwf	5
 15428     04C2  3F00               	moviw [0]fsr0
 15429     04C3  00BC               	movwf	??_printf+2
 15430     04C4  3F01               	moviw [1]fsr0
 15431     04C5  00BD               	movwf	??_printf+3
 15432     04C6  083D               	movf	??_printf+3,w
 15433     04C7  0245               	subwf	printf@val+1,w
 15434     04C8  1D03               	skipz
 15435     04C9  2CCC               	goto	u2025
 15436     04CA  083C               	movf	??_printf+2,w
 15437     04CB  0244               	subwf	printf@val,w
 15438     04CC                     u2025:
 15439     04CC  1803               	skipnc
 15440     04CD  2CCF               	goto	u2021
 15441     04CE  2CD0               	goto	u2020
 15442     04CF                     u2021:
 15443     04CF  2CD1               	goto	l3039
 15444     04D0                     u2020:
 15445     04D0  2D14               	goto	l3055
 15446     04D1                     l3039:
 15447     04D1  3001               	movlw	1
 15448     04D2  00BA               	movwf	??_printf
 15449     04D3  083A               	movf	??_printf,w
 15450     04D4  07CC               	addwf	printf@c,f
 15451     04D5  3005               	movlw	5
 15452     04D6  064C               	xorwf	printf@c,w
 15453     04D7  1D03               	btfss	3,2
 15454     04D8  2CDA               	goto	u2031
 15455     04D9  2CDB               	goto	u2030
 15456     04DA                     u2031:
 15457     04DA  2CB6               	goto	l3035
 15458     04DB                     u2030:
 15459     04DB  2D14               	goto	l3055
 15460     04DC                     l902:	
 15461                           ;doprnt.c: 1340: case 0x80:
 15462                           
 15463                           
 15464                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 15465     04DC  01CC               	clrf	printf@c
 15466     04DD  0ACC               	incf	printf@c,f
 15467     04DE                     l3041:
 15468     04DE  3004               	movlw	4
 15469     04DF  064C               	xorwf	printf@c,w
 15470     04E0  1D03               	btfss	3,2
 15471     04E1  2CE3               	goto	u2041
 15472     04E2  2CE4               	goto	u2040
 15473     04E3                     u2041:
 15474     04E3  2CE5               	goto	l3045
 15475     04E4                     u2040:
 15476     04E4  2D14               	goto	l3055
 15477     04E5                     l3045:
 15478                           
 15479                           ;doprnt.c: 1343: if(val < hexpowers[c])
 15480     04E5  084C               	movf	printf@c,w
 15481     04E6  00BA               	movwf	??_printf
 15482     04E7  01BB               	clrf	??_printf+1
 15483     04E8  35BA               	lslf	??_printf,f
 15484     04E9  0DBB               	rlf	??_printf+1,f
 15485     04EA  3000               	movlw	low _hexpowers
 15486     04EB  073A               	addwf	??_printf,w
 15487     04EC  0084               	movwf	4
 15488     04ED  3010               	movlw	high _hexpowers
 15489     04EE  3D3B               	addwfc	??_printf+1,w
 15490     04EF  3880               	iorlw	128
 15491     04F0  0085               	movwf	5
 15492     04F1  3F00               	moviw [0]fsr0
 15493     04F2  00BC               	movwf	??_printf+2
 15494     04F3  3F01               	moviw [1]fsr0
 15495     04F4  00BD               	movwf	??_printf+3
 15496     04F5  083D               	movf	??_printf+3,w
 15497     04F6  0245               	subwf	printf@val+1,w
 15498     04F7  1D03               	skipz
 15499     04F8  2CFB               	goto	u2055
 15500     04F9  083C               	movf	??_printf+2,w
 15501     04FA  0244               	subwf	printf@val,w
 15502     04FB                     u2055:
 15503     04FB  1803               	skipnc
 15504     04FC  2CFE               	goto	u2051
 15505     04FD  2CFF               	goto	u2050
 15506     04FE                     u2051:
 15507     04FE  2D00               	goto	l3049
 15508     04FF                     u2050:
 15509     04FF  2D14               	goto	l3055
 15510     0500                     l3049:
 15511     0500  3001               	movlw	1
 15512     0501  00BA               	movwf	??_printf
 15513     0502  083A               	movf	??_printf,w
 15514     0503  07CC               	addwf	printf@c,f
 15515     0504  3004               	movlw	4
 15516     0505  064C               	xorwf	printf@c,w
 15517     0506  1D03               	btfss	3,2
 15518     0507  2D09               	goto	u2061
 15519     0508  2D0A               	goto	u2060
 15520     0509                     u2061:
 15521     0509  2CE5               	goto	l3045
 15522     050A                     u2060:
 15523     050A  2D14               	goto	l3055
 15524     050B                     l3053:
 15525     050B  0849               	movf	printf@flag,w
 15526     050C  39C0               	andlw	192
 15527                           
 15528                           ; Switch size 1, requested type "simple"
 15529                           ; Number of cases is 2, Range of values is 128 to 192
 15530                           ; switch strategies available:
 15531                           ; Name         Instructions Cycles
 15532                           ; simple_byte            7     4 (average)
 15533                           ; direct_byte          139     9 (fixed)
 15534                           ; jumptable            263     9 (fixed)
 15535                           ;	Chosen strategy is simple_byte
 15536     050D  3A80               	xorlw	128	; case 128
 15537     050E  1903               	skipnz
 15538     050F  2CDC               	goto	l902
 15539     0510  3A40               	xorlw	64	; case 192
 15540     0511  1903               	skipnz
 15541     0512  2CAD               	goto	l897
 15542     0513  2D14               	goto	l3055
 15543     0514                     l3055:
 15544                           
 15545                           ;doprnt.c: 1407: if(width > c)
 15546     0514  084B               	movf	printf@width+1,w
 15547     0515  3A80               	xorlw	128
 15548     0516  3C80               	sublw	128
 15549     0517  1D03               	skipz
 15550     0518  2D1B               	goto	u2075
 15551     0519  084A               	movf	printf@width,w
 15552     051A  024C               	subwf	printf@c,w
 15553     051B                     u2075:
 15554     051B  1803               	skipnc
 15555     051C  2D1E               	goto	u2071
 15556     051D  2D1F               	goto	u2070
 15557     051E                     u2071:
 15558     051E  2D28               	goto	l3059
 15559     051F                     u2070:
 15560     051F                     l3057:
 15561                           
 15562                           ;doprnt.c: 1408: width -= c;
 15563     051F  0140               	movlb	0	; select bank0
 15564     0520  084C               	movf	printf@c,w
 15565     0521  00BA               	movwf	??_printf
 15566     0522  01BB               	clrf	??_printf+1
 15567     0523  083A               	movf	??_printf,w
 15568     0524  02CA               	subwf	printf@width,f
 15569     0525  083B               	movf	??_printf+1,w
 15570     0526  3BCB               	subwfb	printf@width+1,f
 15571     0527  2D2B               	goto	l3061
 15572     0528                     l3059:
 15573                           
 15574                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 15575     0528  0140               	movlb	0	; select bank0
 15576     0529  01CA               	clrf	printf@width
 15577     052A  01CB               	clrf	printf@width+1
 15578     052B                     l3061:
 15579                           
 15580                           ;doprnt.c: 1413: if(flag & 0x04) {
 15581     052B  1D49               	btfss	printf@flag,2
 15582     052C  2D2E               	goto	u2081
 15583     052D  2D2F               	goto	u2080
 15584     052E                     u2081:
 15585     052E  2D45               	goto	l3069
 15586     052F                     u2080:
 15587     052F                     l3063:
 15588                           
 15589                           ;doprnt.c: 1441: if(width)
 15590     052F  084A               	movf	printf@width,w
 15591     0530  044B               	iorwf	printf@width+1,w
 15592     0531  1903               	btfsc	3,2
 15593     0532  2D34               	goto	u2091
 15594     0533  2D35               	goto	u2090
 15595     0534                     u2091:
 15596     0534  2D5A               	goto	l3075
 15597     0535                     u2090:
 15598     0535                     l3065:
 15599                           
 15600                           ;doprnt.c: 1443: (putch('0') );
 15601     0535  3030               	movlw	48
 15602     0536  3194  2461  3183   	fcall	_putch
 15603     0539                     l3067:
 15604                           
 15605                           ;doprnt.c: 1444: while(--width);
 15606     0539  30FF               	movlw	255
 15607     053A  0140               	movlb	0	; select bank0
 15608     053B  07CA               	addwf	printf@width,f
 15609     053C  30FF               	movlw	255
 15610     053D  3DCB               	addwfc	printf@width+1,f
 15611     053E  084A               	movf	printf@width,w
 15612     053F  044B               	iorwf	printf@width+1,w
 15613     0540  1D03               	btfss	3,2
 15614     0541  2D43               	goto	u2101
 15615     0542  2D44               	goto	u2100
 15616     0543                     u2101:
 15617     0543  2D35               	goto	l3065
 15618     0544                     u2100:
 15619     0544  2D5A               	goto	l3075
 15620     0545                     l3069:
 15621                           
 15622                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 15623     0545  084A               	movf	printf@width,w
 15624     0546  044B               	iorwf	printf@width+1,w
 15625     0547  1903               	btfsc	3,2
 15626     0548  2D4A               	goto	u2111
 15627     0549  2D4B               	goto	u2110
 15628     054A                     u2111:
 15629     054A  2D5A               	goto	l3075
 15630     054B                     u2110:
 15631     054B                     l3071:
 15632                           
 15633                           ;doprnt.c: 1456: (putch(' ') );
 15634     054B  3020               	movlw	32
 15635     054C  3194  2461  3183   	fcall	_putch
 15636     054F                     l3073:
 15637                           
 15638                           ;doprnt.c: 1457: while(--width);
 15639     054F  30FF               	movlw	255
 15640     0550  0140               	movlb	0	; select bank0
 15641     0551  07CA               	addwf	printf@width,f
 15642     0552  30FF               	movlw	255
 15643     0553  3DCB               	addwfc	printf@width+1,f
 15644     0554  084A               	movf	printf@width,w
 15645     0555  044B               	iorwf	printf@width+1,w
 15646     0556  1D03               	btfss	3,2
 15647     0557  2D59               	goto	u2121
 15648     0558  2D5A               	goto	u2120
 15649     0559                     u2121:
 15650     0559  2D4B               	goto	l3071
 15651     055A                     u2120:
 15652     055A                     l3075:
 15653                           
 15654                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 15655     055A  084C               	movf	printf@c,w
 15656     055B  00C1               	movwf	printf@prec
 15657                           
 15658                           ;doprnt.c: 1500: while(prec--) {
 15659     055C  2DC8               	goto	l3095
 15660     055D                     l3077:
 15661                           
 15662                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 15663     055D  300A               	movlw	10
 15664     055E  00A8               	movwf	___lwmod@divisor
 15665     055F  3000               	movlw	0
 15666     0560  00A9               	movwf	___lwmod@divisor+1
 15667     0561  0841               	movf	printf@prec,w
 15668     0562  00BA               	movwf	??_printf
 15669     0563  01BB               	clrf	??_printf+1
 15670     0564  35BA               	lslf	??_printf,f
 15671     0565  0DBB               	rlf	??_printf+1,f
 15672     0566  307D               	movlw	low _dpowers
 15673     0567  073A               	addwf	??_printf,w
 15674     0568  0084               	movwf	4
 15675     0569  3019               	movlw	high _dpowers
 15676     056A  3D3B               	addwfc	??_printf+1,w
 15677     056B  3880               	iorlw	128
 15678     056C  0085               	movwf	5
 15679     056D  3F00               	moviw [0]fsr0
 15680     056E  00A0               	movwf	___lwdiv@divisor
 15681     056F  3F01               	moviw [1]fsr0
 15682     0570  00A1               	movwf	___lwdiv@divisor+1
 15683     0571  0845               	movf	printf@val+1,w
 15684     0572  00A3               	movwf	___lwdiv@dividend+1
 15685     0573  0844               	movf	printf@val,w
 15686     0574  00A2               	movwf	___lwdiv@dividend
 15687     0575  3197  2745  3183   	fcall	___lwdiv
 15688     0578  0140               	movlb	0	; select bank0
 15689     0579  0821               	movf	?___lwdiv+1,w
 15690     057A  00AB               	movwf	___lwmod@dividend+1
 15691     057B  0820               	movf	?___lwdiv,w
 15692     057C  00AA               	movwf	___lwmod@dividend
 15693     057D  3196  26D7  3183   	fcall	___lwmod
 15694     0580  0140               	movlb	0	; select bank0
 15695     0581  0828               	movf	?___lwmod,w
 15696     0582  3E30               	addlw	48
 15697     0583  00CC               	movwf	printf@c
 15698                           
 15699                           ;doprnt.c: 1517: break;
 15700     0584  2DC4               	goto	l3093
 15701     0585                     l3079:
 15702                           
 15703                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
 15704     0585  0841               	movf	printf@prec,w
 15705     0586  00BA               	movwf	??_printf
 15706     0587  01BB               	clrf	??_printf+1
 15707     0588  35BA               	lslf	??_printf,f
 15708     0589  0DBB               	rlf	??_printf+1,f
 15709     058A  3000               	movlw	low _hexpowers
 15710     058B  073A               	addwf	??_printf,w
 15711     058C  0084               	movwf	4
 15712     058D  3010               	movlw	high _hexpowers
 15713     058E  3D3B               	addwfc	??_printf+1,w
 15714     058F  3880               	iorlw	128
 15715     0590  0085               	movwf	5
 15716     0591  3F00               	moviw [0]fsr0
 15717     0592  00A0               	movwf	___lwdiv@divisor
 15718     0593  3F01               	moviw [1]fsr0
 15719     0594  00A1               	movwf	___lwdiv@divisor+1
 15720     0595  0845               	movf	printf@val+1,w
 15721     0596  00A3               	movwf	___lwdiv@dividend+1
 15722     0597  0844               	movf	printf@val,w
 15723     0598  00A2               	movwf	___lwdiv@dividend
 15724     0599  3197  2745  3183   	fcall	___lwdiv
 15725     059C  0140               	movlb	0	; select bank0
 15726     059D  0820               	movf	?___lwdiv,w
 15727     059E  390F               	andlw	15
 15728     059F  00C0               	movwf	printf@idx
 15729     05A0                     l3081:
 15730                           
 15731                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 15732     05A0  1AC9               	btfsc	printf@flag,5
 15733     05A1  2DA3               	goto	u2131
 15734     05A2  2DA4               	goto	u2130
 15735     05A3                     u2131:
 15736     05A3  2DA9               	goto	l3085
 15737     05A4                     u2130:
 15738     05A4                     l3083:
 15739     05A4  3025               	movlw	low (STR_32| (0+32768))
 15740     05A5  00BE               	movwf	_printf$1662
 15741     05A6  3099               	movlw	high (STR_32| (0+32768))
 15742     05A7  00BF               	movwf	_printf$1662+1
 15743     05A8  2DAD               	goto	l3087
 15744     05A9                     l3085:
 15745     05A9  3014               	movlw	low (STR_31| (0+32768))
 15746     05AA  00BE               	movwf	_printf$1662
 15747     05AB  3099               	movlw	high (STR_31| (0+32768))
 15748     05AC  00BF               	movwf	_printf$1662+1
 15749     05AD                     l3087:
 15750     05AD  083F               	movf	_printf$1662+1,w
 15751     05AE  00BB               	movwf	??_printf+1
 15752     05AF  083E               	movf	_printf$1662,w
 15753     05B0  00BA               	movwf	??_printf
 15754     05B1  0840               	movf	printf@idx,w
 15755     05B2  073A               	addwf	??_printf,w
 15756     05B3  0084               	movwf	4
 15757     05B4  083B               	movf	??_printf+1,w
 15758     05B5  1803               	skipnc
 15759     05B6  0A3B               	incf	??_printf+1,w
 15760     05B7  0085               	movwf	5
 15761     05B8  0800               	movf	0,w	;code access
 15762     05B9  00CC               	movwf	printf@c
 15763                           
 15764                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
 15765     05BA  2DC4               	goto	l3093
 15766     05BB                     l3091:
 15767     05BB  0849               	movf	printf@flag,w
 15768     05BC  39C0               	andlw	192
 15769                           
 15770                           ; Switch size 1, requested type "simple"
 15771                           ; Number of cases is 2, Range of values is 128 to 192
 15772                           ; switch strategies available:
 15773                           ; Name         Instructions Cycles
 15774                           ; simple_byte            7     4 (average)
 15775                           ; direct_byte          139     9 (fixed)
 15776                           ; jumptable            263     9 (fixed)
 15777                           ;	Chosen strategy is simple_byte
 15778     05BD  3A80               	xorlw	128	; case 128
 15779     05BE  1903               	skipnz
 15780     05BF  2D85               	goto	l3079
 15781     05C0  3A40               	xorlw	64	; case 192
 15782     05C1  1903               	skipnz
 15783     05C2  2D5D               	goto	l3077
 15784     05C3  2DC4               	goto	l3093
 15785     05C4                     l3093:
 15786                           
 15787                           ;doprnt.c: 1550: (putch(c) );
 15788     05C4  084C               	movf	printf@c,w
 15789     05C5  3194  2461  3183   	fcall	_putch
 15790     05C8                     l3095:
 15791     05C8  30FF               	movlw	255
 15792     05C9  0140               	movlb	0	; select bank0
 15793     05CA  00BA               	movwf	??_printf
 15794     05CB  083A               	movf	??_printf,w
 15795     05CC  07C1               	addwf	printf@prec,f
 15796     05CD  0A41               	incf	printf@prec,w
 15797     05CE  1D03               	btfss	3,2
 15798     05CF  2DD1               	goto	u2141
 15799     05D0  2DD2               	goto	u2140
 15800     05D1                     u2141:
 15801     05D1  2DBB               	goto	l3091
 15802     05D2                     u2140:
 15803     05D2                     l3097:
 15804     05D2  0140               	movlb	0	; select bank0
 15805     05D3  082F               	movf	printf@f+1,w
 15806     05D4  00BB               	movwf	??_printf+1
 15807     05D5  082E               	movf	printf@f,w
 15808     05D6  00BA               	movwf	??_printf
 15809     05D7  0AAE               	incf	printf@f,f
 15810     05D8  1903               	skipnz
 15811     05D9  0AAF               	incf	printf@f+1,f
 15812     05DA  083A               	movf	??_printf,w
 15813     05DB  0084               	movwf	4
 15814     05DC  083B               	movf	??_printf+1,w
 15815     05DD  0085               	movwf	5
 15816     05DE  0800               	movf	0,w	;code access
 15817     05DF  00CC               	movwf	printf@c
 15818     05E0  084C               	movf	printf@c,w
 15819     05E1  1D03               	btfss	3,2
 15820     05E2  2DE4               	goto	u2151
 15821     05E3  2DE5               	goto	u2150
 15822     05E4                     u2151:
 15823     05E4  2BA4               	goto	l2959
 15824     05E5                     u2150:
 15825     05E5                     l928:
 15826     05E5  0008               	return
 15827     05E6                     __end_of_printf:
 15828                           
 15829                           	psect	text41
 15830     1461                     __ptext41:	
 15831 ;; *************** function _putch *****************
 15832 ;; Defined at:
 15833 ;;		line 29 in file "uart.c"
 15834 ;; Parameters:    Size  Location     Type
 15835 ;;  data            1    wreg     unsigned char 
 15836 ;; Auto vars:     Size  Location     Type
 15837 ;;  data            1    0[BANK0 ] unsigned char 
 15838 ;; Return value:  Size  Location     Type
 15839 ;;                  1    wreg      void 
 15840 ;; Registers used:
 15841 ;;		wreg
 15842 ;; Tracked objects:
 15843 ;;		On entry : 0/0
 15844 ;;		On exit  : 0/0
 15845 ;;		Unchanged: 0/0
 15846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15850 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15851 ;;Total ram usage:        1 bytes
 15852 ;; Hardware stack levels used: 1
 15853 ;; Hardware stack levels required when called: 2
 15854 ;; This function calls:
 15855 ;;		Nothing
 15856 ;; This function is called by:
 15857 ;;		_printf
 15858 ;; This function uses a non-reentrant model
 15859 ;;
 15860                           
 15861     1461                     _putch:	
 15862                           ;psect for function _putch
 15863                           
 15864                           
 15865                           ;incstack = 0
 15866                           ; Regs used in _putch: [wreg]
 15867                           ;putch@data stored from wreg
 15868     1461  0140               	movlb	0	; select bank0
 15869     1462  00A0               	movwf	putch@data
 15870     1463                     l2863:
 15871     1463                     l473:	
 15872                           ;uart.c: 31: while(0 == PIR3bits.TX1IF);
 15873                           
 15874     1463  014E               	movlb	14	; select bank14
 15875     1464  1E0F               	btfss	15,4	;volatile
 15876     1465  2C67               	goto	u1701
 15877     1466  2C68               	goto	u1700
 15878     1467                     u1701:
 15879     1467  2C63               	goto	l473
 15880     1468                     u1700:
 15881     1468                     l2865:
 15882                           
 15883                           ;uart.c: 32: TX1REG = data;
 15884     1468  0140               	movlb	0	; select bank0
 15885     1469  0820               	movf	putch@data,w
 15886     146A  0142               	movlb	2	; select bank2
 15887     146B  009A               	movwf	26	;volatile
 15888     146C                     l476:
 15889     146C  0008               	return
 15890     146D                     __end_of_putch:
 15891                           
 15892                           	psect	text42
 15893     14B7                     __ptext42:	
 15894 ;; *************** function _isdigit *****************
 15895 ;; Defined at:
 15896 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isdigit.c"
 15897 ;; Parameters:    Size  Location     Type
 15898 ;;  c               1    wreg     unsigned char 
 15899 ;; Auto vars:     Size  Location     Type
 15900 ;;  c               1    1[BANK0 ] unsigned char 
 15901 ;; Return value:  Size  Location     Type
 15902 ;;		None               void
 15903 ;; Registers used:
 15904 ;;		wreg, status,2, status,0
 15905 ;; Tracked objects:
 15906 ;;		On entry : 0/0
 15907 ;;		On exit  : 0/0
 15908 ;;		Unchanged: 0/0
 15909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15911 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15913 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15914 ;;Total ram usage:        2 bytes
 15915 ;; Hardware stack levels used: 1
 15916 ;; Hardware stack levels required when called: 2
 15917 ;; This function calls:
 15918 ;;		Nothing
 15919 ;; This function is called by:
 15920 ;;		_printf
 15921 ;;		_strtol
 15922 ;; This function uses a non-reentrant model
 15923 ;;
 15924                           
 15925     14B7                     _isdigit:	
 15926                           ;psect for function _isdigit
 15927                           
 15928                           
 15929                           ;incstack = 0
 15930                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 15931                           ;isdigit@c stored from wreg
 15932     14B7  0140               	movlb	0	; select bank0
 15933     14B8  00A1               	movwf	isdigit@c
 15934     14B9                     l2871:
 15935     14B9  01A0               	clrf	_isdigit$1945
 15936     14BA                     l2873:
 15937     14BA  303A               	movlw	58
 15938     14BB  0221               	subwf	isdigit@c,w
 15939     14BC  1803               	skipnc
 15940     14BD  2CBF               	goto	u1721
 15941     14BE  2CC0               	goto	u1720
 15942     14BF                     u1721:
 15943     14BF  2CC8               	goto	l2879
 15944     14C0                     u1720:
 15945     14C0                     l2875:
 15946     14C0  3030               	movlw	48
 15947     14C1  0221               	subwf	isdigit@c,w
 15948     14C2  1C03               	skipc
 15949     14C3  2CC5               	goto	u1731
 15950     14C4  2CC6               	goto	u1730
 15951     14C5                     u1731:
 15952     14C5  2CC8               	goto	l2879
 15953     14C6                     u1730:
 15954     14C6                     l2877:
 15955     14C6  01A0               	clrf	_isdigit$1945
 15956     14C7  0AA0               	incf	_isdigit$1945,f
 15957     14C8                     l2879:
 15958     14C8  0C20               	rrf	_isdigit$1945,w
 15959     14C9                     l1385:
 15960     14C9  0008               	return
 15961     14CA                     __end_of_isdigit:
 15962                           
 15963                           	psect	text43
 15964     15A6                     __ptext43:	
 15965 ;; *************** function ___wmul *****************
 15966 ;; Defined at:
 15967 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul16.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;  multiplier      2    0[BANK0 ] unsigned int 
 15970 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 15971 ;; Auto vars:     Size  Location     Type
 15972 ;;  product         2    4[BANK0 ] unsigned int 
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  2    0[BANK0 ] unsigned int 
 15975 ;; Registers used:
 15976 ;;		wreg, status,2, status,0
 15977 ;; Tracked objects:
 15978 ;;		On entry : 0/0
 15979 ;;		On exit  : 0/0
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15985 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15986 ;;Total ram usage:        6 bytes
 15987 ;; Hardware stack levels used: 1
 15988 ;; Hardware stack levels required when called: 2
 15989 ;; This function calls:
 15990 ;;		Nothing
 15991 ;; This function is called by:
 15992 ;;		_printf
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996     15A6                     ___wmul:	
 15997                           ;psect for function ___wmul
 15998                           
 15999     15A6                     l2883:	
 16000                           ;incstack = 0
 16001                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16002                           
 16003     15A6  0140               	movlb	0	; select bank0
 16004     15A7  01A4               	clrf	___wmul@product
 16005     15A8  01A5               	clrf	___wmul@product+1
 16006     15A9                     l2885:
 16007     15A9  1C20               	btfss	___wmul@multiplier,0
 16008     15AA  2DAC               	goto	u1741
 16009     15AB  2DAD               	goto	u1740
 16010     15AC                     u1741:
 16011     15AC  2DB1               	goto	l932
 16012     15AD                     u1740:
 16013     15AD                     l2887:
 16014     15AD  0822               	movf	___wmul@multiplicand,w
 16015     15AE  07A4               	addwf	___wmul@product,f
 16016     15AF  0823               	movf	___wmul@multiplicand+1,w
 16017     15B0  3DA5               	addwfc	___wmul@product+1,f
 16018     15B1                     l932:
 16019     15B1  3001               	movlw	1
 16020     15B2                     u1755:
 16021     15B2  35A2               	lslf	___wmul@multiplicand,f
 16022     15B3  0DA3               	rlf	___wmul@multiplicand+1,f
 16023     15B4  0B89               	decfsz	9,f
 16024     15B5  2DB2               	goto	u1755
 16025     15B6                     l2889:
 16026     15B6  3001               	movlw	1
 16027     15B7                     u1765:
 16028     15B7  36A1               	lsrf	___wmul@multiplier+1,f
 16029     15B8  0CA0               	rrf	___wmul@multiplier,f
 16030     15B9  0B89               	decfsz	9,f
 16031     15BA  2DB7               	goto	u1765
 16032     15BB                     l2891:
 16033     15BB  0820               	movf	___wmul@multiplier,w
 16034     15BC  0421               	iorwf	___wmul@multiplier+1,w
 16035     15BD  1D03               	btfss	3,2
 16036     15BE  2DC0               	goto	u1771
 16037     15BF  2DC1               	goto	u1770
 16038     15C0                     u1771:
 16039     15C0  2DA9               	goto	l2885
 16040     15C1                     u1770:
 16041     15C1                     l2893:
 16042     15C1  0825               	movf	___wmul@product+1,w
 16043     15C2  00A1               	movwf	?___wmul+1
 16044     15C3  0824               	movf	___wmul@product,w
 16045     15C4  00A0               	movwf	?___wmul
 16046     15C5                     l934:
 16047     15C5  0008               	return
 16048     15C6                     __end_of___wmul:
 16049                           
 16050                           	psect	text44
 16051     16D7                     __ptext44:	
 16052 ;; *************** function ___lwmod *****************
 16053 ;; Defined at:
 16054 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/lwmod.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;  divisor         2    8[BANK0 ] unsigned int 
 16057 ;;  dividend        2   10[BANK0 ] unsigned int 
 16058 ;; Auto vars:     Size  Location     Type
 16059 ;;  counter         1   13[BANK0 ] unsigned char 
 16060 ;; Return value:  Size  Location     Type
 16061 ;;                  2    8[BANK0 ] unsigned int 
 16062 ;; Registers used:
 16063 ;;		wreg, status,2, status,0
 16064 ;; Tracked objects:
 16065 ;;		On entry : 0/0
 16066 ;;		On exit  : 0/0
 16067 ;;		Unchanged: 0/0
 16068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16069 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16072 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16073 ;;Total ram usage:        6 bytes
 16074 ;; Hardware stack levels used: 1
 16075 ;; Hardware stack levels required when called: 2
 16076 ;; This function calls:
 16077 ;;		Nothing
 16078 ;; This function is called by:
 16079 ;;		_printf
 16080 ;; This function uses a non-reentrant model
 16081 ;;
 16082                           
 16083     16D7                     ___lwmod:	
 16084                           ;psect for function ___lwmod
 16085                           
 16086     16D7                     l2923:	
 16087                           ;incstack = 0
 16088                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 16089                           
 16090     16D7  0140               	movlb	0	; select bank0
 16091     16D8  0828               	movf	___lwmod@divisor,w
 16092     16D9  0429               	iorwf	___lwmod@divisor+1,w
 16093     16DA  1903               	btfsc	3,2
 16094     16DB  2EDD               	goto	u1851
 16095     16DC  2EDE               	goto	u1850
 16096     16DD                     u1851:
 16097     16DD  2F07               	goto	l2941
 16098     16DE                     u1850:
 16099     16DE                     l2925:
 16100     16DE  01AD               	clrf	___lwmod@counter
 16101     16DF  0AAD               	incf	___lwmod@counter,f
 16102     16E0  2EEA               	goto	l2931
 16103     16E1                     l2927:
 16104     16E1  3001               	movlw	1
 16105     16E2                     u1865:
 16106     16E2  35A8               	lslf	___lwmod@divisor,f
 16107     16E3  0DA9               	rlf	___lwmod@divisor+1,f
 16108     16E4  0B89               	decfsz	9,f
 16109     16E5  2EE2               	goto	u1865
 16110     16E6                     l2929:
 16111     16E6  3001               	movlw	1
 16112     16E7  00AC               	movwf	??___lwmod
 16113     16E8  082C               	movf	??___lwmod,w
 16114     16E9  07AD               	addwf	___lwmod@counter,f
 16115     16EA                     l2931:
 16116     16EA  1FA9               	btfss	___lwmod@divisor+1,7
 16117     16EB  2EED               	goto	u1871
 16118     16EC  2EEE               	goto	u1870
 16119     16ED                     u1871:
 16120     16ED  2EE1               	goto	l2927
 16121     16EE                     u1870:
 16122     16EE                     l2933:
 16123     16EE  0829               	movf	___lwmod@divisor+1,w
 16124     16EF  022B               	subwf	___lwmod@dividend+1,w
 16125     16F0  1D03               	skipz
 16126     16F1  2EF4               	goto	u1885
 16127     16F2  0828               	movf	___lwmod@divisor,w
 16128     16F3  022A               	subwf	___lwmod@dividend,w
 16129     16F4                     u1885:
 16130     16F4  1C03               	skipc
 16131     16F5  2EF7               	goto	u1881
 16132     16F6  2EF8               	goto	u1880
 16133     16F7                     u1881:
 16134     16F7  2EFC               	goto	l2937
 16135     16F8                     u1880:
 16136     16F8                     l2935:
 16137     16F8  0828               	movf	___lwmod@divisor,w
 16138     16F9  02AA               	subwf	___lwmod@dividend,f
 16139     16FA  0829               	movf	___lwmod@divisor+1,w
 16140     16FB  3BAB               	subwfb	___lwmod@dividend+1,f
 16141     16FC                     l2937:
 16142     16FC  3001               	movlw	1
 16143     16FD                     u1895:
 16144     16FD  36A9               	lsrf	___lwmod@divisor+1,f
 16145     16FE  0CA8               	rrf	___lwmod@divisor,f
 16146     16FF  0B89               	decfsz	9,f
 16147     1700  2EFD               	goto	u1895
 16148     1701                     l2939:
 16149     1701  3001               	movlw	1
 16150     1702  02AD               	subwf	___lwmod@counter,f
 16151     1703  1D03               	btfss	3,2
 16152     1704  2F06               	goto	u1901
 16153     1705  2F07               	goto	u1900
 16154     1706                     u1901:
 16155     1706  2EEE               	goto	l2933
 16156     1707                     u1900:
 16157     1707                     l2941:
 16158     1707  082B               	movf	___lwmod@dividend+1,w
 16159     1708  00A9               	movwf	?___lwmod+1
 16160     1709  082A               	movf	___lwmod@dividend,w
 16161     170A  00A8               	movwf	?___lwmod
 16162     170B                     l1214:
 16163     170B  0008               	return
 16164     170C                     __end_of___lwmod:
 16165                           
 16166                           	psect	text45
 16167     1745                     __ptext45:	
 16168 ;; *************** function ___lwdiv *****************
 16169 ;; Defined at:
 16170 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/lwdiv.c"
 16171 ;; Parameters:    Size  Location     Type
 16172 ;;  divisor         2    0[BANK0 ] unsigned int 
 16173 ;;  dividend        2    2[BANK0 ] unsigned int 
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;  quotient        2    5[BANK0 ] unsigned int 
 16176 ;;  counter         1    7[BANK0 ] unsigned char 
 16177 ;; Return value:  Size  Location     Type
 16178 ;;                  2    0[BANK0 ] unsigned int 
 16179 ;; Registers used:
 16180 ;;		wreg, status,2, status,0
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/0
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16186 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16187 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16189 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16190 ;;Total ram usage:        8 bytes
 16191 ;; Hardware stack levels used: 1
 16192 ;; Hardware stack levels required when called: 2
 16193 ;; This function calls:
 16194 ;;		Nothing
 16195 ;; This function is called by:
 16196 ;;		_printf
 16197 ;; This function uses a non-reentrant model
 16198 ;;
 16199                           
 16200     1745                     ___lwdiv:	
 16201                           ;psect for function ___lwdiv
 16202                           
 16203     1745                     l2897:	
 16204                           ;incstack = 0
 16205                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 16206                           
 16207     1745  0140               	movlb	0	; select bank0
 16208     1746  01A5               	clrf	___lwdiv@quotient
 16209     1747  01A6               	clrf	___lwdiv@quotient+1
 16210     1748                     l2899:
 16211     1748  0820               	movf	___lwdiv@divisor,w
 16212     1749  0421               	iorwf	___lwdiv@divisor+1,w
 16213     174A  1903               	btfsc	3,2
 16214     174B  2F4D               	goto	u1781
 16215     174C  2F4E               	goto	u1780
 16216     174D                     u1781:
 16217     174D  2F7D               	goto	l2919
 16218     174E                     u1780:
 16219     174E                     l2901:
 16220     174E  01A7               	clrf	___lwdiv@counter
 16221     174F  0AA7               	incf	___lwdiv@counter,f
 16222     1750  2F5A               	goto	l2907
 16223     1751                     l2903:
 16224     1751  3001               	movlw	1
 16225     1752                     u1795:
 16226     1752  35A0               	lslf	___lwdiv@divisor,f
 16227     1753  0DA1               	rlf	___lwdiv@divisor+1,f
 16228     1754  0B89               	decfsz	9,f
 16229     1755  2F52               	goto	u1795
 16230     1756                     l2905:
 16231     1756  3001               	movlw	1
 16232     1757  00A4               	movwf	??___lwdiv
 16233     1758  0824               	movf	??___lwdiv,w
 16234     1759  07A7               	addwf	___lwdiv@counter,f
 16235     175A                     l2907:
 16236     175A  1FA1               	btfss	___lwdiv@divisor+1,7
 16237     175B  2F5D               	goto	u1801
 16238     175C  2F5E               	goto	u1800
 16239     175D                     u1801:
 16240     175D  2F51               	goto	l2903
 16241     175E                     u1800:
 16242     175E                     l2909:
 16243     175E  3001               	movlw	1
 16244     175F                     u1815:
 16245     175F  35A5               	lslf	___lwdiv@quotient,f
 16246     1760  0DA6               	rlf	___lwdiv@quotient+1,f
 16247     1761  0B89               	decfsz	9,f
 16248     1762  2F5F               	goto	u1815
 16249     1763  0821               	movf	___lwdiv@divisor+1,w
 16250     1764  0223               	subwf	___lwdiv@dividend+1,w
 16251     1765  1D03               	skipz
 16252     1766  2F69               	goto	u1825
 16253     1767  0820               	movf	___lwdiv@divisor,w
 16254     1768  0222               	subwf	___lwdiv@dividend,w
 16255     1769                     u1825:
 16256     1769  1C03               	skipc
 16257     176A  2F6C               	goto	u1821
 16258     176B  2F6D               	goto	u1820
 16259     176C                     u1821:
 16260     176C  2F72               	goto	l2915
 16261     176D                     u1820:
 16262     176D                     l2911:
 16263     176D  0820               	movf	___lwdiv@divisor,w
 16264     176E  02A2               	subwf	___lwdiv@dividend,f
 16265     176F  0821               	movf	___lwdiv@divisor+1,w
 16266     1770  3BA3               	subwfb	___lwdiv@dividend+1,f
 16267     1771                     l2913:
 16268     1771  1425               	bsf	___lwdiv@quotient,0
 16269     1772                     l2915:
 16270     1772  3001               	movlw	1
 16271     1773                     u1835:
 16272     1773  36A1               	lsrf	___lwdiv@divisor+1,f
 16273     1774  0CA0               	rrf	___lwdiv@divisor,f
 16274     1775  0B89               	decfsz	9,f
 16275     1776  2F73               	goto	u1835
 16276     1777                     l2917:
 16277     1777  3001               	movlw	1
 16278     1778  02A7               	subwf	___lwdiv@counter,f
 16279     1779  1D03               	btfss	3,2
 16280     177A  2F7C               	goto	u1841
 16281     177B  2F7D               	goto	u1840
 16282     177C                     u1841:
 16283     177C  2F5E               	goto	l2909
 16284     177D                     u1840:
 16285     177D                     l2919:
 16286     177D  0826               	movf	___lwdiv@quotient+1,w
 16287     177E  00A1               	movwf	?___lwdiv+1
 16288     177F  0825               	movf	___lwdiv@quotient,w
 16289     1780  00A0               	movwf	?___lwdiv
 16290     1781                     l1204:
 16291     1781  0008               	return
 16292     1782                     __end_of___lwdiv:
 16293                           
 16294                           	psect	text46
 16295     14A4                     __ptext46:	
 16296 ;; *************** function _isprint *****************
 16297 ;; Defined at:
 16298 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isprint.c"
 16299 ;; Parameters:    Size  Location     Type
 16300 ;;  c               1    wreg     unsigned char 
 16301 ;; Auto vars:     Size  Location     Type
 16302 ;;  c               1    1[BANK0 ] unsigned char 
 16303 ;; Return value:  Size  Location     Type
 16304 ;;		None               void
 16305 ;; Registers used:
 16306 ;;		wreg, status,2, status,0
 16307 ;; Tracked objects:
 16308 ;;		On entry : 0/0
 16309 ;;		On exit  : 0/0
 16310 ;;		Unchanged: 0/0
 16311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16313 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16315 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16316 ;;Total ram usage:        2 bytes
 16317 ;; Hardware stack levels used: 1
 16318 ;; Hardware stack levels required when called: 2
 16319 ;; This function calls:
 16320 ;;		Nothing
 16321 ;; This function is called by:
 16322 ;;		_dump_buffer
 16323 ;; This function uses a non-reentrant model
 16324 ;;
 16325                           
 16326     14A4                     _isprint:	
 16327                           ;psect for function _isprint
 16328                           
 16329                           
 16330                           ;incstack = 0
 16331                           ; Regs used in _isprint: [wreg+status,2+status,0]
 16332                           ;isprint@c stored from wreg
 16333     14A4  0140               	movlb	0	; select bank0
 16334     14A5  00A1               	movwf	isprint@c
 16335     14A6                     l3101:
 16336     14A6  01A0               	clrf	_isprint$1948
 16337     14A7                     l3103:
 16338     14A7  307F               	movlw	127
 16339     14A8  0221               	subwf	isprint@c,w
 16340     14A9  1803               	skipnc
 16341     14AA  2CAC               	goto	u2161
 16342     14AB  2CAD               	goto	u2160
 16343     14AC                     u2161:
 16344     14AC  2CB5               	goto	l3109
 16345     14AD                     u2160:
 16346     14AD                     l3105:
 16347     14AD  3020               	movlw	32
 16348     14AE  0221               	subwf	isprint@c,w
 16349     14AF  1C03               	skipc
 16350     14B0  2CB2               	goto	u2171
 16351     14B1  2CB3               	goto	u2170
 16352     14B2                     u2171:
 16353     14B2  2CB5               	goto	l3109
 16354     14B3                     u2170:
 16355     14B3                     l3107:
 16356     14B3  01A0               	clrf	_isprint$1948
 16357     14B4  0AA0               	incf	_isprint$1948,f
 16358     14B5                     l3109:
 16359     14B5  0C20               	rrf	_isprint$1948,w
 16360     14B6                     l1390:
 16361     14B6  0008               	return
 16362     14B7                     __end_of_isprint:
 16363                           
 16364                           	psect	text47
 16365     166F                     __ptext47:	
 16366 ;; *************** function _dispatch *****************
 16367 ;; Defined at:
 16368 ;;		line 58 in file "monitor_sync.c"
 16369 ;; Parameters:    Size  Location     Type
 16370 ;;  state           1    wreg     PTR enum E10399
 16371 ;;		 -> main@state(1), 
 16372 ;;  b1              1    0[BANK0 ] PTR struct mybutton
 16373 ;;		 -> main@b1(27), 
 16374 ;;  b2              1    1[BANK0 ] PTR struct mybutton
 16375 ;;		 -> main@b2(27), 
 16376 ;;  b1_clicked_c    1    2[BANK0 ] PTR unsigned char 
 16377 ;;		 -> main@b1_clicked_count(1), 
 16378 ;;  b2_clicked_c    1    3[BANK0 ] PTR unsigned char 
 16379 ;;		 -> main@b2_clicked_count(1), 
 16380 ;; Auto vars:     Size  Location     Type
 16381 ;;  state           1    6[BANK0 ] PTR enum E10399
 16382 ;;		 -> main@state(1), 
 16383 ;;  b2_clicked_c    1    5[BANK0 ] unsigned char 
 16384 ;;  b1_clicked_c    1    4[BANK0 ] unsigned char 
 16385 ;; Return value:  Size  Location     Type
 16386 ;;                  1    wreg      void 
 16387 ;; Registers used:
 16388 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16389 ;; Tracked objects:
 16390 ;;		On entry : 0/0
 16391 ;;		On exit  : 0/0
 16392 ;;		Unchanged: 0/0
 16393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16395 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16397 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16398 ;;Total ram usage:        7 bytes
 16399 ;; Hardware stack levels used: 1
 16400 ;; Hardware stack levels required when called: 2
 16401 ;; This function calls:
 16402 ;;		Nothing
 16403 ;; This function is called by:
 16404 ;;		_main
 16405 ;; This function uses a non-reentrant model
 16406 ;;
 16407                           
 16408     166F                     _dispatch:	
 16409                           ;psect for function _dispatch
 16410                           
 16411                           
 16412                           ;incstack = 0
 16413                           ; Regs used in _dispatch: [wreg+fsr1l+fsr1h+status,2+status,0]
 16414                           ;dispatch@state stored from wreg
 16415     166F  0140               	movlb	0	; select bank0
 16416     1670  00A6               	movwf	dispatch@state
 16417     1671                     l3729:
 16418                           
 16419                           ;monitor_sync.c: 64: uint8_t b1_clicked_count = *b1_clicked_count_ptr;
 16420     1671  0822               	movf	dispatch@b1_clicked_count_ptr,w
 16421     1672  0086               	movwf	6
 16422     1673  0187               	clrf	7
 16423     1674  0801               	movf	1,w
 16424     1675  00A4               	movwf	dispatch@b1_clicked_count
 16425                           
 16426                           ;monitor_sync.c: 65: uint8_t b2_clicked_count = *b2_clicked_count_ptr;
 16427     1676  0823               	movf	dispatch@b2_clicked_count_ptr,w
 16428     1677  0086               	movwf	6
 16429     1678  0187               	clrf	7
 16430     1679  0801               	movf	1,w
 16431     167A  00A5               	movwf	dispatch@b2_clicked_count
 16432     167B                     l3731:
 16433                           
 16434                           ;monitor_sync.c: 73: if( 1 == b1_clicked_count && 0 == b2_clicked_count){
 16435     167B  0324               	decf	dispatch@b1_clicked_count,w
 16436     167C  1D03               	btfss	3,2
 16437     167D  2E7F               	goto	u3061
 16438     167E  2E80               	goto	u3060
 16439     167F                     u3061:
 16440     167F  2E8F               	goto	l3741
 16441     1680                     u3060:
 16442     1680                     l3733:
 16443     1680  0825               	movf	dispatch@b2_clicked_count,w
 16444     1681  1D03               	btfss	3,2
 16445     1682  2E84               	goto	u3071
 16446     1683  2E85               	goto	u3070
 16447     1684                     u3071:
 16448     1684  2E8F               	goto	l3741
 16449     1685                     u3070:
 16450     1685                     l3735:
 16451                           
 16452                           ;monitor_sync.c: 74: *state = STATE_SAVE_TOP_CALIBRATION_POINT;
 16453     1685  0826               	movf	dispatch@state,w
 16454     1686  0086               	movwf	6
 16455     1687  0187               	clrf	7
 16456     1688  3007               	movlw	7
 16457     1689  0081               	movwf	1
 16458     168A                     l3737:
 16459                           
 16460                           ;monitor_sync.c: 75: *b1_clicked_count_ptr = 0;
 16461     168A  0822               	movf	dispatch@b1_clicked_count_ptr,w
 16462     168B  0086               	movwf	6
 16463     168C  0187               	clrf	7
 16464     168D  0181               	clrf	1
 16465     168E  2EA2               	goto	l558
 16466     168F                     l3741:
 16467                           
 16468                           ;monitor_sync.c: 77: };monitor_sync.c: 79: if( 0 == b1_clicked_count && 1 == b2_clicked_
      +                          count){
 16469     168F  0824               	movf	dispatch@b1_clicked_count,w
 16470     1690  1D03               	btfss	3,2
 16471     1691  2E93               	goto	u3081
 16472     1692  2E94               	goto	u3080
 16473     1693                     u3081:
 16474     1693  2EA2               	goto	l558
 16475     1694                     u3080:
 16476     1694                     l3743:
 16477     1694  0325               	decf	dispatch@b2_clicked_count,w
 16478     1695  1D03               	btfss	3,2
 16479     1696  2E98               	goto	u3091
 16480     1697  2E99               	goto	u3090
 16481     1698                     u3091:
 16482     1698  2EA2               	goto	l558
 16483     1699                     u3090:
 16484     1699                     l3745:
 16485                           
 16486                           ;monitor_sync.c: 80: *state = STATE_SAVE_BOTTOM_CALIBRATION_POINT;
 16487     1699  0826               	movf	dispatch@state,w
 16488     169A  0086               	movwf	6
 16489     169B  0187               	clrf	7
 16490     169C  3008               	movlw	8
 16491     169D  0081               	movwf	1
 16492     169E                     l3747:
 16493                           
 16494                           ;monitor_sync.c: 81: *b2_clicked_count_ptr = 0;
 16495     169E  0823               	movf	dispatch@b2_clicked_count_ptr,w
 16496     169F  0086               	movwf	6
 16497     16A0  0187               	clrf	7
 16498     16A1  0181               	clrf	1
 16499     16A2                     l558:
 16500     16A2  0008               	return
 16501     16A3                     __end_of_dispatch:
 16502                           
 16503                           	psect	text48
 16504     086E                     __ptext48:	
 16505 ;; *************** function _calculate_diff *****************
 16506 ;; Defined at:
 16507 ;;		line 19 in file "myisr.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;  now             4    0[BANK0 ] unsigned long 
 16510 ;;  prev_ticks      4    4[BANK0 ] unsigned long 
 16511 ;; Auto vars:     Size  Location     Type
 16512 ;;  diff            4   16[BANK0 ] unsigned long 
 16513 ;; Return value:  Size  Location     Type
 16514 ;;                  4    0[BANK0 ] unsigned long 
 16515 ;; Registers used:
 16516 ;;		wreg, status,2, status,0
 16517 ;; Tracked objects:
 16518 ;;		On entry : 0/0
 16519 ;;		On exit  : 0/0
 16520 ;;		Unchanged: 0/0
 16521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16522 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16523 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16524 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16525 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16526 ;;Total ram usage:       20 bytes
 16527 ;; Hardware stack levels used: 1
 16528 ;; Hardware stack levels required when called: 2
 16529 ;; This function calls:
 16530 ;;		Nothing
 16531 ;; This function is called by:
 16532 ;;		_main
 16533 ;;		_is_time_ups
 16534 ;;		_delay_state
 16535 ;; This function uses a non-reentrant model
 16536 ;;
 16537                           
 16538     086E                     _calculate_diff:	
 16539                           ;psect for function _calculate_diff
 16540                           
 16541     086E                     l3519:	
 16542                           ;incstack = 0
 16543                           ; Regs used in _calculate_diff: [wreg+status,2+status,0]
 16544                           
 16545                           
 16546                           ;myisr.c: 20: uint32_t diff;;myisr.c: 21: if (now >= prev_ticks) {
 16547     086E  0140               	movlb	0	; select bank0
 16548     086F  0827               	movf	calculate_diff@prev_ticks+3,w
 16549     0870  0223               	subwf	calculate_diff@now+3,w
 16550     0871  1D03               	skipz
 16551     0872  287D               	goto	u2925
 16552     0873  0826               	movf	calculate_diff@prev_ticks+2,w
 16553     0874  0222               	subwf	calculate_diff@now+2,w
 16554     0875  1D03               	skipz
 16555     0876  287D               	goto	u2925
 16556     0877  0825               	movf	calculate_diff@prev_ticks+1,w
 16557     0878  0221               	subwf	calculate_diff@now+1,w
 16558     0879  1D03               	skipz
 16559     087A  287D               	goto	u2925
 16560     087B  0824               	movf	calculate_diff@prev_ticks,w
 16561     087C  0220               	subwf	calculate_diff@now,w
 16562     087D                     u2925:
 16563     087D  1C03               	skipc
 16564     087E  2880               	goto	u2921
 16565     087F  2881               	goto	u2920
 16566     0880                     u2921:
 16567     0880  2896               	goto	l3523
 16568     0881                     u2920:
 16569     0881                     l3521:
 16570                           
 16571                           ;myisr.c: 22: diff = now - prev_ticks;
 16572     0881  0824               	movf	calculate_diff@prev_ticks,w
 16573     0882  0220               	subwf	calculate_diff@now,w
 16574     0883  00A8               	movwf	??_calculate_diff
 16575     0884  0825               	movf	calculate_diff@prev_ticks+1,w
 16576     0885  3B21               	subwfb	calculate_diff@now+1,w
 16577     0886  00A9               	movwf	??_calculate_diff+1
 16578     0887  0826               	movf	calculate_diff@prev_ticks+2,w
 16579     0888  3B22               	subwfb	calculate_diff@now+2,w
 16580     0889  00AA               	movwf	??_calculate_diff+2
 16581     088A  0827               	movf	calculate_diff@prev_ticks+3,w
 16582     088B  3B23               	subwfb	calculate_diff@now+3,w
 16583     088C  00AB               	movwf	??_calculate_diff+3
 16584     088D  082B               	movf	??_calculate_diff+3,w
 16585     088E  00B3               	movwf	calculate_diff@diff+3
 16586     088F  082A               	movf	??_calculate_diff+2,w
 16587     0890  00B2               	movwf	calculate_diff@diff+2
 16588     0891  0829               	movf	??_calculate_diff+1,w
 16589     0892  00B1               	movwf	calculate_diff@diff+1
 16590     0893  0828               	movf	??_calculate_diff,w
 16591     0894  00B0               	movwf	calculate_diff@diff
 16592                           
 16593                           ;myisr.c: 23: } else {
 16594     0895  28BA               	goto	l3525
 16595     0896                     l3523:
 16596                           
 16597                           ;myisr.c: 25: diff = ((4294967295UL) - prev_ticks) + now + 1;
 16598     0896  0820               	movf	calculate_diff@now,w
 16599     0897  00A8               	movwf	??_calculate_diff
 16600     0898  0821               	movf	calculate_diff@now+1,w
 16601     0899  00A9               	movwf	??_calculate_diff+1
 16602     089A  0822               	movf	calculate_diff@now+2,w
 16603     089B  00AA               	movwf	??_calculate_diff+2
 16604     089C  0823               	movf	calculate_diff@now+3,w
 16605     089D  00AB               	movwf	??_calculate_diff+3
 16606     089E  0924               	comf	calculate_diff@prev_ticks,w
 16607     089F  00AC               	movwf	??_calculate_diff+4
 16608     08A0  0925               	comf	calculate_diff@prev_ticks+1,w
 16609     08A1  00AD               	movwf	??_calculate_diff+5
 16610     08A2  0926               	comf	calculate_diff@prev_ticks+2,w
 16611     08A3  00AE               	movwf	??_calculate_diff+6
 16612     08A4  0927               	comf	calculate_diff@prev_ticks+3,w
 16613     08A5  00AF               	movwf	??_calculate_diff+7
 16614     08A6  082C               	movf	??_calculate_diff+4,w
 16615     08A7  07A8               	addwf	??_calculate_diff,f
 16616     08A8  082D               	movf	??_calculate_diff+5,w
 16617     08A9  3DA9               	addwfc	??_calculate_diff+1,f
 16618     08AA  082E               	movf	??_calculate_diff+6,w
 16619     08AB  3DAA               	addwfc	??_calculate_diff+2,f
 16620     08AC  082F               	movf	??_calculate_diff+7,w
 16621     08AD  3DAB               	addwfc	??_calculate_diff+3,f
 16622     08AE  3001               	movlw	1
 16623     08AF  0728               	addwf	??_calculate_diff,w
 16624     08B0  00B0               	movwf	calculate_diff@diff
 16625     08B1  3000               	movlw	0
 16626     08B2  3D29               	addwfc	??_calculate_diff+1,w
 16627     08B3  00B1               	movwf	calculate_diff@diff+1
 16628     08B4  3000               	movlw	0
 16629     08B5  3D2A               	addwfc	??_calculate_diff+2,w
 16630     08B6  00B2               	movwf	calculate_diff@diff+2
 16631     08B7  3000               	movlw	0
 16632     08B8  3D2B               	addwfc	??_calculate_diff+3,w
 16633     08B9  00B3               	movwf	calculate_diff@diff+3
 16634     08BA                     l3525:
 16635                           
 16636                           ;myisr.c: 26: };myisr.c: 27: return diff;
 16637     08BA  0833               	movf	calculate_diff@diff+3,w
 16638     08BB  00A3               	movwf	?_calculate_diff+3
 16639     08BC  0832               	movf	calculate_diff@diff+2,w
 16640     08BD  00A2               	movwf	?_calculate_diff+2
 16641     08BE  0831               	movf	calculate_diff@diff+1,w
 16642     08BF  00A1               	movwf	?_calculate_diff+1
 16643     08C0  0830               	movf	calculate_diff@diff,w
 16644     08C1  00A0               	movwf	?_calculate_diff
 16645     08C2                     l328:
 16646     08C2  0008               	return
 16647     08C3                     __end_of_calculate_diff:
 16648                           
 16649                           	psect	text49
 16650     1438                     __ptext49:	
 16651 ;; *************** function _SYSTEM_Initialize *****************
 16652 ;; Defined at:
 16653 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16654 ;; Parameters:    Size  Location     Type
 16655 ;;		None
 16656 ;; Auto vars:     Size  Location     Type
 16657 ;;		None
 16658 ;; Return value:  Size  Location     Type
 16659 ;;                  1    wreg      void 
 16660 ;; Registers used:
 16661 ;;		wreg, status,2, status,0, pclath, cstack
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16671 ;;Total ram usage:        0 bytes
 16672 ;; Hardware stack levels used: 1
 16673 ;; Hardware stack levels required when called: 3
 16674 ;; This function calls:
 16675 ;;		_OSCILLATOR_Initialize
 16676 ;;		_PIN_MANAGER_Initialize
 16677 ;;		_PMD_Initialize
 16678 ;; This function is called by:
 16679 ;;		_main
 16680 ;; This function uses a non-reentrant model
 16681 ;;
 16682                           
 16683     1438                     _SYSTEM_Initialize:	
 16684                           ;psect for function _SYSTEM_Initialize
 16685                           
 16686     1438                     l3513:	
 16687                           ;incstack = 0
 16688                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16689                           
 16690                           
 16691                           ;mcc.c: 52: PMD_Initialize();
 16692     1438  3194  242E  3194   	fcall	_PMD_Initialize
 16693     143B                     l3515:
 16694                           
 16695                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 16696     143B  3195  25E6  3194   	fcall	_PIN_MANAGER_Initialize
 16697     143E                     l3517:
 16698                           
 16699                           ;mcc.c: 54: OSCILLATOR_Initialize();
 16700     143E  3194  2425  3194   	fcall	_OSCILLATOR_Initialize
 16701     1441                     l35:
 16702     1441  0008               	return
 16703     1442                     __end_of_SYSTEM_Initialize:
 16704                           
 16705                           	psect	text50
 16706     142E                     __ptext50:	
 16707 ;; *************** function _PMD_Initialize *****************
 16708 ;; Defined at:
 16709 ;;		line 71 in file "mcc_generated_files/mcc.c"
 16710 ;; Parameters:    Size  Location     Type
 16711 ;;		None
 16712 ;; Auto vars:     Size  Location     Type
 16713 ;;		None
 16714 ;; Return value:  Size  Location     Type
 16715 ;;                  1    wreg      void 
 16716 ;; Registers used:
 16717 ;;		status,2
 16718 ;; Tracked objects:
 16719 ;;		On entry : 0/0
 16720 ;;		On exit  : 0/0
 16721 ;;		Unchanged: 0/0
 16722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16727 ;;Total ram usage:        0 bytes
 16728 ;; Hardware stack levels used: 1
 16729 ;; Hardware stack levels required when called: 2
 16730 ;; This function calls:
 16731 ;;		Nothing
 16732 ;; This function is called by:
 16733 ;;		_SYSTEM_Initialize
 16734 ;; This function uses a non-reentrant model
 16735 ;;
 16736                           
 16737     142E                     _PMD_Initialize:	
 16738                           ;psect for function _PMD_Initialize
 16739                           
 16740     142E                     l3201:	
 16741                           ;incstack = 0
 16742                           ; Regs used in _PMD_Initialize: [status,2]
 16743                           
 16744                           
 16745                           ;mcc.c: 74: PMD0 = 0x00;
 16746     142E  014F               	movlb	15	; select bank15
 16747     142F  0196               	clrf	22	;volatile
 16748                           
 16749                           ;mcc.c: 76: PMD1 = 0x00;
 16750     1430  0197               	clrf	23	;volatile
 16751                           
 16752                           ;mcc.c: 78: PMD2 = 0x00;
 16753     1431  0198               	clrf	24	;volatile
 16754                           
 16755                           ;mcc.c: 80: PMD3 = 0x00;
 16756     1432  0199               	clrf	25	;volatile
 16757                           
 16758                           ;mcc.c: 82: PMD4 = 0x00;
 16759     1433  019A               	clrf	26	;volatile
 16760                           
 16761                           ;mcc.c: 84: PMD5 = 0x00;
 16762     1434  019B               	clrf	27	;volatile
 16763                           
 16764                           ;mcc.c: 86: PMD6 = 0x00;
 16765     1435  019C               	clrf	28	;volatile
 16766                           
 16767                           ;mcc.c: 88: PMD7 = 0x00;
 16768     1436  019D               	clrf	29	;volatile
 16769     1437                     l41:
 16770     1437  0008               	return
 16771     1438                     __end_of_PMD_Initialize:
 16772                           
 16773                           	psect	text51
 16774     15E6                     __ptext51:	
 16775 ;; *************** function _PIN_MANAGER_Initialize *****************
 16776 ;; Defined at:
 16777 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16778 ;; Parameters:    Size  Location     Type
 16779 ;;		None
 16780 ;; Auto vars:     Size  Location     Type
 16781 ;;		None
 16782 ;; Return value:  Size  Location     Type
 16783 ;;                  1    wreg      void 
 16784 ;; Registers used:
 16785 ;;		wreg, status,2
 16786 ;; Tracked objects:
 16787 ;;		On entry : 0/0
 16788 ;;		On exit  : 0/0
 16789 ;;		Unchanged: 0/0
 16790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16795 ;;Total ram usage:        0 bytes
 16796 ;; Hardware stack levels used: 1
 16797 ;; Hardware stack levels required when called: 2
 16798 ;; This function calls:
 16799 ;;		Nothing
 16800 ;; This function is called by:
 16801 ;;		_SYSTEM_Initialize
 16802 ;; This function uses a non-reentrant model
 16803 ;;
 16804                           
 16805     15E6                     _PIN_MANAGER_Initialize:	
 16806                           ;psect for function _PIN_MANAGER_Initialize
 16807                           
 16808     15E6                     l3203:	
 16809                           ;incstack = 0
 16810                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16811                           
 16812                           
 16813                           ;pin_manager.c: 60: LATA = 0x00;
 16814     15E6  0140               	movlb	0	; select bank0
 16815     15E7  0198               	clrf	24	;volatile
 16816                           
 16817                           ;pin_manager.c: 61: LATC = 0x00;
 16818     15E8  019A               	clrf	26	;volatile
 16819     15E9                     l3205:
 16820                           
 16821                           ;pin_manager.c: 66: TRISA = 0x3F;
 16822     15E9  303F               	movlw	63
 16823     15EA  0092               	movwf	18	;volatile
 16824     15EB                     l3207:
 16825                           
 16826                           ;pin_manager.c: 67: TRISC = 0x13;
 16827     15EB  3013               	movlw	19
 16828     15EC  0094               	movwf	20	;volatile
 16829     15ED                     l3209:
 16830                           
 16831                           ;pin_manager.c: 72: ANSELC = 0x2C;
 16832     15ED  302C               	movlw	44
 16833     15EE  017E               	movlb	62	; select bank62
 16834     15EF  00CE               	movwf	78	;volatile
 16835     15F0                     l3211:
 16836                           
 16837                           ;pin_manager.c: 73: ANSELA = 0x37;
 16838     15F0  3037               	movlw	55
 16839     15F1  00B8               	movwf	56	;volatile
 16840                           
 16841                           ;pin_manager.c: 78: WPUA = 0x00;
 16842     15F2  01B9               	clrf	57	;volatile
 16843                           
 16844                           ;pin_manager.c: 79: WPUC = 0x00;
 16845     15F3  01CF               	clrf	79	;volatile
 16846                           
 16847                           ;pin_manager.c: 84: ODCONA = 0x00;
 16848     15F4  01BA               	clrf	58	;volatile
 16849                           
 16850                           ;pin_manager.c: 85: ODCONC = 0x00;
 16851     15F5  01D0               	clrf	80	;volatile
 16852     15F6                     l3213:
 16853                           
 16854                           ;pin_manager.c: 90: SLRCONA = 0x37;
 16855     15F6  3037               	movlw	55
 16856     15F7  00BB               	movwf	59	;volatile
 16857     15F8                     l3215:
 16858                           
 16859                           ;pin_manager.c: 91: SLRCONC = 0x3F;
 16860     15F8  303F               	movlw	63
 16861     15F9  00D1               	movwf	81	;volatile
 16862     15FA                     l3217:
 16863                           
 16864                           ;pin_manager.c: 96: INLVLA = 0x3F;
 16865     15FA  303F               	movlw	63
 16866     15FB  00BC               	movwf	60	;volatile
 16867     15FC                     l3219:
 16868                           
 16869                           ;pin_manager.c: 97: INLVLC = 0x3F;
 16870     15FC  303F               	movlw	63
 16871     15FD  00D2               	movwf	82	;volatile
 16872     15FE                     l3221:
 16873                           
 16874                           ;pin_manager.c: 101: RC0PPS = 0x13;
 16875     15FE  3013               	movlw	19
 16876     15FF  00A0               	movwf	32	;volatile
 16877     1600                     l3223:
 16878                           
 16879                           ;pin_manager.c: 102: SSP1CLKPPS = 0x10;
 16880     1600  3010               	movlw	16
 16881     1601  017D               	movlb	61	; select bank61
 16882     1602  00C5               	movwf	69	;volatile
 16883     1603                     l3225:
 16884                           
 16885                           ;pin_manager.c: 103: RC3PPS = 0x0F;
 16886     1603  300F               	movlw	15
 16887     1604  017E               	movlb	62	; select bank62
 16888     1605  00A3               	movwf	35	;volatile
 16889     1606                     l3227:
 16890                           
 16891                           ;pin_manager.c: 104: RC1PPS = 0x14;
 16892     1606  3014               	movlw	20
 16893     1607  00A1               	movwf	33	;volatile
 16894     1608                     l3229:
 16895                           
 16896                           ;pin_manager.c: 105: RC5PPS = 0x0F;
 16897     1608  300F               	movlw	15
 16898     1609  00A5               	movwf	37	;volatile
 16899     160A                     l3231:
 16900                           
 16901                           ;pin_manager.c: 106: SSP1DATPPS = 0x11;
 16902     160A  3011               	movlw	17
 16903     160B  017D               	movlb	61	; select bank61
 16904     160C  00C6               	movwf	70	;volatile
 16905     160D                     l3233:
 16906                           
 16907                           ;pin_manager.c: 107: RX1DTPPS = 0x14;
 16908     160D  3014               	movlw	20
 16909     160E  00CB               	movwf	75	;volatile
 16910     160F                     l86:
 16911     160F  0008               	return
 16912     1610                     __end_of_PIN_MANAGER_Initialize:
 16913                           
 16914                           	psect	text52
 16915     1425                     __ptext52:	
 16916 ;; *************** function _OSCILLATOR_Initialize *****************
 16917 ;; Defined at:
 16918 ;;		line 57 in file "mcc_generated_files/mcc.c"
 16919 ;; Parameters:    Size  Location     Type
 16920 ;;		None
 16921 ;; Auto vars:     Size  Location     Type
 16922 ;;		None
 16923 ;; Return value:  Size  Location     Type
 16924 ;;                  1    wreg      void 
 16925 ;; Registers used:
 16926 ;;		wreg, status,2
 16927 ;; Tracked objects:
 16928 ;;		On entry : 0/0
 16929 ;;		On exit  : 0/0
 16930 ;;		Unchanged: 0/0
 16931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16936 ;;Total ram usage:        0 bytes
 16937 ;; Hardware stack levels used: 1
 16938 ;; Hardware stack levels required when called: 2
 16939 ;; This function calls:
 16940 ;;		Nothing
 16941 ;; This function is called by:
 16942 ;;		_SYSTEM_Initialize
 16943 ;; This function uses a non-reentrant model
 16944 ;;
 16945                           
 16946     1425                     _OSCILLATOR_Initialize:	
 16947                           ;psect for function _OSCILLATOR_Initialize
 16948                           
 16949     1425                     l3235:	
 16950                           ;incstack = 0
 16951                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16952                           
 16953                           
 16954                           ;mcc.c: 60: OSCCON1 = 0x62;
 16955     1425  3062               	movlw	98
 16956     1426  0151               	movlb	17	; select bank17
 16957     1427  008D               	movwf	13	;volatile
 16958     1428                     l3237:
 16959                           
 16960                           ;mcc.c: 62: OSCCON3 = 0x00;
 16961     1428  018F               	clrf	15	;volatile
 16962     1429                     l3239:
 16963                           
 16964                           ;mcc.c: 64: OSCEN = 0x00;
 16965     1429  0191               	clrf	17	;volatile
 16966                           
 16967                           ;mcc.c: 66: OSCFRQ = 0x02;
 16968     142A  3002               	movlw	2
 16969     142B  0093               	movwf	19	;volatile
 16970     142C                     l3241:
 16971                           
 16972                           ;mcc.c: 68: OSCTUNE = 0x00;
 16973     142C  0192               	clrf	18	;volatile
 16974     142D                     l38:
 16975     142D  0008               	return
 16976     142E                     __end_of_OSCILLATOR_Initialize:
 16977                           
 16978                           	psect	text53
 16979     0002                     __ptext53:	
 16980 ;; *************** function _Enable_Global_Interrupt *****************
 16981 ;; Defined at:
 16982 ;;		line 31 in file "myisr.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;		None
 16985 ;; Auto vars:     Size  Location     Type
 16986 ;;		None
 16987 ;; Return value:  Size  Location     Type
 16988 ;;                  1    wreg      void 
 16989 ;; Registers used:
 16990 ;;		None
 16991 ;; Tracked objects:
 16992 ;;		On entry : 0/0
 16993 ;;		On exit  : 0/0
 16994 ;;		Unchanged: 0/0
 16995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17000 ;;Total ram usage:        0 bytes
 17001 ;; Hardware stack levels used: 1
 17002 ;; Hardware stack levels required when called: 2
 17003 ;; This function calls:
 17004 ;;		Nothing
 17005 ;; This function is called by:
 17006 ;;		_main
 17007 ;; This function uses a non-reentrant model
 17008 ;;
 17009                           
 17010     0002                     _Enable_Global_Interrupt:	
 17011                           ;psect for function _Enable_Global_Interrupt
 17012                           
 17013     0002                     l3857:	
 17014                           ;incstack = 0
 17015                           ; Regs used in _Enable_Global_Interrupt: []
 17016                           
 17017                           
 17018                           ;myisr.c: 32: GIE=0;
 17019     0002  138B               	bcf	11,7	;volatile
 17020     0003                     l331:
 17021     0003  0008               	return
 17022     0004                     __end_of_Enable_Global_Interrupt:
 17023                           
 17024                           	psect	text54
 17025     13E9                     __ptext54:	
 17026 ;; *************** function _Disable_Global_Interrupt *****************
 17027 ;; Defined at:
 17028 ;;		line 34 in file "myisr.c"
 17029 ;; Parameters:    Size  Location     Type
 17030 ;;		None
 17031 ;; Auto vars:     Size  Location     Type
 17032 ;;		None
 17033 ;; Return value:  Size  Location     Type
 17034 ;;                  1    wreg      void 
 17035 ;; Registers used:
 17036 ;;		None
 17037 ;; Tracked objects:
 17038 ;;		On entry : 0/0
 17039 ;;		On exit  : 0/0
 17040 ;;		Unchanged: 0/0
 17041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17046 ;;Total ram usage:        0 bytes
 17047 ;; Hardware stack levels used: 1
 17048 ;; Hardware stack levels required when called: 2
 17049 ;; This function calls:
 17050 ;;		Nothing
 17051 ;; This function is called by:
 17052 ;;		_main
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           
 17056     13E9                     _Disable_Global_Interrupt:	
 17057                           ;psect for function _Disable_Global_Interrupt
 17058                           
 17059     13E9                     l3859:	
 17060                           ;incstack = 0
 17061                           ; Regs used in _Disable_Global_Interrupt: []
 17062                           
 17063                           
 17064                           ;myisr.c: 35: GIE=1;
 17065     13E9  178B               	bsf	11,7	;volatile
 17066     13EA                     l334:
 17067     13EA  0008               	return
 17068     13EB                     __end_of_Disable_Global_Interrupt:
 17069                           
 17070                           	psect	intentry
 17071     0004                     __pintentry:	
 17072 ;; *************** function _INTERRUPT_InterruptManager *****************
 17073 ;; Defined at:
 17074 ;;		line 63 in file "uart.c"
 17075 ;; Parameters:    Size  Location     Type
 17076 ;;		None
 17077 ;; Auto vars:     Size  Location     Type
 17078 ;;		None
 17079 ;; Return value:  Size  Location     Type
 17080 ;;                  1    wreg      void 
 17081 ;; Registers used:
 17082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17083 ;; Tracked objects:
 17084 ;;		On entry : 0/0
 17085 ;;		On exit  : 0/0
 17086 ;;		Unchanged: 0/0
 17087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;Total ram usage:        4 bytes
 17093 ;; Hardware stack levels used: 1
 17094 ;; Hardware stack levels required when called: 1
 17095 ;; This function calls:
 17096 ;;		_get_ticks
 17097 ;;		_i2c_slave_interrupt
 17098 ;; This function is called by:
 17099 ;;		Interrupt level 1
 17100 ;; This function uses a non-reentrant model
 17101 ;;
 17102                           
 17103     0004                     _INTERRUPT_InterruptManager:
 17104                           
 17105                           ;incstack = 0
 17106     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17107                           
 17108                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17109     0005  3180               	pagesel	$
 17110     0006                     i1l4117:
 17111                           
 17112                           ;uart.c: 68: if (PIR0bits.TMR0IF) {
 17113     0006  014E               	movlb	14	; select bank14
 17114     0007  1E8C               	btfss	12,5	;volatile
 17115     0008  280A               	goto	u329_21
 17116     0009  280B               	goto	u329_20
 17117     000A                     u329_21:
 17118     000A  283B               	goto	i1l4131
 17119     000B                     u329_20:
 17120     000B                     i1l4119:
 17121                           
 17122                           ;uart.c: 69: PIR0bits.TMR0IF = 0;
 17123     000B  128C               	bcf	12,5	;volatile
 17124     000C                     i1l4121:
 17125                           
 17126                           ;uart.c: 70: ticks++;
 17127     000C  3001               	movlw	1
 17128     000D  07F8               	addwf	_ticks,f	;volatile
 17129     000E  3000               	movlw	0
 17130     000F  3DF9               	addwfc	_ticks+1,f	;volatile
 17131     0010  3000               	movlw	0
 17132     0011  3DFA               	addwfc	_ticks+2,f	;volatile
 17133     0012  3000               	movlw	0
 17134     0013  3DFB               	addwfc	_ticks+3,f	;volatile
 17135     0014                     i1l4123:
 17136                           
 17137                           ;uart.c: 73: if((uart_rx_states == BUSY) &&;uart.c: 74: (ticks - uart_rx_ticks > 200)) {
 17138     0014  0140               	movlb	0	; select bank0
 17139     0015  036E               	decf	_uart_rx_states,w	;volatile
 17140     0016  1D03               	btfss	3,2
 17141     0017  2819               	goto	u330_21
 17142     0018  281A               	goto	u330_20
 17143     0019                     u330_21:
 17144     0019  283B               	goto	i1l4131
 17145     001A                     u330_20:
 17146     001A                     i1l4125:
 17147     001A  0141               	movlb	1	; select bank1
 17148     001B  0868               	movf	_uart_rx_ticks^(0+128),w	;volatile
 17149     001C  0278               	subwf	_ticks,w	;volatile
 17150     001D  00F4               	movwf	??_INTERRUPT_InterruptManager
 17151     001E  0869               	movf	(_uart_rx_ticks+1)^(0+128),w	;volatile
 17152     001F  3B79               	subwfb	_ticks+1,w	;volatile
 17153     0020  00F5               	movwf	??_INTERRUPT_InterruptManager+1
 17154     0021  086A               	movf	(_uart_rx_ticks+2)^(0+128),w	;volatile
 17155     0022  3B7A               	subwfb	_ticks+2,w	;volatile
 17156     0023  00F6               	movwf	??_INTERRUPT_InterruptManager+2
 17157     0024  086B               	movf	(_uart_rx_ticks+3)^(0+128),w	;volatile
 17158     0025  3B7B               	subwfb	_ticks+3,w	;volatile
 17159     0026  00F7               	movwf	??_INTERRUPT_InterruptManager+3
 17160     0027  0877               	movf	??_INTERRUPT_InterruptManager+3,w
 17161     0028  1D03               	btfss	3,2
 17162     0029  2836               	goto	u331_20
 17163     002A  0876               	movf	??_INTERRUPT_InterruptManager+2,w
 17164     002B  1D03               	btfss	3,2
 17165     002C  2836               	goto	u331_20
 17166     002D  0875               	movf	??_INTERRUPT_InterruptManager+1,w
 17167     002E  1D03               	btfss	3,2
 17168     002F  2836               	goto	u331_20
 17169     0030  30C9               	movlw	201
 17170     0031  0274               	subwf	??_INTERRUPT_InterruptManager,w
 17171     0032  1C03               	btfss	3,0
 17172     0033  2835               	goto	u331_21
 17173     0034  2836               	goto	u331_20
 17174     0035                     u331_21:
 17175     0035  283B               	goto	i1l4131
 17176     0036                     u331_20:
 17177     0036                     i1l4127:
 17178                           
 17179                           ;uart.c: 75: uart_rx_states = IDLE;
 17180     0036  0140               	movlb	0	; select bank0
 17181     0037  01EE               	clrf	_uart_rx_states	;volatile
 17182     0038                     i1l4129:
 17183                           
 17184                           ;uart.c: 76: uart_rx_package_event = 1;
 17185     0038  3001               	movlw	1
 17186     0039  0141               	movlb	1	; select bank1
 17187     003A  00EC               	movwf	_uart_rx_package_event^(0+128)	;volatile
 17188     003B                     i1l4131:
 17189                           
 17190                           ;uart.c: 87: };uart.c: 90: if (PIR3bits.SSP1IF) {
 17191     003B  014E               	movlb	14	; select bank14
 17192     003C  1C0F               	btfss	15,0	;volatile
 17193     003D  283F               	goto	u332_21
 17194     003E  2840               	goto	u332_20
 17195     003F                     u332_21:
 17196     003F  2844               	goto	i1l4137
 17197     0040                     u332_20:
 17198     0040                     i1l4133:
 17199                           
 17200                           ;uart.c: 91: PIR3bits.SSP1IF = 0;
 17201     0040  100F               	bcf	15,0	;volatile
 17202     0041                     i1l4135:
 17203                           
 17204                           ;uart.c: 92: i2c_slave_interrupt();
 17205     0041  3188  201B  3180   	fcall	_i2c_slave_interrupt
 17206     0044                     i1l4137:
 17207                           
 17208                           ;uart.c: 93: };uart.c: 100: if (PIR3bits.RC1IF){
 17209     0044  014E               	movlb	14	; select bank14
 17210     0045  1E8F               	btfss	15,5	;volatile
 17211     0046  2848               	goto	u333_21
 17212     0047  2849               	goto	u333_20
 17213     0048                     u333_21:
 17214     0048  2867               	goto	i1l508
 17215     0049                     u333_20:
 17216     0049                     i1l4139:
 17217                           
 17218                           ;uart.c: 103: uart_rx_ticks = get_ticks();
 17219     0049  3194  241C  3180   	fcall	_get_ticks
 17220     004C  0873               	movf	?_get_ticks+3,w
 17221     004D  0141               	movlb	1	; select bank1
 17222     004E  00EB               	movwf	(_uart_rx_ticks+3)^(0+128)	;volatile
 17223     004F  0872               	movf	?_get_ticks+2,w
 17224     0050  00EA               	movwf	(_uart_rx_ticks+2)^(0+128)	;volatile
 17225     0051  0871               	movf	?_get_ticks+1,w
 17226     0052  00E9               	movwf	(_uart_rx_ticks+1)^(0+128)	;volatile
 17227     0053  0870               	movf	?_get_ticks,w
 17228     0054  00E8               	movwf	_uart_rx_ticks^(0+128)	;volatile
 17229     0055                     i1l4141:
 17230                           
 17231                           ;uart.c: 104: uart_rx_states = BUSY;
 17232     0055  3001               	movlw	1
 17233     0056  0140               	movlb	0	; select bank0
 17234     0057  00EE               	movwf	_uart_rx_states	;volatile
 17235     0058                     i1l4143:
 17236                           
 17237                           ;uart.c: 105: rxbuffer[rxbuffer_index] = RC1REG;
 17238     0058  087D               	movf	_rxbuffer_index,w
 17239     0059  3EC8               	addlw	(low (_rxbuffer| (0+256)))& (0+255)
 17240     005A  0086               	movwf	6
 17241     005B  3001               	movlw	1	; select bank3/4
 17242     005C  0087               	movwf	7
 17243     005D  0142               	movlb	2	; select bank2
 17244     005E  0819               	movf	25,w	;volatile
 17245     005F  0081               	movwf	1
 17246     0060                     i1l4145:
 17247                           
 17248                           ;uart.c: 106: rxbuffer_index++;
 17249     0060  3001               	movlw	1
 17250     0061  00F4               	movwf	??_INTERRUPT_InterruptManager
 17251     0062  0874               	movf	??_INTERRUPT_InterruptManager,w
 17252     0063  07FD               	addwf	_rxbuffer_index,f	;volatile
 17253     0064                     i1l4147:
 17254                           
 17255                           ;uart.c: 107: rxbuffer_index = rxbuffer_index % 32;
 17256     0064  087D               	movf	_rxbuffer_index,w	;volatile
 17257     0065  391F               	andlw	31
 17258     0066  00FD               	movwf	_rxbuffer_index	;volatile
 17259     0067                     i1l508:
 17260     0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17261     0068  0009               	retfie
 17262     0069                     __end_of_INTERRUPT_InterruptManager:
 17263                           
 17264                           	psect	text56
 17265     081B                     __ptext56:	
 17266 ;; *************** function _i2c_slave_interrupt *****************
 17267 ;; Defined at:
 17268 ;;		line 65 in file "i2c_slave.c"
 17269 ;; Parameters:    Size  Location     Type
 17270 ;;		None
 17271 ;; Auto vars:     Size  Location     Type
 17272 ;;  value           1    3[COMMON] unsigned char 
 17273 ;;  isNack          1    2[COMMON] char 
 17274 ;;  isRead          1    1[COMMON] unsigned char 
 17275 ;; Return value:  Size  Location     Type
 17276 ;;                  1    wreg      void 
 17277 ;; Registers used:
 17278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 17279 ;; Tracked objects:
 17280 ;;		On entry : 0/0
 17281 ;;		On exit  : 0/0
 17282 ;;		Unchanged: 0/0
 17283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17285 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17286 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17287 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17288 ;;Total ram usage:        4 bytes
 17289 ;; Hardware stack levels used: 1
 17290 ;; This function calls:
 17291 ;;		Nothing
 17292 ;; This function is called by:
 17293 ;;		_INTERRUPT_InterruptManager
 17294 ;; This function uses a non-reentrant model
 17295 ;;
 17296                           
 17297     081B                     _i2c_slave_interrupt:	
 17298                           ;psect for function _i2c_slave_interrupt
 17299                           
 17300     081B                     i1l3883:	
 17301                           ;incstack = 0
 17302                           ; Regs used in _i2c_slave_interrupt: [wreg-fsr1h+status,2+status,0]
 17303                           
 17304                           
 17305                           ;i2c_slave.c: 68: uint8_t isRead = SSP1STATbits.R_nW;
 17306     081B  3000               	movlw	0
 17307     081C  0143               	movlb	3	; select bank3
 17308     081D  190F               	btfsc	15,2	;volatile
 17309     081E  3001               	movlw	1
 17310     081F  00F1               	movwf	i2c_slave_interrupt@isRead
 17311                           
 17312                           ;i2c_slave.c: 69: int8_t isNack = SSP1CON2bits.ACKSTAT;
 17313     0820  3000               	movlw	0
 17314     0821  1B11               	btfsc	17,6	;volatile
 17315     0822  3001               	movlw	1
 17316     0823  00F2               	movwf	i2c_slave_interrupt@isNack
 17317     0824                     i1l3885:
 17318                           
 17319                           ;i2c_slave.c: 72: if (isNack) {
 17320     0824  0872               	movf	i2c_slave_interrupt@isNack,w
 17321     0825  1903               	btfsc	3,2
 17322     0826  2828               	goto	u319_21
 17323     0827  2829               	goto	u319_20
 17324     0828                     u319_21:
 17325     0828  282C               	goto	i1l3891
 17326     0829                     u319_20:
 17327     0829                     i1l3887:
 17328                           
 17329                           ;i2c_slave.c: 73: currentState = 0;
 17330     0829  0140               	movlb	0	; select bank0
 17331     082A  01EB               	clrf	_currentState
 17332     082B  286D               	goto	i1l264
 17333     082C                     i1l3891:
 17334                           
 17335                           ;i2c_slave.c: 75: };i2c_slave.c: 78: if (isRead) {
 17336     082C  0871               	movf	i2c_slave_interrupt@isRead,w
 17337     082D  1903               	btfsc	3,2
 17338     082E  2830               	goto	u320_21
 17339     082F  2831               	goto	u320_20
 17340     0830                     u320_21:
 17341     0830  2844               	goto	i1l3901
 17342     0831                     u320_20:
 17343     0831                     i1l3893:
 17344                           
 17345                           ;i2c_slave.c: 80: SSP1BUF = slaveData[currentRegister];
 17346     0831  087C               	movf	_currentRegister,w
 17347     0832  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 17348     0833  0086               	movwf	6
 17349     0834  3002               	movlw	2	; select bank4/5
 17350     0835  0087               	movwf	7
 17351     0836  0801               	movf	1,w
 17352     0837  008C               	movwf	12	;volatile
 17353     0838                     i1l3895:
 17354                           
 17355                           ;i2c_slave.c: 82: currentRegister++;
 17356     0838  3001               	movlw	1
 17357     0839  00F0               	movwf	??_i2c_slave_interrupt
 17358     083A  0870               	movf	??_i2c_slave_interrupt,w
 17359     083B  07FC               	addwf	_currentRegister,f
 17360     083C                     i1l3897:
 17361                           
 17362                           ;i2c_slave.c: 84: if (currentRegister >= 64u) {
 17363     083C  3040               	movlw	64
 17364     083D  027C               	subwf	_currentRegister,w
 17365     083E  1C03               	skipc
 17366     083F  2841               	goto	u321_21
 17367     0840  2842               	goto	u321_20
 17368     0841                     u321_21:
 17369     0841  286B               	goto	i1l267
 17370     0842                     u321_20:
 17371     0842                     i1l3899:
 17372                           
 17373                           ;i2c_slave.c: 85: currentRegister = 0;
 17374     0842  01FC               	clrf	_currentRegister
 17375     0843  286B               	goto	i1l267
 17376     0844                     i1l3901:
 17377                           
 17378                           ;i2c_slave.c: 90: uint8_t value = SSP1BUF;
 17379     0844  080C               	movf	12,w	;volatile
 17380     0845  00F3               	movwf	i2c_slave_interrupt@value
 17381                           
 17382                           ;i2c_slave.c: 92: switch (currentState) {
 17383     0846  285F               	goto	i1l3915
 17384     0847                     i1l269:	
 17385                           ;i2c_slave.c: 94: case 0:
 17386                           
 17387                           
 17388                           ;i2c_slave.c: 95: currentState = 1;
 17389     0847  01EB               	clrf	_currentState
 17390     0848  0AEB               	incf	_currentState,f
 17391                           
 17392                           ;i2c_slave.c: 96: break;
 17393     0849  286B               	goto	i1l267
 17394     084A                     i1l3903:
 17395                           
 17396                           ;i2c_slave.c: 99: currentRegister = value % 64u;
 17397     084A  0873               	movf	i2c_slave_interrupt@value,w
 17398     084B  393F               	andlw	63
 17399     084C  00FC               	movwf	_currentRegister
 17400     084D                     i1l3905:
 17401                           
 17402                           ;i2c_slave.c: 100: currentState = 2;
 17403     084D  3002               	movlw	2
 17404     084E  00EB               	movwf	_currentState
 17405                           
 17406                           ;i2c_slave.c: 101: break;
 17407     084F  286B               	goto	i1l267
 17408     0850                     i1l3907:
 17409                           
 17410                           ;i2c_slave.c: 105: if (currentRegister < 57) {
 17411     0850  3039               	movlw	57
 17412     0851  027C               	subwf	_currentRegister,w
 17413     0852  1803               	skipnc
 17414     0853  2855               	goto	u322_21
 17415     0854  2856               	goto	u322_20
 17416     0855                     u322_21:
 17417     0855  285D               	goto	i1l3911
 17418     0856                     u322_20:
 17419     0856                     i1l3909:
 17420                           
 17421                           ;i2c_slave.c: 106: slaveData[currentRegister] = value;
 17422     0856  087C               	movf	_currentRegister,w
 17423     0857  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 17424     0858  0086               	movwf	6
 17425     0859  3002               	movlw	2	; select bank4/5
 17426     085A  0087               	movwf	7
 17427     085B  0873               	movf	i2c_slave_interrupt@value,w
 17428     085C  0081               	movwf	1
 17429     085D                     i1l3911:
 17430                           
 17431                           ;i2c_slave.c: 107: };i2c_slave.c: 108: currentState = 0;
 17432     085D  01EB               	clrf	_currentState
 17433                           
 17434                           ;i2c_slave.c: 109: break;
 17435     085E  286B               	goto	i1l267
 17436     085F                     i1l3915:
 17437     085F  0140               	movlb	0	; select bank0
 17438     0860  086B               	movf	_currentState,w
 17439                           
 17440                           ; Switch size 1, requested type "simple"
 17441                           ; Number of cases is 3, Range of values is 0 to 2
 17442                           ; switch strategies available:
 17443                           ; Name         Instructions Cycles
 17444                           ; simple_byte           10     6 (average)
 17445                           ; direct_byte           12     6 (fixed)
 17446                           ; jumptable            260     6 (fixed)
 17447                           ;	Chosen strategy is simple_byte
 17448     0861  3A00               	xorlw	0	; case 0
 17449     0862  1903               	skipnz
 17450     0863  2847               	goto	i1l269
 17451     0864  3A01               	xorlw	1	; case 1
 17452     0865  1903               	skipnz
 17453     0866  284A               	goto	i1l3903
 17454     0867  3A03               	xorlw	3	; case 2
 17455     0868  1903               	skipnz
 17456     0869  2850               	goto	i1l3907
 17457     086A  286B               	goto	i1l267
 17458     086B                     i1l267:
 17459                           
 17460                           ;i2c_slave.c: 114: };i2c_slave.c: 117: SSP1CON1bits.CKP = 1;
 17461     086B  0143               	movlb	3	; select bank3
 17462     086C  1610               	bsf	16,4	;volatile
 17463     086D                     i1l264:
 17464     086D  0008               	return
 17465     086E                     __end_of_i2c_slave_interrupt:
 17466                           
 17467                           	psect	text57
 17468     141C                     __ptext57:	
 17469 ;; *************** function _get_ticks *****************
 17470 ;; Defined at:
 17471 ;;		line 8 in file "myisr.c"
 17472 ;; Parameters:    Size  Location     Type
 17473 ;;		None
 17474 ;; Auto vars:     Size  Location     Type
 17475 ;;		None
 17476 ;; Return value:  Size  Location     Type
 17477 ;;                  4    0[COMMON] unsigned long 
 17478 ;; Registers used:
 17479 ;;		wreg
 17480 ;; Tracked objects:
 17481 ;;		On entry : 0/0
 17482 ;;		On exit  : 0/0
 17483 ;;		Unchanged: 0/0
 17484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17489 ;;Total ram usage:        4 bytes
 17490 ;; Hardware stack levels used: 1
 17491 ;; This function calls:
 17492 ;;		Nothing
 17493 ;; This function is called by:
 17494 ;;		_INTERRUPT_InterruptManager
 17495 ;;		_is_it_time_up
 17496 ;;		_delay_state
 17497 ;; This function uses a non-reentrant model
 17498 ;;
 17499                           
 17500     141C                     _get_ticks:	
 17501                           ;psect for function _get_ticks
 17502                           
 17503     141C                     i1l3917:	
 17504                           ;incstack = 0
 17505                           ; Regs used in _get_ticks: [wreg]
 17506                           
 17507                           
 17508                           ;myisr.c: 9: return ticks;
 17509     141C  087B               	movf	_ticks+3,w	;volatile
 17510     141D  00F3               	movwf	?_get_ticks+3
 17511     141E  087A               	movf	_ticks+2,w	;volatile
 17512     141F  00F2               	movwf	?_get_ticks+2
 17513     1420  0879               	movf	_ticks+1,w	;volatile
 17514     1421  00F1               	movwf	?_get_ticks+1
 17515     1422  0878               	movf	_ticks,w	;volatile
 17516     1423  00F0               	movwf	?_get_ticks
 17517     1424                     i1l320:
 17518     1424  0008               	return
 17519     1425                     __end_of_get_ticks:
 17520     007E                     btemp	set	126	;btemp
 17521     007E                     int$flags	set	126
 17522     007E                     wtemp0	set	126
 17523                           
 17524                           	psect	idloc
 17525                           
 17526                           ;Config register IDLOC0 @ 0x8000
 17527                           ;	unspecified, using default values
 17528     8000                     	org	32768
 17529     8000  3FFF               	dw	16383
 17530                           
 17531                           ;Config register IDLOC1 @ 0x8001
 17532                           ;	unspecified, using default values
 17533     8001                     	org	32769
 17534     8001  3FFF               	dw	16383
 17535                           
 17536                           ;Config register IDLOC2 @ 0x8002
 17537                           ;	unspecified, using default values
 17538     8002                     	org	32770
 17539     8002  3FFF               	dw	16383
 17540                           
 17541                           ;Config register IDLOC3 @ 0x8003
 17542                           ;	unspecified, using default values
 17543     8003                     	org	32771
 17544     8003  3FFF               	dw	16383
 17545                           
 17546                           	psect	config
 17547                           
 17548                           ;Config register CONFIG1 @ 0x8007
 17549                           ;	External Oscillator mode selection bits
 17550                           ;	FEXTOSC = OFF, Oscillator not enabled
 17551                           ;	Power-up default value for COSC bits
 17552                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 17553                           ;	Clock Out Enable bit
 17554                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 17555                           ;	Clock Switch Enable bit
 17556                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
 17557                           ;	Fail-Safe Clock Monitor Enable bit
 17558                           ;	FCMEN = OFF, FSCM timer disabled
 17559     8007                     	org	32775
 17560     8007  17EC               	dw	6124
 17561                           
 17562                           ;Config register CONFIG2 @ 0x8008
 17563                           ;	Master Clear Enable bit
 17564                           ;	MCLRE = OFF, MCLR pin function is port defined function
 17565                           ;	Power-up Timer Enable bit
 17566                           ;	PWRTS = OFF, PWRT disabled
 17567                           ;	Low-Power BOR enable bit
 17568                           ;	LPBOREN = OFF, ULPBOR disabled
 17569                           ;	Brown-out reset enable bits
 17570                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 17571                           ;	Brown-out Reset Voltage Selection
 17572                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 17573                           ;	Zero-cross detect disable
 17574                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 17575                           ;	Peripheral Pin Select one-way control
 17576                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 17577                           ;	Stack Overflow/Underflow Reset Enable bit
 17578                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 17579     8008                     	org	32776
 17580     8008  3FFE               	dw	16382
 17581                           
 17582                           ;Config register CONFIG3 @ 0x8009
 17583                           ;	WDT Period Select bits
 17584                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17585                           ;	WDT operating mode
 17586                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 17587                           ;	WDT Window Select bits
 17588                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17589                           ;	WDT input clock selector
 17590                           ;	WDTCCS = SC, Software Control
 17591     8009                     	org	32777
 17592     8009  3F9F               	dw	16287
 17593                           
 17594                           ;Config register CONFIG4 @ 0x800A
 17595                           ;	Boot Block Size Selection bits
 17596                           ;	BBSIZE = BB512, 512 words boot block size
 17597                           ;	Boot Block Enable bit
 17598                           ;	BBEN = OFF, Boot Block disabled
 17599                           ;	SAF Enable bit
 17600                           ;	SAFEN = OFF, SAF disabled
 17601                           ;	Application Block Write Protection bit
 17602                           ;	WRTAPP = OFF, Application Block not write protected
 17603                           ;	Boot Block Write Protection bit
 17604                           ;	WRTB = OFF, Boot Block not write protected
 17605                           ;	Configuration Register Write Protection bit
 17606                           ;	WRTC = OFF, Configuration Register not write protected
 17607                           ;	Data EEPROM write protection bit
 17608                           ;	WRTD = OFF, Data EEPROM NOT write protected
 17609                           ;	Storage Area Flash Write Protection bit
 17610                           ;	WRTSAF = OFF, SAF not write protected
 17611                           ;	Low Voltage Programming Enable bit
 17612                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 17613     800A                     	org	32778
 17614     800A  3FFF               	dw	16383
 17615                           
 17616                           ;Config register CONFIG5 @ 0x800B
 17617                           ;	UserNVM Program memory code protection bit
 17618                           ;	CP = ON, UserNVM code protection enabled
 17619     800B                     	org	32779
 17620     800B  3FFE               	dw	16382

Data Sizes:
    Strings     1162
    Constant    18
    Data        128
    BSS         172
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     75      80
    BANK1            80     68      77
    BANK2            80     27      75
    BANK3            80      0      72
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0      32
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 4
		 -> get_measured_value@payload_temp(BANK0[4]), get_measured_value@payload_ph(BANK0[4]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 2
		 -> get_measured_value@temp(BANK0[2]), get_measured_value@ph(BANK0[2]), 

    dispatch@b2	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), 

    dispatch@b1	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK1[27]), 

    measurement@value	PTR struct values size(1) Largest target is 37
		 -> main@sensor_value(BANK1[37]), 

    measurement@state	PTR enum E10355 size(1) Largest target is 1
		 -> main@state(BANK0[1]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(BANK0[3]), 

    printf$1662	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_32(CODE[17]), STR_31(CODE[17]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> sensor_value.ph_ADC_Low_byte(BANK0[1]), sensor_value.ph_ADC_High_byte(BANK0[1]), STR_30(CODE[7]), printf@c(BANK0[1]), 
		 -> ?_printf(BANK0[2]), slaveData(BANK4[64]), sensor_value.ph_ADC_value(BANK0[2]), STR_3(CODE[11]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_29(CODE[200]), STR_28(CODE[45]), STR_27(CODE[197]), STR_26(CODE[42]), 
		 -> STR_25(CODE[39]), STR_24(CODE[74]), STR_23(CODE[35]), STR_22(CODE[70]), 
		 -> STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[13]), STR_18(CODE[13]), 
		 -> STR_15(CODE[3]), STR_14(CODE[6]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[3]), STR_10(CODE[4]), STR_9(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[32]), STR_6(CODE[61]), STR_5(CODE[78]), STR_4(CODE[121]), 
		 -> STR_2(CODE[9]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    save_bottom_adc_point@states	PTR enum E186 size(1) Largest target is 1
		 -> main@state(BANK0[1]), 

    save_bottom_adc_point@sensor_value	PTR struct values size(1) Largest target is 37
		 -> main@sensor_value(BANK1[37]), 

    save_top_adc_point@states	PTR enum E186 size(1) Largest target is 1
		 -> main@state(BANK0[1]), 

    save_top_adc_point@sensor_value	PTR struct values size(1) Largest target is 37
		 -> main@sensor_value(BANK1[37]), 

    get_measured_adc_value@sensor_value	PTR struct values size(1) Largest target is 37
		 -> main@sensor_value(BANK1[37]), 

    calculate_crc_and_fill_array@data	PTR unsigned char  size(1) Largest target is 8
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[8]), save_top_adc_point@save_top_adc_command(BANK0[8]), 

    crc16_modbus@data	PTR unsigned char  size(1) Largest target is 8
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[8]), save_top_adc_point@save_top_adc_command(BANK0[8]), 

    get_measured_value@sensor_value	PTR struct values size(1) Largest target is 37
		 -> main@sensor_value(BANK1[37]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    dispatch@state	PTR enum E10399 size(1) Largest target is 1
		 -> main@state(BANK0[1]), 

    dispatch@b2_clicked_count_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@b2_clicked_count(BANK0[1]), 

    dispatch@b1_clicked_count_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@b1_clicked_count(BANK0[1]), 

    monitoring_sync@state	PTR enum E10399 size(1) Largest target is 1
		 -> main@state(BANK0[1]), 

    monitoring_sync@b2_clicked_count	PTR unsigned char  size(1) Largest target is 1
		 -> main@b2_clicked_count(BANK0[1]), 

    monitoring_sync@b2	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), 

    monitoring_sync@b1_clicked_count	PTR unsigned char  size(1) Largest target is 1
		 -> main@b1_clicked_count(BANK0[1]), 

    monitoring_sync@b1	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK1[27]), 

    EUSART1_Write_1@txbuf	PTR unsigned char  size(1) Largest target is 32
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[8]), save_top_adc_point@save_top_adc_command(BANK0[8]), measured_adc@measured_adc_command(BANK0[8]), set_bottom_calibrate_point@bottom_slop_point_command(BANK0[32]), 
		 -> set_top_calibrate_point@top_zero_point_command(BANK0[32]), send_measured_command@txbuf(BANK0[32]), 

    reset_long_press_flag@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    reset_single_click_flag@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    is_long_press@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    is_single_click@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    update_mybutton@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    __is_long_press@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    __is_double_click@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    __is_single_click@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    init_button@b	PTR struct mybutton size(2) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK1[27]), 

    dump_buffer@buffer	PTR const void  size(1) Largest target is 64
		 -> slaveData(BANK4[64]), 

    dump_buffer@p	PTR const unsigned char  size(1) Largest target is 64
		 -> slaveData(BANK4[64]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_get_ticks
    _INTERRUPT_InterruptManager->_i2c_slave_interrupt

Critical Paths under _main in BANK0

    _main->_get_measured_value
    _update_mybutton->___is_single_click
    _set_device_serial_number_to_i2c_slave_memorymap->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _i2c_slave_set_register_with_lock->_i2c_slave_set_register
    _save_top_adc_point->_printf
    _save_bottom_adc_point->_printf
    _calculate_crc_and_fill_array->_crc16_modbus
    _monitoring_sync->_printf
    _measurement->_printf
    _send_measured_command->_EUSART1_Write_1
    _measured_adc->_printf
    _EUSART1_Write_1->_EUSART1_Write
    _get_measured_value->_printf
    _get_measured_adc_value->_printf
    _dump_memory_map->_dump_buffer
    _dump_buffer->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               100   100      0   56910
                                             70 BANK0      5     5      0
                                              0 BANK1     68    68      0
                                              0 BANK2     27    27      0
           _Disable_Global_Interrupt
            _Enable_Global_Interrupt
            _LED_flashes_three_times
                  _SYSTEM_Initialize
                     _calculate_diff
                           _dispatch
                    _dump_memory_map
                 _enable_tx_transmit
                 _enable_uart_printf
             _get_measured_adc_value
                 _get_measured_value
                _get_ticks_with_lock
                     _i2c_slave_init
             _i2c_slave_set_register
                        _init_button
                       _measured_adc
                        _measurement
                    _monitoring_sync
                             _printf
              _save_bottom_adc_point
                 _save_top_adc_point
_set_device_serial_number_to_i2c_sla
                          _tmr0_init
                    _update_mybutton
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _update_mybutton                                     11     4      7    3213
                                             18 BANK0     11     4      7
                  ___is_double_click
                    ___is_long_press
                  ___is_single_click
                _get_ticks_with_lock (ARG)
 ---------------------------------------------------------------------------------
 (2) ___is_single_click                                   18    12      6     762
                                              0 BANK0     18    12      6
 ---------------------------------------------------------------------------------
 (2) ___is_long_press                                     16    10      6     570
                                              0 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (2) ___is_double_click                                   17    11      6     666
                                              0 BANK0     17    11      6
 ---------------------------------------------------------------------------------
 (1) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_device_serial_number_to_i2c_slave_memorymap      7     7      0    2249
                                             27 BANK0      7     7      0
   _i2c_slave_set_register_with_lock
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                              15    11      4    1493
                                             12 BANK0     15    11      4
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isspace                                              2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isalpha                                              2     2      0     158
                                              2 BANK0      2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (4) _isupper                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_slave_set_register_with_lock                     2     1      1     544
                                              2 BANK0      2     1      1
             _i2c_slave_set_register
 ---------------------------------------------------------------------------------
 (3) _i2c_slave_set_register                               2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _save_top_adc_point                                  18    17      1    6139
                                             45 BANK0     18    17      1
                    _EUSART1_Write_1
       _calculate_crc_and_fill_array
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (1) _save_bottom_adc_point                               18    17      1    6139
                                             45 BANK0     18    17      1
                    _EUSART1_Write_1
       _calculate_crc_and_fill_array
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (2) _calculate_crc_and_fill_array                         5     4      1     712
                                             14 BANK0      5     4      1
                       _crc16_modbus
 ---------------------------------------------------------------------------------
 (3) _crc16_modbus                                        14    12      2     317
                                              0 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 (1) _monitoring_sync                                      5     1      4    6069
                                             45 BANK0      5     1      4
            _LED_flashes_three_times
                      _is_long_press
                    _is_single_click
                             _printf
              _reset_long_press_flag
            _reset_single_click_flag
 ---------------------------------------------------------------------------------
 (2) _reset_single_click_flag                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _reset_long_press_flag                                2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _is_single_click                                      2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _is_long_press                                        2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LED_flashes_three_times                              3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _measurement                                          3     2      1    5145
                                             45 BANK0      3     2      1
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
              _send_measured_command
 ---------------------------------------------------------------------------------
 (2) _send_measured_command                               33    33      0     790
                                              5 BANK0     33    33      0
                    _EUSART1_Write_1
 ---------------------------------------------------------------------------------
 (1) _measured_adc                                         9     9      0    5019
                                             45 BANK0      9     9      0
                    _EUSART1_Write_1
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write_1                                      4     3      1     766
                                              1 BANK0      4     3      1
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_button                                          4     2      2     545
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_ticks_with_lock                                  8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _get_measured_value                                  25    25      0    4442
                                             45 BANK0     25    25      0
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (1) _get_measured_adc_value                               4     4      0    4329
                                             45 BANK0      2     2      0
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (2) _enable_uart_printf                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enable_tx_transmit                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _dump_memory_map                                      0     0      0    4943
                        _dump_buffer
 ---------------------------------------------------------------------------------
 (2) _dump_buffer                                         14    12      2    4943
                                             45 BANK0     14    12      2
                            _isprint
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              35    23     12    4229
                                             14 BANK0     31    19     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _isprint                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             7     3      4     559
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _calculate_diff                                      20    12      8    1068
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Enable_Global_Interrupt                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Disable_Global_Interrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           4     4      0      91
                                              4 COMMON     4     4      0
                          _get_ticks
                _i2c_slave_interrupt
 ---------------------------------------------------------------------------------
 (6) _i2c_slave_interrupt                                  4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _get_ticks                                            4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Disable_Global_Interrupt
   _Enable_Global_Interrupt
   _LED_flashes_three_times
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _calculate_diff
   _dispatch
   _dump_memory_map
     _dump_buffer
       _isprint
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
   _enable_tx_transmit
   _enable_uart_printf
   _get_measured_adc_value
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _get_measured_value
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _get_ticks_with_lock
   _i2c_slave_init
   _i2c_slave_set_register
   _init_button
   _measured_adc
     _EUSART1_Write_1
       _EUSART1_Write
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _measurement
     _enable_tx_transmit
     _enable_uart_printf
     _printf
     _send_measured_command
       _EUSART1_Write_1
   _monitoring_sync
     _LED_flashes_three_times
     _is_long_press
     _is_single_click
     _printf
     _reset_long_press_flag
     _reset_single_click_flag
   _printf
   _save_bottom_adc_point
     _EUSART1_Write_1
     _calculate_crc_and_fill_array
       _crc16_modbus
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _save_top_adc_point
     _EUSART1_Write_1
     _calculate_crc_and_fill_array
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _set_device_serial_number_to_i2c_slave_memorymap
     _i2c_slave_set_register_with_lock
       _i2c_slave_set_register
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _tmr0_init
   _update_mybutton
     ___is_double_click
     ___is_long_press
     ___is_single_click
     _get_ticks_with_lock (ARG)
   _usart_init

 _INTERRUPT_InterruptManager (ROOT)
   _get_ticks
   _i2c_slave_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     1DE       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4B      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     44      4D       8       96.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     1B      4B      10       93.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      48      12       90.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      40      16       80.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      20      18       40.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1DE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Apr 22 00:15:24 2024

                                                     l41 1437  
                                                     l35 1441  
                                                     l38 142D  
                                                     l86 160F  
                              ??_Enable_Global_Interrupt 0020  
                                    ___wmul@multiplicand 0022  
                             __end_of_enable_tx_transmit 1494  
                                                    l400 1403  
                                                    l313 0D0D  
                                                    l331 0003  
                                                    l323 14F0  
                                                    l403 141B  
                                                    l244 15E5  
                                                    l253 1460  
                                                    l334 13EA  
                                                    l343 1613  
                                                    l247 1455  
                                                    l328 08C2  
                                                    l520 1493  
                                                    l600 1587  
                                                    l409 1413  
                                                    l346 1620  
                                                    l347 163B  
                                                    l371 070D  
                                                    l612 07D7  
                                                    l604 15A5  
                                                    l292 1485  
                                                    l277 144B  
                                                    l517 13EF  
                                                    l365 0992  
                                                    l470 14A3  
                                                    l383 0B86  
                                                    l391 0EF5  
                                                    l473 1463  
                          __end_of_send_measured_command 151B  
                                                    l609 151A  
                                                    l529 17BF  
                                                    l377 0E01  
                                                    l482 1478  
                                                    l394 140B  
                                                    l554 0C46  
                                                    l491 081A  
                                                    l476 146C  
                                                    l661 091C  
                                                    l558 16A2  
                                                    l902 04DC  
                                                    l654 090A  
                                                    l479 146F  
                                                    l656 08E0  
                                                    l664 1586  
                                                    l683 1744  
                                                    l932 15B1  
                                                    l693 0ACC  
                                                    l934 15C5  
                                                    l928 05E5  
                                                    l688 166E  
                                                    l866 03B3  
                                                    l698 0A2F  
                                                    l946 16D6  
                                                    l876 0401  
                                                    l877 0402  
                                                    l897 04AD  
                                                    _GIE 005F  
                                                    mcp0 0777  
                                                    mcp1 07CD  
                                                    _tmp 006F  
                                                    wreg 0009  
                            save_bottom_adc_point@states 005E  
                                                   l1204 1781  
                                                   l1214 170B  
                                                   l3001 043A  
                                                   l1401 0EF8  
                                                   l3011 045C  
                                                   l3003 043D  
                                                   l3101 14A6  
                                                   l3021 047B  
                                                   l3013 0469  
                                                   l3005 0441  
                                                   l3103 14A7  
                                                   l3031 04AF  
                                                   l3015 046E  
                                                   l3007 044F  
                                                   l1431 1568  
                                                   l1424 0FFF  
                                                   l3201 142E  
                                                   l3105 14AD  
                                                   l3041 04DE  
                                                   l3017 0472  
                                                   l3009 0457  
                                                   l3025 0480  
                                                   l3113 0803  
                                                   l3121 08C5  
                                                   l1441 14DC  
                                                   l3211 15F0  
                                                   l3203 15E6  
                                                   l3107 14B3  
                                                   l3035 04B6  
                                                   l3019 0476  
                                                   l3027 04A1  
                                                   l3115 0805  
                                                   l3123 08CD  
                                                   l1436 154B  
                                                   l3221 15FE  
                                                   l3213 15F6  
                                                   l3205 15E9  
                                                   l3109 14B5  
                                                   l3061 052B  
                                                   l3045 04E5  
                                                   l3053 050B  
                                                   l3029 04A8  
                                                   l3301 0CC6  
                                                   l3117 080F  
                                                   l3141 08F8  
                                                   l3133 08E5  
                                                   l3125 08D0  
                                                   l1445 1504  
                                                   l1390 14B6  
                                                   l3231 160A  
                                                   l3223 1600  
                                                   l3215 15F8  
                                                   l3207 15EB  
                                                   l3071 054B  
                                                   l3063 052F  
                                                   l3039 04D1  
                                                   l3055 0514  
                                                   l3311 0CF7  
                                                   l3303 0CCC  
                                                   l3119 0814  
                                                   l3143 0905  
                                                   l3135 08EA  
                                                   l3127 08DE  
                                                   l3151 16AC  
                                                   l3241 142C  
                                                   l3233 160D  
                                                   l3225 1603  
                                                   l3217 15FA  
                                                   l3209 15ED  
                                                   l1385 14C9  
                                                   l3081 05A0  
                                                   l3073 054F  
                                                   l3065 0535  
                                                   l3057 051F  
                                                   l3049 0500  
                                                   l3313 0CFE  
                                                   l3305 0CDE  
                                                   l3145 0917  
                                                   l3137 08EF  
                                                   l3153 16B0  
                                                   l4201 06F0  
                                                   l3235 1425  
                                                   l3227 1606  
                                                   l3219 15FC  
                                                   l3091 05BB  
                                                   l3083 05A4  
                                                   l3067 0539  
                                                   l3075 055A  
                                                   l3059 0528  
                                                   l3307 0CE9  
                                                   l3315 0D03  
                                                   l3243 13EB  
                                                   l3251 1610  
                                                   l3139 08F4  
                                                   l3155 16B8  
                                                   l3171 1549  
                                                   l3163 1535  
                                                   l4211 070C  
                                                   l4203 06F6  
                                                   l3237 1428  
                                                   l3229 1608  
                                                   l3085 05A9  
                                                   l3093 05C4  
                                                   l3077 055D  
                                                   l3069 0545  
                                                   l3309 0CEE  
                                                   l3245 13ED  
                                                   l4301 096E  
                                                   l3261 1458  
                                                   l3157 16BF  
                                                   l3149 16A3  
                                                   l3181 1556  
                                                   l3173 154A  
                                                   l3165 1537  
                                                   l3421 0EFE  
                                                   l4221 0DA2  
                                                   l4205 0700  
                                                   l3239 1429  
                                                   l3087 05AD  
                                                   l3079 0585  
                                                   l3095 05C8  
                                                   l3271 0C4E  
                                                   l3247 1486  
                                                   l4311 098C  
                                                   l4303 0974  
                                                   l3503 1505  
                                                   l3511 157E  
                                                   l3263 1459  
                                                   l3159 16CE  
                                                   l3183 155C  
                                                   l3167 153D  
                                                   l3191 14F3  
                                                   l3431 0F1B  
                                                   l3423 0F02  
                                                   l4231 0DE4  
                                                   l4223 0DA7  
                                                   l4215 0D0E  
                                                   l4207 070A  
                                                   l3513 1438  
                                                   l3521 0881  
                                                   l3097 05D2  
                                                   l3281 0C6C  
                                                   l3273 0C59  
                                                   l3249 1492  
                                                   l4305 097A  
                                                   l3505 1514  
                                                   l3257 1615  
                                                   l3265 145F  
                                                   l3185 1564  
                                                   l3177 154E  
                                                   l3169 1543  
                                                   l3193 14F9  
                                                   l3433 0F1D  
                                                   l3425 0F0B  
                                                   l4241 0E00  
                                                   l4233 0DEA  
                                                   l4225 0DAC  
                                                   l4217 0D3E  
                                                   l4321 0E2F  
                                                   l4313 0E02  
                                                   l4401 00CF  
                                                   l3515 143B  
                                                   l3523 0896  
                                                   l3291 0CA1  
                                                   l3283 0C85  
                                                   l3267 0C49  
                                                   l4307 0980  
                                                   l3259 161E  
                                                   l3507 156B  
                                                   l3099 144E  
                                                   l3187 1566  
                                                   l3179 1550  
                                                   l3195 14FF  
                                                   l3451 0F43  
                                                   l3443 0F2E  
                                                   l3435 0F22  
                                                   l3427 0F14  
                                                   l3419 0EF8  
                                                   l3531 147E  
                                                   l4235 0DF4  
                                                   l4227 0DB1  
                                                   l4219 0D6E  
                                                   l4251 0B31  
                                                   l4331 0E83  
                                                   l4323 0E49  
                                                   l4315 0E10  
                                                   l4411 00DA  
                                                   l4403 00D2  
                                                   l3517 143E  
                                                   l3525 08BA  
                                                   l2901 174E  
                                                   l3285 0C8C  
                                                   l3269 0C4B  
                                                   l3605 14DD  
                                                   l4309 0986  
                                                   l3509 1576  
                                                   l3197 1503  
                                                   l3461 0F5F  
                                                   l3453 0F4A  
                                                   l3445 0F34  
                                                   l3437 0F27  
                                                   l3429 0F15  
                                                   l3533 147F  
                                                   l4237 0DFE  
                                                   l4229 0DD1  
                                                   l4261 0B79  
                                                   l4253 0B36  
                                                   l4245 0ACD  
                                                   l4181 05E6  
                                                   l4341 0ED3  
                                                   l4333 0E90  
                                                   l4325 0E56  
                                                   l4317 0E1C  
                                                   l3541 1497  
                                                   l4501 02CA  
                                                   l4421 00EE  
                                                   l4413 00E1  
                                                   l4405 00D4  
                                                   l3519 086E  
                                                   l2911 176D  
                                                   l2903 1751  
                                                   l3287 0C91  
                                                   l3279 0C5C  
                                                   l3607 14DE  
                                                   l3551 15C6  
                                                   l3711 170C  
                                                   l4271 1404  
                                                   l4351 0BA7  
                                                   l3471 0F78  
                                                   l3455 0F50  
                                                   l3463 0F64  
                                                   l3447 0F39  
                                                   l3535 1481  
                                                   l4263 0B83  
                                                   l4255 0B56  
                                                   l4247 0AFD  
                                                   l4191 06AE  
                                                   l4183 0616  
                                                   l4343 0EE8  
                                                   l4335 0EA4  
                                                   l4327 0E5F  
                                                   l4319 0E25  
                                                   l3543 149C  
                                                   l4511 02D6  
                                                   l4503 02CD  
                                                   l4431 0111  
                                                   l4423 00F1  
                                                   l4415 00E9  
                                                   l4407 00D6  
                                                   l2913 1771  
                                                   l2905 1756  
                                                   l3297 0CA4  
                                                   l3289 0C9A  
                                                   l3609 14E7  
                                                   l3561 15D0  
                                                   l3553 15C8  
                                                   l3721 172C  
                                                   l3713 170F  
                                                   l4281 140C  
                                                   l4361 0BD1  
                                                   l4353 0BAA  
                                                   l4345 0B89  
                                                   l3801 09D6  
                                                   l3473 0F80  
                                                   l3465 0F6A  
                                                   l3457 0F56  
                                                   l3449 0F3D  
                                                   l3537 1482  
                                                   l3529 1479  
                                                   l4257 0B69  
                                                   l4249 0B2C  
                                                   l4193 06B3  
                                                   l4185 0646  
                                                   l4337 0EB1  
                                                   l4329 0E69  
                                                   l3545 149D  
                                                   l4521 02F3  
                                                   l4513 02DA  
                                                   l4441 0161  
                                                   l4433 0112  
                                                   l4425 00F9  
                                                   l4417 00EC  
                                                   l4409 00D8  
                                                   l3731 167B  
                                                   l2915 1772  
                                                   l2907 175A  
                                                   l2931 16EA  
                                                   l2923 16D7  
                                                   l3299 0CB4  
                                                   l3571 15DB  
                                                   l3563 15D2  
                                                   l3555 15CA  
                                                   l4291 0946  
                                                   l4283 091D  
                                                   l3723 173B  
                                                   l3715 1717  
                                                   l3651 159D  
                                                   l4275 13FC  
                                                   l4371 0BFB  
                                                   l4363 0BD4  
                                                   l4347 0B95  
                                                   l4355 0BB2  
                                                   l3811 0A1D  
                                                   l3803 09DD  
                                                   l3491 0FDC  
                                                   l3483 0FA1  
                                                   l3475 0F89  
                                                   l3459 0F5A  
                                                   l3467 0F6E  
                                                   l4267 0B85  
                                                   l4259 0B6F  
                                                   l4195 06B8  
                                                   l4187 067A  
                                                   l4339 0EC6  
                                                   l3547 149F  
                                                   l3539 1494  
                                                   l4531 0306  
                                                   l4523 02FB  
                                                   l4515 02DD  
                                                   l4507 02D1  
                                                   l4451 01D4  
                                                   l4443 0179  
                                                   l4435 0113  
                                                   l4427 0105  
                                                   l4419 00ED  
                                                   l3733 1680  
                                                   l3741 168F  
                                                   l2917 1777  
                                                   l2909 175E  
                                                   l2933 16EE  
                                                   l2925 16DE  
                                                   l2941 1707  
                                                   l3821 1652  
                                                   l3573 15DF  
                                                   l3557 15CC  
                                                   l4293 0951  
                                                   l4285 0924  
                                                   l3725 173C  
                                                   l3717 1720  
                                                   l3653 15A0  
                                                   l3645 1589  
                                                   l4381 0C12  
                                                   l4373 0BFE  
                                                   l4357 0BBF  
                                                   l4365 0BDC  
                                                   l4349 0B9D  
                                                   l3813 0A29  
                                                   l3805 09E6  
                                                   l3493 0FE2  
                                                   l3485 0FCC  
                                                   l3477 0F92  
                                                   l3469 0F74  
                                                   l4197 06BD  
                                                   l4189 06A9  
                                                   l3549 14A1  
                                                   l4533 031F  
                                                   l4525 02FE  
                                                   l4517 02E3  
                                                   l4509 02D4  
                                                   l4461 01F7  
                                                   l4453 01DB  
                                                   l4541 032E  
                                                   l4437 0126  
                                                   l4429 010E  
                                                   l3743 1694  
                                                   l3735 1685  
                                                   l2919 177D  
                                                   l2935 16F8  
                                                   l2927 16E1  
                                                   l2871 14B9  
                                                   l2863 1463  
                                                   l3831 1442  
                                                   l3823 1655  
                                                   l3815 163E  
                                                   l3559 15CE  
                                                   l4295 095C  
                                                   l4287 0930  
                                                   l3727 1742  
                                                   l3719 1723  
                                                   l3655 15A3  
                                                   l3647 158C  
                                                   l4279 1414  
                                                   l4391 0C31  
                                                   l4375 0C01  
                                                   l4367 0BE9  
                                                   l4383 0C16  
                                                   l4359 0BC7  
                                                   l3807 09E9  
                                                   l3751 0A32  
                                                   l2951 14D9  
                                                   l3495 0FE7  
                                                   l3487 0FD1  
                                                   l3479 0F95  
                                                   l4199 06DD  
                                                   l4535 0327  
                                                   l4527 0300  
                                                   l4519 02EB  
                                                   l4471 024B  
                                                   l4463 0204  
                                                   l4543 0346  
                                                   l4455 01DE  
                                                   l4447 0192  
                                                   l4439 0158  
                                                   l3745 1699  
                                                   l3737 168A  
                                                   l3729 1671  
                                                   l2937 16FC  
                                                   l2929 16E6  
                                                   l2873 14BA  
                                                   l2865 1468  
                                                   l2961 03AA  
                                                   l3825 1655  
                                                   l3817 1641  
                                                   l3841 0727  
                                                   l3833 0710  
                                                   l3569 15D5  
                                                   l4297 0962  
                                                   l4289 093B  
                                                   l3649 1594  
                                                   l4393 0C34  
                                                   l4385 0C23  
                                                   l4377 0C04  
                                                   l4369 0BF1  
                                                   l3809 09F2  
                                                   l3761 0A58  
                                                   l3753 0A35  
                                                   l2953 14DB  
                                                   l2945 14CC  
                                                   l3489 0FD6  
                                                   l4545 0359  
                                                   l4537 032A  
                                                   l4529 0303  
                                                   l4481 0281  
                                                   l4473 0254  
                                                   l4465 0206  
                                                   l4457 01E7  
                                                   l4449 01C4  
                                                   l3747 169E  
                                                   l2939 1701  
                                                   l2891 15BB  
                                                   l2883 15A6  
                                                   l2875 14C0  
                                                   l2971 03C1  
                                                   l2963 03AF  
                                                   l3827 165D  
                                                   l3819 1649  
                                                   l3851 0780  
                                                   l3843 072A  
                                                   l3835 0713  
                                                   l4299 0968  
                                                   l2867 146F  
                                                   l4395 0C3C  
                                                   l4387 0C2B  
                                                   l4379 0C0C  
                                                   l3771 0A7A  
                                                   l3763 0A5D  
                                                   l3755 0A3D  
                                                   l2947 14CD  
                                                   l3499 0FF7  
                                                   l4547 038A  
                                                   l4491 0293  
                                                   l4483 0285  
                                                   l4467 0238  
                                                   l4475 0257  
                                                   l4459 01EA  
                                                   l2893 15C1  
                                                   l2885 15A9  
                                                   l2877 14C6  
                                                   l2981 03F4  
                                                   l2973 03CD  
                                                   l2965 03B4  
                                                   l2957 03A0  
                                                   l3829 1665  
                                                   l3853 07BB  
                                                   l3845 0765  
                                                   l3837 071B  
                                                   l2869 1474  
                                                   l4397 0C42  
                                                   l4389 0C2E  
                                                   l3781 0AC6  
                                                   l3773 0A83  
                                                   l3765 0A62  
                                                   l3757 0A46  
                                                   l2949 14D3  
                                                   l3861 1782  
                                                   l4549 039A  
                                                   l4493 029C  
                                                   l4477 026D  
                                                   l4469 0248  
                                                   l2887 15AD  
                                                   l2879 14C8  
                                                   l2991 0419  
                                                   l2983 0404  
                                                   l2975 03D0  
                                                   l2959 03A4  
                                                   l3855 07CE  
                                                   l3847 0778  
                                                   l3839 0724  
                                                   l3791 09AC  
                                                   l3783 0995  
                                                   l3775 0A86  
                                                   l3767 0A6D  
                                                   l3759 0A49  
                                                   l3871 17A1  
                                                   l4495 029F  
                                                   l4487 028C  
                                                   l4479 027B  
                                                   l4399 00C6  
                                                   l3857 0002  
                                                   l2897 1745  
                                                   l2889 15B6  
                                                   l2993 041C  
                                                   l2985 040B  
                                                   l2977 03E1  
                                                   l2969 03B8  
                                                   l3849 077E  
                                                   l3793 09BB  
                                                   l3785 0998  
                                                   l3777 0A8F  
                                                   l3769 0A73  
                                                   l3873 17AD  
                                                   l4497 02A2  
                                                   l4489 028F  
                                                   l3859 13E9  
                                                   l2899 1748  
                                                   l2995 0420  
                                                   l2987 040F  
                                                   l2979 03F0  
                                                   l3795 09C0  
                                                   l3787 09A0  
                                                   l3779 0ABA  
                                                   l3875 17B4  
                                                   l3867 1784  
                                                   l4499 02C2  
                                        ?_calculate_diff 0020  
                                                   l2997 042B  
                                                   l2989 0415  
                                                   l3797 09C5  
                                                   l3789 09A9  
                                                   l3877 17B9  
                                                   l3869 17A0  
                                                   l2999 0435  
                                                   l3799 09D0  
                                                   STR_1 18FE  
                                                   STR_2 1987  
                                                   STR_3 1972  
                                                   STR_4 1195  
                                                   STR_5 120E  
                                                   STR_6 1800  
                                                   STR_7 18DE  
                                                   STR_8 199D  
                                                   STR_9 19A3  
                                                   u2000 0468  
                                                   u2001 0467  
                                                   u2010 04B5  
                                                   u2011 04B4  
                                                   u2100 0544  
                                                   u2020 04D0  
                                                   u2101 0543  
                                                   u2021 04CF  
                                                   u2110 054B  
                                                   u2030 04DB  
                                                   u2111 054A  
                                                   u2031 04DA  
                                                   u2120 055A  
                                                   u2040 04E4  
                                                   u2121 0559  
                                                   u2041 04E3  
                                                   u2025 04CC  
                                                   u2130 05A4  
                                                   u2050 04FF  
                                                   u2131 05A3  
                                                   u2051 04FE  
                                                   u2140 05D2  
                                                   u2060 050A  
                                                   u2220 0905  
                                                   u3100 0A54  
                                                   u2300 1549  
                                                   u2141 05D1  
                                                   u2061 0509  
                                                   u2221 0904  
                                                   u2205 08E6  
                                                   u2301 1548  
                                                   _LATA 0018  
                                                   u2150 05E5  
                                                   u2070 051F  
                                                   u2230 0917  
                                                   u3110 09B7  
                                                   u2310 1556  
                                                   u2151 05E4  
                                                   u2071 051E  
                                                   u2055 04FB  
                                                   u2231 0916  
                                                   u2215 08F0  
                                                   u2311 1555  
                                                   _LATC 001A  
                                                   u2160 14AD  
                                                   u2080 052F  
                                                   u2400 0CC6  
                                                   u3120 073D  
                                                   u2240 16B0  
                                                   u2320 155C  
                                                   u2161 14AC  
                                                   u2081 052E  
                                                   u2401 0CC5  
                                                   u2225 0901  
                                                   u2241 16AF  
                                                   u2321 155B  
                                                   u2170 14B3  
                                                   u2090 0535  
                                                   u2410 0CF7  
                                                   u3130 074B  
                                                   u3050 1737  
                                                   u2330 1564  
                                                   u2171 14B2  
                                                   u2091 0534  
                                                   u2075 051B  
                                                   u2411 0CF6  
                                                   u2235 0913  
                                                   u2331 1563  
                                                   u3060 1680  
                                                   u1700 1468  
                                                   u2420 0D0D  
                                                   u2180 081A  
                                                   u2340 14F9  
                                                   u3061 167F  
                                                   u1701 1467  
                                                   u2421 0D0C  
                                                   u3125 0739  
                                                   u2181 0819  
                                                   u2341 14F8  
                                                   u3070 1685  
                                                   u3150 0793  
                                                   u1710 1474  
                                                   u2190 08E5  
                                                   u2270 16CE  
                                                   u2350 14FF  
                                                   u3071 1684  
                                                   u3135 0747  
                                                   u1711 1473  
                                                   u4007 1619  
                                                   u2191 08E4  
                                                   u2271 16CD  
                                                   u2255 16B9  
                                                   u2351 14FE  
                                                   u3080 1694  
                                                   u1800 175E  
                                                   u1720 14C0  
                                                   u3160 07A1  
                                                   u2360 163B  
                                                   u2280 153D  
                                                   u3400 0643  
                                                   u3081 1693  
                                                   u1801 175D  
                                                   u1721 14BF  
                                                   u2425 0D09  
                                                   u2361 163A  
                                                   u4017 1624  
                                                   u2265 16C0  
                                                   u2281 153C  
                                                   u3401 0641  
                                                   u3090 1699  
                                                   u1730 14C6  
                                                   u2370 0C6C  
                                                   u2290 1543  
                                                   u3410 0644  
                                                   u3091 1698  
                                                   u1731 14C5  
                                                   u2371 0C6B  
                                                   u3155 078F  
                                                   u4027 1598  
                                                   u2291 1542  
                                                   u1820 176D  
                                                   u1900 1707  
                                                   u1740 15AD  
                                                   u2380 0C9A  
                                                   u3180 17BF  
                                                   u3500 0700  
                                                   u3420 0677  
                                                   u1821 176C  
                                                   u1901 1706  
                                                   u1741 15AC  
                                                   u2381 0C99  
                                                   u3165 079D  
                                                   u4037 171B  
                                                   u2365 1637  
                                                   u3181 17BE  
                                                   u3501 06FF  
                                                   u3421 0675  
                                                   u2390 0CB4  
                                                   u1910 14D3  
                                                   u3510 070A  
                                                   u3430 0678  
                                                   u1815 175F  
                                                   u2391 0CB3  
                                                   u2375 0C68  
                                                   u4047 1727  
                                                   u1911 14D2  
                                                   u3511 0709  
                                                   u1840 177D  
                                                   u1920 14D9  
                                                   u2800 0F43  
                                                   u3600 0DB1  
                                                   u3520 0D3C  
                                                   u3440 06A6  
                                                   u1841 177C  
                                                   u1825 1769  
                                                   u4057 071F  
                                                   u1921 14D8  
                                                   u2801 0F42  
                                                   u3601 0DB0  
                                                   u3521 0D3A  
                                                   u3441 06A4  
                                                   u1850 16DE  
                                                   u1770 15C1  
                                                   u1930 03AA  
                                                   u2810 0F4A  
                                                   u3610 0DF4  
                                                   u3530 0D3D  
                                                   u3450 06A7  
                                                   u1835 1773  
                                                   u1851 16DD  
                                                   u1771 15C0  
                                                   u1755 15B2  
                                                   u1931 03A9  
                                                   u2395 0CB0  
                                                   u4067 164D  
                                                   u2811 0F49  
                                                   u3611 0DF3  
                                                   u1780 174E  
                                                   u1940 03CD  
                                                   u2900 0FE7  
                                                   u2820 0F50  
                                                   u3620 0DFE  
                                                   u3540 0D6B  
                                                   u3700 0B83  
                                                   u3460 06AE  
                                                   u3380 0614  
                                                   u1781 174D  
                                                   u1765 15B7  
                                                   u1941 03CC  
                                                   u4077 148A  
                                                   u2901 0FE6  
                                                   u2821 0F4F  
                                                   u3621 0DFD  
                                                   u3541 0D69  
                                                   u3525 0D37  
                                                   u3701 0B82  
                                                   u3461 06AD  
                                                   u3381 0612  
                                                   u1870 16EE  
                                                   u1950 0400  
                                                   u2910 1510  
                                                   u2830 0F56  
                                                   u3550 0D6C  
                                                   u3630 0AFB  
                                                   u3470 06B3  
                                                   u3390 0615  
                                                   u3710 0E25  
                                                   u1871 16ED  
                                                   u1951 03FF  
                                                   u2831 0F55  
                                                   u3631 0AF9  
                                                   u3471 06B2  
                                                   u3711 0E24  
                                                   u2920 0881  
                                                   u1880 16F8  
                                                   u1960 0415  
                                                   u3800 0BE9  
                                                   u2840 0F6A  
                                                   u2760 0F0B  
                                                   u3560 0D9F  
                                                   u3640 0AFC  
                                                   u3480 06B8  
                                                   u3720 0E2F  
                                                   u2921 0880  
                                                   u1881 16F7  
                                                   u1865 16E2  
                                                   u1961 0414  
                                                   u3801 0BE8  
                                                   u2841 0F69  
                                                   u2761 0F09  
                                                   u3561 0D9D  
                                                   u3481 06B7  
                                                   u3385 060F  
                                                   u3721 0E2E  
                                                   u1970 042B  
                                                   u2930 15E5  
                                                   u3810 0C23  
                                                   u2850 0F74  
                                                   u2770 0F1B  
                                                   u3570 0DA0  
                                                   u3650 0B29  
                                                   u3490 06BD  
                                                   u3730 0E5F  
                                                   u1795 1752  
                                                   u1971 042A  
                                                   u2931 15E4  
                                                   u3811 0C22  
                                                   u2851 0F73  
                                                   u2771 0F1A  
                                                   u3651 0B27  
                                                   u3635 0AF6  
                                                   u3491 06BC  
                                                   u3731 0E5E  
                                                   u1980 0435  
                                                   u2860 0F80  
                                                   u2780 0F2D  
                                                   u3580 0DA7  
                                                   u3660 0B2A  
                                                   u3740 0E69  
                                                   u3820 0158  
                                                   _PMD0 0796  
                                                   u2925 087D  
                                                   u1885 16F4  
                                                   u1981 0434  
                                                   u2861 0F7F  
                                                   u2781 0F2C  
                                                   u3581 0DA6  
                                                   u3741 0E68  
                                                   u3821 0157  
                                                   _PMD1 0797  
                                                   u1990 044E  
                                                   u2870 0F92  
                                                   u2790 0F34  
                                                   u3590 0DAC  
                                                   u3670 0B31  
                                                   u3750 0EA4  
                                                   u3830 01C4  
                                                   _PMD2 0798  
                                                   u1895 16FD  
                                                   u1991 044D  
                                                   u2871 0F91  
                                                   u2791 0F33  
                                                   u3591 0DAB  
                                                   u3671 0B30  
                                                   u3751 0EA3  
                                                   u3831 01C3  
                                                   _PMD3 0799  
                                                   u2880 0FA0  
                                                   u3680 0B36  
                                                   u3760 0EC6  
                                                   u3840 0238  
                                                   _PMD4 079A  
                                                   u1985 0431  
                                                   u2881 0F9F  
                                                   u3681 0B35  
                                                   u3761 0EC5  
                                                   u3841 0237  
                                                   _PMD5 079B  
                                                   u2890 0FDC  
                                                   u3690 0B79  
                                                   u3770 0EE8  
                                                   u3850 038A  
                                                   _PMD6 079C  
                                                   u2891 0FDB  
                                                   u3691 0B78  
                                                   u3771 0EE7  
                                                   u3851 0389  
                                                   u3907 0268  
                                                   _PMD7 079D  
                                                   u3780 0B95  
                                                   u3781 0B94  
                                                   u2885 0F9C  
                                                   u3917 0297  
                                                   u3790 0BBF  
                                                   u3791 0BBE  
                                                   u3927 0A41  
                                                   u3937 0A7E  
                                                   u3947 0A8A  
                                                   u3867 0109  
                                                   u3957 0ABE  
                                                   u3877 01E2  
                                                   u3967 09A4  
                                                   u3887 01FB  
                                                   u3977 09E1  
                                                   u3897 024F  
                                                   u3987 09ED  
                                                   u3997 0A21  
                                                   _WPUA 1F39  
                                                   _WPUC 1F4F  
                                          _EUSART1_Write 146D  
                                                   _main 00C6  
                                                   mcp0b 0769  
                                                   mcp1b 07BF  
                                                   mcp0z 0778  
                                                   mcp1z 07CE  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                              ??_reset_single_click_flag 0022  
                                                   start 0069  
                                        _update_mybutton 0E02  
                                           ?_dump_buffer 004D  
                                           ?_measurement 004D  
                          __end_of_OSCILLATOR_Initialize 142E  
                                                  ?_main 0070  
                                                  STR_10 19A9  
                                                  STR_11 19AA  
                                                  STR_12 19AD  
                                                  STR_20 1936  
                                                  STR_13 12A3  
                                                  STR_21 1947  
                                                  STR_14 1997  
                                                  STR_30 1990  
                                                  STR_22 12A6  
                                                  STR_31 1914  
                                                  STR_23 18BB  
                                                  STR_16 1972  
                                                  STR_32 1925  
                                                  STR_24 125C  
                                                  STR_17 1972  
                                                  STR_25 1894  
                                                  STR_18 1958  
                                                  STR_26 186A  
                                                  STR_19 1965  
                                                  STR_27 10D0  
                                                  STR_28 183D  
                                                  STR_29 1008  
                                    ___is_double_click@b 0020  
                                           _crc16_modbus 08C3  
                                        __end_of___lwdiv 1782  
                         ??_calculate_crc_and_fill_array 002F  
                                                  i1l320 1424  
                                                  i1l264 086D  
                                        __end_of___lwmod 170C  
                                                  i1l267 086B  
                                                  i1l508 0067  
                                                  i1l269 0847  
                            send_measured_command@F10571 01A0  
                                                  u314m0 0772  
                                                  u314m1 0778  
                                                  u317m0 07C8  
                                                  u317m1 07CE  
                                                  _OSCEN 0891  
                                                  _TMR0H 059D  
                                                  _TMR0L 059C  
                                                  _TRISA 0012  
                                           ?_init_button 0020  
                                                  _TRISC 0014  
                                    ___lmul@multiplicand 0024  
                         save_top_adc_point@sensor_value 004D  
                                       ?_monitoring_sync 004D  
                                __end_of_dump_memory_map 144C  
                                  update_mybutton@signal 0034  
                                        __end_of_dpowers 1987  
                                        __end_of_isalpha 1569  
                                        __end_of_isdigit 14CA  
                                                  _ticks 0078  
                                                  _putch 1461  
                                     measured_adc@F10605 0163  
                        calculate_crc_and_fill_array@crc 0030  
                                        __end_of_isspace 154C  
                                   get_measured_value@ph 0059  
                                         ?_EUSART1_Write 0070  
                                        __end_of_isprint 14B7  
                                        __end_of_isupper 14DD  
                                   main@b2_clicked_count 0068  
                           ___is_double_click@condition1 002E  
                                      monitoring_sync@b1 004D  
                           ___is_double_click@condition2 002F  
                                      monitoring_sync@b2 004E  
                           ___is_double_click@condition3 0030  
                                                  status 0003  
                                                  wtemp0 007E  
                                        __end_of_toupper 1505  
                                        __initialization 006B  
                                      ??_is_single_click 0022  
                                           __end_of_main 03A0  
                           ___is_single_click@condition1 002E  
                           ___is_single_click@condition2 002F  
                           ___is_single_click@condition3 0030  
                           ___is_single_click@condition4 0031  
                                      ___is_single_click 05E6  
                                          ?_measured_adc 0070  
                            ?_INTERRUPT_InterruptManager 0070  
                                     ?___is_single_click 0020  
                                                 ??_main 0066  
                        __end_of_reset_single_click_flag 141C  
                              i2c_slave_interrupt@isNack 0072  
                              i2c_slave_interrupt@isRead 0071  
                                         _i2c_slave_init 15C6  
                                    ??___is_single_click 0026  
                                          dispatch@state 0026  
                        monitoring_sync@b2_clicked_count 0050  
                                                 _ANSELA 1F38  
                                                 ?_putch 0070  
                                                 _ANSELC 1F4E  
                                                 _T0CON0 059E  
                                                 _T0CON1 059F  
                                                 _RC1REG 0119  
                                                 _RC0PPS 1F20  
                                                 _RC1PPS 1F21  
                                                 _RA5PPS 1F15  
                                                 _RC1STA 011D  
                                                 _RC3PPS 1F23  
                                __end_of_update_mybutton 0EF6  
                                                 _RC5PPS 1F25  
                                                 _ODCONA 1F3A  
                                                 _ODCONC 1F50  
                                                 i1l4121 000C  
                                                 i1l4123 0014  
                                                 i1l4131 003B  
                                                 i1l4141 0055  
                                                 i1l4133 0040  
                                                 i1l4125 001A  
                                                 i1l4117 0006  
                                                 i1l4143 0058  
                                                 i1l4135 0041  
                                                 i1l4127 0036  
                                                 i1l4119 000B  
                                                 i1l4145 0060  
                                                 i1l4137 0044  
                                                 i1l4129 0038  
                                                 i1l4147 0064  
                                                 i1l4139 0049  
                                                 i1l3901 0844  
                                                 i1l3911 085D  
                                                 i1l3903 084A  
                                                 i1l3905 084D  
                                                 i1l3907 0850  
                                                 i1l3915 085F  
                                                 i1l3917 141C  
                                                 i1l3909 0856  
                                                 i1l3891 082C  
                                                 i1l3883 081B  
                                                 i1l3893 0831  
                                                 i1l3885 0824  
                                                 i1l3895 0838  
                                                 i1l3887 0829  
                                                 i1l3897 083C  
                                                 i1l3899 0842  
                                                 u320_20 0831  
                                                 u320_21 0830  
                                                 _INLVLA 1F3C  
                                                 _INLVLC 1F52  
                                                 u321_20 0842  
                                                 u321_21 0841  
                                                 u322_20 0856  
                                                 u330_20 001A  
                                                 u322_21 0855  
                                                 u330_21 0019  
                                                 u331_20 0036  
                                                 u331_21 0035  
                                                 u332_20 0040  
                                                 u332_21 003F  
                                                 u333_20 0049  
                                                 u333_21 0048  
                                                 u319_20 0829  
                                                 u319_21 0828  
                                                 u329_20 000B  
                                                 u329_21 000A  
                                    _i2c_slave_interrupt 081B  
                                                 _OSCFRQ 0893  
                                                 _TX1REG 011A  
                                                 _TX1STA 011E  
                                        _EUSART1_Write_1 0801  
                              __end_of___is_single_click 070E  
                                     _enable_uart_printf 13EB  
                                       __end_of_dispatch 16A3  
                                                 ___lmul 16A3  
                                                 ___wmul 15A6  
                                         ??_measured_adc 004D  
                                              ??___lwdiv 0024  
                           dispatch@b2_clicked_count_ptr 0023  
                                              ??___lwmod 002C  
                                   ?_i2c_slave_interrupt 0070  
   set_device_serial_number_to_i2c_slave_memorymap@value 003D  
                                                 _printf 03A0  
                                    ?_enable_uart_printf 0070  
                                                 main@b1 00C9  
                                                 main@b2 0120  
                                        _currentRegister 007C  
                                 __end_of_i2c_slave_init 15E6  
                                                 _strtol 0EF6  
                       calculate_crc_and_fill_array@data 0032  
                                     _save_top_adc_point 0A30  
                                         _PMD_Initialize 142E  
                                              ??_isalpha 0022  
                                              ??_isdigit 0020  
                                     main@prev_ticks_btn 00E4  
                                              ??_isspace 0020  
                                              ??_isprint 0020  
                          __end_of_save_bottom_adc_point 0A30  
                                              ??_isupper 0020  
                            i2c_slave_set_register@value 0020  
                                       ?_dump_memory_map 0070  
                                        ??_EUSART1_Write 0020  
                              ?_Disable_Global_Interrupt 0070  
                                    ?_save_top_adc_point 004D  
                                              ??_toupper 0020  
                                ?_get_measured_adc_value 0070  
                                  ___is_single_click@now 0022  
                                      _SYSTEM_Initialize 1438  
                                   ??_enable_uart_printf 0020  
                                __end_of__initialization 00C2  
                                ??_reset_long_press_flag 0022  
                                      ??___is_long_press 0026  
                                     ?_SYSTEM_Initialize 0070  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK2 151B  
                                           __pidataBANK3 07D8  
                                           __pidataBANK5 17C0  
                                    ??_SYSTEM_Initialize 0020  
                                   ??_save_top_adc_point 004E  
                             __end_of_get_measured_value 07D8  
                                  ??_i2c_slave_interrupt 0070  
                                          __end_of_putch 146D  
                                 __end_of_PMD_Initialize 1438  
                                        ?_i2c_slave_init 0070  
                                       ??_calculate_diff 0028  
                         __end_of_get_measured_adc_value 166F  
                              __end_of_SYSTEM_Initialize 1442  
                                                ??_putch 0020  
                                          _is_long_press 13FC  
                                __end_of_EUSART1_Write_1 081B  
                                     _enable_tx_transmit 1486  
                                             __pbssBANK0 006B  
                                             __pbssBANK1 00E4  
                                             __pbssBANK2 013B  
                                  _is_RA5_button_pressed 006D  
                                             __pbssBANK3 01C8  
                                             __pbssBANK4 0220  
                                             __pbssBANK6 0320  
                                       ?_update_mybutton 0032  
                                         _rxbuffer_index 007D  
                                    ?_enable_tx_transmit 0070  
                 save_top_adc_point@save_top_adc_command 0056  
                                             __pmaintext 00C6  
                                _LED_flashes_three_times 1610  
                                                ?___lmul 0020  
                                                ?___wmul 0020  
                                             __pintentry 0004  
                                    _get_ticks_with_lock 14DD  
                                         ___lmul@product 0028  
                                                ?_printf 002E  
                                        ?_PMD_Initialize 0070  
                                  ___is_double_click@now 0022  
                                                ?_strtol 002C  
                                   ??_enable_tx_transmit 0020  
                                                _SP1BRGH 011C  
                                                _SP1BRGL 011B  
                                  _send_measured_command 1505  
                               ??_i2c_slave_set_register 0021  
                                                _OSCCON1 088D  
                                                _OSCCON3 088F  
                                           dump_buffer@i 0057  
                                           dump_buffer@j 0059  
                                           dump_buffer@p 0056  
                                                _OSCTUNE 0892  
                                                _SSP1ADD 018D  
                                                _SLRCONA 1F3B  
                                                _SLRCONC 1F51  
                                                _SSP1BUF 018C  
                                                _SSP1MSK 018E  
                                         ?_is_long_press 0020  
                                              ?_dispatch 0020  
                                   ?_get_ticks_with_lock 0020  
                                   __end_of_measured_adc 1745  
                                        _is_single_click 1404  
                       set_bottom_calibrate_point@F10600 02A0  
                               ?_Enable_Global_Interrupt 0070  
                                      __end_of_get_ticks 1425  
                                       update_mybutton@b 0032  
                                                ___lwdiv 1745  
                                                ___lwmod 16D7  
                                                __ptext1 1494  
                                                __ptext2 0E02  
                                                __ptext3 05E6  
                                                __ptext4 0ACD  
                                                __ptext5 0D0E  
                                                __ptext6 1479  
                                                __ptext7 1782  
                                                __ptext8 0EF6  
                                                __ptext9 14F1  
  set_device_serial_number_to_i2c_slave_memorymap@buffer 003E  
                                      __end_of_hexpowers 1008  
                               dispatch@b1_clicked_count 0024  
                                                _dpowers 197D  
                                  _OSCILLATOR_Initialize 1425  
                                                _isalpha 154C  
                                                _isdigit 14B7  
                  i2c_slave_set_register@registerAddress 0021  
                               ??_PIN_MANAGER_Initialize 0020  
                                                _isspace 1533  
                                                _isprint 14A4  
                                                _isupper 14CA  
                                  ??_get_ticks_with_lock 0024  
                                                clrloop0 13F1  
                                                main@now 00A0  
                                             ??_dispatch 0024  
                                                _toupper 14F1  
                               ?_reset_single_click_flag 0020  
                                   end_of_initialization 00C2  
                                           init_button@b 0020  
                                      __end_of_tmr0_init 1486  
       set_device_serial_number_to_i2c_slave_memorymap@i 0041  
                                       ?_EUSART1_Write_1 0021  
                                 get_measured_value@temp 005B  
                                                init_ram 13F6  
                                         main@prev_ticks 014F  
                                                initloop 13F7  
                               calculate_diff@prev_ticks 0024  
                   __end_of_calculate_crc_and_fill_array 1587  
                           _calculate_crc_and_fill_array 1569  
                              ??_LED_flashes_three_times 0020  
                                  main@rev_ticks_btn_407 0147  
                                                printf@c 004C  
                                                printf@f 002E  
                               LED_flashes_three_times@i 0021  
                       __end_of_Disable_Global_Interrupt 13EB  
                                                strtol@a 0035  
                                                strtol@c 003A  
                                                strtol@s 0039  
                                        crc16_modbus@crc 002C  
                                              _PORTAbits 000C  
                                        crc16_modbus@len 0020  
                                 ?_send_measured_command 0070  
                                __end_of_is_single_click 140C  
                                              _TRISAbits 0012  
                                        ??_is_long_press 0022  
                                        ___is_long_press 0ACD  
                                           strtol@endptr 002C  
                                    EUSART1_Write@txData 0020  
                                             dispatch@b1 0020  
                                             dispatch@b2 0021  
                        __end_of_Enable_Global_Interrupt 0004  
                                            printf@width 004A  
                                             _usart_init 1494  
                          __end_of_reset_long_press_flag 1414  
                         get_measured_value@payload_temp 0061  
                          ?_calculate_crc_and_fill_array 002E  
                                       ??_i2c_slave_init 0020  
                                         __end_of___lmul 16D7  
                                         __end_of___wmul 15C6  
                                 ?_OSCILLATOR_Initialize 0070  
                                         __end_of_printf 05E6  
                                    ___is_single_click@b 0020  
                                         __end_of_strtol 1000  
                                    start_initialization 006B  
                                     _get_measured_value 070E  
                             send_measured_command@txbuf 0026  
                                  _save_bottom_adc_point 0993  
                                  __end_of_EUSART1_Write 1479  
                                    ?_get_measured_value 0070  
           save_bottom_adc_point@save_bottom_adc_command 0056  
                  i2c_slave_set_register_with_lock@value 0022  
                            __end_of_i2c_slave_interrupt 086E  
                                 _i2c_slave_set_register 144C  
                                       ??_PMD_Initialize 0020  
                                               ??___lmul 0028  
                                          ??_dump_buffer 004F  
                                      ??_monitoring_sync 0051  
                                               ??___wmul 0024  
                                          ??_measurement 004E  
                                            __pdataBANK2 0153  
                                            __pdataBANK3 01A0  
                                            __pdataBANK5 02A0  
                                           _measured_adc 170C  
                                   ??_get_measured_value 004D  
                                __end_of___is_long_press 0B87  
                                               ??_printf 003A  
                                          ?_crc16_modbus 0020  
                                          crc16_modbus@i 0028  
                                          crc16_modbus@j 002A  
                                               ??_strtol 0030  
                                          ??_init_button 0022  
                               _Disable_Global_Interrupt 13E9  
                                            __pbssCOMMON 0078  
                                              ___latbits 0002  
                                          __pcstackBANK0 0020  
                                          __pcstackBANK1 00A0  
                                          __pcstackBANK2 0120  
                                       ?_is_single_click 0020  
                                           _isalpha$1979 0022  
                   calculate_crc_and_fill_array@data_len 002E  
                                     update_mybutton@now 0035  
                                           _isdigit$1945 0020  
                         get_measured_value@sensor_value 0065  
                                           _currentState 006B  
                                            ?_usart_init 0070  
                                       ___lwdiv@dividend 0022  
                                 _PIN_MANAGER_Initialize 15E6  
                                               ?___lwdiv 0020  
                      save_bottom_adc_point@sensor_value 004D  
                                               ?___lwmod 0028  
                                         ??_crc16_modbus 0022  
                           ??_INTERRUPT_InterruptManager 0074  
                                              _get_ticks 141C  
                                       is_single_click@b 0020  
                           get_measured_value@payload_ph 005D  
                                               _BAUD1CON 011F  
                                    __end_of_dump_buffer 0D0E  
                                    __end_of_measurement 15A6  
                                               ?_isalpha 0070  
                                               ?_isdigit 0070  
                               dispatch@b2_clicked_count 0025  
                                 main@prev_ticks_monitor 014B  
                                               ?_isspace 0070  
                                               ?_isprint 0070  
                                               ?_isupper 0070  
                                 ?_save_bottom_adc_point 004D  
                                      dump_buffer@buffer 0055  
                                              _hexpowers 1000  
                                       ___lwdiv@quotient 0025  
                               main@prev_ticks_calibrate 0143  
                                               ?_toupper 0070  
                                    __end_of_init_button 0993  
                                         ___wmul@product 0024  
                                               _LATCbits 001A  
                                              clear_ram0 13F0  
                                              _tmr0_init 1479  
                                         _uart_rx_states 006E  
                                               _PIE0bits 0716  
                                        i2c_slave_init@i 0021  
                                               _PIE3bits 0719  
                                               _PIR0bits 070C  
                                               _PIR3bits 070F  
                                              _slaveData 0220  
                                               _RX1DTPPS 1ECB  
                            delay_state@prev_ticks_delay 013B  
                                               _SSP1CON1 0190  
                                               _SSP1CON2 0191  
                                      ??_dump_memory_map 005B  
                                               _SSP1STAT 018F  
                                ??_send_measured_command 0025  
                                             ?_get_ticks 0070  
                                       ?___is_long_press 0020  
                                      ___wmul@multiplier 0020  
                               ??_get_measured_adc_value 004D  
                                 reset_long_press_flag@b 0020  
                            __end_of_get_ticks_with_lock 14F1  
                                             printf@flag 0049  
                                             printf@prec 0041  
                                              main@state 006A  
                                           _isspace$1982 0020  
                          set_top_calibrate_point@F10597 02C0  
                                      ___is_double_click 0D0E  
                                      ___lmul@multiplier 0020  
                                     ?___is_double_click 0020  
                                         is_long_press@b 0020  
                                       main@sensor_value 00A4  
                               i2c_slave_interrupt@value 0073  
                                           _isprint$1948 0020  
                                             ?_tmr0_init 0070  
                                    ??___is_double_click 0026  
                                            _dump_buffer 0C47  
                                   EUSART1_Read_1@F10506 0320  
                                ??_OSCILLATOR_Initialize 0020  
                                            _measurement 1587  
                                      ??_update_mybutton 0039  
                                      _test_recived_data 015B  
                                             _ANSELAbits 1F38  
                                           _isupper$1985 0020  
                                            _init_button 091D  
                              __end_of___is_double_click 0E02  
                                        ___lwdiv@divisor 0020  
                                        ___lwdiv@counter 0027  
                                               __ptext10 1533  
                                               __ptext11 154C  
                                               __ptext20 0B87  
                                               __ptext12 14CA  
                                               __ptext21 1414  
                                               __ptext13 16A3  
                                               __ptext30 146D  
                                               __ptext22 140C  
                                               __ptext14 1456  
                                               __ptext31 091D  
                                               __ptext23 1404  
                                               __ptext15 144C  
                                               __ptext40 03A0  
                                               __ptext32 15C6  
                                               __ptext24 13FC  
                                               __ptext16 0A30  
                                               __ptext41 1461  
                                               __ptext33 14DD  
                                               __ptext25 1610  
                                               __ptext17 0993  
                                               __ptext50 142E  
                                               __ptext42 14B7  
                                               __ptext34 070E  
                                               __ptext26 1587  
                                               __ptext18 1569  
                                               __ptext51 15E6  
                                               __ptext43 15A6  
                                               __ptext35 163C  
                                               __ptext27 1505  
                                               __ptext19 08C3  
                                               __ptext52 1425  
                                               __ptext44 16D7  
                                               __ptext36 13EB  
                                               __ptext28 170C  
                                               __ptext53 0002  
                                               __ptext45 1745  
                                               __ptext37 1486  
                                               __ptext29 0801  
                                               __ptext54 13E9  
                                               __ptext46 14A4  
                                               __ptext38 1442  
                                               __ptext47 166F  
                                               __ptext39 0C47  
                                               __ptext56 081B  
                                               __ptext48 086E  
                                               __ptext57 141C  
                                               __ptext49 1438  
                                           _SSP1CON1bits 0190  
                                           _SSP1CON2bits 0191  
                                  __end_of_is_long_press 1404  
                                            _is_printing 006C  
                                               _dispatch 166F  
                              get_ticks_with_lock@result 0024  
                                   main@b1_clicked_count 0069  
                               ?_LED_flashes_three_times 0070  
                                        _monitoring_sync 0B87  
                                   __end_of_crc16_modbus 091D  
                               reset_single_click_flag@b 0020  
                                ?_i2c_slave_set_register 0020  
                             ___is_long_press@condition1 002E  
                             ___is_long_press@condition2 002F  
                                          _uart_rx_ticks 00E8  
__end_of_set_device_serial_number_to_i2c_slave_memorymap 17C0  
      ??_set_device_serial_number_to_i2c_slave_memorymap 003B  
       ?_set_device_serial_number_to_i2c_slave_memorymap 0070  
        _set_device_serial_number_to_i2c_slave_memorymap 1782  
                                  _uart_rx_package_event 00EC  
                     get_measured_adc_value@sensor_value 004E  
                                  _reset_long_press_flag 140C  
                                               int$flags 007E  
                                             strtol@base 002D  
                             ??_Disable_Global_Interrupt 0020  
                           dispatch@b1_clicked_count_ptr 0022  
                                             strtol@sign 0034  
                     __end_of_INTERRUPT_InterruptManager 0069  
                             _INTERRUPT_InterruptManager 0004  
                                              printf@idx 0040  
                                              printf@len 0047  
                                               _rxbuffer 01C8  
                                              printf@val 0044  
                                           _SSP1STATbits 018F  
                       measured_adc@measured_adc_command 004E  
                                            ??_get_ticks 0074  
        i2c_slave_set_register_with_lock@registerAddress 0023  
                               save_top_adc_point@F10616 0153  
                                _Enable_Global_Interrupt 0002  
                                              putch@data 0020  
                                             _INTCONbits 000B  
                        monitoring_sync@b1_clicked_count 004F  
                                         __pstringtext10 186A  
                                         __pstringtext11 1894  
                                         __pstringtext20 1965  
                                         __pstringtext12 18BB  
                                         __pstringtext21 1972  
                                         __pstringtext13 18DE  
                                         __pstringtext22 1987  
                                         __pstringtext14 18FE  
                                         __pstringtext23 1990  
                                         __pstringtext15 1914  
                                         __pstringtext24 1997  
                                         __pstringtext16 1925  
                                         __pstringtext25 199D  
                                         __pstringtext17 1936  
                                         __pstringtext26 19A3  
                                         __pstringtext18 1947  
                                         __pstringtext27 19A9  
                                         __pstringtext19 1958  
                                         __pstringtext28 19AD  
                                         __pstringtext29 0000  
                                               isalpha@c 0023  
                                        main@prev_ticks2 013F  
                                               isdigit@c 0021  
                             __end_of_enable_uart_printf 13F0  
                                               intlevel1 0000  
                                        _dump_buffer$891 0053  
                         __end_of_i2c_slave_set_register 1456  
                                         _calculate_diff 086E  
                                       ___lwmod@dividend 002A  
                                               isspace@c 0021  
                                ?_PIN_MANAGER_Initialize 0070  
                                               isprint@c 0021  
                                           ??_usart_init 0020  
                                            ??_tmr0_init 0020  
                                               isupper@c 0021  
                                        dump_buffer@size 004D  
                                       measurement@value 004D  
                                       measurement@state 004F  
                                _reset_single_click_flag 1414  
                             __end_of_save_top_adc_point 0ACD  
                                       EUSART1_Write_1@i 0023  
                                               printf@ap 0046  
                                               printf@cp 0042  
                               save_top_adc_point@states 005E  
                                      ??_EUSART1_Write_1 0022  
                                          __pstringtext1 197D  
                                          __pstringtext2 1000  
                                          __pstringtext3 10D0  
                                          __pstringtext4 1195  
                                          __pstringtext5 120E  
                                          __pstringtext6 125C  
                                          __pstringtext7 12A6  
                                          __pstringtext8 1800  
                                          __pstringtext9 183D  
               __end_of_i2c_slave_set_register_with_lock 1461  
                     ??_i2c_slave_set_register_with_lock 0023  
                      ?_i2c_slave_set_register_with_lock 0022  
                       _i2c_slave_set_register_with_lock 1456  
                                            _printf$1662 003E  
                                   monitoring_sync@state 0051  
                                ??_save_bottom_adc_point 004E  
                                             _SSP1DATPPS 1EC6  
                                             _SSP1CLKPPS 1EC5  
                                        ___lwmod@divisor 0028  
                                        ___lwmod@counter 002D  
                                               toupper@c 0021  
                                     __end_of_usart_init 14A4  
                                __end_of_monitoring_sync 0C47  
                        __end_of_LED_flashes_three_times 163C  
                                       crc16_modbus@data 0027  
                                       crc16_modbus@poly 0025  
                                 __end_of_calculate_diff 08C3  
                            save_bottom_adc_point@F10625 01C0  
                         __end_of_PIN_MANAGER_Initialize 1610  
                                  EUSART1_Write_1@length 0021  
                                        _dump_memory_map 1442  
                                 _get_measured_adc_value 163C  
                                     calculate_diff@diff 0030  
                                   EUSART1_Write_1@txbuf 0024  
                                      calculate_diff@now 0020  
                                 ?_reset_long_press_flag 0020  
                                      ___is_long_press@b 0020  
                                    ___is_long_press@now 0022  
