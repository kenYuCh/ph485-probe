

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Apr 18 19:35:00 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18425
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    26                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    27                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    29                           	psect	inittext,global,class=CODE,delta=2
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    32                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    33                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    34                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    35                           	psect	text1,local,class=CODE,merge=1,delta=2
    36                           	psect	text2,local,class=CODE,merge=1,delta=2
    37                           	psect	text3,local,class=CODE,merge=1,delta=2
    38                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text10,local,class=CODE,merge=1,delta=2
    45                           	psect	text11,local,class=CODE,merge=1,delta=2
    46                           	psect	text12,local,class=CODE,merge=1,delta=2
    47                           	psect	text13,local,class=CODE,merge=1,delta=2
    48                           	psect	text14,local,class=CODE,merge=1,delta=2
    49                           	psect	text15,local,class=CODE,merge=1,delta=2
    50                           	psect	text16,local,class=CODE,merge=1,delta=2
    51                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text18,local,class=CODE,merge=1,delta=2
    53                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    58                           	psect	text24,local,class=CODE,merge=1,delta=2
    59                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text28,local,class=CODE,merge=1,delta=2
    63                           	psect	text29,local,class=CODE,merge=1,delta=2
    64                           	psect	text30,local,class=CODE,merge=1,delta=2
    65                           	psect	text31,local,class=CODE,merge=1,delta=2
    66                           	psect	text32,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text34,local,class=CODE,merge=1,delta=2
    69                           	psect	text35,local,class=CODE,merge=1,delta=2
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x7E,2
    73     0000                     
    74                           ; Version 2.40
    75                           ; Generated 04/07/2022 GMT
    76                           ; 
    77                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F18425 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000E                     	;# 
   123     0012                     	;# 
   124     0014                     	;# 
   125     0018                     	;# 
   126     001A                     	;# 
   127     008C                     	;# 
   128     008C                     	;# 
   129     008D                     	;# 
   130     008E                     	;# 
   131     008E                     	;# 
   132     008F                     	;# 
   133     0090                     	;# 
   134     0090                     	;# 
   135     0091                     	;# 
   136     0092                     	;# 
   137     0092                     	;# 
   138     0093                     	;# 
   139     0094                     	;# 
   140     0094                     	;# 
   141     0095                     	;# 
   142     0096                     	;# 
   143     0096                     	;# 
   144     0097                     	;# 
   145     0098                     	;# 
   146     0099                     	;# 
   147     009A                     	;# 
   148     009B                     	;# 
   149     009B                     	;# 
   150     009C                     	;# 
   151     009D                     	;# 
   152     009D                     	;# 
   153     009E                     	;# 
   154     009F                     	;# 
   155     010C                     	;# 
   156     010C                     	;# 
   157     010D                     	;# 
   158     010E                     	;# 
   159     010F                     	;# 
   160     010F                     	;# 
   161     0110                     	;# 
   162     0111                     	;# 
   163     0112                     	;# 
   164     0113                     	;# 
   165     0114                     	;# 
   166     0115                     	;# 
   167     0116                     	;# 
   168     0117                     	;# 
   169     0118                     	;# 
   170     0119                     	;# 
   171     0119                     	;# 
   172     0119                     	;# 
   173     011A                     	;# 
   174     011A                     	;# 
   175     011A                     	;# 
   176     011B                     	;# 
   177     011B                     	;# 
   178     011B                     	;# 
   179     011B                     	;# 
   180     011B                     	;# 
   181     011C                     	;# 
   182     011C                     	;# 
   183     011C                     	;# 
   184     011D                     	;# 
   185     011D                     	;# 
   186     011D                     	;# 
   187     011E                     	;# 
   188     011E                     	;# 
   189     011E                     	;# 
   190     011F                     	;# 
   191     011F                     	;# 
   192     011F                     	;# 
   193     011F                     	;# 
   194     011F                     	;# 
   195     018C                     	;# 
   196     018D                     	;# 
   197     018E                     	;# 
   198     018F                     	;# 
   199     0190                     	;# 
   200     0191                     	;# 
   201     0192                     	;# 
   202     0196                     	;# 
   203     0197                     	;# 
   204     0198                     	;# 
   205     0199                     	;# 
   206     019A                     	;# 
   207     019B                     	;# 
   208     019C                     	;# 
   209     020C                     	;# 
   210     020D                     	;# 
   211     020E                     	;# 
   212     020E                     	;# 
   213     020F                     	;# 
   214     020F                     	;# 
   215     0210                     	;# 
   216     0210                     	;# 
   217     0211                     	;# 
   218     0211                     	;# 
   219     0212                     	;# 
   220     0213                     	;# 
   221     0214                     	;# 
   222     0214                     	;# 
   223     0215                     	;# 
   224     0215                     	;# 
   225     0216                     	;# 
   226     0216                     	;# 
   227     0217                     	;# 
   228     0217                     	;# 
   229     0218                     	;# 
   230     0219                     	;# 
   231     021A                     	;# 
   232     021A                     	;# 
   233     021B                     	;# 
   234     021B                     	;# 
   235     021C                     	;# 
   236     021C                     	;# 
   237     021D                     	;# 
   238     021D                     	;# 
   239     021E                     	;# 
   240     021F                     	;# 
   241     028C                     	;# 
   242     028C                     	;# 
   243     028D                     	;# 
   244     028D                     	;# 
   245     028E                     	;# 
   246     028F                     	;# 
   247     0290                     	;# 
   248     0291                     	;# 
   249     0292                     	;# 
   250     0292                     	;# 
   251     0293                     	;# 
   252     0293                     	;# 
   253     0294                     	;# 
   254     0295                     	;# 
   255     0296                     	;# 
   256     0297                     	;# 
   257     0298                     	;# 
   258     0298                     	;# 
   259     0299                     	;# 
   260     0299                     	;# 
   261     029A                     	;# 
   262     029B                     	;# 
   263     029C                     	;# 
   264     029D                     	;# 
   265     029F                     	;# 
   266     030C                     	;# 
   267     030C                     	;# 
   268     030D                     	;# 
   269     030E                     	;# 
   270     030F                     	;# 
   271     0310                     	;# 
   272     0310                     	;# 
   273     0311                     	;# 
   274     0312                     	;# 
   275     0313                     	;# 
   276     0314                     	;# 
   277     0314                     	;# 
   278     0315                     	;# 
   279     0316                     	;# 
   280     0317                     	;# 
   281     0318                     	;# 
   282     0318                     	;# 
   283     0319                     	;# 
   284     031A                     	;# 
   285     031B                     	;# 
   286     038C                     	;# 
   287     038C                     	;# 
   288     038D                     	;# 
   289     038E                     	;# 
   290     0390                     	;# 
   291     0390                     	;# 
   292     0391                     	;# 
   293     0392                     	;# 
   294     048C                     	;# 
   295     048C                     	;# 
   296     048D                     	;# 
   297     048E                     	;# 
   298     048F                     	;# 
   299     048F                     	;# 
   300     0490                     	;# 
   301     0491                     	;# 
   302     0492                     	;# 
   303     0492                     	;# 
   304     0493                     	;# 
   305     0494                     	;# 
   306     0495                     	;# 
   307     0495                     	;# 
   308     0496                     	;# 
   309     0497                     	;# 
   310     0498                     	;# 
   311     0499                     	;# 
   312     049A                     	;# 
   313     049B                     	;# 
   314     049C                     	;# 
   315     049D                     	;# 
   316     058C                     	;# 
   317     058C                     	;# 
   318     058D                     	;# 
   319     058E                     	;# 
   320     058F                     	;# 
   321     058F                     	;# 
   322     0590                     	;# 
   323     0591                     	;# 
   324     0592                     	;# 
   325     0593                     	;# 
   326     059C                     	;# 
   327     059C                     	;# 
   328     059D                     	;# 
   329     059D                     	;# 
   330     059E                     	;# 
   331     059F                     	;# 
   332     060C                     	;# 
   333     060C                     	;# 
   334     060D                     	;# 
   335     060D                     	;# 
   336     060E                     	;# 
   337     060F                     	;# 
   338     0610                     	;# 
   339     0611                     	;# 
   340     0612                     	;# 
   341     0613                     	;# 
   342     0614                     	;# 
   343     0616                     	;# 
   344     0616                     	;# 
   345     0617                     	;# 
   346     0617                     	;# 
   347     0618                     	;# 
   348     0619                     	;# 
   349     061A                     	;# 
   350     061B                     	;# 
   351     061C                     	;# 
   352     061D                     	;# 
   353     061E                     	;# 
   354     070C                     	;# 
   355     070D                     	;# 
   356     070E                     	;# 
   357     070F                     	;# 
   358     0710                     	;# 
   359     0711                     	;# 
   360     0712                     	;# 
   361     0713                     	;# 
   362     0714                     	;# 
   363     0716                     	;# 
   364     0717                     	;# 
   365     0718                     	;# 
   366     0719                     	;# 
   367     071A                     	;# 
   368     071B                     	;# 
   369     071C                     	;# 
   370     071D                     	;# 
   371     071E                     	;# 
   372     0796                     	;# 
   373     0797                     	;# 
   374     0798                     	;# 
   375     0799                     	;# 
   376     079A                     	;# 
   377     079B                     	;# 
   378     079C                     	;# 
   379     079D                     	;# 
   380     080C                     	;# 
   381     080D                     	;# 
   382     080E                     	;# 
   383     080F                     	;# 
   384     0810                     	;# 
   385     0811                     	;# 
   386     0812                     	;# 
   387     0813                     	;# 
   388     0814                     	;# 
   389     081A                     	;# 
   390     081A                     	;# 
   391     081B                     	;# 
   392     081C                     	;# 
   393     081C                     	;# 
   394     081D                     	;# 
   395     081E                     	;# 
   396     081F                     	;# 
   397     088C                     	;# 
   398     088D                     	;# 
   399     088E                     	;# 
   400     088F                     	;# 
   401     0890                     	;# 
   402     0891                     	;# 
   403     0892                     	;# 
   404     0893                     	;# 
   405     0895                     	;# 
   406     0896                     	;# 
   407     0897                     	;# 
   408     0898                     	;# 
   409     0899                     	;# 
   410     089A                     	;# 
   411     089B                     	;# 
   412     090C                     	;# 
   413     090E                     	;# 
   414     090F                     	;# 
   415     091F                     	;# 
   416     098F                     	;# 
   417     098F                     	;# 
   418     0990                     	;# 
   419     0991                     	;# 
   420     0992                     	;# 
   421     0993                     	;# 
   422     0994                     	;# 
   423     0995                     	;# 
   424     0996                     	;# 
   425     0997                     	;# 
   426     1E0F                     	;# 
   427     1E10                     	;# 
   428     1E11                     	;# 
   429     1E12                     	;# 
   430     1E13                     	;# 
   431     1E14                     	;# 
   432     1E15                     	;# 
   433     1E16                     	;# 
   434     1E17                     	;# 
   435     1E18                     	;# 
   436     1E19                     	;# 
   437     1E1A                     	;# 
   438     1E1B                     	;# 
   439     1E1C                     	;# 
   440     1E1D                     	;# 
   441     1E1E                     	;# 
   442     1E1F                     	;# 
   443     1E20                     	;# 
   444     1E21                     	;# 
   445     1E22                     	;# 
   446     1E23                     	;# 
   447     1E24                     	;# 
   448     1E25                     	;# 
   449     1E26                     	;# 
   450     1E27                     	;# 
   451     1E28                     	;# 
   452     1E29                     	;# 
   453     1E2A                     	;# 
   454     1E2B                     	;# 
   455     1E2C                     	;# 
   456     1E2D                     	;# 
   457     1E2E                     	;# 
   458     1E2F                     	;# 
   459     1E30                     	;# 
   460     1E31                     	;# 
   461     1E32                     	;# 
   462     1E33                     	;# 
   463     1E34                     	;# 
   464     1E35                     	;# 
   465     1E36                     	;# 
   466     1E37                     	;# 
   467     1E8F                     	;# 
   468     1E90                     	;# 
   469     1E91                     	;# 
   470     1E92                     	;# 
   471     1E93                     	;# 
   472     1E94                     	;# 
   473     1E95                     	;# 
   474     1E96                     	;# 
   475     1E97                     	;# 
   476     1E9C                     	;# 
   477     1E9D                     	;# 
   478     1E9E                     	;# 
   479     1EA1                     	;# 
   480     1EA2                     	;# 
   481     1EA3                     	;# 
   482     1EA4                     	;# 
   483     1EA9                     	;# 
   484     1EAA                     	;# 
   485     1EB1                     	;# 
   486     1EB2                     	;# 
   487     1EB8                     	;# 
   488     1EB9                     	;# 
   489     1EBA                     	;# 
   490     1EBB                     	;# 
   491     1EBC                     	;# 
   492     1EBD                     	;# 
   493     1EBE                     	;# 
   494     1EC3                     	;# 
   495     1EC5                     	;# 
   496     1EC6                     	;# 
   497     1EC7                     	;# 
   498     1EC8                     	;# 
   499     1EC9                     	;# 
   500     1ECA                     	;# 
   501     1ECB                     	;# 
   502     1ECC                     	;# 
   503     1F10                     	;# 
   504     1F11                     	;# 
   505     1F12                     	;# 
   506     1F14                     	;# 
   507     1F15                     	;# 
   508     1F20                     	;# 
   509     1F21                     	;# 
   510     1F22                     	;# 
   511     1F23                     	;# 
   512     1F24                     	;# 
   513     1F25                     	;# 
   514     1F38                     	;# 
   515     1F39                     	;# 
   516     1F3A                     	;# 
   517     1F3B                     	;# 
   518     1F3C                     	;# 
   519     1F3D                     	;# 
   520     1F3E                     	;# 
   521     1F3F                     	;# 
   522     1F4E                     	;# 
   523     1F4F                     	;# 
   524     1F50                     	;# 
   525     1F51                     	;# 
   526     1F52                     	;# 
   527     1F53                     	;# 
   528     1F54                     	;# 
   529     1F55                     	;# 
   530     1FE4                     	;# 
   531     1FE5                     	;# 
   532     1FE6                     	;# 
   533     1FE7                     	;# 
   534     1FE8                     	;# 
   535     1FE8                     	;# 
   536     1FE9                     	;# 
   537     1FEA                     	;# 
   538     1FEB                     	;# 
   539     1FED                     	;# 
   540     1FEE                     	;# 
   541     1FEF                     	;# 
   542     0000                     	;# 
   543     0001                     	;# 
   544     0002                     	;# 
   545     0003                     	;# 
   546     0004                     	;# 
   547     0005                     	;# 
   548     0006                     	;# 
   549     0007                     	;# 
   550     0008                     	;# 
   551     0009                     	;# 
   552     000A                     	;# 
   553     000B                     	;# 
   554     000C                     	;# 
   555     000E                     	;# 
   556     0012                     	;# 
   557     0014                     	;# 
   558     0018                     	;# 
   559     001A                     	;# 
   560     008C                     	;# 
   561     008C                     	;# 
   562     008D                     	;# 
   563     008E                     	;# 
   564     008E                     	;# 
   565     008F                     	;# 
   566     0090                     	;# 
   567     0090                     	;# 
   568     0091                     	;# 
   569     0092                     	;# 
   570     0092                     	;# 
   571     0093                     	;# 
   572     0094                     	;# 
   573     0094                     	;# 
   574     0095                     	;# 
   575     0096                     	;# 
   576     0096                     	;# 
   577     0097                     	;# 
   578     0098                     	;# 
   579     0099                     	;# 
   580     009A                     	;# 
   581     009B                     	;# 
   582     009B                     	;# 
   583     009C                     	;# 
   584     009D                     	;# 
   585     009D                     	;# 
   586     009E                     	;# 
   587     009F                     	;# 
   588     010C                     	;# 
   589     010C                     	;# 
   590     010D                     	;# 
   591     010E                     	;# 
   592     010F                     	;# 
   593     010F                     	;# 
   594     0110                     	;# 
   595     0111                     	;# 
   596     0112                     	;# 
   597     0113                     	;# 
   598     0114                     	;# 
   599     0115                     	;# 
   600     0116                     	;# 
   601     0117                     	;# 
   602     0118                     	;# 
   603     0119                     	;# 
   604     0119                     	;# 
   605     0119                     	;# 
   606     011A                     	;# 
   607     011A                     	;# 
   608     011A                     	;# 
   609     011B                     	;# 
   610     011B                     	;# 
   611     011B                     	;# 
   612     011B                     	;# 
   613     011B                     	;# 
   614     011C                     	;# 
   615     011C                     	;# 
   616     011C                     	;# 
   617     011D                     	;# 
   618     011D                     	;# 
   619     011D                     	;# 
   620     011E                     	;# 
   621     011E                     	;# 
   622     011E                     	;# 
   623     011F                     	;# 
   624     011F                     	;# 
   625     011F                     	;# 
   626     011F                     	;# 
   627     011F                     	;# 
   628     018C                     	;# 
   629     018D                     	;# 
   630     018E                     	;# 
   631     018F                     	;# 
   632     0190                     	;# 
   633     0191                     	;# 
   634     0192                     	;# 
   635     0196                     	;# 
   636     0197                     	;# 
   637     0198                     	;# 
   638     0199                     	;# 
   639     019A                     	;# 
   640     019B                     	;# 
   641     019C                     	;# 
   642     020C                     	;# 
   643     020D                     	;# 
   644     020E                     	;# 
   645     020E                     	;# 
   646     020F                     	;# 
   647     020F                     	;# 
   648     0210                     	;# 
   649     0210                     	;# 
   650     0211                     	;# 
   651     0211                     	;# 
   652     0212                     	;# 
   653     0213                     	;# 
   654     0214                     	;# 
   655     0214                     	;# 
   656     0215                     	;# 
   657     0215                     	;# 
   658     0216                     	;# 
   659     0216                     	;# 
   660     0217                     	;# 
   661     0217                     	;# 
   662     0218                     	;# 
   663     0219                     	;# 
   664     021A                     	;# 
   665     021A                     	;# 
   666     021B                     	;# 
   667     021B                     	;# 
   668     021C                     	;# 
   669     021C                     	;# 
   670     021D                     	;# 
   671     021D                     	;# 
   672     021E                     	;# 
   673     021F                     	;# 
   674     028C                     	;# 
   675     028C                     	;# 
   676     028D                     	;# 
   677     028D                     	;# 
   678     028E                     	;# 
   679     028F                     	;# 
   680     0290                     	;# 
   681     0291                     	;# 
   682     0292                     	;# 
   683     0292                     	;# 
   684     0293                     	;# 
   685     0293                     	;# 
   686     0294                     	;# 
   687     0295                     	;# 
   688     0296                     	;# 
   689     0297                     	;# 
   690     0298                     	;# 
   691     0298                     	;# 
   692     0299                     	;# 
   693     0299                     	;# 
   694     029A                     	;# 
   695     029B                     	;# 
   696     029C                     	;# 
   697     029D                     	;# 
   698     029F                     	;# 
   699     030C                     	;# 
   700     030C                     	;# 
   701     030D                     	;# 
   702     030E                     	;# 
   703     030F                     	;# 
   704     0310                     	;# 
   705     0310                     	;# 
   706     0311                     	;# 
   707     0312                     	;# 
   708     0313                     	;# 
   709     0314                     	;# 
   710     0314                     	;# 
   711     0315                     	;# 
   712     0316                     	;# 
   713     0317                     	;# 
   714     0318                     	;# 
   715     0318                     	;# 
   716     0319                     	;# 
   717     031A                     	;# 
   718     031B                     	;# 
   719     038C                     	;# 
   720     038C                     	;# 
   721     038D                     	;# 
   722     038E                     	;# 
   723     0390                     	;# 
   724     0390                     	;# 
   725     0391                     	;# 
   726     0392                     	;# 
   727     048C                     	;# 
   728     048C                     	;# 
   729     048D                     	;# 
   730     048E                     	;# 
   731     048F                     	;# 
   732     048F                     	;# 
   733     0490                     	;# 
   734     0491                     	;# 
   735     0492                     	;# 
   736     0492                     	;# 
   737     0493                     	;# 
   738     0494                     	;# 
   739     0495                     	;# 
   740     0495                     	;# 
   741     0496                     	;# 
   742     0497                     	;# 
   743     0498                     	;# 
   744     0499                     	;# 
   745     049A                     	;# 
   746     049B                     	;# 
   747     049C                     	;# 
   748     049D                     	;# 
   749     058C                     	;# 
   750     058C                     	;# 
   751     058D                     	;# 
   752     058E                     	;# 
   753     058F                     	;# 
   754     058F                     	;# 
   755     0590                     	;# 
   756     0591                     	;# 
   757     0592                     	;# 
   758     0593                     	;# 
   759     059C                     	;# 
   760     059C                     	;# 
   761     059D                     	;# 
   762     059D                     	;# 
   763     059E                     	;# 
   764     059F                     	;# 
   765     060C                     	;# 
   766     060C                     	;# 
   767     060D                     	;# 
   768     060D                     	;# 
   769     060E                     	;# 
   770     060F                     	;# 
   771     0610                     	;# 
   772     0611                     	;# 
   773     0612                     	;# 
   774     0613                     	;# 
   775     0614                     	;# 
   776     0616                     	;# 
   777     0616                     	;# 
   778     0617                     	;# 
   779     0617                     	;# 
   780     0618                     	;# 
   781     0619                     	;# 
   782     061A                     	;# 
   783     061B                     	;# 
   784     061C                     	;# 
   785     061D                     	;# 
   786     061E                     	;# 
   787     070C                     	;# 
   788     070D                     	;# 
   789     070E                     	;# 
   790     070F                     	;# 
   791     0710                     	;# 
   792     0711                     	;# 
   793     0712                     	;# 
   794     0713                     	;# 
   795     0714                     	;# 
   796     0716                     	;# 
   797     0717                     	;# 
   798     0718                     	;# 
   799     0719                     	;# 
   800     071A                     	;# 
   801     071B                     	;# 
   802     071C                     	;# 
   803     071D                     	;# 
   804     071E                     	;# 
   805     0796                     	;# 
   806     0797                     	;# 
   807     0798                     	;# 
   808     0799                     	;# 
   809     079A                     	;# 
   810     079B                     	;# 
   811     079C                     	;# 
   812     079D                     	;# 
   813     080C                     	;# 
   814     080D                     	;# 
   815     080E                     	;# 
   816     080F                     	;# 
   817     0810                     	;# 
   818     0811                     	;# 
   819     0812                     	;# 
   820     0813                     	;# 
   821     0814                     	;# 
   822     081A                     	;# 
   823     081A                     	;# 
   824     081B                     	;# 
   825     081C                     	;# 
   826     081C                     	;# 
   827     081D                     	;# 
   828     081E                     	;# 
   829     081F                     	;# 
   830     088C                     	;# 
   831     088D                     	;# 
   832     088E                     	;# 
   833     088F                     	;# 
   834     0890                     	;# 
   835     0891                     	;# 
   836     0892                     	;# 
   837     0893                     	;# 
   838     0895                     	;# 
   839     0896                     	;# 
   840     0897                     	;# 
   841     0898                     	;# 
   842     0899                     	;# 
   843     089A                     	;# 
   844     089B                     	;# 
   845     090C                     	;# 
   846     090E                     	;# 
   847     090F                     	;# 
   848     091F                     	;# 
   849     098F                     	;# 
   850     098F                     	;# 
   851     0990                     	;# 
   852     0991                     	;# 
   853     0992                     	;# 
   854     0993                     	;# 
   855     0994                     	;# 
   856     0995                     	;# 
   857     0996                     	;# 
   858     0997                     	;# 
   859     1E0F                     	;# 
   860     1E10                     	;# 
   861     1E11                     	;# 
   862     1E12                     	;# 
   863     1E13                     	;# 
   864     1E14                     	;# 
   865     1E15                     	;# 
   866     1E16                     	;# 
   867     1E17                     	;# 
   868     1E18                     	;# 
   869     1E19                     	;# 
   870     1E1A                     	;# 
   871     1E1B                     	;# 
   872     1E1C                     	;# 
   873     1E1D                     	;# 
   874     1E1E                     	;# 
   875     1E1F                     	;# 
   876     1E20                     	;# 
   877     1E21                     	;# 
   878     1E22                     	;# 
   879     1E23                     	;# 
   880     1E24                     	;# 
   881     1E25                     	;# 
   882     1E26                     	;# 
   883     1E27                     	;# 
   884     1E28                     	;# 
   885     1E29                     	;# 
   886     1E2A                     	;# 
   887     1E2B                     	;# 
   888     1E2C                     	;# 
   889     1E2D                     	;# 
   890     1E2E                     	;# 
   891     1E2F                     	;# 
   892     1E30                     	;# 
   893     1E31                     	;# 
   894     1E32                     	;# 
   895     1E33                     	;# 
   896     1E34                     	;# 
   897     1E35                     	;# 
   898     1E36                     	;# 
   899     1E37                     	;# 
   900     1E8F                     	;# 
   901     1E90                     	;# 
   902     1E91                     	;# 
   903     1E92                     	;# 
   904     1E93                     	;# 
   905     1E94                     	;# 
   906     1E95                     	;# 
   907     1E96                     	;# 
   908     1E97                     	;# 
   909     1E9C                     	;# 
   910     1E9D                     	;# 
   911     1E9E                     	;# 
   912     1EA1                     	;# 
   913     1EA2                     	;# 
   914     1EA3                     	;# 
   915     1EA4                     	;# 
   916     1EA9                     	;# 
   917     1EAA                     	;# 
   918     1EB1                     	;# 
   919     1EB2                     	;# 
   920     1EB8                     	;# 
   921     1EB9                     	;# 
   922     1EBA                     	;# 
   923     1EBB                     	;# 
   924     1EBC                     	;# 
   925     1EBD                     	;# 
   926     1EBE                     	;# 
   927     1EC3                     	;# 
   928     1EC5                     	;# 
   929     1EC6                     	;# 
   930     1EC7                     	;# 
   931     1EC8                     	;# 
   932     1EC9                     	;# 
   933     1ECA                     	;# 
   934     1ECB                     	;# 
   935     1ECC                     	;# 
   936     1F10                     	;# 
   937     1F11                     	;# 
   938     1F12                     	;# 
   939     1F14                     	;# 
   940     1F15                     	;# 
   941     1F20                     	;# 
   942     1F21                     	;# 
   943     1F22                     	;# 
   944     1F23                     	;# 
   945     1F24                     	;# 
   946     1F25                     	;# 
   947     1F38                     	;# 
   948     1F39                     	;# 
   949     1F3A                     	;# 
   950     1F3B                     	;# 
   951     1F3C                     	;# 
   952     1F3D                     	;# 
   953     1F3E                     	;# 
   954     1F3F                     	;# 
   955     1F4E                     	;# 
   956     1F4F                     	;# 
   957     1F50                     	;# 
   958     1F51                     	;# 
   959     1F52                     	;# 
   960     1F53                     	;# 
   961     1F54                     	;# 
   962     1F55                     	;# 
   963     1FE4                     	;# 
   964     1FE5                     	;# 
   965     1FE6                     	;# 
   966     1FE7                     	;# 
   967     1FE8                     	;# 
   968     1FE8                     	;# 
   969     1FE9                     	;# 
   970     1FEA                     	;# 
   971     1FEB                     	;# 
   972     1FED                     	;# 
   973     1FEE                     	;# 
   974     1FEF                     	;# 
   975     0000                     	;# 
   976     0001                     	;# 
   977     0002                     	;# 
   978     0003                     	;# 
   979     0004                     	;# 
   980     0005                     	;# 
   981     0006                     	;# 
   982     0007                     	;# 
   983     0008                     	;# 
   984     0009                     	;# 
   985     000A                     	;# 
   986     000B                     	;# 
   987     000C                     	;# 
   988     000E                     	;# 
   989     0012                     	;# 
   990     0014                     	;# 
   991     0018                     	;# 
   992     001A                     	;# 
   993     008C                     	;# 
   994     008C                     	;# 
   995     008D                     	;# 
   996     008E                     	;# 
   997     008E                     	;# 
   998     008F                     	;# 
   999     0090                     	;# 
  1000     0090                     	;# 
  1001     0091                     	;# 
  1002     0092                     	;# 
  1003     0092                     	;# 
  1004     0093                     	;# 
  1005     0094                     	;# 
  1006     0094                     	;# 
  1007     0095                     	;# 
  1008     0096                     	;# 
  1009     0096                     	;# 
  1010     0097                     	;# 
  1011     0098                     	;# 
  1012     0099                     	;# 
  1013     009A                     	;# 
  1014     009B                     	;# 
  1015     009B                     	;# 
  1016     009C                     	;# 
  1017     009D                     	;# 
  1018     009D                     	;# 
  1019     009E                     	;# 
  1020     009F                     	;# 
  1021     010C                     	;# 
  1022     010C                     	;# 
  1023     010D                     	;# 
  1024     010E                     	;# 
  1025     010F                     	;# 
  1026     010F                     	;# 
  1027     0110                     	;# 
  1028     0111                     	;# 
  1029     0112                     	;# 
  1030     0113                     	;# 
  1031     0114                     	;# 
  1032     0115                     	;# 
  1033     0116                     	;# 
  1034     0117                     	;# 
  1035     0118                     	;# 
  1036     0119                     	;# 
  1037     0119                     	;# 
  1038     0119                     	;# 
  1039     011A                     	;# 
  1040     011A                     	;# 
  1041     011A                     	;# 
  1042     011B                     	;# 
  1043     011B                     	;# 
  1044     011B                     	;# 
  1045     011B                     	;# 
  1046     011B                     	;# 
  1047     011C                     	;# 
  1048     011C                     	;# 
  1049     011C                     	;# 
  1050     011D                     	;# 
  1051     011D                     	;# 
  1052     011D                     	;# 
  1053     011E                     	;# 
  1054     011E                     	;# 
  1055     011E                     	;# 
  1056     011F                     	;# 
  1057     011F                     	;# 
  1058     011F                     	;# 
  1059     011F                     	;# 
  1060     011F                     	;# 
  1061     018C                     	;# 
  1062     018D                     	;# 
  1063     018E                     	;# 
  1064     018F                     	;# 
  1065     0190                     	;# 
  1066     0191                     	;# 
  1067     0192                     	;# 
  1068     0196                     	;# 
  1069     0197                     	;# 
  1070     0198                     	;# 
  1071     0199                     	;# 
  1072     019A                     	;# 
  1073     019B                     	;# 
  1074     019C                     	;# 
  1075     020C                     	;# 
  1076     020D                     	;# 
  1077     020E                     	;# 
  1078     020E                     	;# 
  1079     020F                     	;# 
  1080     020F                     	;# 
  1081     0210                     	;# 
  1082     0210                     	;# 
  1083     0211                     	;# 
  1084     0211                     	;# 
  1085     0212                     	;# 
  1086     0213                     	;# 
  1087     0214                     	;# 
  1088     0214                     	;# 
  1089     0215                     	;# 
  1090     0215                     	;# 
  1091     0216                     	;# 
  1092     0216                     	;# 
  1093     0217                     	;# 
  1094     0217                     	;# 
  1095     0218                     	;# 
  1096     0219                     	;# 
  1097     021A                     	;# 
  1098     021A                     	;# 
  1099     021B                     	;# 
  1100     021B                     	;# 
  1101     021C                     	;# 
  1102     021C                     	;# 
  1103     021D                     	;# 
  1104     021D                     	;# 
  1105     021E                     	;# 
  1106     021F                     	;# 
  1107     028C                     	;# 
  1108     028C                     	;# 
  1109     028D                     	;# 
  1110     028D                     	;# 
  1111     028E                     	;# 
  1112     028F                     	;# 
  1113     0290                     	;# 
  1114     0291                     	;# 
  1115     0292                     	;# 
  1116     0292                     	;# 
  1117     0293                     	;# 
  1118     0293                     	;# 
  1119     0294                     	;# 
  1120     0295                     	;# 
  1121     0296                     	;# 
  1122     0297                     	;# 
  1123     0298                     	;# 
  1124     0298                     	;# 
  1125     0299                     	;# 
  1126     0299                     	;# 
  1127     029A                     	;# 
  1128     029B                     	;# 
  1129     029C                     	;# 
  1130     029D                     	;# 
  1131     029F                     	;# 
  1132     030C                     	;# 
  1133     030C                     	;# 
  1134     030D                     	;# 
  1135     030E                     	;# 
  1136     030F                     	;# 
  1137     0310                     	;# 
  1138     0310                     	;# 
  1139     0311                     	;# 
  1140     0312                     	;# 
  1141     0313                     	;# 
  1142     0314                     	;# 
  1143     0314                     	;# 
  1144     0315                     	;# 
  1145     0316                     	;# 
  1146     0317                     	;# 
  1147     0318                     	;# 
  1148     0318                     	;# 
  1149     0319                     	;# 
  1150     031A                     	;# 
  1151     031B                     	;# 
  1152     038C                     	;# 
  1153     038C                     	;# 
  1154     038D                     	;# 
  1155     038E                     	;# 
  1156     0390                     	;# 
  1157     0390                     	;# 
  1158     0391                     	;# 
  1159     0392                     	;# 
  1160     048C                     	;# 
  1161     048C                     	;# 
  1162     048D                     	;# 
  1163     048E                     	;# 
  1164     048F                     	;# 
  1165     048F                     	;# 
  1166     0490                     	;# 
  1167     0491                     	;# 
  1168     0492                     	;# 
  1169     0492                     	;# 
  1170     0493                     	;# 
  1171     0494                     	;# 
  1172     0495                     	;# 
  1173     0495                     	;# 
  1174     0496                     	;# 
  1175     0497                     	;# 
  1176     0498                     	;# 
  1177     0499                     	;# 
  1178     049A                     	;# 
  1179     049B                     	;# 
  1180     049C                     	;# 
  1181     049D                     	;# 
  1182     058C                     	;# 
  1183     058C                     	;# 
  1184     058D                     	;# 
  1185     058E                     	;# 
  1186     058F                     	;# 
  1187     058F                     	;# 
  1188     0590                     	;# 
  1189     0591                     	;# 
  1190     0592                     	;# 
  1191     0593                     	;# 
  1192     059C                     	;# 
  1193     059C                     	;# 
  1194     059D                     	;# 
  1195     059D                     	;# 
  1196     059E                     	;# 
  1197     059F                     	;# 
  1198     060C                     	;# 
  1199     060C                     	;# 
  1200     060D                     	;# 
  1201     060D                     	;# 
  1202     060E                     	;# 
  1203     060F                     	;# 
  1204     0610                     	;# 
  1205     0611                     	;# 
  1206     0612                     	;# 
  1207     0613                     	;# 
  1208     0614                     	;# 
  1209     0616                     	;# 
  1210     0616                     	;# 
  1211     0617                     	;# 
  1212     0617                     	;# 
  1213     0618                     	;# 
  1214     0619                     	;# 
  1215     061A                     	;# 
  1216     061B                     	;# 
  1217     061C                     	;# 
  1218     061D                     	;# 
  1219     061E                     	;# 
  1220     070C                     	;# 
  1221     070D                     	;# 
  1222     070E                     	;# 
  1223     070F                     	;# 
  1224     0710                     	;# 
  1225     0711                     	;# 
  1226     0712                     	;# 
  1227     0713                     	;# 
  1228     0714                     	;# 
  1229     0716                     	;# 
  1230     0717                     	;# 
  1231     0718                     	;# 
  1232     0719                     	;# 
  1233     071A                     	;# 
  1234     071B                     	;# 
  1235     071C                     	;# 
  1236     071D                     	;# 
  1237     071E                     	;# 
  1238     0796                     	;# 
  1239     0797                     	;# 
  1240     0798                     	;# 
  1241     0799                     	;# 
  1242     079A                     	;# 
  1243     079B                     	;# 
  1244     079C                     	;# 
  1245     079D                     	;# 
  1246     080C                     	;# 
  1247     080D                     	;# 
  1248     080E                     	;# 
  1249     080F                     	;# 
  1250     0810                     	;# 
  1251     0811                     	;# 
  1252     0812                     	;# 
  1253     0813                     	;# 
  1254     0814                     	;# 
  1255     081A                     	;# 
  1256     081A                     	;# 
  1257     081B                     	;# 
  1258     081C                     	;# 
  1259     081C                     	;# 
  1260     081D                     	;# 
  1261     081E                     	;# 
  1262     081F                     	;# 
  1263     088C                     	;# 
  1264     088D                     	;# 
  1265     088E                     	;# 
  1266     088F                     	;# 
  1267     0890                     	;# 
  1268     0891                     	;# 
  1269     0892                     	;# 
  1270     0893                     	;# 
  1271     0895                     	;# 
  1272     0896                     	;# 
  1273     0897                     	;# 
  1274     0898                     	;# 
  1275     0899                     	;# 
  1276     089A                     	;# 
  1277     089B                     	;# 
  1278     090C                     	;# 
  1279     090E                     	;# 
  1280     090F                     	;# 
  1281     091F                     	;# 
  1282     098F                     	;# 
  1283     098F                     	;# 
  1284     0990                     	;# 
  1285     0991                     	;# 
  1286     0992                     	;# 
  1287     0993                     	;# 
  1288     0994                     	;# 
  1289     0995                     	;# 
  1290     0996                     	;# 
  1291     0997                     	;# 
  1292     1E0F                     	;# 
  1293     1E10                     	;# 
  1294     1E11                     	;# 
  1295     1E12                     	;# 
  1296     1E13                     	;# 
  1297     1E14                     	;# 
  1298     1E15                     	;# 
  1299     1E16                     	;# 
  1300     1E17                     	;# 
  1301     1E18                     	;# 
  1302     1E19                     	;# 
  1303     1E1A                     	;# 
  1304     1E1B                     	;# 
  1305     1E1C                     	;# 
  1306     1E1D                     	;# 
  1307     1E1E                     	;# 
  1308     1E1F                     	;# 
  1309     1E20                     	;# 
  1310     1E21                     	;# 
  1311     1E22                     	;# 
  1312     1E23                     	;# 
  1313     1E24                     	;# 
  1314     1E25                     	;# 
  1315     1E26                     	;# 
  1316     1E27                     	;# 
  1317     1E28                     	;# 
  1318     1E29                     	;# 
  1319     1E2A                     	;# 
  1320     1E2B                     	;# 
  1321     1E2C                     	;# 
  1322     1E2D                     	;# 
  1323     1E2E                     	;# 
  1324     1E2F                     	;# 
  1325     1E30                     	;# 
  1326     1E31                     	;# 
  1327     1E32                     	;# 
  1328     1E33                     	;# 
  1329     1E34                     	;# 
  1330     1E35                     	;# 
  1331     1E36                     	;# 
  1332     1E37                     	;# 
  1333     1E8F                     	;# 
  1334     1E90                     	;# 
  1335     1E91                     	;# 
  1336     1E92                     	;# 
  1337     1E93                     	;# 
  1338     1E94                     	;# 
  1339     1E95                     	;# 
  1340     1E96                     	;# 
  1341     1E97                     	;# 
  1342     1E9C                     	;# 
  1343     1E9D                     	;# 
  1344     1E9E                     	;# 
  1345     1EA1                     	;# 
  1346     1EA2                     	;# 
  1347     1EA3                     	;# 
  1348     1EA4                     	;# 
  1349     1EA9                     	;# 
  1350     1EAA                     	;# 
  1351     1EB1                     	;# 
  1352     1EB2                     	;# 
  1353     1EB8                     	;# 
  1354     1EB9                     	;# 
  1355     1EBA                     	;# 
  1356     1EBB                     	;# 
  1357     1EBC                     	;# 
  1358     1EBD                     	;# 
  1359     1EBE                     	;# 
  1360     1EC3                     	;# 
  1361     1EC5                     	;# 
  1362     1EC6                     	;# 
  1363     1EC7                     	;# 
  1364     1EC8                     	;# 
  1365     1EC9                     	;# 
  1366     1ECA                     	;# 
  1367     1ECB                     	;# 
  1368     1ECC                     	;# 
  1369     1F10                     	;# 
  1370     1F11                     	;# 
  1371     1F12                     	;# 
  1372     1F14                     	;# 
  1373     1F15                     	;# 
  1374     1F20                     	;# 
  1375     1F21                     	;# 
  1376     1F22                     	;# 
  1377     1F23                     	;# 
  1378     1F24                     	;# 
  1379     1F25                     	;# 
  1380     1F38                     	;# 
  1381     1F39                     	;# 
  1382     1F3A                     	;# 
  1383     1F3B                     	;# 
  1384     1F3C                     	;# 
  1385     1F3D                     	;# 
  1386     1F3E                     	;# 
  1387     1F3F                     	;# 
  1388     1F4E                     	;# 
  1389     1F4F                     	;# 
  1390     1F50                     	;# 
  1391     1F51                     	;# 
  1392     1F52                     	;# 
  1393     1F53                     	;# 
  1394     1F54                     	;# 
  1395     1F55                     	;# 
  1396     1FE4                     	;# 
  1397     1FE5                     	;# 
  1398     1FE6                     	;# 
  1399     1FE7                     	;# 
  1400     1FE8                     	;# 
  1401     1FE8                     	;# 
  1402     1FE9                     	;# 
  1403     1FEA                     	;# 
  1404     1FEB                     	;# 
  1405     1FED                     	;# 
  1406     1FEE                     	;# 
  1407     1FEF                     	;# 
  1408     0000                     	;# 
  1409     0001                     	;# 
  1410     0002                     	;# 
  1411     0003                     	;# 
  1412     0004                     	;# 
  1413     0005                     	;# 
  1414     0006                     	;# 
  1415     0007                     	;# 
  1416     0008                     	;# 
  1417     0009                     	;# 
  1418     000A                     	;# 
  1419     000B                     	;# 
  1420     000C                     	;# 
  1421     000E                     	;# 
  1422     0012                     	;# 
  1423     0014                     	;# 
  1424     0018                     	;# 
  1425     001A                     	;# 
  1426     008C                     	;# 
  1427     008C                     	;# 
  1428     008D                     	;# 
  1429     008E                     	;# 
  1430     008E                     	;# 
  1431     008F                     	;# 
  1432     0090                     	;# 
  1433     0090                     	;# 
  1434     0091                     	;# 
  1435     0092                     	;# 
  1436     0092                     	;# 
  1437     0093                     	;# 
  1438     0094                     	;# 
  1439     0094                     	;# 
  1440     0095                     	;# 
  1441     0096                     	;# 
  1442     0096                     	;# 
  1443     0097                     	;# 
  1444     0098                     	;# 
  1445     0099                     	;# 
  1446     009A                     	;# 
  1447     009B                     	;# 
  1448     009B                     	;# 
  1449     009C                     	;# 
  1450     009D                     	;# 
  1451     009D                     	;# 
  1452     009E                     	;# 
  1453     009F                     	;# 
  1454     010C                     	;# 
  1455     010C                     	;# 
  1456     010D                     	;# 
  1457     010E                     	;# 
  1458     010F                     	;# 
  1459     010F                     	;# 
  1460     0110                     	;# 
  1461     0111                     	;# 
  1462     0112                     	;# 
  1463     0113                     	;# 
  1464     0114                     	;# 
  1465     0115                     	;# 
  1466     0116                     	;# 
  1467     0117                     	;# 
  1468     0118                     	;# 
  1469     0119                     	;# 
  1470     0119                     	;# 
  1471     0119                     	;# 
  1472     011A                     	;# 
  1473     011A                     	;# 
  1474     011A                     	;# 
  1475     011B                     	;# 
  1476     011B                     	;# 
  1477     011B                     	;# 
  1478     011B                     	;# 
  1479     011B                     	;# 
  1480     011C                     	;# 
  1481     011C                     	;# 
  1482     011C                     	;# 
  1483     011D                     	;# 
  1484     011D                     	;# 
  1485     011D                     	;# 
  1486     011E                     	;# 
  1487     011E                     	;# 
  1488     011E                     	;# 
  1489     011F                     	;# 
  1490     011F                     	;# 
  1491     011F                     	;# 
  1492     011F                     	;# 
  1493     011F                     	;# 
  1494     018C                     	;# 
  1495     018D                     	;# 
  1496     018E                     	;# 
  1497     018F                     	;# 
  1498     0190                     	;# 
  1499     0191                     	;# 
  1500     0192                     	;# 
  1501     0196                     	;# 
  1502     0197                     	;# 
  1503     0198                     	;# 
  1504     0199                     	;# 
  1505     019A                     	;# 
  1506     019B                     	;# 
  1507     019C                     	;# 
  1508     020C                     	;# 
  1509     020D                     	;# 
  1510     020E                     	;# 
  1511     020E                     	;# 
  1512     020F                     	;# 
  1513     020F                     	;# 
  1514     0210                     	;# 
  1515     0210                     	;# 
  1516     0211                     	;# 
  1517     0211                     	;# 
  1518     0212                     	;# 
  1519     0213                     	;# 
  1520     0214                     	;# 
  1521     0214                     	;# 
  1522     0215                     	;# 
  1523     0215                     	;# 
  1524     0216                     	;# 
  1525     0216                     	;# 
  1526     0217                     	;# 
  1527     0217                     	;# 
  1528     0218                     	;# 
  1529     0219                     	;# 
  1530     021A                     	;# 
  1531     021A                     	;# 
  1532     021B                     	;# 
  1533     021B                     	;# 
  1534     021C                     	;# 
  1535     021C                     	;# 
  1536     021D                     	;# 
  1537     021D                     	;# 
  1538     021E                     	;# 
  1539     021F                     	;# 
  1540     028C                     	;# 
  1541     028C                     	;# 
  1542     028D                     	;# 
  1543     028D                     	;# 
  1544     028E                     	;# 
  1545     028F                     	;# 
  1546     0290                     	;# 
  1547     0291                     	;# 
  1548     0292                     	;# 
  1549     0292                     	;# 
  1550     0293                     	;# 
  1551     0293                     	;# 
  1552     0294                     	;# 
  1553     0295                     	;# 
  1554     0296                     	;# 
  1555     0297                     	;# 
  1556     0298                     	;# 
  1557     0298                     	;# 
  1558     0299                     	;# 
  1559     0299                     	;# 
  1560     029A                     	;# 
  1561     029B                     	;# 
  1562     029C                     	;# 
  1563     029D                     	;# 
  1564     029F                     	;# 
  1565     030C                     	;# 
  1566     030C                     	;# 
  1567     030D                     	;# 
  1568     030E                     	;# 
  1569     030F                     	;# 
  1570     0310                     	;# 
  1571     0310                     	;# 
  1572     0311                     	;# 
  1573     0312                     	;# 
  1574     0313                     	;# 
  1575     0314                     	;# 
  1576     0314                     	;# 
  1577     0315                     	;# 
  1578     0316                     	;# 
  1579     0317                     	;# 
  1580     0318                     	;# 
  1581     0318                     	;# 
  1582     0319                     	;# 
  1583     031A                     	;# 
  1584     031B                     	;# 
  1585     038C                     	;# 
  1586     038C                     	;# 
  1587     038D                     	;# 
  1588     038E                     	;# 
  1589     0390                     	;# 
  1590     0390                     	;# 
  1591     0391                     	;# 
  1592     0392                     	;# 
  1593     048C                     	;# 
  1594     048C                     	;# 
  1595     048D                     	;# 
  1596     048E                     	;# 
  1597     048F                     	;# 
  1598     048F                     	;# 
  1599     0490                     	;# 
  1600     0491                     	;# 
  1601     0492                     	;# 
  1602     0492                     	;# 
  1603     0493                     	;# 
  1604     0494                     	;# 
  1605     0495                     	;# 
  1606     0495                     	;# 
  1607     0496                     	;# 
  1608     0497                     	;# 
  1609     0498                     	;# 
  1610     0499                     	;# 
  1611     049A                     	;# 
  1612     049B                     	;# 
  1613     049C                     	;# 
  1614     049D                     	;# 
  1615     058C                     	;# 
  1616     058C                     	;# 
  1617     058D                     	;# 
  1618     058E                     	;# 
  1619     058F                     	;# 
  1620     058F                     	;# 
  1621     0590                     	;# 
  1622     0591                     	;# 
  1623     0592                     	;# 
  1624     0593                     	;# 
  1625     059C                     	;# 
  1626     059C                     	;# 
  1627     059D                     	;# 
  1628     059D                     	;# 
  1629     059E                     	;# 
  1630     059F                     	;# 
  1631     060C                     	;# 
  1632     060C                     	;# 
  1633     060D                     	;# 
  1634     060D                     	;# 
  1635     060E                     	;# 
  1636     060F                     	;# 
  1637     0610                     	;# 
  1638     0611                     	;# 
  1639     0612                     	;# 
  1640     0613                     	;# 
  1641     0614                     	;# 
  1642     0616                     	;# 
  1643     0616                     	;# 
  1644     0617                     	;# 
  1645     0617                     	;# 
  1646     0618                     	;# 
  1647     0619                     	;# 
  1648     061A                     	;# 
  1649     061B                     	;# 
  1650     061C                     	;# 
  1651     061D                     	;# 
  1652     061E                     	;# 
  1653     070C                     	;# 
  1654     070D                     	;# 
  1655     070E                     	;# 
  1656     070F                     	;# 
  1657     0710                     	;# 
  1658     0711                     	;# 
  1659     0712                     	;# 
  1660     0713                     	;# 
  1661     0714                     	;# 
  1662     0716                     	;# 
  1663     0717                     	;# 
  1664     0718                     	;# 
  1665     0719                     	;# 
  1666     071A                     	;# 
  1667     071B                     	;# 
  1668     071C                     	;# 
  1669     071D                     	;# 
  1670     071E                     	;# 
  1671     0796                     	;# 
  1672     0797                     	;# 
  1673     0798                     	;# 
  1674     0799                     	;# 
  1675     079A                     	;# 
  1676     079B                     	;# 
  1677     079C                     	;# 
  1678     079D                     	;# 
  1679     080C                     	;# 
  1680     080D                     	;# 
  1681     080E                     	;# 
  1682     080F                     	;# 
  1683     0810                     	;# 
  1684     0811                     	;# 
  1685     0812                     	;# 
  1686     0813                     	;# 
  1687     0814                     	;# 
  1688     081A                     	;# 
  1689     081A                     	;# 
  1690     081B                     	;# 
  1691     081C                     	;# 
  1692     081C                     	;# 
  1693     081D                     	;# 
  1694     081E                     	;# 
  1695     081F                     	;# 
  1696     088C                     	;# 
  1697     088D                     	;# 
  1698     088E                     	;# 
  1699     088F                     	;# 
  1700     0890                     	;# 
  1701     0891                     	;# 
  1702     0892                     	;# 
  1703     0893                     	;# 
  1704     0895                     	;# 
  1705     0896                     	;# 
  1706     0897                     	;# 
  1707     0898                     	;# 
  1708     0899                     	;# 
  1709     089A                     	;# 
  1710     089B                     	;# 
  1711     090C                     	;# 
  1712     090E                     	;# 
  1713     090F                     	;# 
  1714     091F                     	;# 
  1715     098F                     	;# 
  1716     098F                     	;# 
  1717     0990                     	;# 
  1718     0991                     	;# 
  1719     0992                     	;# 
  1720     0993                     	;# 
  1721     0994                     	;# 
  1722     0995                     	;# 
  1723     0996                     	;# 
  1724     0997                     	;# 
  1725     1E0F                     	;# 
  1726     1E10                     	;# 
  1727     1E11                     	;# 
  1728     1E12                     	;# 
  1729     1E13                     	;# 
  1730     1E14                     	;# 
  1731     1E15                     	;# 
  1732     1E16                     	;# 
  1733     1E17                     	;# 
  1734     1E18                     	;# 
  1735     1E19                     	;# 
  1736     1E1A                     	;# 
  1737     1E1B                     	;# 
  1738     1E1C                     	;# 
  1739     1E1D                     	;# 
  1740     1E1E                     	;# 
  1741     1E1F                     	;# 
  1742     1E20                     	;# 
  1743     1E21                     	;# 
  1744     1E22                     	;# 
  1745     1E23                     	;# 
  1746     1E24                     	;# 
  1747     1E25                     	;# 
  1748     1E26                     	;# 
  1749     1E27                     	;# 
  1750     1E28                     	;# 
  1751     1E29                     	;# 
  1752     1E2A                     	;# 
  1753     1E2B                     	;# 
  1754     1E2C                     	;# 
  1755     1E2D                     	;# 
  1756     1E2E                     	;# 
  1757     1E2F                     	;# 
  1758     1E30                     	;# 
  1759     1E31                     	;# 
  1760     1E32                     	;# 
  1761     1E33                     	;# 
  1762     1E34                     	;# 
  1763     1E35                     	;# 
  1764     1E36                     	;# 
  1765     1E37                     	;# 
  1766     1E8F                     	;# 
  1767     1E90                     	;# 
  1768     1E91                     	;# 
  1769     1E92                     	;# 
  1770     1E93                     	;# 
  1771     1E94                     	;# 
  1772     1E95                     	;# 
  1773     1E96                     	;# 
  1774     1E97                     	;# 
  1775     1E9C                     	;# 
  1776     1E9D                     	;# 
  1777     1E9E                     	;# 
  1778     1EA1                     	;# 
  1779     1EA2                     	;# 
  1780     1EA3                     	;# 
  1781     1EA4                     	;# 
  1782     1EA9                     	;# 
  1783     1EAA                     	;# 
  1784     1EB1                     	;# 
  1785     1EB2                     	;# 
  1786     1EB8                     	;# 
  1787     1EB9                     	;# 
  1788     1EBA                     	;# 
  1789     1EBB                     	;# 
  1790     1EBC                     	;# 
  1791     1EBD                     	;# 
  1792     1EBE                     	;# 
  1793     1EC3                     	;# 
  1794     1EC5                     	;# 
  1795     1EC6                     	;# 
  1796     1EC7                     	;# 
  1797     1EC8                     	;# 
  1798     1EC9                     	;# 
  1799     1ECA                     	;# 
  1800     1ECB                     	;# 
  1801     1ECC                     	;# 
  1802     1F10                     	;# 
  1803     1F11                     	;# 
  1804     1F12                     	;# 
  1805     1F14                     	;# 
  1806     1F15                     	;# 
  1807     1F20                     	;# 
  1808     1F21                     	;# 
  1809     1F22                     	;# 
  1810     1F23                     	;# 
  1811     1F24                     	;# 
  1812     1F25                     	;# 
  1813     1F38                     	;# 
  1814     1F39                     	;# 
  1815     1F3A                     	;# 
  1816     1F3B                     	;# 
  1817     1F3C                     	;# 
  1818     1F3D                     	;# 
  1819     1F3E                     	;# 
  1820     1F3F                     	;# 
  1821     1F4E                     	;# 
  1822     1F4F                     	;# 
  1823     1F50                     	;# 
  1824     1F51                     	;# 
  1825     1F52                     	;# 
  1826     1F53                     	;# 
  1827     1F54                     	;# 
  1828     1F55                     	;# 
  1829     1FE4                     	;# 
  1830     1FE5                     	;# 
  1831     1FE6                     	;# 
  1832     1FE7                     	;# 
  1833     1FE8                     	;# 
  1834     1FE8                     	;# 
  1835     1FE9                     	;# 
  1836     1FEA                     	;# 
  1837     1FEB                     	;# 
  1838     1FED                     	;# 
  1839     1FEE                     	;# 
  1840     1FEF                     	;# 
  1841     0000                     	;# 
  1842     0001                     	;# 
  1843     0002                     	;# 
  1844     0003                     	;# 
  1845     0004                     	;# 
  1846     0005                     	;# 
  1847     0006                     	;# 
  1848     0007                     	;# 
  1849     0008                     	;# 
  1850     0009                     	;# 
  1851     000A                     	;# 
  1852     000B                     	;# 
  1853     000C                     	;# 
  1854     000E                     	;# 
  1855     0012                     	;# 
  1856     0014                     	;# 
  1857     0018                     	;# 
  1858     001A                     	;# 
  1859     008C                     	;# 
  1860     008C                     	;# 
  1861     008D                     	;# 
  1862     008E                     	;# 
  1863     008E                     	;# 
  1864     008F                     	;# 
  1865     0090                     	;# 
  1866     0090                     	;# 
  1867     0091                     	;# 
  1868     0092                     	;# 
  1869     0092                     	;# 
  1870     0093                     	;# 
  1871     0094                     	;# 
  1872     0094                     	;# 
  1873     0095                     	;# 
  1874     0096                     	;# 
  1875     0096                     	;# 
  1876     0097                     	;# 
  1877     0098                     	;# 
  1878     0099                     	;# 
  1879     009A                     	;# 
  1880     009B                     	;# 
  1881     009B                     	;# 
  1882     009C                     	;# 
  1883     009D                     	;# 
  1884     009D                     	;# 
  1885     009E                     	;# 
  1886     009F                     	;# 
  1887     010C                     	;# 
  1888     010C                     	;# 
  1889     010D                     	;# 
  1890     010E                     	;# 
  1891     010F                     	;# 
  1892     010F                     	;# 
  1893     0110                     	;# 
  1894     0111                     	;# 
  1895     0112                     	;# 
  1896     0113                     	;# 
  1897     0114                     	;# 
  1898     0115                     	;# 
  1899     0116                     	;# 
  1900     0117                     	;# 
  1901     0118                     	;# 
  1902     0119                     	;# 
  1903     0119                     	;# 
  1904     0119                     	;# 
  1905     011A                     	;# 
  1906     011A                     	;# 
  1907     011A                     	;# 
  1908     011B                     	;# 
  1909     011B                     	;# 
  1910     011B                     	;# 
  1911     011B                     	;# 
  1912     011B                     	;# 
  1913     011C                     	;# 
  1914     011C                     	;# 
  1915     011C                     	;# 
  1916     011D                     	;# 
  1917     011D                     	;# 
  1918     011D                     	;# 
  1919     011E                     	;# 
  1920     011E                     	;# 
  1921     011E                     	;# 
  1922     011F                     	;# 
  1923     011F                     	;# 
  1924     011F                     	;# 
  1925     011F                     	;# 
  1926     011F                     	;# 
  1927     018C                     	;# 
  1928     018D                     	;# 
  1929     018E                     	;# 
  1930     018F                     	;# 
  1931     0190                     	;# 
  1932     0191                     	;# 
  1933     0192                     	;# 
  1934     0196                     	;# 
  1935     0197                     	;# 
  1936     0198                     	;# 
  1937     0199                     	;# 
  1938     019A                     	;# 
  1939     019B                     	;# 
  1940     019C                     	;# 
  1941     020C                     	;# 
  1942     020D                     	;# 
  1943     020E                     	;# 
  1944     020E                     	;# 
  1945     020F                     	;# 
  1946     020F                     	;# 
  1947     0210                     	;# 
  1948     0210                     	;# 
  1949     0211                     	;# 
  1950     0211                     	;# 
  1951     0212                     	;# 
  1952     0213                     	;# 
  1953     0214                     	;# 
  1954     0214                     	;# 
  1955     0215                     	;# 
  1956     0215                     	;# 
  1957     0216                     	;# 
  1958     0216                     	;# 
  1959     0217                     	;# 
  1960     0217                     	;# 
  1961     0218                     	;# 
  1962     0219                     	;# 
  1963     021A                     	;# 
  1964     021A                     	;# 
  1965     021B                     	;# 
  1966     021B                     	;# 
  1967     021C                     	;# 
  1968     021C                     	;# 
  1969     021D                     	;# 
  1970     021D                     	;# 
  1971     021E                     	;# 
  1972     021F                     	;# 
  1973     028C                     	;# 
  1974     028C                     	;# 
  1975     028D                     	;# 
  1976     028D                     	;# 
  1977     028E                     	;# 
  1978     028F                     	;# 
  1979     0290                     	;# 
  1980     0291                     	;# 
  1981     0292                     	;# 
  1982     0292                     	;# 
  1983     0293                     	;# 
  1984     0293                     	;# 
  1985     0294                     	;# 
  1986     0295                     	;# 
  1987     0296                     	;# 
  1988     0297                     	;# 
  1989     0298                     	;# 
  1990     0298                     	;# 
  1991     0299                     	;# 
  1992     0299                     	;# 
  1993     029A                     	;# 
  1994     029B                     	;# 
  1995     029C                     	;# 
  1996     029D                     	;# 
  1997     029F                     	;# 
  1998     030C                     	;# 
  1999     030C                     	;# 
  2000     030D                     	;# 
  2001     030E                     	;# 
  2002     030F                     	;# 
  2003     0310                     	;# 
  2004     0310                     	;# 
  2005     0311                     	;# 
  2006     0312                     	;# 
  2007     0313                     	;# 
  2008     0314                     	;# 
  2009     0314                     	;# 
  2010     0315                     	;# 
  2011     0316                     	;# 
  2012     0317                     	;# 
  2013     0318                     	;# 
  2014     0318                     	;# 
  2015     0319                     	;# 
  2016     031A                     	;# 
  2017     031B                     	;# 
  2018     038C                     	;# 
  2019     038C                     	;# 
  2020     038D                     	;# 
  2021     038E                     	;# 
  2022     0390                     	;# 
  2023     0390                     	;# 
  2024     0391                     	;# 
  2025     0392                     	;# 
  2026     048C                     	;# 
  2027     048C                     	;# 
  2028     048D                     	;# 
  2029     048E                     	;# 
  2030     048F                     	;# 
  2031     048F                     	;# 
  2032     0490                     	;# 
  2033     0491                     	;# 
  2034     0492                     	;# 
  2035     0492                     	;# 
  2036     0493                     	;# 
  2037     0494                     	;# 
  2038     0495                     	;# 
  2039     0495                     	;# 
  2040     0496                     	;# 
  2041     0497                     	;# 
  2042     0498                     	;# 
  2043     0499                     	;# 
  2044     049A                     	;# 
  2045     049B                     	;# 
  2046     049C                     	;# 
  2047     049D                     	;# 
  2048     058C                     	;# 
  2049     058C                     	;# 
  2050     058D                     	;# 
  2051     058E                     	;# 
  2052     058F                     	;# 
  2053     058F                     	;# 
  2054     0590                     	;# 
  2055     0591                     	;# 
  2056     0592                     	;# 
  2057     0593                     	;# 
  2058     059C                     	;# 
  2059     059C                     	;# 
  2060     059D                     	;# 
  2061     059D                     	;# 
  2062     059E                     	;# 
  2063     059F                     	;# 
  2064     060C                     	;# 
  2065     060C                     	;# 
  2066     060D                     	;# 
  2067     060D                     	;# 
  2068     060E                     	;# 
  2069     060F                     	;# 
  2070     0610                     	;# 
  2071     0611                     	;# 
  2072     0612                     	;# 
  2073     0613                     	;# 
  2074     0614                     	;# 
  2075     0616                     	;# 
  2076     0616                     	;# 
  2077     0617                     	;# 
  2078     0617                     	;# 
  2079     0618                     	;# 
  2080     0619                     	;# 
  2081     061A                     	;# 
  2082     061B                     	;# 
  2083     061C                     	;# 
  2084     061D                     	;# 
  2085     061E                     	;# 
  2086     070C                     	;# 
  2087     070D                     	;# 
  2088     070E                     	;# 
  2089     070F                     	;# 
  2090     0710                     	;# 
  2091     0711                     	;# 
  2092     0712                     	;# 
  2093     0713                     	;# 
  2094     0714                     	;# 
  2095     0716                     	;# 
  2096     0717                     	;# 
  2097     0718                     	;# 
  2098     0719                     	;# 
  2099     071A                     	;# 
  2100     071B                     	;# 
  2101     071C                     	;# 
  2102     071D                     	;# 
  2103     071E                     	;# 
  2104     0796                     	;# 
  2105     0797                     	;# 
  2106     0798                     	;# 
  2107     0799                     	;# 
  2108     079A                     	;# 
  2109     079B                     	;# 
  2110     079C                     	;# 
  2111     079D                     	;# 
  2112     080C                     	;# 
  2113     080D                     	;# 
  2114     080E                     	;# 
  2115     080F                     	;# 
  2116     0810                     	;# 
  2117     0811                     	;# 
  2118     0812                     	;# 
  2119     0813                     	;# 
  2120     0814                     	;# 
  2121     081A                     	;# 
  2122     081A                     	;# 
  2123     081B                     	;# 
  2124     081C                     	;# 
  2125     081C                     	;# 
  2126     081D                     	;# 
  2127     081E                     	;# 
  2128     081F                     	;# 
  2129     088C                     	;# 
  2130     088D                     	;# 
  2131     088E                     	;# 
  2132     088F                     	;# 
  2133     0890                     	;# 
  2134     0891                     	;# 
  2135     0892                     	;# 
  2136     0893                     	;# 
  2137     0895                     	;# 
  2138     0896                     	;# 
  2139     0897                     	;# 
  2140     0898                     	;# 
  2141     0899                     	;# 
  2142     089A                     	;# 
  2143     089B                     	;# 
  2144     090C                     	;# 
  2145     090E                     	;# 
  2146     090F                     	;# 
  2147     091F                     	;# 
  2148     098F                     	;# 
  2149     098F                     	;# 
  2150     0990                     	;# 
  2151     0991                     	;# 
  2152     0992                     	;# 
  2153     0993                     	;# 
  2154     0994                     	;# 
  2155     0995                     	;# 
  2156     0996                     	;# 
  2157     0997                     	;# 
  2158     1E0F                     	;# 
  2159     1E10                     	;# 
  2160     1E11                     	;# 
  2161     1E12                     	;# 
  2162     1E13                     	;# 
  2163     1E14                     	;# 
  2164     1E15                     	;# 
  2165     1E16                     	;# 
  2166     1E17                     	;# 
  2167     1E18                     	;# 
  2168     1E19                     	;# 
  2169     1E1A                     	;# 
  2170     1E1B                     	;# 
  2171     1E1C                     	;# 
  2172     1E1D                     	;# 
  2173     1E1E                     	;# 
  2174     1E1F                     	;# 
  2175     1E20                     	;# 
  2176     1E21                     	;# 
  2177     1E22                     	;# 
  2178     1E23                     	;# 
  2179     1E24                     	;# 
  2180     1E25                     	;# 
  2181     1E26                     	;# 
  2182     1E27                     	;# 
  2183     1E28                     	;# 
  2184     1E29                     	;# 
  2185     1E2A                     	;# 
  2186     1E2B                     	;# 
  2187     1E2C                     	;# 
  2188     1E2D                     	;# 
  2189     1E2E                     	;# 
  2190     1E2F                     	;# 
  2191     1E30                     	;# 
  2192     1E31                     	;# 
  2193     1E32                     	;# 
  2194     1E33                     	;# 
  2195     1E34                     	;# 
  2196     1E35                     	;# 
  2197     1E36                     	;# 
  2198     1E37                     	;# 
  2199     1E8F                     	;# 
  2200     1E90                     	;# 
  2201     1E91                     	;# 
  2202     1E92                     	;# 
  2203     1E93                     	;# 
  2204     1E94                     	;# 
  2205     1E95                     	;# 
  2206     1E96                     	;# 
  2207     1E97                     	;# 
  2208     1E9C                     	;# 
  2209     1E9D                     	;# 
  2210     1E9E                     	;# 
  2211     1EA1                     	;# 
  2212     1EA2                     	;# 
  2213     1EA3                     	;# 
  2214     1EA4                     	;# 
  2215     1EA9                     	;# 
  2216     1EAA                     	;# 
  2217     1EB1                     	;# 
  2218     1EB2                     	;# 
  2219     1EB8                     	;# 
  2220     1EB9                     	;# 
  2221     1EBA                     	;# 
  2222     1EBB                     	;# 
  2223     1EBC                     	;# 
  2224     1EBD                     	;# 
  2225     1EBE                     	;# 
  2226     1EC3                     	;# 
  2227     1EC5                     	;# 
  2228     1EC6                     	;# 
  2229     1EC7                     	;# 
  2230     1EC8                     	;# 
  2231     1EC9                     	;# 
  2232     1ECA                     	;# 
  2233     1ECB                     	;# 
  2234     1ECC                     	;# 
  2235     1F10                     	;# 
  2236     1F11                     	;# 
  2237     1F12                     	;# 
  2238     1F14                     	;# 
  2239     1F15                     	;# 
  2240     1F20                     	;# 
  2241     1F21                     	;# 
  2242     1F22                     	;# 
  2243     1F23                     	;# 
  2244     1F24                     	;# 
  2245     1F25                     	;# 
  2246     1F38                     	;# 
  2247     1F39                     	;# 
  2248     1F3A                     	;# 
  2249     1F3B                     	;# 
  2250     1F3C                     	;# 
  2251     1F3D                     	;# 
  2252     1F3E                     	;# 
  2253     1F3F                     	;# 
  2254     1F4E                     	;# 
  2255     1F4F                     	;# 
  2256     1F50                     	;# 
  2257     1F51                     	;# 
  2258     1F52                     	;# 
  2259     1F53                     	;# 
  2260     1F54                     	;# 
  2261     1F55                     	;# 
  2262     1FE4                     	;# 
  2263     1FE5                     	;# 
  2264     1FE6                     	;# 
  2265     1FE7                     	;# 
  2266     1FE8                     	;# 
  2267     1FE8                     	;# 
  2268     1FE9                     	;# 
  2269     1FEA                     	;# 
  2270     1FEB                     	;# 
  2271     1FED                     	;# 
  2272     1FEE                     	;# 
  2273     1FEF                     	;# 
  2274     0000                     	;# 
  2275     0001                     	;# 
  2276     0002                     	;# 
  2277     0003                     	;# 
  2278     0004                     	;# 
  2279     0005                     	;# 
  2280     0006                     	;# 
  2281     0007                     	;# 
  2282     0008                     	;# 
  2283     0009                     	;# 
  2284     000A                     	;# 
  2285     000B                     	;# 
  2286     000C                     	;# 
  2287     000E                     	;# 
  2288     0012                     	;# 
  2289     0014                     	;# 
  2290     0018                     	;# 
  2291     001A                     	;# 
  2292     008C                     	;# 
  2293     008C                     	;# 
  2294     008D                     	;# 
  2295     008E                     	;# 
  2296     008E                     	;# 
  2297     008F                     	;# 
  2298     0090                     	;# 
  2299     0090                     	;# 
  2300     0091                     	;# 
  2301     0092                     	;# 
  2302     0092                     	;# 
  2303     0093                     	;# 
  2304     0094                     	;# 
  2305     0094                     	;# 
  2306     0095                     	;# 
  2307     0096                     	;# 
  2308     0096                     	;# 
  2309     0097                     	;# 
  2310     0098                     	;# 
  2311     0099                     	;# 
  2312     009A                     	;# 
  2313     009B                     	;# 
  2314     009B                     	;# 
  2315     009C                     	;# 
  2316     009D                     	;# 
  2317     009D                     	;# 
  2318     009E                     	;# 
  2319     009F                     	;# 
  2320     010C                     	;# 
  2321     010C                     	;# 
  2322     010D                     	;# 
  2323     010E                     	;# 
  2324     010F                     	;# 
  2325     010F                     	;# 
  2326     0110                     	;# 
  2327     0111                     	;# 
  2328     0112                     	;# 
  2329     0113                     	;# 
  2330     0114                     	;# 
  2331     0115                     	;# 
  2332     0116                     	;# 
  2333     0117                     	;# 
  2334     0118                     	;# 
  2335     0119                     	;# 
  2336     0119                     	;# 
  2337     0119                     	;# 
  2338     011A                     	;# 
  2339     011A                     	;# 
  2340     011A                     	;# 
  2341     011B                     	;# 
  2342     011B                     	;# 
  2343     011B                     	;# 
  2344     011B                     	;# 
  2345     011B                     	;# 
  2346     011C                     	;# 
  2347     011C                     	;# 
  2348     011C                     	;# 
  2349     011D                     	;# 
  2350     011D                     	;# 
  2351     011D                     	;# 
  2352     011E                     	;# 
  2353     011E                     	;# 
  2354     011E                     	;# 
  2355     011F                     	;# 
  2356     011F                     	;# 
  2357     011F                     	;# 
  2358     011F                     	;# 
  2359     011F                     	;# 
  2360     018C                     	;# 
  2361     018D                     	;# 
  2362     018E                     	;# 
  2363     018F                     	;# 
  2364     0190                     	;# 
  2365     0191                     	;# 
  2366     0192                     	;# 
  2367     0196                     	;# 
  2368     0197                     	;# 
  2369     0198                     	;# 
  2370     0199                     	;# 
  2371     019A                     	;# 
  2372     019B                     	;# 
  2373     019C                     	;# 
  2374     020C                     	;# 
  2375     020D                     	;# 
  2376     020E                     	;# 
  2377     020E                     	;# 
  2378     020F                     	;# 
  2379     020F                     	;# 
  2380     0210                     	;# 
  2381     0210                     	;# 
  2382     0211                     	;# 
  2383     0211                     	;# 
  2384     0212                     	;# 
  2385     0213                     	;# 
  2386     0214                     	;# 
  2387     0214                     	;# 
  2388     0215                     	;# 
  2389     0215                     	;# 
  2390     0216                     	;# 
  2391     0216                     	;# 
  2392     0217                     	;# 
  2393     0217                     	;# 
  2394     0218                     	;# 
  2395     0219                     	;# 
  2396     021A                     	;# 
  2397     021A                     	;# 
  2398     021B                     	;# 
  2399     021B                     	;# 
  2400     021C                     	;# 
  2401     021C                     	;# 
  2402     021D                     	;# 
  2403     021D                     	;# 
  2404     021E                     	;# 
  2405     021F                     	;# 
  2406     028C                     	;# 
  2407     028C                     	;# 
  2408     028D                     	;# 
  2409     028D                     	;# 
  2410     028E                     	;# 
  2411     028F                     	;# 
  2412     0290                     	;# 
  2413     0291                     	;# 
  2414     0292                     	;# 
  2415     0292                     	;# 
  2416     0293                     	;# 
  2417     0293                     	;# 
  2418     0294                     	;# 
  2419     0295                     	;# 
  2420     0296                     	;# 
  2421     0297                     	;# 
  2422     0298                     	;# 
  2423     0298                     	;# 
  2424     0299                     	;# 
  2425     0299                     	;# 
  2426     029A                     	;# 
  2427     029B                     	;# 
  2428     029C                     	;# 
  2429     029D                     	;# 
  2430     029F                     	;# 
  2431     030C                     	;# 
  2432     030C                     	;# 
  2433     030D                     	;# 
  2434     030E                     	;# 
  2435     030F                     	;# 
  2436     0310                     	;# 
  2437     0310                     	;# 
  2438     0311                     	;# 
  2439     0312                     	;# 
  2440     0313                     	;# 
  2441     0314                     	;# 
  2442     0314                     	;# 
  2443     0315                     	;# 
  2444     0316                     	;# 
  2445     0317                     	;# 
  2446     0318                     	;# 
  2447     0318                     	;# 
  2448     0319                     	;# 
  2449     031A                     	;# 
  2450     031B                     	;# 
  2451     038C                     	;# 
  2452     038C                     	;# 
  2453     038D                     	;# 
  2454     038E                     	;# 
  2455     0390                     	;# 
  2456     0390                     	;# 
  2457     0391                     	;# 
  2458     0392                     	;# 
  2459     048C                     	;# 
  2460     048C                     	;# 
  2461     048D                     	;# 
  2462     048E                     	;# 
  2463     048F                     	;# 
  2464     048F                     	;# 
  2465     0490                     	;# 
  2466     0491                     	;# 
  2467     0492                     	;# 
  2468     0492                     	;# 
  2469     0493                     	;# 
  2470     0494                     	;# 
  2471     0495                     	;# 
  2472     0495                     	;# 
  2473     0496                     	;# 
  2474     0497                     	;# 
  2475     0498                     	;# 
  2476     0499                     	;# 
  2477     049A                     	;# 
  2478     049B                     	;# 
  2479     049C                     	;# 
  2480     049D                     	;# 
  2481     058C                     	;# 
  2482     058C                     	;# 
  2483     058D                     	;# 
  2484     058E                     	;# 
  2485     058F                     	;# 
  2486     058F                     	;# 
  2487     0590                     	;# 
  2488     0591                     	;# 
  2489     0592                     	;# 
  2490     0593                     	;# 
  2491     059C                     	;# 
  2492     059C                     	;# 
  2493     059D                     	;# 
  2494     059D                     	;# 
  2495     059E                     	;# 
  2496     059F                     	;# 
  2497     060C                     	;# 
  2498     060C                     	;# 
  2499     060D                     	;# 
  2500     060D                     	;# 
  2501     060E                     	;# 
  2502     060F                     	;# 
  2503     0610                     	;# 
  2504     0611                     	;# 
  2505     0612                     	;# 
  2506     0613                     	;# 
  2507     0614                     	;# 
  2508     0616                     	;# 
  2509     0616                     	;# 
  2510     0617                     	;# 
  2511     0617                     	;# 
  2512     0618                     	;# 
  2513     0619                     	;# 
  2514     061A                     	;# 
  2515     061B                     	;# 
  2516     061C                     	;# 
  2517     061D                     	;# 
  2518     061E                     	;# 
  2519     070C                     	;# 
  2520     070D                     	;# 
  2521     070E                     	;# 
  2522     070F                     	;# 
  2523     0710                     	;# 
  2524     0711                     	;# 
  2525     0712                     	;# 
  2526     0713                     	;# 
  2527     0714                     	;# 
  2528     0716                     	;# 
  2529     0717                     	;# 
  2530     0718                     	;# 
  2531     0719                     	;# 
  2532     071A                     	;# 
  2533     071B                     	;# 
  2534     071C                     	;# 
  2535     071D                     	;# 
  2536     071E                     	;# 
  2537     0796                     	;# 
  2538     0797                     	;# 
  2539     0798                     	;# 
  2540     0799                     	;# 
  2541     079A                     	;# 
  2542     079B                     	;# 
  2543     079C                     	;# 
  2544     079D                     	;# 
  2545     080C                     	;# 
  2546     080D                     	;# 
  2547     080E                     	;# 
  2548     080F                     	;# 
  2549     0810                     	;# 
  2550     0811                     	;# 
  2551     0812                     	;# 
  2552     0813                     	;# 
  2553     0814                     	;# 
  2554     081A                     	;# 
  2555     081A                     	;# 
  2556     081B                     	;# 
  2557     081C                     	;# 
  2558     081C                     	;# 
  2559     081D                     	;# 
  2560     081E                     	;# 
  2561     081F                     	;# 
  2562     088C                     	;# 
  2563     088D                     	;# 
  2564     088E                     	;# 
  2565     088F                     	;# 
  2566     0890                     	;# 
  2567     0891                     	;# 
  2568     0892                     	;# 
  2569     0893                     	;# 
  2570     0895                     	;# 
  2571     0896                     	;# 
  2572     0897                     	;# 
  2573     0898                     	;# 
  2574     0899                     	;# 
  2575     089A                     	;# 
  2576     089B                     	;# 
  2577     090C                     	;# 
  2578     090E                     	;# 
  2579     090F                     	;# 
  2580     091F                     	;# 
  2581     098F                     	;# 
  2582     098F                     	;# 
  2583     0990                     	;# 
  2584     0991                     	;# 
  2585     0992                     	;# 
  2586     0993                     	;# 
  2587     0994                     	;# 
  2588     0995                     	;# 
  2589     0996                     	;# 
  2590     0997                     	;# 
  2591     1E0F                     	;# 
  2592     1E10                     	;# 
  2593     1E11                     	;# 
  2594     1E12                     	;# 
  2595     1E13                     	;# 
  2596     1E14                     	;# 
  2597     1E15                     	;# 
  2598     1E16                     	;# 
  2599     1E17                     	;# 
  2600     1E18                     	;# 
  2601     1E19                     	;# 
  2602     1E1A                     	;# 
  2603     1E1B                     	;# 
  2604     1E1C                     	;# 
  2605     1E1D                     	;# 
  2606     1E1E                     	;# 
  2607     1E1F                     	;# 
  2608     1E20                     	;# 
  2609     1E21                     	;# 
  2610     1E22                     	;# 
  2611     1E23                     	;# 
  2612     1E24                     	;# 
  2613     1E25                     	;# 
  2614     1E26                     	;# 
  2615     1E27                     	;# 
  2616     1E28                     	;# 
  2617     1E29                     	;# 
  2618     1E2A                     	;# 
  2619     1E2B                     	;# 
  2620     1E2C                     	;# 
  2621     1E2D                     	;# 
  2622     1E2E                     	;# 
  2623     1E2F                     	;# 
  2624     1E30                     	;# 
  2625     1E31                     	;# 
  2626     1E32                     	;# 
  2627     1E33                     	;# 
  2628     1E34                     	;# 
  2629     1E35                     	;# 
  2630     1E36                     	;# 
  2631     1E37                     	;# 
  2632     1E8F                     	;# 
  2633     1E90                     	;# 
  2634     1E91                     	;# 
  2635     1E92                     	;# 
  2636     1E93                     	;# 
  2637     1E94                     	;# 
  2638     1E95                     	;# 
  2639     1E96                     	;# 
  2640     1E97                     	;# 
  2641     1E9C                     	;# 
  2642     1E9D                     	;# 
  2643     1E9E                     	;# 
  2644     1EA1                     	;# 
  2645     1EA2                     	;# 
  2646     1EA3                     	;# 
  2647     1EA4                     	;# 
  2648     1EA9                     	;# 
  2649     1EAA                     	;# 
  2650     1EB1                     	;# 
  2651     1EB2                     	;# 
  2652     1EB8                     	;# 
  2653     1EB9                     	;# 
  2654     1EBA                     	;# 
  2655     1EBB                     	;# 
  2656     1EBC                     	;# 
  2657     1EBD                     	;# 
  2658     1EBE                     	;# 
  2659     1EC3                     	;# 
  2660     1EC5                     	;# 
  2661     1EC6                     	;# 
  2662     1EC7                     	;# 
  2663     1EC8                     	;# 
  2664     1EC9                     	;# 
  2665     1ECA                     	;# 
  2666     1ECB                     	;# 
  2667     1ECC                     	;# 
  2668     1F10                     	;# 
  2669     1F11                     	;# 
  2670     1F12                     	;# 
  2671     1F14                     	;# 
  2672     1F15                     	;# 
  2673     1F20                     	;# 
  2674     1F21                     	;# 
  2675     1F22                     	;# 
  2676     1F23                     	;# 
  2677     1F24                     	;# 
  2678     1F25                     	;# 
  2679     1F38                     	;# 
  2680     1F39                     	;# 
  2681     1F3A                     	;# 
  2682     1F3B                     	;# 
  2683     1F3C                     	;# 
  2684     1F3D                     	;# 
  2685     1F3E                     	;# 
  2686     1F3F                     	;# 
  2687     1F4E                     	;# 
  2688     1F4F                     	;# 
  2689     1F50                     	;# 
  2690     1F51                     	;# 
  2691     1F52                     	;# 
  2692     1F53                     	;# 
  2693     1F54                     	;# 
  2694     1F55                     	;# 
  2695     1FE4                     	;# 
  2696     1FE5                     	;# 
  2697     1FE6                     	;# 
  2698     1FE7                     	;# 
  2699     1FE8                     	;# 
  2700     1FE8                     	;# 
  2701     1FE9                     	;# 
  2702     1FEA                     	;# 
  2703     1FEB                     	;# 
  2704     1FED                     	;# 
  2705     1FEE                     	;# 
  2706     1FEF                     	;# 
  2707                           
  2708                           	psect	idataBANK2
  2709     0B53                     __pidataBANK2:
  2710                           
  2711                           ;initializer for main@F10508
  2712     0B53  3401               	retlw	1
  2713     0B54  3403               	retlw	3
  2714     0B55  3400               	retlw	0
  2715     0B56  3401               	retlw	1
  2716     0B57  3400               	retlw	0
  2717     0B58  3404               	retlw	4
  2718     0B59  3415               	retlw	21
  2719     0B5A  34C9               	retlw	201
  2720     0B5B  3400               	retlw	0
  2721     0B5C  3400               	retlw	0
  2722     0B5D  3400               	retlw	0
  2723     0B5E  3400               	retlw	0
  2724     0B5F  3400               	retlw	0
  2725     0B60  3400               	retlw	0
  2726     0B61  3400               	retlw	0
  2727     0B62  3400               	retlw	0
  2728     0B63  3400               	retlw	0
  2729     0B64  3400               	retlw	0
  2730     0B65  3400               	retlw	0
  2731     0B66  3400               	retlw	0
  2732     0B67  3400               	retlw	0
  2733     0B68  3400               	retlw	0
  2734     0B69  3400               	retlw	0
  2735     0B6A  3400               	retlw	0
  2736     0B6B  3400               	retlw	0
  2737     0B6C  3400               	retlw	0
  2738     0B6D  3400               	retlw	0
  2739     0B6E  3400               	retlw	0
  2740     0B6F  3400               	retlw	0
  2741     0B70  3400               	retlw	0
  2742     0B71  3400               	retlw	0
  2743     0B72  3400               	retlw	0
  2744                           
  2745                           	psect	stringtext1
  2746     103B                     __pstringtext1:
  2747     103B                     _dpowers:
  2748     103B  3401               	retlw	1
  2749     103C  3400               	retlw	0
  2750     103D  3400               	retlw	0
  2751     103E  3400               	retlw	0
  2752     103F  340A               	retlw	10
  2753     1040  3400               	retlw	0
  2754     1041  3400               	retlw	0
  2755     1042  3400               	retlw	0
  2756     1043  3464               	retlw	100
  2757     1044  3400               	retlw	0
  2758     1045  3400               	retlw	0
  2759     1046  3400               	retlw	0
  2760     1047  34E8               	retlw	232
  2761     1048  3403               	retlw	3
  2762     1049  3400               	retlw	0
  2763     104A  3400               	retlw	0
  2764     104B  3410               	retlw	16
  2765     104C  3427               	retlw	39
  2766     104D  3400               	retlw	0
  2767     104E  3400               	retlw	0
  2768     104F  34A0               	retlw	160
  2769     1050  3486               	retlw	134
  2770     1051  3401               	retlw	1
  2771     1052  3400               	retlw	0
  2772     1053  3440               	retlw	64
  2773     1054  3442               	retlw	66
  2774     1055  340F               	retlw	15
  2775     1056  3400               	retlw	0
  2776     1057  3480               	retlw	128
  2777     1058  3496               	retlw	150
  2778     1059  3498               	retlw	152
  2779     105A  3400               	retlw	0
  2780     105B  3400               	retlw	0
  2781     105C  34E1               	retlw	225
  2782     105D  34F5               	retlw	245
  2783     105E  3405               	retlw	5
  2784     105F  3400               	retlw	0
  2785     1060  34CA               	retlw	202
  2786     1061  349A               	retlw	154
  2787     1062  343B               	retlw	59
  2788     1063                     __end_of_dpowers:
  2789                           
  2790                           	psect	stringtext2
  2791     1000                     __pstringtext2:
  2792     1000                     _hexpowers:
  2793     1000  3401               	retlw	1
  2794     1001  3400               	retlw	0
  2795     1002  3400               	retlw	0
  2796     1003  3400               	retlw	0
  2797     1004  3410               	retlw	16
  2798     1005  3400               	retlw	0
  2799     1006  3400               	retlw	0
  2800     1007  3400               	retlw	0
  2801     1008  3400               	retlw	0
  2802     1009  3401               	retlw	1
  2803     100A  3400               	retlw	0
  2804     100B  3400               	retlw	0
  2805     100C  3400               	retlw	0
  2806     100D  3410               	retlw	16
  2807     100E  3400               	retlw	0
  2808     100F  3400               	retlw	0
  2809     1010  3400               	retlw	0
  2810     1011  3400               	retlw	0
  2811     1012  3401               	retlw	1
  2812     1013  3400               	retlw	0
  2813     1014  3400               	retlw	0
  2814     1015  3400               	retlw	0
  2815     1016  3410               	retlw	16
  2816     1017  3400               	retlw	0
  2817     1018  3400               	retlw	0
  2818     1019  3400               	retlw	0
  2819     101A  3400               	retlw	0
  2820     101B  3401               	retlw	1
  2821     101C  3400               	retlw	0
  2822     101D  3400               	retlw	0
  2823     101E  3400               	retlw	0
  2824     101F  3410               	retlw	16
  2825     1020                     __end_of_hexpowers:
  2826     001A                     _LATCbits	set	26
  2827     000B                     _INTCONbits	set	11
  2828     0014                     _TRISC	set	20
  2829     0012                     _TRISA	set	18
  2830     001A                     _LATC	set	26
  2831     0018                     _LATA	set	24
  2832     005F                     _GIE	set	95
  2833     0119                     _RC1REG	set	281
  2834     011A                     _TX1REG	set	282
  2835     011D                     _RC1STA	set	285
  2836     011E                     _TX1STA	set	286
  2837     011C                     _SP1BRGH	set	284
  2838     011B                     _SP1BRGL	set	283
  2839     011F                     _BAUD1CON	set	287
  2840     0190                     _SSP1CON1bits	set	400
  2841     018C                     _SSP1BUF	set	396
  2842     0191                     _SSP1CON2bits	set	401
  2843     018F                     _SSP1STATbits	set	399
  2844     018E                     _SSP1MSK	set	398
  2845     018D                     _SSP1ADD	set	397
  2846     0191                     _SSP1CON2	set	401
  2847     0190                     _SSP1CON1	set	400
  2848     018F                     _SSP1STAT	set	399
  2849     059E                     _T0CON0	set	1438
  2850     059C                     _TMR0L	set	1436
  2851     059D                     _TMR0H	set	1437
  2852     059F                     _T0CON1	set	1439
  2853     0716                     _PIE0bits	set	1814
  2854     070C                     _PIR0bits	set	1804
  2855     070F                     _PIR3bits	set	1807
  2856     0719                     _PIE3bits	set	1817
  2857     079D                     _PMD7	set	1949
  2858     079C                     _PMD6	set	1948
  2859     079B                     _PMD5	set	1947
  2860     079A                     _PMD4	set	1946
  2861     0799                     _PMD3	set	1945
  2862     0798                     _PMD2	set	1944
  2863     0797                     _PMD1	set	1943
  2864     0796                     _PMD0	set	1942
  2865     0892                     _OSCTUNE	set	2194
  2866     0893                     _OSCFRQ	set	2195
  2867     0891                     _OSCEN	set	2193
  2868     088F                     _OSCCON3	set	2191
  2869     088D                     _OSCCON1	set	2189
  2870     1ECB                     _RX1DTPPS	set	7883
  2871     1EC6                     _SSP1DATPPS	set	7878
  2872     1EC5                     _SSP1CLKPPS	set	7877
  2873     1F15                     _RA5PPS	set	7957
  2874     1F25                     _RC5PPS	set	7973
  2875     1F21                     _RC1PPS	set	7969
  2876     1F23                     _RC3PPS	set	7971
  2877     1F20                     _RC0PPS	set	7968
  2878     1F52                     _INLVLC	set	8018
  2879     1F3C                     _INLVLA	set	7996
  2880     1F51                     _SLRCONC	set	8017
  2881     1F3B                     _SLRCONA	set	7995
  2882     1F50                     _ODCONC	set	8016
  2883     1F3A                     _ODCONA	set	7994
  2884     1F4F                     _WPUC	set	8015
  2885     1F39                     _WPUA	set	7993
  2886     1F38                     _ANSELA	set	7992
  2887     1F4E                     _ANSELC	set	8014
  2888     1020                     STR_11:
  2889     1020  345B               	retlw	91	;'['
  2890     1021  3425               	retlw	37	;'%'
  2891     1022  346C               	retlw	108	;'l'
  2892     1023  3475               	retlw	117	;'u'
  2893     1024  345D               	retlw	93	;']'
  2894     1025  3420               	retlw	32	;' '
  2895     1026  3450               	retlw	80	;'P'
  2896     1027  3448               	retlw	72	;'H'
  2897     1028  343A               	retlw	58	;':'
  2898     1029  3420               	retlw	32	;' '
  2899     102A  3425               	retlw	37	;'%'
  2900     102B  3475               	retlw	117	;'u'
  2901     102C  3420               	retlw	32	;' '
  2902     102D  3428               	retlw	40	;'('
  2903     102E  3430               	retlw	48	;'0'
  2904     102F  342E               	retlw	46	;'.'
  2905     1030  3430               	retlw	48	;'0'
  2906     1031  3431               	retlw	49	;'1'
  2907     1032  342A               	retlw	42	;'*'
  2908     1033  3475               	retlw	117	;'u'
  2909     1034  346E               	retlw	110	;'n'
  2910     1035  3469               	retlw	105	;'i'
  2911     1036  3474               	retlw	116	;'t'
  2912     1037  3429               	retlw	41	;')'
  2913     1038  340D               	retlw	13
  2914     1039  340A               	retlw	10
  2915     103A  3400               	retlw	0
  2916                           
  2917                           	psect	stringtext3
  2918     1063                     __pstringtext3:
  2919     1063                     STR_5:
  2920     1063  3450               	retlw	80	;'P'
  2921     1064  3448               	retlw	72	;'H'
  2922     1065  3420               	retlw	32	;' '
  2923     1066  3450               	retlw	80	;'P'
  2924     1067  3472               	retlw	114	;'r'
  2925     1068  346F               	retlw	111	;'o'
  2926     1069  3462               	retlw	98	;'b'
  2927     106A  3465               	retlw	101	;'e'
  2928     106B  3420               	retlw	32	;' '
  2929     106C  3477               	retlw	119	;'w'
  2930     106D  3469               	retlw	105	;'i'
  2931     106E  3474               	retlw	116	;'t'
  2932     106F  3468               	retlw	104	;'h'
  2933     1070  3420               	retlw	32	;' '
  2934     1071  3452               	retlw	82	;'R'
  2935     1072  3453               	retlw	83	;'S'
  2936     1073  3434               	retlw	52	;'4'
  2937     1074  3438               	retlw	56	;'8'
  2938     1075  3435               	retlw	53	;'5'
  2939     1076  340D               	retlw	13
  2940     1077  340A               	retlw	10
  2941     1078  3400               	retlw	0
  2942                           
  2943                           	psect	stringtext4
  2944     1079                     __pstringtext4:
  2945     1079                     STR_19:
  2946     1079  3430               	retlw	48	;'0'
  2947     107A  3431               	retlw	49	;'1'
  2948     107B  3432               	retlw	50	;'2'
  2949     107C  3433               	retlw	51	;'3'
  2950     107D  3434               	retlw	52	;'4'
  2951     107E  3435               	retlw	53	;'5'
  2952     107F  3436               	retlw	54	;'6'
  2953     1080  3437               	retlw	55	;'7'
  2954     1081  3438               	retlw	56	;'8'
  2955     1082  3439               	retlw	57	;'9'
  2956     1083  3441               	retlw	65	;'A'
  2957     1084  3442               	retlw	66	;'B'
  2958     1085  3443               	retlw	67	;'C'
  2959     1086  3444               	retlw	68	;'D'
  2960     1087  3445               	retlw	69	;'E'
  2961     1088  3446               	retlw	70	;'F'
  2962     1089  3400               	retlw	0
  2963                           
  2964                           	psect	stringtext5
  2965     108A                     __pstringtext5:
  2966     108A                     STR_20:
  2967     108A  3430               	retlw	48	;'0'
  2968     108B  3431               	retlw	49	;'1'
  2969     108C  3432               	retlw	50	;'2'
  2970     108D  3433               	retlw	51	;'3'
  2971     108E  3434               	retlw	52	;'4'
  2972     108F  3435               	retlw	53	;'5'
  2973     1090  3436               	retlw	54	;'6'
  2974     1091  3437               	retlw	55	;'7'
  2975     1092  3438               	retlw	56	;'8'
  2976     1093  3439               	retlw	57	;'9'
  2977     1094  3461               	retlw	97	;'a'
  2978     1095  3462               	retlw	98	;'b'
  2979     1096  3463               	retlw	99	;'c'
  2980     1097  3464               	retlw	100	;'d'
  2981     1098  3465               	retlw	101	;'e'
  2982     1099  3466               	retlw	102	;'f'
  2983     109A  3400               	retlw	0
  2984                           
  2985                           	psect	stringtext6
  2986     109B                     __pstringtext6:
  2987     109B                     STR_8:
  2988     109B  345B               	retlw	91	;'['
  2989     109C  3425               	retlw	37	;'%'
  2990     109D  346C               	retlw	108	;'l'
  2991     109E  3475               	retlw	117	;'u'
  2992     109F  345D               	retlw	93	;']'
  2993     10A0  3420               	retlw	32	;' '
  2994     10A1  3452               	retlw	82	;'R'
  2995     10A2  3465               	retlw	101	;'e'
  2996     10A3  3471               	retlw	113	;'q'
  2997     10A4  3475               	retlw	117	;'u'
  2998     10A5  3465               	retlw	101	;'e'
  2999     10A6  3473               	retlw	115	;'s'
  3000     10A7  3474               	retlw	116	;'t'
  3001     10A8  340D               	retlw	13
  3002     10A9  340A               	retlw	10
  3003     10AA  3400               	retlw	0
  3004                           
  3005                           	psect	stringtext7
  3006     10AB                     __pstringtext7:
  3007     10AB                     STR_10:
  3008     10AB  3454               	retlw	84	;'T'
  3009     10AC  3445               	retlw	69	;'E'
  3010     10AD  344D               	retlw	77	;'M'
  3011     10AE  3450               	retlw	80	;'P'
  3012     10AF  343A               	retlw	58	;':'
  3013     10B0  3420               	retlw	32	;' '
  3014     10B1  3425               	retlw	37	;'%'
  3015     10B2  3475               	retlw	117	;'u'
  3016     10B3  340D               	retlw	13
  3017     10B4  340A               	retlw	10
  3018     10B5  3400               	retlw	0
  3019                           
  3020                           	psect	stringtext8
  3021     10B6                     __pstringtext8:
  3022     10B6                     STR_3:
  3023     10B6  3430               	retlw	48	;'0'
  3024     10B7  3441               	retlw	65	;'A'
  3025     10B8  3430               	retlw	48	;'0'
  3026     10B9  3431               	retlw	49	;'1'
  3027     10BA  3438               	retlw	56	;'8'
  3028     10BB  3432               	retlw	50	;'2'
  3029     10BC  3430               	retlw	48	;'0'
  3030     10BD  3430               	retlw	48	;'0'
  3031     10BE  3430               	retlw	48	;'0'
  3032     10BF  3431               	retlw	49	;'1'
  3033     10C0  3400               	retlw	0
  3034                           
  3035                           	psect	stringtext9
  3036     10C1                     __pstringtext9:
  3037     10C1                     STR_6:
  3038     10C1  3473               	retlw	115	;'s'
  3039     10C2  346E               	retlw	110	;'n'
  3040     10C3  343A               	retlw	58	;':'
  3041     10C4  3420               	retlw	32	;' '
  3042     10C5  3425               	retlw	37	;'%'
  3043     10C6  3473               	retlw	115	;'s'
  3044     10C7  340D               	retlw	13
  3045     10C8  340A               	retlw	10
  3046     10C9  3400               	retlw	0
  3047                           
  3048                           	psect	stringtext10
  3049     10CA                     __pstringtext10:
  3050     10CA                     STR_9:
  3051     10CA  3450               	retlw	80	;'P'
  3052     10CB  3448               	retlw	72	;'H'
  3053     10CC  343A               	retlw	58	;':'
  3054     10CD  3420               	retlw	32	;' '
  3055     10CE  3425               	retlw	37	;'%'
  3056     10CF  3475               	retlw	117	;'u'
  3057     10D0  340D               	retlw	13
  3058     10D1  340A               	retlw	10
  3059     10D2  3400               	retlw	0
  3060                           
  3061                           	psect	stringtext11
  3062     10D3                     __pstringtext11:
  3063     10D3                     STR_18:
  3064     10D3  3428               	retlw	40	;'('
  3065     10D4  346E               	retlw	110	;'n'
  3066     10D5  3475               	retlw	117	;'u'
  3067     10D6  346C               	retlw	108	;'l'
  3068     10D7  346C               	retlw	108	;'l'
  3069     10D8  3429               	retlw	41	;')'
  3070     10D9  3400               	retlw	0
  3071                           
  3072                           	psect	stringtext12
  3073     10DA                     __pstringtext12:
  3074     10DA                     STR_12:
  3075     10DA  3425               	retlw	37	;'%'
  3076     10DB  3430               	retlw	48	;'0'
  3077     10DC  3438               	retlw	56	;'8'
  3078     10DD  3478               	retlw	120	;'x'
  3079     10DE  343A               	retlw	58	;':'
  3080     10DF  3400               	retlw	0
  3081                           
  3082                           	psect	stringtext13
  3083     10E0                     __pstringtext13:
  3084     10E0                     STR_13:
  3085     10E0  3420               	retlw	32	;' '
  3086     10E1  3425               	retlw	37	;'%'
  3087     10E2  3430               	retlw	48	;'0'
  3088     10E3  3432               	retlw	50	;'2'
  3089     10E4  3478               	retlw	120	;'x'
  3090     10E5  3400               	retlw	0
  3091                           
  3092                           	psect	stringtext14
  3093     10E6                     __pstringtext14:
  3094     10E6                     STR_1:
  3095     10E6  3425               	retlw	37	;'%'
  3096     10E7  3430               	retlw	48	;'0'
  3097     10E8  3432               	retlw	50	;'2'
  3098     10E9  3458               	retlw	88	;'X'
  3099     10EA  3420               	retlw	32	;' '
  3100     10EB  3400               	retlw	0
  3101                           
  3102                           	psect	stringtext15
  3103     10EC                     __pstringtext15:
  3104     10EC                     STR_14:
  3105     10EC  3420               	retlw	32	;' '
  3106     10ED  3420               	retlw	32	;' '
  3107     10EE  3420               	retlw	32	;' '
  3108     10EF  3400               	retlw	0
  3109                           
  3110                           	psect	stringtext16
  3111     10F0                     __pstringtext16:
  3112     10F0                     STR_16:
  3113     10F0  3425               	retlw	37	;'%'
  3114     10F1  3463               	retlw	99	;'c'
  3115     10F2  3400               	retlw	0
  3116                           
  3117                           	psect	stringtext17
  3118     0000                     __pstringtext17:
  3119     1038                     
  3120                           	psect	cinit
  3121     0068                     start_initialization:	
  3122                           ; #config settings
  3123                           
  3124     0068                     __initialization:
  3125                           
  3126                           ; Initialize objects allocated to BANK2
  3127     0068  3053               	movlw	low __pidataBANK2
  3128     0069  0084               	movwf	4
  3129     006A  308B               	movlw	(high __pidataBANK2)| (0+128)
  3130     006B  0085               	movwf	5
  3131     006C  3040               	movlw	low __pdataBANK2
  3132     006D  0086               	movwf	6
  3133     006E  3001               	movlw	high __pdataBANK2
  3134     006F  0087               	movwf	7
  3135     0070  3020               	movlw	32
  3136     0071  3189  21F1  3180   	fcall	init_ram
  3137                           
  3138                           ; Clear objects allocated to COMMON
  3139     0074  01F8               	clrf	__pbssCOMMON& (0+127)
  3140     0075  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  3141     0076  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  3142     0077  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  3143     0078  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  3144                           
  3145                           ; Clear objects allocated to BANK0
  3146     0079  3066               	movlw	low __pbssBANK0
  3147     007A  0084               	movwf	4
  3148     007B  3000               	movlw	high __pbssBANK0
  3149     007C  0085               	movwf	5
  3150     007D  3008               	movlw	8
  3151     007E  3189  21EB  3180   	fcall	clear_ram0
  3152                           
  3153                           ; Clear objects allocated to BANK1
  3154     0081  30E5               	movlw	low __pbssBANK1
  3155     0082  0084               	movwf	4
  3156     0083  3000               	movlw	high __pbssBANK1
  3157     0084  0085               	movwf	5
  3158     0085  3009               	movlw	9
  3159     0086  3189  21EB  3180   	fcall	clear_ram0
  3160                           
  3161                           ; Clear objects allocated to BANK2
  3162     0089  3020               	movlw	low __pbssBANK2
  3163     008A  0084               	movwf	4
  3164     008B  3001               	movlw	high __pbssBANK2
  3165     008C  0085               	movwf	5
  3166     008D  3020               	movlw	32
  3167     008E  3189  21EB  3180   	fcall	clear_ram0
  3168                           
  3169                           ; Clear objects allocated to BANK3
  3170     0091  30A0               	movlw	low __pbssBANK3
  3171     0092  0084               	movwf	4
  3172     0093  3001               	movlw	high __pbssBANK3
  3173     0094  0085               	movwf	5
  3174     0095  3040               	movlw	64
  3175     0096  3189  21EB  3180   	fcall	clear_ram0
  3176     0099                     end_of_initialization:	
  3177                           ;End of C runtime variable initialization code
  3178                           
  3179     0099                     __end_of__initialization:
  3180     0099  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3181     009A  0140               	movlb	0
  3182     009B  3180  289D         	ljmp	_main	;jump to C main() function
  3183                           
  3184                           	psect	bssCOMMON
  3185     0078                     __pbssCOMMON:
  3186     0078                     _currentState:
  3187     0078                     	ds	1
  3188     0079                     _currentRegister:
  3189     0079                     	ds	1
  3190     007A                     _uart_rx_states:
  3191     007A                     	ds	1
  3192     007B                     _rxbuffer_index:
  3193     007B                     	ds	1
  3194     007C                     _tmp:
  3195     007C                     	ds	1
  3196                           
  3197                           	psect	bssBANK0
  3198     0066                     __pbssBANK0:
  3199     0066                     _ticks:
  3200     0066                     	ds	4
  3201     006A                     _uart_rx_ticks:
  3202     006A                     	ds	4
  3203                           
  3204                           	psect	bssBANK1
  3205     00E5                     __pbssBANK1:
  3206     00E5                     main@prev_ticks2:
  3207     00E5                     	ds	4
  3208     00E9                     main@prev_ticks1:
  3209     00E9                     	ds	4
  3210     00ED                     _uart_rx_package_event:
  3211     00ED                     	ds	1
  3212                           
  3213                           	psect	bssBANK2
  3214     0120                     __pbssBANK2:
  3215     0120                     _rxbuffer:
  3216     0120                     	ds	32
  3217                           
  3218                           	psect	dataBANK2
  3219     0140                     __pdataBANK2:
  3220     0140                     main@F10508:
  3221     0140                     	ds	32
  3222                           
  3223                           	psect	bssBANK3
  3224     01A0                     __pbssBANK3:
  3225     01A0                     _slaveData:
  3226     01A0                     	ds	64
  3227                           
  3228                           	psect	inittext
  3229     09F1                     init_ram:
  3230     09F1  00FE               	movwf	btemp
  3231     09F2                     initloop:
  3232     09F2  0012               	moviw fsr0++
  3233     09F3  001E               	movwi fsr1++
  3234     09F4  0BFE               	decfsz	btemp,f
  3235     09F5  29F2               	goto	initloop
  3236     09F6  3400               	retlw	0
  3237                           
  3238                           	psect	clrtext
  3239     09EB                     clear_ram0:	
  3240                           ;	Called with FSR0 containing the base address, and
  3241                           ;	WREG with the size to clear
  3242                           
  3243     09EB  0064               	clrwdt	;clear the watchdog before getting into this loop
  3244     09EC                     clrloop0:
  3245     09EC  0180               	clrf	0	;clear RAM location pointed to by FSR
  3246     09ED  3101               	addfsr 0,1
  3247     09EE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3248     09EF  29EC               	goto	clrloop0	;have we reached the end yet?
  3249     09F0  3400               	retlw	0	;all done for this memory range, return
  3250                           
  3251                           	psect	cstackBANK1
  3252     00A0                     __pcstackBANK1:
  3253     00A0                     ??_main:
  3254                           
  3255                           ; 1 bytes @ 0x0
  3256     00A0                     	ds	12
  3257     00AC                     main@txbuf:
  3258                           
  3259                           ; 32 bytes @ 0xC
  3260     00AC                     	ds	32
  3261     00CC                     main@payload:
  3262                           
  3263                           ; 4 bytes @ 0x2C
  3264     00CC                     	ds	4
  3265     00D0                     main@payload_temp:
  3266                           
  3267                           ; 4 bytes @ 0x30
  3268     00D0                     	ds	4
  3269     00D4                     main@ph:
  3270                           
  3271                           ; 4 bytes @ 0x34
  3272     00D4                     	ds	4
  3273     00D8                     main@temp:
  3274                           
  3275                           ; 4 bytes @ 0x38
  3276     00D8                     	ds	4
  3277     00DC                     main@temp2:
  3278                           
  3279                           ; 2 bytes @ 0x3C
  3280     00DC                     	ds	2
  3281     00DE                     main@i:
  3282                           
  3283                           ; 1 bytes @ 0x3E
  3284     00DE                     	ds	1
  3285     00DF                     main@ph2:
  3286                           
  3287                           ; 2 bytes @ 0x3F
  3288     00DF                     	ds	2
  3289     00E1                     main@now:
  3290                           
  3291                           ; 4 bytes @ 0x41
  3292     00E1                     	ds	4
  3293                           
  3294                           	psect	cstackCOMMON
  3295     0070                     __pcstackCOMMON:
  3296     0070                     ?_isprint:
  3297     0070                     ?_isdigit:	
  3298                           ; 1 bit 
  3299                           
  3300     0070                     ?_isspace:	
  3301                           ; 1 bit 
  3302                           
  3303     0070                     ?_isalpha:	
  3304                           ; 1 bit 
  3305                           
  3306     0070                     ?_isupper:	
  3307                           ; 1 bit 
  3308                           
  3309     0070                     ?_PMD_Initialize:	
  3310                           ; 1 bit 
  3311                           
  3312     0070                     ?_PIN_MANAGER_Initialize:	
  3313                           ; 1 bytes @ 0x0
  3314                           
  3315     0070                     ?_OSCILLATOR_Initialize:	
  3316                           ; 1 bytes @ 0x0
  3317                           
  3318     0070                     ?_i2c_slave_interrupt:	
  3319                           ; 1 bytes @ 0x0
  3320                           
  3321     0070                     ??_i2c_slave_interrupt:	
  3322                           ; 1 bytes @ 0x0
  3323                           
  3324     0070                     ?_tmr0_init:	
  3325                           ; 1 bytes @ 0x0
  3326                           
  3327     0070                     ?_i2c_slave_init:	
  3328                           ; 1 bytes @ 0x0
  3329                           
  3330     0070                     ?_dump_memory_map:	
  3331                           ; 1 bytes @ 0x0
  3332                           
  3333     0070                     ?_toupper:	
  3334                           ; 1 bytes @ 0x0
  3335                           
  3336     0070                     ?_SYSTEM_Initialize:	
  3337                           ; 1 bytes @ 0x0
  3338                           
  3339     0070                     ?_usart_init:	
  3340                           ; 1 bytes @ 0x0
  3341                           
  3342     0070                     ?_putch:	
  3343                           ; 1 bytes @ 0x0
  3344                           
  3345     0070                     ?_EUSART1_Write:	
  3346                           ; 1 bytes @ 0x0
  3347                           
  3348     0070                     ?_set_device_serial_number_to_i2c_slave_memorymap:	
  3349                           ; 1 bytes @ 0x0
  3350                           
  3351     0070                     ?_INTERRUPT_InterruptManager:	
  3352                           ; 1 bytes @ 0x0
  3353                           
  3354     0070                     ?_main:	
  3355                           ; 1 bytes @ 0x0
  3356                           
  3357     0070                     ?i1_get_ticks:	
  3358                           ; 1 bytes @ 0x0
  3359                           
  3360                           
  3361                           ; 4 bytes @ 0x0
  3362     0070                     	ds	1
  3363     0071                     i2c_slave_interrupt@isRead:
  3364                           
  3365                           ; 1 bytes @ 0x1
  3366     0071                     	ds	1
  3367     0072                     i2c_slave_interrupt@isNack:
  3368                           
  3369                           ; 1 bytes @ 0x2
  3370     0072                     	ds	1
  3371     0073                     i2c_slave_interrupt@value:
  3372                           
  3373                           ; 1 bytes @ 0x3
  3374     0073                     	ds	1
  3375     0074                     ??_INTERRUPT_InterruptManager:
  3376     0074                     ??i1_get_ticks:	
  3377                           ; 1 bytes @ 0x4
  3378                           
  3379                           
  3380                           ; 1 bytes @ 0x4
  3381     0074                     	ds	4
  3382                           
  3383                           	psect	cstackBANK0
  3384     0020                     __pcstackBANK0:
  3385     0020                     ??_PMD_Initialize:
  3386     0020                     ??_PIN_MANAGER_Initialize:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389     0020                     ??_OSCILLATOR_Initialize:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392     0020                     ??_tmr0_init:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395     0020                     ??_i2c_slave_init:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398     0020                     ?_i2c_slave_set_register:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401     0020                     ??_isprint:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404     0020                     ??_isdigit:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407     0020                     ??_isspace:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410     0020                     ??_toupper:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413     0020                     ??_isupper:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416     0020                     ??_SYSTEM_Initialize:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419     0020                     ??_usart_init:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422     0020                     ??_putch:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425     0020                     ??_EUSART1_Write:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428     0020                     ?__Umul8_16:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431     0020                     ?___wmul:	
  3432                           ; 2 bytes @ 0x0
  3433                           
  3434     0020                     ?_get_ticks:	
  3435                           ; 2 bytes @ 0x0
  3436                           
  3437     0020                     ?_get_ticks_with_lock:	
  3438                           ; 4 bytes @ 0x0
  3439                           
  3440     0020                     ?_calculate_diff:	
  3441                           ; 4 bytes @ 0x0
  3442                           
  3443     0020                     ?___lmul:	
  3444                           ; 4 bytes @ 0x0
  3445                           
  3446     0020                     ?___lldiv:	
  3447                           ; 4 bytes @ 0x0
  3448                           
  3449     0020                     putch@data:	
  3450                           ; 4 bytes @ 0x0
  3451                           
  3452     0020                     EUSART1_Write@txData:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455     0020                     i2c_slave_set_register@value:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458     0020                     __Umul8_16@multiplicand:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461     0020                     _isdigit$1223:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464     0020                     _isprint$1226:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467     0020                     _isspace$1260:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470     0020                     _isupper$1263:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473     0020                     ___wmul@multiplier:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476     0020                     calculate_diff@now:	
  3477                           ; 2 bytes @ 0x0
  3478                           
  3479     0020                     ___lmul@multiplier:	
  3480                           ; 4 bytes @ 0x0
  3481                           
  3482     0020                     ___lldiv@divisor:	
  3483                           ; 4 bytes @ 0x0
  3484                           
  3485                           
  3486                           ; 4 bytes @ 0x0
  3487     0020                     	ds	1
  3488     0021                     ??_i2c_slave_set_register:
  3489     0021                     i2c_slave_init@i:	
  3490                           ; 1 bytes @ 0x1
  3491                           
  3492     0021                     i2c_slave_set_register@registerAddress:	
  3493                           ; 1 bytes @ 0x1
  3494                           
  3495     0021                     isdigit@c:	
  3496                           ; 1 bytes @ 0x1
  3497                           
  3498     0021                     isprint@c:	
  3499                           ; 1 bytes @ 0x1
  3500                           
  3501     0021                     isspace@c:	
  3502                           ; 1 bytes @ 0x1
  3503                           
  3504     0021                     isupper@c:	
  3505                           ; 1 bytes @ 0x1
  3506                           
  3507     0021                     toupper@c:	
  3508                           ; 1 bytes @ 0x1
  3509                           
  3510                           
  3511                           ; 1 bytes @ 0x1
  3512     0021                     	ds	1
  3513     0022                     ?_i2c_slave_set_register_with_lock:
  3514     0022                     ??__Umul8_16:	
  3515                           ; 1 bytes @ 0x2
  3516                           
  3517     0022                     ??_isalpha:	
  3518                           ; 1 bytes @ 0x2
  3519                           
  3520     0022                     i2c_slave_set_register_with_lock@value:	
  3521                           ; 1 bytes @ 0x2
  3522                           
  3523     0022                     _isalpha$1257:	
  3524                           ; 1 bytes @ 0x2
  3525                           
  3526     0022                     ___wmul@multiplicand:	
  3527                           ; 1 bytes @ 0x2
  3528                           
  3529                           
  3530                           ; 2 bytes @ 0x2
  3531     0022                     	ds	1
  3532     0023                     ??_i2c_slave_set_register_with_lock:
  3533     0023                     i2c_slave_set_register_with_lock@registerAddress:	
  3534                           ; 1 bytes @ 0x3
  3535                           
  3536     0023                     isalpha@c:	
  3537                           ; 1 bytes @ 0x3
  3538                           
  3539                           
  3540                           ; 1 bytes @ 0x3
  3541     0023                     	ds	1
  3542     0024                     ??_get_ticks:
  3543     0024                     ??_get_ticks_with_lock:	
  3544                           ; 1 bytes @ 0x4
  3545                           
  3546     0024                     ??___wmul:	
  3547                           ; 1 bytes @ 0x4
  3548                           
  3549     0024                     ___wmul@product:	
  3550                           ; 1 bytes @ 0x4
  3551                           
  3552     0024                     __Umul8_16@product:	
  3553                           ; 2 bytes @ 0x4
  3554                           
  3555     0024                     get_ticks_with_lock@result:	
  3556                           ; 2 bytes @ 0x4
  3557                           
  3558     0024                     calculate_diff@prev_ticks:	
  3559                           ; 4 bytes @ 0x4
  3560                           
  3561     0024                     ___lmul@multiplicand:	
  3562                           ; 4 bytes @ 0x4
  3563                           
  3564     0024                     ___lldiv@dividend:	
  3565                           ; 4 bytes @ 0x4
  3566                           
  3567                           
  3568                           ; 4 bytes @ 0x4
  3569     0024                     	ds	2
  3570     0026                     __Umul8_16@word_mpld:
  3571                           
  3572                           ; 2 bytes @ 0x6
  3573     0026                     	ds	2
  3574     0028                     ??_calculate_diff:
  3575     0028                     ??___lmul:	
  3576                           ; 1 bytes @ 0x8
  3577                           
  3578     0028                     ??___lldiv:	
  3579                           ; 1 bytes @ 0x8
  3580                           
  3581     0028                     __Umul8_16@multiplier:	
  3582                           ; 1 bytes @ 0x8
  3583                           
  3584     0028                     ___lmul@product:	
  3585                           ; 1 bytes @ 0x8
  3586                           
  3587                           
  3588                           ; 4 bytes @ 0x8
  3589     0028                     	ds	1
  3590     0029                     ?___flmul:
  3591     0029                     ___lldiv@quotient:	
  3592                           ; 4 bytes @ 0x9
  3593                           
  3594     0029                     ___flmul@b:	
  3595                           ; 4 bytes @ 0x9
  3596                           
  3597                           
  3598                           ; 4 bytes @ 0x9
  3599     0029                     	ds	3
  3600     002C                     ?_strtol:
  3601     002C                     strtol@endptr:	
  3602                           ; 4 bytes @ 0xC
  3603                           
  3604                           
  3605                           ; 1 bytes @ 0xC
  3606     002C                     	ds	1
  3607     002D                     ___lldiv@counter:
  3608     002D                     strtol@base:	
  3609                           ; 1 bytes @ 0xD
  3610                           
  3611     002D                     ___flmul@a:	
  3612                           ; 2 bytes @ 0xD
  3613                           
  3614                           
  3615                           ; 4 bytes @ 0xD
  3616     002D                     	ds	1
  3617     002E                     ?___llmod:
  3618     002E                     ___llmod@divisor:	
  3619                           ; 4 bytes @ 0xE
  3620                           
  3621                           
  3622                           ; 4 bytes @ 0xE
  3623     002E                     	ds	2
  3624     0030                     ??_strtol:
  3625     0030                     calculate_diff@diff:	
  3626                           ; 1 bytes @ 0x10
  3627                           
  3628                           
  3629                           ; 4 bytes @ 0x10
  3630     0030                     	ds	1
  3631     0031                     ??___flmul:
  3632                           
  3633                           ; 1 bytes @ 0x11
  3634     0031                     	ds	1
  3635     0032                     ___llmod@dividend:
  3636                           
  3637                           ; 4 bytes @ 0x12
  3638     0032                     	ds	2
  3639     0034                     strtol@sign:
  3640                           
  3641                           ; 1 bytes @ 0x14
  3642     0034                     	ds	1
  3643     0035                     strtol@a:
  3644                           
  3645                           ; 4 bytes @ 0x15
  3646     0035                     	ds	1
  3647     0036                     ??___llmod:
  3648     0036                     ___flmul@sign:	
  3649                           ; 1 bytes @ 0x16
  3650                           
  3651                           
  3652                           ; 1 bytes @ 0x16
  3653     0036                     	ds	1
  3654     0037                     ___llmod@counter:
  3655     0037                     ___flmul@grs:	
  3656                           ; 1 bytes @ 0x17
  3657                           
  3658                           
  3659                           ; 4 bytes @ 0x17
  3660     0037                     	ds	1
  3661     0038                     ?_printf:
  3662     0038                     printf@f:	
  3663                           ; 2 bytes @ 0x18
  3664                           
  3665                           
  3666                           ; 2 bytes @ 0x18
  3667     0038                     	ds	1
  3668     0039                     strtol@s:
  3669                           
  3670                           ; 1 bytes @ 0x19
  3671     0039                     	ds	1
  3672     003A                     strtol@c:
  3673                           
  3674                           ; 1 bytes @ 0x1A
  3675     003A                     	ds	1
  3676     003B                     ??_set_device_serial_number_to_i2c_slave_memorymap:
  3677     003B                     ___flmul@aexp:	
  3678                           ; 1 bytes @ 0x1B
  3679                           
  3680                           
  3681                           ; 1 bytes @ 0x1B
  3682     003B                     	ds	1
  3683     003C                     ___flmul@bexp:
  3684                           
  3685                           ; 1 bytes @ 0x1C
  3686     003C                     	ds	1
  3687     003D                     set_device_serial_number_to_i2c_slave_memorymap@value:
  3688     003D                     ___flmul@prod:	
  3689                           ; 1 bytes @ 0x1D
  3690                           
  3691                           
  3692                           ; 4 bytes @ 0x1D
  3693     003D                     	ds	1
  3694     003E                     set_device_serial_number_to_i2c_slave_memorymap@buffer:
  3695                           
  3696                           ; 3 bytes @ 0x1E
  3697     003E                     	ds	2
  3698     0040                     ??_printf:
  3699                           
  3700                           ; 1 bytes @ 0x20
  3701     0040                     	ds	1
  3702     0041                     set_device_serial_number_to_i2c_slave_memorymap@i:
  3703     0041                     ___flmul@temp:	
  3704                           ; 1 bytes @ 0x21
  3705                           
  3706                           
  3707                           ; 2 bytes @ 0x21
  3708     0041                     	ds	2
  3709     0043                     ?___fltol:
  3710     0043                     ___fltol@f1:	
  3711                           ; 4 bytes @ 0x23
  3712                           
  3713                           
  3714                           ; 4 bytes @ 0x23
  3715     0043                     	ds	3
  3716     0046                     _printf$940:
  3717                           
  3718                           ; 2 bytes @ 0x26
  3719     0046                     	ds	1
  3720     0047                     ??___fltol:
  3721                           
  3722                           ; 1 bytes @ 0x27
  3723     0047                     	ds	1
  3724     0048                     printf@idx:
  3725                           
  3726                           ; 1 bytes @ 0x28
  3727     0048                     	ds	1
  3728     0049                     printf@prec:
  3729                           
  3730                           ; 2 bytes @ 0x29
  3731     0049                     	ds	2
  3732     004B                     ___fltol@sign1:
  3733     004B                     printf@cp:	
  3734                           ; 1 bytes @ 0x2B
  3735                           
  3736                           
  3737                           ; 2 bytes @ 0x2B
  3738     004B                     	ds	1
  3739     004C                     ___fltol@exp1:
  3740                           
  3741                           ; 1 bytes @ 0x2C
  3742     004C                     	ds	1
  3743     004D                     printf@val:
  3744                           
  3745                           ; 4 bytes @ 0x2D
  3746     004D                     	ds	4
  3747     0051                     printf@len:
  3748                           
  3749                           ; 2 bytes @ 0x31
  3750     0051                     	ds	2
  3751     0053                     printf@ap:
  3752                           
  3753                           ; 1 bytes @ 0x33
  3754     0053                     	ds	1
  3755     0054                     printf@flag:
  3756                           
  3757                           ; 1 bytes @ 0x34
  3758     0054                     	ds	1
  3759     0055                     printf@width:
  3760                           
  3761                           ; 2 bytes @ 0x35
  3762     0055                     	ds	2
  3763     0057                     printf@c:
  3764                           
  3765                           ; 1 bytes @ 0x37
  3766     0057                     	ds	1
  3767     0058                     ?_dump_buffer:
  3768     0058                     dump_buffer@size:	
  3769                           ; 1 bytes @ 0x38
  3770                           
  3771                           
  3772                           ; 2 bytes @ 0x38
  3773     0058                     	ds	2
  3774     005A                     ??_dump_buffer:
  3775                           
  3776                           ; 1 bytes @ 0x3A
  3777     005A                     	ds	4
  3778     005E                     _dump_buffer$746:
  3779                           
  3780                           ; 2 bytes @ 0x3E
  3781     005E                     	ds	2
  3782     0060                     dump_buffer@buffer:
  3783                           
  3784                           ; 1 bytes @ 0x40
  3785     0060                     	ds	1
  3786     0061                     dump_buffer@p:
  3787                           
  3788                           ; 1 bytes @ 0x41
  3789     0061                     	ds	1
  3790     0062                     dump_buffer@i:
  3791                           
  3792                           ; 2 bytes @ 0x42
  3793     0062                     	ds	2
  3794     0064                     dump_buffer@j:
  3795                           
  3796                           ; 2 bytes @ 0x44
  3797     0064                     	ds	2
  3798     0066                     ??_dump_memory_map:
  3799                           
  3800                           	psect	maintext
  3801     009D                     __pmaintext:	
  3802                           ; 1 bytes @ 0x46
  3803 ;;
  3804 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  3805 ;;
  3806 ;; *************** function _main *****************
  3807 ;; Defined at:
  3808 ;;		line 163 in file "main.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  i               1   62[BANK1 ] unsigned char 
  3813 ;;  temp            4   56[BANK1 ] float 
  3814 ;;  ph              4   52[BANK1 ] float 
  3815 ;;  payload_temp    4   48[BANK1 ] unsigned long 
  3816 ;;  payload         4   44[BANK1 ] unsigned long 
  3817 ;;  ph2             2   63[BANK1 ] unsigned int 
  3818 ;;  temp2           2   60[BANK1 ] unsigned int 
  3819 ;;  txbuf          32   12[BANK1 ] unsigned char [32]
  3820 ;;  now             4   65[BANK1 ] unsigned long 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : B3F/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;Total ram usage:       69 bytes
  3835 ;; Hardware stack levels required when called: 6
  3836 ;; This function calls:
  3837 ;;		_EUSART1_Write
  3838 ;;		_SYSTEM_Initialize
  3839 ;;		___flmul
  3840 ;;		___fltol
  3841 ;;		_calculate_diff
  3842 ;;		_dump_memory_map
  3843 ;;		_get_ticks
  3844 ;;		_get_ticks_with_lock
  3845 ;;		_i2c_slave_init
  3846 ;;		_i2c_slave_set_register
  3847 ;;		_printf
  3848 ;;		_set_device_serial_number_to_i2c_slave_memorymap
  3849 ;;		_tmr0_init
  3850 ;;		_usart_init
  3851 ;; This function is called by:
  3852 ;;		Startup code after reset
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856     009D                     _main:	
  3857                           ;psect for function _main
  3858                           
  3859     009D                     l3036:	
  3860                           ;incstack = 0
  3861                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3862                           
  3863                           
  3864                           ;main.c: 165: SYSTEM_Initialize();
  3865     009D  318A  2214  3180   	fcall	_SYSTEM_Initialize
  3866                           
  3867                           ;main.c: 166: tmr0_init();
  3868     00A0  318A  225F  3180   	fcall	_tmr0_init
  3869                           
  3870                           ;main.c: 167: usart_init();
  3871     00A3  318A  226C  3180   	fcall	_usart_init
  3872     00A6                     l3038:
  3873                           
  3874                           ;main.c: 168: i2c_slave_init();
  3875     00A6  318B  2333  3180   	fcall	_i2c_slave_init
  3876     00A9                     l3040:
  3877                           
  3878                           ;main.c: 171: (RC3PPS = 0x00);
  3879     00A9  017E               	movlb	62	; select bank62
  3880     00AA  01A3               	clrf	35	;volatile
  3881     00AB                     l3042:
  3882                           
  3883                           ;main.c: 172: (RA5PPS = 0x0F);
  3884     00AB  300F               	movlw	15
  3885     00AC  0095               	movwf	21	;volatile
  3886     00AD                     l3044:
  3887                           
  3888                           ;main.c: 173: printf("PH Probe with RS485\r\n");
  3889     00AD  3063               	movlw	low (STR_5| (0+32768))
  3890     00AE  0140               	movlb	0	; select bank0
  3891     00AF  00B8               	movwf	printf@f
  3892     00B0  3090               	movlw	high (STR_5| (0+32768))
  3893     00B1  00B9               	movwf	printf@f+1
  3894     00B2  3183  235B  3180   	fcall	_printf
  3895     00B5                     l3046:
  3896                           
  3897                           ;main.c: 174: printf("sn: %s\r\n", "0A01820001");
  3898     00B5  30C1               	movlw	low (STR_6| (0+32768))
  3899     00B6  0140               	movlb	0	; select bank0
  3900     00B7  00B8               	movwf	printf@f
  3901     00B8  3090               	movlw	high (STR_6| (0+32768))
  3902     00B9  00B9               	movwf	printf@f+1
  3903     00BA  30B6               	movlw	low (STR_3| (0+32768))
  3904     00BB  00BA               	movwf	low ((?_printf| 0+2))
  3905     00BC  3090               	movlw	high (STR_3| (0+32768))
  3906     00BD  00BB               	movwf	(low ((?_printf| 0+2))+1)
  3907     00BE  3183  235B  3180   	fcall	_printf
  3908     00C1                     l3048:
  3909                           
  3910                           ;main.c: 175: _delay((unsigned long)((10)*(1000000/4000.0)));
  3911     00C1  3004               	movlw	4
  3912     00C2  0141               	movlb	1	; select bank1
  3913     00C3  00A0               	movwf	??_main^(0+128)
  3914     00C4  303D               	movlw	61
  3915     00C5                     u2917:
  3916     00C5  0B89               	decfsz	9,f
  3917     00C6  28C5               	goto	u2917
  3918     00C7  0BA0               	decfsz	??_main^(0+128),f
  3919     00C8  28C5               	goto	u2917
  3920     00C9  3200               	nop2
  3921     00CA                     l3050:
  3922                           
  3923                           ;main.c: 176: (RC3PPS = 0x0F);
  3924     00CA  300F               	movlw	15
  3925     00CB  017E               	movlb	62	; select bank62
  3926     00CC  00A3               	movwf	35	;volatile
  3927     00CD                     l3052:
  3928                           
  3929                           ;main.c: 177: (RA5PPS = 0x00);
  3930     00CD  0195               	clrf	21	;volatile
  3931     00CE                     l3054:
  3932                           
  3933                           ;main.c: 180: INTCONbits.GIE = 1;
  3934     00CE  178B               	bsf	11,7	;volatile
  3935     00CF                     l3056:
  3936                           
  3937                           ;main.c: 181: INTCONbits.PEIE = 1;
  3938     00CF  170B               	bsf	11,6	;volatile
  3939     00D0                     l3058:
  3940                           
  3941                           ;main.c: 186: uint32_t now = get_ticks_with_lock();
  3942     00D0  318A  22B5  3180   	fcall	_get_ticks_with_lock
  3943     00D3  0140               	movlb	0	; select bank0
  3944     00D4  0823               	movf	?_get_ticks_with_lock+3,w
  3945     00D5  0141               	movlb	1	; select bank1
  3946     00D6  00E4               	movwf	(main@now+3)^(0+128)
  3947     00D7  0140               	movlb	0	; select bank0
  3948     00D8  0822               	movf	?_get_ticks_with_lock+2,w
  3949     00D9  0141               	movlb	1	; select bank1
  3950     00DA  00E3               	movwf	(main@now+2)^(0+128)
  3951     00DB  0140               	movlb	0	; select bank0
  3952     00DC  0821               	movf	?_get_ticks_with_lock+1,w
  3953     00DD  0141               	movlb	1	; select bank1
  3954     00DE  00E2               	movwf	(main@now+1)^(0+128)
  3955     00DF  0140               	movlb	0	; select bank0
  3956     00E0  0820               	movf	?_get_ticks_with_lock,w
  3957     00E1  0141               	movlb	1	; select bank1
  3958     00E2  00E1               	movwf	main@now^(0+128)
  3959     00E3                     l3060:
  3960                           
  3961                           ;main.c: 187: static uint32_t prev_ticks1 = 0;;main.c: 188: if(calculate_diff(now, prev_
      +                          ticks1) >= (4*1000LU)){
  3962     00E3  0864               	movf	(main@now+3)^(0+128),w
  3963     00E4  0140               	movlb	0	; select bank0
  3964     00E5  00A3               	movwf	calculate_diff@now+3
  3965     00E6  0141               	movlb	1	; select bank1
  3966     00E7  0863               	movf	(main@now+2)^(0+128),w
  3967     00E8  0140               	movlb	0	; select bank0
  3968     00E9  00A2               	movwf	calculate_diff@now+2
  3969     00EA  0141               	movlb	1	; select bank1
  3970     00EB  0862               	movf	(main@now+1)^(0+128),w
  3971     00EC  0140               	movlb	0	; select bank0
  3972     00ED  00A1               	movwf	calculate_diff@now+1
  3973     00EE  0141               	movlb	1	; select bank1
  3974     00EF  0861               	movf	main@now^(0+128),w
  3975     00F0  0140               	movlb	0	; select bank0
  3976     00F1  00A0               	movwf	calculate_diff@now
  3977     00F2  0141               	movlb	1	; select bank1
  3978     00F3  086C               	movf	(main@prev_ticks1+3)^(0+128),w
  3979     00F4  0140               	movlb	0	; select bank0
  3980     00F5  00A7               	movwf	calculate_diff@prev_ticks+3
  3981     00F6  0141               	movlb	1	; select bank1
  3982     00F7  086B               	movf	(main@prev_ticks1+2)^(0+128),w
  3983     00F8  0140               	movlb	0	; select bank0
  3984     00F9  00A6               	movwf	calculate_diff@prev_ticks+2
  3985     00FA  0141               	movlb	1	; select bank1
  3986     00FB  086A               	movf	(main@prev_ticks1+1)^(0+128),w
  3987     00FC  0140               	movlb	0	; select bank0
  3988     00FD  00A5               	movwf	calculate_diff@prev_ticks+1
  3989     00FE  0141               	movlb	1	; select bank1
  3990     00FF  0869               	movf	main@prev_ticks1^(0+128),w
  3991     0100  0140               	movlb	0	; select bank0
  3992     0101  00A4               	movwf	calculate_diff@prev_ticks
  3993     0102  318C  24A4  3180   	fcall	_calculate_diff
  3994     0105  0140               	movlb	0	; select bank0
  3995     0106  0823               	movf	?_calculate_diff+3,w
  3996     0107  1D03               	btfss	3,2
  3997     0108  2914               	goto	u2800
  3998     0109  0822               	movf	?_calculate_diff+2,w
  3999     010A  1D03               	btfss	3,2
  4000     010B  2914               	goto	u2800
  4001     010C  30A0               	movlw	160
  4002     010D  0220               	subwf	?_calculate_diff,w
  4003     010E  300F               	movlw	15
  4004     010F  3B21               	subwfb	?_calculate_diff+1,w
  4005     0110  1C03               	btfss	3,0
  4006     0111  2913               	goto	u2801
  4007     0112  2914               	goto	u2800
  4008     0113                     u2801:
  4009     0113  296D               	goto	l3092
  4010     0114                     u2800:
  4011     0114                     l3062:
  4012                           
  4013                           ;main.c: 189: prev_ticks1 = now;
  4014     0114  0141               	movlb	1	; select bank1
  4015     0115  0864               	movf	(main@now+3)^(0+128),w
  4016     0116  00EC               	movwf	(main@prev_ticks1+3)^(0+128)
  4017     0117  0863               	movf	(main@now+2)^(0+128),w
  4018     0118  00EB               	movwf	(main@prev_ticks1+2)^(0+128)
  4019     0119  0862               	movf	(main@now+1)^(0+128),w
  4020     011A  00EA               	movwf	(main@prev_ticks1+1)^(0+128)
  4021     011B  0861               	movf	main@now^(0+128),w
  4022     011C  00E9               	movwf	main@prev_ticks1^(0+128)
  4023     011D                     l3064:
  4024     011D  0140               	movlb	0	; select bank0
  4025     011E  111A               	bcf	26,2	;volatile
  4026     011F                     l3066:
  4027                           
  4028                           ;main.c: 192: (RC3PPS = 0x00);
  4029     011F  017E               	movlb	62	; select bank62
  4030     0120  01A3               	clrf	35	;volatile
  4031     0121                     l3068:
  4032                           
  4033                           ;main.c: 193: (RA5PPS = 0x0F);
  4034     0121  300F               	movlw	15
  4035     0122  0095               	movwf	21	;volatile
  4036     0123                     l3070:
  4037                           
  4038                           ;main.c: 194: printf("[%lu] Request\r\n", now);
  4039     0123  309B               	movlw	low (STR_8| (0+32768))
  4040     0124  0140               	movlb	0	; select bank0
  4041     0125  00B8               	movwf	printf@f
  4042     0126  3090               	movlw	high (STR_8| (0+32768))
  4043     0127  00B9               	movwf	printf@f+1
  4044     0128  0141               	movlb	1	; select bank1
  4045     0129  0864               	movf	(main@now+3)^(0+128),w
  4046     012A  0140               	movlb	0	; select bank0
  4047     012B  00BD               	movwf	?_printf+5
  4048     012C  0141               	movlb	1	; select bank1
  4049     012D  0863               	movf	(main@now+2)^(0+128),w
  4050     012E  0140               	movlb	0	; select bank0
  4051     012F  00BC               	movwf	?_printf+4
  4052     0130  0141               	movlb	1	; select bank1
  4053     0131  0862               	movf	(main@now+1)^(0+128),w
  4054     0132  0140               	movlb	0	; select bank0
  4055     0133  00BB               	movwf	?_printf+3
  4056     0134  0141               	movlb	1	; select bank1
  4057     0135  0861               	movf	main@now^(0+128),w
  4058     0136  0140               	movlb	0	; select bank0
  4059     0137  00BA               	movwf	?_printf+2
  4060     0138  3183  235B  3180   	fcall	_printf
  4061     013B                     l3072:
  4062                           
  4063                           ;main.c: 195: _delay((unsigned long)((10)*(1000000/4000.0)));
  4064     013B  3004               	movlw	4
  4065     013C  0141               	movlb	1	; select bank1
  4066     013D  00A0               	movwf	??_main^(0+128)
  4067     013E  303D               	movlw	61
  4068     013F                     u2927:
  4069     013F  0B89               	decfsz	9,f
  4070     0140  293F               	goto	u2927
  4071     0141  0BA0               	decfsz	??_main^(0+128),f
  4072     0142  293F               	goto	u2927
  4073     0143  3200               	nop2
  4074     0144                     l3074:
  4075                           
  4076                           ;main.c: 196: (RC3PPS = 0x0F);
  4077     0144  300F               	movlw	15
  4078     0145  017E               	movlb	62	; select bank62
  4079     0146  00A3               	movwf	35	;volatile
  4080     0147                     l3076:
  4081                           
  4082                           ;main.c: 197: (RA5PPS = 0x00);
  4083     0147  0195               	clrf	21	;volatile
  4084     0148                     l3078:
  4085                           
  4086                           ;main.c: 200: char txbuf[32] = {0x01, 0x03, 0x00, 0x01, 0x00, 0x04, 0x15, 0xC9};
  4087     0148  3040               	movlw	low main@F10508
  4088     0149  0086               	movwf	6
  4089     014A  3001               	movlw	high main@F10508
  4090     014B  0087               	movwf	7
  4091     014C  30AC               	movlw	low main@txbuf
  4092     014D  0084               	movwf	4
  4093     014E  3000               	movlw	high main@txbuf
  4094     014F  0085               	movwf	5
  4095     0150  3020               	movlw	32
  4096     0151  0141               	movlb	1	; select bank1
  4097     0152  00A0               	movwf	??_main^(0+128)
  4098     0153                     u2810:
  4099     0153  0016               	moviw fsr1++
  4100     0154  001A               	movwi fsr0++
  4101     0155  0BA0               	decfsz	??_main^(0+128),f
  4102     0156  2953               	goto	u2810
  4103     0157                     l3080:
  4104                           
  4105                           ;main.c: 201: for(uint8_t i=0; i<8; i++){
  4106     0157  01DE               	clrf	main@i^(0+128)
  4107     0158                     l3086:
  4108                           
  4109                           ;main.c: 202: EUSART1_Write(txbuf[i]);
  4110     0158  085E               	movf	main@i^(0+128),w
  4111     0159  3EAC               	addlw	(low (main@txbuf| 0))& (0+255)
  4112     015A  0086               	movwf	6
  4113     015B  0187               	clrf	7
  4114     015C  0801               	movf	1,w
  4115     015D  318A  2247  3180   	fcall	_EUSART1_Write
  4116     0160                     l3088:
  4117     0160  3001               	movlw	1
  4118     0161  0141               	movlb	1	; select bank1
  4119     0162  00A0               	movwf	??_main^(0+128)
  4120     0163  0820               	movf	??_main^(0+128),w
  4121     0164  07DE               	addwf	main@i^(0+128),f
  4122     0165                     l3090:
  4123     0165  3008               	movlw	8
  4124     0166  025E               	subwf	main@i^(0+128),w
  4125     0167  1C03               	skipc
  4126     0168  296A               	goto	u2821
  4127     0169  296B               	goto	u2820
  4128     016A                     u2821:
  4129     016A  2958               	goto	l3086
  4130     016B                     u2820:
  4131     016B                     l213:	
  4132                           ;main.c: 203: };;main.c: 204: do { LATCbits.LATC2 = 1; } while(0);
  4133                           
  4134     016B  0140               	movlb	0	; select bank0
  4135     016C  151A               	bsf	26,2	;volatile
  4136     016D                     l3092:
  4137                           
  4138                           ;main.c: 205: };main.c: 209: if(uart_rx_package_event){
  4139     016D  0141               	movlb	1	; select bank1
  4140     016E  086D               	movf	_uart_rx_package_event^(0+128),w	;volatile
  4141     016F  1903               	btfsc	3,2
  4142     0170  2972               	goto	u2831
  4143     0171  2973               	goto	u2830
  4144     0172                     u2831:
  4145     0172  2B08               	goto	l3152
  4146     0173                     u2830:
  4147     0173                     l3094:
  4148                           
  4149                           ;main.c: 210: uart_rx_package_event = 0;
  4150     0173  01ED               	clrf	_uart_rx_package_event^(0+128)	;volatile
  4151     0174                     l3096:
  4152     0174  0140               	movlb	0	; select bank0
  4153     0175  111A               	bcf	26,2	;volatile
  4154     0176                     l217:
  4155                           
  4156                           ;main.c: 221: rxbuffer_index = 0;
  4157     0176  01FB               	clrf	_rxbuffer_index	;volatile
  4158     0177                     l3098:
  4159                           
  4160                           ;main.c: 224: float ph = 0;
  4161     0177  3000               	movlw	0
  4162     0178  0141               	movlb	1	; select bank1
  4163     0179  00D7               	movwf	(main@ph+3)^(0+128)
  4164     017A  3000               	movlw	0
  4165     017B  00D6               	movwf	(main@ph+2)^(0+128)
  4166     017C  3000               	movlw	0
  4167     017D  00D5               	movwf	(main@ph+1)^(0+128)
  4168     017E  3000               	movlw	0
  4169     017F  00D4               	movwf	main@ph^(0+128)
  4170     0180                     l3100:
  4171                           
  4172                           ;main.c: 225: uint32_t payload = ((uint32_t)rxbuffer[5] << 24) |;main.c: 226: ((uint32_t
      +                          )rxbuffer[6]) << 16 |;main.c: 227: ((uint32_t)rxbuffer[3]) << 8 |;main.c: 228: ((uint32_
      +                          t)rxbuffer[4] << 0);
  4173     0180  0142               	movlb	2	; select bank2
  4174     0181  0824               	movf	(_rxbuffer^(0+256)+4),w	;volatile
  4175     0182  0141               	movlb	1	; select bank1
  4176     0183  00A0               	movwf	??_main^(0+128)
  4177     0184  01A1               	clrf	(??_main^(0+128)+1)
  4178     0185  01A2               	clrf	(??_main^(0+128)+2)
  4179     0186  01A3               	clrf	(??_main^(0+128)+3)
  4180     0187  0142               	movlb	2	; select bank2
  4181     0188  0823               	movf	(_rxbuffer^(0+256)+3),w	;volatile
  4182     0189  0141               	movlb	1	; select bank1
  4183     018A  00A4               	movwf	(??_main+4)^(0+128)
  4184     018B  01A5               	clrf	((??_main+4)^(0+128)+1)
  4185     018C  01A6               	clrf	((??_main+4)^(0+128)+2)
  4186     018D  01A7               	clrf	((??_main+4)^(0+128)+3)
  4187     018E  3008               	movlw	8
  4188     018F                     u2845:
  4189     018F  35A4               	lslf	(??_main+4)^(0+128),f
  4190     0190  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  4191     0191  0DA6               	rlf	((??_main+4)^(0+128)+2),f
  4192     0192  0DA7               	rlf	((??_main+4)^(0+128)+3),f
  4193     0193                     u2840:
  4194     0193  0B89               	decfsz	9,f
  4195     0194  298F               	goto	u2845
  4196     0195  0142               	movlb	2	; select bank2
  4197     0196  0826               	movf	(_rxbuffer^(0+256)+6),w	;volatile
  4198     0197  0141               	movlb	1	; select bank1
  4199     0198  00A8               	movwf	(??_main+8)^(0+128)
  4200     0199  01A9               	clrf	((??_main+8)^(0+128)+1)
  4201     019A  01AA               	clrf	((??_main+8)^(0+128)+2)
  4202     019B  01AB               	clrf	((??_main+8)^(0+128)+3)
  4203     019C  3010               	movlw	16
  4204     019D                     u2855:
  4205     019D  35A8               	lslf	(??_main+8)^(0+128),f
  4206     019E  0DA9               	rlf	((??_main+8)^(0+128)+1),f
  4207     019F  0DAA               	rlf	((??_main+8)^(0+128)+2),f
  4208     01A0  0DAB               	rlf	((??_main+8)^(0+128)+3),f
  4209     01A1                     u2850:
  4210     01A1  0B89               	decfsz	9,f
  4211     01A2  299D               	goto	u2855
  4212     01A3  0142               	movlb	2	; select bank2
  4213     01A4  0825               	movf	(_rxbuffer^(0+256)+5),w	;volatile
  4214     01A5  0141               	movlb	1	; select bank1
  4215     01A6  04AB               	iorwf	((??_main+8)^(0+128)+3),f
  4216     01A7  0828               	movf	(??_main+8)^(0+128),w
  4217     01A8  04A4               	iorwf	(??_main+4)^(0+128),f
  4218     01A9  0829               	movf	(??_main+9)^(0+128),w
  4219     01AA  04A5               	iorwf	((??_main+4)^(0+128)+1),f
  4220     01AB  082A               	movf	(??_main+10)^(0+128),w
  4221     01AC  04A6               	iorwf	((??_main+4)^(0+128)+2),f
  4222     01AD  082B               	movf	(??_main+11)^(0+128),w
  4223     01AE  04A7               	iorwf	((??_main+4)^(0+128)+3),f
  4224     01AF  0820               	movf	??_main^(0+128),w
  4225     01B0  0424               	iorwf	(??_main+4)^(0+128),w
  4226     01B1  00CC               	movwf	main@payload^(0+128)
  4227     01B2  0821               	movf	(??_main+1)^(0+128),w
  4228     01B3  0425               	iorwf	(??_main+5)^(0+128),w
  4229     01B4  00CD               	movwf	(main@payload+1)^(0+128)
  4230     01B5  0822               	movf	(??_main+2)^(0+128),w
  4231     01B6  0426               	iorwf	(??_main+6)^(0+128),w
  4232     01B7  00CE               	movwf	(main@payload+2)^(0+128)
  4233     01B8  0823               	movf	(??_main+3)^(0+128),w
  4234     01B9  0427               	iorwf	(??_main+7)^(0+128),w
  4235     01BA  00CF               	movwf	(main@payload+3)^(0+128)
  4236     01BB                     l3102:
  4237                           
  4238                           ;main.c: 229: __builtin_memcpy(&ph,&payload,sizeof(float));
  4239     01BB  30D4               	movlw	low (main@ph| 0)
  4240     01BC  0086               	movwf	6
  4241     01BD  0187               	clrf	7
  4242     01BE  29CD               	goto	mcp0
  4243     01BF                     mcp0b:
  4244     01BF  30CC               	movlw	low (main@payload| 0)
  4245     01C0  0084               	movwf	4
  4246     01C1  0185               	clrf	5
  4247     01C2  3004               	movlw	4
  4248     01C3  0141               	movlb	1	; select bank1
  4249     01C4  00A0               	movwf	??_main^(0+128)
  4250     01C5  0820               	movf	??_main^(0+128),w
  4251     01C6  1903               	skipnz
  4252     01C7  29CE               	goto	mcp0z
  4253     01C8                     u286m0:
  4254     01C8  0012               	moviw fsr0++
  4255     01C9  001E               	movwi fsr1++
  4256     01CA  0BA0               	decfsz	??_main^(0+128),f
  4257     01CB  29C8               	goto	u286m0
  4258     01CC  29CE               	goto	u286m1
  4259     01CD                     mcp0:
  4260     01CD  29BF               	goto	mcp0b
  4261     01CE                     u286m1:
  4262     01CE                     mcp0z:
  4263     01CE                     l3104:
  4264                           
  4265                           ;main.c: 230: uint16_t ph2 = (uint16_t)(ph * 100);
  4266     01CE  0141               	movlb	1	; select bank1
  4267     01CF  0857               	movf	(main@ph+3)^(0+128),w
  4268     01D0  0140               	movlb	0	; select bank0
  4269     01D1  00B0               	movwf	___flmul@a+3
  4270     01D2  0141               	movlb	1	; select bank1
  4271     01D3  0856               	movf	(main@ph+2)^(0+128),w
  4272     01D4  0140               	movlb	0	; select bank0
  4273     01D5  00AF               	movwf	___flmul@a+2
  4274     01D6  0141               	movlb	1	; select bank1
  4275     01D7  0855               	movf	(main@ph+1)^(0+128),w
  4276     01D8  0140               	movlb	0	; select bank0
  4277     01D9  00AE               	movwf	___flmul@a+1
  4278     01DA  0141               	movlb	1	; select bank1
  4279     01DB  0854               	movf	main@ph^(0+128),w
  4280     01DC  0140               	movlb	0	; select bank0
  4281     01DD  00AD               	movwf	___flmul@a
  4282     01DE  3042               	movlw	66
  4283     01DF  00AC               	movwf	___flmul@b+3
  4284     01E0  30C8               	movlw	200
  4285     01E1  00AB               	movwf	___flmul@b+2
  4286     01E2  3000               	movlw	0
  4287     01E3  00AA               	movwf	___flmul@b+1
  4288     01E4  3000               	movlw	0
  4289     01E5  00A9               	movwf	___flmul@b
  4290     01E6  318D  25C5  3180   	fcall	___flmul
  4291     01E9  0140               	movlb	0	; select bank0
  4292     01EA  082C               	movf	?___flmul+3,w
  4293     01EB  00C6               	movwf	___fltol@f1+3
  4294     01EC  082B               	movf	?___flmul+2,w
  4295     01ED  00C5               	movwf	___fltol@f1+2
  4296     01EE  082A               	movf	?___flmul+1,w
  4297     01EF  00C4               	movwf	___fltol@f1+1
  4298     01F0  0829               	movf	?___flmul,w
  4299     01F1  00C3               	movwf	___fltol@f1
  4300     01F2  318D  2554  3180   	fcall	___fltol
  4301     01F5  0140               	movlb	0	; select bank0
  4302     01F6  0844               	movf	?___fltol+1,w
  4303     01F7  0141               	movlb	1	; select bank1
  4304     01F8  00E0               	movwf	(main@ph2+1)^(0+128)
  4305     01F9  0140               	movlb	0	; select bank0
  4306     01FA  0843               	movf	?___fltol,w
  4307     01FB  0141               	movlb	1	; select bank1
  4308     01FC  00DF               	movwf	main@ph2^(0+128)
  4309     01FD                     l3106:
  4310                           
  4311                           ;main.c: 231: printf("PH: %u\r\n", ph2);
  4312     01FD  30CA               	movlw	low (STR_9| (0+32768))
  4313     01FE  0140               	movlb	0	; select bank0
  4314     01FF  00B8               	movwf	printf@f
  4315     0200  3090               	movlw	high (STR_9| (0+32768))
  4316     0201  00B9               	movwf	printf@f+1
  4317     0202  0141               	movlb	1	; select bank1
  4318     0203  0860               	movf	(main@ph2+1)^(0+128),w
  4319     0204  0140               	movlb	0	; select bank0
  4320     0205  00BB               	movwf	?_printf+3
  4321     0206  0141               	movlb	1	; select bank1
  4322     0207  085F               	movf	main@ph2^(0+128),w
  4323     0208  0140               	movlb	0	; select bank0
  4324     0209  00BA               	movwf	?_printf+2
  4325     020A  3183  235B  3180   	fcall	_printf
  4326     020D                     l3108:
  4327                           
  4328                           ;main.c: 233: float temp = 0;
  4329     020D  3000               	movlw	0
  4330     020E  0141               	movlb	1	; select bank1
  4331     020F  00DB               	movwf	(main@temp+3)^(0+128)
  4332     0210  3000               	movlw	0
  4333     0211  00DA               	movwf	(main@temp+2)^(0+128)
  4334     0212  3000               	movlw	0
  4335     0213  00D9               	movwf	(main@temp+1)^(0+128)
  4336     0214  3000               	movlw	0
  4337     0215  00D8               	movwf	main@temp^(0+128)
  4338     0216                     l3110:
  4339                           
  4340                           ;main.c: 234: uint32_t payload_temp = ((uint32_t)rxbuffer[9] << 24) |;main.c: 235: ((uin
      +                          t32_t)rxbuffer[10]) << 16 |;main.c: 236: ((uint32_t)rxbuffer[7]) << 8 |;main.c: 237: ((u
      +                          int32_t)rxbuffer[8] << 0);
  4341     0216  0142               	movlb	2	; select bank2
  4342     0217  0828               	movf	(_rxbuffer^(0+256)+8),w	;volatile
  4343     0218  0141               	movlb	1	; select bank1
  4344     0219  00A0               	movwf	??_main^(0+128)
  4345     021A  01A1               	clrf	(??_main^(0+128)+1)
  4346     021B  01A2               	clrf	(??_main^(0+128)+2)
  4347     021C  01A3               	clrf	(??_main^(0+128)+3)
  4348     021D  0142               	movlb	2	; select bank2
  4349     021E  0827               	movf	(_rxbuffer^(0+256)+7),w	;volatile
  4350     021F  0141               	movlb	1	; select bank1
  4351     0220  00A4               	movwf	(??_main+4)^(0+128)
  4352     0221  01A5               	clrf	((??_main+4)^(0+128)+1)
  4353     0222  01A6               	clrf	((??_main+4)^(0+128)+2)
  4354     0223  01A7               	clrf	((??_main+4)^(0+128)+3)
  4355     0224  3008               	movlw	8
  4356     0225                     u2875:
  4357     0225  35A4               	lslf	(??_main+4)^(0+128),f
  4358     0226  0DA5               	rlf	((??_main+4)^(0+128)+1),f
  4359     0227  0DA6               	rlf	((??_main+4)^(0+128)+2),f
  4360     0228  0DA7               	rlf	((??_main+4)^(0+128)+3),f
  4361     0229                     u2870:
  4362     0229  0B89               	decfsz	9,f
  4363     022A  2A25               	goto	u2875
  4364     022B  0142               	movlb	2	; select bank2
  4365     022C  082A               	movf	(_rxbuffer^(0+256)+10),w	;volatile
  4366     022D  0141               	movlb	1	; select bank1
  4367     022E  00A8               	movwf	(??_main+8)^(0+128)
  4368     022F  01A9               	clrf	((??_main+8)^(0+128)+1)
  4369     0230  01AA               	clrf	((??_main+8)^(0+128)+2)
  4370     0231  01AB               	clrf	((??_main+8)^(0+128)+3)
  4371     0232  3010               	movlw	16
  4372     0233                     u2885:
  4373     0233  35A8               	lslf	(??_main+8)^(0+128),f
  4374     0234  0DA9               	rlf	((??_main+8)^(0+128)+1),f
  4375     0235  0DAA               	rlf	((??_main+8)^(0+128)+2),f
  4376     0236  0DAB               	rlf	((??_main+8)^(0+128)+3),f
  4377     0237                     u2880:
  4378     0237  0B89               	decfsz	9,f
  4379     0238  2A33               	goto	u2885
  4380     0239  0142               	movlb	2	; select bank2
  4381     023A  0829               	movf	(_rxbuffer^(0+256)+9),w	;volatile
  4382     023B  0141               	movlb	1	; select bank1
  4383     023C  04AB               	iorwf	((??_main+8)^(0+128)+3),f
  4384     023D  0828               	movf	(??_main+8)^(0+128),w
  4385     023E  04A4               	iorwf	(??_main+4)^(0+128),f
  4386     023F  0829               	movf	(??_main+9)^(0+128),w
  4387     0240  04A5               	iorwf	((??_main+4)^(0+128)+1),f
  4388     0241  082A               	movf	(??_main+10)^(0+128),w
  4389     0242  04A6               	iorwf	((??_main+4)^(0+128)+2),f
  4390     0243  082B               	movf	(??_main+11)^(0+128),w
  4391     0244  04A7               	iorwf	((??_main+4)^(0+128)+3),f
  4392     0245  0820               	movf	??_main^(0+128),w
  4393     0246  0424               	iorwf	(??_main+4)^(0+128),w
  4394     0247  00D0               	movwf	main@payload_temp^(0+128)
  4395     0248  0821               	movf	(??_main+1)^(0+128),w
  4396     0249  0425               	iorwf	(??_main+5)^(0+128),w
  4397     024A  00D1               	movwf	(main@payload_temp+1)^(0+128)
  4398     024B  0822               	movf	(??_main+2)^(0+128),w
  4399     024C  0426               	iorwf	(??_main+6)^(0+128),w
  4400     024D  00D2               	movwf	(main@payload_temp+2)^(0+128)
  4401     024E  0823               	movf	(??_main+3)^(0+128),w
  4402     024F  0427               	iorwf	(??_main+7)^(0+128),w
  4403     0250  00D3               	movwf	(main@payload_temp+3)^(0+128)
  4404     0251                     l3112:
  4405                           
  4406                           ;main.c: 238: __builtin_memcpy(&temp,&payload_temp,sizeof(float));
  4407     0251  30D8               	movlw	low (main@temp| 0)
  4408     0252  0086               	movwf	6
  4409     0253  0187               	clrf	7
  4410     0254  2A63               	goto	mcp1
  4411     0255                     mcp1b:
  4412     0255  30D0               	movlw	low (main@payload_temp| 0)
  4413     0256  0084               	movwf	4
  4414     0257  0185               	clrf	5
  4415     0258  3004               	movlw	4
  4416     0259  0141               	movlb	1	; select bank1
  4417     025A  00A0               	movwf	??_main^(0+128)
  4418     025B  0820               	movf	??_main^(0+128),w
  4419     025C  1903               	skipnz
  4420     025D  2A64               	goto	mcp1z
  4421     025E                     u289m0:
  4422     025E  0012               	moviw fsr0++
  4423     025F  001E               	movwi fsr1++
  4424     0260  0BA0               	decfsz	??_main^(0+128),f
  4425     0261  2A5E               	goto	u289m0
  4426     0262  2A64               	goto	u289m1
  4427     0263                     mcp1:
  4428     0263  2A55               	goto	mcp1b
  4429     0264                     u289m1:
  4430     0264                     mcp1z:
  4431     0264                     l3114:
  4432                           
  4433                           ;main.c: 239: uint16_t temp2 = (uint16_t)(temp * 100);
  4434     0264  0141               	movlb	1	; select bank1
  4435     0265  085B               	movf	(main@temp+3)^(0+128),w
  4436     0266  0140               	movlb	0	; select bank0
  4437     0267  00B0               	movwf	___flmul@a+3
  4438     0268  0141               	movlb	1	; select bank1
  4439     0269  085A               	movf	(main@temp+2)^(0+128),w
  4440     026A  0140               	movlb	0	; select bank0
  4441     026B  00AF               	movwf	___flmul@a+2
  4442     026C  0141               	movlb	1	; select bank1
  4443     026D  0859               	movf	(main@temp+1)^(0+128),w
  4444     026E  0140               	movlb	0	; select bank0
  4445     026F  00AE               	movwf	___flmul@a+1
  4446     0270  0141               	movlb	1	; select bank1
  4447     0271  0858               	movf	main@temp^(0+128),w
  4448     0272  0140               	movlb	0	; select bank0
  4449     0273  00AD               	movwf	___flmul@a
  4450     0274  3042               	movlw	66
  4451     0275  00AC               	movwf	___flmul@b+3
  4452     0276  30C8               	movlw	200
  4453     0277  00AB               	movwf	___flmul@b+2
  4454     0278  3000               	movlw	0
  4455     0279  00AA               	movwf	___flmul@b+1
  4456     027A  3000               	movlw	0
  4457     027B  00A9               	movwf	___flmul@b
  4458     027C  318D  25C5  3180   	fcall	___flmul
  4459     027F  0140               	movlb	0	; select bank0
  4460     0280  082C               	movf	?___flmul+3,w
  4461     0281  00C6               	movwf	___fltol@f1+3
  4462     0282  082B               	movf	?___flmul+2,w
  4463     0283  00C5               	movwf	___fltol@f1+2
  4464     0284  082A               	movf	?___flmul+1,w
  4465     0285  00C4               	movwf	___fltol@f1+1
  4466     0286  0829               	movf	?___flmul,w
  4467     0287  00C3               	movwf	___fltol@f1
  4468     0288  318D  2554  3180   	fcall	___fltol
  4469     028B  0140               	movlb	0	; select bank0
  4470     028C  0844               	movf	?___fltol+1,w
  4471     028D  0141               	movlb	1	; select bank1
  4472     028E  00DD               	movwf	(main@temp2+1)^(0+128)
  4473     028F  0140               	movlb	0	; select bank0
  4474     0290  0843               	movf	?___fltol,w
  4475     0291  0141               	movlb	1	; select bank1
  4476     0292  00DC               	movwf	main@temp2^(0+128)
  4477     0293                     l3116:
  4478                           
  4479                           ;main.c: 240: printf("TEMP: %u\r\n", temp2);
  4480     0293  30AB               	movlw	low (STR_10| (0+32768))
  4481     0294  0140               	movlb	0	; select bank0
  4482     0295  00B8               	movwf	printf@f
  4483     0296  3090               	movlw	high (STR_10| (0+32768))
  4484     0297  00B9               	movwf	printf@f+1
  4485     0298  0141               	movlb	1	; select bank1
  4486     0299  085D               	movf	(main@temp2+1)^(0+128),w
  4487     029A  0140               	movlb	0	; select bank0
  4488     029B  00BB               	movwf	?_printf+3
  4489     029C  0141               	movlb	1	; select bank1
  4490     029D  085C               	movf	main@temp2^(0+128),w
  4491     029E  0140               	movlb	0	; select bank0
  4492     029F  00BA               	movwf	?_printf+2
  4493     02A0  3183  235B  3180   	fcall	_printf
  4494                           
  4495                           ;main.c: 243: (RC3PPS = 0x00);
  4496     02A3  017E               	movlb	62	; select bank62
  4497     02A4  01A3               	clrf	35	;volatile
  4498     02A5                     l3118:
  4499                           
  4500                           ;main.c: 244: (RA5PPS = 0x0F);
  4501     02A5  300F               	movlw	15
  4502     02A6  0095               	movwf	21	;volatile
  4503     02A7                     l3120:
  4504                           
  4505                           ;main.c: 247: _delay((unsigned long)((10)*(1000000/4000.0)));
  4506     02A7  3004               	movlw	4
  4507     02A8  0141               	movlb	1	; select bank1
  4508     02A9  00A0               	movwf	??_main^(0+128)
  4509     02AA  303D               	movlw	61
  4510     02AB                     u2937:
  4511     02AB  0B89               	decfsz	9,f
  4512     02AC  2AAB               	goto	u2937
  4513     02AD  0BA0               	decfsz	??_main^(0+128),f
  4514     02AE  2AAB               	goto	u2937
  4515     02AF  3200               	nop2
  4516     02B0                     l3122:
  4517                           
  4518                           ;main.c: 248: (RC3PPS = 0x0F);
  4519     02B0  300F               	movlw	15
  4520     02B1  017E               	movlb	62	; select bank62
  4521     02B2  00A3               	movwf	35	;volatile
  4522     02B3                     l3124:
  4523                           
  4524                           ;main.c: 249: (RA5PPS = 0x00);
  4525     02B3  0195               	clrf	21	;volatile
  4526     02B4                     l3126:
  4527                           
  4528                           ;main.c: 253: GIE = 0;
  4529     02B4  138B               	bcf	11,7	;volatile
  4530     02B5                     l3128:
  4531                           
  4532                           ;main.c: 254: i2c_slave_set_register(0x00, (uint8_t)(ph2 >> 8) & 0xFF);
  4533     02B5  0141               	movlb	1	; select bank1
  4534     02B6  0860               	movf	(main@ph2+1)^(0+128),w
  4535     02B7  0140               	movlb	0	; select bank0
  4536     02B8  00A0               	movwf	i2c_slave_set_register@value
  4537     02B9  3000               	movlw	0
  4538     02BA  318A  2232  3180   	fcall	_i2c_slave_set_register
  4539     02BD                     l3130:
  4540                           
  4541                           ;main.c: 255: i2c_slave_set_register(0x01, (uint8_t)(ph2 >> 0) & 0xFF);
  4542     02BD  0141               	movlb	1	; select bank1
  4543     02BE  085F               	movf	main@ph2^(0+128),w
  4544     02BF  0140               	movlb	0	; select bank0
  4545     02C0  00A0               	movwf	i2c_slave_set_register@value
  4546     02C1  3001               	movlw	1
  4547     02C2  318A  2232  3180   	fcall	_i2c_slave_set_register
  4548     02C5                     l3132:
  4549                           
  4550                           ;main.c: 256: i2c_slave_set_register(0x02, (uint8_t)(temp2 >> 8) & 0xFF);
  4551     02C5  0141               	movlb	1	; select bank1
  4552     02C6  085D               	movf	(main@temp2+1)^(0+128),w
  4553     02C7  0140               	movlb	0	; select bank0
  4554     02C8  00A0               	movwf	i2c_slave_set_register@value
  4555     02C9  3002               	movlw	2
  4556     02CA  318A  2232  3180   	fcall	_i2c_slave_set_register
  4557     02CD                     l3134:
  4558                           
  4559                           ;main.c: 257: i2c_slave_set_register(0x03, (uint8_t)(temp2 >> 0) & 0xFF);
  4560     02CD  0141               	movlb	1	; select bank1
  4561     02CE  085C               	movf	main@temp2^(0+128),w
  4562     02CF  0140               	movlb	0	; select bank0
  4563     02D0  00A0               	movwf	i2c_slave_set_register@value
  4564     02D1  3003               	movlw	3
  4565     02D2  318A  2232  3180   	fcall	_i2c_slave_set_register
  4566     02D5                     l3136:
  4567                           
  4568                           ;main.c: 258: GIE = 1;
  4569     02D5  178B               	bsf	11,7	;volatile
  4570     02D6                     l3138:
  4571     02D6  0140               	movlb	0	; select bank0
  4572     02D7  151A               	bsf	26,2	;volatile
  4573     02D8                     l3140:
  4574                           
  4575                           ;main.c: 262: (RC3PPS = 0x00);
  4576     02D8  017E               	movlb	62	; select bank62
  4577     02D9  01A3               	clrf	35	;volatile
  4578     02DA                     l3142:
  4579                           
  4580                           ;main.c: 263: (RA5PPS = 0x0F);
  4581     02DA  300F               	movlw	15
  4582     02DB  0095               	movwf	21	;volatile
  4583     02DC                     l3144:
  4584                           
  4585                           ;main.c: 264: dump_memory_map();
  4586     02DC  318A  221E  3180   	fcall	_dump_memory_map
  4587     02DF                     l3146:
  4588                           
  4589                           ;main.c: 265: printf("[%lu] PH: %u (0.01*unit)\r\n", get_ticks(), ph2);
  4590     02DF  3020               	movlw	low (STR_11| (0+32768))
  4591     02E0  0140               	movlb	0	; select bank0
  4592     02E1  00B8               	movwf	printf@f
  4593     02E2  3090               	movlw	high (STR_11| (0+32768))
  4594     02E3  00B9               	movwf	printf@f+1
  4595     02E4  318A  2228  3180   	fcall	_get_ticks
  4596     02E7  0140               	movlb	0	; select bank0
  4597     02E8  0823               	movf	?_get_ticks+3,w
  4598     02E9  00BD               	movwf	?_printf+5
  4599     02EA  0822               	movf	?_get_ticks+2,w
  4600     02EB  00BC               	movwf	?_printf+4
  4601     02EC  0821               	movf	?_get_ticks+1,w
  4602     02ED  00BB               	movwf	?_printf+3
  4603     02EE  0820               	movf	?_get_ticks,w
  4604     02EF  00BA               	movwf	?_printf+2
  4605     02F0  0141               	movlb	1	; select bank1
  4606     02F1  0860               	movf	(main@ph2+1)^(0+128),w
  4607     02F2  0140               	movlb	0	; select bank0
  4608     02F3  00BF               	movwf	?_printf+7
  4609     02F4  0141               	movlb	1	; select bank1
  4610     02F5  085F               	movf	main@ph2^(0+128),w
  4611     02F6  0140               	movlb	0	; select bank0
  4612     02F7  00BE               	movwf	?_printf+6
  4613     02F8  3183  235B  3180   	fcall	_printf
  4614     02FB                     l3148:
  4615                           
  4616                           ;main.c: 266: _delay((unsigned long)((10)*(1000000/4000.0)));
  4617     02FB  3004               	movlw	4
  4618     02FC  0141               	movlb	1	; select bank1
  4619     02FD  00A0               	movwf	??_main^(0+128)
  4620     02FE  303D               	movlw	61
  4621     02FF                     u2947:
  4622     02FF  0B89               	decfsz	9,f
  4623     0300  2AFF               	goto	u2947
  4624     0301  0BA0               	decfsz	??_main^(0+128),f
  4625     0302  2AFF               	goto	u2947
  4626     0303  3200               	nop2
  4627     0304                     l3150:
  4628                           
  4629                           ;main.c: 267: (RC3PPS = 0x0F);
  4630     0304  300F               	movlw	15
  4631     0305  017E               	movlb	62	; select bank62
  4632     0306  00A3               	movwf	35	;volatile
  4633                           
  4634                           ;main.c: 268: (RA5PPS = 0x00);
  4635     0307  0195               	clrf	21	;volatile
  4636     0308                     l3152:
  4637                           
  4638                           ;main.c: 270: };main.c: 272: now = get_ticks_with_lock();
  4639     0308  318A  22B5  3180   	fcall	_get_ticks_with_lock
  4640     030B  0140               	movlb	0	; select bank0
  4641     030C  0823               	movf	?_get_ticks_with_lock+3,w
  4642     030D  0141               	movlb	1	; select bank1
  4643     030E  00E4               	movwf	(main@now+3)^(0+128)
  4644     030F  0140               	movlb	0	; select bank0
  4645     0310  0822               	movf	?_get_ticks_with_lock+2,w
  4646     0311  0141               	movlb	1	; select bank1
  4647     0312  00E3               	movwf	(main@now+2)^(0+128)
  4648     0313  0140               	movlb	0	; select bank0
  4649     0314  0821               	movf	?_get_ticks_with_lock+1,w
  4650     0315  0141               	movlb	1	; select bank1
  4651     0316  00E2               	movwf	(main@now+1)^(0+128)
  4652     0317  0140               	movlb	0	; select bank0
  4653     0318  0820               	movf	?_get_ticks_with_lock,w
  4654     0319  0141               	movlb	1	; select bank1
  4655     031A  00E1               	movwf	main@now^(0+128)
  4656     031B                     l3154:
  4657                           
  4658                           ;main.c: 273: static uint32_t prev_ticks2 = 0;;main.c: 274: if(calculate_diff(now, prev_
      +                          ticks2) >= 2000){
  4659     031B  0864               	movf	(main@now+3)^(0+128),w
  4660     031C  0140               	movlb	0	; select bank0
  4661     031D  00A3               	movwf	calculate_diff@now+3
  4662     031E  0141               	movlb	1	; select bank1
  4663     031F  0863               	movf	(main@now+2)^(0+128),w
  4664     0320  0140               	movlb	0	; select bank0
  4665     0321  00A2               	movwf	calculate_diff@now+2
  4666     0322  0141               	movlb	1	; select bank1
  4667     0323  0862               	movf	(main@now+1)^(0+128),w
  4668     0324  0140               	movlb	0	; select bank0
  4669     0325  00A1               	movwf	calculate_diff@now+1
  4670     0326  0141               	movlb	1	; select bank1
  4671     0327  0861               	movf	main@now^(0+128),w
  4672     0328  0140               	movlb	0	; select bank0
  4673     0329  00A0               	movwf	calculate_diff@now
  4674     032A  0141               	movlb	1	; select bank1
  4675     032B  0868               	movf	(main@prev_ticks2+3)^(0+128),w
  4676     032C  0140               	movlb	0	; select bank0
  4677     032D  00A7               	movwf	calculate_diff@prev_ticks+3
  4678     032E  0141               	movlb	1	; select bank1
  4679     032F  0867               	movf	(main@prev_ticks2+2)^(0+128),w
  4680     0330  0140               	movlb	0	; select bank0
  4681     0331  00A6               	movwf	calculate_diff@prev_ticks+2
  4682     0332  0141               	movlb	1	; select bank1
  4683     0333  0866               	movf	(main@prev_ticks2+1)^(0+128),w
  4684     0334  0140               	movlb	0	; select bank0
  4685     0335  00A5               	movwf	calculate_diff@prev_ticks+1
  4686     0336  0141               	movlb	1	; select bank1
  4687     0337  0865               	movf	main@prev_ticks2^(0+128),w
  4688     0338  0140               	movlb	0	; select bank0
  4689     0339  00A4               	movwf	calculate_diff@prev_ticks
  4690     033A  318C  24A4  3180   	fcall	_calculate_diff
  4691     033D  0140               	movlb	0	; select bank0
  4692     033E  0823               	movf	?_calculate_diff+3,w
  4693     033F  1D03               	btfss	3,2
  4694     0340  2B4C               	goto	u2900
  4695     0341  0822               	movf	?_calculate_diff+2,w
  4696     0342  1D03               	btfss	3,2
  4697     0343  2B4C               	goto	u2900
  4698     0344  30D0               	movlw	208
  4699     0345  0220               	subwf	?_calculate_diff,w
  4700     0346  3007               	movlw	7
  4701     0347  3B21               	subwfb	?_calculate_diff+1,w
  4702     0348  1C03               	btfss	3,0
  4703     0349  2B4B               	goto	u2901
  4704     034A  2B4C               	goto	u2900
  4705     034B                     u2901:
  4706     034B  28D0               	goto	l3058
  4707     034C                     u2900:
  4708     034C                     l3156:
  4709                           
  4710                           ;main.c: 275: prev_ticks2 = now;
  4711     034C  0141               	movlb	1	; select bank1
  4712     034D  0864               	movf	(main@now+3)^(0+128),w
  4713     034E  00E8               	movwf	(main@prev_ticks2+3)^(0+128)
  4714     034F  0863               	movf	(main@now+2)^(0+128),w
  4715     0350  00E7               	movwf	(main@prev_ticks2+2)^(0+128)
  4716     0351  0862               	movf	(main@now+1)^(0+128),w
  4717     0352  00E6               	movwf	(main@prev_ticks2+1)^(0+128)
  4718     0353  0861               	movf	main@now^(0+128),w
  4719     0354  00E5               	movwf	main@prev_ticks2^(0+128)
  4720     0355                     l3158:
  4721                           
  4722                           ;main.c: 277: set_device_serial_number_to_i2c_slave_memorymap();
  4723     0355  318B  23CB  3180   	fcall	_set_device_serial_number_to_i2c_slave_memorymap
  4724     0358  28D0               	goto	l3058
  4725     0359  3180  2866         	ljmp	start
  4726     035B                     __end_of_main:
  4727                           
  4728                           	psect	text1
  4729     0A6C                     __ptext1:	
  4730 ;; *************** function _usart_init *****************
  4731 ;; Defined at:
  4732 ;;		line 54 in file "main.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;		None
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;Total ram usage:        0 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; Hardware stack levels required when called: 2
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760     0A6C                     _usart_init:	
  4761                           ;psect for function _usart_init
  4762                           
  4763     0A6C                     l2674:	
  4764                           ;incstack = 0
  4765                           ; Regs used in _usart_init: [wreg+status,2]
  4766                           
  4767                           
  4768                           ;main.c: 55: PIE3bits.RC1IE = 0;
  4769     0A6C  014E               	movlb	14	; select bank14
  4770     0A6D  1299               	bcf	25,5	;volatile
  4771                           
  4772                           ;main.c: 56: PIE3bits.TX1IE = 0;
  4773     0A6E  1219               	bcf	25,4	;volatile
  4774     0A6F                     l2676:
  4775                           
  4776                           ;main.c: 59: BAUD1CON = 0x08;
  4777     0A6F  3008               	movlw	8
  4778     0A70  0142               	movlb	2	; select bank2
  4779     0A71  009F               	movwf	31	;volatile
  4780                           
  4781                           ;main.c: 60: SP1BRGL = 0x19;
  4782     0A72  3019               	movlw	25
  4783     0A73  009B               	movwf	27	;volatile
  4784     0A74                     l2678:
  4785                           
  4786                           ;main.c: 61: SP1BRGH = 0x00;
  4787     0A74  019C               	clrf	28	;volatile
  4788     0A75                     l2680:
  4789                           
  4790                           ;main.c: 63: TX1STA = 0x24;
  4791     0A75  3024               	movlw	36
  4792     0A76  009E               	movwf	30	;volatile
  4793     0A77                     l2682:
  4794                           
  4795                           ;main.c: 64: RC1STA = 0x90;
  4796     0A77  3090               	movlw	144
  4797     0A78  009D               	movwf	29	;volatile
  4798     0A79                     l2684:
  4799                           
  4800                           ;main.c: 66: PIE3bits.RC1IE = 1;
  4801     0A79  014E               	movlb	14	; select bank14
  4802     0A7A  1699               	bsf	25,5	;volatile
  4803     0A7B                     l159:
  4804     0A7B  0008               	return
  4805     0A7C                     __end_of_usart_init:
  4806                           
  4807                           	psect	text2
  4808     0A5F                     __ptext2:	
  4809 ;; *************** function _tmr0_init *****************
  4810 ;; Defined at:
  4811 ;;		line 5 in file "tmr0.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;		None
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;		None
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  1    wreg      void 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;Total ram usage:        0 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; Hardware stack levels required when called: 2
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_main
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839     0A5F                     _tmr0_init:	
  4840                           ;psect for function _tmr0_init
  4841                           
  4842     0A5F                     l2764:	
  4843                           ;incstack = 0
  4844                           ; Regs used in _tmr0_init: [wreg+status,2]
  4845                           
  4846                           
  4847                           ;tmr0.c: 8: T0CON1 = 0x40;
  4848     0A5F  3040               	movlw	64
  4849     0A60  014B               	movlb	11	; select bank11
  4850     0A61  009F               	movwf	31	;volatile
  4851                           
  4852                           ;tmr0.c: 11: TMR0H = 0xF3;
  4853     0A62  30F3               	movlw	243
  4854     0A63  009D               	movwf	29	;volatile
  4855     0A64                     l2766:
  4856                           
  4857                           ;tmr0.c: 14: TMR0L = 0x00;
  4858     0A64  019C               	clrf	28	;volatile
  4859     0A65                     l2768:
  4860                           
  4861                           ;tmr0.c: 17: PIR0bits.TMR0IF = 0;
  4862     0A65  014E               	movlb	14	; select bank14
  4863     0A66  128C               	bcf	12,5	;volatile
  4864     0A67                     l2770:
  4865                           
  4866                           ;tmr0.c: 20: PIE0bits.TMR0IE = 1;
  4867     0A67  1696               	bsf	22,5	;volatile
  4868     0A68                     l2772:
  4869                           
  4870                           ;tmr0.c: 23: T0CON0 = 0x80;
  4871     0A68  3080               	movlw	128
  4872     0A69  014B               	movlb	11	; select bank11
  4873     0A6A  009E               	movwf	30	;volatile
  4874     0A6B                     l306:
  4875     0A6B  0008               	return
  4876     0A6C                     __end_of_tmr0_init:
  4877                           
  4878                           	psect	text3
  4879     0BCB                     __ptext3:	
  4880 ;; *************** function _set_device_serial_number_to_i2c_slave_memorymap *****************
  4881 ;; Defined at:
  4882 ;;		line 83 in file "main.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  buffer          3   30[BANK0 ] unsigned char [3]
  4887 ;;  value           1   29[BANK0 ] unsigned char 
  4888 ;;  i               1   33[BANK0 ] unsigned char 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4901 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4902 ;;Total ram usage:        7 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 5
  4905 ;; This function calls:
  4906 ;;		_i2c_slave_set_register_with_lock
  4907 ;;		_strtol
  4908 ;; This function is called by:
  4909 ;;		_main
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913     0BCB                     _set_device_serial_number_to_i2c_slave_memorymap:	
  4914                           ;psect for function _set_device_serial_number_to_i2c_slave_memorymap
  4915                           
  4916     0BCB                     l2690:	
  4917                           ;incstack = 0
  4918                           ; Regs used in _set_device_serial_number_to_i2c_slave_memorymap: [wreg-fsr1h+status,2+st
      +                          atus,0+pclath+cstack]
  4919                           
  4920                           
  4921                           ;main.c: 84: for (uint8_t i = 0; i < 5; i++) {
  4922     0BCB  0140               	movlb	0	; select bank0
  4923     0BCC  01C1               	clrf	set_device_serial_number_to_i2c_slave_memorymap@i
  4924     0BCD                     l2696:
  4925                           
  4926                           ;main.c: 85: char buffer[3];;main.c: 86: buffer[0] = "0A01820001"[i * 2];
  4927     0BCD  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
  4928     0BCE  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
  4929     0BCF  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
  4930     0BD0  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
  4931     0BD1  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
  4932     0BD2  30B6               	movlw	low STR_3
  4933     0BD3  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
  4934     0BD4  0084               	movwf	4
  4935     0BD5  3010               	movlw	high STR_3
  4936     0BD6  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
  4937     0BD7  3880               	iorlw	128
  4938     0BD8  0085               	movwf	5
  4939     0BD9  0800               	movf	0,w	;code access
  4940     0BDA  00BE               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer
  4941                           
  4942                           ;main.c: 87: buffer[1] = "0A01820001"[i * 2 + 1];
  4943     0BDB  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
  4944     0BDC  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
  4945     0BDD  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
  4946     0BDE  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
  4947     0BDF  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
  4948     0BE0  30B7               	movlw	low (STR_3+1)
  4949     0BE1  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
  4950     0BE2  0084               	movwf	4
  4951     0BE3  3010               	movlw	high (STR_3+1)
  4952     0BE4  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
  4953     0BE5  3880               	iorlw	128
  4954     0BE6  0085               	movwf	5
  4955     0BE7  0800               	movf	0,w	;code access
  4956     0BE8  00BF               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer+1
  4957     0BE9                     l2698:
  4958                           
  4959                           ;main.c: 88: buffer[2] = '\0';
  4960     0BE9  01C0               	clrf	set_device_serial_number_to_i2c_slave_memorymap@buffer+2
  4961     0BEA                     l2700:
  4962                           
  4963                           ;main.c: 91: uint8_t value = (uint8_t)strtol(buffer, (0), 16);
  4964     0BEA  01AC               	clrf	strtol@endptr
  4965     0BEB  3010               	movlw	16
  4966     0BEC  00AD               	movwf	strtol@base
  4967     0BED  3000               	movlw	0
  4968     0BEE  00AE               	movwf	strtol@base+1
  4969     0BEF  303E               	movlw	(low (set_device_serial_number_to_i2c_slave_memorymap@buffer| 0))& (0+255)
  4970     0BF0  3186  2600  318B   	fcall	_strtol
  4971     0BF3  0140               	movlb	0	; select bank0
  4972     0BF4  082C               	movf	?_strtol,w
  4973     0BF5  00BD               	movwf	set_device_serial_number_to_i2c_slave_memorymap@value
  4974     0BF6                     l2702:
  4975                           
  4976                           ;main.c: 92: i2c_slave_set_register_with_lock(57u + i, value);
  4977     0BF6  083D               	movf	set_device_serial_number_to_i2c_slave_memorymap@value,w
  4978     0BF7  00A2               	movwf	i2c_slave_set_register_with_lock@value
  4979     0BF8  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
  4980     0BF9  3E39               	addlw	57
  4981     0BFA  318A  223C  318B   	fcall	_i2c_slave_set_register_with_lock
  4982     0BFD                     l2704:
  4983     0BFD  3001               	movlw	1
  4984     0BFE  0140               	movlb	0	; select bank0
  4985     0BFF  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
  4986     0C00  083B               	movf	??_set_device_serial_number_to_i2c_slave_memorymap,w
  4987     0C01  07C1               	addwf	set_device_serial_number_to_i2c_slave_memorymap@i,f
  4988     0C02                     l2706:
  4989     0C02  3005               	movlw	5
  4990     0C03  0241               	subwf	set_device_serial_number_to_i2c_slave_memorymap@i,w
  4991     0C04  1C03               	skipc
  4992     0C05  2C07               	goto	u2311
  4993     0C06  2C08               	goto	u2310
  4994     0C07                     u2311:
  4995     0C07  2BCD               	goto	l2696
  4996     0C08                     u2310:
  4997     0C08                     l176:
  4998     0C08  0008               	return
  4999     0C09                     __end_of_set_device_serial_number_to_i2c_slave_memorymap:
  5000                           
  5001                           	psect	text4
  5002     0600                     __ptext4:	
  5003 ;; *************** function _strtol *****************
  5004 ;; Defined at:
  5005 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/strtol.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  s               1    wreg     PTR const unsigned char 
  5008 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
  5009 ;;  endptr          1   12[BANK0 ] PTR PTR unsigned char 
  5010 ;;		 -> NULL(0), 
  5011 ;;  base            2   13[BANK0 ] int 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  s               1   25[BANK0 ] PTR const unsigned char 
  5014 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
  5015 ;;  a               4   21[BANK0 ] long 
  5016 ;;  c               1   26[BANK0 ] unsigned char 
  5017 ;;  sign            1   20[BANK0 ] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  4   12[BANK0 ] long 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5027 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;Total ram usage:       15 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; Hardware stack levels required when called: 4
  5034 ;; This function calls:
  5035 ;;		___lmul
  5036 ;;		_isalpha
  5037 ;;		_isdigit
  5038 ;;		_isspace
  5039 ;;		_toupper
  5040 ;; This function is called by:
  5041 ;;		_set_device_serial_number_to_i2c_slave_memorymap
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045     0600                     _strtol:	
  5046                           ;psect for function _strtol
  5047                           
  5048                           
  5049                           ;incstack = 0
  5050                           ; Regs used in _strtol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5051                           ;strtol@s stored from wreg
  5052     0600  0140               	movlb	0	; select bank0
  5053     0601  00B9               	movwf	strtol@s
  5054     0602                     l1034:
  5055     0602                     l2514:
  5056     0602  0140               	movlb	0	; select bank0
  5057     0603  0839               	movf	strtol@s,w
  5058     0604  0086               	movwf	6
  5059     0605  0187               	clrf	7
  5060     0606  0801               	movf	1,w
  5061     0607  00BA               	movwf	strtol@c
  5062     0608                     l2516:
  5063     0608  3001               	movlw	1
  5064     0609  00B0               	movwf	??_strtol
  5065     060A  0830               	movf	??_strtol,w
  5066     060B  07B9               	addwf	strtol@s,f
  5067     060C                     l2518:
  5068     060C  083A               	movf	strtol@c,w
  5069     060D  318A  22DD  3186   	fcall	_isspace
  5070     0610  1803               	btfsc	3,0
  5071     0611  2E13               	goto	u2061
  5072     0612  2E15               	goto	u2060
  5073     0613                     u2061:
  5074     0613  0140               	movlb	0	; select bank0
  5075     0614  2E02               	goto	l1034
  5076     0615                     u2060:
  5077     0615                     l2520:
  5078     0615  3000               	movlw	0
  5079     0616  0140               	movlb	0	; select bank0
  5080     0617  00B8               	movwf	strtol@a+3
  5081     0618  3000               	movlw	0
  5082     0619  00B7               	movwf	strtol@a+2
  5083     061A  3000               	movlw	0
  5084     061B  00B6               	movwf	strtol@a+1
  5085     061C  3000               	movlw	0
  5086     061D  00B5               	movwf	strtol@a
  5087     061E                     l2522:
  5088     061E  01B4               	clrf	strtol@sign
  5089     061F                     l2524:
  5090     061F  302D               	movlw	45
  5091     0620  063A               	xorwf	strtol@c,w
  5092     0621  1D03               	btfss	3,2
  5093     0622  2E24               	goto	u2071
  5094     0623  2E25               	goto	u2070
  5095     0624                     u2071:
  5096     0624  2E31               	goto	l2532
  5097     0625                     u2070:
  5098     0625                     l2526:
  5099     0625  01B4               	clrf	strtol@sign
  5100     0626  0AB4               	incf	strtol@sign,f
  5101     0627                     l2528:
  5102     0627  0839               	movf	strtol@s,w
  5103     0628  0086               	movwf	6
  5104     0629  0187               	clrf	7
  5105     062A  0801               	movf	1,w
  5106     062B  00BA               	movwf	strtol@c
  5107     062C                     l2530:
  5108     062C  3001               	movlw	1
  5109     062D  00B0               	movwf	??_strtol
  5110     062E  0830               	movf	??_strtol,w
  5111     062F  07B9               	addwf	strtol@s,f
  5112     0630  2E38               	goto	l2538
  5113     0631                     l2532:
  5114     0631  302B               	movlw	43
  5115     0632  063A               	xorwf	strtol@c,w
  5116     0633  1D03               	btfss	3,2
  5117     0634  2E36               	goto	u2081
  5118     0635  2E37               	goto	u2080
  5119     0636                     u2081:
  5120     0636  2E38               	goto	l2538
  5121     0637                     u2080:
  5122     0637  2E27               	goto	l2528
  5123     0638                     l2538:
  5124     0638  3030               	movlw	48
  5125     0639  063A               	xorwf	strtol@c,w
  5126     063A  1D03               	btfss	3,2
  5127     063B  2E3D               	goto	u2091
  5128     063C  2E3E               	goto	u2090
  5129     063D                     u2091:
  5130     063D  2E78               	goto	l2562
  5131     063E                     u2090:
  5132     063E                     l2540:
  5133     063E  0839               	movf	strtol@s,w
  5134     063F  0086               	movwf	6
  5135     0640  0187               	clrf	7
  5136     0641  0801               	movf	1,w
  5137     0642  00BA               	movwf	strtol@c
  5138     0643                     l2542:
  5139     0643  3001               	movlw	1
  5140     0644  00B0               	movwf	??_strtol
  5141     0645  0830               	movf	??_strtol,w
  5142     0646  07B9               	addwf	strtol@s,f
  5143     0647                     l2544:
  5144     0647  082D               	movf	strtol@base,w
  5145     0648  042E               	iorwf	strtol@base+1,w
  5146     0649  1903               	btfsc	3,2
  5147     064A  2E4C               	goto	u2101
  5148     064B  2E4D               	goto	u2100
  5149     064C                     u2101:
  5150     064C  2E54               	goto	l2548
  5151     064D                     u2100:
  5152     064D                     l2546:
  5153     064D  3010               	movlw	16
  5154     064E  062D               	xorwf	strtol@base,w
  5155     064F  042E               	iorwf	strtol@base+1,w
  5156     0650  1D03               	btfss	3,2
  5157     0651  2E53               	goto	u2111
  5158     0652  2E54               	goto	u2110
  5159     0653                     u2111:
  5160     0653  2E6E               	goto	l2558
  5161     0654                     u2110:
  5162     0654                     l2548:
  5163     0654  3078               	movlw	120
  5164     0655  063A               	xorwf	strtol@c,w
  5165     0656  1903               	btfsc	3,2
  5166     0657  2E59               	goto	u2121
  5167     0658  2E5A               	goto	u2120
  5168     0659                     u2121:
  5169     0659  2E60               	goto	l2552
  5170     065A                     u2120:
  5171     065A                     l2550:
  5172     065A  3058               	movlw	88
  5173     065B  063A               	xorwf	strtol@c,w
  5174     065C  1D03               	btfss	3,2
  5175     065D  2E5F               	goto	u2131
  5176     065E  2E60               	goto	u2130
  5177     065F                     u2131:
  5178     065F  2E6E               	goto	l2558
  5179     0660                     u2130:
  5180     0660                     l2552:
  5181     0660  3010               	movlw	16
  5182     0661  00AD               	movwf	strtol@base
  5183     0662  3000               	movlw	0
  5184     0663  00AE               	movwf	strtol@base+1
  5185     0664                     l2554:
  5186     0664  0839               	movf	strtol@s,w
  5187     0665  0086               	movwf	6
  5188     0666  0187               	clrf	7
  5189     0667  0801               	movf	1,w
  5190     0668  00BA               	movwf	strtol@c
  5191     0669                     l2556:
  5192     0669  3001               	movlw	1
  5193     066A  00B0               	movwf	??_strtol
  5194     066B  0830               	movf	??_strtol,w
  5195     066C  07B9               	addwf	strtol@s,f
  5196     066D  2E78               	goto	l2562
  5197     066E                     l2558:
  5198     066E  082D               	movf	strtol@base,w
  5199     066F  042E               	iorwf	strtol@base+1,w
  5200     0670  1D03               	btfss	3,2
  5201     0671  2E73               	goto	u2141
  5202     0672  2E74               	goto	u2140
  5203     0673                     u2141:
  5204     0673  2E78               	goto	l2562
  5205     0674                     u2140:
  5206     0674                     l2560:
  5207     0674  3008               	movlw	8
  5208     0675  00AD               	movwf	strtol@base
  5209     0676  3000               	movlw	0
  5210     0677  00AE               	movwf	strtol@base+1
  5211     0678                     l2562:
  5212     0678  082D               	movf	strtol@base,w
  5213     0679  042E               	iorwf	strtol@base+1,w
  5214     067A  1D03               	btfss	3,2
  5215     067B  2E7D               	goto	u2151
  5216     067C  2E7E               	goto	u2150
  5217     067D                     u2151:
  5218     067D  2E82               	goto	l2566
  5219     067E                     u2150:
  5220     067E                     l2564:
  5221     067E  300A               	movlw	10
  5222     067F  00AD               	movwf	strtol@base
  5223     0680  3000               	movlw	0
  5224     0681  00AE               	movwf	strtol@base+1
  5225     0682                     l2566:
  5226     0682  083A               	movf	strtol@c,w
  5227     0683  318A  22F6  3186   	fcall	_isalpha
  5228     0686  1C03               	btfss	3,0
  5229     0687  2E89               	goto	u2161
  5230     0688  2E8A               	goto	u2160
  5231     0689                     u2161:
  5232     0689  2E93               	goto	l2570
  5233     068A                     u2160:
  5234     068A                     l2568:
  5235     068A  0140               	movlb	0	; select bank0
  5236     068B  083A               	movf	strtol@c,w
  5237     068C  318A  22C9  3186   	fcall	_toupper
  5238     068F  3EC9               	addlw	201
  5239     0690  0140               	movlb	0	; select bank0
  5240     0691  00BA               	movwf	strtol@c
  5241     0692  2E9F               	goto	l2574
  5242     0693                     l2570:
  5243     0693  0140               	movlb	0	; select bank0
  5244     0694  083A               	movf	strtol@c,w
  5245     0695  318A  228F  3186   	fcall	_isdigit
  5246     0698  1C03               	btfss	3,0
  5247     0699  2E9B               	goto	u2171
  5248     069A  2E9C               	goto	u2170
  5249     069B                     u2171:
  5250     069B  2EE0               	goto	l2584
  5251     069C                     u2170:
  5252     069C                     l2572:
  5253     069C  3030               	movlw	48
  5254     069D  0140               	movlb	0	; select bank0
  5255     069E  02BA               	subwf	strtol@c,f
  5256     069F                     l2574:
  5257     069F  082E               	movf	strtol@base+1,w
  5258     06A0  3A80               	xorlw	128
  5259     06A1  3C80               	sublw	128
  5260     06A2  1D03               	skipz
  5261     06A3  2EA6               	goto	u2185
  5262     06A4  082D               	movf	strtol@base,w
  5263     06A5  023A               	subwf	strtol@c,w
  5264     06A6                     u2185:
  5265     06A6  1C03               	skipc
  5266     06A7  2EA9               	goto	u2181
  5267     06A8  2EAA               	goto	u2180
  5268     06A9                     u2181:
  5269     06A9  2EAB               	goto	l2578
  5270     06AA                     u2180:
  5271     06AA  2EE0               	goto	l2584
  5272     06AB                     l2578:
  5273     06AB  0140               	movlb	0	; select bank0
  5274     06AC  083A               	movf	strtol@c,w
  5275     06AD  00B0               	movwf	??_strtol
  5276     06AE  01B1               	clrf	??_strtol+1
  5277     06AF  01B2               	clrf	??_strtol+2
  5278     06B0  01B3               	clrf	??_strtol+3
  5279     06B1  082D               	movf	strtol@base,w
  5280     06B2  00A0               	movwf	___lmul@multiplier
  5281     06B3  082E               	movf	strtol@base+1,w
  5282     06B4  00A1               	movwf	___lmul@multiplier+1
  5283     06B5  0D89               	rlf	9,f
  5284     06B6  3B89               	subwfb	9,f
  5285     06B7  0989               	comf	9,f
  5286     06B8  00A2               	movwf	___lmul@multiplier+2
  5287     06B9  00A3               	movwf	___lmul@multiplier+3
  5288     06BA  0838               	movf	strtol@a+3,w
  5289     06BB  00A7               	movwf	___lmul@multiplicand+3
  5290     06BC  0837               	movf	strtol@a+2,w
  5291     06BD  00A6               	movwf	___lmul@multiplicand+2
  5292     06BE  0836               	movf	strtol@a+1,w
  5293     06BF  00A5               	movwf	___lmul@multiplicand+1
  5294     06C0  0835               	movf	strtol@a,w
  5295     06C1  00A4               	movwf	___lmul@multiplicand
  5296     06C2  318B  2397  3186   	fcall	___lmul
  5297     06C5  0140               	movlb	0	; select bank0
  5298     06C6  0820               	movf	?___lmul,w
  5299     06C7  07B0               	addwf	??_strtol,f
  5300     06C8  0821               	movf	?___lmul+1,w
  5301     06C9  3DB1               	addwfc	??_strtol+1,f
  5302     06CA  0822               	movf	?___lmul+2,w
  5303     06CB  3DB2               	addwfc	??_strtol+2,f
  5304     06CC  0823               	movf	?___lmul+3,w
  5305     06CD  3DB3               	addwfc	??_strtol+3,f
  5306     06CE  0833               	movf	??_strtol+3,w
  5307     06CF  00B8               	movwf	strtol@a+3
  5308     06D0  0832               	movf	??_strtol+2,w
  5309     06D1  00B7               	movwf	strtol@a+2
  5310     06D2  0831               	movf	??_strtol+1,w
  5311     06D3  00B6               	movwf	strtol@a+1
  5312     06D4  0830               	movf	??_strtol,w
  5313     06D5  00B5               	movwf	strtol@a
  5314     06D6                     l2580:
  5315     06D6  0839               	movf	strtol@s,w
  5316     06D7  0086               	movwf	6
  5317     06D8  0187               	clrf	7
  5318     06D9  0801               	movf	1,w
  5319     06DA  00BA               	movwf	strtol@c
  5320     06DB                     l2582:
  5321     06DB  3001               	movlw	1
  5322     06DC  00B0               	movwf	??_strtol
  5323     06DD  0830               	movf	??_strtol,w
  5324     06DE  07B9               	addwf	strtol@s,f
  5325     06DF  2E82               	goto	l2566
  5326     06E0                     l2584:
  5327     06E0  0140               	movlb	0	; select bank0
  5328     06E1  082C               	movf	strtol@endptr,w
  5329     06E2  1903               	btfsc	3,2
  5330     06E3  2EE5               	goto	u2191
  5331     06E4  2EE6               	goto	u2190
  5332     06E5                     u2191:
  5333     06E5  2EEC               	goto	l2588
  5334     06E6                     u2190:
  5335     06E6                     l2586:
  5336     06E6  082C               	movf	strtol@endptr,w
  5337     06E7  0086               	movwf	6
  5338     06E8  0187               	clrf	7
  5339     06E9  0839               	movf	strtol@s,w
  5340     06EA  3EFF               	addlw	-1
  5341     06EB  0081               	movwf	1
  5342     06EC                     l2588:
  5343     06EC  0834               	movf	strtol@sign,w
  5344     06ED  1903               	btfsc	3,2
  5345     06EE  2EF0               	goto	u2201
  5346     06EF  2EF1               	goto	u2200
  5347     06F0                     u2201:
  5348     06F0  2F01               	goto	l2594
  5349     06F1                     u2200:
  5350     06F1                     l2590:
  5351     06F1  0935               	comf	strtol@a,w
  5352     06F2  00AC               	movwf	?_strtol
  5353     06F3  0936               	comf	strtol@a+1,w
  5354     06F4  00AD               	movwf	?_strtol+1
  5355     06F5  0937               	comf	strtol@a+2,w
  5356     06F6  00AE               	movwf	?_strtol+2
  5357     06F7  0938               	comf	strtol@a+3,w
  5358     06F8  00AF               	movwf	?_strtol+3
  5359     06F9  0AAC               	incf	?_strtol,f
  5360     06FA  1903               	skipnz
  5361     06FB  0AAD               	incf	?_strtol+1,f
  5362     06FC  1903               	skipnz
  5363     06FD  0AAE               	incf	?_strtol+2,f
  5364     06FE  1903               	skipnz
  5365     06FF  0AAF               	incf	?_strtol+3,f
  5366     0700  2F09               	goto	l1057
  5367     0701                     l2594:
  5368     0701  0838               	movf	strtol@a+3,w
  5369     0702  00AF               	movwf	?_strtol+3
  5370     0703  0837               	movf	strtol@a+2,w
  5371     0704  00AE               	movwf	?_strtol+2
  5372     0705  0836               	movf	strtol@a+1,w
  5373     0706  00AD               	movwf	?_strtol+1
  5374     0707  0835               	movf	strtol@a,w
  5375     0708  00AC               	movwf	?_strtol
  5376     0709                     l1057:
  5377     0709  0008               	return
  5378     070A                     __end_of_strtol:
  5379                           
  5380                           	psect	text5
  5381     0AC9                     __ptext5:	
  5382 ;; *************** function _toupper *****************
  5383 ;; Defined at:
  5384 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/toupper.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  c               1    wreg     unsigned char 
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;  c               1    1[BANK0 ] unsigned char 
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      unsigned char 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2, status,0
  5393 ;; Tracked objects:
  5394 ;;		On entry : 0/0
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;Total ram usage:        2 bytes
  5403 ;; Hardware stack levels used: 1
  5404 ;; Hardware stack levels required when called: 2
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_strtol
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412     0AC9                     _toupper:	
  5413                           ;psect for function _toupper
  5414                           
  5415                           
  5416                           ;incstack = 0
  5417                           ; Regs used in _toupper: [wreg+status,2+status,0]
  5418                           ;toupper@c stored from wreg
  5419     0AC9  0140               	movlb	0	; select bank0
  5420     0ACA  00A1               	movwf	toupper@c
  5421     0ACB                     l2462:
  5422     0ACB  307B               	movlw	123
  5423     0ACC  0221               	subwf	toupper@c,w
  5424     0ACD  1803               	skipnc
  5425     0ACE  2AD0               	goto	u2041
  5426     0ACF  2AD1               	goto	u2040
  5427     0AD0                     u2041:
  5428     0AD0  2ADB               	goto	l2468
  5429     0AD1                     u2040:
  5430     0AD1                     l2464:
  5431     0AD1  3061               	movlw	97
  5432     0AD2  0221               	subwf	toupper@c,w
  5433     0AD3  1C03               	skipc
  5434     0AD4  2AD6               	goto	u2051
  5435     0AD5  2AD7               	goto	u2050
  5436     0AD6                     u2051:
  5437     0AD6  2ADB               	goto	l2468
  5438     0AD7                     u2050:
  5439     0AD7                     l2466:
  5440     0AD7  30DF               	movlw	223
  5441     0AD8  00A0               	movwf	??_toupper
  5442     0AD9  0820               	movf	??_toupper,w
  5443     0ADA  05A1               	andwf	toupper@c,f
  5444     0ADB                     l2468:
  5445     0ADB  0821               	movf	toupper@c,w
  5446     0ADC                     l1078:
  5447     0ADC  0008               	return
  5448     0ADD                     __end_of_toupper:
  5449                           
  5450                           	psect	text6
  5451     0ADD                     __ptext6:	
  5452 ;; *************** function _isspace *****************
  5453 ;; Defined at:
  5454 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isspace.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  c               1    wreg     unsigned char 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  c               1    1[BANK0 ] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;		None               void
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;Total ram usage:        2 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; Hardware stack levels required when called: 2
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_strtol
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482     0ADD                     _isspace:	
  5483                           ;psect for function _isspace
  5484                           
  5485                           
  5486                           ;incstack = 0
  5487                           ; Regs used in _isspace: [wreg+status,2+status,0]
  5488                           ;isspace@c stored from wreg
  5489     0ADD  0140               	movlb	0	; select bank0
  5490     0ADE  00A1               	movwf	isspace@c
  5491     0ADF                     l2434:
  5492     0ADF  01A0               	clrf	_isspace$1260
  5493     0AE0  0AA0               	incf	_isspace$1260,f
  5494     0AE1                     l2436:
  5495     0AE1  3020               	movlw	32
  5496     0AE2  0621               	xorwf	isspace@c,w
  5497     0AE3  1903               	btfsc	3,2
  5498     0AE4  2AE6               	goto	u1981
  5499     0AE5  2AE7               	goto	u1980
  5500     0AE6                     u1981:
  5501     0AE6  2AF4               	goto	l2444
  5502     0AE7                     u1980:
  5503     0AE7                     l2438:
  5504     0AE7  300E               	movlw	14
  5505     0AE8  0221               	subwf	isspace@c,w
  5506     0AE9  1803               	skipnc
  5507     0AEA  2AEC               	goto	u1991
  5508     0AEB  2AED               	goto	u1990
  5509     0AEC                     u1991:
  5510     0AEC  2AF3               	goto	l2442
  5511     0AED                     u1990:
  5512     0AED                     l2440:
  5513     0AED  3009               	movlw	9
  5514     0AEE  0221               	subwf	isspace@c,w
  5515     0AEF  1803               	skipnc
  5516     0AF0  2AF2               	goto	u2001
  5517     0AF1  2AF3               	goto	u2000
  5518     0AF2                     u2001:
  5519     0AF2  2AF4               	goto	l2444
  5520     0AF3                     u2000:
  5521     0AF3                     l2442:
  5522     0AF3  01A0               	clrf	_isspace$1260
  5523     0AF4                     l2444:
  5524     0AF4  0C20               	rrf	_isspace$1260,w
  5525     0AF5                     l1069:
  5526     0AF5  0008               	return
  5527     0AF6                     __end_of_isspace:
  5528                           
  5529                           	psect	text7
  5530     0AF6                     __ptext7:	
  5531 ;; *************** function _isalpha *****************
  5532 ;; Defined at:
  5533 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isalpha.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  c               1    wreg     unsigned char 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  c               1    3[BANK0 ] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;		None               void
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0, pclath, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5548 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5550 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5551 ;;Total ram usage:        2 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; Hardware stack levels required when called: 3
  5554 ;; This function calls:
  5555 ;;		_isupper
  5556 ;; This function is called by:
  5557 ;;		_strtol
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561     0AF6                     _isalpha:	
  5562                           ;psect for function _isalpha
  5563                           
  5564                           
  5565                           ;incstack = 0
  5566                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
  5567                           ;isalpha@c stored from wreg
  5568     0AF6  0140               	movlb	0	; select bank0
  5569     0AF7  00A3               	movwf	isalpha@c
  5570     0AF8                     l2448:
  5571     0AF8  01A2               	clrf	_isalpha$1257
  5572     0AF9  0AA2               	incf	_isalpha$1257,f
  5573     0AFA                     l2450:
  5574     0AFA  307B               	movlw	123
  5575     0AFB  0223               	subwf	isalpha@c,w
  5576     0AFC  1803               	skipnc
  5577     0AFD  2AFF               	goto	u2011
  5578     0AFE  2B00               	goto	u2010
  5579     0AFF                     u2011:
  5580     0AFF  2B06               	goto	l2454
  5581     0B00                     u2010:
  5582     0B00                     l2452:
  5583     0B00  3061               	movlw	97
  5584     0B01  0223               	subwf	isalpha@c,w
  5585     0B02  1803               	skipnc
  5586     0B03  2B05               	goto	u2021
  5587     0B04  2B06               	goto	u2020
  5588     0B05                     u2021:
  5589     0B05  2B10               	goto	l2458
  5590     0B06                     u2020:
  5591     0B06                     l2454:
  5592     0B06  0823               	movf	isalpha@c,w
  5593     0B07  318A  22A2  318A   	fcall	_isupper
  5594     0B0A  1803               	btfsc	3,0
  5595     0B0B  2B0D               	goto	u2031
  5596     0B0C  2B0E               	goto	u2030
  5597     0B0D                     u2031:
  5598     0B0D  2B10               	goto	l2458
  5599     0B0E                     u2030:
  5600     0B0E                     l2456:
  5601     0B0E  0140               	movlb	0	; select bank0
  5602     0B0F  01A2               	clrf	_isalpha$1257
  5603     0B10                     l2458:
  5604     0B10  0140               	movlb	0	; select bank0
  5605     0B11  0C22               	rrf	_isalpha$1257,w
  5606     0B12                     l1064:
  5607     0B12  0008               	return
  5608     0B13                     __end_of_isalpha:
  5609                           
  5610                           	psect	text8
  5611     0AA2                     __ptext8:	
  5612 ;; *************** function _isupper *****************
  5613 ;; Defined at:
  5614 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isupper.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  c               1    wreg     unsigned char 
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  c               1    1[BANK0 ] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;		None               void
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;Total ram usage:        2 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 2
  5635 ;; This function calls:
  5636 ;;		Nothing
  5637 ;; This function is called by:
  5638 ;;		_isalpha
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642     0AA2                     _isupper:	
  5643                           ;psect for function _isupper
  5644                           
  5645                           
  5646                           ;incstack = 0
  5647                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5648                           ;isupper@c stored from wreg
  5649     0AA2  0140               	movlb	0	; select bank0
  5650     0AA3  00A1               	movwf	isupper@c
  5651     0AA4                     l2248:
  5652     0AA4  01A0               	clrf	_isupper$1263
  5653     0AA5                     l2250:
  5654     0AA5  305B               	movlw	91
  5655     0AA6  0221               	subwf	isupper@c,w
  5656     0AA7  1803               	skipnc
  5657     0AA8  2AAA               	goto	u1661
  5658     0AA9  2AAB               	goto	u1660
  5659     0AAA                     u1661:
  5660     0AAA  2AB3               	goto	l2256
  5661     0AAB                     u1660:
  5662     0AAB                     l2252:
  5663     0AAB  3041               	movlw	65
  5664     0AAC  0221               	subwf	isupper@c,w
  5665     0AAD  1C03               	skipc
  5666     0AAE  2AB0               	goto	u1671
  5667     0AAF  2AB1               	goto	u1670
  5668     0AB0                     u1671:
  5669     0AB0  2AB3               	goto	l2256
  5670     0AB1                     u1670:
  5671     0AB1                     l2254:
  5672     0AB1  01A0               	clrf	_isupper$1263
  5673     0AB2  0AA0               	incf	_isupper$1263,f
  5674     0AB3                     l2256:
  5675     0AB3  0C20               	rrf	_isupper$1263,w
  5676     0AB4                     l1074:
  5677     0AB4  0008               	return
  5678     0AB5                     __end_of_isupper:
  5679                           
  5680                           	psect	text9
  5681     0B97                     __ptext9:	
  5682 ;; *************** function ___lmul *****************
  5683 ;; Defined at:
  5684 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul32.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  multiplier      4    0[BANK0 ] unsigned long 
  5687 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  product         4    8[BANK0 ] unsigned long 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  4    0[BANK0 ] unsigned long 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5699 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5703 ;;Total ram usage:       12 bytes
  5704 ;; Hardware stack levels used: 1
  5705 ;; Hardware stack levels required when called: 2
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		_strtol
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713     0B97                     ___lmul:	
  5714                           ;psect for function ___lmul
  5715                           
  5716     0B97                     l2420:	
  5717                           ;incstack = 0
  5718                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5719                           
  5720     0B97  3000               	movlw	0
  5721     0B98  0140               	movlb	0	; select bank0
  5722     0B99  00AB               	movwf	___lmul@product+3
  5723     0B9A  3000               	movlw	0
  5724     0B9B  00AA               	movwf	___lmul@product+2
  5725     0B9C  3000               	movlw	0
  5726     0B9D  00A9               	movwf	___lmul@product+1
  5727     0B9E  3000               	movlw	0
  5728     0B9F  00A8               	movwf	___lmul@product
  5729     0BA0                     l2422:
  5730     0BA0  1C20               	btfss	___lmul@multiplier,0
  5731     0BA1  2BA3               	goto	u1941
  5732     0BA2  2BA4               	goto	u1940
  5733     0BA3                     u1941:
  5734     0BA3  2BAC               	goto	l2426
  5735     0BA4                     u1940:
  5736     0BA4                     l2424:
  5737     0BA4  0824               	movf	___lmul@multiplicand,w
  5738     0BA5  07A8               	addwf	___lmul@product,f
  5739     0BA6  0825               	movf	___lmul@multiplicand+1,w
  5740     0BA7  3DA9               	addwfc	___lmul@product+1,f
  5741     0BA8  0826               	movf	___lmul@multiplicand+2,w
  5742     0BA9  3DAA               	addwfc	___lmul@product+2,f
  5743     0BAA  0827               	movf	___lmul@multiplicand+3,w
  5744     0BAB  3DAB               	addwfc	___lmul@product+3,f
  5745     0BAC                     l2426:
  5746     0BAC  3001               	movlw	1
  5747     0BAD                     u1955:
  5748     0BAD  35A4               	lslf	___lmul@multiplicand,f
  5749     0BAE  0DA5               	rlf	___lmul@multiplicand+1,f
  5750     0BAF  0DA6               	rlf	___lmul@multiplicand+2,f
  5751     0BB0  0DA7               	rlf	___lmul@multiplicand+3,f
  5752     0BB1  0B89               	decfsz	9,f
  5753     0BB2  2BAD               	goto	u1955
  5754     0BB3                     l2428:
  5755     0BB3  3001               	movlw	1
  5756     0BB4                     u1965:
  5757     0BB4  36A3               	lsrf	___lmul@multiplier+3,f
  5758     0BB5  0CA2               	rrf	___lmul@multiplier+2,f
  5759     0BB6  0CA1               	rrf	___lmul@multiplier+1,f
  5760     0BB7  0CA0               	rrf	___lmul@multiplier,f
  5761     0BB8  0B89               	decfsz	9,f
  5762     0BB9  2BB4               	goto	u1965
  5763     0BBA  0823               	movf	___lmul@multiplier+3,w
  5764     0BBB  0422               	iorwf	___lmul@multiplier+2,w
  5765     0BBC  0421               	iorwf	___lmul@multiplier+1,w
  5766     0BBD  0420               	iorwf	___lmul@multiplier,w
  5767     0BBE  1D03               	skipz
  5768     0BBF  2BC1               	goto	u1971
  5769     0BC0  2BC2               	goto	u1970
  5770     0BC1                     u1971:
  5771     0BC1  2BA0               	goto	l2422
  5772     0BC2                     u1970:
  5773     0BC2                     l2430:
  5774     0BC2  082B               	movf	___lmul@product+3,w
  5775     0BC3  00A3               	movwf	?___lmul+3
  5776     0BC4  082A               	movf	___lmul@product+2,w
  5777     0BC5  00A2               	movwf	?___lmul+2
  5778     0BC6  0829               	movf	___lmul@product+1,w
  5779     0BC7  00A1               	movwf	?___lmul+1
  5780     0BC8  0828               	movf	___lmul@product,w
  5781     0BC9  00A0               	movwf	?___lmul
  5782     0BCA                     l579:
  5783     0BCA  0008               	return
  5784     0BCB                     __end_of___lmul:
  5785                           
  5786                           	psect	text10
  5787     0A3C                     __ptext10:	
  5788 ;; *************** function _i2c_slave_set_register_with_lock *****************
  5789 ;; Defined at:
  5790 ;;		line 41 in file "i2c_slave.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  registerAddr    1    wreg     unsigned char 
  5793 ;;  value           1    2[BANK0 ] unsigned char 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  registerAddr    1    3[BANK0 ] unsigned char 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5805 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5808 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5809 ;;Total ram usage:        2 bytes
  5810 ;; Hardware stack levels used: 1
  5811 ;; Hardware stack levels required when called: 3
  5812 ;; This function calls:
  5813 ;;		_i2c_slave_set_register
  5814 ;; This function is called by:
  5815 ;;		_set_device_serial_number_to_i2c_slave_memorymap
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819     0A3C                     _i2c_slave_set_register_with_lock:	
  5820                           ;psect for function _i2c_slave_set_register_with_lock
  5821                           
  5822                           
  5823                           ;incstack = 0
  5824                           ; Regs used in _i2c_slave_set_register_with_lock: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
  5825                           ;i2c_slave_set_register_with_lock@registerAddress stored from wreg
  5826     0A3C  0140               	movlb	0	; select bank0
  5827     0A3D  00A3               	movwf	i2c_slave_set_register_with_lock@registerAddress
  5828     0A3E                     l2598:
  5829                           
  5830                           ;i2c_slave.c: 42: GIE = 0;
  5831     0A3E  138B               	bcf	11,7	;volatile
  5832     0A3F                     l2600:
  5833                           
  5834                           ;i2c_slave.c: 43: i2c_slave_set_register(registerAddress, value);
  5835     0A3F  0822               	movf	i2c_slave_set_register_with_lock@value,w
  5836     0A40  00A0               	movwf	i2c_slave_set_register@value
  5837     0A41  0823               	movf	i2c_slave_set_register_with_lock@registerAddress,w
  5838     0A42  318A  2232  318A   	fcall	_i2c_slave_set_register
  5839     0A45                     l2602:
  5840                           
  5841                           ;i2c_slave.c: 44: GIE = 1;
  5842     0A45  178B               	bsf	11,7	;volatile
  5843     0A46                     l267:
  5844     0A46  0008               	return
  5845     0A47                     __end_of_i2c_slave_set_register_with_lock:
  5846                           
  5847                           	psect	text11
  5848     0A32                     __ptext11:	
  5849 ;; *************** function _i2c_slave_set_register *****************
  5850 ;; Defined at:
  5851 ;;		line 32 in file "i2c_slave.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;  registerAddr    1    wreg     unsigned char 
  5854 ;;  value           1    0[BANK0 ] unsigned char 
  5855 ;; Auto vars:     Size  Location     Type
  5856 ;;  registerAddr    1    1[BANK0 ] unsigned char 
  5857 ;; Return value:  Size  Location     Type
  5858 ;;                  1    wreg      void 
  5859 ;; Registers used:
  5860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5861 ;; Tracked objects:
  5862 ;;		On entry : 0/0
  5863 ;;		On exit  : 0/0
  5864 ;;		Unchanged: 0/0
  5865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5866 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5870 ;;Total ram usage:        2 bytes
  5871 ;; Hardware stack levels used: 1
  5872 ;; Hardware stack levels required when called: 2
  5873 ;; This function calls:
  5874 ;;		Nothing
  5875 ;; This function is called by:
  5876 ;;		_main
  5877 ;;		_i2c_slave_set_register_with_lock
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881     0A32                     _i2c_slave_set_register:	
  5882                           ;psect for function _i2c_slave_set_register
  5883                           
  5884                           
  5885                           ;incstack = 0
  5886                           ; Regs used in _i2c_slave_set_register: [wreg+fsr1l+fsr1h+status,2+status,0]
  5887                           ;i2c_slave_set_register@registerAddress stored from wreg
  5888     0A32  0140               	movlb	0	; select bank0
  5889     0A33  00A1               	movwf	i2c_slave_set_register@registerAddress
  5890     0A34                     l2406:
  5891                           
  5892                           ;i2c_slave.c: 33: slaveData[registerAddress] = value;
  5893     0A34  0821               	movf	i2c_slave_set_register@registerAddress,w
  5894     0A35  3EA0               	addlw	(low (_slaveData| (0+256)))& (0+255)
  5895     0A36  0086               	movwf	6
  5896     0A37  3001               	movlw	1	; select bank3/4
  5897     0A38  0087               	movwf	7
  5898     0A39  0820               	movf	i2c_slave_set_register@value,w
  5899     0A3A  0081               	movwf	1
  5900     0A3B                     l261:
  5901     0A3B  0008               	return
  5902     0A3C                     __end_of_i2c_slave_set_register:
  5903                           
  5904                           	psect	text12
  5905     0B33                     __ptext12:	
  5906 ;; *************** function _i2c_slave_init *****************
  5907 ;; Defined at:
  5908 ;;		line 14 in file "i2c_slave.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  i               1    1[BANK0 ] unsigned char 
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5923 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5924 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5925 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5926 ;;Total ram usage:        2 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; Hardware stack levels required when called: 2
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936     0B33                     _i2c_slave_init:	
  5937                           ;psect for function _i2c_slave_init
  5938                           
  5939     0B33                     l2774:	
  5940                           ;incstack = 0
  5941                           ; Regs used in _i2c_slave_init: [wreg+fsr1l+fsr1h+status,2+status,0]
  5942                           
  5943                           
  5944                           ;i2c_slave.c: 15: SSP1STAT = 0x00;
  5945     0B33  0143               	movlb	3	; select bank3
  5946     0B34  018F               	clrf	15	;volatile
  5947     0B35                     l2776:
  5948                           
  5949                           ;i2c_slave.c: 16: SSP1CON1 = 0x36;
  5950     0B35  3036               	movlw	54
  5951     0B36  0090               	movwf	16	;volatile
  5952     0B37                     l2778:
  5953                           
  5954                           ;i2c_slave.c: 17: SSP1CON2 = 0x01;
  5955     0B37  3001               	movlw	1
  5956     0B38  0091               	movwf	17	;volatile
  5957     0B39                     l2780:
  5958                           
  5959                           ;i2c_slave.c: 20: SSP1ADD = 0x68 << 1;
  5960     0B39  30D0               	movlw	208
  5961     0B3A  008D               	movwf	13	;volatile
  5962     0B3B                     l2782:
  5963                           
  5964                           ;i2c_slave.c: 21: SSP1MSK = 0xFF;
  5965     0B3B  30FF               	movlw	255
  5966     0B3C  008E               	movwf	14	;volatile
  5967     0B3D                     l2784:
  5968                           
  5969                           ;i2c_slave.c: 23: PIR3bits.SSP1IF = 0;
  5970     0B3D  014E               	movlb	14	; select bank14
  5971     0B3E  100F               	bcf	15,0	;volatile
  5972     0B3F                     l2786:
  5973                           
  5974                           ;i2c_slave.c: 24: PIE3bits.SSP1IE = 1;
  5975     0B3F  1419               	bsf	25,0	;volatile
  5976                           
  5977                           ;i2c_slave.c: 27: for (uint8_t i = 0; i < 64u; i++) {
  5978     0B40  0140               	movlb	0	; select bank0
  5979     0B41  01A1               	clrf	i2c_slave_init@i
  5980     0B42                     l2792:
  5981                           
  5982                           ;i2c_slave.c: 28: slaveData[i] = 0;
  5983     0B42  0821               	movf	i2c_slave_init@i,w
  5984     0B43  3EA0               	addlw	(low (_slaveData| (0+256)))& (0+255)
  5985     0B44  0086               	movwf	6
  5986     0B45  3001               	movlw	1	; select bank3/4
  5987     0B46  0087               	movwf	7
  5988     0B47  0181               	clrf	1
  5989     0B48                     l2794:
  5990     0B48  3001               	movlw	1
  5991     0B49  00A0               	movwf	??_i2c_slave_init
  5992     0B4A  0820               	movf	??_i2c_slave_init,w
  5993     0B4B  07A1               	addwf	i2c_slave_init@i,f
  5994     0B4C                     l2796:
  5995     0B4C  3040               	movlw	64
  5996     0B4D  0221               	subwf	i2c_slave_init@i,w
  5997     0B4E  1C03               	skipc
  5998     0B4F  2B51               	goto	u2371
  5999     0B50  2B52               	goto	u2370
  6000     0B51                     u2371:
  6001     0B51  2B42               	goto	l2792
  6002     0B52                     u2370:
  6003     0B52                     l258:
  6004     0B52  0008               	return
  6005     0B53                     __end_of_i2c_slave_init:
  6006                           
  6007                           	psect	text13
  6008     0AB5                     __ptext13:	
  6009 ;; *************** function _get_ticks_with_lock *****************
  6010 ;; Defined at:
  6011 ;;		line 101 in file "main.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;		None
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  result          4    4[BANK0 ] unsigned long 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  4    0[BANK0 ] unsigned long 
  6018 ;; Registers used:
  6019 ;;		wreg
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6025 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;Total ram usage:        8 bytes
  6030 ;; Hardware stack levels used: 1
  6031 ;; Hardware stack levels required when called: 2
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_main
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039     0AB5                     _get_ticks_with_lock:	
  6040                           ;psect for function _get_ticks_with_lock
  6041                           
  6042     0AB5                     l2712:	
  6043                           ;incstack = 0
  6044                           ; Regs used in _get_ticks_with_lock: [wreg]
  6045                           
  6046                           
  6047                           ;main.c: 102: GIE = 0;
  6048     0AB5  138B               	bcf	11,7	;volatile
  6049     0AB6                     l2714:
  6050                           
  6051                           ;main.c: 103: uint32_t result = ticks;
  6052     0AB6  0140               	movlb	0	; select bank0
  6053     0AB7  0869               	movf	_ticks+3,w	;volatile
  6054     0AB8  00A7               	movwf	get_ticks_with_lock@result+3
  6055     0AB9  0868               	movf	_ticks+2,w	;volatile
  6056     0ABA  00A6               	movwf	get_ticks_with_lock@result+2
  6057     0ABB  0867               	movf	_ticks+1,w	;volatile
  6058     0ABC  00A5               	movwf	get_ticks_with_lock@result+1
  6059     0ABD  0866               	movf	_ticks,w	;volatile
  6060     0ABE  00A4               	movwf	get_ticks_with_lock@result
  6061     0ABF                     l2716:
  6062                           
  6063                           ;main.c: 104: GIE = 1;
  6064     0ABF  178B               	bsf	11,7	;volatile
  6065                           
  6066                           ;main.c: 105: return result;
  6067     0AC0  0827               	movf	get_ticks_with_lock@result+3,w
  6068     0AC1  00A3               	movwf	?_get_ticks_with_lock+3
  6069     0AC2  0826               	movf	get_ticks_with_lock@result+2,w
  6070     0AC3  00A2               	movwf	?_get_ticks_with_lock+2
  6071     0AC4  0825               	movf	get_ticks_with_lock@result+1,w
  6072     0AC5  00A1               	movwf	?_get_ticks_with_lock+1
  6073     0AC6  0824               	movf	get_ticks_with_lock@result,w
  6074     0AC7  00A0               	movwf	?_get_ticks_with_lock
  6075     0AC8                     l184:
  6076     0AC8  0008               	return
  6077     0AC9                     __end_of_get_ticks_with_lock:
  6078                           
  6079                           	psect	text14
  6080     0A28                     __ptext14:	
  6081 ;; *************** function _get_ticks *****************
  6082 ;; Defined at:
  6083 ;;		line 98 in file "main.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  4    0[BANK0 ] unsigned long 
  6090 ;; Registers used:
  6091 ;;		wreg
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6097 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6100 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6101 ;;Total ram usage:        4 bytes
  6102 ;; Hardware stack levels used: 1
  6103 ;; Hardware stack levels required when called: 2
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111     0A28                     _get_ticks:	
  6112                           ;psect for function _get_ticks
  6113                           
  6114     0A28                     l2708:	
  6115                           ;incstack = 0
  6116                           ; Regs used in _get_ticks: [wreg]
  6117                           
  6118                           
  6119                           ;main.c: 99: return ticks;
  6120     0A28  0140               	movlb	0	; select bank0
  6121     0A29  0869               	movf	_ticks+3,w	;volatile
  6122     0A2A  00A3               	movwf	?_get_ticks+3
  6123     0A2B  0868               	movf	_ticks+2,w	;volatile
  6124     0A2C  00A2               	movwf	?_get_ticks+2
  6125     0A2D  0867               	movf	_ticks+1,w	;volatile
  6126     0A2E  00A1               	movwf	?_get_ticks+1
  6127     0A2F  0866               	movf	_ticks,w	;volatile
  6128     0A30  00A0               	movwf	?_get_ticks
  6129     0A31                     l181:
  6130     0A31  0008               	return
  6131     0A32                     __end_of_get_ticks:
  6132                           
  6133                           	psect	text15
  6134     0A1E                     __ptext15:	
  6135 ;; *************** function _dump_memory_map *****************
  6136 ;; Defined at:
  6137 ;;		line 121 in file "i2c_slave.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;		None
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;		None
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  1    wreg      void 
  6144 ;; Registers used:
  6145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;Total ram usage:        0 bytes
  6156 ;; Hardware stack levels used: 1
  6157 ;; Hardware stack levels required when called: 5
  6158 ;; This function calls:
  6159 ;;		_dump_buffer
  6160 ;; This function is called by:
  6161 ;;		_main
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165     0A1E                     _dump_memory_map:	
  6166                           ;psect for function _dump_memory_map
  6167                           
  6168     0A1E                     l2798:	
  6169                           ;incstack = 0
  6170                           ; Regs used in _dump_memory_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6171                           
  6172                           
  6173                           ;i2c_slave.c: 122: dump_buffer(slaveData, sizeof(slaveData));
  6174     0A1E  3040               	movlw	64
  6175     0A1F  0140               	movlb	0	; select bank0
  6176     0A20  00D8               	movwf	dump_buffer@size
  6177     0A21  3000               	movlw	0
  6178     0A22  00D9               	movwf	dump_buffer@size+1
  6179     0A23  30A0               	movlw	(low (_slaveData| (0+256)))& (0+255)
  6180     0A24  3187  270A  318A   	fcall	_dump_buffer
  6181     0A27                     l291:
  6182     0A27  0008               	return
  6183     0A28                     __end_of_dump_memory_map:
  6184                           
  6185                           	psect	text16
  6186     070A                     __ptext16:	
  6187 ;; *************** function _dump_buffer *****************
  6188 ;; Defined at:
  6189 ;;		line 7 in file "my_helpers.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  buffer          1    wreg     PTR const void 
  6192 ;;		 -> slaveData(64), 
  6193 ;;  size            2   56[BANK0 ] unsigned int 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  buffer          1   64[BANK0 ] PTR const void 
  6196 ;;		 -> slaveData(64), 
  6197 ;;  j               2   68[BANK0 ] unsigned int 
  6198 ;;  i               2   66[BANK0 ] unsigned int 
  6199 ;;  p               1   65[BANK0 ] PTR const unsigned char 
  6200 ;;		 -> slaveData(64), 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6210 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;Total ram usage:       14 bytes
  6215 ;; Hardware stack levels used: 1
  6216 ;; Hardware stack levels required when called: 4
  6217 ;; This function calls:
  6218 ;;		_isprint
  6219 ;;		_printf
  6220 ;; This function is called by:
  6221 ;;		_dump_memory_map
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225     070A                     _dump_buffer:	
  6226                           ;psect for function _dump_buffer
  6227                           
  6228                           
  6229                           ;incstack = 0
  6230                           ; Regs used in _dump_buffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6231                           ;dump_buffer@buffer stored from wreg
  6232     070A  0140               	movlb	0	; select bank0
  6233     070B  00E0               	movwf	dump_buffer@buffer
  6234     070C                     l2604:
  6235                           
  6236                           ;my_helpers.c: 8: const uint8_t *p = (const uint8_t *)buffer;
  6237     070C  0860               	movf	dump_buffer@buffer,w
  6238     070D  00E1               	movwf	dump_buffer@p
  6239     070E                     l2606:
  6240                           
  6241                           ;my_helpers.c: 9: size_t i, j;;my_helpers.c: 11: for (i = 0; i < size; i += 16) {
  6242     070E  01E2               	clrf	dump_buffer@i
  6243     070F  01E3               	clrf	dump_buffer@i+1
  6244     0710  2FC6               	goto	l2652
  6245     0711                     l2608:
  6246                           
  6247                           ;my_helpers.c: 12: printf("%08x:", (unsigned int)i);
  6248     0711  30DA               	movlw	low (STR_12| (0+32768))
  6249     0712  00B8               	movwf	printf@f
  6250     0713  3090               	movlw	high (STR_12| (0+32768))
  6251     0714  00B9               	movwf	printf@f+1
  6252     0715  0863               	movf	dump_buffer@i+1,w
  6253     0716  00BB               	movwf	?_printf+3
  6254     0717  0862               	movf	dump_buffer@i,w
  6255     0718  00BA               	movwf	?_printf+2
  6256     0719  3183  235B  3187   	fcall	_printf
  6257     071C                     l2610:
  6258                           
  6259                           ;my_helpers.c: 13: for (j = 0; j < 16; j++) {
  6260     071C  0140               	movlb	0	; select bank0
  6261     071D  01E4               	clrf	dump_buffer@j
  6262     071E  01E5               	clrf	dump_buffer@j+1
  6263     071F                     l2616:
  6264                           
  6265                           ;my_helpers.c: 14: if (i + j < size) {
  6266     071F  0864               	movf	dump_buffer@j,w
  6267     0720  0762               	addwf	dump_buffer@i,w
  6268     0721  00DA               	movwf	??_dump_buffer
  6269     0722  0865               	movf	dump_buffer@j+1,w
  6270     0723  3D63               	addwfc	dump_buffer@i+1,w
  6271     0724  00DB               	movwf	??_dump_buffer+1
  6272     0725  0859               	movf	dump_buffer@size+1,w
  6273     0726  025B               	subwf	??_dump_buffer+1,w
  6274     0727  1D03               	skipz
  6275     0728  2F2B               	goto	u2215
  6276     0729  0858               	movf	dump_buffer@size,w
  6277     072A  025A               	subwf	??_dump_buffer,w
  6278     072B                     u2215:
  6279     072B  1803               	skipnc
  6280     072C  2F2E               	goto	u2211
  6281     072D  2F2F               	goto	u2210
  6282     072E                     u2211:
  6283     072E  2F48               	goto	l2620
  6284     072F                     u2210:
  6285     072F                     l2618:
  6286                           
  6287                           ;my_helpers.c: 15: printf(" %02x", p[i + j]);
  6288     072F  30E0               	movlw	low (STR_13| (0+32768))
  6289     0730  00B8               	movwf	printf@f
  6290     0731  3090               	movlw	high (STR_13| (0+32768))
  6291     0732  00B9               	movwf	printf@f+1
  6292     0733  0862               	movf	dump_buffer@i,w
  6293     0734  0761               	addwf	dump_buffer@p,w
  6294     0735  00DA               	movwf	??_dump_buffer
  6295     0736  0864               	movf	dump_buffer@j,w
  6296     0737  075A               	addwf	??_dump_buffer,w
  6297     0738  00DB               	movwf	??_dump_buffer+1
  6298     0739  085B               	movf	??_dump_buffer+1,w
  6299     073A  0086               	movwf	6
  6300     073B  3001               	movlw	1	; select bank2/3
  6301     073C  0087               	movwf	7
  6302     073D  0801               	movf	1,w
  6303     073E  00DC               	movwf	??_dump_buffer+2
  6304     073F  01DD               	clrf	??_dump_buffer+3
  6305     0740  085C               	movf	??_dump_buffer+2,w
  6306     0741  00BA               	movwf	?_printf+2
  6307     0742  085D               	movf	??_dump_buffer+3,w
  6308     0743  00BB               	movwf	?_printf+3
  6309     0744  3183  235B  3187   	fcall	_printf
  6310                           
  6311                           ;my_helpers.c: 16: } else {
  6312     0747  2F4F               	goto	l2622
  6313     0748                     l2620:
  6314                           
  6315                           ;my_helpers.c: 17: printf("   ");
  6316     0748  30EC               	movlw	low (STR_14| (0+32768))
  6317     0749  00B8               	movwf	printf@f
  6318     074A  3090               	movlw	high (STR_14| (0+32768))
  6319     074B  00B9               	movwf	printf@f+1
  6320     074C  3183  235B  3187   	fcall	_printf
  6321     074F                     l2622:
  6322     074F  3001               	movlw	1
  6323     0750  0140               	movlb	0	; select bank0
  6324     0751  07E4               	addwf	dump_buffer@j,f
  6325     0752  3000               	movlw	0
  6326     0753  3DE5               	addwfc	dump_buffer@j+1,f
  6327     0754                     l2624:
  6328     0754  3000               	movlw	0
  6329     0755  0265               	subwf	dump_buffer@j+1,w
  6330     0756  3010               	movlw	16
  6331     0757  1903               	skipnz
  6332     0758  0264               	subwf	dump_buffer@j,w
  6333     0759  1C03               	skipc
  6334     075A  2F5C               	goto	u2221
  6335     075B  2F5D               	goto	u2220
  6336     075C                     u2221:
  6337     075C  2F1F               	goto	l2616
  6338     075D                     u2220:
  6339     075D                     l2626:
  6340                           
  6341                           ;my_helpers.c: 18: };my_helpers.c: 19: };my_helpers.c: 20: printf("  ");
  6342     075D  30ED               	movlw	low ((STR_14+1)| (0+32768))
  6343     075E  00B8               	movwf	printf@f
  6344     075F  3090               	movlw	high ((STR_14+1)| (0+32768))
  6345     0760  00B9               	movwf	printf@f+1
  6346     0761  3183  235B  3187   	fcall	_printf
  6347     0764                     l2628:
  6348                           
  6349                           ;my_helpers.c: 21: for (j = 0; j < 16; j++) {
  6350     0764  0140               	movlb	0	; select bank0
  6351     0765  01E4               	clrf	dump_buffer@j
  6352     0766  01E5               	clrf	dump_buffer@j+1
  6353     0767                     l2634:
  6354                           
  6355                           ;my_helpers.c: 22: if (i + j < size) {
  6356     0767  0864               	movf	dump_buffer@j,w
  6357     0768  0762               	addwf	dump_buffer@i,w
  6358     0769  00DA               	movwf	??_dump_buffer
  6359     076A  0865               	movf	dump_buffer@j+1,w
  6360     076B  3D63               	addwfc	dump_buffer@i+1,w
  6361     076C  00DB               	movwf	??_dump_buffer+1
  6362     076D  0859               	movf	dump_buffer@size+1,w
  6363     076E  025B               	subwf	??_dump_buffer+1,w
  6364     076F  1D03               	skipz
  6365     0770  2F73               	goto	u2235
  6366     0771  0858               	movf	dump_buffer@size,w
  6367     0772  025A               	subwf	??_dump_buffer,w
  6368     0773                     u2235:
  6369     0773  1803               	skipnc
  6370     0774  2F76               	goto	u2231
  6371     0775  2F77               	goto	u2230
  6372     0776                     u2231:
  6373     0776  2FAC               	goto	l2644
  6374     0777                     u2230:
  6375     0777                     l2636:
  6376                           
  6377                           ;my_helpers.c: 23: printf("%c", isprint(p[i + j]) ? p[i + j] : '.');
  6378     0777  0862               	movf	dump_buffer@i,w
  6379     0778  0761               	addwf	dump_buffer@p,w
  6380     0779  00DA               	movwf	??_dump_buffer
  6381     077A  0864               	movf	dump_buffer@j,w
  6382     077B  075A               	addwf	??_dump_buffer,w
  6383     077C  00DB               	movwf	??_dump_buffer+1
  6384     077D  085B               	movf	??_dump_buffer+1,w
  6385     077E  0086               	movwf	6
  6386     077F  3001               	movlw	1	; select bank2/3
  6387     0780  0087               	movwf	7
  6388     0781  0801               	movf	1,w
  6389     0782  318A  227C  3187   	fcall	_isprint
  6390     0785  1803               	btfsc	3,0
  6391     0786  2F88               	goto	u2241
  6392     0787  2F89               	goto	u2240
  6393     0788                     u2241:
  6394     0788  2F8F               	goto	l2640
  6395     0789                     u2240:
  6396     0789                     l2638:
  6397     0789  302E               	movlw	46
  6398     078A  0140               	movlb	0	; select bank0
  6399     078B  00DE               	movwf	_dump_buffer$746
  6400     078C  3000               	movlw	0
  6401     078D  00DF               	movwf	_dump_buffer$746+1
  6402     078E  2FA1               	goto	l2642
  6403     078F                     l2640:
  6404     078F  0140               	movlb	0	; select bank0
  6405     0790  0862               	movf	dump_buffer@i,w
  6406     0791  0761               	addwf	dump_buffer@p,w
  6407     0792  00DA               	movwf	??_dump_buffer
  6408     0793  0864               	movf	dump_buffer@j,w
  6409     0794  075A               	addwf	??_dump_buffer,w
  6410     0795  00DB               	movwf	??_dump_buffer+1
  6411     0796  085B               	movf	??_dump_buffer+1,w
  6412     0797  0086               	movwf	6
  6413     0798  3001               	movlw	1	; select bank2/3
  6414     0799  0087               	movwf	7
  6415     079A  0801               	movf	1,w
  6416     079B  00DC               	movwf	??_dump_buffer+2
  6417     079C  01DD               	clrf	??_dump_buffer+3
  6418     079D  085C               	movf	??_dump_buffer+2,w
  6419     079E  00DE               	movwf	_dump_buffer$746
  6420     079F  085D               	movf	??_dump_buffer+3,w
  6421     07A0  00DF               	movwf	_dump_buffer$746+1
  6422     07A1                     l2642:
  6423     07A1  30F0               	movlw	low (STR_16| (0+32768))
  6424     07A2  00B8               	movwf	printf@f
  6425     07A3  3090               	movlw	high (STR_16| (0+32768))
  6426     07A4  00B9               	movwf	printf@f+1
  6427     07A5  085F               	movf	_dump_buffer$746+1,w
  6428     07A6  00BB               	movwf	?_printf+3
  6429     07A7  085E               	movf	_dump_buffer$746,w
  6430     07A8  00BA               	movwf	?_printf+2
  6431     07A9  3183  235B  3187   	fcall	_printf
  6432     07AC                     l2644:
  6433     07AC  3001               	movlw	1
  6434     07AD  0140               	movlb	0	; select bank0
  6435     07AE  07E4               	addwf	dump_buffer@j,f
  6436     07AF  3000               	movlw	0
  6437     07B0  3DE5               	addwfc	dump_buffer@j+1,f
  6438     07B1                     l2646:
  6439     07B1  3000               	movlw	0
  6440     07B2  0265               	subwf	dump_buffer@j+1,w
  6441     07B3  3010               	movlw	16
  6442     07B4  1903               	skipnz
  6443     07B5  0264               	subwf	dump_buffer@j,w
  6444     07B6  1C03               	skipc
  6445     07B7  2FB9               	goto	u2251
  6446     07B8  2FBA               	goto	u2250
  6447     07B9                     u2251:
  6448     07B9  2F67               	goto	l2634
  6449     07BA                     u2250:
  6450     07BA                     l2648:
  6451                           
  6452                           ;my_helpers.c: 24: };my_helpers.c: 25: };my_helpers.c: 26: printf("\r\n");
  6453     07BA  3038               	movlw	low ((STR_11+24)| (0+32768))
  6454     07BB  00B8               	movwf	printf@f
  6455     07BC  3090               	movlw	high ((STR_11+24)| (0+32768))
  6456     07BD  00B9               	movwf	printf@f+1
  6457     07BE  3183  235B  3187   	fcall	_printf
  6458     07C1                     l2650:
  6459     07C1  3010               	movlw	16
  6460     07C2  0140               	movlb	0	; select bank0
  6461     07C3  07E2               	addwf	dump_buffer@i,f
  6462     07C4  3000               	movlw	0
  6463     07C5  3DE3               	addwfc	dump_buffer@i+1,f
  6464     07C6                     l2652:
  6465     07C6  0859               	movf	dump_buffer@size+1,w
  6466     07C7  0263               	subwf	dump_buffer@i+1,w
  6467     07C8  1D03               	skipz
  6468     07C9  2FCC               	goto	u2265
  6469     07CA  0858               	movf	dump_buffer@size,w
  6470     07CB  0262               	subwf	dump_buffer@i,w
  6471     07CC                     u2265:
  6472     07CC  1C03               	skipc
  6473     07CD  2FCF               	goto	u2261
  6474     07CE  2FD0               	goto	u2260
  6475     07CF                     u2261:
  6476     07CF  2F11               	goto	l2608
  6477     07D0                     u2260:
  6478     07D0                     l327:
  6479     07D0  0008               	return
  6480     07D1                     __end_of_dump_buffer:
  6481                           
  6482                           	psect	text17
  6483     035B                     __ptext17:	
  6484 ;; *************** function _printf *****************
  6485 ;; Defined at:
  6486 ;;		line 477 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  f               2   24[BANK0 ] PTR const unsigned char 
  6489 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(4), 
  6490 ;;		 -> STR_13(6), STR_12(6), STR_11(27), STR_10(11), 
  6491 ;;		 -> STR_9(9), STR_8(16), STR_6(9), STR_5(22), 
  6492 ;;		 -> STR_2(3), STR_1(6), 
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  idx             1   40[BANK0 ] unsigned char 
  6495 ;;  val             4   45[BANK0 ] unsigned long 
  6496 ;;  tmpval          4    0        struct .
  6497 ;;  width           2   53[BANK0 ] int 
  6498 ;;  len             2   49[BANK0 ] unsigned int 
  6499 ;;  cp              2   43[BANK0 ] PTR const unsigned char 
  6500 ;;		 -> STR_18(7), printf@c(1), ?_printf(2), slaveData(64), 
  6501 ;;		 -> STR_7(11), 
  6502 ;;  prec            2   41[BANK0 ] int 
  6503 ;;  c               1   55[BANK0 ] unsigned char 
  6504 ;;  flag            1   52[BANK0 ] unsigned char 
  6505 ;;  ap              1   51[BANK0 ] PTR void [1]
  6506 ;;		 -> ?_printf(2), 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  2   24[BANK0 ] int 
  6509 ;; Registers used:
  6510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6516 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;Total ram usage:       32 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 3
  6523 ;; This function calls:
  6524 ;;		___lldiv
  6525 ;;		___llmod
  6526 ;;		___wmul
  6527 ;;		_isdigit
  6528 ;;		_putch
  6529 ;; This function is called by:
  6530 ;;		_main
  6531 ;;		_dump_buffer
  6532 ;;		_print_buffer
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536     035B                     _printf:	
  6537                           ;psect for function _printf
  6538                           
  6539     035B                     l2260:	
  6540                           ;incstack = 0
  6541                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6542                           
  6543                           
  6544                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  6545     035B  303A               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6546     035C  0140               	movlb	0	; select bank0
  6547     035D  00D3               	movwf	printf@ap
  6548                           
  6549                           ;doprnt.c: 553: while((c = *f++)) {
  6550     035E  2DEC               	goto	l2404
  6551     035F                     l2262:
  6552                           
  6553                           ;doprnt.c: 555: if(c != '%')
  6554     035F  3025               	movlw	37
  6555     0360  0657               	xorwf	printf@c,w
  6556     0361  1903               	btfsc	3,2
  6557     0362  2B64               	goto	u1681
  6558     0363  2B65               	goto	u1680
  6559     0364                     u1681:
  6560     0364  2B6A               	goto	l2266
  6561     0365                     u1680:
  6562     0365                     l2264:
  6563                           
  6564                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
  6565     0365  0857               	movf	printf@c,w
  6566     0366  318A  2253  3183   	fcall	_putch
  6567                           
  6568                           ;doprnt.c: 559: continue;
  6569     0369  2DEC               	goto	l2404
  6570     036A                     l2266:
  6571                           
  6572                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  6573     036A  01D5               	clrf	printf@width
  6574     036B  01D6               	clrf	printf@width+1
  6575                           
  6576                           ;doprnt.c: 565: flag = 0;
  6577     036C  01D4               	clrf	printf@flag
  6578     036D  2B73               	goto	l2272
  6579     036E                     l495:	
  6580                           ;doprnt.c: 596: case '0':
  6581                           
  6582                           
  6583                           ;doprnt.c: 597: flag |= 0x04;
  6584     036E  1554               	bsf	printf@flag,2
  6585     036F                     l2268:
  6586                           
  6587                           ;doprnt.c: 598: f++;
  6588     036F  3001               	movlw	1
  6589     0370  07B8               	addwf	printf@f,f
  6590     0371  3000               	movlw	0
  6591     0372  3DB9               	addwfc	printf@f+1,f
  6592     0373                     l2272:	
  6593                           ;doprnt.c: 599: continue;
  6594                           
  6595     0373  0838               	movf	printf@f,w
  6596     0374  0084               	movwf	4
  6597     0375  0839               	movf	printf@f+1,w
  6598     0376  0085               	movwf	5
  6599     0377  0800               	movf	0,w	;code access
  6600                           
  6601                           ; Switch size 1, requested type "simple"
  6602                           ; Number of cases is 1, Range of values is 48 to 48
  6603                           ; switch strategies available:
  6604                           ; Name         Instructions Cycles
  6605                           ; simple_byte            4     3 (average)
  6606                           ; direct_byte           11     9 (fixed)
  6607                           ; jumptable            263     9 (fixed)
  6608                           ;	Chosen strategy is simple_byte
  6609     0378  3A30               	xorlw	48	; case 48
  6610     0379  1903               	skipnz
  6611     037A  2B6E               	goto	l495
  6612     037B  2B7C               	goto	l2274
  6613     037C                     l2274:
  6614                           
  6615                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  6616     037C  0838               	movf	printf@f,w
  6617     037D  0084               	movwf	4
  6618     037E  0839               	movf	printf@f+1,w
  6619     037F  0085               	movwf	5
  6620     0380  0800               	movf	0,w	;code access
  6621     0381  318A  228F  3183   	fcall	_isdigit
  6622     0384  1C03               	btfss	3,0
  6623     0385  2B87               	goto	u1691
  6624     0386  2B88               	goto	u1690
  6625     0387                     u1691:
  6626     0387  2C3D               	goto	l2328
  6627     0388                     u1690:
  6628     0388                     l2276:
  6629                           
  6630                           ;doprnt.c: 615: width = 0;
  6631     0388  0140               	movlb	0	; select bank0
  6632     0389  01D5               	clrf	printf@width
  6633     038A  01D6               	clrf	printf@width+1
  6634     038B                     l2278:
  6635                           
  6636                           ;doprnt.c: 617: width *= 10;
  6637     038B  300A               	movlw	10
  6638     038C  0140               	movlb	0	; select bank0
  6639     038D  00A0               	movwf	___wmul@multiplier
  6640     038E  3000               	movlw	0
  6641     038F  00A1               	movwf	___wmul@multiplier+1
  6642     0390  0856               	movf	printf@width+1,w
  6643     0391  00A3               	movwf	___wmul@multiplicand+1
  6644     0392  0855               	movf	printf@width,w
  6645     0393  00A2               	movwf	___wmul@multiplicand
  6646     0394  318B  2313  3183   	fcall	___wmul
  6647     0397  0140               	movlb	0	; select bank0
  6648     0398  0821               	movf	?___wmul+1,w
  6649     0399  00D6               	movwf	printf@width+1
  6650     039A  0820               	movf	?___wmul,w
  6651     039B  00D5               	movwf	printf@width
  6652     039C                     l2280:
  6653                           
  6654                           ;doprnt.c: 618: width += *f++ - '0';
  6655     039C  0838               	movf	printf@f,w
  6656     039D  0084               	movwf	4
  6657     039E  0839               	movf	printf@f+1,w
  6658     039F  0085               	movwf	5
  6659     03A0  0800               	movf	0,w	;code access
  6660     03A1  3ED0               	addlw	208
  6661     03A2  00C0               	movwf	??_printf
  6662     03A3  30FF               	movlw	255
  6663     03A4  1803               	skipnc
  6664     03A5  3000               	movlw	0
  6665     03A6  00C1               	movwf	??_printf+1
  6666     03A7  0840               	movf	??_printf,w
  6667     03A8  07D5               	addwf	printf@width,f
  6668     03A9  0841               	movf	??_printf+1,w
  6669     03AA  3DD6               	addwfc	printf@width+1,f
  6670     03AB                     l2282:
  6671     03AB  3001               	movlw	1
  6672     03AC  07B8               	addwf	printf@f,f
  6673     03AD  3000               	movlw	0
  6674     03AE  3DB9               	addwfc	printf@f+1,f
  6675     03AF                     l2284:
  6676                           
  6677                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  6678     03AF  0838               	movf	printf@f,w
  6679     03B0  0084               	movwf	4
  6680     03B1  0839               	movf	printf@f+1,w
  6681     03B2  0085               	movwf	5
  6682     03B3  0800               	movf	0,w	;code access
  6683     03B4  318A  228F  3183   	fcall	_isdigit
  6684     03B7  1803               	btfsc	3,0
  6685     03B8  2BBA               	goto	u1701
  6686     03B9  2BBB               	goto	u1700
  6687     03BA                     u1701:
  6688     03BA  2B8B               	goto	l2278
  6689     03BB                     u1700:
  6690     03BB  2C3D               	goto	l2328
  6691     03BC                     l506:	
  6692                           ;doprnt.c: 667: case 'l':
  6693                           
  6694                           
  6695                           ;doprnt.c: 669: flag |= 0x10;
  6696     03BC  1654               	bsf	printf@flag,4
  6697                           
  6698                           ;doprnt.c: 670: goto loop;
  6699     03BD  2C3D               	goto	l2328
  6700     03BE                     l507:	
  6701                           ;doprnt.c: 738: case 'X':
  6702                           
  6703                           
  6704                           ;doprnt.c: 740: flag |= 0x20;
  6705     03BE  16D4               	bsf	printf@flag,5
  6706     03BF                     l508:	
  6707                           ;doprnt.c: 744: case 'x':
  6708                           
  6709                           
  6710                           ;doprnt.c: 747: flag |= 0x80;
  6711     03BF  17D4               	bsf	printf@flag,7
  6712                           
  6713                           ;doprnt.c: 749: break;
  6714     03C0  2C61               	goto	l509
  6715     03C1                     l2286:
  6716                           
  6717                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  6718     03C1  0853               	movf	printf@ap,w
  6719     03C2  0086               	movwf	6
  6720     03C3  0187               	clrf	7
  6721     03C4  3F40               	moviw [0]fsr1
  6722     03C5  00CB               	movwf	printf@cp
  6723     03C6  3F41               	moviw [1]fsr1
  6724     03C7  00CC               	movwf	printf@cp+1
  6725     03C8                     l2288:
  6726     03C8  3002               	movlw	2
  6727     03C9  00C0               	movwf	??_printf
  6728     03CA  0840               	movf	??_printf,w
  6729     03CB  07D3               	addwf	printf@ap,f
  6730     03CC                     l2290:
  6731                           
  6732                           ;doprnt.c: 766: if(!cp)
  6733     03CC  084B               	movf	printf@cp,w
  6734     03CD  044C               	iorwf	printf@cp+1,w
  6735     03CE  1D03               	btfss	3,2
  6736     03CF  2BD1               	goto	u1711
  6737     03D0  2BD2               	goto	u1710
  6738     03D1                     u1711:
  6739     03D1  2BD6               	goto	l2294
  6740     03D2                     u1710:
  6741     03D2                     l2292:
  6742                           
  6743                           ;doprnt.c: 767: cp = "(null)";
  6744     03D2  30D3               	movlw	low (STR_18| (0+32768))
  6745     03D3  00CB               	movwf	printf@cp
  6746     03D4  3090               	movlw	high (STR_18| (0+32768))
  6747     03D5  00CC               	movwf	printf@cp+1
  6748     03D6                     l2294:
  6749                           
  6750                           ;doprnt.c: 771: len = 0;
  6751     03D6  01D1               	clrf	printf@len
  6752     03D7  01D2               	clrf	printf@len+1
  6753                           
  6754                           ;doprnt.c: 772: while(cp[len])
  6755     03D8  2BDD               	goto	l2298
  6756     03D9                     l2296:
  6757                           
  6758                           ;doprnt.c: 773: len++;
  6759     03D9  3001               	movlw	1
  6760     03DA  07D1               	addwf	printf@len,f
  6761     03DB  3000               	movlw	0
  6762     03DC  3DD2               	addwfc	printf@len+1,f
  6763     03DD                     l2298:
  6764     03DD  084B               	movf	printf@cp,w
  6765     03DE  0751               	addwf	printf@len,w
  6766     03DF  0084               	movwf	4
  6767     03E0  084C               	movf	printf@cp+1,w
  6768     03E1  3D52               	addwfc	printf@len+1,w
  6769     03E2  0085               	movwf	5
  6770     03E3  0012               	moviw fsr0++
  6771     03E4  1D03               	btfss	3,2
  6772     03E5  2BE7               	goto	u1721
  6773     03E6  2BE8               	goto	u1720
  6774     03E7                     u1721:
  6775     03E7  2BD9               	goto	l2296
  6776     03E8                     u1720:
  6777     03E8                     l2300:
  6778                           
  6779                           ;doprnt.c: 783: if(((unsigned)width) > len)
  6780     03E8  0856               	movf	printf@width+1,w
  6781     03E9  0252               	subwf	printf@len+1,w
  6782     03EA  1D03               	skipz
  6783     03EB  2BEE               	goto	u1735
  6784     03EC  0855               	movf	printf@width,w
  6785     03ED  0251               	subwf	printf@len,w
  6786     03EE                     u1735:
  6787     03EE  1803               	skipnc
  6788     03EF  2BF1               	goto	u1731
  6789     03F0  2BF2               	goto	u1730
  6790     03F1                     u1731:
  6791     03F1  2BF7               	goto	l2304
  6792     03F2                     u1730:
  6793     03F2                     l2302:
  6794                           
  6795                           ;doprnt.c: 784: width -= len;
  6796     03F2  0851               	movf	printf@len,w
  6797     03F3  02D5               	subwf	printf@width,f
  6798     03F4  0852               	movf	printf@len+1,w
  6799     03F5  3BD6               	subwfb	printf@width+1,f
  6800     03F6  2BFE               	goto	l2308
  6801     03F7                     l2304:
  6802                           
  6803                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  6804     03F7  01D5               	clrf	printf@width
  6805     03F8  01D6               	clrf	printf@width+1
  6806     03F9  2BFE               	goto	l2308
  6807     03FA                     l2306:
  6808                           
  6809                           ;doprnt.c: 791: (putch(' ') );
  6810     03FA  3020               	movlw	32
  6811     03FB  318A  2253  3183   	fcall	_putch
  6812     03FE                     l2308:
  6813     03FE  30FF               	movlw	255
  6814     03FF  0140               	movlb	0	; select bank0
  6815     0400  07D5               	addwf	printf@width,f
  6816     0401  30FF               	movlw	255
  6817     0402  3DD6               	addwfc	printf@width+1,f
  6818     0403  0A55               	incf	printf@width,w
  6819     0404  1D03               	skipz
  6820     0405  2C0A               	goto	u1741
  6821     0406  0A56               	incf	printf@width+1,w
  6822     0407  1D03               	btfss	3,2
  6823     0408  2C0A               	goto	u1741
  6824     0409  2C0B               	goto	u1740
  6825     040A                     u1741:
  6826     040A  2BFA               	goto	l2306
  6827     040B                     u1740:
  6828     040B  2C19               	goto	l2314
  6829     040C                     l2310:
  6830                           
  6831                           ;doprnt.c: 794: (putch(*cp++) );
  6832     040C  084B               	movf	printf@cp,w
  6833     040D  0084               	movwf	4
  6834     040E  084C               	movf	printf@cp+1,w
  6835     040F  0085               	movwf	5
  6836     0410  0800               	movf	0,w	;code access
  6837     0411  318A  2253  3183   	fcall	_putch
  6838     0414                     l2312:
  6839     0414  3001               	movlw	1
  6840     0415  0140               	movlb	0	; select bank0
  6841     0416  07CB               	addwf	printf@cp,f
  6842     0417  3000               	movlw	0
  6843     0418  3DCC               	addwfc	printf@cp+1,f
  6844     0419                     l2314:
  6845     0419  3001               	movlw	1
  6846     041A  02D1               	subwf	printf@len,f
  6847     041B  3000               	movlw	0
  6848     041C  3BD2               	subwfb	printf@len+1,f
  6849     041D  0A51               	incf	printf@len,w
  6850     041E  1D03               	skipz
  6851     041F  2C24               	goto	u1751
  6852     0420  0A52               	incf	printf@len+1,w
  6853     0421  1D03               	btfss	3,2
  6854     0422  2C24               	goto	u1751
  6855     0423  2C25               	goto	u1750
  6856     0424                     u1751:
  6857     0424  2C0C               	goto	l2310
  6858     0425                     u1750:
  6859     0425  2DEC               	goto	l2404
  6860     0426                     l2316:
  6861                           
  6862                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  6863     0426  0853               	movf	printf@ap,w
  6864     0427  0086               	movwf	6
  6865     0428  0187               	clrf	7
  6866     0429  0801               	movf	1,w
  6867     042A  00D7               	movwf	printf@c
  6868     042B                     l2318:
  6869     042B  3002               	movlw	2
  6870     042C  00C0               	movwf	??_printf
  6871     042D  0840               	movf	??_printf,w
  6872     042E  07D3               	addwf	printf@ap,f
  6873     042F                     l2320:
  6874                           
  6875                           ;doprnt.c: 831: cp = (char *)&c;
  6876     042F  3057               	movlw	low printf@c
  6877     0430  00CB               	movwf	printf@cp
  6878     0431  3000               	movlw	high printf@c
  6879     0432  00CC               	movwf	printf@cp+1
  6880     0433                     l2322:
  6881                           
  6882                           ;doprnt.c: 832: len = 1;
  6883     0433  3001               	movlw	1
  6884     0434  00D1               	movwf	printf@len
  6885     0435  3000               	movlw	0
  6886     0436  00D2               	movwf	printf@len+1
  6887                           
  6888                           ;doprnt.c: 833: goto dostring;
  6889     0437  2BE8               	goto	l2300
  6890     0438                     l2324:
  6891                           
  6892                           ;doprnt.c: 844: flag |= 0xC0;
  6893     0438  30C0               	movlw	192
  6894     0439  00C0               	movwf	??_printf
  6895     043A  0840               	movf	??_printf,w
  6896     043B  04D4               	iorwf	printf@flag,f
  6897                           
  6898                           ;doprnt.c: 845: break;
  6899     043C  2C61               	goto	l509
  6900     043D                     l2328:
  6901     043D  0140               	movlb	0	; select bank0
  6902     043E  0839               	movf	printf@f+1,w
  6903     043F  00C1               	movwf	??_printf+1
  6904     0440  0838               	movf	printf@f,w
  6905     0441  00C0               	movwf	??_printf
  6906     0442  0AB8               	incf	printf@f,f
  6907     0443  1903               	skipnz
  6908     0444  0AB9               	incf	printf@f+1,f
  6909     0445  0840               	movf	??_printf,w
  6910     0446  0084               	movwf	4
  6911     0447  0841               	movf	??_printf+1,w
  6912     0448  0085               	movwf	5
  6913     0449  0800               	movf	0,w	;code access
  6914     044A  00D7               	movwf	printf@c
  6915                           
  6916                           ; Switch size 1, requested type "simple"
  6917                           ; Number of cases is 7, Range of values is 0 to 120
  6918                           ; switch strategies available:
  6919                           ; Name         Instructions Cycles
  6920                           ; simple_byte           22    12 (average)
  6921                           ; direct_byte          248     6 (fixed)
  6922                           ; jumptable            260     6 (fixed)
  6923                           ;	Chosen strategy is simple_byte
  6924     044B  3A00               	xorlw	0	; case 0
  6925     044C  1903               	skipnz
  6926     044D  2DFF               	goto	l561
  6927     044E  3A58               	xorlw	88	; case 88
  6928     044F  1903               	skipnz
  6929     0450  2BBE               	goto	l507
  6930     0451  3A3B               	xorlw	59	; case 99
  6931     0452  1903               	skipnz
  6932     0453  2C26               	goto	l2316
  6933     0454  3A0F               	xorlw	15	; case 108
  6934     0455  1903               	skipnz
  6935     0456  2BBC               	goto	l506
  6936     0457  3A1F               	xorlw	31	; case 115
  6937     0458  1903               	skipnz
  6938     0459  2BC1               	goto	l2286
  6939     045A  3A06               	xorlw	6	; case 117
  6940     045B  1903               	skipnz
  6941     045C  2C38               	goto	l2324
  6942     045D  3A0D               	xorlw	13	; case 120
  6943     045E  1903               	skipnz
  6944     045F  2BBF               	goto	l508
  6945     0460  2C2F               	goto	l2320
  6946     0461                     l509:
  6947                           
  6948                           ;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  6949     0461  1E54               	btfss	printf@flag,4
  6950     0462  2C64               	goto	u1761
  6951     0463  2C65               	goto	u1760
  6952     0464                     u1761:
  6953     0464  2C75               	goto	l2334
  6954     0465                     u1760:
  6955     0465                     l2330:
  6956                           
  6957                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  6958     0465  0853               	movf	printf@ap,w
  6959     0466  0086               	movwf	6
  6960     0467  0187               	clrf	7
  6961     0468  3F40               	moviw [0]fsr1
  6962     0469  00CD               	movwf	printf@val
  6963     046A  3F41               	moviw [1]fsr1
  6964     046B  00CE               	movwf	printf@val+1
  6965     046C  3F42               	moviw [2]fsr1
  6966     046D  00CF               	movwf	printf@val+2
  6967     046E  3F43               	moviw [3]fsr1
  6968     046F  00D0               	movwf	printf@val+3
  6969     0470                     l2332:
  6970     0470  3004               	movlw	4
  6971     0471  00C0               	movwf	??_printf
  6972     0472  0840               	movf	??_printf,w
  6973     0473  07D3               	addwf	printf@ap,f
  6974     0474  2D01               	goto	l2360
  6975     0475                     l2334:
  6976                           
  6977                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  6978     0475  0853               	movf	printf@ap,w
  6979     0476  0086               	movwf	6
  6980     0477  0187               	clrf	7
  6981     0478  3F40               	moviw [0]fsr1
  6982     0479  00C0               	movwf	??_printf
  6983     047A  3F41               	moviw [1]fsr1
  6984     047B  00C1               	movwf	??_printf+1
  6985     047C  0840               	movf	??_printf,w
  6986     047D  00CD               	movwf	printf@val
  6987     047E  0841               	movf	??_printf+1,w
  6988     047F  00CE               	movwf	printf@val+1
  6989     0480  01CF               	clrf	printf@val+2
  6990     0481  01D0               	clrf	printf@val+3
  6991     0482                     l2336:
  6992     0482  3002               	movlw	2
  6993     0483  00C0               	movwf	??_printf
  6994     0484  0840               	movf	??_printf,w
  6995     0485  07D3               	addwf	printf@ap,f
  6996     0486  2D01               	goto	l2360
  6997     0487                     l530:	
  6998                           ;doprnt.c: 1328: case 0xC0:
  6999                           
  7000                           
  7001                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7002     0487  01D7               	clrf	printf@c
  7003     0488  0AD7               	incf	printf@c,f
  7004     0489                     l2338:
  7005     0489  300A               	movlw	10
  7006     048A  0657               	xorwf	printf@c,w
  7007     048B  1D03               	btfss	3,2
  7008     048C  2C8E               	goto	u1771
  7009     048D  2C8F               	goto	u1770
  7010     048E                     u1771:
  7011     048E  2C90               	goto	l2342
  7012     048F                     u1770:
  7013     048F  2D0A               	goto	l2362
  7014     0490                     l2342:
  7015                           
  7016                           ;doprnt.c: 1332: if(val < dpowers[c])
  7017     0490  0857               	movf	printf@c,w
  7018     0491  00C0               	movwf	??_printf
  7019     0492  01C1               	clrf	??_printf+1
  7020     0493  35C0               	lslf	??_printf,f
  7021     0494  0DC1               	rlf	??_printf+1,f
  7022     0495  35C0               	lslf	??_printf,f
  7023     0496  0DC1               	rlf	??_printf+1,f
  7024     0497  303B               	movlw	low _dpowers
  7025     0498  0740               	addwf	??_printf,w
  7026     0499  0084               	movwf	4
  7027     049A  3010               	movlw	high _dpowers
  7028     049B  3D41               	addwfc	??_printf+1,w
  7029     049C  3880               	iorlw	128
  7030     049D  0085               	movwf	5
  7031     049E  3F00               	moviw [0]fsr0
  7032     049F  00C2               	movwf	??_printf+2
  7033     04A0  3F01               	moviw [1]fsr0
  7034     04A1  00C3               	movwf	??_printf+3
  7035     04A2  3F02               	moviw [2]fsr0
  7036     04A3  00C4               	movwf	??_printf+4
  7037     04A4  3F03               	moviw [3]fsr0
  7038     04A5  00C5               	movwf	??_printf+5
  7039     04A6  0845               	movf	??_printf+5,w
  7040     04A7  0250               	subwf	printf@val+3,w
  7041     04A8  1D03               	skipz
  7042     04A9  2CB4               	goto	u1785
  7043     04AA  0844               	movf	??_printf+4,w
  7044     04AB  024F               	subwf	printf@val+2,w
  7045     04AC  1D03               	skipz
  7046     04AD  2CB4               	goto	u1785
  7047     04AE  0843               	movf	??_printf+3,w
  7048     04AF  024E               	subwf	printf@val+1,w
  7049     04B0  1D03               	skipz
  7050     04B1  2CB4               	goto	u1785
  7051     04B2  0842               	movf	??_printf+2,w
  7052     04B3  024D               	subwf	printf@val,w
  7053     04B4                     u1785:
  7054     04B4  1803               	skipnc
  7055     04B5  2CB7               	goto	u1781
  7056     04B6  2CB8               	goto	u1780
  7057     04B7                     u1781:
  7058     04B7  2CB9               	goto	l2346
  7059     04B8                     u1780:
  7060     04B8  2D0A               	goto	l2362
  7061     04B9                     l2346:
  7062     04B9  3001               	movlw	1
  7063     04BA  00C0               	movwf	??_printf
  7064     04BB  0840               	movf	??_printf,w
  7065     04BC  07D7               	addwf	printf@c,f
  7066     04BD  300A               	movlw	10
  7067     04BE  0657               	xorwf	printf@c,w
  7068     04BF  1D03               	btfss	3,2
  7069     04C0  2CC2               	goto	u1791
  7070     04C1  2CC3               	goto	u1790
  7071     04C2                     u1791:
  7072     04C2  2C90               	goto	l2342
  7073     04C3                     u1790:
  7074     04C3  2D0A               	goto	l2362
  7075     04C4                     l535:	
  7076                           ;doprnt.c: 1340: case 0x80:
  7077                           
  7078                           
  7079                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7080     04C4  01D7               	clrf	printf@c
  7081     04C5  0AD7               	incf	printf@c,f
  7082     04C6                     l2348:
  7083     04C6  3008               	movlw	8
  7084     04C7  0657               	xorwf	printf@c,w
  7085     04C8  1D03               	btfss	3,2
  7086     04C9  2CCB               	goto	u1801
  7087     04CA  2CCC               	goto	u1800
  7088     04CB                     u1801:
  7089     04CB  2CCD               	goto	l2352
  7090     04CC                     u1800:
  7091     04CC  2D0A               	goto	l2362
  7092     04CD                     l2352:
  7093                           
  7094                           ;doprnt.c: 1343: if(val < hexpowers[c])
  7095     04CD  0857               	movf	printf@c,w
  7096     04CE  00C0               	movwf	??_printf
  7097     04CF  01C1               	clrf	??_printf+1
  7098     04D0  35C0               	lslf	??_printf,f
  7099     04D1  0DC1               	rlf	??_printf+1,f
  7100     04D2  35C0               	lslf	??_printf,f
  7101     04D3  0DC1               	rlf	??_printf+1,f
  7102     04D4  3000               	movlw	low _hexpowers
  7103     04D5  0740               	addwf	??_printf,w
  7104     04D6  0084               	movwf	4
  7105     04D7  3010               	movlw	high _hexpowers
  7106     04D8  3D41               	addwfc	??_printf+1,w
  7107     04D9  3880               	iorlw	128
  7108     04DA  0085               	movwf	5
  7109     04DB  3F00               	moviw [0]fsr0
  7110     04DC  00C2               	movwf	??_printf+2
  7111     04DD  3F01               	moviw [1]fsr0
  7112     04DE  00C3               	movwf	??_printf+3
  7113     04DF  3F02               	moviw [2]fsr0
  7114     04E0  00C4               	movwf	??_printf+4
  7115     04E1  3F03               	moviw [3]fsr0
  7116     04E2  00C5               	movwf	??_printf+5
  7117     04E3  0845               	movf	??_printf+5,w
  7118     04E4  0250               	subwf	printf@val+3,w
  7119     04E5  1D03               	skipz
  7120     04E6  2CF1               	goto	u1815
  7121     04E7  0844               	movf	??_printf+4,w
  7122     04E8  024F               	subwf	printf@val+2,w
  7123     04E9  1D03               	skipz
  7124     04EA  2CF1               	goto	u1815
  7125     04EB  0843               	movf	??_printf+3,w
  7126     04EC  024E               	subwf	printf@val+1,w
  7127     04ED  1D03               	skipz
  7128     04EE  2CF1               	goto	u1815
  7129     04EF  0842               	movf	??_printf+2,w
  7130     04F0  024D               	subwf	printf@val,w
  7131     04F1                     u1815:
  7132     04F1  1803               	skipnc
  7133     04F2  2CF4               	goto	u1811
  7134     04F3  2CF5               	goto	u1810
  7135     04F4                     u1811:
  7136     04F4  2CF6               	goto	l2356
  7137     04F5                     u1810:
  7138     04F5  2D0A               	goto	l2362
  7139     04F6                     l2356:
  7140     04F6  3001               	movlw	1
  7141     04F7  00C0               	movwf	??_printf
  7142     04F8  0840               	movf	??_printf,w
  7143     04F9  07D7               	addwf	printf@c,f
  7144     04FA  3008               	movlw	8
  7145     04FB  0657               	xorwf	printf@c,w
  7146     04FC  1D03               	btfss	3,2
  7147     04FD  2CFF               	goto	u1821
  7148     04FE  2D00               	goto	u1820
  7149     04FF                     u1821:
  7150     04FF  2CCD               	goto	l2352
  7151     0500                     u1820:
  7152     0500  2D0A               	goto	l2362
  7153     0501                     l2360:
  7154     0501  0854               	movf	printf@flag,w
  7155     0502  39C0               	andlw	192
  7156                           
  7157                           ; Switch size 1, requested type "simple"
  7158                           ; Number of cases is 2, Range of values is 128 to 192
  7159                           ; switch strategies available:
  7160                           ; Name         Instructions Cycles
  7161                           ; simple_byte            7     4 (average)
  7162                           ; direct_byte          139     9 (fixed)
  7163                           ; jumptable            263     9 (fixed)
  7164                           ;	Chosen strategy is simple_byte
  7165     0503  3A80               	xorlw	128	; case 128
  7166     0504  1903               	skipnz
  7167     0505  2CC4               	goto	l535
  7168     0506  3A40               	xorlw	64	; case 192
  7169     0507  1903               	skipnz
  7170     0508  2C87               	goto	l530
  7171     0509  2D0A               	goto	l2362
  7172     050A                     l2362:
  7173                           
  7174                           ;doprnt.c: 1407: if(width > c)
  7175     050A  0856               	movf	printf@width+1,w
  7176     050B  3A80               	xorlw	128
  7177     050C  3C80               	sublw	128
  7178     050D  1D03               	skipz
  7179     050E  2D11               	goto	u1835
  7180     050F  0855               	movf	printf@width,w
  7181     0510  0257               	subwf	printf@c,w
  7182     0511                     u1835:
  7183     0511  1803               	skipnc
  7184     0512  2D14               	goto	u1831
  7185     0513  2D15               	goto	u1830
  7186     0514                     u1831:
  7187     0514  2D1E               	goto	l2366
  7188     0515                     u1830:
  7189     0515                     l2364:
  7190                           
  7191                           ;doprnt.c: 1408: width -= c;
  7192     0515  0140               	movlb	0	; select bank0
  7193     0516  0857               	movf	printf@c,w
  7194     0517  00C0               	movwf	??_printf
  7195     0518  01C1               	clrf	??_printf+1
  7196     0519  0840               	movf	??_printf,w
  7197     051A  02D5               	subwf	printf@width,f
  7198     051B  0841               	movf	??_printf+1,w
  7199     051C  3BD6               	subwfb	printf@width+1,f
  7200     051D  2D21               	goto	l2368
  7201     051E                     l2366:
  7202                           
  7203                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  7204     051E  0140               	movlb	0	; select bank0
  7205     051F  01D5               	clrf	printf@width
  7206     0520  01D6               	clrf	printf@width+1
  7207     0521                     l2368:
  7208                           
  7209                           ;doprnt.c: 1413: if(flag & 0x04) {
  7210     0521  1D54               	btfss	printf@flag,2
  7211     0522  2D24               	goto	u1841
  7212     0523  2D25               	goto	u1840
  7213     0524                     u1841:
  7214     0524  2D3B               	goto	l2376
  7215     0525                     u1840:
  7216     0525                     l2370:
  7217                           
  7218                           ;doprnt.c: 1441: if(width)
  7219     0525  0855               	movf	printf@width,w
  7220     0526  0456               	iorwf	printf@width+1,w
  7221     0527  1903               	btfsc	3,2
  7222     0528  2D2A               	goto	u1851
  7223     0529  2D2B               	goto	u1850
  7224     052A                     u1851:
  7225     052A  2D50               	goto	l2382
  7226     052B                     u1850:
  7227     052B                     l2372:
  7228                           
  7229                           ;doprnt.c: 1443: (putch('0') );
  7230     052B  3030               	movlw	48
  7231     052C  318A  2253  3183   	fcall	_putch
  7232     052F                     l2374:
  7233                           
  7234                           ;doprnt.c: 1444: while(--width);
  7235     052F  30FF               	movlw	255
  7236     0530  0140               	movlb	0	; select bank0
  7237     0531  07D5               	addwf	printf@width,f
  7238     0532  30FF               	movlw	255
  7239     0533  3DD6               	addwfc	printf@width+1,f
  7240     0534  0855               	movf	printf@width,w
  7241     0535  0456               	iorwf	printf@width+1,w
  7242     0536  1D03               	btfss	3,2
  7243     0537  2D39               	goto	u1861
  7244     0538  2D3A               	goto	u1860
  7245     0539                     u1861:
  7246     0539  2D2B               	goto	l2372
  7247     053A                     u1860:
  7248     053A  2D50               	goto	l2382
  7249     053B                     l2376:
  7250                           
  7251                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  7252     053B  0855               	movf	printf@width,w
  7253     053C  0456               	iorwf	printf@width+1,w
  7254     053D  1903               	btfsc	3,2
  7255     053E  2D40               	goto	u1871
  7256     053F  2D41               	goto	u1870
  7257     0540                     u1871:
  7258     0540  2D50               	goto	l2382
  7259     0541                     u1870:
  7260     0541                     l2378:
  7261                           
  7262                           ;doprnt.c: 1456: (putch(' ') );
  7263     0541  3020               	movlw	32
  7264     0542  318A  2253  3183   	fcall	_putch
  7265     0545                     l2380:
  7266                           
  7267                           ;doprnt.c: 1457: while(--width);
  7268     0545  30FF               	movlw	255
  7269     0546  0140               	movlb	0	; select bank0
  7270     0547  07D5               	addwf	printf@width,f
  7271     0548  30FF               	movlw	255
  7272     0549  3DD6               	addwfc	printf@width+1,f
  7273     054A  0855               	movf	printf@width,w
  7274     054B  0456               	iorwf	printf@width+1,w
  7275     054C  1D03               	btfss	3,2
  7276     054D  2D4F               	goto	u1881
  7277     054E  2D50               	goto	u1880
  7278     054F                     u1881:
  7279     054F  2D41               	goto	l2378
  7280     0550                     u1880:
  7281     0550                     l2382:
  7282                           
  7283                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  7284     0550  0857               	movf	printf@c,w
  7285     0551  00C0               	movwf	??_printf
  7286     0552  01C1               	clrf	??_printf+1
  7287     0553  0840               	movf	??_printf,w
  7288     0554  00C9               	movwf	printf@prec
  7289     0555  0841               	movf	??_printf+1,w
  7290     0556  00CA               	movwf	printf@prec+1
  7291                           
  7292                           ;doprnt.c: 1500: while(prec--) {
  7293     0557  2DDF               	goto	l2402
  7294     0558                     l2384:
  7295                           
  7296                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  7297     0558  3000               	movlw	0
  7298     0559  00B1               	movwf	___llmod@divisor+3
  7299     055A  3000               	movlw	0
  7300     055B  00B0               	movwf	___llmod@divisor+2
  7301     055C  3000               	movlw	0
  7302     055D  00AF               	movwf	___llmod@divisor+1
  7303     055E  300A               	movlw	10
  7304     055F  00AE               	movwf	___llmod@divisor
  7305     0560  084A               	movf	printf@prec+1,w
  7306     0561  0085               	movwf	5
  7307     0562  0849               	movf	printf@prec,w
  7308     0563  0084               	movwf	4
  7309     0564  3584               	lslf	4,f
  7310     0565  0D85               	rlf	5,f
  7311     0566  3584               	lslf	4,f
  7312     0567  0D85               	rlf	5,f
  7313     0568  303B               	movlw	low _dpowers
  7314     0569  0784               	addwf	4,f
  7315     056A  3010               	movlw	high _dpowers
  7316     056B  3D05               	addwfc	5,w
  7317     056C  3880               	iorlw	128
  7318     056D  0085               	movwf	5
  7319     056E  3F00               	moviw [0]fsr0
  7320     056F  00A0               	movwf	___lldiv@divisor
  7321     0570  3F01               	moviw [1]fsr0
  7322     0571  00A1               	movwf	___lldiv@divisor+1
  7323     0572  3F02               	moviw [2]fsr0
  7324     0573  00A2               	movwf	___lldiv@divisor+2
  7325     0574  3F03               	moviw [3]fsr0
  7326     0575  00A3               	movwf	___lldiv@divisor+3
  7327     0576  0850               	movf	printf@val+3,w
  7328     0577  00A7               	movwf	___lldiv@dividend+3
  7329     0578  084F               	movf	printf@val+2,w
  7330     0579  00A6               	movwf	___lldiv@dividend+2
  7331     057A  084E               	movf	printf@val+1,w
  7332     057B  00A5               	movwf	___lldiv@dividend+1
  7333     057C  084D               	movf	printf@val,w
  7334     057D  00A4               	movwf	___lldiv@dividend
  7335     057E  318C  24F9  3183   	fcall	___lldiv
  7336     0581  0140               	movlb	0	; select bank0
  7337     0582  0823               	movf	?___lldiv+3,w
  7338     0583  00B5               	movwf	___llmod@dividend+3
  7339     0584  0822               	movf	?___lldiv+2,w
  7340     0585  00B4               	movwf	___llmod@dividend+2
  7341     0586  0821               	movf	?___lldiv+1,w
  7342     0587  00B3               	movwf	___llmod@dividend+1
  7343     0588  0820               	movf	?___lldiv,w
  7344     0589  00B2               	movwf	___llmod@dividend
  7345     058A  318C  2409  3183   	fcall	___llmod
  7346     058D  0140               	movlb	0	; select bank0
  7347     058E  082E               	movf	?___llmod,w
  7348     058F  3E30               	addlw	48
  7349     0590  00D7               	movwf	printf@c
  7350                           
  7351                           ;doprnt.c: 1517: break;
  7352     0591  2DDB               	goto	l2400
  7353     0592                     l2386:
  7354                           
  7355                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned int)pr
      +                          ec]) & 0xF;
  7356     0592  084A               	movf	printf@prec+1,w
  7357     0593  0085               	movwf	5
  7358     0594  0849               	movf	printf@prec,w
  7359     0595  0084               	movwf	4
  7360     0596  3584               	lslf	4,f
  7361     0597  0D85               	rlf	5,f
  7362     0598  3584               	lslf	4,f
  7363     0599  0D85               	rlf	5,f
  7364     059A  3000               	movlw	low _hexpowers
  7365     059B  0784               	addwf	4,f
  7366     059C  3010               	movlw	high _hexpowers
  7367     059D  3D05               	addwfc	5,w
  7368     059E  3880               	iorlw	128
  7369     059F  0085               	movwf	5
  7370     05A0  3F00               	moviw [0]fsr0
  7371     05A1  00A0               	movwf	___lldiv@divisor
  7372     05A2  3F01               	moviw [1]fsr0
  7373     05A3  00A1               	movwf	___lldiv@divisor+1
  7374     05A4  3F02               	moviw [2]fsr0
  7375     05A5  00A2               	movwf	___lldiv@divisor+2
  7376     05A6  3F03               	moviw [3]fsr0
  7377     05A7  00A3               	movwf	___lldiv@divisor+3
  7378     05A8  0850               	movf	printf@val+3,w
  7379     05A9  00A7               	movwf	___lldiv@dividend+3
  7380     05AA  084F               	movf	printf@val+2,w
  7381     05AB  00A6               	movwf	___lldiv@dividend+2
  7382     05AC  084E               	movf	printf@val+1,w
  7383     05AD  00A5               	movwf	___lldiv@dividend+1
  7384     05AE  084D               	movf	printf@val,w
  7385     05AF  00A4               	movwf	___lldiv@dividend
  7386     05B0  318C  24F9  3183   	fcall	___lldiv
  7387     05B3  0140               	movlb	0	; select bank0
  7388     05B4  0820               	movf	?___lldiv,w
  7389     05B5  390F               	andlw	15
  7390     05B6  00C8               	movwf	printf@idx
  7391     05B7                     l2388:
  7392                           
  7393                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  7394     05B7  1AD4               	btfsc	printf@flag,5
  7395     05B8  2DBA               	goto	u1891
  7396     05B9  2DBB               	goto	u1890
  7397     05BA                     u1891:
  7398     05BA  2DC0               	goto	l2392
  7399     05BB                     u1890:
  7400     05BB                     l2390:
  7401     05BB  308A               	movlw	low (STR_20| (0+32768))
  7402     05BC  00C6               	movwf	_printf$940
  7403     05BD  3090               	movlw	high (STR_20| (0+32768))
  7404     05BE  00C7               	movwf	_printf$940+1
  7405     05BF  2DC4               	goto	l2394
  7406     05C0                     l2392:
  7407     05C0  3079               	movlw	low (STR_19| (0+32768))
  7408     05C1  00C6               	movwf	_printf$940
  7409     05C2  3090               	movlw	high (STR_19| (0+32768))
  7410     05C3  00C7               	movwf	_printf$940+1
  7411     05C4                     l2394:
  7412     05C4  0847               	movf	_printf$940+1,w
  7413     05C5  00C1               	movwf	??_printf+1
  7414     05C6  0846               	movf	_printf$940,w
  7415     05C7  00C0               	movwf	??_printf
  7416     05C8  0848               	movf	printf@idx,w
  7417     05C9  0740               	addwf	??_printf,w
  7418     05CA  0084               	movwf	4
  7419     05CB  0841               	movf	??_printf+1,w
  7420     05CC  1803               	skipnc
  7421     05CD  0A41               	incf	??_printf+1,w
  7422     05CE  0085               	movwf	5
  7423     05CF  0800               	movf	0,w	;code access
  7424     05D0  00D7               	movwf	printf@c
  7425                           
  7426                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  7427     05D1  2DDB               	goto	l2400
  7428     05D2                     l2398:
  7429     05D2  0854               	movf	printf@flag,w
  7430     05D3  39C0               	andlw	192
  7431                           
  7432                           ; Switch size 1, requested type "simple"
  7433                           ; Number of cases is 2, Range of values is 128 to 192
  7434                           ; switch strategies available:
  7435                           ; Name         Instructions Cycles
  7436                           ; simple_byte            7     4 (average)
  7437                           ; direct_byte          139     9 (fixed)
  7438                           ; jumptable            263     9 (fixed)
  7439                           ;	Chosen strategy is simple_byte
  7440     05D4  3A80               	xorlw	128	; case 128
  7441     05D5  1903               	skipnz
  7442     05D6  2D92               	goto	l2386
  7443     05D7  3A40               	xorlw	64	; case 192
  7444     05D8  1903               	skipnz
  7445     05D9  2D58               	goto	l2384
  7446     05DA  2DDB               	goto	l2400
  7447     05DB                     l2400:
  7448                           
  7449                           ;doprnt.c: 1550: (putch(c) );
  7450     05DB  0857               	movf	printf@c,w
  7451     05DC  318A  2253  3183   	fcall	_putch
  7452     05DF                     l2402:
  7453     05DF  30FF               	movlw	255
  7454     05E0  0140               	movlb	0	; select bank0
  7455     05E1  07C9               	addwf	printf@prec,f
  7456     05E2  30FF               	movlw	255
  7457     05E3  3DCA               	addwfc	printf@prec+1,f
  7458     05E4  0A49               	incf	printf@prec,w
  7459     05E5  1D03               	skipz
  7460     05E6  2DEB               	goto	u1901
  7461     05E7  0A4A               	incf	printf@prec+1,w
  7462     05E8  1D03               	btfss	3,2
  7463     05E9  2DEB               	goto	u1901
  7464     05EA  2DEC               	goto	u1900
  7465     05EB                     u1901:
  7466     05EB  2DD2               	goto	l2398
  7467     05EC                     u1900:
  7468     05EC                     l2404:
  7469     05EC  0140               	movlb	0	; select bank0
  7470     05ED  0839               	movf	printf@f+1,w
  7471     05EE  00C1               	movwf	??_printf+1
  7472     05EF  0838               	movf	printf@f,w
  7473     05F0  00C0               	movwf	??_printf
  7474     05F1  0AB8               	incf	printf@f,f
  7475     05F2  1903               	skipnz
  7476     05F3  0AB9               	incf	printf@f+1,f
  7477     05F4  0840               	movf	??_printf,w
  7478     05F5  0084               	movwf	4
  7479     05F6  0841               	movf	??_printf+1,w
  7480     05F7  0085               	movwf	5
  7481     05F8  0800               	movf	0,w	;code access
  7482     05F9  00D7               	movwf	printf@c
  7483     05FA  0857               	movf	printf@c,w
  7484     05FB  1D03               	btfss	3,2
  7485     05FC  2DFE               	goto	u1911
  7486     05FD  2DFF               	goto	u1910
  7487     05FE                     u1911:
  7488     05FE  2B5F               	goto	l2262
  7489     05FF                     u1910:
  7490     05FF                     l561:
  7491     05FF  0008               	return
  7492     0600                     __end_of_printf:
  7493                           
  7494                           	psect	text18
  7495     0A53                     __ptext18:	
  7496 ;; *************** function _putch *****************
  7497 ;; Defined at:
  7498 ;;		line 70 in file "main.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  data            1    wreg     unsigned char 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  data            1    0[BANK0 ] unsigned char 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7515 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7516 ;;Total ram usage:        1 bytes
  7517 ;; Hardware stack levels used: 1
  7518 ;; Hardware stack levels required when called: 2
  7519 ;; This function calls:
  7520 ;;		Nothing
  7521 ;; This function is called by:
  7522 ;;		_printf
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526     0A53                     _putch:	
  7527                           ;psect for function _putch
  7528                           
  7529                           
  7530                           ;incstack = 0
  7531                           ; Regs used in _putch: [wreg]
  7532                           ;putch@data stored from wreg
  7533     0A53  0140               	movlb	0	; select bank0
  7534     0A54  00A0               	movwf	putch@data
  7535     0A55                     l2174:
  7536     0A55                     l162:	
  7537                           ;main.c: 72: while(0 == PIR3bits.TX1IF);
  7538                           
  7539     0A55  014E               	movlb	14	; select bank14
  7540     0A56  1E0F               	btfss	15,4	;volatile
  7541     0A57  2A59               	goto	u1461
  7542     0A58  2A5A               	goto	u1460
  7543     0A59                     u1461:
  7544     0A59  2A55               	goto	l162
  7545     0A5A                     u1460:
  7546     0A5A                     l2176:
  7547                           
  7548                           ;main.c: 73: TX1REG = data;
  7549     0A5A  0140               	movlb	0	; select bank0
  7550     0A5B  0820               	movf	putch@data,w
  7551     0A5C  0142               	movlb	2	; select bank2
  7552     0A5D  009A               	movwf	26	;volatile
  7553     0A5E                     l165:
  7554     0A5E  0008               	return
  7555     0A5F                     __end_of_putch:
  7556                           
  7557                           	psect	text19
  7558     0A8F                     __ptext19:	
  7559 ;; *************** function _isdigit *****************
  7560 ;; Defined at:
  7561 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isdigit.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  c               1    wreg     unsigned char 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  c               1    1[BANK0 ] unsigned char 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;		None               void
  7568 ;; Registers used:
  7569 ;;		wreg, status,2, status,0
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;Total ram usage:        2 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 2
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_printf
  7586 ;;		_strtol
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590     0A8F                     _isdigit:	
  7591                           ;psect for function _isdigit
  7592                           
  7593                           
  7594                           ;incstack = 0
  7595                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7596                           ;isdigit@c stored from wreg
  7597     0A8F  0140               	movlb	0	; select bank0
  7598     0A90  00A1               	movwf	isdigit@c
  7599     0A91                     l2178:
  7600     0A91  01A0               	clrf	_isdigit$1223
  7601     0A92                     l2180:
  7602     0A92  303A               	movlw	58
  7603     0A93  0221               	subwf	isdigit@c,w
  7604     0A94  1803               	skipnc
  7605     0A95  2A97               	goto	u1471
  7606     0A96  2A98               	goto	u1470
  7607     0A97                     u1471:
  7608     0A97  2AA0               	goto	l2186
  7609     0A98                     u1470:
  7610     0A98                     l2182:
  7611     0A98  3030               	movlw	48
  7612     0A99  0221               	subwf	isdigit@c,w
  7613     0A9A  1C03               	skipc
  7614     0A9B  2A9D               	goto	u1481
  7615     0A9C  2A9E               	goto	u1480
  7616     0A9D                     u1481:
  7617     0A9D  2AA0               	goto	l2186
  7618     0A9E                     u1480:
  7619     0A9E                     l2184:
  7620     0A9E  01A0               	clrf	_isdigit$1223
  7621     0A9F  0AA0               	incf	_isdigit$1223,f
  7622     0AA0                     l2186:
  7623     0AA0  0C20               	rrf	_isdigit$1223,w
  7624     0AA1                     l1018:
  7625     0AA1  0008               	return
  7626     0AA2                     __end_of_isdigit:
  7627                           
  7628                           	psect	text20
  7629     0B13                     __ptext20:	
  7630 ;; *************** function ___wmul *****************
  7631 ;; Defined at:
  7632 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul16.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7635 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  product         2    4[BANK0 ] unsigned int 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  2    0[BANK0 ] unsigned int 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7651 ;;Total ram usage:        6 bytes
  7652 ;; Hardware stack levels used: 1
  7653 ;; Hardware stack levels required when called: 2
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_printf
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661     0B13                     ___wmul:	
  7662                           ;psect for function ___wmul
  7663                           
  7664     0B13                     l2190:	
  7665                           ;incstack = 0
  7666                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7667                           
  7668     0B13  0140               	movlb	0	; select bank0
  7669     0B14  01A4               	clrf	___wmul@product
  7670     0B15  01A5               	clrf	___wmul@product+1
  7671     0B16                     l2192:
  7672     0B16  1C20               	btfss	___wmul@multiplier,0
  7673     0B17  2B19               	goto	u1491
  7674     0B18  2B1A               	goto	u1490
  7675     0B19                     u1491:
  7676     0B19  2B1E               	goto	l565
  7677     0B1A                     u1490:
  7678     0B1A                     l2194:
  7679     0B1A  0822               	movf	___wmul@multiplicand,w
  7680     0B1B  07A4               	addwf	___wmul@product,f
  7681     0B1C  0823               	movf	___wmul@multiplicand+1,w
  7682     0B1D  3DA5               	addwfc	___wmul@product+1,f
  7683     0B1E                     l565:
  7684     0B1E  3001               	movlw	1
  7685     0B1F                     u1505:
  7686     0B1F  35A2               	lslf	___wmul@multiplicand,f
  7687     0B20  0DA3               	rlf	___wmul@multiplicand+1,f
  7688     0B21  0B89               	decfsz	9,f
  7689     0B22  2B1F               	goto	u1505
  7690     0B23                     l2196:
  7691     0B23  3001               	movlw	1
  7692     0B24                     u1515:
  7693     0B24  36A1               	lsrf	___wmul@multiplier+1,f
  7694     0B25  0CA0               	rrf	___wmul@multiplier,f
  7695     0B26  0B89               	decfsz	9,f
  7696     0B27  2B24               	goto	u1515
  7697     0B28                     l2198:
  7698     0B28  0820               	movf	___wmul@multiplier,w
  7699     0B29  0421               	iorwf	___wmul@multiplier+1,w
  7700     0B2A  1D03               	btfss	3,2
  7701     0B2B  2B2D               	goto	u1521
  7702     0B2C  2B2E               	goto	u1520
  7703     0B2D                     u1521:
  7704     0B2D  2B16               	goto	l2192
  7705     0B2E                     u1520:
  7706     0B2E                     l2200:
  7707     0B2E  0825               	movf	___wmul@product+1,w
  7708     0B2F  00A1               	movwf	?___wmul+1
  7709     0B30  0824               	movf	___wmul@product,w
  7710     0B31  00A0               	movwf	?___wmul
  7711     0B32                     l567:
  7712     0B32  0008               	return
  7713     0B33                     __end_of___wmul:
  7714                           
  7715                           	psect	text21
  7716     0C09                     __ptext21:	
  7717 ;; *************** function ___llmod *****************
  7718 ;; Defined at:
  7719 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/llmod.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;  divisor         4   14[BANK0 ] unsigned long 
  7722 ;;  dividend        4   18[BANK0 ] unsigned long 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  counter         1   23[BANK0 ] unsigned char 
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  4   14[BANK0 ] unsigned long 
  7727 ;; Registers used:
  7728 ;;		wreg, status,2, status,0
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7734 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7737 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;Total ram usage:       10 bytes
  7739 ;; Hardware stack levels used: 1
  7740 ;; Hardware stack levels required when called: 2
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_printf
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748     0C09                     ___llmod:	
  7749                           ;psect for function ___llmod
  7750                           
  7751     0C09                     l2228:	
  7752                           ;incstack = 0
  7753                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7754                           
  7755     0C09  0140               	movlb	0	; select bank0
  7756     0C0A  0831               	movf	___llmod@divisor+3,w
  7757     0C0B  0430               	iorwf	___llmod@divisor+2,w
  7758     0C0C  042F               	iorwf	___llmod@divisor+1,w
  7759     0C0D  042E               	iorwf	___llmod@divisor,w
  7760     0C0E  1903               	skipnz
  7761     0C0F  2C11               	goto	u1601
  7762     0C10  2C12               	goto	u1600
  7763     0C11                     u1601:
  7764     0C11  2C4B               	goto	l2244
  7765     0C12                     u1600:
  7766     0C12                     l2230:
  7767     0C12  01B7               	clrf	___llmod@counter
  7768     0C13  0AB7               	incf	___llmod@counter,f
  7769     0C14  2C20               	goto	l2234
  7770     0C15                     l2232:
  7771     0C15  3001               	movlw	1
  7772     0C16                     u1615:
  7773     0C16  35AE               	lslf	___llmod@divisor,f
  7774     0C17  0DAF               	rlf	___llmod@divisor+1,f
  7775     0C18  0DB0               	rlf	___llmod@divisor+2,f
  7776     0C19  0DB1               	rlf	___llmod@divisor+3,f
  7777     0C1A  0B89               	decfsz	9,f
  7778     0C1B  2C16               	goto	u1615
  7779     0C1C  3001               	movlw	1
  7780     0C1D  00B6               	movwf	??___llmod
  7781     0C1E  0836               	movf	??___llmod,w
  7782     0C1F  07B7               	addwf	___llmod@counter,f
  7783     0C20                     l2234:
  7784     0C20  1FB1               	btfss	___llmod@divisor+3,7
  7785     0C21  2C23               	goto	u1621
  7786     0C22  2C24               	goto	u1620
  7787     0C23                     u1621:
  7788     0C23  2C15               	goto	l2232
  7789     0C24                     u1620:
  7790     0C24                     l2236:
  7791     0C24  0831               	movf	___llmod@divisor+3,w
  7792     0C25  0235               	subwf	___llmod@dividend+3,w
  7793     0C26  1D03               	skipz
  7794     0C27  2C32               	goto	u1635
  7795     0C28  0830               	movf	___llmod@divisor+2,w
  7796     0C29  0234               	subwf	___llmod@dividend+2,w
  7797     0C2A  1D03               	skipz
  7798     0C2B  2C32               	goto	u1635
  7799     0C2C  082F               	movf	___llmod@divisor+1,w
  7800     0C2D  0233               	subwf	___llmod@dividend+1,w
  7801     0C2E  1D03               	skipz
  7802     0C2F  2C32               	goto	u1635
  7803     0C30  082E               	movf	___llmod@divisor,w
  7804     0C31  0232               	subwf	___llmod@dividend,w
  7805     0C32                     u1635:
  7806     0C32  1C03               	skipc
  7807     0C33  2C35               	goto	u1631
  7808     0C34  2C36               	goto	u1630
  7809     0C35                     u1631:
  7810     0C35  2C3E               	goto	l2240
  7811     0C36                     u1630:
  7812     0C36                     l2238:
  7813     0C36  082E               	movf	___llmod@divisor,w
  7814     0C37  02B2               	subwf	___llmod@dividend,f
  7815     0C38  082F               	movf	___llmod@divisor+1,w
  7816     0C39  3BB3               	subwfb	___llmod@dividend+1,f
  7817     0C3A  0830               	movf	___llmod@divisor+2,w
  7818     0C3B  3BB4               	subwfb	___llmod@dividend+2,f
  7819     0C3C  0831               	movf	___llmod@divisor+3,w
  7820     0C3D  3BB5               	subwfb	___llmod@dividend+3,f
  7821     0C3E                     l2240:
  7822     0C3E  3001               	movlw	1
  7823     0C3F                     u1645:
  7824     0C3F  36B1               	lsrf	___llmod@divisor+3,f
  7825     0C40  0CB0               	rrf	___llmod@divisor+2,f
  7826     0C41  0CAF               	rrf	___llmod@divisor+1,f
  7827     0C42  0CAE               	rrf	___llmod@divisor,f
  7828     0C43  0B89               	decfsz	9,f
  7829     0C44  2C3F               	goto	u1645
  7830     0C45                     l2242:
  7831     0C45  3001               	movlw	1
  7832     0C46  02B7               	subwf	___llmod@counter,f
  7833     0C47  1D03               	btfss	3,2
  7834     0C48  2C4A               	goto	u1651
  7835     0C49  2C4B               	goto	u1650
  7836     0C4A                     u1651:
  7837     0C4A  2C24               	goto	l2236
  7838     0C4B                     u1650:
  7839     0C4B                     l2244:
  7840     0C4B  0835               	movf	___llmod@dividend+3,w
  7841     0C4C  00B1               	movwf	?___llmod+3
  7842     0C4D  0834               	movf	___llmod@dividend+2,w
  7843     0C4E  00B0               	movwf	?___llmod+2
  7844     0C4F  0833               	movf	___llmod@dividend+1,w
  7845     0C50  00AF               	movwf	?___llmod+1
  7846     0C51  0832               	movf	___llmod@dividend,w
  7847     0C52  00AE               	movwf	?___llmod
  7848     0C53                     l787:
  7849     0C53  0008               	return
  7850     0C54                     __end_of___llmod:
  7851                           
  7852                           	psect	text22
  7853     0CF9                     __ptext22:	
  7854 ;; *************** function ___lldiv *****************
  7855 ;; Defined at:
  7856 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/__lldiv.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  divisor         4    0[BANK0 ] unsigned long 
  7859 ;;  dividend        4    4[BANK0 ] unsigned long 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  quotient        4    9[BANK0 ] unsigned long 
  7862 ;;  counter         1   13[BANK0 ] unsigned char 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  4    0[BANK0 ] unsigned long 
  7865 ;; Registers used:
  7866 ;;		wreg, status,2, status,0
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7872 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7876 ;;Total ram usage:       14 bytes
  7877 ;; Hardware stack levels used: 1
  7878 ;; Hardware stack levels required when called: 2
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_printf
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886     0CF9                     ___lldiv:	
  7887                           ;psect for function ___lldiv
  7888                           
  7889     0CF9                     l2204:	
  7890                           ;incstack = 0
  7891                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7892                           
  7893     0CF9  3000               	movlw	0
  7894     0CFA  0140               	movlb	0	; select bank0
  7895     0CFB  00AC               	movwf	___lldiv@quotient+3
  7896     0CFC  3000               	movlw	0
  7897     0CFD  00AB               	movwf	___lldiv@quotient+2
  7898     0CFE  3000               	movlw	0
  7899     0CFF  00AA               	movwf	___lldiv@quotient+1
  7900     0D00  3000               	movlw	0
  7901     0D01  00A9               	movwf	___lldiv@quotient
  7902     0D02  0823               	movf	___lldiv@divisor+3,w
  7903     0D03  0422               	iorwf	___lldiv@divisor+2,w
  7904     0D04  0421               	iorwf	___lldiv@divisor+1,w
  7905     0D05  0420               	iorwf	___lldiv@divisor,w
  7906     0D06  1903               	skipnz
  7907     0D07  2D09               	goto	u1531
  7908     0D08  2D0A               	goto	u1530
  7909     0D09                     u1531:
  7910     0D09  2D4B               	goto	l2224
  7911     0D0A                     u1530:
  7912     0D0A                     l2206:
  7913     0D0A  01AD               	clrf	___lldiv@counter
  7914     0D0B  0AAD               	incf	___lldiv@counter,f
  7915     0D0C  2D18               	goto	l2210
  7916     0D0D                     l2208:
  7917     0D0D  3001               	movlw	1
  7918     0D0E                     u1545:
  7919     0D0E  35A0               	lslf	___lldiv@divisor,f
  7920     0D0F  0DA1               	rlf	___lldiv@divisor+1,f
  7921     0D10  0DA2               	rlf	___lldiv@divisor+2,f
  7922     0D11  0DA3               	rlf	___lldiv@divisor+3,f
  7923     0D12  0B89               	decfsz	9,f
  7924     0D13  2D0E               	goto	u1545
  7925     0D14  3001               	movlw	1
  7926     0D15  00A8               	movwf	??___lldiv
  7927     0D16  0828               	movf	??___lldiv,w
  7928     0D17  07AD               	addwf	___lldiv@counter,f
  7929     0D18                     l2210:
  7930     0D18  1FA3               	btfss	___lldiv@divisor+3,7
  7931     0D19  2D1B               	goto	u1551
  7932     0D1A  2D1C               	goto	u1550
  7933     0D1B                     u1551:
  7934     0D1B  2D0D               	goto	l2208
  7935     0D1C                     u1550:
  7936     0D1C                     l2212:
  7937     0D1C  3001               	movlw	1
  7938     0D1D                     u1565:
  7939     0D1D  35A9               	lslf	___lldiv@quotient,f
  7940     0D1E  0DAA               	rlf	___lldiv@quotient+1,f
  7941     0D1F  0DAB               	rlf	___lldiv@quotient+2,f
  7942     0D20  0DAC               	rlf	___lldiv@quotient+3,f
  7943     0D21  0B89               	decfsz	9,f
  7944     0D22  2D1D               	goto	u1565
  7945     0D23                     l2214:
  7946     0D23  0823               	movf	___lldiv@divisor+3,w
  7947     0D24  0227               	subwf	___lldiv@dividend+3,w
  7948     0D25  1D03               	skipz
  7949     0D26  2D31               	goto	u1575
  7950     0D27  0822               	movf	___lldiv@divisor+2,w
  7951     0D28  0226               	subwf	___lldiv@dividend+2,w
  7952     0D29  1D03               	skipz
  7953     0D2A  2D31               	goto	u1575
  7954     0D2B  0821               	movf	___lldiv@divisor+1,w
  7955     0D2C  0225               	subwf	___lldiv@dividend+1,w
  7956     0D2D  1D03               	skipz
  7957     0D2E  2D31               	goto	u1575
  7958     0D2F  0820               	movf	___lldiv@divisor,w
  7959     0D30  0224               	subwf	___lldiv@dividend,w
  7960     0D31                     u1575:
  7961     0D31  1C03               	skipc
  7962     0D32  2D34               	goto	u1571
  7963     0D33  2D35               	goto	u1570
  7964     0D34                     u1571:
  7965     0D34  2D3E               	goto	l2220
  7966     0D35                     u1570:
  7967     0D35                     l2216:
  7968     0D35  0820               	movf	___lldiv@divisor,w
  7969     0D36  02A4               	subwf	___lldiv@dividend,f
  7970     0D37  0821               	movf	___lldiv@divisor+1,w
  7971     0D38  3BA5               	subwfb	___lldiv@dividend+1,f
  7972     0D39  0822               	movf	___lldiv@divisor+2,w
  7973     0D3A  3BA6               	subwfb	___lldiv@dividend+2,f
  7974     0D3B  0823               	movf	___lldiv@divisor+3,w
  7975     0D3C  3BA7               	subwfb	___lldiv@dividend+3,f
  7976     0D3D                     l2218:
  7977     0D3D  1429               	bsf	___lldiv@quotient,0
  7978     0D3E                     l2220:
  7979     0D3E  3001               	movlw	1
  7980     0D3F                     u1585:
  7981     0D3F  36A3               	lsrf	___lldiv@divisor+3,f
  7982     0D40  0CA2               	rrf	___lldiv@divisor+2,f
  7983     0D41  0CA1               	rrf	___lldiv@divisor+1,f
  7984     0D42  0CA0               	rrf	___lldiv@divisor,f
  7985     0D43  0B89               	decfsz	9,f
  7986     0D44  2D3F               	goto	u1585
  7987     0D45                     l2222:
  7988     0D45  3001               	movlw	1
  7989     0D46  02AD               	subwf	___lldiv@counter,f
  7990     0D47  1D03               	btfss	3,2
  7991     0D48  2D4A               	goto	u1591
  7992     0D49  2D4B               	goto	u1590
  7993     0D4A                     u1591:
  7994     0D4A  2D1C               	goto	l2212
  7995     0D4B                     u1590:
  7996     0D4B                     l2224:
  7997     0D4B  082C               	movf	___lldiv@quotient+3,w
  7998     0D4C  00A3               	movwf	?___lldiv+3
  7999     0D4D  082B               	movf	___lldiv@quotient+2,w
  8000     0D4E  00A2               	movwf	?___lldiv+2
  8001     0D4F  082A               	movf	___lldiv@quotient+1,w
  8002     0D50  00A1               	movwf	?___lldiv+1
  8003     0D51  0829               	movf	___lldiv@quotient,w
  8004     0D52  00A0               	movwf	?___lldiv
  8005     0D53                     l601:
  8006     0D53  0008               	return
  8007     0D54                     __end_of___lldiv:
  8008                           
  8009                           	psect	text23
  8010     0A7C                     __ptext23:	
  8011 ;; *************** function _isprint *****************
  8012 ;; Defined at:
  8013 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isprint.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  c               1    wreg     unsigned char 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  c               1    1[BANK0 ] unsigned char 
  8018 ;; Return value:  Size  Location     Type
  8019 ;;		None               void
  8020 ;; Registers used:
  8021 ;;		wreg, status,2, status,0
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;Total ram usage:        2 bytes
  8032 ;; Hardware stack levels used: 1
  8033 ;; Hardware stack levels required when called: 2
  8034 ;; This function calls:
  8035 ;;		Nothing
  8036 ;; This function is called by:
  8037 ;;		_dump_buffer
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041     0A7C                     _isprint:	
  8042                           ;psect for function _isprint
  8043                           
  8044                           
  8045                           ;incstack = 0
  8046                           ; Regs used in _isprint: [wreg+status,2+status,0]
  8047                           ;isprint@c stored from wreg
  8048     0A7C  0140               	movlb	0	; select bank0
  8049     0A7D  00A1               	movwf	isprint@c
  8050     0A7E                     l2408:
  8051     0A7E  01A0               	clrf	_isprint$1226
  8052     0A7F                     l2410:
  8053     0A7F  307F               	movlw	127
  8054     0A80  0221               	subwf	isprint@c,w
  8055     0A81  1803               	skipnc
  8056     0A82  2A84               	goto	u1921
  8057     0A83  2A85               	goto	u1920
  8058     0A84                     u1921:
  8059     0A84  2A8D               	goto	l2416
  8060     0A85                     u1920:
  8061     0A85                     l2412:
  8062     0A85  3020               	movlw	32
  8063     0A86  0221               	subwf	isprint@c,w
  8064     0A87  1C03               	skipc
  8065     0A88  2A8A               	goto	u1931
  8066     0A89  2A8B               	goto	u1930
  8067     0A8A                     u1931:
  8068     0A8A  2A8D               	goto	l2416
  8069     0A8B                     u1930:
  8070     0A8B                     l2414:
  8071     0A8B  01A0               	clrf	_isprint$1226
  8072     0A8C  0AA0               	incf	_isprint$1226,f
  8073     0A8D                     l2416:
  8074     0A8D  0C20               	rrf	_isprint$1226,w
  8075     0A8E                     l1023:
  8076     0A8E  0008               	return
  8077     0A8F                     __end_of_isprint:
  8078                           
  8079                           	psect	text24
  8080     0CA4                     __ptext24:	
  8081 ;; *************** function _calculate_diff *****************
  8082 ;; Defined at:
  8083 ;;		line 109 in file "main.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  now             4    0[BANK0 ] unsigned long 
  8086 ;;  prev_ticks      4    4[BANK0 ] unsigned long 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  diff            4   16[BANK0 ] unsigned long 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  4    0[BANK0 ] unsigned long 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8098 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;Total ram usage:       20 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 2
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		_main
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112     0CA4                     _calculate_diff:	
  8113                           ;psect for function _calculate_diff
  8114                           
  8115     0CA4                     l2720:	
  8116                           ;incstack = 0
  8117                           ; Regs used in _calculate_diff: [wreg+status,2+status,0]
  8118                           
  8119                           
  8120                           ;main.c: 110: uint32_t diff;;main.c: 111: if (now >= prev_ticks) {
  8121     0CA4  0140               	movlb	0	; select bank0
  8122     0CA5  0827               	movf	calculate_diff@prev_ticks+3,w
  8123     0CA6  0223               	subwf	calculate_diff@now+3,w
  8124     0CA7  1D03               	skipz
  8125     0CA8  2CB3               	goto	u2325
  8126     0CA9  0826               	movf	calculate_diff@prev_ticks+2,w
  8127     0CAA  0222               	subwf	calculate_diff@now+2,w
  8128     0CAB  1D03               	skipz
  8129     0CAC  2CB3               	goto	u2325
  8130     0CAD  0825               	movf	calculate_diff@prev_ticks+1,w
  8131     0CAE  0221               	subwf	calculate_diff@now+1,w
  8132     0CAF  1D03               	skipz
  8133     0CB0  2CB3               	goto	u2325
  8134     0CB1  0824               	movf	calculate_diff@prev_ticks,w
  8135     0CB2  0220               	subwf	calculate_diff@now,w
  8136     0CB3                     u2325:
  8137     0CB3  1C03               	skipc
  8138     0CB4  2CB6               	goto	u2321
  8139     0CB5  2CB7               	goto	u2320
  8140     0CB6                     u2321:
  8141     0CB6  2CCC               	goto	l2724
  8142     0CB7                     u2320:
  8143     0CB7                     l2722:
  8144                           
  8145                           ;main.c: 112: diff = now - prev_ticks;
  8146     0CB7  0824               	movf	calculate_diff@prev_ticks,w
  8147     0CB8  0220               	subwf	calculate_diff@now,w
  8148     0CB9  00A8               	movwf	??_calculate_diff
  8149     0CBA  0825               	movf	calculate_diff@prev_ticks+1,w
  8150     0CBB  3B21               	subwfb	calculate_diff@now+1,w
  8151     0CBC  00A9               	movwf	??_calculate_diff+1
  8152     0CBD  0826               	movf	calculate_diff@prev_ticks+2,w
  8153     0CBE  3B22               	subwfb	calculate_diff@now+2,w
  8154     0CBF  00AA               	movwf	??_calculate_diff+2
  8155     0CC0  0827               	movf	calculate_diff@prev_ticks+3,w
  8156     0CC1  3B23               	subwfb	calculate_diff@now+3,w
  8157     0CC2  00AB               	movwf	??_calculate_diff+3
  8158     0CC3  082B               	movf	??_calculate_diff+3,w
  8159     0CC4  00B3               	movwf	calculate_diff@diff+3
  8160     0CC5  082A               	movf	??_calculate_diff+2,w
  8161     0CC6  00B2               	movwf	calculate_diff@diff+2
  8162     0CC7  0829               	movf	??_calculate_diff+1,w
  8163     0CC8  00B1               	movwf	calculate_diff@diff+1
  8164     0CC9  0828               	movf	??_calculate_diff,w
  8165     0CCA  00B0               	movwf	calculate_diff@diff
  8166                           
  8167                           ;main.c: 113: } else {
  8168     0CCB  2CF0               	goto	l2726
  8169     0CCC                     l2724:
  8170                           
  8171                           ;main.c: 115: diff = ((4294967295UL) - prev_ticks) + now + 1;
  8172     0CCC  0820               	movf	calculate_diff@now,w
  8173     0CCD  00A8               	movwf	??_calculate_diff
  8174     0CCE  0821               	movf	calculate_diff@now+1,w
  8175     0CCF  00A9               	movwf	??_calculate_diff+1
  8176     0CD0  0822               	movf	calculate_diff@now+2,w
  8177     0CD1  00AA               	movwf	??_calculate_diff+2
  8178     0CD2  0823               	movf	calculate_diff@now+3,w
  8179     0CD3  00AB               	movwf	??_calculate_diff+3
  8180     0CD4  0924               	comf	calculate_diff@prev_ticks,w
  8181     0CD5  00AC               	movwf	??_calculate_diff+4
  8182     0CD6  0925               	comf	calculate_diff@prev_ticks+1,w
  8183     0CD7  00AD               	movwf	??_calculate_diff+5
  8184     0CD8  0926               	comf	calculate_diff@prev_ticks+2,w
  8185     0CD9  00AE               	movwf	??_calculate_diff+6
  8186     0CDA  0927               	comf	calculate_diff@prev_ticks+3,w
  8187     0CDB  00AF               	movwf	??_calculate_diff+7
  8188     0CDC  082C               	movf	??_calculate_diff+4,w
  8189     0CDD  07A8               	addwf	??_calculate_diff,f
  8190     0CDE  082D               	movf	??_calculate_diff+5,w
  8191     0CDF  3DA9               	addwfc	??_calculate_diff+1,f
  8192     0CE0  082E               	movf	??_calculate_diff+6,w
  8193     0CE1  3DAA               	addwfc	??_calculate_diff+2,f
  8194     0CE2  082F               	movf	??_calculate_diff+7,w
  8195     0CE3  3DAB               	addwfc	??_calculate_diff+3,f
  8196     0CE4  3001               	movlw	1
  8197     0CE5  0728               	addwf	??_calculate_diff,w
  8198     0CE6  00B0               	movwf	calculate_diff@diff
  8199     0CE7  3000               	movlw	0
  8200     0CE8  3D29               	addwfc	??_calculate_diff+1,w
  8201     0CE9  00B1               	movwf	calculate_diff@diff+1
  8202     0CEA  3000               	movlw	0
  8203     0CEB  3D2A               	addwfc	??_calculate_diff+2,w
  8204     0CEC  00B2               	movwf	calculate_diff@diff+2
  8205     0CED  3000               	movlw	0
  8206     0CEE  3D2B               	addwfc	??_calculate_diff+3,w
  8207     0CEF  00B3               	movwf	calculate_diff@diff+3
  8208     0CF0                     l2726:
  8209                           
  8210                           ;main.c: 116: };main.c: 117: return diff;
  8211     0CF0  0833               	movf	calculate_diff@diff+3,w
  8212     0CF1  00A3               	movwf	?_calculate_diff+3
  8213     0CF2  0832               	movf	calculate_diff@diff+2,w
  8214     0CF3  00A2               	movwf	?_calculate_diff+2
  8215     0CF4  0831               	movf	calculate_diff@diff+1,w
  8216     0CF5  00A1               	movwf	?_calculate_diff+1
  8217     0CF6  0830               	movf	calculate_diff@diff,w
  8218     0CF7  00A0               	movwf	?_calculate_diff
  8219     0CF8                     l189:
  8220     0CF8  0008               	return
  8221     0CF9                     __end_of_calculate_diff:
  8222                           
  8223                           	psect	text25
  8224     0D54                     __ptext25:	
  8225 ;; *************** function ___fltol *****************
  8226 ;; Defined at:
  8227 ;;		line 43 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fltol.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  f1              4   35[BANK0 ] unsigned long 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  exp1            1   44[BANK0 ] unsigned char 
  8232 ;;  sign1           1   43[BANK0 ] unsigned char 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  4   35[BANK0 ] long 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;Total ram usage:       10 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; Hardware stack levels required when called: 2
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_main
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256     0D54                     ___fltol:	
  8257                           ;psect for function ___fltol
  8258                           
  8259     0D54                     l2804:	
  8260                           ;incstack = 0
  8261                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8262                           
  8263     0D54  1003               	clrc
  8264     0D55  0140               	movlb	0	; select bank0
  8265     0D56  0D45               	rlf	___fltol@f1+2,w
  8266     0D57  0D46               	rlf	___fltol@f1+3,w
  8267     0D58  00CC               	movwf	___fltol@exp1
  8268     0D59  084C               	movf	___fltol@exp1,w
  8269     0D5A  1D03               	btfss	3,2
  8270     0D5B  2D5D               	goto	u2381
  8271     0D5C  2D5E               	goto	u2380
  8272     0D5D                     u2381:
  8273     0D5D  2D67               	goto	l2810
  8274     0D5E                     u2380:
  8275     0D5E                     l2806:
  8276     0D5E  3000               	movlw	0
  8277     0D5F  00C6               	movwf	?___fltol+3
  8278     0D60  3000               	movlw	0
  8279     0D61  00C5               	movwf	?___fltol+2
  8280     0D62  3000               	movlw	0
  8281     0D63  00C4               	movwf	?___fltol+1
  8282     0D64  3000               	movlw	0
  8283     0D65  00C3               	movwf	?___fltol
  8284     0D66  2DC4               	goto	l751
  8285     0D67                     l2810:
  8286     0D67  0843               	movf	___fltol@f1,w
  8287     0D68  00C7               	movwf	??___fltol
  8288     0D69  0844               	movf	___fltol@f1+1,w
  8289     0D6A  00C8               	movwf	??___fltol+1
  8290     0D6B  0845               	movf	___fltol@f1+2,w
  8291     0D6C  00C9               	movwf	??___fltol+2
  8292     0D6D  0846               	movf	___fltol@f1+3,w
  8293     0D6E  00CA               	movwf	??___fltol+3
  8294     0D6F  301F               	movlw	31
  8295     0D70                     u2395:
  8296     0D70  36CA               	lsrf	??___fltol+3,f
  8297     0D71  0CC9               	rrf	??___fltol+2,f
  8298     0D72  0CC8               	rrf	??___fltol+1,f
  8299     0D73  0CC7               	rrf	??___fltol,f
  8300     0D74                     u2390:
  8301     0D74  0B89               	decfsz	9,f
  8302     0D75  2D70               	goto	u2395
  8303     0D76  0847               	movf	??___fltol,w
  8304     0D77  00CB               	movwf	___fltol@sign1
  8305     0D78                     l2812:
  8306     0D78  17C5               	bsf	___fltol@f1+2,7
  8307     0D79                     l2814:
  8308     0D79  30FF               	movlw	255
  8309     0D7A  05C3               	andwf	___fltol@f1,f
  8310     0D7B  30FF               	movlw	255
  8311     0D7C  05C4               	andwf	___fltol@f1+1,f
  8312     0D7D  30FF               	movlw	255
  8313     0D7E  05C5               	andwf	___fltol@f1+2,f
  8314     0D7F  3000               	movlw	0
  8315     0D80  05C6               	andwf	___fltol@f1+3,f
  8316     0D81                     l2816:
  8317     0D81  3096               	movlw	150
  8318     0D82  02CC               	subwf	___fltol@exp1,f
  8319     0D83                     l2818:
  8320     0D83  1FCC               	btfss	___fltol@exp1,7
  8321     0D84  2D86               	goto	u2401
  8322     0D85  2D87               	goto	u2400
  8323     0D86                     u2401:
  8324     0D86  2D9F               	goto	l2828
  8325     0D87                     u2400:
  8326     0D87                     l2820:
  8327     0D87  084C               	movf	___fltol@exp1,w
  8328     0D88  3A80               	xorlw	128
  8329     0D89  3E97               	addlw	151
  8330     0D8A  1803               	skipnc
  8331     0D8B  2D8D               	goto	u2411
  8332     0D8C  2D8E               	goto	u2410
  8333     0D8D                     u2411:
  8334     0D8D  2D8F               	goto	l2826
  8335     0D8E                     u2410:
  8336     0D8E  2D5E               	goto	l2806
  8337     0D8F                     l2826:
  8338     0D8F  3001               	movlw	1
  8339     0D90                     u2425:
  8340     0D90  36C6               	lsrf	___fltol@f1+3,f
  8341     0D91  0CC5               	rrf	___fltol@f1+2,f
  8342     0D92  0CC4               	rrf	___fltol@f1+1,f
  8343     0D93  0CC3               	rrf	___fltol@f1,f
  8344     0D94  0B89               	decfsz	9,f
  8345     0D95  2D90               	goto	u2425
  8346     0D96  3001               	movlw	1
  8347     0D97  00C7               	movwf	??___fltol
  8348     0D98  0847               	movf	??___fltol,w
  8349     0D99  07CC               	addwf	___fltol@exp1,f
  8350     0D9A  1D03               	btfss	3,2
  8351     0D9B  2D9D               	goto	u2431
  8352     0D9C  2D9E               	goto	u2430
  8353     0D9D                     u2431:
  8354     0D9D  2D8F               	goto	l2826
  8355     0D9E                     u2430:
  8356     0D9E  2DB4               	goto	l2836
  8357     0D9F                     l2828:
  8358     0D9F  3020               	movlw	32
  8359     0DA0  024C               	subwf	___fltol@exp1,w
  8360     0DA1  1C03               	skipc
  8361     0DA2  2DA4               	goto	u2441
  8362     0DA3  2DA5               	goto	u2440
  8363     0DA4                     u2441:
  8364     0DA4  2DAF               	goto	l758
  8365     0DA5                     u2440:
  8366     0DA5  2D5E               	goto	l2806
  8367     0DA6                     l2834:
  8368     0DA6  3001               	movlw	1
  8369     0DA7                     u2455:
  8370     0DA7  35C3               	lslf	___fltol@f1,f
  8371     0DA8  0DC4               	rlf	___fltol@f1+1,f
  8372     0DA9  0DC5               	rlf	___fltol@f1+2,f
  8373     0DAA  0DC6               	rlf	___fltol@f1+3,f
  8374     0DAB  0B89               	decfsz	9,f
  8375     0DAC  2DA7               	goto	u2455
  8376     0DAD  3001               	movlw	1
  8377     0DAE  02CC               	subwf	___fltol@exp1,f
  8378     0DAF                     l758:
  8379     0DAF  084C               	movf	___fltol@exp1,w
  8380     0DB0  1D03               	btfss	3,2
  8381     0DB1  2DB3               	goto	u2461
  8382     0DB2  2DB4               	goto	u2460
  8383     0DB3                     u2461:
  8384     0DB3  2DA6               	goto	l2834
  8385     0DB4                     u2460:
  8386     0DB4                     l2836:
  8387     0DB4  084B               	movf	___fltol@sign1,w
  8388     0DB5  1903               	btfsc	3,2
  8389     0DB6  2DB8               	goto	u2471
  8390     0DB7  2DB9               	goto	u2470
  8391     0DB8                     u2471:
  8392     0DB8  2DC4               	goto	l761
  8393     0DB9                     u2470:
  8394     0DB9                     l2838:
  8395     0DB9  09C3               	comf	___fltol@f1,f
  8396     0DBA  09C4               	comf	___fltol@f1+1,f
  8397     0DBB  09C5               	comf	___fltol@f1+2,f
  8398     0DBC  09C6               	comf	___fltol@f1+3,f
  8399     0DBD  0AC3               	incf	___fltol@f1,f
  8400     0DBE  1903               	skipnz
  8401     0DBF  0AC4               	incf	___fltol@f1+1,f
  8402     0DC0  1903               	skipnz
  8403     0DC1  0AC5               	incf	___fltol@f1+2,f
  8404     0DC2  1903               	skipnz
  8405     0DC3  0AC6               	incf	___fltol@f1+3,f
  8406     0DC4                     l761:
  8407     0DC4                     l751:
  8408     0DC4  0008               	return
  8409     0DC5                     __end_of___fltol:
  8410                           
  8411                           	psect	text26
  8412     0DC5                     __ptext26:	
  8413 ;; *************** function ___flmul *****************
  8414 ;; Defined at:
  8415 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcmul.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  b               4    9[BANK0 ] long 
  8418 ;;  a               4   13[BANK0 ] long 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  prod            4   29[BANK0 ] struct .
  8421 ;;  grs             4   23[BANK0 ] unsigned long 
  8422 ;;  temp            2   33[BANK0 ] struct .
  8423 ;;  bexp            1   28[BANK0 ] unsigned char 
  8424 ;;  aexp            1   27[BANK0 ] unsigned char 
  8425 ;;  sign            1   22[BANK0 ] unsigned char 
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  4    9[BANK0 ] unsigned char 
  8428 ;; Registers used:
  8429 ;;		wreg, status,2, status,0, pclath, cstack
  8430 ;; Tracked objects:
  8431 ;;		On entry : 0/0
  8432 ;;		On exit  : 0/0
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8435 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;Total ram usage:       26 bytes
  8440 ;; Hardware stack levels used: 1
  8441 ;; Hardware stack levels required when called: 3
  8442 ;; This function calls:
  8443 ;;		__Umul8_16
  8444 ;; This function is called by:
  8445 ;;		_main
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449     0DC5                     ___flmul:	
  8450                           ;psect for function ___flmul
  8451                           
  8452     0DC5                     l2840:	
  8453                           ;incstack = 0
  8454                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8455                           
  8456     0DC5  0140               	movlb	0	; select bank0
  8457     0DC6  082C               	movf	___flmul@b+3,w
  8458     0DC7  3980               	andlw	128
  8459     0DC8  00B6               	movwf	___flmul@sign
  8460     0DC9                     l2842:
  8461     0DC9  352C               	lslf	___flmul@b+3,w
  8462     0DCA  00BC               	movwf	___flmul@bexp
  8463     0DCB                     l2844:
  8464     0DCB  1FAB               	btfss	___flmul@b+2,7
  8465     0DCC  2DCE               	goto	u2481
  8466     0DCD  2DCF               	goto	u2480
  8467     0DCE                     u2481:
  8468     0DCE  2DD0               	goto	l2848
  8469     0DCF                     u2480:
  8470     0DCF                     l2846:
  8471     0DCF  143C               	bsf	___flmul@bexp,0
  8472     0DD0                     l2848:
  8473     0DD0  083C               	movf	___flmul@bexp,w
  8474     0DD1  1903               	btfsc	3,2
  8475     0DD2  2DD4               	goto	u2491
  8476     0DD3  2DD5               	goto	u2490
  8477     0DD4                     u2491:
  8478     0DD4  2DE4               	goto	l2856
  8479     0DD5                     u2490:
  8480     0DD5                     l2850:
  8481     0DD5  0A3C               	incf	___flmul@bexp,w
  8482     0DD6  1D03               	btfss	3,2
  8483     0DD7  2DD9               	goto	u2501
  8484     0DD8  2DDA               	goto	u2500
  8485     0DD9                     u2501:
  8486     0DD9  2DE2               	goto	l2854
  8487     0DDA                     u2500:
  8488     0DDA                     l2852:
  8489     0DDA  3000               	movlw	0
  8490     0DDB  00AC               	movwf	___flmul@b+3
  8491     0DDC  3000               	movlw	0
  8492     0DDD  00AB               	movwf	___flmul@b+2
  8493     0DDE  3000               	movlw	0
  8494     0DDF  00AA               	movwf	___flmul@b+1
  8495     0DE0  3000               	movlw	0
  8496     0DE1  00A9               	movwf	___flmul@b
  8497     0DE2                     l2854:
  8498     0DE2  17AB               	bsf	___flmul@b+2,7
  8499     0DE3  2DEC               	goto	l2858
  8500     0DE4                     l2856:
  8501     0DE4  3000               	movlw	0
  8502     0DE5  00AC               	movwf	___flmul@b+3
  8503     0DE6  3000               	movlw	0
  8504     0DE7  00AB               	movwf	___flmul@b+2
  8505     0DE8  3000               	movlw	0
  8506     0DE9  00AA               	movwf	___flmul@b+1
  8507     0DEA  3000               	movlw	0
  8508     0DEB  00A9               	movwf	___flmul@b
  8509     0DEC                     l2858:
  8510     0DEC  0830               	movf	___flmul@a+3,w
  8511     0DED  3980               	andlw	128
  8512     0DEE  00B1               	movwf	??___flmul
  8513     0DEF  0831               	movf	??___flmul,w
  8514     0DF0  06B6               	xorwf	___flmul@sign,f
  8515     0DF1                     l2860:
  8516     0DF1  3530               	lslf	___flmul@a+3,w
  8517     0DF2  00BB               	movwf	___flmul@aexp
  8518     0DF3                     l2862:
  8519     0DF3  1FAF               	btfss	___flmul@a+2,7
  8520     0DF4  2DF6               	goto	u2511
  8521     0DF5  2DF7               	goto	u2510
  8522     0DF6                     u2511:
  8523     0DF6  2DF8               	goto	l2866
  8524     0DF7                     u2510:
  8525     0DF7                     l2864:
  8526     0DF7  143B               	bsf	___flmul@aexp,0
  8527     0DF8                     l2866:
  8528     0DF8  083B               	movf	___flmul@aexp,w
  8529     0DF9  1903               	btfsc	3,2
  8530     0DFA  2DFC               	goto	u2521
  8531     0DFB  2DFD               	goto	u2520
  8532     0DFC                     u2521:
  8533     0DFC  2E0C               	goto	l2874
  8534     0DFD                     u2520:
  8535     0DFD                     l2868:
  8536     0DFD  0A3B               	incf	___flmul@aexp,w
  8537     0DFE  1D03               	btfss	3,2
  8538     0DFF  2E01               	goto	u2531
  8539     0E00  2E02               	goto	u2530
  8540     0E01                     u2531:
  8541     0E01  2E0A               	goto	l2872
  8542     0E02                     u2530:
  8543     0E02                     l2870:
  8544     0E02  3000               	movlw	0
  8545     0E03  00B0               	movwf	___flmul@a+3
  8546     0E04  3000               	movlw	0
  8547     0E05  00AF               	movwf	___flmul@a+2
  8548     0E06  3000               	movlw	0
  8549     0E07  00AE               	movwf	___flmul@a+1
  8550     0E08  3000               	movlw	0
  8551     0E09  00AD               	movwf	___flmul@a
  8552     0E0A                     l2872:
  8553     0E0A  17AF               	bsf	___flmul@a+2,7
  8554     0E0B  2E14               	goto	l2876
  8555     0E0C                     l2874:
  8556     0E0C  3000               	movlw	0
  8557     0E0D  00B0               	movwf	___flmul@a+3
  8558     0E0E  3000               	movlw	0
  8559     0E0F  00AF               	movwf	___flmul@a+2
  8560     0E10  3000               	movlw	0
  8561     0E11  00AE               	movwf	___flmul@a+1
  8562     0E12  3000               	movlw	0
  8563     0E13  00AD               	movwf	___flmul@a
  8564     0E14                     l2876:
  8565     0E14  083B               	movf	___flmul@aexp,w
  8566     0E15  1903               	btfsc	3,2
  8567     0E16  2E18               	goto	u2541
  8568     0E17  2E19               	goto	u2540
  8569     0E18                     u2541:
  8570     0E18  2E1E               	goto	l2880
  8571     0E19                     u2540:
  8572     0E19                     l2878:
  8573     0E19  083C               	movf	___flmul@bexp,w
  8574     0E1A  1D03               	btfss	3,2
  8575     0E1B  2E1D               	goto	u2551
  8576     0E1C  2E1E               	goto	u2550
  8577     0E1D                     u2551:
  8578     0E1D  2E27               	goto	l2884
  8579     0E1E                     u2550:
  8580     0E1E                     l2880:
  8581     0E1E  3000               	movlw	0
  8582     0E1F  00AC               	movwf	?___flmul+3
  8583     0E20  3000               	movlw	0
  8584     0E21  00AB               	movwf	?___flmul+2
  8585     0E22  3000               	movlw	0
  8586     0E23  00AA               	movwf	?___flmul+1
  8587     0E24  3000               	movlw	0
  8588     0E25  00A9               	movwf	?___flmul
  8589     0E26  2FFF               	goto	l954
  8590     0E27                     l2884:
  8591     0E27  0829               	movf	___flmul@b,w
  8592     0E28  00A0               	movwf	__Umul8_16@multiplicand
  8593     0E29  082F               	movf	___flmul@a+2,w
  8594     0E2A  318B  2373  318D   	fcall	__Umul8_16
  8595     0E2D  0140               	movlb	0	; select bank0
  8596     0E2E  0821               	movf	?__Umul8_16+1,w
  8597     0E2F  00C2               	movwf	___flmul@temp+1
  8598     0E30  0820               	movf	?__Umul8_16,w
  8599     0E31  00C1               	movwf	___flmul@temp
  8600     0E32                     l2886:
  8601     0E32  0841               	movf	___flmul@temp,w
  8602     0E33  00B1               	movwf	??___flmul
  8603     0E34  01B2               	clrf	??___flmul+1
  8604     0E35  01B3               	clrf	??___flmul+2
  8605     0E36  01B4               	clrf	??___flmul+3
  8606     0E37  0834               	movf	??___flmul+3,w
  8607     0E38  00BA               	movwf	___flmul@grs+3
  8608     0E39  0833               	movf	??___flmul+2,w
  8609     0E3A  00B9               	movwf	___flmul@grs+2
  8610     0E3B  0832               	movf	??___flmul+1,w
  8611     0E3C  00B8               	movwf	___flmul@grs+1
  8612     0E3D  0831               	movf	??___flmul,w
  8613     0E3E  00B7               	movwf	___flmul@grs
  8614     0E3F                     l2888:
  8615     0E3F  0842               	movf	___flmul@temp+1,w
  8616     0E40  00B1               	movwf	??___flmul
  8617     0E41  01B2               	clrf	??___flmul+1
  8618     0E42  01B3               	clrf	??___flmul+2
  8619     0E43  01B4               	clrf	??___flmul+3
  8620     0E44  0834               	movf	??___flmul+3,w
  8621     0E45  00C0               	movwf	___flmul@prod+3
  8622     0E46  0833               	movf	??___flmul+2,w
  8623     0E47  00BF               	movwf	___flmul@prod+2
  8624     0E48  0832               	movf	??___flmul+1,w
  8625     0E49  00BE               	movwf	___flmul@prod+1
  8626     0E4A  0831               	movf	??___flmul,w
  8627     0E4B  00BD               	movwf	___flmul@prod
  8628     0E4C  082A               	movf	___flmul@b+1,w
  8629     0E4D  00A0               	movwf	__Umul8_16@multiplicand
  8630     0E4E  082E               	movf	___flmul@a+1,w
  8631     0E4F  318B  2373  318D   	fcall	__Umul8_16
  8632     0E52  0140               	movlb	0	; select bank0
  8633     0E53  0821               	movf	?__Umul8_16+1,w
  8634     0E54  00C2               	movwf	___flmul@temp+1
  8635     0E55  0820               	movf	?__Umul8_16,w
  8636     0E56  00C1               	movwf	___flmul@temp
  8637     0E57                     l2890:
  8638     0E57  0841               	movf	___flmul@temp,w
  8639     0E58  00B1               	movwf	??___flmul
  8640     0E59  01B2               	clrf	??___flmul+1
  8641     0E5A  01B3               	clrf	??___flmul+2
  8642     0E5B  01B4               	clrf	??___flmul+3
  8643     0E5C  0831               	movf	??___flmul,w
  8644     0E5D  07B7               	addwf	___flmul@grs,f
  8645     0E5E  0832               	movf	??___flmul+1,w
  8646     0E5F  3DB8               	addwfc	___flmul@grs+1,f
  8647     0E60  0833               	movf	??___flmul+2,w
  8648     0E61  3DB9               	addwfc	___flmul@grs+2,f
  8649     0E62  0834               	movf	??___flmul+3,w
  8650     0E63  3DBA               	addwfc	___flmul@grs+3,f
  8651     0E64                     l2892:
  8652     0E64  0842               	movf	___flmul@temp+1,w
  8653     0E65  00B1               	movwf	??___flmul
  8654     0E66  01B2               	clrf	??___flmul+1
  8655     0E67  01B3               	clrf	??___flmul+2
  8656     0E68  01B4               	clrf	??___flmul+3
  8657     0E69  0831               	movf	??___flmul,w
  8658     0E6A  07BD               	addwf	___flmul@prod,f
  8659     0E6B  0832               	movf	??___flmul+1,w
  8660     0E6C  3DBE               	addwfc	___flmul@prod+1,f
  8661     0E6D  0833               	movf	??___flmul+2,w
  8662     0E6E  3DBF               	addwfc	___flmul@prod+2,f
  8663     0E6F  0834               	movf	??___flmul+3,w
  8664     0E70  3DC0               	addwfc	___flmul@prod+3,f
  8665     0E71  082B               	movf	___flmul@b+2,w
  8666     0E72  00A0               	movwf	__Umul8_16@multiplicand
  8667     0E73  082D               	movf	___flmul@a,w
  8668     0E74  318B  2373  318D   	fcall	__Umul8_16
  8669     0E77  0140               	movlb	0	; select bank0
  8670     0E78  0821               	movf	?__Umul8_16+1,w
  8671     0E79  00C2               	movwf	___flmul@temp+1
  8672     0E7A  0820               	movf	?__Umul8_16,w
  8673     0E7B  00C1               	movwf	___flmul@temp
  8674     0E7C                     l2894:
  8675     0E7C  0841               	movf	___flmul@temp,w
  8676     0E7D  00B1               	movwf	??___flmul
  8677     0E7E  01B2               	clrf	??___flmul+1
  8678     0E7F  01B3               	clrf	??___flmul+2
  8679     0E80  01B4               	clrf	??___flmul+3
  8680     0E81  0831               	movf	??___flmul,w
  8681     0E82  07B7               	addwf	___flmul@grs,f
  8682     0E83  0832               	movf	??___flmul+1,w
  8683     0E84  3DB8               	addwfc	___flmul@grs+1,f
  8684     0E85  0833               	movf	??___flmul+2,w
  8685     0E86  3DB9               	addwfc	___flmul@grs+2,f
  8686     0E87  0834               	movf	??___flmul+3,w
  8687     0E88  3DBA               	addwfc	___flmul@grs+3,f
  8688     0E89                     l2896:
  8689     0E89  0842               	movf	___flmul@temp+1,w
  8690     0E8A  00B1               	movwf	??___flmul
  8691     0E8B  01B2               	clrf	??___flmul+1
  8692     0E8C  01B3               	clrf	??___flmul+2
  8693     0E8D  01B4               	clrf	??___flmul+3
  8694     0E8E  0831               	movf	??___flmul,w
  8695     0E8F  07BD               	addwf	___flmul@prod,f
  8696     0E90  0832               	movf	??___flmul+1,w
  8697     0E91  3DBE               	addwfc	___flmul@prod+1,f
  8698     0E92  0833               	movf	??___flmul+2,w
  8699     0E93  3DBF               	addwfc	___flmul@prod+2,f
  8700     0E94  0834               	movf	??___flmul+3,w
  8701     0E95  3DC0               	addwfc	___flmul@prod+3,f
  8702     0E96                     l2898:
  8703     0E96  3008               	movlw	8
  8704     0E97                     u2565:
  8705     0E97  35B7               	lslf	___flmul@grs,f
  8706     0E98  0DB8               	rlf	___flmul@grs+1,f
  8707     0E99  0DB9               	rlf	___flmul@grs+2,f
  8708     0E9A  0DBA               	rlf	___flmul@grs+3,f
  8709     0E9B  0B89               	decfsz	9,f
  8710     0E9C  2E97               	goto	u2565
  8711     0E9D                     l2900:
  8712     0E9D  082A               	movf	___flmul@b+1,w
  8713     0E9E  00A0               	movwf	__Umul8_16@multiplicand
  8714     0E9F  082D               	movf	___flmul@a,w
  8715     0EA0  318B  2373  318D   	fcall	__Umul8_16
  8716     0EA3  0140               	movlb	0	; select bank0
  8717     0EA4  0821               	movf	?__Umul8_16+1,w
  8718     0EA5  00C2               	movwf	___flmul@temp+1
  8719     0EA6  0820               	movf	?__Umul8_16,w
  8720     0EA7  00C1               	movwf	___flmul@temp
  8721     0EA8                     l2902:
  8722     0EA8  0841               	movf	___flmul@temp,w
  8723     0EA9  07B7               	addwf	___flmul@grs,f
  8724     0EAA  0842               	movf	___flmul@temp+1,w
  8725     0EAB  3DB8               	addwfc	___flmul@grs+1,f
  8726     0EAC  3000               	movlw	0
  8727     0EAD  3DB9               	addwfc	___flmul@grs+2,f
  8728     0EAE  3DBA               	addwfc	___flmul@grs+3,f
  8729     0EAF                     l2904:
  8730     0EAF  0829               	movf	___flmul@b,w
  8731     0EB0  00A0               	movwf	__Umul8_16@multiplicand
  8732     0EB1  082E               	movf	___flmul@a+1,w
  8733     0EB2  318B  2373  318D   	fcall	__Umul8_16
  8734     0EB5  0140               	movlb	0	; select bank0
  8735     0EB6  0821               	movf	?__Umul8_16+1,w
  8736     0EB7  00C2               	movwf	___flmul@temp+1
  8737     0EB8  0820               	movf	?__Umul8_16,w
  8738     0EB9  00C1               	movwf	___flmul@temp
  8739     0EBA                     l2906:
  8740     0EBA  0841               	movf	___flmul@temp,w
  8741     0EBB  07B7               	addwf	___flmul@grs,f
  8742     0EBC  0842               	movf	___flmul@temp+1,w
  8743     0EBD  3DB8               	addwfc	___flmul@grs+1,f
  8744     0EBE  3000               	movlw	0
  8745     0EBF  3DB9               	addwfc	___flmul@grs+2,f
  8746     0EC0  3DBA               	addwfc	___flmul@grs+3,f
  8747     0EC1                     l2908:
  8748     0EC1  3008               	movlw	8
  8749     0EC2                     u2575:
  8750     0EC2  35B7               	lslf	___flmul@grs,f
  8751     0EC3  0DB8               	rlf	___flmul@grs+1,f
  8752     0EC4  0DB9               	rlf	___flmul@grs+2,f
  8753     0EC5  0DBA               	rlf	___flmul@grs+3,f
  8754     0EC6  0B89               	decfsz	9,f
  8755     0EC7  2EC2               	goto	u2575
  8756     0EC8  0829               	movf	___flmul@b,w
  8757     0EC9  00A0               	movwf	__Umul8_16@multiplicand
  8758     0ECA  082D               	movf	___flmul@a,w
  8759     0ECB  318B  2373  318D   	fcall	__Umul8_16
  8760     0ECE  0140               	movlb	0	; select bank0
  8761     0ECF  0821               	movf	?__Umul8_16+1,w
  8762     0ED0  00C2               	movwf	___flmul@temp+1
  8763     0ED1  0820               	movf	?__Umul8_16,w
  8764     0ED2  00C1               	movwf	___flmul@temp
  8765     0ED3                     l2910:
  8766     0ED3  0841               	movf	___flmul@temp,w
  8767     0ED4  07B7               	addwf	___flmul@grs,f
  8768     0ED5  0842               	movf	___flmul@temp+1,w
  8769     0ED6  3DB8               	addwfc	___flmul@grs+1,f
  8770     0ED7  3000               	movlw	0
  8771     0ED8  3DB9               	addwfc	___flmul@grs+2,f
  8772     0ED9  3DBA               	addwfc	___flmul@grs+3,f
  8773     0EDA                     l2912:
  8774     0EDA  082A               	movf	___flmul@b+1,w
  8775     0EDB  00A0               	movwf	__Umul8_16@multiplicand
  8776     0EDC  082F               	movf	___flmul@a+2,w
  8777     0EDD  318B  2373  318D   	fcall	__Umul8_16
  8778     0EE0  0140               	movlb	0	; select bank0
  8779     0EE1  0821               	movf	?__Umul8_16+1,w
  8780     0EE2  00C2               	movwf	___flmul@temp+1
  8781     0EE3  0820               	movf	?__Umul8_16,w
  8782     0EE4  00C1               	movwf	___flmul@temp
  8783     0EE5  0841               	movf	___flmul@temp,w
  8784     0EE6  07BD               	addwf	___flmul@prod,f
  8785     0EE7  0842               	movf	___flmul@temp+1,w
  8786     0EE8  3DBE               	addwfc	___flmul@prod+1,f
  8787     0EE9  3000               	movlw	0
  8788     0EEA  3DBF               	addwfc	___flmul@prod+2,f
  8789     0EEB  3DC0               	addwfc	___flmul@prod+3,f
  8790     0EEC                     l2914:
  8791     0EEC  082B               	movf	___flmul@b+2,w
  8792     0EED  00A0               	movwf	__Umul8_16@multiplicand
  8793     0EEE  082E               	movf	___flmul@a+1,w
  8794     0EEF  318B  2373  318D   	fcall	__Umul8_16
  8795     0EF2  0140               	movlb	0	; select bank0
  8796     0EF3  0821               	movf	?__Umul8_16+1,w
  8797     0EF4  00C2               	movwf	___flmul@temp+1
  8798     0EF5  0820               	movf	?__Umul8_16,w
  8799     0EF6  00C1               	movwf	___flmul@temp
  8800     0EF7                     l2916:
  8801     0EF7  0841               	movf	___flmul@temp,w
  8802     0EF8  07BD               	addwf	___flmul@prod,f
  8803     0EF9  0842               	movf	___flmul@temp+1,w
  8804     0EFA  3DBE               	addwfc	___flmul@prod+1,f
  8805     0EFB  3000               	movlw	0
  8806     0EFC  3DBF               	addwfc	___flmul@prod+2,f
  8807     0EFD  3DC0               	addwfc	___flmul@prod+3,f
  8808     0EFE  082B               	movf	___flmul@b+2,w
  8809     0EFF  00A0               	movwf	__Umul8_16@multiplicand
  8810     0F00  082F               	movf	___flmul@a+2,w
  8811     0F01  318B  2373  318D   	fcall	__Umul8_16
  8812     0F04  0140               	movlb	0	; select bank0
  8813     0F05  0821               	movf	?__Umul8_16+1,w
  8814     0F06  00C2               	movwf	___flmul@temp+1
  8815     0F07  0820               	movf	?__Umul8_16,w
  8816     0F08  00C1               	movwf	___flmul@temp
  8817     0F09                     l2918:
  8818     0F09  0841               	movf	___flmul@temp,w
  8819     0F0A  00B1               	movwf	??___flmul
  8820     0F0B  0842               	movf	___flmul@temp+1,w
  8821     0F0C  00B2               	movwf	??___flmul+1
  8822     0F0D  01B3               	clrf	??___flmul+2
  8823     0F0E  01B4               	clrf	??___flmul+3
  8824     0F0F  3008               	movlw	8
  8825     0F10                     u2585:
  8826     0F10  35B1               	lslf	??___flmul,f
  8827     0F11  0DB2               	rlf	??___flmul+1,f
  8828     0F12  0DB3               	rlf	??___flmul+2,f
  8829     0F13  0DB4               	rlf	??___flmul+3,f
  8830     0F14                     u2580:
  8831     0F14  0B89               	decfsz	9,f
  8832     0F15  2F10               	goto	u2585
  8833     0F16  0831               	movf	??___flmul,w
  8834     0F17  07BD               	addwf	___flmul@prod,f
  8835     0F18  0832               	movf	??___flmul+1,w
  8836     0F19  3DBE               	addwfc	___flmul@prod+1,f
  8837     0F1A  0833               	movf	??___flmul+2,w
  8838     0F1B  3DBF               	addwfc	___flmul@prod+2,f
  8839     0F1C  0834               	movf	??___flmul+3,w
  8840     0F1D  3DC0               	addwfc	___flmul@prod+3,f
  8841     0F1E                     l2920:
  8842     0F1E  0837               	movf	___flmul@grs,w
  8843     0F1F  00B1               	movwf	??___flmul
  8844     0F20  0838               	movf	___flmul@grs+1,w
  8845     0F21  00B2               	movwf	??___flmul+1
  8846     0F22  0839               	movf	___flmul@grs+2,w
  8847     0F23  00B3               	movwf	??___flmul+2
  8848     0F24  083A               	movf	___flmul@grs+3,w
  8849     0F25  00B4               	movwf	??___flmul+3
  8850     0F26  3018               	movlw	24
  8851     0F27                     u2595:
  8852     0F27  36B4               	lsrf	??___flmul+3,f
  8853     0F28  0CB3               	rrf	??___flmul+2,f
  8854     0F29  0CB2               	rrf	??___flmul+1,f
  8855     0F2A  0CB1               	rrf	??___flmul,f
  8856     0F2B                     u2590:
  8857     0F2B  0B89               	decfsz	9,f
  8858     0F2C  2F27               	goto	u2595
  8859     0F2D  0831               	movf	??___flmul,w
  8860     0F2E  07BD               	addwf	___flmul@prod,f
  8861     0F2F  0832               	movf	??___flmul+1,w
  8862     0F30  3DBE               	addwfc	___flmul@prod+1,f
  8863     0F31  0833               	movf	??___flmul+2,w
  8864     0F32  3DBF               	addwfc	___flmul@prod+2,f
  8865     0F33  0834               	movf	??___flmul+3,w
  8866     0F34  3DC0               	addwfc	___flmul@prod+3,f
  8867     0F35                     l2922:
  8868     0F35  3008               	movlw	8
  8869     0F36                     u2605:
  8870     0F36  35B7               	lslf	___flmul@grs,f
  8871     0F37  0DB8               	rlf	___flmul@grs+1,f
  8872     0F38  0DB9               	rlf	___flmul@grs+2,f
  8873     0F39  0DBA               	rlf	___flmul@grs+3,f
  8874     0F3A  0B89               	decfsz	9,f
  8875     0F3B  2F36               	goto	u2605
  8876     0F3C                     l2924:
  8877     0F3C  083C               	movf	___flmul@bexp,w
  8878     0F3D  073B               	addwf	___flmul@aexp,w
  8879     0F3E  00B1               	movwf	??___flmul
  8880     0F3F  01B2               	clrf	??___flmul+1
  8881     0F40  0DB2               	rlf	??___flmul+1,f
  8882     0F41  0831               	movf	??___flmul,w
  8883     0F42  3E82               	addlw	130
  8884     0F43  00C1               	movwf	___flmul@temp
  8885     0F44  30FF               	movlw	255
  8886     0F45  3D32               	addwfc	??___flmul+1,w
  8887     0F46  00C2               	movwf	___flmul@temp+1
  8888     0F47  2F5F               	goto	l2936
  8889     0F48                     l2926:
  8890     0F48  3001               	movlw	1
  8891     0F49                     u2615:
  8892     0F49  35BD               	lslf	___flmul@prod,f
  8893     0F4A  0DBE               	rlf	___flmul@prod+1,f
  8894     0F4B  0DBF               	rlf	___flmul@prod+2,f
  8895     0F4C  0DC0               	rlf	___flmul@prod+3,f
  8896     0F4D  0B89               	decfsz	9,f
  8897     0F4E  2F49               	goto	u2615
  8898     0F4F                     l2928:
  8899     0F4F  1FBA               	btfss	___flmul@grs+3,7
  8900     0F50  2F52               	goto	u2621
  8901     0F51  2F53               	goto	u2620
  8902     0F52                     u2621:
  8903     0F52  2F54               	goto	l2932
  8904     0F53                     u2620:
  8905     0F53                     l2930:
  8906     0F53  143D               	bsf	___flmul@prod,0
  8907     0F54                     l2932:
  8908     0F54  3001               	movlw	1
  8909     0F55                     u2635:
  8910     0F55  35B7               	lslf	___flmul@grs,f
  8911     0F56  0DB8               	rlf	___flmul@grs+1,f
  8912     0F57  0DB9               	rlf	___flmul@grs+2,f
  8913     0F58  0DBA               	rlf	___flmul@grs+3,f
  8914     0F59  0B89               	decfsz	9,f
  8915     0F5A  2F55               	goto	u2635
  8916     0F5B                     l2934:
  8917     0F5B  30FF               	movlw	255
  8918     0F5C  07C1               	addwf	___flmul@temp,f
  8919     0F5D  30FF               	movlw	255
  8920     0F5E  3DC2               	addwfc	___flmul@temp+1,f
  8921     0F5F                     l2936:
  8922     0F5F  1FBF               	btfss	___flmul@prod+2,7
  8923     0F60  2F62               	goto	u2641
  8924     0F61  2F63               	goto	u2640
  8925     0F62                     u2641:
  8926     0F62  2F48               	goto	l2926
  8927     0F63                     u2640:
  8928     0F63                     l2938:
  8929     0F63  01BB               	clrf	___flmul@aexp
  8930     0F64                     l2940:
  8931     0F64  1FBA               	btfss	___flmul@grs+3,7
  8932     0F65  2F67               	goto	u2651
  8933     0F66  2F68               	goto	u2650
  8934     0F67                     u2651:
  8935     0F67  2F84               	goto	l2948
  8936     0F68                     u2650:
  8937     0F68                     l2942:
  8938     0F68  30FF               	movlw	255
  8939     0F69  0537               	andwf	___flmul@grs,w
  8940     0F6A  00B1               	movwf	??___flmul
  8941     0F6B  30FF               	movlw	255
  8942     0F6C  0538               	andwf	___flmul@grs+1,w
  8943     0F6D  00B2               	movwf	??___flmul+1
  8944     0F6E  30FF               	movlw	255
  8945     0F6F  0539               	andwf	___flmul@grs+2,w
  8946     0F70  00B3               	movwf	??___flmul+2
  8947     0F71  307F               	movlw	127
  8948     0F72  053A               	andwf	___flmul@grs+3,w
  8949     0F73  00B4               	movwf	??___flmul+3
  8950     0F74  0834               	movf	??___flmul+3,w
  8951     0F75  0433               	iorwf	??___flmul+2,w
  8952     0F76  0432               	iorwf	??___flmul+1,w
  8953     0F77  0431               	iorwf	??___flmul,w
  8954     0F78  1903               	skipnz
  8955     0F79  2F7B               	goto	u2661
  8956     0F7A  2F7C               	goto	u2660
  8957     0F7B                     u2661:
  8958     0F7B  2F7F               	goto	l960
  8959     0F7C                     u2660:
  8960     0F7C                     l2944:
  8961     0F7C  01BB               	clrf	___flmul@aexp
  8962     0F7D  0ABB               	incf	___flmul@aexp,f
  8963     0F7E  2F84               	goto	l2948
  8964     0F7F                     l960:
  8965     0F7F  1C3D               	btfss	___flmul@prod,0
  8966     0F80  2F82               	goto	u2671
  8967     0F81  2F83               	goto	u2670
  8968     0F82                     u2671:
  8969     0F82  2F84               	goto	l2948
  8970     0F83                     u2670:
  8971     0F83  2F7C               	goto	l2944
  8972     0F84                     l2948:
  8973     0F84  083B               	movf	___flmul@aexp,w
  8974     0F85  1903               	btfsc	3,2
  8975     0F86  2F88               	goto	u2681
  8976     0F87  2F89               	goto	u2680
  8977     0F88                     u2681:
  8978     0F88  2FB1               	goto	l2958
  8979     0F89                     u2680:
  8980     0F89                     l2950:
  8981     0F89  3001               	movlw	1
  8982     0F8A  07BD               	addwf	___flmul@prod,f
  8983     0F8B  3000               	movlw	0
  8984     0F8C  3DBE               	addwfc	___flmul@prod+1,f
  8985     0F8D  3000               	movlw	0
  8986     0F8E  3DBF               	addwfc	___flmul@prod+2,f
  8987     0F8F  3000               	movlw	0
  8988     0F90  3DC0               	addwfc	___flmul@prod+3,f
  8989     0F91                     l2952:
  8990     0F91  1C40               	btfss	___flmul@prod+3,0
  8991     0F92  2F94               	goto	u2691
  8992     0F93  2F95               	goto	u2690
  8993     0F94                     u2691:
  8994     0F94  2FB1               	goto	l2958
  8995     0F95                     u2690:
  8996     0F95                     l2954:
  8997     0F95  083D               	movf	___flmul@prod,w
  8998     0F96  00B1               	movwf	??___flmul
  8999     0F97  083E               	movf	___flmul@prod+1,w
  9000     0F98  00B2               	movwf	??___flmul+1
  9001     0F99  083F               	movf	___flmul@prod+2,w
  9002     0F9A  00B3               	movwf	??___flmul+2
  9003     0F9B  0840               	movf	___flmul@prod+3,w
  9004     0F9C  00B4               	movwf	??___flmul+3
  9005     0F9D  3001               	movlw	1
  9006     0F9E  00B5               	movwf	??___flmul+4
  9007     0F9F                     u2705:
  9008     0F9F  37B4               	asrf	??___flmul+3,f
  9009     0FA0  0CB3               	rrf	??___flmul+2,f
  9010     0FA1  0CB2               	rrf	??___flmul+1,f
  9011     0FA2  0CB1               	rrf	??___flmul,f
  9012     0FA3                     u2700:
  9013     0FA3  0BB5               	decfsz	??___flmul+4,f
  9014     0FA4  2F9F               	goto	u2705
  9015     0FA5  0834               	movf	??___flmul+3,w
  9016     0FA6  00C0               	movwf	___flmul@prod+3
  9017     0FA7  0833               	movf	??___flmul+2,w
  9018     0FA8  00BF               	movwf	___flmul@prod+2
  9019     0FA9  0832               	movf	??___flmul+1,w
  9020     0FAA  00BE               	movwf	___flmul@prod+1
  9021     0FAB  0831               	movf	??___flmul,w
  9022     0FAC  00BD               	movwf	___flmul@prod
  9023     0FAD                     l2956:
  9024     0FAD  3001               	movlw	1
  9025     0FAE  07C1               	addwf	___flmul@temp,f
  9026     0FAF  3000               	movlw	0
  9027     0FB0  3DC2               	addwfc	___flmul@temp+1,f
  9028     0FB1                     l2958:
  9029     0FB1  0842               	movf	___flmul@temp+1,w
  9030     0FB2  3A80               	xorlw	128
  9031     0FB3  00B1               	movwf	??___flmul
  9032     0FB4  3080               	movlw	128
  9033     0FB5  0231               	subwf	??___flmul,w
  9034     0FB6  1D03               	skipz
  9035     0FB7  2FBA               	goto	u2715
  9036     0FB8  30FF               	movlw	255
  9037     0FB9  0241               	subwf	___flmul@temp,w
  9038     0FBA                     u2715:
  9039     0FBA  1C03               	skipc
  9040     0FBB  2FBD               	goto	u2711
  9041     0FBC  2FBE               	goto	u2710
  9042     0FBD                     u2711:
  9043     0FBD  2FC8               	goto	l2962
  9044     0FBE                     u2710:
  9045     0FBE                     l2960:
  9046     0FBE  307F               	movlw	127
  9047     0FBF  0140               	movlb	0	; select bank0
  9048     0FC0  00C0               	movwf	___flmul@prod+3
  9049     0FC1  3080               	movlw	128
  9050     0FC2  00BF               	movwf	___flmul@prod+2
  9051     0FC3  3000               	movlw	0
  9052     0FC4  00BE               	movwf	___flmul@prod+1
  9053     0FC5  3000               	movlw	0
  9054     0FC6  00BD               	movwf	___flmul@prod
  9055     0FC7  2FF3               	goto	l966
  9056     0FC8                     l2962:
  9057     0FC8  0140               	movlb	0	; select bank0
  9058     0FC9  0842               	movf	___flmul@temp+1,w
  9059     0FCA  3A80               	xorlw	128
  9060     0FCB  00B1               	movwf	??___flmul
  9061     0FCC  3080               	movlw	128
  9062     0FCD  0231               	subwf	??___flmul,w
  9063     0FCE  1D03               	skipz
  9064     0FCF  2FD2               	goto	u2725
  9065     0FD0  3001               	movlw	1
  9066     0FD1  0241               	subwf	___flmul@temp,w
  9067     0FD2                     u2725:
  9068     0FD2  1803               	skipnc
  9069     0FD3  2FD5               	goto	u2721
  9070     0FD4  2FD6               	goto	u2720
  9071     0FD5                     u2721:
  9072     0FD5  2FE1               	goto	l2968
  9073     0FD6                     u2720:
  9074     0FD6                     l2964:
  9075     0FD6  3000               	movlw	0
  9076     0FD7  0140               	movlb	0	; select bank0
  9077     0FD8  00C0               	movwf	___flmul@prod+3
  9078     0FD9  3000               	movlw	0
  9079     0FDA  00BF               	movwf	___flmul@prod+2
  9080     0FDB  3000               	movlw	0
  9081     0FDC  00BE               	movwf	___flmul@prod+1
  9082     0FDD  3000               	movlw	0
  9083     0FDE  00BD               	movwf	___flmul@prod
  9084     0FDF                     l2966:
  9085     0FDF  01B6               	clrf	___flmul@sign
  9086     0FE0  2FF3               	goto	l966
  9087     0FE1                     l2968:
  9088     0FE1  0140               	movlb	0	; select bank0
  9089     0FE2  0841               	movf	___flmul@temp,w
  9090     0FE3  00BC               	movwf	___flmul@bexp
  9091     0FE4  30FF               	movlw	255
  9092     0FE5  05BD               	andwf	___flmul@prod,f
  9093     0FE6  30FF               	movlw	255
  9094     0FE7  05BE               	andwf	___flmul@prod+1,f
  9095     0FE8  307F               	movlw	127
  9096     0FE9  05BF               	andwf	___flmul@prod+2,f
  9097     0FEA  3000               	movlw	0
  9098     0FEB  05C0               	andwf	___flmul@prod+3,f
  9099     0FEC                     l2970:
  9100     0FEC  1C3C               	btfss	___flmul@bexp,0
  9101     0FED  2FEF               	goto	u2731
  9102     0FEE  2FF0               	goto	u2730
  9103     0FEF                     u2731:
  9104     0FEF  2FF1               	goto	l2974
  9105     0FF0                     u2730:
  9106     0FF0                     l2972:
  9107     0FF0  17BF               	bsf	___flmul@prod+2,7
  9108     0FF1                     l2974:
  9109     0FF1  363C               	lsrf	___flmul@bexp,w
  9110     0FF2  00C0               	movwf	___flmul@prod+3
  9111     0FF3                     l966:
  9112     0FF3  0836               	movf	___flmul@sign,w
  9113     0FF4  00B1               	movwf	??___flmul
  9114     0FF5  0831               	movf	??___flmul,w
  9115     0FF6  04C0               	iorwf	___flmul@prod+3,f
  9116     0FF7                     l2976:
  9117     0FF7  0840               	movf	___flmul@prod+3,w
  9118     0FF8  00AC               	movwf	?___flmul+3
  9119     0FF9  083F               	movf	___flmul@prod+2,w
  9120     0FFA  00AB               	movwf	?___flmul+2
  9121     0FFB  083E               	movf	___flmul@prod+1,w
  9122     0FFC  00AA               	movwf	?___flmul+1
  9123     0FFD  083D               	movf	___flmul@prod,w
  9124     0FFE  00A9               	movwf	?___flmul
  9125     0FFF                     l954:
  9126     0FFF  0008               	return
  9127     1000                     __end_of___flmul:
  9128                           
  9129                           	psect	text27
  9130     0B73                     __ptext27:	
  9131 ;; *************** function __Umul8_16 *****************
  9132 ;; Defined at:
  9133 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8_16.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  multiplier      1    wreg     unsigned char 
  9136 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;  multiplier      1    8[BANK0 ] unsigned char 
  9139 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  9140 ;;  product         2    4[BANK0 ] unsigned int 
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  2    0[BANK0 ] unsigned int 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, status,0
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;Total ram usage:        9 bytes
  9155 ;; Hardware stack levels used: 1
  9156 ;; Hardware stack levels required when called: 2
  9157 ;; This function calls:
  9158 ;;		Nothing
  9159 ;; This function is called by:
  9160 ;;		___flmul
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164     0B73                     __Umul8_16:	
  9165                           ;psect for function __Umul8_16
  9166                           
  9167                           
  9168                           ;incstack = 0
  9169                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9170                           ;__Umul8_16@multiplier stored from wreg
  9171     0B73  0140               	movlb	0	; select bank0
  9172     0B74  00A8               	movwf	__Umul8_16@multiplier
  9173     0B75                     l2654:
  9174     0B75  01A4               	clrf	__Umul8_16@product
  9175     0B76  01A5               	clrf	__Umul8_16@product+1
  9176     0B77                     l2656:
  9177     0B77  0820               	movf	__Umul8_16@multiplicand,w
  9178     0B78  00A2               	movwf	??__Umul8_16
  9179     0B79  01A3               	clrf	??__Umul8_16+1
  9180     0B7A  0822               	movf	??__Umul8_16,w
  9181     0B7B  00A6               	movwf	__Umul8_16@word_mpld
  9182     0B7C  0823               	movf	??__Umul8_16+1,w
  9183     0B7D  00A7               	movwf	__Umul8_16@word_mpld+1
  9184     0B7E                     l2658:
  9185     0B7E  1C28               	btfss	__Umul8_16@multiplier,0
  9186     0B7F  2B81               	goto	u2271
  9187     0B80  2B82               	goto	u2270
  9188     0B81                     u2271:
  9189     0B81  2B86               	goto	l973
  9190     0B82                     u2270:
  9191     0B82                     l2660:
  9192     0B82  0826               	movf	__Umul8_16@word_mpld,w
  9193     0B83  07A4               	addwf	__Umul8_16@product,f
  9194     0B84  0827               	movf	__Umul8_16@word_mpld+1,w
  9195     0B85  3DA5               	addwfc	__Umul8_16@product+1,f
  9196     0B86                     l973:
  9197     0B86  3001               	movlw	1
  9198     0B87                     u2285:
  9199     0B87  35A6               	lslf	__Umul8_16@word_mpld,f
  9200     0B88  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  9201     0B89  0B89               	decfsz	9,f
  9202     0B8A  2B87               	goto	u2285
  9203     0B8B  1003               	clrc
  9204     0B8C  0CA8               	rrf	__Umul8_16@multiplier,f
  9205     0B8D                     l2662:
  9206     0B8D  0828               	movf	__Umul8_16@multiplier,w
  9207     0B8E  1D03               	btfss	3,2
  9208     0B8F  2B91               	goto	u2291
  9209     0B90  2B92               	goto	u2290
  9210     0B91                     u2291:
  9211     0B91  2B7E               	goto	l2658
  9212     0B92                     u2290:
  9213     0B92                     l2664:
  9214     0B92  0825               	movf	__Umul8_16@product+1,w
  9215     0B93  00A1               	movwf	?__Umul8_16+1
  9216     0B94  0824               	movf	__Umul8_16@product,w
  9217     0B95  00A0               	movwf	?__Umul8_16
  9218     0B96                     l975:
  9219     0B96  0008               	return
  9220     0B97                     __end_of__Umul8_16:
  9221                           
  9222                           	psect	text28
  9223     0A14                     __ptext28:	
  9224 ;; *************** function _SYSTEM_Initialize *****************
  9225 ;; Defined at:
  9226 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;		None
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;		None
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  1    wreg      void 
  9233 ;; Registers used:
  9234 ;;		wreg, status,2, status,0, pclath, cstack
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;Total ram usage:        0 bytes
  9245 ;; Hardware stack levels used: 1
  9246 ;; Hardware stack levels required when called: 3
  9247 ;; This function calls:
  9248 ;;		_OSCILLATOR_Initialize
  9249 ;;		_PIN_MANAGER_Initialize
  9250 ;;		_PMD_Initialize
  9251 ;; This function is called by:
  9252 ;;		_main
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256     0A14                     _SYSTEM_Initialize:	
  9257                           ;psect for function _SYSTEM_Initialize
  9258                           
  9259     0A14                     l2668:	
  9260                           ;incstack = 0
  9261                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9262                           
  9263                           
  9264                           ;mcc.c: 52: PMD_Initialize();
  9265     0A14  318A  220A  318A   	fcall	_PMD_Initialize
  9266     0A17                     l2670:
  9267                           
  9268                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  9269     0A17  3187  27D1  318A   	fcall	_PIN_MANAGER_Initialize
  9270     0A1A                     l2672:
  9271                           
  9272                           ;mcc.c: 54: OSCILLATOR_Initialize();
  9273     0A1A  3189  21F7  318A   	fcall	_OSCILLATOR_Initialize
  9274     0A1D                     l35:
  9275     0A1D  0008               	return
  9276     0A1E                     __end_of_SYSTEM_Initialize:
  9277                           
  9278                           	psect	text29
  9279     0A0A                     __ptext29:	
  9280 ;; *************** function _PMD_Initialize *****************
  9281 ;; Defined at:
  9282 ;;		line 71 in file "mcc_generated_files/mcc.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		status,2
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used: 1
  9302 ;; Hardware stack levels required when called: 2
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_SYSTEM_Initialize
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310     0A0A                     _PMD_Initialize:	
  9311                           ;psect for function _PMD_Initialize
  9312                           
  9313     0A0A                     l2472:	
  9314                           ;incstack = 0
  9315                           ; Regs used in _PMD_Initialize: [status,2]
  9316                           
  9317                           
  9318                           ;mcc.c: 74: PMD0 = 0x00;
  9319     0A0A  014F               	movlb	15	; select bank15
  9320     0A0B  0196               	clrf	22	;volatile
  9321                           
  9322                           ;mcc.c: 76: PMD1 = 0x00;
  9323     0A0C  0197               	clrf	23	;volatile
  9324                           
  9325                           ;mcc.c: 78: PMD2 = 0x00;
  9326     0A0D  0198               	clrf	24	;volatile
  9327                           
  9328                           ;mcc.c: 80: PMD3 = 0x00;
  9329     0A0E  0199               	clrf	25	;volatile
  9330                           
  9331                           ;mcc.c: 82: PMD4 = 0x00;
  9332     0A0F  019A               	clrf	26	;volatile
  9333                           
  9334                           ;mcc.c: 84: PMD5 = 0x00;
  9335     0A10  019B               	clrf	27	;volatile
  9336                           
  9337                           ;mcc.c: 86: PMD6 = 0x00;
  9338     0A11  019C               	clrf	28	;volatile
  9339                           
  9340                           ;mcc.c: 88: PMD7 = 0x00;
  9341     0A12  019D               	clrf	29	;volatile
  9342     0A13                     l41:
  9343     0A13  0008               	return
  9344     0A14                     __end_of_PMD_Initialize:
  9345                           
  9346                           	psect	text30
  9347     07D1                     __ptext30:	
  9348 ;; *************** function _PIN_MANAGER_Initialize *****************
  9349 ;; Defined at:
  9350 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;                  1    wreg      void 
  9357 ;; Registers used:
  9358 ;;		wreg, status,2
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9368 ;;Total ram usage:        0 bytes
  9369 ;; Hardware stack levels used: 1
  9370 ;; Hardware stack levels required when called: 2
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		_SYSTEM_Initialize
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378     07D1                     _PIN_MANAGER_Initialize:	
  9379                           ;psect for function _PIN_MANAGER_Initialize
  9380                           
  9381     07D1                     l2474:	
  9382                           ;incstack = 0
  9383                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9384                           
  9385                           
  9386                           ;pin_manager.c: 60: LATA = 0x00;
  9387     07D1  0140               	movlb	0	; select bank0
  9388     07D2  0198               	clrf	24	;volatile
  9389                           
  9390                           ;pin_manager.c: 61: LATC = 0x00;
  9391     07D3  019A               	clrf	26	;volatile
  9392     07D4                     l2476:
  9393                           
  9394                           ;pin_manager.c: 66: TRISA = 0x3F;
  9395     07D4  303F               	movlw	63
  9396     07D5  0092               	movwf	18	;volatile
  9397     07D6                     l2478:
  9398                           
  9399                           ;pin_manager.c: 67: TRISC = 0x13;
  9400     07D6  3013               	movlw	19
  9401     07D7  0094               	movwf	20	;volatile
  9402     07D8                     l2480:
  9403                           
  9404                           ;pin_manager.c: 72: ANSELC = 0x2C;
  9405     07D8  302C               	movlw	44
  9406     07D9  017E               	movlb	62	; select bank62
  9407     07DA  00CE               	movwf	78	;volatile
  9408     07DB                     l2482:
  9409                           
  9410                           ;pin_manager.c: 73: ANSELA = 0x37;
  9411     07DB  3037               	movlw	55
  9412     07DC  00B8               	movwf	56	;volatile
  9413                           
  9414                           ;pin_manager.c: 78: WPUA = 0x00;
  9415     07DD  01B9               	clrf	57	;volatile
  9416                           
  9417                           ;pin_manager.c: 79: WPUC = 0x00;
  9418     07DE  01CF               	clrf	79	;volatile
  9419                           
  9420                           ;pin_manager.c: 84: ODCONA = 0x00;
  9421     07DF  01BA               	clrf	58	;volatile
  9422                           
  9423                           ;pin_manager.c: 85: ODCONC = 0x00;
  9424     07E0  01D0               	clrf	80	;volatile
  9425     07E1                     l2484:
  9426                           
  9427                           ;pin_manager.c: 90: SLRCONA = 0x37;
  9428     07E1  3037               	movlw	55
  9429     07E2  00BB               	movwf	59	;volatile
  9430     07E3                     l2486:
  9431                           
  9432                           ;pin_manager.c: 91: SLRCONC = 0x3F;
  9433     07E3  303F               	movlw	63
  9434     07E4  00D1               	movwf	81	;volatile
  9435     07E5                     l2488:
  9436                           
  9437                           ;pin_manager.c: 96: INLVLA = 0x3F;
  9438     07E5  303F               	movlw	63
  9439     07E6  00BC               	movwf	60	;volatile
  9440     07E7                     l2490:
  9441                           
  9442                           ;pin_manager.c: 97: INLVLC = 0x3F;
  9443     07E7  303F               	movlw	63
  9444     07E8  00D2               	movwf	82	;volatile
  9445     07E9                     l2492:
  9446                           
  9447                           ;pin_manager.c: 101: RC0PPS = 0x13;
  9448     07E9  3013               	movlw	19
  9449     07EA  00A0               	movwf	32	;volatile
  9450     07EB                     l2494:
  9451                           
  9452                           ;pin_manager.c: 102: SSP1CLKPPS = 0x10;
  9453     07EB  3010               	movlw	16
  9454     07EC  017D               	movlb	61	; select bank61
  9455     07ED  00C5               	movwf	69	;volatile
  9456     07EE                     l2496:
  9457                           
  9458                           ;pin_manager.c: 103: RC3PPS = 0x0F;
  9459     07EE  300F               	movlw	15
  9460     07EF  017E               	movlb	62	; select bank62
  9461     07F0  00A3               	movwf	35	;volatile
  9462     07F1                     l2498:
  9463                           
  9464                           ;pin_manager.c: 104: RC1PPS = 0x14;
  9465     07F1  3014               	movlw	20
  9466     07F2  00A1               	movwf	33	;volatile
  9467     07F3                     l2500:
  9468                           
  9469                           ;pin_manager.c: 105: RC5PPS = 0x0F;
  9470     07F3  300F               	movlw	15
  9471     07F4  00A5               	movwf	37	;volatile
  9472     07F5                     l2502:
  9473                           
  9474                           ;pin_manager.c: 106: SSP1DATPPS = 0x11;
  9475     07F5  3011               	movlw	17
  9476     07F6  017D               	movlb	61	; select bank61
  9477     07F7  00C6               	movwf	70	;volatile
  9478     07F8                     l2504:
  9479                           
  9480                           ;pin_manager.c: 107: RX1DTPPS = 0x14;
  9481     07F8  3014               	movlw	20
  9482     07F9  00CB               	movwf	75	;volatile
  9483     07FA                     l86:
  9484     07FA  0008               	return
  9485     07FB                     __end_of_PIN_MANAGER_Initialize:
  9486                           
  9487                           	psect	text31
  9488     09F7                     __ptext31:	
  9489 ;; *************** function _OSCILLATOR_Initialize *****************
  9490 ;; Defined at:
  9491 ;;		line 57 in file "mcc_generated_files/mcc.c"
  9492 ;; Parameters:    Size  Location     Type
  9493 ;;		None
  9494 ;; Auto vars:     Size  Location     Type
  9495 ;;		None
  9496 ;; Return value:  Size  Location     Type
  9497 ;;                  1    wreg      void 
  9498 ;; Registers used:
  9499 ;;		wreg, status,2
  9500 ;; Tracked objects:
  9501 ;;		On entry : 0/0
  9502 ;;		On exit  : 0/0
  9503 ;;		Unchanged: 0/0
  9504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;Total ram usage:        0 bytes
  9510 ;; Hardware stack levels used: 1
  9511 ;; Hardware stack levels required when called: 2
  9512 ;; This function calls:
  9513 ;;		Nothing
  9514 ;; This function is called by:
  9515 ;;		_SYSTEM_Initialize
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519     09F7                     _OSCILLATOR_Initialize:	
  9520                           ;psect for function _OSCILLATOR_Initialize
  9521                           
  9522     09F7                     l2506:	
  9523                           ;incstack = 0
  9524                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9525                           
  9526                           
  9527                           ;mcc.c: 60: OSCCON1 = 0x62;
  9528     09F7  3062               	movlw	98
  9529     09F8  0151               	movlb	17	; select bank17
  9530     09F9  008D               	movwf	13	;volatile
  9531     09FA                     l2508:
  9532                           
  9533                           ;mcc.c: 62: OSCCON3 = 0x00;
  9534     09FA  018F               	clrf	15	;volatile
  9535     09FB                     l2510:
  9536                           
  9537                           ;mcc.c: 64: OSCEN = 0x00;
  9538     09FB  0191               	clrf	17	;volatile
  9539                           
  9540                           ;mcc.c: 66: OSCFRQ = 0x02;
  9541     09FC  3002               	movlw	2
  9542     09FD  0093               	movwf	19	;volatile
  9543     09FE                     l2512:
  9544                           
  9545                           ;mcc.c: 68: OSCTUNE = 0x00;
  9546     09FE  0192               	clrf	18	;volatile
  9547     09FF                     l38:
  9548     09FF  0008               	return
  9549     0A00                     __end_of_OSCILLATOR_Initialize:
  9550                           
  9551                           	psect	text32
  9552     0A47                     __ptext32:	
  9553 ;; *************** function _EUSART1_Write *****************
  9554 ;; Defined at:
  9555 ;;		line 76 in file "main.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  txData          1    wreg     unsigned char 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  txData          1    0[BANK0 ] unsigned char 
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  1    wreg      void 
  9562 ;; Registers used:
  9563 ;;		wreg
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9570 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9572 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9573 ;;Total ram usage:        1 bytes
  9574 ;; Hardware stack levels used: 1
  9575 ;; Hardware stack levels required when called: 2
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_main
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583     0A47                     _EUSART1_Write:	
  9584                           ;psect for function _EUSART1_Write
  9585                           
  9586                           
  9587                           ;incstack = 0
  9588                           ; Regs used in _EUSART1_Write: [wreg]
  9589                           ;EUSART1_Write@txData stored from wreg
  9590     0A47  0140               	movlb	0	; select bank0
  9591     0A48  00A0               	movwf	EUSART1_Write@txData
  9592     0A49                     l2686:
  9593     0A49                     l168:	
  9594                           ;main.c: 78: while(0 == PIR3bits.TX1IF);
  9595                           
  9596     0A49  014E               	movlb	14	; select bank14
  9597     0A4A  1E0F               	btfss	15,4	;volatile
  9598     0A4B  2A4D               	goto	u2301
  9599     0A4C  2A4E               	goto	u2300
  9600     0A4D                     u2301:
  9601     0A4D  2A49               	goto	l168
  9602     0A4E                     u2300:
  9603     0A4E                     l2688:
  9604                           
  9605                           ;main.c: 79: TX1REG = txData;
  9606     0A4E  0140               	movlb	0	; select bank0
  9607     0A4F  0820               	movf	EUSART1_Write@txData,w
  9608     0A50  0142               	movlb	2	; select bank2
  9609     0A51  009A               	movwf	26	;volatile
  9610     0A52                     l171:
  9611     0A52  0008               	return
  9612     0A53                     __end_of_EUSART1_Write:
  9613                           
  9614                           	psect	intentry
  9615     0004                     __pintentry:	
  9616 ;; *************** function _INTERRUPT_InterruptManager *****************
  9617 ;; Defined at:
  9618 ;;		line 121 in file "main.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;		None
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;		None
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  1    wreg      void 
  9625 ;; Registers used:
  9626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9634 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9635 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9636 ;;Total ram usage:        4 bytes
  9637 ;; Hardware stack levels used: 1
  9638 ;; Hardware stack levels required when called: 1
  9639 ;; This function calls:
  9640 ;;		_i2c_slave_interrupt
  9641 ;;		i1_get_ticks
  9642 ;; This function is called by:
  9643 ;;		Interrupt level 1
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647     0004                     _INTERRUPT_InterruptManager:
  9648                           
  9649                           ;incstack = 0
  9650     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9651                           
  9652                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9653     0005  3180               	pagesel	$
  9654     0006                     i1l3004:
  9655                           
  9656                           ;main.c: 124: if (PIR0bits.TMR0IF) {
  9657     0006  014E               	movlb	14	; select bank14
  9658     0007  1E8C               	btfss	12,5	;volatile
  9659     0008  280A               	goto	u275_21
  9660     0009  280B               	goto	u275_20
  9661     000A                     u275_21:
  9662     000A  2839               	goto	i1l3018
  9663     000B                     u275_20:
  9664     000B                     i1l3006:
  9665                           
  9666                           ;main.c: 125: PIR0bits.TMR0IF = 0;
  9667     000B  128C               	bcf	12,5	;volatile
  9668     000C                     i1l3008:
  9669                           
  9670                           ;main.c: 127: ticks++;
  9671     000C  3001               	movlw	1
  9672     000D  0140               	movlb	0	; select bank0
  9673     000E  07E6               	addwf	_ticks,f	;volatile
  9674     000F  3000               	movlw	0
  9675     0010  3DE7               	addwfc	_ticks+1,f	;volatile
  9676     0011  3000               	movlw	0
  9677     0012  3DE8               	addwfc	_ticks+2,f	;volatile
  9678     0013  3000               	movlw	0
  9679     0014  3DE9               	addwfc	_ticks+3,f	;volatile
  9680     0015                     i1l3010:
  9681                           
  9682                           ;main.c: 130: if((uart_rx_states == BUSY);main.c: 131: &&;main.c: 132: (ticks - uart_rx_
      +                          ticks > 100))
  9683     0015  037A               	decf	_uart_rx_states,w	;volatile
  9684     0016  1D03               	btfss	3,2
  9685     0017  2819               	goto	u276_21
  9686     0018  281A               	goto	u276_20
  9687     0019                     u276_21:
  9688     0019  2839               	goto	i1l3018
  9689     001A                     u276_20:
  9690     001A                     i1l3012:
  9691     001A  086A               	movf	_uart_rx_ticks,w	;volatile
  9692     001B  0266               	subwf	_ticks,w	;volatile
  9693     001C  00F4               	movwf	??_INTERRUPT_InterruptManager
  9694     001D  086B               	movf	_uart_rx_ticks+1,w	;volatile
  9695     001E  3B67               	subwfb	_ticks+1,w	;volatile
  9696     001F  00F5               	movwf	??_INTERRUPT_InterruptManager+1
  9697     0020  086C               	movf	_uart_rx_ticks+2,w	;volatile
  9698     0021  3B68               	subwfb	_ticks+2,w	;volatile
  9699     0022  00F6               	movwf	??_INTERRUPT_InterruptManager+2
  9700     0023  086D               	movf	_uart_rx_ticks+3,w	;volatile
  9701     0024  3B69               	subwfb	_ticks+3,w	;volatile
  9702     0025  00F7               	movwf	??_INTERRUPT_InterruptManager+3
  9703     0026  0877               	movf	??_INTERRUPT_InterruptManager+3,w
  9704     0027  1D03               	btfss	3,2
  9705     0028  2835               	goto	u277_20
  9706     0029  0876               	movf	??_INTERRUPT_InterruptManager+2,w
  9707     002A  1D03               	btfss	3,2
  9708     002B  2835               	goto	u277_20
  9709     002C  0875               	movf	??_INTERRUPT_InterruptManager+1,w
  9710     002D  1D03               	btfss	3,2
  9711     002E  2835               	goto	u277_20
  9712     002F  3065               	movlw	101
  9713     0030  0274               	subwf	??_INTERRUPT_InterruptManager,w
  9714     0031  1C03               	btfss	3,0
  9715     0032  2834               	goto	u277_21
  9716     0033  2835               	goto	u277_20
  9717     0034                     u277_21:
  9718     0034  2839               	goto	i1l3018
  9719     0035                     u277_20:
  9720     0035                     i1l3014:
  9721                           
  9722                           ;main.c: 133: {;main.c: 134: uart_rx_states = IDLE;
  9723     0035  01FA               	clrf	_uart_rx_states	;volatile
  9724     0036                     i1l3016:
  9725                           
  9726                           ;main.c: 135: uart_rx_package_event = 1;
  9727     0036  3001               	movlw	1
  9728     0037  0141               	movlb	1	; select bank1
  9729     0038  00ED               	movwf	_uart_rx_package_event^(0+128)	;volatile
  9730     0039                     i1l3018:
  9731                           
  9732                           ;main.c: 136: };main.c: 138: };main.c: 141: if (PIR3bits.SSP1IF) {
  9733     0039  014E               	movlb	14	; select bank14
  9734     003A  1C0F               	btfss	15,0	;volatile
  9735     003B  283D               	goto	u278_21
  9736     003C  283E               	goto	u278_20
  9737     003D                     u278_21:
  9738     003D  2842               	goto	i1l3024
  9739     003E                     u278_20:
  9740     003E                     i1l3020:
  9741                           
  9742                           ;main.c: 142: PIR3bits.SSP1IF = 0;
  9743     003E  100F               	bcf	15,0	;volatile
  9744     003F                     i1l3022:
  9745                           
  9746                           ;main.c: 144: i2c_slave_interrupt();
  9747     003F  318C  2454  3180   	fcall	_i2c_slave_interrupt
  9748     0042                     i1l3024:
  9749                           
  9750                           ;main.c: 145: };main.c: 149: if (PIR3bits.RC1IF){
  9751     0042  014E               	movlb	14	; select bank14
  9752     0043  1E8F               	btfss	15,5	;volatile
  9753     0044  2846               	goto	u279_21
  9754     0045  2847               	goto	u279_20
  9755     0046                     u279_21:
  9756     0046  2864               	goto	i1l198
  9757     0047                     u279_20:
  9758     0047                     i1l3026:
  9759                           
  9760                           ;main.c: 153: uart_rx_ticks = get_ticks();
  9761     0047  318A  2200  3180   	fcall	i1_get_ticks
  9762     004A  0873               	movf	?i1_get_ticks+3,w
  9763     004B  0140               	movlb	0	; select bank0
  9764     004C  00ED               	movwf	_uart_rx_ticks+3	;volatile
  9765     004D  0872               	movf	?i1_get_ticks+2,w
  9766     004E  00EC               	movwf	_uart_rx_ticks+2	;volatile
  9767     004F  0871               	movf	?i1_get_ticks+1,w
  9768     0050  00EB               	movwf	_uart_rx_ticks+1	;volatile
  9769     0051  0870               	movf	?i1_get_ticks,w
  9770     0052  00EA               	movwf	_uart_rx_ticks	;volatile
  9771     0053                     i1l3028:
  9772                           
  9773                           ;main.c: 154: uart_rx_states = BUSY;
  9774     0053  3001               	movlw	1
  9775     0054  00FA               	movwf	_uart_rx_states	;volatile
  9776     0055                     i1l3030:
  9777                           
  9778                           ;main.c: 155: rxbuffer[rxbuffer_index] = RC1REG;
  9779     0055  087B               	movf	_rxbuffer_index,w
  9780     0056  3E20               	addlw	(low (_rxbuffer| (0+256)))& (0+255)
  9781     0057  0086               	movwf	6
  9782     0058  3001               	movlw	1	; select bank2/3
  9783     0059  0087               	movwf	7
  9784     005A  0142               	movlb	2	; select bank2
  9785     005B  0819               	movf	25,w	;volatile
  9786     005C  0081               	movwf	1
  9787     005D                     i1l3032:
  9788                           
  9789                           ;main.c: 156: rxbuffer_index++;
  9790     005D  3001               	movlw	1
  9791     005E  00F4               	movwf	??_INTERRUPT_InterruptManager
  9792     005F  0874               	movf	??_INTERRUPT_InterruptManager,w
  9793     0060  07FB               	addwf	_rxbuffer_index,f	;volatile
  9794     0061                     i1l3034:
  9795                           
  9796                           ;main.c: 157: rxbuffer_index = rxbuffer_index % 32;
  9797     0061  087B               	movf	_rxbuffer_index,w	;volatile
  9798     0062  391F               	andlw	31
  9799     0063  00FB               	movwf	_rxbuffer_index	;volatile
  9800     0064                     i1l198:
  9801     0064  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9802     0065  0009               	retfie
  9803     0066                     __end_of_INTERRUPT_InterruptManager:
  9804                           
  9805                           	psect	text34
  9806     0A00                     __ptext34:	
  9807 ;; *************** function i1_get_ticks *****************
  9808 ;; Defined at:
  9809 ;;		line 98 in file "main.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;		None
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;		None
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  4    0[COMMON] unsigned long 
  9816 ;; Registers used:
  9817 ;;		wreg
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;Total ram usage:        4 bytes
  9828 ;; Hardware stack levels used: 1
  9829 ;; This function calls:
  9830 ;;		Nothing
  9831 ;; This function is called by:
  9832 ;;		_INTERRUPT_InterruptManager
  9833 ;; This function uses a non-reentrant model
  9834 ;;
  9835                           
  9836     0A00                     i1_get_ticks:	
  9837                           ;psect for function i1_get_ticks
  9838                           
  9839     0A00                     i1l2980:	
  9840                           ;incstack = 0
  9841                           ; Regs used in i1_get_ticks: [wreg]
  9842                           
  9843                           
  9844                           ;main.c: 99: return ticks;
  9845     0A00  0140               	movlb	0	; select bank0
  9846     0A01  0869               	movf	_ticks+3,w	;volatile
  9847     0A02  00F3               	movwf	?i1_get_ticks+3
  9848     0A03  0868               	movf	_ticks+2,w	;volatile
  9849     0A04  00F2               	movwf	?i1_get_ticks+2
  9850     0A05  0867               	movf	_ticks+1,w	;volatile
  9851     0A06  00F1               	movwf	?i1_get_ticks+1
  9852     0A07  0866               	movf	_ticks,w	;volatile
  9853     0A08  00F0               	movwf	?i1_get_ticks
  9854     0A09                     i1l181:
  9855     0A09  0008               	return
  9856     0A0A                     __end_ofi1_get_ticks:
  9857                           
  9858                           	psect	text35
  9859     0C54                     __ptext35:	
  9860 ;; *************** function _i2c_slave_interrupt *****************
  9861 ;; Defined at:
  9862 ;;		line 65 in file "i2c_slave.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;		None
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;  value           1    3[COMMON] unsigned char 
  9867 ;;  isNack          1    2[COMMON] char 
  9868 ;;  isRead          1    1[COMMON] unsigned char 
  9869 ;; Return value:  Size  Location     Type
  9870 ;;                  1    wreg      void 
  9871 ;; Registers used:
  9872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9873 ;; Tracked objects:
  9874 ;;		On entry : 0/0
  9875 ;;		On exit  : 0/0
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9879 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;Total ram usage:        4 bytes
  9883 ;; Hardware stack levels used: 1
  9884 ;; This function calls:
  9885 ;;		Nothing
  9886 ;; This function is called by:
  9887 ;;		_INTERRUPT_InterruptManager
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891     0C54                     _i2c_slave_interrupt:	
  9892                           ;psect for function _i2c_slave_interrupt
  9893                           
  9894     0C54                     i1l2730:	
  9895                           ;incstack = 0
  9896                           ; Regs used in _i2c_slave_interrupt: [wreg-fsr1h+status,2+status,0]
  9897                           
  9898                           
  9899                           ;i2c_slave.c: 68: uint8_t isRead = SSP1STATbits.R_nW;
  9900     0C54  3000               	movlw	0
  9901     0C55  0143               	movlb	3	; select bank3
  9902     0C56  190F               	btfsc	15,2	;volatile
  9903     0C57  3001               	movlw	1
  9904     0C58  00F1               	movwf	i2c_slave_interrupt@isRead
  9905                           
  9906                           ;i2c_slave.c: 69: int8_t isNack = SSP1CON2bits.ACKSTAT;
  9907     0C59  3000               	movlw	0
  9908     0C5A  1B11               	btfsc	17,6	;volatile
  9909     0C5B  3001               	movlw	1
  9910     0C5C  00F2               	movwf	i2c_slave_interrupt@isNack
  9911     0C5D                     i1l2732:
  9912                           
  9913                           ;i2c_slave.c: 72: if (isNack) {
  9914     0C5D  0872               	movf	i2c_slave_interrupt@isNack,w
  9915     0C5E  1903               	btfsc	3,2
  9916     0C5F  2C61               	goto	u233_21
  9917     0C60  2C62               	goto	u233_20
  9918     0C61                     u233_21:
  9919     0C61  2C64               	goto	i1l2738
  9920     0C62                     u233_20:
  9921     0C62                     i1l2734:
  9922                           
  9923                           ;i2c_slave.c: 73: currentState = 0;
  9924     0C62  01F8               	clrf	_currentState
  9925     0C63  2CA3               	goto	i1l278
  9926     0C64                     i1l2738:
  9927                           
  9928                           ;i2c_slave.c: 75: };i2c_slave.c: 78: if (isRead) {
  9929     0C64  0871               	movf	i2c_slave_interrupt@isRead,w
  9930     0C65  1903               	btfsc	3,2
  9931     0C66  2C68               	goto	u234_21
  9932     0C67  2C69               	goto	u234_20
  9933     0C68                     u234_21:
  9934     0C68  2C7C               	goto	i1l2748
  9935     0C69                     u234_20:
  9936     0C69                     i1l2740:
  9937                           
  9938                           ;i2c_slave.c: 80: SSP1BUF = slaveData[currentRegister];
  9939     0C69  0879               	movf	_currentRegister,w
  9940     0C6A  3EA0               	addlw	(low (_slaveData| (0+256)))& (0+255)
  9941     0C6B  0086               	movwf	6
  9942     0C6C  3001               	movlw	1	; select bank3/4
  9943     0C6D  0087               	movwf	7
  9944     0C6E  0801               	movf	1,w
  9945     0C6F  008C               	movwf	12	;volatile
  9946     0C70                     i1l2742:
  9947                           
  9948                           ;i2c_slave.c: 82: currentRegister++;
  9949     0C70  3001               	movlw	1
  9950     0C71  00F0               	movwf	??_i2c_slave_interrupt
  9951     0C72  0870               	movf	??_i2c_slave_interrupt,w
  9952     0C73  07F9               	addwf	_currentRegister,f
  9953     0C74                     i1l2744:
  9954                           
  9955                           ;i2c_slave.c: 84: if (currentRegister >= 64u) {
  9956     0C74  3040               	movlw	64
  9957     0C75  0279               	subwf	_currentRegister,w
  9958     0C76  1C03               	skipc
  9959     0C77  2C79               	goto	u235_21
  9960     0C78  2C7A               	goto	u235_20
  9961     0C79                     u235_21:
  9962     0C79  2CA2               	goto	i1l281
  9963     0C7A                     u235_20:
  9964     0C7A                     i1l2746:
  9965                           
  9966                           ;i2c_slave.c: 85: currentRegister = 0;
  9967     0C7A  01F9               	clrf	_currentRegister
  9968     0C7B  2CA2               	goto	i1l281
  9969     0C7C                     i1l2748:
  9970                           
  9971                           ;i2c_slave.c: 90: uint8_t value = SSP1BUF;
  9972     0C7C  080C               	movf	12,w	;volatile
  9973     0C7D  00F3               	movwf	i2c_slave_interrupt@value
  9974                           
  9975                           ;i2c_slave.c: 92: switch (currentState) {
  9976     0C7E  2C97               	goto	i1l2762
  9977     0C7F                     i1l283:	
  9978                           ;i2c_slave.c: 94: case 0:
  9979                           
  9980                           
  9981                           ;i2c_slave.c: 95: currentState = 1;
  9982     0C7F  01F8               	clrf	_currentState
  9983     0C80  0AF8               	incf	_currentState,f
  9984                           
  9985                           ;i2c_slave.c: 96: break;
  9986     0C81  2CA2               	goto	i1l281
  9987     0C82                     i1l2750:
  9988                           
  9989                           ;i2c_slave.c: 99: currentRegister = value % 64u;
  9990     0C82  0873               	movf	i2c_slave_interrupt@value,w
  9991     0C83  393F               	andlw	63
  9992     0C84  00F9               	movwf	_currentRegister
  9993     0C85                     i1l2752:
  9994                           
  9995                           ;i2c_slave.c: 100: currentState = 2;
  9996     0C85  3002               	movlw	2
  9997     0C86  00F8               	movwf	_currentState
  9998                           
  9999                           ;i2c_slave.c: 101: break;
 10000     0C87  2CA2               	goto	i1l281
 10001     0C88                     i1l2754:
 10002                           
 10003                           ;i2c_slave.c: 105: if (currentRegister < 57) {
 10004     0C88  3039               	movlw	57
 10005     0C89  0279               	subwf	_currentRegister,w
 10006     0C8A  1803               	skipnc
 10007     0C8B  2C8D               	goto	u236_21
 10008     0C8C  2C8E               	goto	u236_20
 10009     0C8D                     u236_21:
 10010     0C8D  2C95               	goto	i1l2758
 10011     0C8E                     u236_20:
 10012     0C8E                     i1l2756:
 10013                           
 10014                           ;i2c_slave.c: 106: slaveData[currentRegister] = value;
 10015     0C8E  0879               	movf	_currentRegister,w
 10016     0C8F  3EA0               	addlw	(low (_slaveData| (0+256)))& (0+255)
 10017     0C90  0086               	movwf	6
 10018     0C91  3001               	movlw	1	; select bank3/4
 10019     0C92  0087               	movwf	7
 10020     0C93  0873               	movf	i2c_slave_interrupt@value,w
 10021     0C94  0081               	movwf	1
 10022     0C95                     i1l2758:
 10023                           
 10024                           ;i2c_slave.c: 107: };i2c_slave.c: 108: currentState = 0;
 10025     0C95  01F8               	clrf	_currentState
 10026                           
 10027                           ;i2c_slave.c: 109: break;
 10028     0C96  2CA2               	goto	i1l281
 10029     0C97                     i1l2762:
 10030     0C97  0878               	movf	_currentState,w
 10031                           
 10032                           ; Switch size 1, requested type "simple"
 10033                           ; Number of cases is 3, Range of values is 0 to 2
 10034                           ; switch strategies available:
 10035                           ; Name         Instructions Cycles
 10036                           ; simple_byte           10     6 (average)
 10037                           ; direct_byte           12     6 (fixed)
 10038                           ; jumptable            260     6 (fixed)
 10039                           ;	Chosen strategy is simple_byte
 10040     0C98  3A00               	xorlw	0	; case 0
 10041     0C99  1903               	skipnz
 10042     0C9A  2C7F               	goto	i1l283
 10043     0C9B  3A01               	xorlw	1	; case 1
 10044     0C9C  1903               	skipnz
 10045     0C9D  2C82               	goto	i1l2750
 10046     0C9E  3A03               	xorlw	3	; case 2
 10047     0C9F  1903               	skipnz
 10048     0CA0  2C88               	goto	i1l2754
 10049     0CA1  2CA2               	goto	i1l281
 10050     0CA2                     i1l281:
 10051                           
 10052                           ;i2c_slave.c: 114: };i2c_slave.c: 117: SSP1CON1bits.CKP = 1;
 10053     0CA2  1610               	bsf	16,4	;volatile
 10054     0CA3                     i1l278:
 10055     0CA3  0008               	return
 10056     0CA4                     __end_of_i2c_slave_interrupt:
 10057     007E                     btemp	set	126	;btemp
 10058     007E                     int$flags	set	126
 10059     007E                     wtemp0	set	126
 10060                           
 10061                           	psect	idloc
 10062                           
 10063                           ;Config register IDLOC0 @ 0x8000
 10064                           ;	unspecified, using default values
 10065     8000                     	org	32768
 10066     8000  3FFF               	dw	16383
 10067                           
 10068                           ;Config register IDLOC1 @ 0x8001
 10069                           ;	unspecified, using default values
 10070     8001                     	org	32769
 10071     8001  3FFF               	dw	16383
 10072                           
 10073                           ;Config register IDLOC2 @ 0x8002
 10074                           ;	unspecified, using default values
 10075     8002                     	org	32770
 10076     8002  3FFF               	dw	16383
 10077                           
 10078                           ;Config register IDLOC3 @ 0x8003
 10079                           ;	unspecified, using default values
 10080     8003                     	org	32771
 10081     8003  3FFF               	dw	16383
 10082                           
 10083                           	psect	config
 10084                           
 10085                           ;Config register CONFIG1 @ 0x8007
 10086                           ;	External Oscillator mode selection bits
 10087                           ;	FEXTOSC = OFF, Oscillator not enabled
 10088                           ;	Power-up default value for COSC bits
 10089                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 10090                           ;	Clock Out Enable bit
 10091                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 10092                           ;	Clock Switch Enable bit
 10093                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
 10094                           ;	Fail-Safe Clock Monitor Enable bit
 10095                           ;	FCMEN = OFF, FSCM timer disabled
 10096     8007                     	org	32775
 10097     8007  17EC               	dw	6124
 10098                           
 10099                           ;Config register CONFIG2 @ 0x8008
 10100                           ;	Master Clear Enable bit
 10101                           ;	MCLRE = OFF, MCLR pin function is port defined function
 10102                           ;	Power-up Timer Enable bit
 10103                           ;	PWRTS = OFF, PWRT disabled
 10104                           ;	Low-Power BOR enable bit
 10105                           ;	LPBOREN = OFF, ULPBOR disabled
 10106                           ;	Brown-out reset enable bits
 10107                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10108                           ;	Brown-out Reset Voltage Selection
 10109                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 10110                           ;	Zero-cross detect disable
 10111                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 10112                           ;	Peripheral Pin Select one-way control
 10113                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 10114                           ;	Stack Overflow/Underflow Reset Enable bit
 10115                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 10116     8008                     	org	32776
 10117     8008  3FFE               	dw	16382
 10118                           
 10119                           ;Config register CONFIG3 @ 0x8009
 10120                           ;	WDT Period Select bits
 10121                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10122                           ;	WDT operating mode
 10123                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 10124                           ;	WDT Window Select bits
 10125                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10126                           ;	WDT input clock selector
 10127                           ;	WDTCCS = SC, Software Control
 10128     8009                     	org	32777
 10129     8009  3F9F               	dw	16287
 10130                           
 10131                           ;Config register CONFIG4 @ 0x800A
 10132                           ;	Boot Block Size Selection bits
 10133                           ;	BBSIZE = BB512, 512 words boot block size
 10134                           ;	Boot Block Enable bit
 10135                           ;	BBEN = OFF, Boot Block disabled
 10136                           ;	SAF Enable bit
 10137                           ;	SAFEN = OFF, SAF disabled
 10138                           ;	Application Block Write Protection bit
 10139                           ;	WRTAPP = OFF, Application Block not write protected
 10140                           ;	Boot Block Write Protection bit
 10141                           ;	WRTB = OFF, Boot Block not write protected
 10142                           ;	Configuration Register Write Protection bit
 10143                           ;	WRTC = OFF, Configuration Register not write protected
 10144                           ;	Data EEPROM write protection bit
 10145                           ;	WRTD = OFF, Data EEPROM NOT write protected
 10146                           ;	Storage Area Flash Write Protection bit
 10147                           ;	WRTSAF = OFF, SAF not write protected
 10148                           ;	Low Voltage Programming Enable bit
 10149                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 10150     800A                     	org	32778
 10151     800A  3FFF               	dw	16383
 10152                           
 10153                           ;Config register CONFIG5 @ 0x800B
 10154                           ;	UserNVM Program memory code protection bit
 10155                           ;	CP = ON, UserNVM code protection enabled
 10156     800B                     	org	32779
 10157     800B  3FFE               	dw	16382

Data Sizes:
    Strings     171
    Constant    72
    Data        32
    BSS         118
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      13
    BANK0            80     70      78
    BANK1            80     69      78
    BANK2            80      0      64
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 4
		 -> main@payload_temp(BANK1[4]), main@payload(BANK1[4]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 4
		 -> main@temp(BANK1[4]), main@ph(BANK1[4]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(BANK0[3]), 

    printf$940	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[17]), STR_19(CODE[17]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_18(CODE[7]), printf@c(BANK0[1]), ?_printf(BANK0[2]), slaveData(BANK3[64]), 
		 -> STR_7(CODE[11]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[4]), 
		 -> STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[27]), STR_10(CODE[11]), 
		 -> STR_9(CODE[9]), STR_8(CODE[16]), STR_6(CODE[9]), STR_5(CODE[22]), 
		 -> STR_2(CODE[3]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    dump_buffer@buffer	PTR const void  size(1) Largest target is 64
		 -> slaveData(BANK3[64]), 

    dump_buffer@p	PTR const unsigned char  size(1) Largest target is 64
		 -> slaveData(BANK3[64]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_slave_interrupt
    _INTERRUPT_InterruptManager->i1_get_ticks

Critical Paths under _main in BANK0

    _set_device_serial_number_to_i2c_slave_memorymap->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _i2c_slave_set_register_with_lock->_i2c_slave_set_register
    _dump_memory_map->_dump_buffer
    _dump_buffer->_printf
    _printf->___llmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flmul->__Umul8_16

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0   14134
                                              0 BANK1     69    69      0
                      _EUSART1_Write
                  _SYSTEM_Initialize
                            ___flmul
                            ___fltol
                     _calculate_diff
                    _dump_memory_map
                          _get_ticks
                _get_ticks_with_lock
                     _i2c_slave_init
             _i2c_slave_set_register
                             _printf
_set_device_serial_number_to_i2c_sla
                          _tmr0_init
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_device_serial_number_to_i2c_slave_memorymap      7     7      0    2249
                                             27 BANK0      7     7      0
   _i2c_slave_set_register_with_lock
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                              15    11      4    1493
                                             12 BANK0     15    11      4
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isspace                                              2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isalpha                                              2     2      0     158
                                              2 BANK0      2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (4) _isupper                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_slave_set_register_with_lock                     2     1      1     544
                                              2 BANK0      2     1      1
             _i2c_slave_set_register
 ---------------------------------------------------------------------------------
 (3) _i2c_slave_set_register                               2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_ticks_with_lock                                  8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _get_ticks                                            4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _dump_memory_map                                      0     0      0    4078
                        _dump_buffer
 ---------------------------------------------------------------------------------
 (2) _dump_buffer                                         14    12      2    4078
                                             56 BANK0     14    12      2
                            _isprint
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              36    28      8    3364
                                             24 BANK0     32    24      8
                            ___lldiv
                            ___llmod
                             ___wmul
                          _get_ticks (ARG)
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                             14 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) _isprint                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _calculate_diff                                      20    12      8     460
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             35 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           4     4      0      91
                                              4 COMMON     4     4      0
                _i2c_slave_interrupt
                        i1_get_ticks
 ---------------------------------------------------------------------------------
 (6) i1_get_ticks                                          4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _i2c_slave_interrupt                                  4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Write
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   ___flmul
     __Umul8_16
   ___fltol
     ___flmul (ARG)
   _calculate_diff
   _dump_memory_map
     _dump_buffer
       _isprint
       _printf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _get_ticks (ARG)
         _isdigit (ARG)
         _putch (ARG)
   _get_ticks
   _get_ticks_with_lock
   _i2c_slave_init
   _i2c_slave_set_register
   _printf
   _set_device_serial_number_to_i2c_slave_memorymap
     _i2c_slave_set_register_with_lock
       _i2c_slave_set_register
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _tmr0_init
   _usart_init

 _INTERRUPT_InterruptManager (ROOT)
   _i2c_slave_interrupt
   i1_get_ticks

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     129       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     45      4E       8       97.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     129      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Apr 18 19:35:00 2024

                                                     l41 0A13  
                                                     l35 0A1D  
                                                     l38 09FF  
                                                     l86 07FA  
                                    ___wmul@multiplicand 0022  
                                    __Umul8_16@word_mpld 0026  
                                                    l213 016B  
                                                    l217 0176  
                                                    l162 0A55  
                                                    l306 0A6B  
                                                    l171 0A52  
                                                    l165 0A5E  
                                                    l181 0A31  
                                                    l261 0A3B  
                                                    l327 07D0  
                                                    l159 0A7B  
                                                    l168 0A49  
                                                    l184 0AC8  
                                                    l176 0C08  
                                                    l601 0D53  
                                                    l530 0487  
                                                    l506 03BC  
                                                    l258 0B52  
                                                    l507 03BE  
                                                    l291 0A27  
                                                    l267 0A46  
                                                    l508 03BF  
                                                    l189 0CF8  
                                                    l509 0461  
                                                    l535 04C4  
                                                    l561 05FF  
                                                    l565 0B1E  
                                                    l751 0DC4  
                                                    l567 0B32  
                                                    l495 036E  
                                                    l761 0DC4  
                                                    l579 0BCA  
                                                    l758 0DAF  
                                                    l960 0F7F  
                                                    l954 0FFF  
                                                    l787 0C53  
                                                    l973 0B86  
                                                    l966 0FF3  
                                                    l975 0B96  
                                                    _GIE 005F  
                                                    mcp0 01CD  
                                                    mcp1 0263  
                                                    _tmp 007C  
                                                    wreg 0009  
                                           ___flmul@aexp 003B  
                                           ___flmul@bexp 003C  
                                           ___flmul@sign 0036  
                                           ___flmul@temp 0041  
                                           ___flmul@prod 003D  
                                           ___fltol@exp1 004C  
                                                   l1023 0A8E  
                                                   l1018 0AA1  
                                                   l1034 0602  
                                                   l2200 0B2E  
                                                   l1064 0B12  
                                                   l1057 0709  
                                                   l2210 0D18  
                                                   l1074 0AB4  
                                                   l2220 0D3E  
                                                   l2212 0D1C  
                                                   l2204 0CF9  
                                                   l2300 03E8  
                                                   l3100 0180  
                                                   l1069 0AF5  
                                                   l2222 0D45  
                                                   l2214 0D23  
                                                   l2206 0D0A  
                                                   l2230 0C12  
                                                   l2310 040C  
                                                   l2302 03F2  
                                                   l1078 0ADC  
                                                   l3110 0216  
                                                   l3102 01BB  
                                                   l2216 0D35  
                                                   l2208 0D0D  
                                                   l2224 0D4B  
                                                   l2240 0C3E  
                                                   l2232 0C15  
                                                   l2400 05DB  
                                                   l2320 042F  
                                                   l2312 0414  
                                                   l2304 03F7  
                                                   l3120 02A7  
                                                   l3112 0251  
                                                   l3104 01CE  
                                                   l3040 00A9  
                                                   l2410 0A7F  
                                                   l2218 0D3D  
                                                   l2242 0C45  
                                                   l2234 0C20  
                                                   l2402 05DF  
                                                   l2330 0465  
                                                   l2322 0433  
                                                   l2314 0419  
                                                   l2306 03FA  
                                                   l2250 0AA5  
                                                   l3130 02BD  
                                                   l3122 02B0  
                                                   l3114 0264  
                                                   l3106 01FD  
                                                   l3050 00CA  
                                                   l3042 00AB  
                                                   l2500 07F3  
                                                   l2412 0A85  
                                                   l2236 0C24  
                                                   l2244 0C4B  
                                                   l2228 0C09  
                                                   l2180 0A92  
                                                   l2332 0470  
                                                   l2324 0438  
                                                   l2316 0426  
                                                   l2308 03FE  
                                                   l2404 05EC  
                                                   l2260 035B  
                                                   l2420 0B97  
                                                   l2252 0AAB  
                                                   l3140 02D8  
                                                   l3132 02C5  
                                                   l3124 02B3  
                                                   l3116 0293  
                                                   l3108 020D  
                                                   l3060 00E3  
                                                   l3052 00CD  
                                                   l3044 00AD  
                                                   l3036 009D  
                                                   l2510 09FB  
                                                   l2502 07F5  
                                                   l2414 0A8B  
                                                   l2238 0C36  
                                                   l2190 0B13  
                                                   l2182 0A98  
                                                   l2174 0A55  
                                                   l2342 0490  
                                                   l2334 0475  
                                                   l2318 042B  
                                                   l2262 035F  
                                                   l2406 0A34  
                                                   l2430 0BC2  
                                                   l2422 0BA0  
                                                   l2254 0AB1  
                                                   l3150 0304  
                                                   l3142 02DA  
                                                   l3134 02CD  
                                                   l3126 02B4  
                                                   l3118 02A5  
                                                   l3070 0123  
                                                   l3062 0114  
                                                   l3054 00CE  
                                                   l3046 00B5  
                                                   l3038 00A6  
                                                   l2512 09FE  
                                                   l2504 07F8  
                                                   l2416 0A8D  
                                                   l2408 0A7E  
                                                   l2192 0B16  
                                                   l2184 0A9E  
                                                   l2176 0A5A  
                                                   l2352 04CD  
                                                   l2336 0482  
                                                   l2360 0501  
                                                   l2280 039C  
                                                   l2328 043D  
                                                   l2272 0373  
                                                   l2264 0365  
                                                   l2600 0A3F  
                                                   l2424 0BA4  
                                                   l2256 0AB3  
                                                   l2248 0AA4  
                                                   l2440 0AED  
                                                   l2520 0615  
                                                   l3144 02DC  
                                                   l3136 02D5  
                                                   l3128 02B5  
                                                   l3152 0308  
                                                   l3080 0157  
                                                   l3072 013B  
                                                   l3064 011D  
                                                   l3056 00CF  
                                                   l3048 00C1  
                                                   l2506 09F7  
                                                   l2194 0B1A  
                                                   l2186 0AA0  
                                                   l2178 0A91  
                                                   l2370 0525  
                                                   l2346 04B9  
                                                   l2362 050A  
                                                   l2338 0489  
                                                   l2290 03CC  
                                                   l2282 03AB  
                                                   l2274 037C  
                                                   l2266 036A  
                                                   l2610 071C  
                                                   l2602 0A45  
                                                   l2426 0BAC  
                                                   l2450 0AFA  
                                                   l2442 0AF3  
                                                   l2434 0ADF  
                                                   l2530 062C  
                                                   l2522 061E  
                                                   l2514 0602  
                                                   l3154 031B  
                                                   l3146 02DF  
                                                   l3138 02D6  
                                                   l3090 0165  
                                                   l3074 0144  
                                                   l3066 011F  
                                                   l3058 00D0  
                                                   l2508 09FA  
                                                   l2196 0B23  
                                                   l2380 0545  
                                                   l2372 052B  
                                                   l2364 0515  
                                                   l2356 04F6  
                                                   l2348 04C6  
                                                   l2292 03D2  
                                                   l2284 03AF  
                                                   l2276 0388  
                                                   l2268 036F  
                                                   l2620 0748  
                                                   l2604 070C  
                                                   l2428 0BB3  
                                                   l2452 0B00  
                                                   l2444 0AF4  
                                                   l2436 0AE1  
                                                   l2540 063E  
                                                   l2532 0631  
                                                   l2524 061F  
                                                   l2516 0608  
                                                   l2700 0BEA  
                                                   l3156 034C  
                                                   l3148 02FB  
                                                   l3076 0147  
                                                   l3068 0121  
                                                   l3092 016D  
                                                   l2198 0B28  
                                                   l2390 05BB  
                                                   l2374 052F  
                                                   l2382 0550  
                                                   l2366 051E  
                                                   l2294 03D6  
                                                   l2286 03C1  
                                                   l2278 038B  
                                                   l2622 074F  
                                                   l2606 070E  
                                                   l2454 0B06  
                                                   l2438 0AE7  
                                                   l2462 0ACB  
                                                   l2550 065A  
                                                   l2542 0643  
                                                   l2526 0625  
                                                   l2518 060C  
                                                   l2702 0BF6  
                                                   l3158 0355  
                                                   l3094 0173  
                                                   l3086 0158  
                                                   l3078 0148  
                                                   l2480 07D8  
                                                   l2472 0A0A  
                                                   l2720 0CA4  
                                                   l2392 05C0  
                                                   l2384 0558  
                                                   l2376 053B  
                                                   l2368 0521  
                                                   l2296 03D9  
                                                   l2288 03C8  
                                                   l2640 078F  
                                                   l2624 0754  
                                                   l2616 071F  
                                                   l2608 0711  
                                                   l2712 0AB5  
                                                   l2456 0B0E  
                                                   l2448 0AF8  
                                                   l2464 0AD1  
                                                   l2560 0674  
                                                   l2552 0660  
                                                   l2544 0647  
                                                   l2528 0627  
                                                   l2704 0BFD  
                                                   l3096 0174  
                                                   l3088 0160  
                                                   l2490 07E7  
                                                   l2482 07DB  
                                                   l2474 07D1  
                                                   l2810 0D67  
                                                   l2722 0CB7  
                                                   l2394 05C4  
                                                   l2386 0592  
                                                   l2378 0541  
                                                   l2298 03DD  
                                                   l2650 07C1  
                                                   l2642 07A1  
                                                   l2634 0767  
                                                   l2626 075D  
                                                   l2618 072F  
                                                   l2714 0AB6  
                                                   l2458 0B10  
                                                   l2466 0AD7  
                                                   l2570 0693  
                                                   l2554 0664  
                                                   l2546 064D  
                                                   l2562 0678  
                                                   l2538 0638  
                                                   l2706 0C02  
                                                   l3098 0177  
                                                   l2492 07E9  
                                                   l2484 07E1  
                                                   l2476 07D4  
                                                   l2660 0B82  
                                                   l2900 0E9D  
                                                   l2820 0D87  
                                                   l2812 0D78  
                                                   l2804 0D54  
                                                   l2724 0CCC  
                                                   l2388 05B7  
                                                   l2636 0777  
                                                   l2644 07AC  
                                                   l2628 0764  
                                                   l2652 07C6  
                                                   l2708 0A28  
                                                   l2716 0ABF  
                                                   l2468 0ADB  
                                                   l2580 06D6  
                                                   l2572 069C  
                                                   l2564 067E  
                                                   l2556 0669  
                                                   l2548 0654  
                                                   l2494 07EB  
                                                   l2486 07E3  
                                                   l2478 07D6  
                                                   l2670 0A17  
                                                   l2662 0B8D  
                                                   l2654 0B75  
                                                   l2910 0ED3  
                                                   l2902 0EA8  
                                                   l2814 0D79  
                                                   l2806 0D5E  
                                                   l2726 0CF0  
                                                   l2398 05D2  
                                                   l2646 07B1  
                                                   l2638 0789  
                                                   l2590 06F1  
                                                   l2582 06DB  
                                                   l2574 069F  
                                                   l2566 0682  
                                                   l2558 066E  
                                                   l2496 07EE  
                                                   l2488 07E5  
                                                   l2672 0A1A  
                                                   l2664 0B92  
                                                   l2656 0B77  
                                                   l2920 0F1E  
                                                   l2912 0EDA  
                                                   l2904 0EAF  
                                                   l2840 0DC5  
                                                   l2816 0D81  
                                                   l2648 07BA  
                                                   l2584 06E0  
                                                   l2568 068A  
                                                   l2680 0A75  
                                                   l2498 07F1  
                                                   l2658 0B7E  
                                                   l2930 0F53  
                                                   l2922 0F35  
                                                   l2914 0EEC  
                                                   l2906 0EBA  
                                                   l2850 0DD5  
                                                   l2842 0DC9  
                                                   l2834 0DA6  
                                                   l2826 0D8F  
                                                   l2818 0D83  
                                                   l2594 0701  
                                                   l2586 06E6  
                                                   l2578 06AB  
                                                   l2690 0BCB  
                                                   l2770 0A67  
                                                   l2682 0A77  
                                                   l2674 0A6C  
                                                   l2668 0A14  
                                                   l2940 0F64  
                                                   l2932 0F54  
                                                   l2924 0F3C  
                                                   l2916 0EF7  
                                                   l2908 0EC1  
                                                   l2860 0DF1  
                                                   l2852 0DDA  
                                                   l2844 0DCB  
                                                   l2836 0DB4  
                                                   l2828 0D9F  
                                                   l2780 0B39  
                                                   l2588 06EC  
                                                   l2772 0A68  
                                                   l2764 0A5F  
                                                   l2684 0A79  
                                                   l2676 0A6F  
                                                   l2686 0A49  
                                                   l2950 0F89  
                                                   l2942 0F68  
                                                   l2934 0F5B  
                                                   l2926 0F48  
                                                   l2918 0F09  
                                                   l2870 0E02  
                                                   l2862 0DF3  
                                                   l2854 0DE2  
                                                   l2846 0DCF  
                                                   l2838 0DB9  
                                                   l2782 0B3B  
                                                   l2774 0B33  
                                                   l2598 0A3E  
                                                   l2766 0A64  
                                                   l2678 0A74  
                                                   l2688 0A4E  
                                                   l2960 0FBE  
                                                   l2952 0F91  
                                                   l2944 0F7C  
                                                   l2928 0F4F  
                                                   l2936 0F5F  
                                                   l2880 0E1E  
                                                   l2872 0E0A  
                                                   l2864 0DF7  
                                                   l2856 0DE4  
                                                   l2848 0DD0  
                                                   l2792 0B42  
                                                   l2784 0B3D  
                                                   l2776 0B35  
                                                   l2696 0BCD  
                                                   l2768 0A65  
                                                   l2970 0FEC  
                                                   l2962 0FC8  
                                                   l2954 0F95  
                                                   l2938 0F63  
                                                   l2890 0E57  
                                                   l2874 0E0C  
                                                   l2866 0DF8  
                                                   l2858 0DEC  
                                                   l2794 0B48  
                                                   l2786 0B3F  
                                                   l2778 0B37  
                                                   l2698 0BE9  
                                                   l2972 0FF0  
                                                   l2964 0FD6  
                                                   l2956 0FAD  
                                                   l2948 0F84  
                                                   l2892 0E64  
                                                   l2884 0E27  
                                                   l2876 0E14  
                                                   l2868 0DFD  
                                                   l2796 0B4C  
                                                   l2974 0FF1  
                                                   l2966 0FDF  
                                                   l2958 0FB1  
                                                   l2894 0E7C  
                                                   l2886 0E32  
                                                   l2878 0E19  
                                                   l2798 0A1E  
                                                   l2976 0FF7  
                                                   l2968 0FE1  
                                                   l2896 0E89  
                                                   l2888 0E3F  
                                                   l2898 0E96  
                                        ?_calculate_diff 0020  
                                                   STR_1 10E6  
                                                   STR_3 10B6  
                                                   STR_4 10B6  
                                                   STR_5 1063  
                                                   STR_6 10C1  
                                                   STR_7 10B6  
                                                   STR_8 109B  
                                                   STR_9 10CA  
                                                   u2000 0AF3  
                                                   u2001 0AF2  
                                                   u2010 0B00  
                                                   u2011 0AFF  
                                                   u2020 0B06  
                                                   u2100 064D  
                                                   u2021 0B05  
                                                   u2101 064C  
                                                   u2030 0B0E  
                                                   u2110 0654  
                                                   u2031 0B0D  
                                                   u2111 0653  
                                                   u2040 0AD1  
                                                   u2200 06F1  
                                                   u2120 065A  
                                                   u2041 0AD0  
                                                   u2201 06F0  
                                                   u2121 0659  
                                                   u2210 072F  
                                                   u2050 0AD7  
                                                   u2130 0660  
                                                   u2211 072E  
                                                   u2051 0AD6  
                                                   u2131 065F  
                                                   u2300 0A4E  
                                                   u2220 075D  
                                                   u2140 0674  
                                                   u2060 0615  
                                                   u2301 0A4D  
                                                   u2221 075C  
                                                   u2141 0673  
                                                   u2061 0613  
                                                   _LATA 0018  
                                                   u2230 0777  
                                                   u2150 067E  
                                                   u2070 0625  
                                                   u2310 0C08  
                                                   u2231 0776  
                                                   u2215 072B  
                                                   u2151 067D  
                                                   u2071 0624  
                                                   u2311 0C07  
                                                   _LATC 001A  
                                                   u2400 0D87  
                                                   u2320 0CB7  
                                                   u1600 0C12  
                                                   u1520 0B2E  
                                                   u2240 0789  
                                                   u2160 068A  
                                                   u2080 0637  
                                                   u2401 0D86  
                                                   u2321 0CB6  
                                                   u1601 0C11  
                                                   u1521 0B2D  
                                                   u1505 0B1F  
                                                   u2241 0788  
                                                   u2161 0689  
                                                   u2081 0636  
                                                   u2410 0D8E  
                                                   u1530 0D0A  
                                                   u2250 07BA  
                                                   u2170 069C  
                                                   u2090 063E  
                                                   u2411 0D8D  
                                                   u1531 0D09  
                                                   u1515 0B24  
                                                   u2251 07B9  
                                                   u2235 0773  
                                                   u2171 069B  
                                                   u2091 063D  
                                                   u2500 0DDA  
                                                   u1620 0C24  
                                                   u1460 0A5A  
                                                   u1700 03BB  
                                                   u2260 07D0  
                                                   u2180 06AA  
                                                   u2501 0DD9  
                                                   u2325 0CB3  
                                                   u1621 0C23  
                                                   u1461 0A59  
                                                   u1701 03BA  
                                                   u2261 07CF  
                                                   u2181 06A9  
                                                   u2270 0B82  
                                                   u2510 0DF7  
                                                   u2430 0D9E  
                                                   u1550 0D1C  
                                                   u1630 0C36  
                                                   u1470 0A98  
                                                   u1710 03D2  
                                                   u2190 06E6  
                                                   u2271 0B81  
                                                   u2511 0DF6  
                                                   u2431 0D9D  
                                                   u1551 0D1B  
                                                   u1631 0C35  
                                                   u1615 0C16  
                                                   u1471 0A97  
                                                   u1711 03D1  
                                                   u2191 06E5  
                                                   u2520 0DFD  
                                                   u2440 0DA5  
                                                   u1480 0A9E  
                                                   u1800 04CC  
                                                   u1720 03E8  
                                                   u2521 0DFC  
                                                   u2441 0DA4  
                                                   u2425 0D90  
                                                   u1545 0D0E  
                                                   u1481 0A9D  
                                                   u1801 04CB  
                                                   u1721 03E7  
                                                   u2265 07CC  
                                                   u2185 06A6  
                                                   u2290 0B92  
                                                   u2530 0E02  
                                                   u1570 0D35  
                                                   u1650 0C4B  
                                                   u1490 0B1A  
                                                   u1810 04F5  
                                                   u1730 03F2  
                                                   u2370 0B52  
                                                   u2291 0B91  
                                                   u2531 0E01  
                                                   u1571 0D34  
                                                   u1651 0C4A  
                                                   u1635 0C32  
                                                   u1491 0B19  
                                                   u1811 04F4  
                                                   u1731 03F1  
                                                   u2371 0B51  
                                                   u2700 0FA3  
                                                   u2620 0F53  
                                                   u2540 0E19  
                                                   u2460 0DB4  
                                                   u2380 0D5E  
                                                   u1900 05EC  
                                                   u1820 0500  
                                                   u1740 040B  
                                                   u1660 0AAB  
                                                   u2285 0B87  
                                                   u2621 0F52  
                                                   u2605 0F36  
                                                   u2541 0E18  
                                                   u2461 0DB3  
                                                   u2381 0D5D  
                                                   u1565 0D1D  
                                                   u1645 0C3F  
                                                   u1901 05EB  
                                                   u1821 04FF  
                                                   u1741 040A  
                                                   u1661 0AAA  
                                                   u2710 0FBE  
                                                   u2550 0E1E  
                                                   u2470 0DB9  
                                                   u2390 0D74  
                                                   u1590 0D4B  
                                                   u1910 05FF  
                                                   u1830 0515  
                                                   u1750 0425  
                                                   u1670 0AB1  
                                                   u2711 0FBD  
                                                   u2615 0F49  
                                                   u2551 0E1D  
                                                   u2471 0DB8  
                                                   u2455 0DA7  
                                                   u1591 0D4A  
                                                   u1575 0D31  
                                                   u1911 05FE  
                                                   u1831 0514  
                                                   u1815 04F1  
                                                   u1751 0424  
                                                   u1735 03EE  
                                                   u1671 0AB0  
                                                   u2720 0FD6  
                                                   u2640 0F63  
                                                   u2480 0DCF  
                                                   u1920 0A85  
                                                   u1840 0525  
                                                   u1760 0465  
                                                   u1680 0365  
                                                   u2800 0114  
                                                   u2721 0FD5  
                                                   u2705 0F9F  
                                                   u2641 0F62  
                                                   u2481 0DCE  
                                                   u1921 0A84  
                                                   u1585 0D3F  
                                                   u1841 0524  
                                                   u1761 0464  
                                                   u1681 0364  
                                                   u2801 0113  
                                                   u2730 0FF0  
                                                   u2650 0F68  
                                                   u2490 0DD5  
                                                   u1930 0A8B  
                                                   u1850 052B  
                                                   u1770 048F  
                                                   u1690 0388  
                                                   u2810 0153  
                                                   u2731 0FEF  
                                                   u2715 0FBA  
                                                   u2651 0F67  
                                                   u2635 0F55  
                                                   u2491 0DD4  
                                                   u2395 0D70  
                                                   u1931 0A8A  
                                                   u1851 052A  
                                                   u1835 0511  
                                                   u1771 048E  
                                                   u1691 0387  
                                                   u2660 0F7C  
                                                   u2580 0F14  
                                                   u1860 053A  
                                                   u1780 04B8  
                                                   u1940 0BA4  
                                                   u2900 034C  
                                                   u2820 016B  
                                                   u2725 0FD2  
                                                   u2661 0F7B  
                                                   u2565 0E97  
                                                   u1861 0539  
                                                   u1781 04B7  
                                                   u1941 0BA3  
                                                   u2901 034B  
                                                   u2821 016A  
                                                   u2670 0F83  
                                                   u2590 0F2B  
                                                   u1870 0541  
                                                   u1790 04C3  
                                                   u2830 0173  
                                                   u2671 0F82  
                                                   u2575 0EC2  
                                                   u1871 0540  
                                                   u1791 04C2  
                                                   u2831 0172  
                                                   u2680 0F89  
                                                   u1880 0550  
                                                   u2840 0193  
                                                   u2681 0F88  
                                                   u2585 0F10  
                                                   u1881 054F  
                                                   u1785 04B4  
                                                   u2690 0F95  
                                                   u1890 05BB  
                                                   u1970 0BC2  
                                                   u2850 01A1  
                                                   u2691 0F94  
                                                   u2595 0F27  
                                                   u1891 05BA  
                                                   u1971 0BC1  
                                                   u1955 0BAD  
                                                   u1980 0AE7  
                                                   _PMD0 0796  
                                                   u1965 0BB4  
                                                   u1981 0AE6  
                                                   u2845 018F  
                                                   u2917 00C5  
                                                   _PMD1 0797  
                                                   u1990 0AED  
                                                   u2870 0229  
                                                   _PMD2 0798  
                                                   u1991 0AEC  
                                                   u2855 019D  
                                                   u2927 013F  
                                                   _PMD3 0799  
                                                   u2880 0237  
                                                   _PMD4 079A  
                                                   u2937 02AB  
                                                   _PMD5 079B  
                                                   _PMD6 079C  
                                                   u2947 02FF  
                                                   u2875 0225  
                                                   _PMD7 079D  
                                                   u2885 0233  
                                                   _WPUA 1F39  
                                                   _WPUC 1F4F  
                                          _EUSART1_Write 0A47  
                                            main@payload 00CC  
                                                   _main 009D  
                                                   mcp0b 01BF  
                                                   mcp1b 0255  
                                                   mcp0z 01CE  
                                                   mcp1z 0264  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                                                   start 0066  
                                            i1_get_ticks 0A00  
                                           ?_dump_buffer 0058  
                          __end_of_OSCILLATOR_Initialize 0A00  
                                          ___fltol@sign1 004B  
                                                  ?_main 0070  
                                                  STR_10 10AB  
                                                  STR_11 1020  
                                                  STR_12 10DA  
                                                  STR_20 108A  
                                                  STR_13 10E0  
                                                  STR_14 10EC  
                                                  STR_15 10ED  
                                                  STR_16 10F0  
                                                  STR_17 1038  
                                                  STR_18 10D3  
                                                  STR_19 1079  
                                        __end_of___flmul 1000  
                                        __end_of___fltol 0DC5  
                                        __end_of___lldiv 0D54  
                                        __end_of___llmod 0C54  
                                                  i1l181 0A09  
                                                  i1l281 0CA2  
                                                  i1l283 0C7F  
                                                  i1l278 0CA3  
                                                  i1l198 0064  
                                                  _OSCEN 0891  
                                                  u286m0 01C8  
                                                  u286m1 01CE  
                                                  u289m0 025E  
                                                  u289m1 0264  
                                                  _TMR0H 059D  
                                                  _TMR0L 059C  
                                                  _TRISA 0012  
                                                  _TRISC 0014  
                                    ___lmul@multiplicand 0024  
                                __end_of_dump_memory_map 0A28  
                                        __end_of_dpowers 1063  
                                        __end_of_isalpha 0B13  
                                        __end_of_isdigit 0AA2  
                                                  _ticks 0066  
                                                  _putch 0A53  
                                                  main@i 00DE  
                                        __end_of_isspace 0AF6  
                                         ?_EUSART1_Write 0070  
                                        __end_of_isprint 0A8F  
                                        __end_of_isupper 0AB5  
                                                  status 0003  
                                                  wtemp0 007E  
                                        __end_of_toupper 0ADD  
                                        __initialization 0068  
                                           __end_of_main 035B  
                            ?_INTERRUPT_InterruptManager 0070  
                                                 ??_main 00A0  
                              i2c_slave_interrupt@isNack 0072  
                              i2c_slave_interrupt@isRead 0071  
                                         _i2c_slave_init 0B33  
                                       ___llmod@dividend 0032  
                                                 _ANSELA 1F38  
                                                 ?_putch 0070  
                                                 _ANSELC 1F4E  
                                                 _T0CON0 059E  
                                                 _T0CON1 059F  
                                                 _RC1REG 0119  
                                                 _RC0PPS 1F20  
                                                 _RC1PPS 1F21  
                                                 _RA5PPS 1F15  
                                                 _RC1STA 011D  
                                                 _RC3PPS 1F23  
                                                 i1l3010 0015  
                                                 _RC5PPS 1F25  
                                                 i1l3020 003E  
                                                 i1l3012 001A  
                                                 i1l3004 0006  
                                                 i1l3030 0055  
                                                 i1l3022 003F  
                                                 i1l3014 0035  
                                                 i1l3006 000B  
                                                 i1l3032 005D  
                                                 i1l3024 0042  
                                                 i1l3016 0036  
                                                 i1l3008 000C  
                                                 _ODCONA 1F3A  
                                                 i1l3034 0061  
                                                 i1l3026 0047  
                                                 i1l3018 0039  
                                                 _ODCONC 1F50  
                                                 i1l3028 0053  
                                                 i1l2730 0C54  
                                                 i1l2740 0C69  
                                                 i1l2732 0C5D  
                                                 i1l2750 0C82  
                                                 i1l2742 0C70  
                                                 i1l2734 0C62  
                                                 i1l2752 0C85  
                                                 i1l2744 0C74  
                                                 i1l2754 0C88  
                                                 i1l2762 0C97  
                                                 i1l2746 0C7A  
                                                 i1l2738 0C64  
                                                 i1l2756 0C8E  
                                                 i1l2748 0C7C  
                                                 i1l2758 0C95  
                                                 i1l2980 0A00  
                                                 _INLVLA 1F3C  
                                                 _INLVLC 1F52  
                                                 u233_20 0C62  
                                                 u233_21 0C61  
                                                 u234_20 0C69  
                                                 u234_21 0C68  
                                                 u235_20 0C7A  
                                                 u235_21 0C79  
                                                 u236_20 0C8E  
                                                 u236_21 0C8D  
                                                 u275_20 000B  
                                                 u275_21 000A  
                                                 u276_20 001A  
                                                 u276_21 0019  
                                    _i2c_slave_interrupt 0C54  
                                                 u277_20 0035  
                                                 u277_21 0034  
                                                 u278_20 003E  
                                                 u278_21 003D  
                                                 u279_20 0047  
                                                 u279_21 0046  
                                                 _OSCFRQ 0893  
                                                 _TX1REG 011A  
                                                 _TX1STA 011E  
                                                 ___lmul 0B97  
                                                 ___wmul 0B13  
                                              ??___flmul 0031  
                                              ??___fltol 0047  
                                              ??___lldiv 0028  
                                              ??___llmod 0036  
                                   ?_i2c_slave_interrupt 0070  
   set_device_serial_number_to_i2c_slave_memorymap@value 003D  
                                                 _printf 035B  
                                        _currentRegister 0079  
                                 __end_of_i2c_slave_init 0B53  
                                                 main@ph 00D4  
                                                 _strtol 0600  
                                         _PMD_Initialize 0A0A  
                                              ??_isalpha 0022  
                                              ??_isdigit 0020  
                                              ??_isspace 0020  
                                              ??_isprint 0020  
                                              ??_isupper 0020  
                            i2c_slave_set_register@value 0020  
                                       ?_dump_memory_map 0070  
                                        ??_EUSART1_Write 0020  
                                              ??_toupper 0020  
                                      _SYSTEM_Initialize 0A14  
                                __end_of__initialization 0099  
                                     ?_SYSTEM_Initialize 0070  
                                             ___fltol@f1 0043  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK2 0B53  
                                    ??_SYSTEM_Initialize 0020  
                                  ??_i2c_slave_interrupt 0070  
                                          __end_of_putch 0A5F  
                                 __end_of_PMD_Initialize 0A14  
                                        ?_i2c_slave_init 0070  
                                       ??_calculate_diff 0028  
                              __end_of_SYSTEM_Initialize 0A1E  
                                                ??_putch 0020  
                                             __pbssBANK0 0066  
                                             __pbssBANK1 00E5  
                                             __pbssBANK2 0120  
                                             __pbssBANK3 01A0  
                                         _rxbuffer_index 007B  
                                      __end_of__Umul8_16 0B97  
                                             __pmaintext 009D  
                                           ?i1_get_ticks 0070  
                                                ?___lmul 0020  
                                                ?___wmul 0020  
                                             __pintentry 0004  
                                    _get_ticks_with_lock 0AB5  
                                         ___lmul@product 0028  
                                                ?_printf 0038  
                                        ?_PMD_Initialize 0070  
                                                ?_strtol 002C  
                                                _SP1BRGH 011C  
                                                _SP1BRGL 011B  
                               ??_i2c_slave_set_register 0021  
                                                _OSCCON1 088D  
                                                _OSCCON3 088F  
                                           dump_buffer@i 0062  
                                           dump_buffer@j 0064  
                                           dump_buffer@p 0061  
                                                _OSCTUNE 0892  
                                                _SSP1ADD 018D  
                                                _SLRCONA 1F3B  
                                                _SLRCONC 1F51  
                                                _SSP1BUF 018C  
                                                _SSP1MSK 018E  
                                   ?_get_ticks_with_lock 0020  
                                      __end_of_get_ticks 0A32  
                                                ___flmul 0DC5  
                                                ___fltol 0D54  
                                                ___lldiv 0CF9  
                                                ___llmod 0C09  
                                                __ptext1 0A6C  
                                                __ptext2 0A5F  
                                                __ptext3 0BCB  
                                                __ptext4 0600  
                                                __ptext5 0AC9  
                                                __ptext6 0ADD  
                                                __ptext7 0AF6  
                                                __ptext8 0AA2  
                                                __ptext9 0B97  
  set_device_serial_number_to_i2c_slave_memorymap@buffer 003E  
                                      __end_of_hexpowers 1020  
                                                _dpowers 103B  
                                  _OSCILLATOR_Initialize 09F7  
                                                _isalpha 0AF6  
                                                _isdigit 0A8F  
                  i2c_slave_set_register@registerAddress 0021  
                               ??_PIN_MANAGER_Initialize 0020  
                                                _isspace 0ADD  
                                                _isprint 0A7C  
                                                _isupper 0AA2  
                                                main@ph2 00DF  
                                  ??_get_ticks_with_lock 0024  
                                                clrloop0 09EC  
                                                main@now 00E1  
                                                _toupper 0AC9  
                                   end_of_initialization 0099  
                                      __end_of_tmr0_init 0A6C  
       set_device_serial_number_to_i2c_slave_memorymap@i 0041  
                                                init_ram 09F1  
                                                initloop 09F2  
                               calculate_diff@prev_ticks 0024  
                                        ___lldiv@divisor 0020  
                                        ___lldiv@counter 002D  
                                                printf@c 0057  
                                                printf@f 0038  
                                             main@F10508 0140  
                                             _printf$940 0046  
                                                strtol@a 0035  
                                                strtol@c 003A  
                                                strtol@s 0039  
                                           strtol@endptr 002C  
                                    EUSART1_Write@txData 0020  
                                            ___flmul@grs 0037  
                                            printf@width 0055  
                                             _usart_init 0A6C  
                                       ??_i2c_slave_init 0020  
                                         __end_of___lmul 0BCB  
                                         __end_of___wmul 0B33  
                                 ?_OSCILLATOR_Initialize 0070  
                                         __end_of_printf 0600  
                                         __end_of_strtol 070A  
                                    start_initialization 0068  
                                  __end_of_EUSART1_Write 0A53  
                                        ___llmod@divisor 002E  
                                        ___llmod@counter 0037  
                  i2c_slave_set_register_with_lock@value 0022  
                            __end_of_i2c_slave_interrupt 0CA4  
                                 _i2c_slave_set_register 0A32  
                                       ??_PMD_Initialize 0020  
                                               ??___lmul 0028  
                                          ??_dump_buffer 005A  
                                               ??___wmul 0024  
                                              __Umul8_16 0B73  
                                            __pdataBANK2 0140  
                                               ??_printf 0040  
                                               ??_strtol 0030  
                                              ___flmul@a 002D  
                                              ___flmul@b 0029  
                                            __pbssCOMMON 0078  
                                              ___latbits 0002  
                                          __pcstackBANK0 0020  
                                          __pcstackBANK1 00A0  
                                           _isalpha$1257 0022  
                                           _isdigit$1223 0020  
                                           _currentState 0078  
                                       main@payload_temp 00D0  
                                            ?_usart_init 0070  
                                 _PIN_MANAGER_Initialize 07D1  
                                               ?___flmul 0029  
                                               ?___fltol 0043  
                                               ?___lldiv 0020  
                                               ?___llmod 002E  
                                             ?__Umul8_16 0020  
                           ??_INTERRUPT_InterruptManager 0074  
                                              _get_ticks 0A28  
                                               _BAUD1CON 011F  
                                    __end_of_dump_buffer 07D1  
                                               ?_isalpha 0070  
                                               ?_isdigit 0070  
                                               ?_isspace 0070  
                                               ?_isprint 0070  
                                               ?_isupper 0070  
                                      dump_buffer@buffer 0060  
                                              _hexpowers 1000  
                                               ?_toupper 0070  
                                         ___wmul@product 0024  
                                               _LATCbits 001A  
                                              clear_ram0 09EB  
                                              _tmr0_init 0A5F  
                                         _uart_rx_states 007A  
                                               _PIE0bits 0716  
                                        i2c_slave_init@i 0021  
                                               _PIE3bits 0719  
                                               _PIR0bits 070C  
                                               _PIR3bits 070F  
                                              _slaveData 01A0  
                                               _RX1DTPPS 1ECB  
                                               _SSP1CON1 0190  
                                               _SSP1CON2 0191  
                                      ??_dump_memory_map 0066  
                                               _SSP1STAT 018F  
                                             ?_get_ticks 0020  
                                      ___wmul@multiplier 0020  
                            __end_of_get_ticks_with_lock 0AC9  
                                             printf@flag 0054  
                                             printf@prec 0049  
                                              main@temp2 00DC  
                                              main@txbuf 00AC  
                                           _isspace$1260 0020  
                                      ___lmul@multiplier 0020  
                               i2c_slave_interrupt@value 0073  
                                           _isprint$1226 0020  
                                             ?_tmr0_init 0070  
                                            _dump_buffer 070A  
                                ??_OSCILLATOR_Initialize 0020  
                                            ??__Umul8_16 0022  
                                           _isupper$1263 0020  
                                               __ptext10 0A3C  
                                               __ptext11 0A32  
                                               __ptext20 0B13  
                                               __ptext12 0B33  
                                               __ptext21 0C09  
                                               __ptext13 0AB5  
                                               __ptext30 07D1  
                                               __ptext22 0CF9  
                                               __ptext14 0A28  
                                               __ptext31 09F7  
                                               __ptext23 0A7C  
                                               __ptext15 0A1E  
                                               __ptext32 0A47  
                                               __ptext24 0CA4  
                                               __ptext16 070A  
                                               __ptext25 0D54  
                                               __ptext17 035B  
                                               __ptext34 0A00  
                                               __ptext26 0DC5  
                                               __ptext18 0A53  
                                               __ptext35 0C54  
                                               __ptext27 0B73  
                                               __ptext19 0A8F  
                                               __ptext28 0A14  
                                               __ptext29 0A0A  
                                           _SSP1CON1bits 0190  
                                           _SSP1CON2bits 0191  
                              get_ticks_with_lock@result 0024  
                                ?_i2c_slave_set_register 0020  
                                          _uart_rx_ticks 006A  
__end_of_set_device_serial_number_to_i2c_slave_memorymap 0C09  
      ??_set_device_serial_number_to_i2c_slave_memorymap 003B  
       ?_set_device_serial_number_to_i2c_slave_memorymap 0070  
        _set_device_serial_number_to_i2c_slave_memorymap 0BCB  
                                  _uart_rx_package_event 00ED  
                                          ??i1_get_ticks 0074  
                                               int$flags 007E  
                                             strtol@base 002D  
                                             strtol@sign 0034  
                     __end_of_INTERRUPT_InterruptManager 0066  
                             _INTERRUPT_InterruptManager 0004  
                                              printf@idx 0048  
                                              printf@len 0051  
                                               _rxbuffer 0120  
                                              printf@val 004D  
                                           _SSP1STATbits 018F  
                                               main@temp 00D8  
                                            ??_get_ticks 0024  
        i2c_slave_set_register_with_lock@registerAddress 0023  
                                              putch@data 0020  
                                             _INTCONbits 000B  
                                         __pstringtext10 10CA  
                                         __pstringtext11 10D3  
                                         __pstringtext12 10DA  
                                         __pstringtext13 10E0  
                                         __pstringtext14 10E6  
                                         __pstringtext15 10EC  
                                         __pstringtext16 10F0  
                                         __pstringtext17 0000  
                                               isalpha@c 0023  
                                        main@prev_ticks1 00E9  
                                        main@prev_ticks2 00E5  
                                               isdigit@c 0021  
                                               intlevel1 0000  
                                        _dump_buffer$746 005E  
                         __end_of_i2c_slave_set_register 0A3C  
                                         _calculate_diff 0CA4  
                                               isspace@c 0021  
                                       ___lldiv@dividend 0024  
                                ?_PIN_MANAGER_Initialize 0070  
                                               isprint@c 0021  
                                           ??_usart_init 0020  
                                            ??_tmr0_init 0020  
                                               isupper@c 0021  
                                        dump_buffer@size 0058  
                                               printf@ap 0053  
                                               printf@cp 004B  
                                    __end_ofi1_get_ticks 0A0A  
                                          __pstringtext1 103B  
                                          __pstringtext2 1000  
                                          __pstringtext3 1063  
                                          __pstringtext4 1079  
                                          __pstringtext5 108A  
                                          __pstringtext6 109B  
                                          __pstringtext7 10AB  
                                          __pstringtext8 10B6  
                                          __pstringtext9 10C1  
               __end_of_i2c_slave_set_register_with_lock 0A47  
                     ??_i2c_slave_set_register_with_lock 0023  
                      ?_i2c_slave_set_register_with_lock 0022  
                       _i2c_slave_set_register_with_lock 0A3C  
                                 __Umul8_16@multiplicand 0020  
                                             _SSP1DATPPS 1EC6  
                                             _SSP1CLKPPS 1EC5  
                                       ___lldiv@quotient 0029  
                                               toupper@c 0021  
                                     __end_of_usart_init 0A7C  
                                 __end_of_calculate_diff 0CF9  
                         __end_of_PIN_MANAGER_Initialize 07FB  
                                        _dump_memory_map 0A1E  
                                   __Umul8_16@multiplier 0028  
                                     calculate_diff@diff 0030  
                                      calculate_diff@now 0020  
                                      __Umul8_16@product 0024  
