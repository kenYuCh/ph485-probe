

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Apr 21 12:52:45 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18425
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK5,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK6,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    36                           	psect	stringtext29,global,class=STRCODE,delta=2,noexec
    37                           	psect	stringtext30,global,class=STRCODE,delta=2,noexec
    38                           	psect	stringtext31,global,class=STRCODE,delta=2,noexec
    39                           	psect	cinit,global,class=CODE,merge=1,delta=2
    40                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    41                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    42                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    43                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    44                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    45                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    46                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    47                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    48                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,noexec
    49                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,noexec
    50                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    51                           	psect	inittext,global,class=CODE,delta=2
    52                           	psect	clrtext,global,class=CODE,delta=2
    53                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    54                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    55                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    56                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    57                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    58                           	psect	text1,local,class=CODE,merge=1,delta=2
    59                           	psect	text2,local,class=CODE,merge=1,delta=2
    60                           	psect	text3,local,class=CODE,merge=1,delta=2
    61                           	psect	text4,local,class=CODE,merge=1,delta=2
    62                           	psect	text5,local,class=CODE,merge=1,delta=2
    63                           	psect	text6,local,class=CODE,merge=1,delta=2
    64                           	psect	text7,local,class=CODE,merge=1,delta=2
    65                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    68                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    70                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text14,local,class=CODE,merge=1,delta=2
    72                           	psect	text15,local,class=CODE,merge=1,delta=2
    73                           	psect	text16,local,class=CODE,merge=1,delta=2
    74                           	psect	text17,local,class=CODE,merge=1,delta=2
    75                           	psect	text18,local,class=CODE,merge=1,delta=2
    76                           	psect	text19,local,class=CODE,merge=1,delta=2
    77                           	psect	text20,local,class=CODE,merge=1,delta=2
    78                           	psect	text21,local,class=CODE,merge=1,delta=2
    79                           	psect	text22,local,class=CODE,merge=1,delta=2
    80                           	psect	text23,local,class=CODE,merge=1,delta=2
    81                           	psect	text24,local,class=CODE,merge=1,delta=2
    82                           	psect	text25,local,class=CODE,merge=1,delta=2
    83                           	psect	text26,local,class=CODE,merge=1,delta=2
    84                           	psect	text27,local,class=CODE,merge=1,delta=2
    85                           	psect	text28,local,class=CODE,merge=1,delta=2
    86                           	psect	text29,local,class=CODE,merge=1,delta=2
    87                           	psect	text30,local,class=CODE,merge=1,delta=2
    88                           	psect	text31,local,class=CODE,merge=1,delta=2
    89                           	psect	text32,local,class=CODE,merge=1,delta=2
    90                           	psect	text33,local,class=CODE,merge=1,delta=2
    91                           	psect	text34,local,class=CODE,merge=1,delta=2
    92                           	psect	text35,local,class=CODE,merge=1,delta=2
    93                           	psect	text36,local,class=CODE,merge=1,delta=2
    94                           	psect	text37,local,class=CODE,merge=1,delta=2
    95                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text41,local,class=CODE,merge=1,delta=2
    99                           	psect	text42,local,class=CODE,merge=1,delta=2
   100                           	psect	text43,local,class=CODE,merge=1,delta=2
   101                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text45,local,class=CODE,merge=1,delta=2
   103                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
   104                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
   105                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	text51,local,class=CODE,merge=1,delta=2,group=3
   109                           	psect	text52,local,class=CODE,merge=1,delta=2
   110                           	psect	text53,local,class=CODE,merge=1,delta=2
   111                           	psect	text54,local,class=CODE,merge=1,delta=2
   112                           	psect	text55,local,class=CODE,merge=1,delta=2
   113                           	psect	text56,local,class=CODE,merge=1,delta=2
   114                           	psect	text57,local,class=CODE,merge=1,delta=2
   115                           	psect	text58,local,class=CODE,merge=1,delta=2
   116                           	psect	text59,local,class=CODE,merge=1,delta=2
   117                           	psect	intentry,global,class=CODE,delta=2
   118                           	psect	text61,local,class=CODE,merge=1,delta=2
   119                           	psect	text62,local,class=CODE,merge=1,delta=2
   120                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
   121                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   122                           	dabs	1,0x7E,2
   123     0000                     
   124                           ; Version 2.40
   125                           ; Generated 04/07/2022 GMT
   126                           ; 
   127                           ; Copyright © 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution. Publication is not required when
   141                           ;        this file is used in an embedded application.
   142                           ; 
   143                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   144                           ;        software without specific prior written permission.
   145                           ; 
   146                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   147                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   148                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   149                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   150                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   151                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   152                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   153                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   154                           ; 
   155                           ; 
   156                           ; Code-generator required, PIC16F18425 Definitions
   157                           ; 
   158                           ; SFR Addresses
   159     0000                     	;# 
   160     0001                     	;# 
   161     0002                     	;# 
   162     0003                     	;# 
   163     0004                     	;# 
   164     0005                     	;# 
   165     0006                     	;# 
   166     0007                     	;# 
   167     0008                     	;# 
   168     0009                     	;# 
   169     000A                     	;# 
   170     000B                     	;# 
   171     000C                     	;# 
   172     000E                     	;# 
   173     0012                     	;# 
   174     0014                     	;# 
   175     0018                     	;# 
   176     001A                     	;# 
   177     008C                     	;# 
   178     008C                     	;# 
   179     008D                     	;# 
   180     008E                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0090                     	;# 
   185     0091                     	;# 
   186     0092                     	;# 
   187     0092                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0094                     	;# 
   191     0095                     	;# 
   192     0096                     	;# 
   193     0096                     	;# 
   194     0097                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009A                     	;# 
   198     009B                     	;# 
   199     009B                     	;# 
   200     009C                     	;# 
   201     009D                     	;# 
   202     009D                     	;# 
   203     009E                     	;# 
   204     009F                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     010F                     	;# 
   211     0110                     	;# 
   212     0111                     	;# 
   213     0112                     	;# 
   214     0113                     	;# 
   215     0114                     	;# 
   216     0115                     	;# 
   217     0116                     	;# 
   218     0117                     	;# 
   219     0118                     	;# 
   220     0119                     	;# 
   221     0119                     	;# 
   222     0119                     	;# 
   223     011A                     	;# 
   224     011A                     	;# 
   225     011A                     	;# 
   226     011B                     	;# 
   227     011B                     	;# 
   228     011B                     	;# 
   229     011B                     	;# 
   230     011B                     	;# 
   231     011C                     	;# 
   232     011C                     	;# 
   233     011C                     	;# 
   234     011D                     	;# 
   235     011D                     	;# 
   236     011D                     	;# 
   237     011E                     	;# 
   238     011E                     	;# 
   239     011E                     	;# 
   240     011F                     	;# 
   241     011F                     	;# 
   242     011F                     	;# 
   243     011F                     	;# 
   244     011F                     	;# 
   245     018C                     	;# 
   246     018D                     	;# 
   247     018E                     	;# 
   248     018F                     	;# 
   249     0190                     	;# 
   250     0191                     	;# 
   251     0192                     	;# 
   252     0196                     	;# 
   253     0197                     	;# 
   254     0198                     	;# 
   255     0199                     	;# 
   256     019A                     	;# 
   257     019B                     	;# 
   258     019C                     	;# 
   259     020C                     	;# 
   260     020D                     	;# 
   261     020E                     	;# 
   262     020E                     	;# 
   263     020F                     	;# 
   264     020F                     	;# 
   265     0210                     	;# 
   266     0210                     	;# 
   267     0211                     	;# 
   268     0211                     	;# 
   269     0212                     	;# 
   270     0213                     	;# 
   271     0214                     	;# 
   272     0214                     	;# 
   273     0215                     	;# 
   274     0215                     	;# 
   275     0216                     	;# 
   276     0216                     	;# 
   277     0217                     	;# 
   278     0217                     	;# 
   279     0218                     	;# 
   280     0219                     	;# 
   281     021A                     	;# 
   282     021A                     	;# 
   283     021B                     	;# 
   284     021B                     	;# 
   285     021C                     	;# 
   286     021C                     	;# 
   287     021D                     	;# 
   288     021D                     	;# 
   289     021E                     	;# 
   290     021F                     	;# 
   291     028C                     	;# 
   292     028C                     	;# 
   293     028D                     	;# 
   294     028D                     	;# 
   295     028E                     	;# 
   296     028F                     	;# 
   297     0290                     	;# 
   298     0291                     	;# 
   299     0292                     	;# 
   300     0292                     	;# 
   301     0293                     	;# 
   302     0293                     	;# 
   303     0294                     	;# 
   304     0295                     	;# 
   305     0296                     	;# 
   306     0297                     	;# 
   307     0298                     	;# 
   308     0298                     	;# 
   309     0299                     	;# 
   310     0299                     	;# 
   311     029A                     	;# 
   312     029B                     	;# 
   313     029C                     	;# 
   314     029D                     	;# 
   315     029F                     	;# 
   316     030C                     	;# 
   317     030C                     	;# 
   318     030D                     	;# 
   319     030E                     	;# 
   320     030F                     	;# 
   321     0310                     	;# 
   322     0310                     	;# 
   323     0311                     	;# 
   324     0312                     	;# 
   325     0313                     	;# 
   326     0314                     	;# 
   327     0314                     	;# 
   328     0315                     	;# 
   329     0316                     	;# 
   330     0317                     	;# 
   331     0318                     	;# 
   332     0318                     	;# 
   333     0319                     	;# 
   334     031A                     	;# 
   335     031B                     	;# 
   336     038C                     	;# 
   337     038C                     	;# 
   338     038D                     	;# 
   339     038E                     	;# 
   340     0390                     	;# 
   341     0390                     	;# 
   342     0391                     	;# 
   343     0392                     	;# 
   344     048C                     	;# 
   345     048C                     	;# 
   346     048D                     	;# 
   347     048E                     	;# 
   348     048F                     	;# 
   349     048F                     	;# 
   350     0490                     	;# 
   351     0491                     	;# 
   352     0492                     	;# 
   353     0492                     	;# 
   354     0493                     	;# 
   355     0494                     	;# 
   356     0495                     	;# 
   357     0495                     	;# 
   358     0496                     	;# 
   359     0497                     	;# 
   360     0498                     	;# 
   361     0499                     	;# 
   362     049A                     	;# 
   363     049B                     	;# 
   364     049C                     	;# 
   365     049D                     	;# 
   366     058C                     	;# 
   367     058C                     	;# 
   368     058D                     	;# 
   369     058E                     	;# 
   370     058F                     	;# 
   371     058F                     	;# 
   372     0590                     	;# 
   373     0591                     	;# 
   374     0592                     	;# 
   375     0593                     	;# 
   376     059C                     	;# 
   377     059C                     	;# 
   378     059D                     	;# 
   379     059D                     	;# 
   380     059E                     	;# 
   381     059F                     	;# 
   382     060C                     	;# 
   383     060C                     	;# 
   384     060D                     	;# 
   385     060D                     	;# 
   386     060E                     	;# 
   387     060F                     	;# 
   388     0610                     	;# 
   389     0611                     	;# 
   390     0612                     	;# 
   391     0613                     	;# 
   392     0614                     	;# 
   393     0616                     	;# 
   394     0616                     	;# 
   395     0617                     	;# 
   396     0617                     	;# 
   397     0618                     	;# 
   398     0619                     	;# 
   399     061A                     	;# 
   400     061B                     	;# 
   401     061C                     	;# 
   402     061D                     	;# 
   403     061E                     	;# 
   404     070C                     	;# 
   405     070D                     	;# 
   406     070E                     	;# 
   407     070F                     	;# 
   408     0710                     	;# 
   409     0711                     	;# 
   410     0712                     	;# 
   411     0713                     	;# 
   412     0714                     	;# 
   413     0716                     	;# 
   414     0717                     	;# 
   415     0718                     	;# 
   416     0719                     	;# 
   417     071A                     	;# 
   418     071B                     	;# 
   419     071C                     	;# 
   420     071D                     	;# 
   421     071E                     	;# 
   422     0796                     	;# 
   423     0797                     	;# 
   424     0798                     	;# 
   425     0799                     	;# 
   426     079A                     	;# 
   427     079B                     	;# 
   428     079C                     	;# 
   429     079D                     	;# 
   430     080C                     	;# 
   431     080D                     	;# 
   432     080E                     	;# 
   433     080F                     	;# 
   434     0810                     	;# 
   435     0811                     	;# 
   436     0812                     	;# 
   437     0813                     	;# 
   438     0814                     	;# 
   439     081A                     	;# 
   440     081A                     	;# 
   441     081B                     	;# 
   442     081C                     	;# 
   443     081C                     	;# 
   444     081D                     	;# 
   445     081E                     	;# 
   446     081F                     	;# 
   447     088C                     	;# 
   448     088D                     	;# 
   449     088E                     	;# 
   450     088F                     	;# 
   451     0890                     	;# 
   452     0891                     	;# 
   453     0892                     	;# 
   454     0893                     	;# 
   455     0895                     	;# 
   456     0896                     	;# 
   457     0897                     	;# 
   458     0898                     	;# 
   459     0899                     	;# 
   460     089A                     	;# 
   461     089B                     	;# 
   462     090C                     	;# 
   463     090E                     	;# 
   464     090F                     	;# 
   465     091F                     	;# 
   466     098F                     	;# 
   467     098F                     	;# 
   468     0990                     	;# 
   469     0991                     	;# 
   470     0992                     	;# 
   471     0993                     	;# 
   472     0994                     	;# 
   473     0995                     	;# 
   474     0996                     	;# 
   475     0997                     	;# 
   476     1E0F                     	;# 
   477     1E10                     	;# 
   478     1E11                     	;# 
   479     1E12                     	;# 
   480     1E13                     	;# 
   481     1E14                     	;# 
   482     1E15                     	;# 
   483     1E16                     	;# 
   484     1E17                     	;# 
   485     1E18                     	;# 
   486     1E19                     	;# 
   487     1E1A                     	;# 
   488     1E1B                     	;# 
   489     1E1C                     	;# 
   490     1E1D                     	;# 
   491     1E1E                     	;# 
   492     1E1F                     	;# 
   493     1E20                     	;# 
   494     1E21                     	;# 
   495     1E22                     	;# 
   496     1E23                     	;# 
   497     1E24                     	;# 
   498     1E25                     	;# 
   499     1E26                     	;# 
   500     1E27                     	;# 
   501     1E28                     	;# 
   502     1E29                     	;# 
   503     1E2A                     	;# 
   504     1E2B                     	;# 
   505     1E2C                     	;# 
   506     1E2D                     	;# 
   507     1E2E                     	;# 
   508     1E2F                     	;# 
   509     1E30                     	;# 
   510     1E31                     	;# 
   511     1E32                     	;# 
   512     1E33                     	;# 
   513     1E34                     	;# 
   514     1E35                     	;# 
   515     1E36                     	;# 
   516     1E37                     	;# 
   517     1E8F                     	;# 
   518     1E90                     	;# 
   519     1E91                     	;# 
   520     1E92                     	;# 
   521     1E93                     	;# 
   522     1E94                     	;# 
   523     1E95                     	;# 
   524     1E96                     	;# 
   525     1E97                     	;# 
   526     1E9C                     	;# 
   527     1E9D                     	;# 
   528     1E9E                     	;# 
   529     1EA1                     	;# 
   530     1EA2                     	;# 
   531     1EA3                     	;# 
   532     1EA4                     	;# 
   533     1EA9                     	;# 
   534     1EAA                     	;# 
   535     1EB1                     	;# 
   536     1EB2                     	;# 
   537     1EB8                     	;# 
   538     1EB9                     	;# 
   539     1EBA                     	;# 
   540     1EBB                     	;# 
   541     1EBC                     	;# 
   542     1EBD                     	;# 
   543     1EBE                     	;# 
   544     1EC3                     	;# 
   545     1EC5                     	;# 
   546     1EC6                     	;# 
   547     1EC7                     	;# 
   548     1EC8                     	;# 
   549     1EC9                     	;# 
   550     1ECA                     	;# 
   551     1ECB                     	;# 
   552     1ECC                     	;# 
   553     1F10                     	;# 
   554     1F11                     	;# 
   555     1F12                     	;# 
   556     1F14                     	;# 
   557     1F15                     	;# 
   558     1F20                     	;# 
   559     1F21                     	;# 
   560     1F22                     	;# 
   561     1F23                     	;# 
   562     1F24                     	;# 
   563     1F25                     	;# 
   564     1F38                     	;# 
   565     1F39                     	;# 
   566     1F3A                     	;# 
   567     1F3B                     	;# 
   568     1F3C                     	;# 
   569     1F3D                     	;# 
   570     1F3E                     	;# 
   571     1F3F                     	;# 
   572     1F4E                     	;# 
   573     1F4F                     	;# 
   574     1F50                     	;# 
   575     1F51                     	;# 
   576     1F52                     	;# 
   577     1F53                     	;# 
   578     1F54                     	;# 
   579     1F55                     	;# 
   580     1FE4                     	;# 
   581     1FE5                     	;# 
   582     1FE6                     	;# 
   583     1FE7                     	;# 
   584     1FE8                     	;# 
   585     1FE8                     	;# 
   586     1FE9                     	;# 
   587     1FEA                     	;# 
   588     1FEB                     	;# 
   589     1FED                     	;# 
   590     1FEE                     	;# 
   591     1FEF                     	;# 
   592     0000                     	;# 
   593     0001                     	;# 
   594     0002                     	;# 
   595     0003                     	;# 
   596     0004                     	;# 
   597     0005                     	;# 
   598     0006                     	;# 
   599     0007                     	;# 
   600     0008                     	;# 
   601     0009                     	;# 
   602     000A                     	;# 
   603     000B                     	;# 
   604     000C                     	;# 
   605     000E                     	;# 
   606     0012                     	;# 
   607     0014                     	;# 
   608     0018                     	;# 
   609     001A                     	;# 
   610     008C                     	;# 
   611     008C                     	;# 
   612     008D                     	;# 
   613     008E                     	;# 
   614     008E                     	;# 
   615     008F                     	;# 
   616     0090                     	;# 
   617     0090                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0092                     	;# 
   621     0093                     	;# 
   622     0094                     	;# 
   623     0094                     	;# 
   624     0095                     	;# 
   625     0096                     	;# 
   626     0096                     	;# 
   627     0097                     	;# 
   628     0098                     	;# 
   629     0099                     	;# 
   630     009A                     	;# 
   631     009B                     	;# 
   632     009B                     	;# 
   633     009C                     	;# 
   634     009D                     	;# 
   635     009D                     	;# 
   636     009E                     	;# 
   637     009F                     	;# 
   638     010C                     	;# 
   639     010C                     	;# 
   640     010D                     	;# 
   641     010E                     	;# 
   642     010F                     	;# 
   643     010F                     	;# 
   644     0110                     	;# 
   645     0111                     	;# 
   646     0112                     	;# 
   647     0113                     	;# 
   648     0114                     	;# 
   649     0115                     	;# 
   650     0116                     	;# 
   651     0117                     	;# 
   652     0118                     	;# 
   653     0119                     	;# 
   654     0119                     	;# 
   655     0119                     	;# 
   656     011A                     	;# 
   657     011A                     	;# 
   658     011A                     	;# 
   659     011B                     	;# 
   660     011B                     	;# 
   661     011B                     	;# 
   662     011B                     	;# 
   663     011B                     	;# 
   664     011C                     	;# 
   665     011C                     	;# 
   666     011C                     	;# 
   667     011D                     	;# 
   668     011D                     	;# 
   669     011D                     	;# 
   670     011E                     	;# 
   671     011E                     	;# 
   672     011E                     	;# 
   673     011F                     	;# 
   674     011F                     	;# 
   675     011F                     	;# 
   676     011F                     	;# 
   677     011F                     	;# 
   678     018C                     	;# 
   679     018D                     	;# 
   680     018E                     	;# 
   681     018F                     	;# 
   682     0190                     	;# 
   683     0191                     	;# 
   684     0192                     	;# 
   685     0196                     	;# 
   686     0197                     	;# 
   687     0198                     	;# 
   688     0199                     	;# 
   689     019A                     	;# 
   690     019B                     	;# 
   691     019C                     	;# 
   692     020C                     	;# 
   693     020D                     	;# 
   694     020E                     	;# 
   695     020E                     	;# 
   696     020F                     	;# 
   697     020F                     	;# 
   698     0210                     	;# 
   699     0210                     	;# 
   700     0211                     	;# 
   701     0211                     	;# 
   702     0212                     	;# 
   703     0213                     	;# 
   704     0214                     	;# 
   705     0214                     	;# 
   706     0215                     	;# 
   707     0215                     	;# 
   708     0216                     	;# 
   709     0216                     	;# 
   710     0217                     	;# 
   711     0217                     	;# 
   712     0218                     	;# 
   713     0219                     	;# 
   714     021A                     	;# 
   715     021A                     	;# 
   716     021B                     	;# 
   717     021B                     	;# 
   718     021C                     	;# 
   719     021C                     	;# 
   720     021D                     	;# 
   721     021D                     	;# 
   722     021E                     	;# 
   723     021F                     	;# 
   724     028C                     	;# 
   725     028C                     	;# 
   726     028D                     	;# 
   727     028D                     	;# 
   728     028E                     	;# 
   729     028F                     	;# 
   730     0290                     	;# 
   731     0291                     	;# 
   732     0292                     	;# 
   733     0292                     	;# 
   734     0293                     	;# 
   735     0293                     	;# 
   736     0294                     	;# 
   737     0295                     	;# 
   738     0296                     	;# 
   739     0297                     	;# 
   740     0298                     	;# 
   741     0298                     	;# 
   742     0299                     	;# 
   743     0299                     	;# 
   744     029A                     	;# 
   745     029B                     	;# 
   746     029C                     	;# 
   747     029D                     	;# 
   748     029F                     	;# 
   749     030C                     	;# 
   750     030C                     	;# 
   751     030D                     	;# 
   752     030E                     	;# 
   753     030F                     	;# 
   754     0310                     	;# 
   755     0310                     	;# 
   756     0311                     	;# 
   757     0312                     	;# 
   758     0313                     	;# 
   759     0314                     	;# 
   760     0314                     	;# 
   761     0315                     	;# 
   762     0316                     	;# 
   763     0317                     	;# 
   764     0318                     	;# 
   765     0318                     	;# 
   766     0319                     	;# 
   767     031A                     	;# 
   768     031B                     	;# 
   769     038C                     	;# 
   770     038C                     	;# 
   771     038D                     	;# 
   772     038E                     	;# 
   773     0390                     	;# 
   774     0390                     	;# 
   775     0391                     	;# 
   776     0392                     	;# 
   777     048C                     	;# 
   778     048C                     	;# 
   779     048D                     	;# 
   780     048E                     	;# 
   781     048F                     	;# 
   782     048F                     	;# 
   783     0490                     	;# 
   784     0491                     	;# 
   785     0492                     	;# 
   786     0492                     	;# 
   787     0493                     	;# 
   788     0494                     	;# 
   789     0495                     	;# 
   790     0495                     	;# 
   791     0496                     	;# 
   792     0497                     	;# 
   793     0498                     	;# 
   794     0499                     	;# 
   795     049A                     	;# 
   796     049B                     	;# 
   797     049C                     	;# 
   798     049D                     	;# 
   799     058C                     	;# 
   800     058C                     	;# 
   801     058D                     	;# 
   802     058E                     	;# 
   803     058F                     	;# 
   804     058F                     	;# 
   805     0590                     	;# 
   806     0591                     	;# 
   807     0592                     	;# 
   808     0593                     	;# 
   809     059C                     	;# 
   810     059C                     	;# 
   811     059D                     	;# 
   812     059D                     	;# 
   813     059E                     	;# 
   814     059F                     	;# 
   815     060C                     	;# 
   816     060C                     	;# 
   817     060D                     	;# 
   818     060D                     	;# 
   819     060E                     	;# 
   820     060F                     	;# 
   821     0610                     	;# 
   822     0611                     	;# 
   823     0612                     	;# 
   824     0613                     	;# 
   825     0614                     	;# 
   826     0616                     	;# 
   827     0616                     	;# 
   828     0617                     	;# 
   829     0617                     	;# 
   830     0618                     	;# 
   831     0619                     	;# 
   832     061A                     	;# 
   833     061B                     	;# 
   834     061C                     	;# 
   835     061D                     	;# 
   836     061E                     	;# 
   837     070C                     	;# 
   838     070D                     	;# 
   839     070E                     	;# 
   840     070F                     	;# 
   841     0710                     	;# 
   842     0711                     	;# 
   843     0712                     	;# 
   844     0713                     	;# 
   845     0714                     	;# 
   846     0716                     	;# 
   847     0717                     	;# 
   848     0718                     	;# 
   849     0719                     	;# 
   850     071A                     	;# 
   851     071B                     	;# 
   852     071C                     	;# 
   853     071D                     	;# 
   854     071E                     	;# 
   855     0796                     	;# 
   856     0797                     	;# 
   857     0798                     	;# 
   858     0799                     	;# 
   859     079A                     	;# 
   860     079B                     	;# 
   861     079C                     	;# 
   862     079D                     	;# 
   863     080C                     	;# 
   864     080D                     	;# 
   865     080E                     	;# 
   866     080F                     	;# 
   867     0810                     	;# 
   868     0811                     	;# 
   869     0812                     	;# 
   870     0813                     	;# 
   871     0814                     	;# 
   872     081A                     	;# 
   873     081A                     	;# 
   874     081B                     	;# 
   875     081C                     	;# 
   876     081C                     	;# 
   877     081D                     	;# 
   878     081E                     	;# 
   879     081F                     	;# 
   880     088C                     	;# 
   881     088D                     	;# 
   882     088E                     	;# 
   883     088F                     	;# 
   884     0890                     	;# 
   885     0891                     	;# 
   886     0892                     	;# 
   887     0893                     	;# 
   888     0895                     	;# 
   889     0896                     	;# 
   890     0897                     	;# 
   891     0898                     	;# 
   892     0899                     	;# 
   893     089A                     	;# 
   894     089B                     	;# 
   895     090C                     	;# 
   896     090E                     	;# 
   897     090F                     	;# 
   898     091F                     	;# 
   899     098F                     	;# 
   900     098F                     	;# 
   901     0990                     	;# 
   902     0991                     	;# 
   903     0992                     	;# 
   904     0993                     	;# 
   905     0994                     	;# 
   906     0995                     	;# 
   907     0996                     	;# 
   908     0997                     	;# 
   909     1E0F                     	;# 
   910     1E10                     	;# 
   911     1E11                     	;# 
   912     1E12                     	;# 
   913     1E13                     	;# 
   914     1E14                     	;# 
   915     1E15                     	;# 
   916     1E16                     	;# 
   917     1E17                     	;# 
   918     1E18                     	;# 
   919     1E19                     	;# 
   920     1E1A                     	;# 
   921     1E1B                     	;# 
   922     1E1C                     	;# 
   923     1E1D                     	;# 
   924     1E1E                     	;# 
   925     1E1F                     	;# 
   926     1E20                     	;# 
   927     1E21                     	;# 
   928     1E22                     	;# 
   929     1E23                     	;# 
   930     1E24                     	;# 
   931     1E25                     	;# 
   932     1E26                     	;# 
   933     1E27                     	;# 
   934     1E28                     	;# 
   935     1E29                     	;# 
   936     1E2A                     	;# 
   937     1E2B                     	;# 
   938     1E2C                     	;# 
   939     1E2D                     	;# 
   940     1E2E                     	;# 
   941     1E2F                     	;# 
   942     1E30                     	;# 
   943     1E31                     	;# 
   944     1E32                     	;# 
   945     1E33                     	;# 
   946     1E34                     	;# 
   947     1E35                     	;# 
   948     1E36                     	;# 
   949     1E37                     	;# 
   950     1E8F                     	;# 
   951     1E90                     	;# 
   952     1E91                     	;# 
   953     1E92                     	;# 
   954     1E93                     	;# 
   955     1E94                     	;# 
   956     1E95                     	;# 
   957     1E96                     	;# 
   958     1E97                     	;# 
   959     1E9C                     	;# 
   960     1E9D                     	;# 
   961     1E9E                     	;# 
   962     1EA1                     	;# 
   963     1EA2                     	;# 
   964     1EA3                     	;# 
   965     1EA4                     	;# 
   966     1EA9                     	;# 
   967     1EAA                     	;# 
   968     1EB1                     	;# 
   969     1EB2                     	;# 
   970     1EB8                     	;# 
   971     1EB9                     	;# 
   972     1EBA                     	;# 
   973     1EBB                     	;# 
   974     1EBC                     	;# 
   975     1EBD                     	;# 
   976     1EBE                     	;# 
   977     1EC3                     	;# 
   978     1EC5                     	;# 
   979     1EC6                     	;# 
   980     1EC7                     	;# 
   981     1EC8                     	;# 
   982     1EC9                     	;# 
   983     1ECA                     	;# 
   984     1ECB                     	;# 
   985     1ECC                     	;# 
   986     1F10                     	;# 
   987     1F11                     	;# 
   988     1F12                     	;# 
   989     1F14                     	;# 
   990     1F15                     	;# 
   991     1F20                     	;# 
   992     1F21                     	;# 
   993     1F22                     	;# 
   994     1F23                     	;# 
   995     1F24                     	;# 
   996     1F25                     	;# 
   997     1F38                     	;# 
   998     1F39                     	;# 
   999     1F3A                     	;# 
  1000     1F3B                     	;# 
  1001     1F3C                     	;# 
  1002     1F3D                     	;# 
  1003     1F3E                     	;# 
  1004     1F3F                     	;# 
  1005     1F4E                     	;# 
  1006     1F4F                     	;# 
  1007     1F50                     	;# 
  1008     1F51                     	;# 
  1009     1F52                     	;# 
  1010     1F53                     	;# 
  1011     1F54                     	;# 
  1012     1F55                     	;# 
  1013     1FE4                     	;# 
  1014     1FE5                     	;# 
  1015     1FE6                     	;# 
  1016     1FE7                     	;# 
  1017     1FE8                     	;# 
  1018     1FE8                     	;# 
  1019     1FE9                     	;# 
  1020     1FEA                     	;# 
  1021     1FEB                     	;# 
  1022     1FED                     	;# 
  1023     1FEE                     	;# 
  1024     1FEF                     	;# 
  1025     0000                     	;# 
  1026     0001                     	;# 
  1027     0002                     	;# 
  1028     0003                     	;# 
  1029     0004                     	;# 
  1030     0005                     	;# 
  1031     0006                     	;# 
  1032     0007                     	;# 
  1033     0008                     	;# 
  1034     0009                     	;# 
  1035     000A                     	;# 
  1036     000B                     	;# 
  1037     000C                     	;# 
  1038     000E                     	;# 
  1039     0012                     	;# 
  1040     0014                     	;# 
  1041     0018                     	;# 
  1042     001A                     	;# 
  1043     008C                     	;# 
  1044     008C                     	;# 
  1045     008D                     	;# 
  1046     008E                     	;# 
  1047     008E                     	;# 
  1048     008F                     	;# 
  1049     0090                     	;# 
  1050     0090                     	;# 
  1051     0091                     	;# 
  1052     0092                     	;# 
  1053     0092                     	;# 
  1054     0093                     	;# 
  1055     0094                     	;# 
  1056     0094                     	;# 
  1057     0095                     	;# 
  1058     0096                     	;# 
  1059     0096                     	;# 
  1060     0097                     	;# 
  1061     0098                     	;# 
  1062     0099                     	;# 
  1063     009A                     	;# 
  1064     009B                     	;# 
  1065     009B                     	;# 
  1066     009C                     	;# 
  1067     009D                     	;# 
  1068     009D                     	;# 
  1069     009E                     	;# 
  1070     009F                     	;# 
  1071     010C                     	;# 
  1072     010C                     	;# 
  1073     010D                     	;# 
  1074     010E                     	;# 
  1075     010F                     	;# 
  1076     010F                     	;# 
  1077     0110                     	;# 
  1078     0111                     	;# 
  1079     0112                     	;# 
  1080     0113                     	;# 
  1081     0114                     	;# 
  1082     0115                     	;# 
  1083     0116                     	;# 
  1084     0117                     	;# 
  1085     0118                     	;# 
  1086     0119                     	;# 
  1087     0119                     	;# 
  1088     0119                     	;# 
  1089     011A                     	;# 
  1090     011A                     	;# 
  1091     011A                     	;# 
  1092     011B                     	;# 
  1093     011B                     	;# 
  1094     011B                     	;# 
  1095     011B                     	;# 
  1096     011B                     	;# 
  1097     011C                     	;# 
  1098     011C                     	;# 
  1099     011C                     	;# 
  1100     011D                     	;# 
  1101     011D                     	;# 
  1102     011D                     	;# 
  1103     011E                     	;# 
  1104     011E                     	;# 
  1105     011E                     	;# 
  1106     011F                     	;# 
  1107     011F                     	;# 
  1108     011F                     	;# 
  1109     011F                     	;# 
  1110     011F                     	;# 
  1111     018C                     	;# 
  1112     018D                     	;# 
  1113     018E                     	;# 
  1114     018F                     	;# 
  1115     0190                     	;# 
  1116     0191                     	;# 
  1117     0192                     	;# 
  1118     0196                     	;# 
  1119     0197                     	;# 
  1120     0198                     	;# 
  1121     0199                     	;# 
  1122     019A                     	;# 
  1123     019B                     	;# 
  1124     019C                     	;# 
  1125     020C                     	;# 
  1126     020D                     	;# 
  1127     020E                     	;# 
  1128     020E                     	;# 
  1129     020F                     	;# 
  1130     020F                     	;# 
  1131     0210                     	;# 
  1132     0210                     	;# 
  1133     0211                     	;# 
  1134     0211                     	;# 
  1135     0212                     	;# 
  1136     0213                     	;# 
  1137     0214                     	;# 
  1138     0214                     	;# 
  1139     0215                     	;# 
  1140     0215                     	;# 
  1141     0216                     	;# 
  1142     0216                     	;# 
  1143     0217                     	;# 
  1144     0217                     	;# 
  1145     0218                     	;# 
  1146     0219                     	;# 
  1147     021A                     	;# 
  1148     021A                     	;# 
  1149     021B                     	;# 
  1150     021B                     	;# 
  1151     021C                     	;# 
  1152     021C                     	;# 
  1153     021D                     	;# 
  1154     021D                     	;# 
  1155     021E                     	;# 
  1156     021F                     	;# 
  1157     028C                     	;# 
  1158     028C                     	;# 
  1159     028D                     	;# 
  1160     028D                     	;# 
  1161     028E                     	;# 
  1162     028F                     	;# 
  1163     0290                     	;# 
  1164     0291                     	;# 
  1165     0292                     	;# 
  1166     0292                     	;# 
  1167     0293                     	;# 
  1168     0293                     	;# 
  1169     0294                     	;# 
  1170     0295                     	;# 
  1171     0296                     	;# 
  1172     0297                     	;# 
  1173     0298                     	;# 
  1174     0298                     	;# 
  1175     0299                     	;# 
  1176     0299                     	;# 
  1177     029A                     	;# 
  1178     029B                     	;# 
  1179     029C                     	;# 
  1180     029D                     	;# 
  1181     029F                     	;# 
  1182     030C                     	;# 
  1183     030C                     	;# 
  1184     030D                     	;# 
  1185     030E                     	;# 
  1186     030F                     	;# 
  1187     0310                     	;# 
  1188     0310                     	;# 
  1189     0311                     	;# 
  1190     0312                     	;# 
  1191     0313                     	;# 
  1192     0314                     	;# 
  1193     0314                     	;# 
  1194     0315                     	;# 
  1195     0316                     	;# 
  1196     0317                     	;# 
  1197     0318                     	;# 
  1198     0318                     	;# 
  1199     0319                     	;# 
  1200     031A                     	;# 
  1201     031B                     	;# 
  1202     038C                     	;# 
  1203     038C                     	;# 
  1204     038D                     	;# 
  1205     038E                     	;# 
  1206     0390                     	;# 
  1207     0390                     	;# 
  1208     0391                     	;# 
  1209     0392                     	;# 
  1210     048C                     	;# 
  1211     048C                     	;# 
  1212     048D                     	;# 
  1213     048E                     	;# 
  1214     048F                     	;# 
  1215     048F                     	;# 
  1216     0490                     	;# 
  1217     0491                     	;# 
  1218     0492                     	;# 
  1219     0492                     	;# 
  1220     0493                     	;# 
  1221     0494                     	;# 
  1222     0495                     	;# 
  1223     0495                     	;# 
  1224     0496                     	;# 
  1225     0497                     	;# 
  1226     0498                     	;# 
  1227     0499                     	;# 
  1228     049A                     	;# 
  1229     049B                     	;# 
  1230     049C                     	;# 
  1231     049D                     	;# 
  1232     058C                     	;# 
  1233     058C                     	;# 
  1234     058D                     	;# 
  1235     058E                     	;# 
  1236     058F                     	;# 
  1237     058F                     	;# 
  1238     0590                     	;# 
  1239     0591                     	;# 
  1240     0592                     	;# 
  1241     0593                     	;# 
  1242     059C                     	;# 
  1243     059C                     	;# 
  1244     059D                     	;# 
  1245     059D                     	;# 
  1246     059E                     	;# 
  1247     059F                     	;# 
  1248     060C                     	;# 
  1249     060C                     	;# 
  1250     060D                     	;# 
  1251     060D                     	;# 
  1252     060E                     	;# 
  1253     060F                     	;# 
  1254     0610                     	;# 
  1255     0611                     	;# 
  1256     0612                     	;# 
  1257     0613                     	;# 
  1258     0614                     	;# 
  1259     0616                     	;# 
  1260     0616                     	;# 
  1261     0617                     	;# 
  1262     0617                     	;# 
  1263     0618                     	;# 
  1264     0619                     	;# 
  1265     061A                     	;# 
  1266     061B                     	;# 
  1267     061C                     	;# 
  1268     061D                     	;# 
  1269     061E                     	;# 
  1270     070C                     	;# 
  1271     070D                     	;# 
  1272     070E                     	;# 
  1273     070F                     	;# 
  1274     0710                     	;# 
  1275     0711                     	;# 
  1276     0712                     	;# 
  1277     0713                     	;# 
  1278     0714                     	;# 
  1279     0716                     	;# 
  1280     0717                     	;# 
  1281     0718                     	;# 
  1282     0719                     	;# 
  1283     071A                     	;# 
  1284     071B                     	;# 
  1285     071C                     	;# 
  1286     071D                     	;# 
  1287     071E                     	;# 
  1288     0796                     	;# 
  1289     0797                     	;# 
  1290     0798                     	;# 
  1291     0799                     	;# 
  1292     079A                     	;# 
  1293     079B                     	;# 
  1294     079C                     	;# 
  1295     079D                     	;# 
  1296     080C                     	;# 
  1297     080D                     	;# 
  1298     080E                     	;# 
  1299     080F                     	;# 
  1300     0810                     	;# 
  1301     0811                     	;# 
  1302     0812                     	;# 
  1303     0813                     	;# 
  1304     0814                     	;# 
  1305     081A                     	;# 
  1306     081A                     	;# 
  1307     081B                     	;# 
  1308     081C                     	;# 
  1309     081C                     	;# 
  1310     081D                     	;# 
  1311     081E                     	;# 
  1312     081F                     	;# 
  1313     088C                     	;# 
  1314     088D                     	;# 
  1315     088E                     	;# 
  1316     088F                     	;# 
  1317     0890                     	;# 
  1318     0891                     	;# 
  1319     0892                     	;# 
  1320     0893                     	;# 
  1321     0895                     	;# 
  1322     0896                     	;# 
  1323     0897                     	;# 
  1324     0898                     	;# 
  1325     0899                     	;# 
  1326     089A                     	;# 
  1327     089B                     	;# 
  1328     090C                     	;# 
  1329     090E                     	;# 
  1330     090F                     	;# 
  1331     091F                     	;# 
  1332     098F                     	;# 
  1333     098F                     	;# 
  1334     0990                     	;# 
  1335     0991                     	;# 
  1336     0992                     	;# 
  1337     0993                     	;# 
  1338     0994                     	;# 
  1339     0995                     	;# 
  1340     0996                     	;# 
  1341     0997                     	;# 
  1342     1E0F                     	;# 
  1343     1E10                     	;# 
  1344     1E11                     	;# 
  1345     1E12                     	;# 
  1346     1E13                     	;# 
  1347     1E14                     	;# 
  1348     1E15                     	;# 
  1349     1E16                     	;# 
  1350     1E17                     	;# 
  1351     1E18                     	;# 
  1352     1E19                     	;# 
  1353     1E1A                     	;# 
  1354     1E1B                     	;# 
  1355     1E1C                     	;# 
  1356     1E1D                     	;# 
  1357     1E1E                     	;# 
  1358     1E1F                     	;# 
  1359     1E20                     	;# 
  1360     1E21                     	;# 
  1361     1E22                     	;# 
  1362     1E23                     	;# 
  1363     1E24                     	;# 
  1364     1E25                     	;# 
  1365     1E26                     	;# 
  1366     1E27                     	;# 
  1367     1E28                     	;# 
  1368     1E29                     	;# 
  1369     1E2A                     	;# 
  1370     1E2B                     	;# 
  1371     1E2C                     	;# 
  1372     1E2D                     	;# 
  1373     1E2E                     	;# 
  1374     1E2F                     	;# 
  1375     1E30                     	;# 
  1376     1E31                     	;# 
  1377     1E32                     	;# 
  1378     1E33                     	;# 
  1379     1E34                     	;# 
  1380     1E35                     	;# 
  1381     1E36                     	;# 
  1382     1E37                     	;# 
  1383     1E8F                     	;# 
  1384     1E90                     	;# 
  1385     1E91                     	;# 
  1386     1E92                     	;# 
  1387     1E93                     	;# 
  1388     1E94                     	;# 
  1389     1E95                     	;# 
  1390     1E96                     	;# 
  1391     1E97                     	;# 
  1392     1E9C                     	;# 
  1393     1E9D                     	;# 
  1394     1E9E                     	;# 
  1395     1EA1                     	;# 
  1396     1EA2                     	;# 
  1397     1EA3                     	;# 
  1398     1EA4                     	;# 
  1399     1EA9                     	;# 
  1400     1EAA                     	;# 
  1401     1EB1                     	;# 
  1402     1EB2                     	;# 
  1403     1EB8                     	;# 
  1404     1EB9                     	;# 
  1405     1EBA                     	;# 
  1406     1EBB                     	;# 
  1407     1EBC                     	;# 
  1408     1EBD                     	;# 
  1409     1EBE                     	;# 
  1410     1EC3                     	;# 
  1411     1EC5                     	;# 
  1412     1EC6                     	;# 
  1413     1EC7                     	;# 
  1414     1EC8                     	;# 
  1415     1EC9                     	;# 
  1416     1ECA                     	;# 
  1417     1ECB                     	;# 
  1418     1ECC                     	;# 
  1419     1F10                     	;# 
  1420     1F11                     	;# 
  1421     1F12                     	;# 
  1422     1F14                     	;# 
  1423     1F15                     	;# 
  1424     1F20                     	;# 
  1425     1F21                     	;# 
  1426     1F22                     	;# 
  1427     1F23                     	;# 
  1428     1F24                     	;# 
  1429     1F25                     	;# 
  1430     1F38                     	;# 
  1431     1F39                     	;# 
  1432     1F3A                     	;# 
  1433     1F3B                     	;# 
  1434     1F3C                     	;# 
  1435     1F3D                     	;# 
  1436     1F3E                     	;# 
  1437     1F3F                     	;# 
  1438     1F4E                     	;# 
  1439     1F4F                     	;# 
  1440     1F50                     	;# 
  1441     1F51                     	;# 
  1442     1F52                     	;# 
  1443     1F53                     	;# 
  1444     1F54                     	;# 
  1445     1F55                     	;# 
  1446     1FE4                     	;# 
  1447     1FE5                     	;# 
  1448     1FE6                     	;# 
  1449     1FE7                     	;# 
  1450     1FE8                     	;# 
  1451     1FE8                     	;# 
  1452     1FE9                     	;# 
  1453     1FEA                     	;# 
  1454     1FEB                     	;# 
  1455     1FED                     	;# 
  1456     1FEE                     	;# 
  1457     1FEF                     	;# 
  1458     0000                     	;# 
  1459     0001                     	;# 
  1460     0002                     	;# 
  1461     0003                     	;# 
  1462     0004                     	;# 
  1463     0005                     	;# 
  1464     0006                     	;# 
  1465     0007                     	;# 
  1466     0008                     	;# 
  1467     0009                     	;# 
  1468     000A                     	;# 
  1469     000B                     	;# 
  1470     000C                     	;# 
  1471     000E                     	;# 
  1472     0012                     	;# 
  1473     0014                     	;# 
  1474     0018                     	;# 
  1475     001A                     	;# 
  1476     008C                     	;# 
  1477     008C                     	;# 
  1478     008D                     	;# 
  1479     008E                     	;# 
  1480     008E                     	;# 
  1481     008F                     	;# 
  1482     0090                     	;# 
  1483     0090                     	;# 
  1484     0091                     	;# 
  1485     0092                     	;# 
  1486     0092                     	;# 
  1487     0093                     	;# 
  1488     0094                     	;# 
  1489     0094                     	;# 
  1490     0095                     	;# 
  1491     0096                     	;# 
  1492     0096                     	;# 
  1493     0097                     	;# 
  1494     0098                     	;# 
  1495     0099                     	;# 
  1496     009A                     	;# 
  1497     009B                     	;# 
  1498     009B                     	;# 
  1499     009C                     	;# 
  1500     009D                     	;# 
  1501     009D                     	;# 
  1502     009E                     	;# 
  1503     009F                     	;# 
  1504     010C                     	;# 
  1505     010C                     	;# 
  1506     010D                     	;# 
  1507     010E                     	;# 
  1508     010F                     	;# 
  1509     010F                     	;# 
  1510     0110                     	;# 
  1511     0111                     	;# 
  1512     0112                     	;# 
  1513     0113                     	;# 
  1514     0114                     	;# 
  1515     0115                     	;# 
  1516     0116                     	;# 
  1517     0117                     	;# 
  1518     0118                     	;# 
  1519     0119                     	;# 
  1520     0119                     	;# 
  1521     0119                     	;# 
  1522     011A                     	;# 
  1523     011A                     	;# 
  1524     011A                     	;# 
  1525     011B                     	;# 
  1526     011B                     	;# 
  1527     011B                     	;# 
  1528     011B                     	;# 
  1529     011B                     	;# 
  1530     011C                     	;# 
  1531     011C                     	;# 
  1532     011C                     	;# 
  1533     011D                     	;# 
  1534     011D                     	;# 
  1535     011D                     	;# 
  1536     011E                     	;# 
  1537     011E                     	;# 
  1538     011E                     	;# 
  1539     011F                     	;# 
  1540     011F                     	;# 
  1541     011F                     	;# 
  1542     011F                     	;# 
  1543     011F                     	;# 
  1544     018C                     	;# 
  1545     018D                     	;# 
  1546     018E                     	;# 
  1547     018F                     	;# 
  1548     0190                     	;# 
  1549     0191                     	;# 
  1550     0192                     	;# 
  1551     0196                     	;# 
  1552     0197                     	;# 
  1553     0198                     	;# 
  1554     0199                     	;# 
  1555     019A                     	;# 
  1556     019B                     	;# 
  1557     019C                     	;# 
  1558     020C                     	;# 
  1559     020D                     	;# 
  1560     020E                     	;# 
  1561     020E                     	;# 
  1562     020F                     	;# 
  1563     020F                     	;# 
  1564     0210                     	;# 
  1565     0210                     	;# 
  1566     0211                     	;# 
  1567     0211                     	;# 
  1568     0212                     	;# 
  1569     0213                     	;# 
  1570     0214                     	;# 
  1571     0214                     	;# 
  1572     0215                     	;# 
  1573     0215                     	;# 
  1574     0216                     	;# 
  1575     0216                     	;# 
  1576     0217                     	;# 
  1577     0217                     	;# 
  1578     0218                     	;# 
  1579     0219                     	;# 
  1580     021A                     	;# 
  1581     021A                     	;# 
  1582     021B                     	;# 
  1583     021B                     	;# 
  1584     021C                     	;# 
  1585     021C                     	;# 
  1586     021D                     	;# 
  1587     021D                     	;# 
  1588     021E                     	;# 
  1589     021F                     	;# 
  1590     028C                     	;# 
  1591     028C                     	;# 
  1592     028D                     	;# 
  1593     028D                     	;# 
  1594     028E                     	;# 
  1595     028F                     	;# 
  1596     0290                     	;# 
  1597     0291                     	;# 
  1598     0292                     	;# 
  1599     0292                     	;# 
  1600     0293                     	;# 
  1601     0293                     	;# 
  1602     0294                     	;# 
  1603     0295                     	;# 
  1604     0296                     	;# 
  1605     0297                     	;# 
  1606     0298                     	;# 
  1607     0298                     	;# 
  1608     0299                     	;# 
  1609     0299                     	;# 
  1610     029A                     	;# 
  1611     029B                     	;# 
  1612     029C                     	;# 
  1613     029D                     	;# 
  1614     029F                     	;# 
  1615     030C                     	;# 
  1616     030C                     	;# 
  1617     030D                     	;# 
  1618     030E                     	;# 
  1619     030F                     	;# 
  1620     0310                     	;# 
  1621     0310                     	;# 
  1622     0311                     	;# 
  1623     0312                     	;# 
  1624     0313                     	;# 
  1625     0314                     	;# 
  1626     0314                     	;# 
  1627     0315                     	;# 
  1628     0316                     	;# 
  1629     0317                     	;# 
  1630     0318                     	;# 
  1631     0318                     	;# 
  1632     0319                     	;# 
  1633     031A                     	;# 
  1634     031B                     	;# 
  1635     038C                     	;# 
  1636     038C                     	;# 
  1637     038D                     	;# 
  1638     038E                     	;# 
  1639     0390                     	;# 
  1640     0390                     	;# 
  1641     0391                     	;# 
  1642     0392                     	;# 
  1643     048C                     	;# 
  1644     048C                     	;# 
  1645     048D                     	;# 
  1646     048E                     	;# 
  1647     048F                     	;# 
  1648     048F                     	;# 
  1649     0490                     	;# 
  1650     0491                     	;# 
  1651     0492                     	;# 
  1652     0492                     	;# 
  1653     0493                     	;# 
  1654     0494                     	;# 
  1655     0495                     	;# 
  1656     0495                     	;# 
  1657     0496                     	;# 
  1658     0497                     	;# 
  1659     0498                     	;# 
  1660     0499                     	;# 
  1661     049A                     	;# 
  1662     049B                     	;# 
  1663     049C                     	;# 
  1664     049D                     	;# 
  1665     058C                     	;# 
  1666     058C                     	;# 
  1667     058D                     	;# 
  1668     058E                     	;# 
  1669     058F                     	;# 
  1670     058F                     	;# 
  1671     0590                     	;# 
  1672     0591                     	;# 
  1673     0592                     	;# 
  1674     0593                     	;# 
  1675     059C                     	;# 
  1676     059C                     	;# 
  1677     059D                     	;# 
  1678     059D                     	;# 
  1679     059E                     	;# 
  1680     059F                     	;# 
  1681     060C                     	;# 
  1682     060C                     	;# 
  1683     060D                     	;# 
  1684     060D                     	;# 
  1685     060E                     	;# 
  1686     060F                     	;# 
  1687     0610                     	;# 
  1688     0611                     	;# 
  1689     0612                     	;# 
  1690     0613                     	;# 
  1691     0614                     	;# 
  1692     0616                     	;# 
  1693     0616                     	;# 
  1694     0617                     	;# 
  1695     0617                     	;# 
  1696     0618                     	;# 
  1697     0619                     	;# 
  1698     061A                     	;# 
  1699     061B                     	;# 
  1700     061C                     	;# 
  1701     061D                     	;# 
  1702     061E                     	;# 
  1703     070C                     	;# 
  1704     070D                     	;# 
  1705     070E                     	;# 
  1706     070F                     	;# 
  1707     0710                     	;# 
  1708     0711                     	;# 
  1709     0712                     	;# 
  1710     0713                     	;# 
  1711     0714                     	;# 
  1712     0716                     	;# 
  1713     0717                     	;# 
  1714     0718                     	;# 
  1715     0719                     	;# 
  1716     071A                     	;# 
  1717     071B                     	;# 
  1718     071C                     	;# 
  1719     071D                     	;# 
  1720     071E                     	;# 
  1721     0796                     	;# 
  1722     0797                     	;# 
  1723     0798                     	;# 
  1724     0799                     	;# 
  1725     079A                     	;# 
  1726     079B                     	;# 
  1727     079C                     	;# 
  1728     079D                     	;# 
  1729     080C                     	;# 
  1730     080D                     	;# 
  1731     080E                     	;# 
  1732     080F                     	;# 
  1733     0810                     	;# 
  1734     0811                     	;# 
  1735     0812                     	;# 
  1736     0813                     	;# 
  1737     0814                     	;# 
  1738     081A                     	;# 
  1739     081A                     	;# 
  1740     081B                     	;# 
  1741     081C                     	;# 
  1742     081C                     	;# 
  1743     081D                     	;# 
  1744     081E                     	;# 
  1745     081F                     	;# 
  1746     088C                     	;# 
  1747     088D                     	;# 
  1748     088E                     	;# 
  1749     088F                     	;# 
  1750     0890                     	;# 
  1751     0891                     	;# 
  1752     0892                     	;# 
  1753     0893                     	;# 
  1754     0895                     	;# 
  1755     0896                     	;# 
  1756     0897                     	;# 
  1757     0898                     	;# 
  1758     0899                     	;# 
  1759     089A                     	;# 
  1760     089B                     	;# 
  1761     090C                     	;# 
  1762     090E                     	;# 
  1763     090F                     	;# 
  1764     091F                     	;# 
  1765     098F                     	;# 
  1766     098F                     	;# 
  1767     0990                     	;# 
  1768     0991                     	;# 
  1769     0992                     	;# 
  1770     0993                     	;# 
  1771     0994                     	;# 
  1772     0995                     	;# 
  1773     0996                     	;# 
  1774     0997                     	;# 
  1775     1E0F                     	;# 
  1776     1E10                     	;# 
  1777     1E11                     	;# 
  1778     1E12                     	;# 
  1779     1E13                     	;# 
  1780     1E14                     	;# 
  1781     1E15                     	;# 
  1782     1E16                     	;# 
  1783     1E17                     	;# 
  1784     1E18                     	;# 
  1785     1E19                     	;# 
  1786     1E1A                     	;# 
  1787     1E1B                     	;# 
  1788     1E1C                     	;# 
  1789     1E1D                     	;# 
  1790     1E1E                     	;# 
  1791     1E1F                     	;# 
  1792     1E20                     	;# 
  1793     1E21                     	;# 
  1794     1E22                     	;# 
  1795     1E23                     	;# 
  1796     1E24                     	;# 
  1797     1E25                     	;# 
  1798     1E26                     	;# 
  1799     1E27                     	;# 
  1800     1E28                     	;# 
  1801     1E29                     	;# 
  1802     1E2A                     	;# 
  1803     1E2B                     	;# 
  1804     1E2C                     	;# 
  1805     1E2D                     	;# 
  1806     1E2E                     	;# 
  1807     1E2F                     	;# 
  1808     1E30                     	;# 
  1809     1E31                     	;# 
  1810     1E32                     	;# 
  1811     1E33                     	;# 
  1812     1E34                     	;# 
  1813     1E35                     	;# 
  1814     1E36                     	;# 
  1815     1E37                     	;# 
  1816     1E8F                     	;# 
  1817     1E90                     	;# 
  1818     1E91                     	;# 
  1819     1E92                     	;# 
  1820     1E93                     	;# 
  1821     1E94                     	;# 
  1822     1E95                     	;# 
  1823     1E96                     	;# 
  1824     1E97                     	;# 
  1825     1E9C                     	;# 
  1826     1E9D                     	;# 
  1827     1E9E                     	;# 
  1828     1EA1                     	;# 
  1829     1EA2                     	;# 
  1830     1EA3                     	;# 
  1831     1EA4                     	;# 
  1832     1EA9                     	;# 
  1833     1EAA                     	;# 
  1834     1EB1                     	;# 
  1835     1EB2                     	;# 
  1836     1EB8                     	;# 
  1837     1EB9                     	;# 
  1838     1EBA                     	;# 
  1839     1EBB                     	;# 
  1840     1EBC                     	;# 
  1841     1EBD                     	;# 
  1842     1EBE                     	;# 
  1843     1EC3                     	;# 
  1844     1EC5                     	;# 
  1845     1EC6                     	;# 
  1846     1EC7                     	;# 
  1847     1EC8                     	;# 
  1848     1EC9                     	;# 
  1849     1ECA                     	;# 
  1850     1ECB                     	;# 
  1851     1ECC                     	;# 
  1852     1F10                     	;# 
  1853     1F11                     	;# 
  1854     1F12                     	;# 
  1855     1F14                     	;# 
  1856     1F15                     	;# 
  1857     1F20                     	;# 
  1858     1F21                     	;# 
  1859     1F22                     	;# 
  1860     1F23                     	;# 
  1861     1F24                     	;# 
  1862     1F25                     	;# 
  1863     1F38                     	;# 
  1864     1F39                     	;# 
  1865     1F3A                     	;# 
  1866     1F3B                     	;# 
  1867     1F3C                     	;# 
  1868     1F3D                     	;# 
  1869     1F3E                     	;# 
  1870     1F3F                     	;# 
  1871     1F4E                     	;# 
  1872     1F4F                     	;# 
  1873     1F50                     	;# 
  1874     1F51                     	;# 
  1875     1F52                     	;# 
  1876     1F53                     	;# 
  1877     1F54                     	;# 
  1878     1F55                     	;# 
  1879     1FE4                     	;# 
  1880     1FE5                     	;# 
  1881     1FE6                     	;# 
  1882     1FE7                     	;# 
  1883     1FE8                     	;# 
  1884     1FE8                     	;# 
  1885     1FE9                     	;# 
  1886     1FEA                     	;# 
  1887     1FEB                     	;# 
  1888     1FED                     	;# 
  1889     1FEE                     	;# 
  1890     1FEF                     	;# 
  1891     0000                     	;# 
  1892     0001                     	;# 
  1893     0002                     	;# 
  1894     0003                     	;# 
  1895     0004                     	;# 
  1896     0005                     	;# 
  1897     0006                     	;# 
  1898     0007                     	;# 
  1899     0008                     	;# 
  1900     0009                     	;# 
  1901     000A                     	;# 
  1902     000B                     	;# 
  1903     000C                     	;# 
  1904     000E                     	;# 
  1905     0012                     	;# 
  1906     0014                     	;# 
  1907     0018                     	;# 
  1908     001A                     	;# 
  1909     008C                     	;# 
  1910     008C                     	;# 
  1911     008D                     	;# 
  1912     008E                     	;# 
  1913     008E                     	;# 
  1914     008F                     	;# 
  1915     0090                     	;# 
  1916     0090                     	;# 
  1917     0091                     	;# 
  1918     0092                     	;# 
  1919     0092                     	;# 
  1920     0093                     	;# 
  1921     0094                     	;# 
  1922     0094                     	;# 
  1923     0095                     	;# 
  1924     0096                     	;# 
  1925     0096                     	;# 
  1926     0097                     	;# 
  1927     0098                     	;# 
  1928     0099                     	;# 
  1929     009A                     	;# 
  1930     009B                     	;# 
  1931     009B                     	;# 
  1932     009C                     	;# 
  1933     009D                     	;# 
  1934     009D                     	;# 
  1935     009E                     	;# 
  1936     009F                     	;# 
  1937     010C                     	;# 
  1938     010C                     	;# 
  1939     010D                     	;# 
  1940     010E                     	;# 
  1941     010F                     	;# 
  1942     010F                     	;# 
  1943     0110                     	;# 
  1944     0111                     	;# 
  1945     0112                     	;# 
  1946     0113                     	;# 
  1947     0114                     	;# 
  1948     0115                     	;# 
  1949     0116                     	;# 
  1950     0117                     	;# 
  1951     0118                     	;# 
  1952     0119                     	;# 
  1953     0119                     	;# 
  1954     0119                     	;# 
  1955     011A                     	;# 
  1956     011A                     	;# 
  1957     011A                     	;# 
  1958     011B                     	;# 
  1959     011B                     	;# 
  1960     011B                     	;# 
  1961     011B                     	;# 
  1962     011B                     	;# 
  1963     011C                     	;# 
  1964     011C                     	;# 
  1965     011C                     	;# 
  1966     011D                     	;# 
  1967     011D                     	;# 
  1968     011D                     	;# 
  1969     011E                     	;# 
  1970     011E                     	;# 
  1971     011E                     	;# 
  1972     011F                     	;# 
  1973     011F                     	;# 
  1974     011F                     	;# 
  1975     011F                     	;# 
  1976     011F                     	;# 
  1977     018C                     	;# 
  1978     018D                     	;# 
  1979     018E                     	;# 
  1980     018F                     	;# 
  1981     0190                     	;# 
  1982     0191                     	;# 
  1983     0192                     	;# 
  1984     0196                     	;# 
  1985     0197                     	;# 
  1986     0198                     	;# 
  1987     0199                     	;# 
  1988     019A                     	;# 
  1989     019B                     	;# 
  1990     019C                     	;# 
  1991     020C                     	;# 
  1992     020D                     	;# 
  1993     020E                     	;# 
  1994     020E                     	;# 
  1995     020F                     	;# 
  1996     020F                     	;# 
  1997     0210                     	;# 
  1998     0210                     	;# 
  1999     0211                     	;# 
  2000     0211                     	;# 
  2001     0212                     	;# 
  2002     0213                     	;# 
  2003     0214                     	;# 
  2004     0214                     	;# 
  2005     0215                     	;# 
  2006     0215                     	;# 
  2007     0216                     	;# 
  2008     0216                     	;# 
  2009     0217                     	;# 
  2010     0217                     	;# 
  2011     0218                     	;# 
  2012     0219                     	;# 
  2013     021A                     	;# 
  2014     021A                     	;# 
  2015     021B                     	;# 
  2016     021B                     	;# 
  2017     021C                     	;# 
  2018     021C                     	;# 
  2019     021D                     	;# 
  2020     021D                     	;# 
  2021     021E                     	;# 
  2022     021F                     	;# 
  2023     028C                     	;# 
  2024     028C                     	;# 
  2025     028D                     	;# 
  2026     028D                     	;# 
  2027     028E                     	;# 
  2028     028F                     	;# 
  2029     0290                     	;# 
  2030     0291                     	;# 
  2031     0292                     	;# 
  2032     0292                     	;# 
  2033     0293                     	;# 
  2034     0293                     	;# 
  2035     0294                     	;# 
  2036     0295                     	;# 
  2037     0296                     	;# 
  2038     0297                     	;# 
  2039     0298                     	;# 
  2040     0298                     	;# 
  2041     0299                     	;# 
  2042     0299                     	;# 
  2043     029A                     	;# 
  2044     029B                     	;# 
  2045     029C                     	;# 
  2046     029D                     	;# 
  2047     029F                     	;# 
  2048     030C                     	;# 
  2049     030C                     	;# 
  2050     030D                     	;# 
  2051     030E                     	;# 
  2052     030F                     	;# 
  2053     0310                     	;# 
  2054     0310                     	;# 
  2055     0311                     	;# 
  2056     0312                     	;# 
  2057     0313                     	;# 
  2058     0314                     	;# 
  2059     0314                     	;# 
  2060     0315                     	;# 
  2061     0316                     	;# 
  2062     0317                     	;# 
  2063     0318                     	;# 
  2064     0318                     	;# 
  2065     0319                     	;# 
  2066     031A                     	;# 
  2067     031B                     	;# 
  2068     038C                     	;# 
  2069     038C                     	;# 
  2070     038D                     	;# 
  2071     038E                     	;# 
  2072     0390                     	;# 
  2073     0390                     	;# 
  2074     0391                     	;# 
  2075     0392                     	;# 
  2076     048C                     	;# 
  2077     048C                     	;# 
  2078     048D                     	;# 
  2079     048E                     	;# 
  2080     048F                     	;# 
  2081     048F                     	;# 
  2082     0490                     	;# 
  2083     0491                     	;# 
  2084     0492                     	;# 
  2085     0492                     	;# 
  2086     0493                     	;# 
  2087     0494                     	;# 
  2088     0495                     	;# 
  2089     0495                     	;# 
  2090     0496                     	;# 
  2091     0497                     	;# 
  2092     0498                     	;# 
  2093     0499                     	;# 
  2094     049A                     	;# 
  2095     049B                     	;# 
  2096     049C                     	;# 
  2097     049D                     	;# 
  2098     058C                     	;# 
  2099     058C                     	;# 
  2100     058D                     	;# 
  2101     058E                     	;# 
  2102     058F                     	;# 
  2103     058F                     	;# 
  2104     0590                     	;# 
  2105     0591                     	;# 
  2106     0592                     	;# 
  2107     0593                     	;# 
  2108     059C                     	;# 
  2109     059C                     	;# 
  2110     059D                     	;# 
  2111     059D                     	;# 
  2112     059E                     	;# 
  2113     059F                     	;# 
  2114     060C                     	;# 
  2115     060C                     	;# 
  2116     060D                     	;# 
  2117     060D                     	;# 
  2118     060E                     	;# 
  2119     060F                     	;# 
  2120     0610                     	;# 
  2121     0611                     	;# 
  2122     0612                     	;# 
  2123     0613                     	;# 
  2124     0614                     	;# 
  2125     0616                     	;# 
  2126     0616                     	;# 
  2127     0617                     	;# 
  2128     0617                     	;# 
  2129     0618                     	;# 
  2130     0619                     	;# 
  2131     061A                     	;# 
  2132     061B                     	;# 
  2133     061C                     	;# 
  2134     061D                     	;# 
  2135     061E                     	;# 
  2136     070C                     	;# 
  2137     070D                     	;# 
  2138     070E                     	;# 
  2139     070F                     	;# 
  2140     0710                     	;# 
  2141     0711                     	;# 
  2142     0712                     	;# 
  2143     0713                     	;# 
  2144     0714                     	;# 
  2145     0716                     	;# 
  2146     0717                     	;# 
  2147     0718                     	;# 
  2148     0719                     	;# 
  2149     071A                     	;# 
  2150     071B                     	;# 
  2151     071C                     	;# 
  2152     071D                     	;# 
  2153     071E                     	;# 
  2154     0796                     	;# 
  2155     0797                     	;# 
  2156     0798                     	;# 
  2157     0799                     	;# 
  2158     079A                     	;# 
  2159     079B                     	;# 
  2160     079C                     	;# 
  2161     079D                     	;# 
  2162     080C                     	;# 
  2163     080D                     	;# 
  2164     080E                     	;# 
  2165     080F                     	;# 
  2166     0810                     	;# 
  2167     0811                     	;# 
  2168     0812                     	;# 
  2169     0813                     	;# 
  2170     0814                     	;# 
  2171     081A                     	;# 
  2172     081A                     	;# 
  2173     081B                     	;# 
  2174     081C                     	;# 
  2175     081C                     	;# 
  2176     081D                     	;# 
  2177     081E                     	;# 
  2178     081F                     	;# 
  2179     088C                     	;# 
  2180     088D                     	;# 
  2181     088E                     	;# 
  2182     088F                     	;# 
  2183     0890                     	;# 
  2184     0891                     	;# 
  2185     0892                     	;# 
  2186     0893                     	;# 
  2187     0895                     	;# 
  2188     0896                     	;# 
  2189     0897                     	;# 
  2190     0898                     	;# 
  2191     0899                     	;# 
  2192     089A                     	;# 
  2193     089B                     	;# 
  2194     090C                     	;# 
  2195     090E                     	;# 
  2196     090F                     	;# 
  2197     091F                     	;# 
  2198     098F                     	;# 
  2199     098F                     	;# 
  2200     0990                     	;# 
  2201     0991                     	;# 
  2202     0992                     	;# 
  2203     0993                     	;# 
  2204     0994                     	;# 
  2205     0995                     	;# 
  2206     0996                     	;# 
  2207     0997                     	;# 
  2208     1E0F                     	;# 
  2209     1E10                     	;# 
  2210     1E11                     	;# 
  2211     1E12                     	;# 
  2212     1E13                     	;# 
  2213     1E14                     	;# 
  2214     1E15                     	;# 
  2215     1E16                     	;# 
  2216     1E17                     	;# 
  2217     1E18                     	;# 
  2218     1E19                     	;# 
  2219     1E1A                     	;# 
  2220     1E1B                     	;# 
  2221     1E1C                     	;# 
  2222     1E1D                     	;# 
  2223     1E1E                     	;# 
  2224     1E1F                     	;# 
  2225     1E20                     	;# 
  2226     1E21                     	;# 
  2227     1E22                     	;# 
  2228     1E23                     	;# 
  2229     1E24                     	;# 
  2230     1E25                     	;# 
  2231     1E26                     	;# 
  2232     1E27                     	;# 
  2233     1E28                     	;# 
  2234     1E29                     	;# 
  2235     1E2A                     	;# 
  2236     1E2B                     	;# 
  2237     1E2C                     	;# 
  2238     1E2D                     	;# 
  2239     1E2E                     	;# 
  2240     1E2F                     	;# 
  2241     1E30                     	;# 
  2242     1E31                     	;# 
  2243     1E32                     	;# 
  2244     1E33                     	;# 
  2245     1E34                     	;# 
  2246     1E35                     	;# 
  2247     1E36                     	;# 
  2248     1E37                     	;# 
  2249     1E8F                     	;# 
  2250     1E90                     	;# 
  2251     1E91                     	;# 
  2252     1E92                     	;# 
  2253     1E93                     	;# 
  2254     1E94                     	;# 
  2255     1E95                     	;# 
  2256     1E96                     	;# 
  2257     1E97                     	;# 
  2258     1E9C                     	;# 
  2259     1E9D                     	;# 
  2260     1E9E                     	;# 
  2261     1EA1                     	;# 
  2262     1EA2                     	;# 
  2263     1EA3                     	;# 
  2264     1EA4                     	;# 
  2265     1EA9                     	;# 
  2266     1EAA                     	;# 
  2267     1EB1                     	;# 
  2268     1EB2                     	;# 
  2269     1EB8                     	;# 
  2270     1EB9                     	;# 
  2271     1EBA                     	;# 
  2272     1EBB                     	;# 
  2273     1EBC                     	;# 
  2274     1EBD                     	;# 
  2275     1EBE                     	;# 
  2276     1EC3                     	;# 
  2277     1EC5                     	;# 
  2278     1EC6                     	;# 
  2279     1EC7                     	;# 
  2280     1EC8                     	;# 
  2281     1EC9                     	;# 
  2282     1ECA                     	;# 
  2283     1ECB                     	;# 
  2284     1ECC                     	;# 
  2285     1F10                     	;# 
  2286     1F11                     	;# 
  2287     1F12                     	;# 
  2288     1F14                     	;# 
  2289     1F15                     	;# 
  2290     1F20                     	;# 
  2291     1F21                     	;# 
  2292     1F22                     	;# 
  2293     1F23                     	;# 
  2294     1F24                     	;# 
  2295     1F25                     	;# 
  2296     1F38                     	;# 
  2297     1F39                     	;# 
  2298     1F3A                     	;# 
  2299     1F3B                     	;# 
  2300     1F3C                     	;# 
  2301     1F3D                     	;# 
  2302     1F3E                     	;# 
  2303     1F3F                     	;# 
  2304     1F4E                     	;# 
  2305     1F4F                     	;# 
  2306     1F50                     	;# 
  2307     1F51                     	;# 
  2308     1F52                     	;# 
  2309     1F53                     	;# 
  2310     1F54                     	;# 
  2311     1F55                     	;# 
  2312     1FE4                     	;# 
  2313     1FE5                     	;# 
  2314     1FE6                     	;# 
  2315     1FE7                     	;# 
  2316     1FE8                     	;# 
  2317     1FE8                     	;# 
  2318     1FE9                     	;# 
  2319     1FEA                     	;# 
  2320     1FEB                     	;# 
  2321     1FED                     	;# 
  2322     1FEE                     	;# 
  2323     1FEF                     	;# 
  2324     0000                     	;# 
  2325     0001                     	;# 
  2326     0002                     	;# 
  2327     0003                     	;# 
  2328     0004                     	;# 
  2329     0005                     	;# 
  2330     0006                     	;# 
  2331     0007                     	;# 
  2332     0008                     	;# 
  2333     0009                     	;# 
  2334     000A                     	;# 
  2335     000B                     	;# 
  2336     000C                     	;# 
  2337     000E                     	;# 
  2338     0012                     	;# 
  2339     0014                     	;# 
  2340     0018                     	;# 
  2341     001A                     	;# 
  2342     008C                     	;# 
  2343     008C                     	;# 
  2344     008D                     	;# 
  2345     008E                     	;# 
  2346     008E                     	;# 
  2347     008F                     	;# 
  2348     0090                     	;# 
  2349     0090                     	;# 
  2350     0091                     	;# 
  2351     0092                     	;# 
  2352     0092                     	;# 
  2353     0093                     	;# 
  2354     0094                     	;# 
  2355     0094                     	;# 
  2356     0095                     	;# 
  2357     0096                     	;# 
  2358     0096                     	;# 
  2359     0097                     	;# 
  2360     0098                     	;# 
  2361     0099                     	;# 
  2362     009A                     	;# 
  2363     009B                     	;# 
  2364     009B                     	;# 
  2365     009C                     	;# 
  2366     009D                     	;# 
  2367     009D                     	;# 
  2368     009E                     	;# 
  2369     009F                     	;# 
  2370     010C                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     010E                     	;# 
  2374     010F                     	;# 
  2375     010F                     	;# 
  2376     0110                     	;# 
  2377     0111                     	;# 
  2378     0112                     	;# 
  2379     0113                     	;# 
  2380     0114                     	;# 
  2381     0115                     	;# 
  2382     0116                     	;# 
  2383     0117                     	;# 
  2384     0118                     	;# 
  2385     0119                     	;# 
  2386     0119                     	;# 
  2387     0119                     	;# 
  2388     011A                     	;# 
  2389     011A                     	;# 
  2390     011A                     	;# 
  2391     011B                     	;# 
  2392     011B                     	;# 
  2393     011B                     	;# 
  2394     011B                     	;# 
  2395     011B                     	;# 
  2396     011C                     	;# 
  2397     011C                     	;# 
  2398     011C                     	;# 
  2399     011D                     	;# 
  2400     011D                     	;# 
  2401     011D                     	;# 
  2402     011E                     	;# 
  2403     011E                     	;# 
  2404     011E                     	;# 
  2405     011F                     	;# 
  2406     011F                     	;# 
  2407     011F                     	;# 
  2408     011F                     	;# 
  2409     011F                     	;# 
  2410     018C                     	;# 
  2411     018D                     	;# 
  2412     018E                     	;# 
  2413     018F                     	;# 
  2414     0190                     	;# 
  2415     0191                     	;# 
  2416     0192                     	;# 
  2417     0196                     	;# 
  2418     0197                     	;# 
  2419     0198                     	;# 
  2420     0199                     	;# 
  2421     019A                     	;# 
  2422     019B                     	;# 
  2423     019C                     	;# 
  2424     020C                     	;# 
  2425     020D                     	;# 
  2426     020E                     	;# 
  2427     020E                     	;# 
  2428     020F                     	;# 
  2429     020F                     	;# 
  2430     0210                     	;# 
  2431     0210                     	;# 
  2432     0211                     	;# 
  2433     0211                     	;# 
  2434     0212                     	;# 
  2435     0213                     	;# 
  2436     0214                     	;# 
  2437     0214                     	;# 
  2438     0215                     	;# 
  2439     0215                     	;# 
  2440     0216                     	;# 
  2441     0216                     	;# 
  2442     0217                     	;# 
  2443     0217                     	;# 
  2444     0218                     	;# 
  2445     0219                     	;# 
  2446     021A                     	;# 
  2447     021A                     	;# 
  2448     021B                     	;# 
  2449     021B                     	;# 
  2450     021C                     	;# 
  2451     021C                     	;# 
  2452     021D                     	;# 
  2453     021D                     	;# 
  2454     021E                     	;# 
  2455     021F                     	;# 
  2456     028C                     	;# 
  2457     028C                     	;# 
  2458     028D                     	;# 
  2459     028D                     	;# 
  2460     028E                     	;# 
  2461     028F                     	;# 
  2462     0290                     	;# 
  2463     0291                     	;# 
  2464     0292                     	;# 
  2465     0292                     	;# 
  2466     0293                     	;# 
  2467     0293                     	;# 
  2468     0294                     	;# 
  2469     0295                     	;# 
  2470     0296                     	;# 
  2471     0297                     	;# 
  2472     0298                     	;# 
  2473     0298                     	;# 
  2474     0299                     	;# 
  2475     0299                     	;# 
  2476     029A                     	;# 
  2477     029B                     	;# 
  2478     029C                     	;# 
  2479     029D                     	;# 
  2480     029F                     	;# 
  2481     030C                     	;# 
  2482     030C                     	;# 
  2483     030D                     	;# 
  2484     030E                     	;# 
  2485     030F                     	;# 
  2486     0310                     	;# 
  2487     0310                     	;# 
  2488     0311                     	;# 
  2489     0312                     	;# 
  2490     0313                     	;# 
  2491     0314                     	;# 
  2492     0314                     	;# 
  2493     0315                     	;# 
  2494     0316                     	;# 
  2495     0317                     	;# 
  2496     0318                     	;# 
  2497     0318                     	;# 
  2498     0319                     	;# 
  2499     031A                     	;# 
  2500     031B                     	;# 
  2501     038C                     	;# 
  2502     038C                     	;# 
  2503     038D                     	;# 
  2504     038E                     	;# 
  2505     0390                     	;# 
  2506     0390                     	;# 
  2507     0391                     	;# 
  2508     0392                     	;# 
  2509     048C                     	;# 
  2510     048C                     	;# 
  2511     048D                     	;# 
  2512     048E                     	;# 
  2513     048F                     	;# 
  2514     048F                     	;# 
  2515     0490                     	;# 
  2516     0491                     	;# 
  2517     0492                     	;# 
  2518     0492                     	;# 
  2519     0493                     	;# 
  2520     0494                     	;# 
  2521     0495                     	;# 
  2522     0495                     	;# 
  2523     0496                     	;# 
  2524     0497                     	;# 
  2525     0498                     	;# 
  2526     0499                     	;# 
  2527     049A                     	;# 
  2528     049B                     	;# 
  2529     049C                     	;# 
  2530     049D                     	;# 
  2531     058C                     	;# 
  2532     058C                     	;# 
  2533     058D                     	;# 
  2534     058E                     	;# 
  2535     058F                     	;# 
  2536     058F                     	;# 
  2537     0590                     	;# 
  2538     0591                     	;# 
  2539     0592                     	;# 
  2540     0593                     	;# 
  2541     059C                     	;# 
  2542     059C                     	;# 
  2543     059D                     	;# 
  2544     059D                     	;# 
  2545     059E                     	;# 
  2546     059F                     	;# 
  2547     060C                     	;# 
  2548     060C                     	;# 
  2549     060D                     	;# 
  2550     060D                     	;# 
  2551     060E                     	;# 
  2552     060F                     	;# 
  2553     0610                     	;# 
  2554     0611                     	;# 
  2555     0612                     	;# 
  2556     0613                     	;# 
  2557     0614                     	;# 
  2558     0616                     	;# 
  2559     0616                     	;# 
  2560     0617                     	;# 
  2561     0617                     	;# 
  2562     0618                     	;# 
  2563     0619                     	;# 
  2564     061A                     	;# 
  2565     061B                     	;# 
  2566     061C                     	;# 
  2567     061D                     	;# 
  2568     061E                     	;# 
  2569     070C                     	;# 
  2570     070D                     	;# 
  2571     070E                     	;# 
  2572     070F                     	;# 
  2573     0710                     	;# 
  2574     0711                     	;# 
  2575     0712                     	;# 
  2576     0713                     	;# 
  2577     0714                     	;# 
  2578     0716                     	;# 
  2579     0717                     	;# 
  2580     0718                     	;# 
  2581     0719                     	;# 
  2582     071A                     	;# 
  2583     071B                     	;# 
  2584     071C                     	;# 
  2585     071D                     	;# 
  2586     071E                     	;# 
  2587     0796                     	;# 
  2588     0797                     	;# 
  2589     0798                     	;# 
  2590     0799                     	;# 
  2591     079A                     	;# 
  2592     079B                     	;# 
  2593     079C                     	;# 
  2594     079D                     	;# 
  2595     080C                     	;# 
  2596     080D                     	;# 
  2597     080E                     	;# 
  2598     080F                     	;# 
  2599     0810                     	;# 
  2600     0811                     	;# 
  2601     0812                     	;# 
  2602     0813                     	;# 
  2603     0814                     	;# 
  2604     081A                     	;# 
  2605     081A                     	;# 
  2606     081B                     	;# 
  2607     081C                     	;# 
  2608     081C                     	;# 
  2609     081D                     	;# 
  2610     081E                     	;# 
  2611     081F                     	;# 
  2612     088C                     	;# 
  2613     088D                     	;# 
  2614     088E                     	;# 
  2615     088F                     	;# 
  2616     0890                     	;# 
  2617     0891                     	;# 
  2618     0892                     	;# 
  2619     0893                     	;# 
  2620     0895                     	;# 
  2621     0896                     	;# 
  2622     0897                     	;# 
  2623     0898                     	;# 
  2624     0899                     	;# 
  2625     089A                     	;# 
  2626     089B                     	;# 
  2627     090C                     	;# 
  2628     090E                     	;# 
  2629     090F                     	;# 
  2630     091F                     	;# 
  2631     098F                     	;# 
  2632     098F                     	;# 
  2633     0990                     	;# 
  2634     0991                     	;# 
  2635     0992                     	;# 
  2636     0993                     	;# 
  2637     0994                     	;# 
  2638     0995                     	;# 
  2639     0996                     	;# 
  2640     0997                     	;# 
  2641     1E0F                     	;# 
  2642     1E10                     	;# 
  2643     1E11                     	;# 
  2644     1E12                     	;# 
  2645     1E13                     	;# 
  2646     1E14                     	;# 
  2647     1E15                     	;# 
  2648     1E16                     	;# 
  2649     1E17                     	;# 
  2650     1E18                     	;# 
  2651     1E19                     	;# 
  2652     1E1A                     	;# 
  2653     1E1B                     	;# 
  2654     1E1C                     	;# 
  2655     1E1D                     	;# 
  2656     1E1E                     	;# 
  2657     1E1F                     	;# 
  2658     1E20                     	;# 
  2659     1E21                     	;# 
  2660     1E22                     	;# 
  2661     1E23                     	;# 
  2662     1E24                     	;# 
  2663     1E25                     	;# 
  2664     1E26                     	;# 
  2665     1E27                     	;# 
  2666     1E28                     	;# 
  2667     1E29                     	;# 
  2668     1E2A                     	;# 
  2669     1E2B                     	;# 
  2670     1E2C                     	;# 
  2671     1E2D                     	;# 
  2672     1E2E                     	;# 
  2673     1E2F                     	;# 
  2674     1E30                     	;# 
  2675     1E31                     	;# 
  2676     1E32                     	;# 
  2677     1E33                     	;# 
  2678     1E34                     	;# 
  2679     1E35                     	;# 
  2680     1E36                     	;# 
  2681     1E37                     	;# 
  2682     1E8F                     	;# 
  2683     1E90                     	;# 
  2684     1E91                     	;# 
  2685     1E92                     	;# 
  2686     1E93                     	;# 
  2687     1E94                     	;# 
  2688     1E95                     	;# 
  2689     1E96                     	;# 
  2690     1E97                     	;# 
  2691     1E9C                     	;# 
  2692     1E9D                     	;# 
  2693     1E9E                     	;# 
  2694     1EA1                     	;# 
  2695     1EA2                     	;# 
  2696     1EA3                     	;# 
  2697     1EA4                     	;# 
  2698     1EA9                     	;# 
  2699     1EAA                     	;# 
  2700     1EB1                     	;# 
  2701     1EB2                     	;# 
  2702     1EB8                     	;# 
  2703     1EB9                     	;# 
  2704     1EBA                     	;# 
  2705     1EBB                     	;# 
  2706     1EBC                     	;# 
  2707     1EBD                     	;# 
  2708     1EBE                     	;# 
  2709     1EC3                     	;# 
  2710     1EC5                     	;# 
  2711     1EC6                     	;# 
  2712     1EC7                     	;# 
  2713     1EC8                     	;# 
  2714     1EC9                     	;# 
  2715     1ECA                     	;# 
  2716     1ECB                     	;# 
  2717     1ECC                     	;# 
  2718     1F10                     	;# 
  2719     1F11                     	;# 
  2720     1F12                     	;# 
  2721     1F14                     	;# 
  2722     1F15                     	;# 
  2723     1F20                     	;# 
  2724     1F21                     	;# 
  2725     1F22                     	;# 
  2726     1F23                     	;# 
  2727     1F24                     	;# 
  2728     1F25                     	;# 
  2729     1F38                     	;# 
  2730     1F39                     	;# 
  2731     1F3A                     	;# 
  2732     1F3B                     	;# 
  2733     1F3C                     	;# 
  2734     1F3D                     	;# 
  2735     1F3E                     	;# 
  2736     1F3F                     	;# 
  2737     1F4E                     	;# 
  2738     1F4F                     	;# 
  2739     1F50                     	;# 
  2740     1F51                     	;# 
  2741     1F52                     	;# 
  2742     1F53                     	;# 
  2743     1F54                     	;# 
  2744     1F55                     	;# 
  2745     1FE4                     	;# 
  2746     1FE5                     	;# 
  2747     1FE6                     	;# 
  2748     1FE7                     	;# 
  2749     1FE8                     	;# 
  2750     1FE8                     	;# 
  2751     1FE9                     	;# 
  2752     1FEA                     	;# 
  2753     1FEB                     	;# 
  2754     1FED                     	;# 
  2755     1FEE                     	;# 
  2756     1FEF                     	;# 
  2757     0000                     	;# 
  2758     0001                     	;# 
  2759     0002                     	;# 
  2760     0003                     	;# 
  2761     0004                     	;# 
  2762     0005                     	;# 
  2763     0006                     	;# 
  2764     0007                     	;# 
  2765     0008                     	;# 
  2766     0009                     	;# 
  2767     000A                     	;# 
  2768     000B                     	;# 
  2769     000C                     	;# 
  2770     000E                     	;# 
  2771     0012                     	;# 
  2772     0014                     	;# 
  2773     0018                     	;# 
  2774     001A                     	;# 
  2775     008C                     	;# 
  2776     008C                     	;# 
  2777     008D                     	;# 
  2778     008E                     	;# 
  2779     008E                     	;# 
  2780     008F                     	;# 
  2781     0090                     	;# 
  2782     0090                     	;# 
  2783     0091                     	;# 
  2784     0092                     	;# 
  2785     0092                     	;# 
  2786     0093                     	;# 
  2787     0094                     	;# 
  2788     0094                     	;# 
  2789     0095                     	;# 
  2790     0096                     	;# 
  2791     0096                     	;# 
  2792     0097                     	;# 
  2793     0098                     	;# 
  2794     0099                     	;# 
  2795     009A                     	;# 
  2796     009B                     	;# 
  2797     009B                     	;# 
  2798     009C                     	;# 
  2799     009D                     	;# 
  2800     009D                     	;# 
  2801     009E                     	;# 
  2802     009F                     	;# 
  2803     010C                     	;# 
  2804     010C                     	;# 
  2805     010D                     	;# 
  2806     010E                     	;# 
  2807     010F                     	;# 
  2808     010F                     	;# 
  2809     0110                     	;# 
  2810     0111                     	;# 
  2811     0112                     	;# 
  2812     0113                     	;# 
  2813     0114                     	;# 
  2814     0115                     	;# 
  2815     0116                     	;# 
  2816     0117                     	;# 
  2817     0118                     	;# 
  2818     0119                     	;# 
  2819     0119                     	;# 
  2820     0119                     	;# 
  2821     011A                     	;# 
  2822     011A                     	;# 
  2823     011A                     	;# 
  2824     011B                     	;# 
  2825     011B                     	;# 
  2826     011B                     	;# 
  2827     011B                     	;# 
  2828     011B                     	;# 
  2829     011C                     	;# 
  2830     011C                     	;# 
  2831     011C                     	;# 
  2832     011D                     	;# 
  2833     011D                     	;# 
  2834     011D                     	;# 
  2835     011E                     	;# 
  2836     011E                     	;# 
  2837     011E                     	;# 
  2838     011F                     	;# 
  2839     011F                     	;# 
  2840     011F                     	;# 
  2841     011F                     	;# 
  2842     011F                     	;# 
  2843     018C                     	;# 
  2844     018D                     	;# 
  2845     018E                     	;# 
  2846     018F                     	;# 
  2847     0190                     	;# 
  2848     0191                     	;# 
  2849     0192                     	;# 
  2850     0196                     	;# 
  2851     0197                     	;# 
  2852     0198                     	;# 
  2853     0199                     	;# 
  2854     019A                     	;# 
  2855     019B                     	;# 
  2856     019C                     	;# 
  2857     020C                     	;# 
  2858     020D                     	;# 
  2859     020E                     	;# 
  2860     020E                     	;# 
  2861     020F                     	;# 
  2862     020F                     	;# 
  2863     0210                     	;# 
  2864     0210                     	;# 
  2865     0211                     	;# 
  2866     0211                     	;# 
  2867     0212                     	;# 
  2868     0213                     	;# 
  2869     0214                     	;# 
  2870     0214                     	;# 
  2871     0215                     	;# 
  2872     0215                     	;# 
  2873     0216                     	;# 
  2874     0216                     	;# 
  2875     0217                     	;# 
  2876     0217                     	;# 
  2877     0218                     	;# 
  2878     0219                     	;# 
  2879     021A                     	;# 
  2880     021A                     	;# 
  2881     021B                     	;# 
  2882     021B                     	;# 
  2883     021C                     	;# 
  2884     021C                     	;# 
  2885     021D                     	;# 
  2886     021D                     	;# 
  2887     021E                     	;# 
  2888     021F                     	;# 
  2889     028C                     	;# 
  2890     028C                     	;# 
  2891     028D                     	;# 
  2892     028D                     	;# 
  2893     028E                     	;# 
  2894     028F                     	;# 
  2895     0290                     	;# 
  2896     0291                     	;# 
  2897     0292                     	;# 
  2898     0292                     	;# 
  2899     0293                     	;# 
  2900     0293                     	;# 
  2901     0294                     	;# 
  2902     0295                     	;# 
  2903     0296                     	;# 
  2904     0297                     	;# 
  2905     0298                     	;# 
  2906     0298                     	;# 
  2907     0299                     	;# 
  2908     0299                     	;# 
  2909     029A                     	;# 
  2910     029B                     	;# 
  2911     029C                     	;# 
  2912     029D                     	;# 
  2913     029F                     	;# 
  2914     030C                     	;# 
  2915     030C                     	;# 
  2916     030D                     	;# 
  2917     030E                     	;# 
  2918     030F                     	;# 
  2919     0310                     	;# 
  2920     0310                     	;# 
  2921     0311                     	;# 
  2922     0312                     	;# 
  2923     0313                     	;# 
  2924     0314                     	;# 
  2925     0314                     	;# 
  2926     0315                     	;# 
  2927     0316                     	;# 
  2928     0317                     	;# 
  2929     0318                     	;# 
  2930     0318                     	;# 
  2931     0319                     	;# 
  2932     031A                     	;# 
  2933     031B                     	;# 
  2934     038C                     	;# 
  2935     038C                     	;# 
  2936     038D                     	;# 
  2937     038E                     	;# 
  2938     0390                     	;# 
  2939     0390                     	;# 
  2940     0391                     	;# 
  2941     0392                     	;# 
  2942     048C                     	;# 
  2943     048C                     	;# 
  2944     048D                     	;# 
  2945     048E                     	;# 
  2946     048F                     	;# 
  2947     048F                     	;# 
  2948     0490                     	;# 
  2949     0491                     	;# 
  2950     0492                     	;# 
  2951     0492                     	;# 
  2952     0493                     	;# 
  2953     0494                     	;# 
  2954     0495                     	;# 
  2955     0495                     	;# 
  2956     0496                     	;# 
  2957     0497                     	;# 
  2958     0498                     	;# 
  2959     0499                     	;# 
  2960     049A                     	;# 
  2961     049B                     	;# 
  2962     049C                     	;# 
  2963     049D                     	;# 
  2964     058C                     	;# 
  2965     058C                     	;# 
  2966     058D                     	;# 
  2967     058E                     	;# 
  2968     058F                     	;# 
  2969     058F                     	;# 
  2970     0590                     	;# 
  2971     0591                     	;# 
  2972     0592                     	;# 
  2973     0593                     	;# 
  2974     059C                     	;# 
  2975     059C                     	;# 
  2976     059D                     	;# 
  2977     059D                     	;# 
  2978     059E                     	;# 
  2979     059F                     	;# 
  2980     060C                     	;# 
  2981     060C                     	;# 
  2982     060D                     	;# 
  2983     060D                     	;# 
  2984     060E                     	;# 
  2985     060F                     	;# 
  2986     0610                     	;# 
  2987     0611                     	;# 
  2988     0612                     	;# 
  2989     0613                     	;# 
  2990     0614                     	;# 
  2991     0616                     	;# 
  2992     0616                     	;# 
  2993     0617                     	;# 
  2994     0617                     	;# 
  2995     0618                     	;# 
  2996     0619                     	;# 
  2997     061A                     	;# 
  2998     061B                     	;# 
  2999     061C                     	;# 
  3000     061D                     	;# 
  3001     061E                     	;# 
  3002     070C                     	;# 
  3003     070D                     	;# 
  3004     070E                     	;# 
  3005     070F                     	;# 
  3006     0710                     	;# 
  3007     0711                     	;# 
  3008     0712                     	;# 
  3009     0713                     	;# 
  3010     0714                     	;# 
  3011     0716                     	;# 
  3012     0717                     	;# 
  3013     0718                     	;# 
  3014     0719                     	;# 
  3015     071A                     	;# 
  3016     071B                     	;# 
  3017     071C                     	;# 
  3018     071D                     	;# 
  3019     071E                     	;# 
  3020     0796                     	;# 
  3021     0797                     	;# 
  3022     0798                     	;# 
  3023     0799                     	;# 
  3024     079A                     	;# 
  3025     079B                     	;# 
  3026     079C                     	;# 
  3027     079D                     	;# 
  3028     080C                     	;# 
  3029     080D                     	;# 
  3030     080E                     	;# 
  3031     080F                     	;# 
  3032     0810                     	;# 
  3033     0811                     	;# 
  3034     0812                     	;# 
  3035     0813                     	;# 
  3036     0814                     	;# 
  3037     081A                     	;# 
  3038     081A                     	;# 
  3039     081B                     	;# 
  3040     081C                     	;# 
  3041     081C                     	;# 
  3042     081D                     	;# 
  3043     081E                     	;# 
  3044     081F                     	;# 
  3045     088C                     	;# 
  3046     088D                     	;# 
  3047     088E                     	;# 
  3048     088F                     	;# 
  3049     0890                     	;# 
  3050     0891                     	;# 
  3051     0892                     	;# 
  3052     0893                     	;# 
  3053     0895                     	;# 
  3054     0896                     	;# 
  3055     0897                     	;# 
  3056     0898                     	;# 
  3057     0899                     	;# 
  3058     089A                     	;# 
  3059     089B                     	;# 
  3060     090C                     	;# 
  3061     090E                     	;# 
  3062     090F                     	;# 
  3063     091F                     	;# 
  3064     098F                     	;# 
  3065     098F                     	;# 
  3066     0990                     	;# 
  3067     0991                     	;# 
  3068     0992                     	;# 
  3069     0993                     	;# 
  3070     0994                     	;# 
  3071     0995                     	;# 
  3072     0996                     	;# 
  3073     0997                     	;# 
  3074     1E0F                     	;# 
  3075     1E10                     	;# 
  3076     1E11                     	;# 
  3077     1E12                     	;# 
  3078     1E13                     	;# 
  3079     1E14                     	;# 
  3080     1E15                     	;# 
  3081     1E16                     	;# 
  3082     1E17                     	;# 
  3083     1E18                     	;# 
  3084     1E19                     	;# 
  3085     1E1A                     	;# 
  3086     1E1B                     	;# 
  3087     1E1C                     	;# 
  3088     1E1D                     	;# 
  3089     1E1E                     	;# 
  3090     1E1F                     	;# 
  3091     1E20                     	;# 
  3092     1E21                     	;# 
  3093     1E22                     	;# 
  3094     1E23                     	;# 
  3095     1E24                     	;# 
  3096     1E25                     	;# 
  3097     1E26                     	;# 
  3098     1E27                     	;# 
  3099     1E28                     	;# 
  3100     1E29                     	;# 
  3101     1E2A                     	;# 
  3102     1E2B                     	;# 
  3103     1E2C                     	;# 
  3104     1E2D                     	;# 
  3105     1E2E                     	;# 
  3106     1E2F                     	;# 
  3107     1E30                     	;# 
  3108     1E31                     	;# 
  3109     1E32                     	;# 
  3110     1E33                     	;# 
  3111     1E34                     	;# 
  3112     1E35                     	;# 
  3113     1E36                     	;# 
  3114     1E37                     	;# 
  3115     1E8F                     	;# 
  3116     1E90                     	;# 
  3117     1E91                     	;# 
  3118     1E92                     	;# 
  3119     1E93                     	;# 
  3120     1E94                     	;# 
  3121     1E95                     	;# 
  3122     1E96                     	;# 
  3123     1E97                     	;# 
  3124     1E9C                     	;# 
  3125     1E9D                     	;# 
  3126     1E9E                     	;# 
  3127     1EA1                     	;# 
  3128     1EA2                     	;# 
  3129     1EA3                     	;# 
  3130     1EA4                     	;# 
  3131     1EA9                     	;# 
  3132     1EAA                     	;# 
  3133     1EB1                     	;# 
  3134     1EB2                     	;# 
  3135     1EB8                     	;# 
  3136     1EB9                     	;# 
  3137     1EBA                     	;# 
  3138     1EBB                     	;# 
  3139     1EBC                     	;# 
  3140     1EBD                     	;# 
  3141     1EBE                     	;# 
  3142     1EC3                     	;# 
  3143     1EC5                     	;# 
  3144     1EC6                     	;# 
  3145     1EC7                     	;# 
  3146     1EC8                     	;# 
  3147     1EC9                     	;# 
  3148     1ECA                     	;# 
  3149     1ECB                     	;# 
  3150     1ECC                     	;# 
  3151     1F10                     	;# 
  3152     1F11                     	;# 
  3153     1F12                     	;# 
  3154     1F14                     	;# 
  3155     1F15                     	;# 
  3156     1F20                     	;# 
  3157     1F21                     	;# 
  3158     1F22                     	;# 
  3159     1F23                     	;# 
  3160     1F24                     	;# 
  3161     1F25                     	;# 
  3162     1F38                     	;# 
  3163     1F39                     	;# 
  3164     1F3A                     	;# 
  3165     1F3B                     	;# 
  3166     1F3C                     	;# 
  3167     1F3D                     	;# 
  3168     1F3E                     	;# 
  3169     1F3F                     	;# 
  3170     1F4E                     	;# 
  3171     1F4F                     	;# 
  3172     1F50                     	;# 
  3173     1F51                     	;# 
  3174     1F52                     	;# 
  3175     1F53                     	;# 
  3176     1F54                     	;# 
  3177     1F55                     	;# 
  3178     1FE4                     	;# 
  3179     1FE5                     	;# 
  3180     1FE6                     	;# 
  3181     1FE7                     	;# 
  3182     1FE8                     	;# 
  3183     1FE8                     	;# 
  3184     1FE9                     	;# 
  3185     1FEA                     	;# 
  3186     1FEB                     	;# 
  3187     1FED                     	;# 
  3188     1FEE                     	;# 
  3189     1FEF                     	;# 
  3190     0000                     	;# 
  3191     0001                     	;# 
  3192     0002                     	;# 
  3193     0003                     	;# 
  3194     0004                     	;# 
  3195     0005                     	;# 
  3196     0006                     	;# 
  3197     0007                     	;# 
  3198     0008                     	;# 
  3199     0009                     	;# 
  3200     000A                     	;# 
  3201     000B                     	;# 
  3202     000C                     	;# 
  3203     000E                     	;# 
  3204     0012                     	;# 
  3205     0014                     	;# 
  3206     0018                     	;# 
  3207     001A                     	;# 
  3208     008C                     	;# 
  3209     008C                     	;# 
  3210     008D                     	;# 
  3211     008E                     	;# 
  3212     008E                     	;# 
  3213     008F                     	;# 
  3214     0090                     	;# 
  3215     0090                     	;# 
  3216     0091                     	;# 
  3217     0092                     	;# 
  3218     0092                     	;# 
  3219     0093                     	;# 
  3220     0094                     	;# 
  3221     0094                     	;# 
  3222     0095                     	;# 
  3223     0096                     	;# 
  3224     0096                     	;# 
  3225     0097                     	;# 
  3226     0098                     	;# 
  3227     0099                     	;# 
  3228     009A                     	;# 
  3229     009B                     	;# 
  3230     009B                     	;# 
  3231     009C                     	;# 
  3232     009D                     	;# 
  3233     009D                     	;# 
  3234     009E                     	;# 
  3235     009F                     	;# 
  3236     010C                     	;# 
  3237     010C                     	;# 
  3238     010D                     	;# 
  3239     010E                     	;# 
  3240     010F                     	;# 
  3241     010F                     	;# 
  3242     0110                     	;# 
  3243     0111                     	;# 
  3244     0112                     	;# 
  3245     0113                     	;# 
  3246     0114                     	;# 
  3247     0115                     	;# 
  3248     0116                     	;# 
  3249     0117                     	;# 
  3250     0118                     	;# 
  3251     0119                     	;# 
  3252     0119                     	;# 
  3253     0119                     	;# 
  3254     011A                     	;# 
  3255     011A                     	;# 
  3256     011A                     	;# 
  3257     011B                     	;# 
  3258     011B                     	;# 
  3259     011B                     	;# 
  3260     011B                     	;# 
  3261     011B                     	;# 
  3262     011C                     	;# 
  3263     011C                     	;# 
  3264     011C                     	;# 
  3265     011D                     	;# 
  3266     011D                     	;# 
  3267     011D                     	;# 
  3268     011E                     	;# 
  3269     011E                     	;# 
  3270     011E                     	;# 
  3271     011F                     	;# 
  3272     011F                     	;# 
  3273     011F                     	;# 
  3274     011F                     	;# 
  3275     011F                     	;# 
  3276     018C                     	;# 
  3277     018D                     	;# 
  3278     018E                     	;# 
  3279     018F                     	;# 
  3280     0190                     	;# 
  3281     0191                     	;# 
  3282     0192                     	;# 
  3283     0196                     	;# 
  3284     0197                     	;# 
  3285     0198                     	;# 
  3286     0199                     	;# 
  3287     019A                     	;# 
  3288     019B                     	;# 
  3289     019C                     	;# 
  3290     020C                     	;# 
  3291     020D                     	;# 
  3292     020E                     	;# 
  3293     020E                     	;# 
  3294     020F                     	;# 
  3295     020F                     	;# 
  3296     0210                     	;# 
  3297     0210                     	;# 
  3298     0211                     	;# 
  3299     0211                     	;# 
  3300     0212                     	;# 
  3301     0213                     	;# 
  3302     0214                     	;# 
  3303     0214                     	;# 
  3304     0215                     	;# 
  3305     0215                     	;# 
  3306     0216                     	;# 
  3307     0216                     	;# 
  3308     0217                     	;# 
  3309     0217                     	;# 
  3310     0218                     	;# 
  3311     0219                     	;# 
  3312     021A                     	;# 
  3313     021A                     	;# 
  3314     021B                     	;# 
  3315     021B                     	;# 
  3316     021C                     	;# 
  3317     021C                     	;# 
  3318     021D                     	;# 
  3319     021D                     	;# 
  3320     021E                     	;# 
  3321     021F                     	;# 
  3322     028C                     	;# 
  3323     028C                     	;# 
  3324     028D                     	;# 
  3325     028D                     	;# 
  3326     028E                     	;# 
  3327     028F                     	;# 
  3328     0290                     	;# 
  3329     0291                     	;# 
  3330     0292                     	;# 
  3331     0292                     	;# 
  3332     0293                     	;# 
  3333     0293                     	;# 
  3334     0294                     	;# 
  3335     0295                     	;# 
  3336     0296                     	;# 
  3337     0297                     	;# 
  3338     0298                     	;# 
  3339     0298                     	;# 
  3340     0299                     	;# 
  3341     0299                     	;# 
  3342     029A                     	;# 
  3343     029B                     	;# 
  3344     029C                     	;# 
  3345     029D                     	;# 
  3346     029F                     	;# 
  3347     030C                     	;# 
  3348     030C                     	;# 
  3349     030D                     	;# 
  3350     030E                     	;# 
  3351     030F                     	;# 
  3352     0310                     	;# 
  3353     0310                     	;# 
  3354     0311                     	;# 
  3355     0312                     	;# 
  3356     0313                     	;# 
  3357     0314                     	;# 
  3358     0314                     	;# 
  3359     0315                     	;# 
  3360     0316                     	;# 
  3361     0317                     	;# 
  3362     0318                     	;# 
  3363     0318                     	;# 
  3364     0319                     	;# 
  3365     031A                     	;# 
  3366     031B                     	;# 
  3367     038C                     	;# 
  3368     038C                     	;# 
  3369     038D                     	;# 
  3370     038E                     	;# 
  3371     0390                     	;# 
  3372     0390                     	;# 
  3373     0391                     	;# 
  3374     0392                     	;# 
  3375     048C                     	;# 
  3376     048C                     	;# 
  3377     048D                     	;# 
  3378     048E                     	;# 
  3379     048F                     	;# 
  3380     048F                     	;# 
  3381     0490                     	;# 
  3382     0491                     	;# 
  3383     0492                     	;# 
  3384     0492                     	;# 
  3385     0493                     	;# 
  3386     0494                     	;# 
  3387     0495                     	;# 
  3388     0495                     	;# 
  3389     0496                     	;# 
  3390     0497                     	;# 
  3391     0498                     	;# 
  3392     0499                     	;# 
  3393     049A                     	;# 
  3394     049B                     	;# 
  3395     049C                     	;# 
  3396     049D                     	;# 
  3397     058C                     	;# 
  3398     058C                     	;# 
  3399     058D                     	;# 
  3400     058E                     	;# 
  3401     058F                     	;# 
  3402     058F                     	;# 
  3403     0590                     	;# 
  3404     0591                     	;# 
  3405     0592                     	;# 
  3406     0593                     	;# 
  3407     059C                     	;# 
  3408     059C                     	;# 
  3409     059D                     	;# 
  3410     059D                     	;# 
  3411     059E                     	;# 
  3412     059F                     	;# 
  3413     060C                     	;# 
  3414     060C                     	;# 
  3415     060D                     	;# 
  3416     060D                     	;# 
  3417     060E                     	;# 
  3418     060F                     	;# 
  3419     0610                     	;# 
  3420     0611                     	;# 
  3421     0612                     	;# 
  3422     0613                     	;# 
  3423     0614                     	;# 
  3424     0616                     	;# 
  3425     0616                     	;# 
  3426     0617                     	;# 
  3427     0617                     	;# 
  3428     0618                     	;# 
  3429     0619                     	;# 
  3430     061A                     	;# 
  3431     061B                     	;# 
  3432     061C                     	;# 
  3433     061D                     	;# 
  3434     061E                     	;# 
  3435     070C                     	;# 
  3436     070D                     	;# 
  3437     070E                     	;# 
  3438     070F                     	;# 
  3439     0710                     	;# 
  3440     0711                     	;# 
  3441     0712                     	;# 
  3442     0713                     	;# 
  3443     0714                     	;# 
  3444     0716                     	;# 
  3445     0717                     	;# 
  3446     0718                     	;# 
  3447     0719                     	;# 
  3448     071A                     	;# 
  3449     071B                     	;# 
  3450     071C                     	;# 
  3451     071D                     	;# 
  3452     071E                     	;# 
  3453     0796                     	;# 
  3454     0797                     	;# 
  3455     0798                     	;# 
  3456     0799                     	;# 
  3457     079A                     	;# 
  3458     079B                     	;# 
  3459     079C                     	;# 
  3460     079D                     	;# 
  3461     080C                     	;# 
  3462     080D                     	;# 
  3463     080E                     	;# 
  3464     080F                     	;# 
  3465     0810                     	;# 
  3466     0811                     	;# 
  3467     0812                     	;# 
  3468     0813                     	;# 
  3469     0814                     	;# 
  3470     081A                     	;# 
  3471     081A                     	;# 
  3472     081B                     	;# 
  3473     081C                     	;# 
  3474     081C                     	;# 
  3475     081D                     	;# 
  3476     081E                     	;# 
  3477     081F                     	;# 
  3478     088C                     	;# 
  3479     088D                     	;# 
  3480     088E                     	;# 
  3481     088F                     	;# 
  3482     0890                     	;# 
  3483     0891                     	;# 
  3484     0892                     	;# 
  3485     0893                     	;# 
  3486     0895                     	;# 
  3487     0896                     	;# 
  3488     0897                     	;# 
  3489     0898                     	;# 
  3490     0899                     	;# 
  3491     089A                     	;# 
  3492     089B                     	;# 
  3493     090C                     	;# 
  3494     090E                     	;# 
  3495     090F                     	;# 
  3496     091F                     	;# 
  3497     098F                     	;# 
  3498     098F                     	;# 
  3499     0990                     	;# 
  3500     0991                     	;# 
  3501     0992                     	;# 
  3502     0993                     	;# 
  3503     0994                     	;# 
  3504     0995                     	;# 
  3505     0996                     	;# 
  3506     0997                     	;# 
  3507     1E0F                     	;# 
  3508     1E10                     	;# 
  3509     1E11                     	;# 
  3510     1E12                     	;# 
  3511     1E13                     	;# 
  3512     1E14                     	;# 
  3513     1E15                     	;# 
  3514     1E16                     	;# 
  3515     1E17                     	;# 
  3516     1E18                     	;# 
  3517     1E19                     	;# 
  3518     1E1A                     	;# 
  3519     1E1B                     	;# 
  3520     1E1C                     	;# 
  3521     1E1D                     	;# 
  3522     1E1E                     	;# 
  3523     1E1F                     	;# 
  3524     1E20                     	;# 
  3525     1E21                     	;# 
  3526     1E22                     	;# 
  3527     1E23                     	;# 
  3528     1E24                     	;# 
  3529     1E25                     	;# 
  3530     1E26                     	;# 
  3531     1E27                     	;# 
  3532     1E28                     	;# 
  3533     1E29                     	;# 
  3534     1E2A                     	;# 
  3535     1E2B                     	;# 
  3536     1E2C                     	;# 
  3537     1E2D                     	;# 
  3538     1E2E                     	;# 
  3539     1E2F                     	;# 
  3540     1E30                     	;# 
  3541     1E31                     	;# 
  3542     1E32                     	;# 
  3543     1E33                     	;# 
  3544     1E34                     	;# 
  3545     1E35                     	;# 
  3546     1E36                     	;# 
  3547     1E37                     	;# 
  3548     1E8F                     	;# 
  3549     1E90                     	;# 
  3550     1E91                     	;# 
  3551     1E92                     	;# 
  3552     1E93                     	;# 
  3553     1E94                     	;# 
  3554     1E95                     	;# 
  3555     1E96                     	;# 
  3556     1E97                     	;# 
  3557     1E9C                     	;# 
  3558     1E9D                     	;# 
  3559     1E9E                     	;# 
  3560     1EA1                     	;# 
  3561     1EA2                     	;# 
  3562     1EA3                     	;# 
  3563     1EA4                     	;# 
  3564     1EA9                     	;# 
  3565     1EAA                     	;# 
  3566     1EB1                     	;# 
  3567     1EB2                     	;# 
  3568     1EB8                     	;# 
  3569     1EB9                     	;# 
  3570     1EBA                     	;# 
  3571     1EBB                     	;# 
  3572     1EBC                     	;# 
  3573     1EBD                     	;# 
  3574     1EBE                     	;# 
  3575     1EC3                     	;# 
  3576     1EC5                     	;# 
  3577     1EC6                     	;# 
  3578     1EC7                     	;# 
  3579     1EC8                     	;# 
  3580     1EC9                     	;# 
  3581     1ECA                     	;# 
  3582     1ECB                     	;# 
  3583     1ECC                     	;# 
  3584     1F10                     	;# 
  3585     1F11                     	;# 
  3586     1F12                     	;# 
  3587     1F14                     	;# 
  3588     1F15                     	;# 
  3589     1F20                     	;# 
  3590     1F21                     	;# 
  3591     1F22                     	;# 
  3592     1F23                     	;# 
  3593     1F24                     	;# 
  3594     1F25                     	;# 
  3595     1F38                     	;# 
  3596     1F39                     	;# 
  3597     1F3A                     	;# 
  3598     1F3B                     	;# 
  3599     1F3C                     	;# 
  3600     1F3D                     	;# 
  3601     1F3E                     	;# 
  3602     1F3F                     	;# 
  3603     1F4E                     	;# 
  3604     1F4F                     	;# 
  3605     1F50                     	;# 
  3606     1F51                     	;# 
  3607     1F52                     	;# 
  3608     1F53                     	;# 
  3609     1F54                     	;# 
  3610     1F55                     	;# 
  3611     1FE4                     	;# 
  3612     1FE5                     	;# 
  3613     1FE6                     	;# 
  3614     1FE7                     	;# 
  3615     1FE8                     	;# 
  3616     1FE8                     	;# 
  3617     1FE9                     	;# 
  3618     1FEA                     	;# 
  3619     1FEB                     	;# 
  3620     1FED                     	;# 
  3621     1FEE                     	;# 
  3622     1FEF                     	;# 
  3623     0000                     	;# 
  3624     0001                     	;# 
  3625     0002                     	;# 
  3626     0003                     	;# 
  3627     0004                     	;# 
  3628     0005                     	;# 
  3629     0006                     	;# 
  3630     0007                     	;# 
  3631     0008                     	;# 
  3632     0009                     	;# 
  3633     000A                     	;# 
  3634     000B                     	;# 
  3635     000C                     	;# 
  3636     000E                     	;# 
  3637     0012                     	;# 
  3638     0014                     	;# 
  3639     0018                     	;# 
  3640     001A                     	;# 
  3641     008C                     	;# 
  3642     008C                     	;# 
  3643     008D                     	;# 
  3644     008E                     	;# 
  3645     008E                     	;# 
  3646     008F                     	;# 
  3647     0090                     	;# 
  3648     0090                     	;# 
  3649     0091                     	;# 
  3650     0092                     	;# 
  3651     0092                     	;# 
  3652     0093                     	;# 
  3653     0094                     	;# 
  3654     0094                     	;# 
  3655     0095                     	;# 
  3656     0096                     	;# 
  3657     0096                     	;# 
  3658     0097                     	;# 
  3659     0098                     	;# 
  3660     0099                     	;# 
  3661     009A                     	;# 
  3662     009B                     	;# 
  3663     009B                     	;# 
  3664     009C                     	;# 
  3665     009D                     	;# 
  3666     009D                     	;# 
  3667     009E                     	;# 
  3668     009F                     	;# 
  3669     010C                     	;# 
  3670     010C                     	;# 
  3671     010D                     	;# 
  3672     010E                     	;# 
  3673     010F                     	;# 
  3674     010F                     	;# 
  3675     0110                     	;# 
  3676     0111                     	;# 
  3677     0112                     	;# 
  3678     0113                     	;# 
  3679     0114                     	;# 
  3680     0115                     	;# 
  3681     0116                     	;# 
  3682     0117                     	;# 
  3683     0118                     	;# 
  3684     0119                     	;# 
  3685     0119                     	;# 
  3686     0119                     	;# 
  3687     011A                     	;# 
  3688     011A                     	;# 
  3689     011A                     	;# 
  3690     011B                     	;# 
  3691     011B                     	;# 
  3692     011B                     	;# 
  3693     011B                     	;# 
  3694     011B                     	;# 
  3695     011C                     	;# 
  3696     011C                     	;# 
  3697     011C                     	;# 
  3698     011D                     	;# 
  3699     011D                     	;# 
  3700     011D                     	;# 
  3701     011E                     	;# 
  3702     011E                     	;# 
  3703     011E                     	;# 
  3704     011F                     	;# 
  3705     011F                     	;# 
  3706     011F                     	;# 
  3707     011F                     	;# 
  3708     011F                     	;# 
  3709     018C                     	;# 
  3710     018D                     	;# 
  3711     018E                     	;# 
  3712     018F                     	;# 
  3713     0190                     	;# 
  3714     0191                     	;# 
  3715     0192                     	;# 
  3716     0196                     	;# 
  3717     0197                     	;# 
  3718     0198                     	;# 
  3719     0199                     	;# 
  3720     019A                     	;# 
  3721     019B                     	;# 
  3722     019C                     	;# 
  3723     020C                     	;# 
  3724     020D                     	;# 
  3725     020E                     	;# 
  3726     020E                     	;# 
  3727     020F                     	;# 
  3728     020F                     	;# 
  3729     0210                     	;# 
  3730     0210                     	;# 
  3731     0211                     	;# 
  3732     0211                     	;# 
  3733     0212                     	;# 
  3734     0213                     	;# 
  3735     0214                     	;# 
  3736     0214                     	;# 
  3737     0215                     	;# 
  3738     0215                     	;# 
  3739     0216                     	;# 
  3740     0216                     	;# 
  3741     0217                     	;# 
  3742     0217                     	;# 
  3743     0218                     	;# 
  3744     0219                     	;# 
  3745     021A                     	;# 
  3746     021A                     	;# 
  3747     021B                     	;# 
  3748     021B                     	;# 
  3749     021C                     	;# 
  3750     021C                     	;# 
  3751     021D                     	;# 
  3752     021D                     	;# 
  3753     021E                     	;# 
  3754     021F                     	;# 
  3755     028C                     	;# 
  3756     028C                     	;# 
  3757     028D                     	;# 
  3758     028D                     	;# 
  3759     028E                     	;# 
  3760     028F                     	;# 
  3761     0290                     	;# 
  3762     0291                     	;# 
  3763     0292                     	;# 
  3764     0292                     	;# 
  3765     0293                     	;# 
  3766     0293                     	;# 
  3767     0294                     	;# 
  3768     0295                     	;# 
  3769     0296                     	;# 
  3770     0297                     	;# 
  3771     0298                     	;# 
  3772     0298                     	;# 
  3773     0299                     	;# 
  3774     0299                     	;# 
  3775     029A                     	;# 
  3776     029B                     	;# 
  3777     029C                     	;# 
  3778     029D                     	;# 
  3779     029F                     	;# 
  3780     030C                     	;# 
  3781     030C                     	;# 
  3782     030D                     	;# 
  3783     030E                     	;# 
  3784     030F                     	;# 
  3785     0310                     	;# 
  3786     0310                     	;# 
  3787     0311                     	;# 
  3788     0312                     	;# 
  3789     0313                     	;# 
  3790     0314                     	;# 
  3791     0314                     	;# 
  3792     0315                     	;# 
  3793     0316                     	;# 
  3794     0317                     	;# 
  3795     0318                     	;# 
  3796     0318                     	;# 
  3797     0319                     	;# 
  3798     031A                     	;# 
  3799     031B                     	;# 
  3800     038C                     	;# 
  3801     038C                     	;# 
  3802     038D                     	;# 
  3803     038E                     	;# 
  3804     0390                     	;# 
  3805     0390                     	;# 
  3806     0391                     	;# 
  3807     0392                     	;# 
  3808     048C                     	;# 
  3809     048C                     	;# 
  3810     048D                     	;# 
  3811     048E                     	;# 
  3812     048F                     	;# 
  3813     048F                     	;# 
  3814     0490                     	;# 
  3815     0491                     	;# 
  3816     0492                     	;# 
  3817     0492                     	;# 
  3818     0493                     	;# 
  3819     0494                     	;# 
  3820     0495                     	;# 
  3821     0495                     	;# 
  3822     0496                     	;# 
  3823     0497                     	;# 
  3824     0498                     	;# 
  3825     0499                     	;# 
  3826     049A                     	;# 
  3827     049B                     	;# 
  3828     049C                     	;# 
  3829     049D                     	;# 
  3830     058C                     	;# 
  3831     058C                     	;# 
  3832     058D                     	;# 
  3833     058E                     	;# 
  3834     058F                     	;# 
  3835     058F                     	;# 
  3836     0590                     	;# 
  3837     0591                     	;# 
  3838     0592                     	;# 
  3839     0593                     	;# 
  3840     059C                     	;# 
  3841     059C                     	;# 
  3842     059D                     	;# 
  3843     059D                     	;# 
  3844     059E                     	;# 
  3845     059F                     	;# 
  3846     060C                     	;# 
  3847     060C                     	;# 
  3848     060D                     	;# 
  3849     060D                     	;# 
  3850     060E                     	;# 
  3851     060F                     	;# 
  3852     0610                     	;# 
  3853     0611                     	;# 
  3854     0612                     	;# 
  3855     0613                     	;# 
  3856     0614                     	;# 
  3857     0616                     	;# 
  3858     0616                     	;# 
  3859     0617                     	;# 
  3860     0617                     	;# 
  3861     0618                     	;# 
  3862     0619                     	;# 
  3863     061A                     	;# 
  3864     061B                     	;# 
  3865     061C                     	;# 
  3866     061D                     	;# 
  3867     061E                     	;# 
  3868     070C                     	;# 
  3869     070D                     	;# 
  3870     070E                     	;# 
  3871     070F                     	;# 
  3872     0710                     	;# 
  3873     0711                     	;# 
  3874     0712                     	;# 
  3875     0713                     	;# 
  3876     0714                     	;# 
  3877     0716                     	;# 
  3878     0717                     	;# 
  3879     0718                     	;# 
  3880     0719                     	;# 
  3881     071A                     	;# 
  3882     071B                     	;# 
  3883     071C                     	;# 
  3884     071D                     	;# 
  3885     071E                     	;# 
  3886     0796                     	;# 
  3887     0797                     	;# 
  3888     0798                     	;# 
  3889     0799                     	;# 
  3890     079A                     	;# 
  3891     079B                     	;# 
  3892     079C                     	;# 
  3893     079D                     	;# 
  3894     080C                     	;# 
  3895     080D                     	;# 
  3896     080E                     	;# 
  3897     080F                     	;# 
  3898     0810                     	;# 
  3899     0811                     	;# 
  3900     0812                     	;# 
  3901     0813                     	;# 
  3902     0814                     	;# 
  3903     081A                     	;# 
  3904     081A                     	;# 
  3905     081B                     	;# 
  3906     081C                     	;# 
  3907     081C                     	;# 
  3908     081D                     	;# 
  3909     081E                     	;# 
  3910     081F                     	;# 
  3911     088C                     	;# 
  3912     088D                     	;# 
  3913     088E                     	;# 
  3914     088F                     	;# 
  3915     0890                     	;# 
  3916     0891                     	;# 
  3917     0892                     	;# 
  3918     0893                     	;# 
  3919     0895                     	;# 
  3920     0896                     	;# 
  3921     0897                     	;# 
  3922     0898                     	;# 
  3923     0899                     	;# 
  3924     089A                     	;# 
  3925     089B                     	;# 
  3926     090C                     	;# 
  3927     090E                     	;# 
  3928     090F                     	;# 
  3929     091F                     	;# 
  3930     098F                     	;# 
  3931     098F                     	;# 
  3932     0990                     	;# 
  3933     0991                     	;# 
  3934     0992                     	;# 
  3935     0993                     	;# 
  3936     0994                     	;# 
  3937     0995                     	;# 
  3938     0996                     	;# 
  3939     0997                     	;# 
  3940     1E0F                     	;# 
  3941     1E10                     	;# 
  3942     1E11                     	;# 
  3943     1E12                     	;# 
  3944     1E13                     	;# 
  3945     1E14                     	;# 
  3946     1E15                     	;# 
  3947     1E16                     	;# 
  3948     1E17                     	;# 
  3949     1E18                     	;# 
  3950     1E19                     	;# 
  3951     1E1A                     	;# 
  3952     1E1B                     	;# 
  3953     1E1C                     	;# 
  3954     1E1D                     	;# 
  3955     1E1E                     	;# 
  3956     1E1F                     	;# 
  3957     1E20                     	;# 
  3958     1E21                     	;# 
  3959     1E22                     	;# 
  3960     1E23                     	;# 
  3961     1E24                     	;# 
  3962     1E25                     	;# 
  3963     1E26                     	;# 
  3964     1E27                     	;# 
  3965     1E28                     	;# 
  3966     1E29                     	;# 
  3967     1E2A                     	;# 
  3968     1E2B                     	;# 
  3969     1E2C                     	;# 
  3970     1E2D                     	;# 
  3971     1E2E                     	;# 
  3972     1E2F                     	;# 
  3973     1E30                     	;# 
  3974     1E31                     	;# 
  3975     1E32                     	;# 
  3976     1E33                     	;# 
  3977     1E34                     	;# 
  3978     1E35                     	;# 
  3979     1E36                     	;# 
  3980     1E37                     	;# 
  3981     1E8F                     	;# 
  3982     1E90                     	;# 
  3983     1E91                     	;# 
  3984     1E92                     	;# 
  3985     1E93                     	;# 
  3986     1E94                     	;# 
  3987     1E95                     	;# 
  3988     1E96                     	;# 
  3989     1E97                     	;# 
  3990     1E9C                     	;# 
  3991     1E9D                     	;# 
  3992     1E9E                     	;# 
  3993     1EA1                     	;# 
  3994     1EA2                     	;# 
  3995     1EA3                     	;# 
  3996     1EA4                     	;# 
  3997     1EA9                     	;# 
  3998     1EAA                     	;# 
  3999     1EB1                     	;# 
  4000     1EB2                     	;# 
  4001     1EB8                     	;# 
  4002     1EB9                     	;# 
  4003     1EBA                     	;# 
  4004     1EBB                     	;# 
  4005     1EBC                     	;# 
  4006     1EBD                     	;# 
  4007     1EBE                     	;# 
  4008     1EC3                     	;# 
  4009     1EC5                     	;# 
  4010     1EC6                     	;# 
  4011     1EC7                     	;# 
  4012     1EC8                     	;# 
  4013     1EC9                     	;# 
  4014     1ECA                     	;# 
  4015     1ECB                     	;# 
  4016     1ECC                     	;# 
  4017     1F10                     	;# 
  4018     1F11                     	;# 
  4019     1F12                     	;# 
  4020     1F14                     	;# 
  4021     1F15                     	;# 
  4022     1F20                     	;# 
  4023     1F21                     	;# 
  4024     1F22                     	;# 
  4025     1F23                     	;# 
  4026     1F24                     	;# 
  4027     1F25                     	;# 
  4028     1F38                     	;# 
  4029     1F39                     	;# 
  4030     1F3A                     	;# 
  4031     1F3B                     	;# 
  4032     1F3C                     	;# 
  4033     1F3D                     	;# 
  4034     1F3E                     	;# 
  4035     1F3F                     	;# 
  4036     1F4E                     	;# 
  4037     1F4F                     	;# 
  4038     1F50                     	;# 
  4039     1F51                     	;# 
  4040     1F52                     	;# 
  4041     1F53                     	;# 
  4042     1F54                     	;# 
  4043     1F55                     	;# 
  4044     1FE4                     	;# 
  4045     1FE5                     	;# 
  4046     1FE6                     	;# 
  4047     1FE7                     	;# 
  4048     1FE8                     	;# 
  4049     1FE8                     	;# 
  4050     1FE9                     	;# 
  4051     1FEA                     	;# 
  4052     1FEB                     	;# 
  4053     1FED                     	;# 
  4054     1FEE                     	;# 
  4055     1FEF                     	;# 
  4056     0000                     	;# 
  4057     0001                     	;# 
  4058     0002                     	;# 
  4059     0003                     	;# 
  4060     0004                     	;# 
  4061     0005                     	;# 
  4062     0006                     	;# 
  4063     0007                     	;# 
  4064     0008                     	;# 
  4065     0009                     	;# 
  4066     000A                     	;# 
  4067     000B                     	;# 
  4068     000C                     	;# 
  4069     000E                     	;# 
  4070     0012                     	;# 
  4071     0014                     	;# 
  4072     0018                     	;# 
  4073     001A                     	;# 
  4074     008C                     	;# 
  4075     008C                     	;# 
  4076     008D                     	;# 
  4077     008E                     	;# 
  4078     008E                     	;# 
  4079     008F                     	;# 
  4080     0090                     	;# 
  4081     0090                     	;# 
  4082     0091                     	;# 
  4083     0092                     	;# 
  4084     0092                     	;# 
  4085     0093                     	;# 
  4086     0094                     	;# 
  4087     0094                     	;# 
  4088     0095                     	;# 
  4089     0096                     	;# 
  4090     0096                     	;# 
  4091     0097                     	;# 
  4092     0098                     	;# 
  4093     0099                     	;# 
  4094     009A                     	;# 
  4095     009B                     	;# 
  4096     009B                     	;# 
  4097     009C                     	;# 
  4098     009D                     	;# 
  4099     009D                     	;# 
  4100     009E                     	;# 
  4101     009F                     	;# 
  4102     010C                     	;# 
  4103     010C                     	;# 
  4104     010D                     	;# 
  4105     010E                     	;# 
  4106     010F                     	;# 
  4107     010F                     	;# 
  4108     0110                     	;# 
  4109     0111                     	;# 
  4110     0112                     	;# 
  4111     0113                     	;# 
  4112     0114                     	;# 
  4113     0115                     	;# 
  4114     0116                     	;# 
  4115     0117                     	;# 
  4116     0118                     	;# 
  4117     0119                     	;# 
  4118     0119                     	;# 
  4119     0119                     	;# 
  4120     011A                     	;# 
  4121     011A                     	;# 
  4122     011A                     	;# 
  4123     011B                     	;# 
  4124     011B                     	;# 
  4125     011B                     	;# 
  4126     011B                     	;# 
  4127     011B                     	;# 
  4128     011C                     	;# 
  4129     011C                     	;# 
  4130     011C                     	;# 
  4131     011D                     	;# 
  4132     011D                     	;# 
  4133     011D                     	;# 
  4134     011E                     	;# 
  4135     011E                     	;# 
  4136     011E                     	;# 
  4137     011F                     	;# 
  4138     011F                     	;# 
  4139     011F                     	;# 
  4140     011F                     	;# 
  4141     011F                     	;# 
  4142     018C                     	;# 
  4143     018D                     	;# 
  4144     018E                     	;# 
  4145     018F                     	;# 
  4146     0190                     	;# 
  4147     0191                     	;# 
  4148     0192                     	;# 
  4149     0196                     	;# 
  4150     0197                     	;# 
  4151     0198                     	;# 
  4152     0199                     	;# 
  4153     019A                     	;# 
  4154     019B                     	;# 
  4155     019C                     	;# 
  4156     020C                     	;# 
  4157     020D                     	;# 
  4158     020E                     	;# 
  4159     020E                     	;# 
  4160     020F                     	;# 
  4161     020F                     	;# 
  4162     0210                     	;# 
  4163     0210                     	;# 
  4164     0211                     	;# 
  4165     0211                     	;# 
  4166     0212                     	;# 
  4167     0213                     	;# 
  4168     0214                     	;# 
  4169     0214                     	;# 
  4170     0215                     	;# 
  4171     0215                     	;# 
  4172     0216                     	;# 
  4173     0216                     	;# 
  4174     0217                     	;# 
  4175     0217                     	;# 
  4176     0218                     	;# 
  4177     0219                     	;# 
  4178     021A                     	;# 
  4179     021A                     	;# 
  4180     021B                     	;# 
  4181     021B                     	;# 
  4182     021C                     	;# 
  4183     021C                     	;# 
  4184     021D                     	;# 
  4185     021D                     	;# 
  4186     021E                     	;# 
  4187     021F                     	;# 
  4188     028C                     	;# 
  4189     028C                     	;# 
  4190     028D                     	;# 
  4191     028D                     	;# 
  4192     028E                     	;# 
  4193     028F                     	;# 
  4194     0290                     	;# 
  4195     0291                     	;# 
  4196     0292                     	;# 
  4197     0292                     	;# 
  4198     0293                     	;# 
  4199     0293                     	;# 
  4200     0294                     	;# 
  4201     0295                     	;# 
  4202     0296                     	;# 
  4203     0297                     	;# 
  4204     0298                     	;# 
  4205     0298                     	;# 
  4206     0299                     	;# 
  4207     0299                     	;# 
  4208     029A                     	;# 
  4209     029B                     	;# 
  4210     029C                     	;# 
  4211     029D                     	;# 
  4212     029F                     	;# 
  4213     030C                     	;# 
  4214     030C                     	;# 
  4215     030D                     	;# 
  4216     030E                     	;# 
  4217     030F                     	;# 
  4218     0310                     	;# 
  4219     0310                     	;# 
  4220     0311                     	;# 
  4221     0312                     	;# 
  4222     0313                     	;# 
  4223     0314                     	;# 
  4224     0314                     	;# 
  4225     0315                     	;# 
  4226     0316                     	;# 
  4227     0317                     	;# 
  4228     0318                     	;# 
  4229     0318                     	;# 
  4230     0319                     	;# 
  4231     031A                     	;# 
  4232     031B                     	;# 
  4233     038C                     	;# 
  4234     038C                     	;# 
  4235     038D                     	;# 
  4236     038E                     	;# 
  4237     0390                     	;# 
  4238     0390                     	;# 
  4239     0391                     	;# 
  4240     0392                     	;# 
  4241     048C                     	;# 
  4242     048C                     	;# 
  4243     048D                     	;# 
  4244     048E                     	;# 
  4245     048F                     	;# 
  4246     048F                     	;# 
  4247     0490                     	;# 
  4248     0491                     	;# 
  4249     0492                     	;# 
  4250     0492                     	;# 
  4251     0493                     	;# 
  4252     0494                     	;# 
  4253     0495                     	;# 
  4254     0495                     	;# 
  4255     0496                     	;# 
  4256     0497                     	;# 
  4257     0498                     	;# 
  4258     0499                     	;# 
  4259     049A                     	;# 
  4260     049B                     	;# 
  4261     049C                     	;# 
  4262     049D                     	;# 
  4263     058C                     	;# 
  4264     058C                     	;# 
  4265     058D                     	;# 
  4266     058E                     	;# 
  4267     058F                     	;# 
  4268     058F                     	;# 
  4269     0590                     	;# 
  4270     0591                     	;# 
  4271     0592                     	;# 
  4272     0593                     	;# 
  4273     059C                     	;# 
  4274     059C                     	;# 
  4275     059D                     	;# 
  4276     059D                     	;# 
  4277     059E                     	;# 
  4278     059F                     	;# 
  4279     060C                     	;# 
  4280     060C                     	;# 
  4281     060D                     	;# 
  4282     060D                     	;# 
  4283     060E                     	;# 
  4284     060F                     	;# 
  4285     0610                     	;# 
  4286     0611                     	;# 
  4287     0612                     	;# 
  4288     0613                     	;# 
  4289     0614                     	;# 
  4290     0616                     	;# 
  4291     0616                     	;# 
  4292     0617                     	;# 
  4293     0617                     	;# 
  4294     0618                     	;# 
  4295     0619                     	;# 
  4296     061A                     	;# 
  4297     061B                     	;# 
  4298     061C                     	;# 
  4299     061D                     	;# 
  4300     061E                     	;# 
  4301     070C                     	;# 
  4302     070D                     	;# 
  4303     070E                     	;# 
  4304     070F                     	;# 
  4305     0710                     	;# 
  4306     0711                     	;# 
  4307     0712                     	;# 
  4308     0713                     	;# 
  4309     0714                     	;# 
  4310     0716                     	;# 
  4311     0717                     	;# 
  4312     0718                     	;# 
  4313     0719                     	;# 
  4314     071A                     	;# 
  4315     071B                     	;# 
  4316     071C                     	;# 
  4317     071D                     	;# 
  4318     071E                     	;# 
  4319     0796                     	;# 
  4320     0797                     	;# 
  4321     0798                     	;# 
  4322     0799                     	;# 
  4323     079A                     	;# 
  4324     079B                     	;# 
  4325     079C                     	;# 
  4326     079D                     	;# 
  4327     080C                     	;# 
  4328     080D                     	;# 
  4329     080E                     	;# 
  4330     080F                     	;# 
  4331     0810                     	;# 
  4332     0811                     	;# 
  4333     0812                     	;# 
  4334     0813                     	;# 
  4335     0814                     	;# 
  4336     081A                     	;# 
  4337     081A                     	;# 
  4338     081B                     	;# 
  4339     081C                     	;# 
  4340     081C                     	;# 
  4341     081D                     	;# 
  4342     081E                     	;# 
  4343     081F                     	;# 
  4344     088C                     	;# 
  4345     088D                     	;# 
  4346     088E                     	;# 
  4347     088F                     	;# 
  4348     0890                     	;# 
  4349     0891                     	;# 
  4350     0892                     	;# 
  4351     0893                     	;# 
  4352     0895                     	;# 
  4353     0896                     	;# 
  4354     0897                     	;# 
  4355     0898                     	;# 
  4356     0899                     	;# 
  4357     089A                     	;# 
  4358     089B                     	;# 
  4359     090C                     	;# 
  4360     090E                     	;# 
  4361     090F                     	;# 
  4362     091F                     	;# 
  4363     098F                     	;# 
  4364     098F                     	;# 
  4365     0990                     	;# 
  4366     0991                     	;# 
  4367     0992                     	;# 
  4368     0993                     	;# 
  4369     0994                     	;# 
  4370     0995                     	;# 
  4371     0996                     	;# 
  4372     0997                     	;# 
  4373     1E0F                     	;# 
  4374     1E10                     	;# 
  4375     1E11                     	;# 
  4376     1E12                     	;# 
  4377     1E13                     	;# 
  4378     1E14                     	;# 
  4379     1E15                     	;# 
  4380     1E16                     	;# 
  4381     1E17                     	;# 
  4382     1E18                     	;# 
  4383     1E19                     	;# 
  4384     1E1A                     	;# 
  4385     1E1B                     	;# 
  4386     1E1C                     	;# 
  4387     1E1D                     	;# 
  4388     1E1E                     	;# 
  4389     1E1F                     	;# 
  4390     1E20                     	;# 
  4391     1E21                     	;# 
  4392     1E22                     	;# 
  4393     1E23                     	;# 
  4394     1E24                     	;# 
  4395     1E25                     	;# 
  4396     1E26                     	;# 
  4397     1E27                     	;# 
  4398     1E28                     	;# 
  4399     1E29                     	;# 
  4400     1E2A                     	;# 
  4401     1E2B                     	;# 
  4402     1E2C                     	;# 
  4403     1E2D                     	;# 
  4404     1E2E                     	;# 
  4405     1E2F                     	;# 
  4406     1E30                     	;# 
  4407     1E31                     	;# 
  4408     1E32                     	;# 
  4409     1E33                     	;# 
  4410     1E34                     	;# 
  4411     1E35                     	;# 
  4412     1E36                     	;# 
  4413     1E37                     	;# 
  4414     1E8F                     	;# 
  4415     1E90                     	;# 
  4416     1E91                     	;# 
  4417     1E92                     	;# 
  4418     1E93                     	;# 
  4419     1E94                     	;# 
  4420     1E95                     	;# 
  4421     1E96                     	;# 
  4422     1E97                     	;# 
  4423     1E9C                     	;# 
  4424     1E9D                     	;# 
  4425     1E9E                     	;# 
  4426     1EA1                     	;# 
  4427     1EA2                     	;# 
  4428     1EA3                     	;# 
  4429     1EA4                     	;# 
  4430     1EA9                     	;# 
  4431     1EAA                     	;# 
  4432     1EB1                     	;# 
  4433     1EB2                     	;# 
  4434     1EB8                     	;# 
  4435     1EB9                     	;# 
  4436     1EBA                     	;# 
  4437     1EBB                     	;# 
  4438     1EBC                     	;# 
  4439     1EBD                     	;# 
  4440     1EBE                     	;# 
  4441     1EC3                     	;# 
  4442     1EC5                     	;# 
  4443     1EC6                     	;# 
  4444     1EC7                     	;# 
  4445     1EC8                     	;# 
  4446     1EC9                     	;# 
  4447     1ECA                     	;# 
  4448     1ECB                     	;# 
  4449     1ECC                     	;# 
  4450     1F10                     	;# 
  4451     1F11                     	;# 
  4452     1F12                     	;# 
  4453     1F14                     	;# 
  4454     1F15                     	;# 
  4455     1F20                     	;# 
  4456     1F21                     	;# 
  4457     1F22                     	;# 
  4458     1F23                     	;# 
  4459     1F24                     	;# 
  4460     1F25                     	;# 
  4461     1F38                     	;# 
  4462     1F39                     	;# 
  4463     1F3A                     	;# 
  4464     1F3B                     	;# 
  4465     1F3C                     	;# 
  4466     1F3D                     	;# 
  4467     1F3E                     	;# 
  4468     1F3F                     	;# 
  4469     1F4E                     	;# 
  4470     1F4F                     	;# 
  4471     1F50                     	;# 
  4472     1F51                     	;# 
  4473     1F52                     	;# 
  4474     1F53                     	;# 
  4475     1F54                     	;# 
  4476     1F55                     	;# 
  4477     1FE4                     	;# 
  4478     1FE5                     	;# 
  4479     1FE6                     	;# 
  4480     1FE7                     	;# 
  4481     1FE8                     	;# 
  4482     1FE8                     	;# 
  4483     1FE9                     	;# 
  4484     1FEA                     	;# 
  4485     1FEB                     	;# 
  4486     1FED                     	;# 
  4487     1FEE                     	;# 
  4488     1FEF                     	;# 
  4489     0000                     	;# 
  4490     0001                     	;# 
  4491     0002                     	;# 
  4492     0003                     	;# 
  4493     0004                     	;# 
  4494     0005                     	;# 
  4495     0006                     	;# 
  4496     0007                     	;# 
  4497     0008                     	;# 
  4498     0009                     	;# 
  4499     000A                     	;# 
  4500     000B                     	;# 
  4501     000C                     	;# 
  4502     000E                     	;# 
  4503     0012                     	;# 
  4504     0014                     	;# 
  4505     0018                     	;# 
  4506     001A                     	;# 
  4507     008C                     	;# 
  4508     008C                     	;# 
  4509     008D                     	;# 
  4510     008E                     	;# 
  4511     008E                     	;# 
  4512     008F                     	;# 
  4513     0090                     	;# 
  4514     0090                     	;# 
  4515     0091                     	;# 
  4516     0092                     	;# 
  4517     0092                     	;# 
  4518     0093                     	;# 
  4519     0094                     	;# 
  4520     0094                     	;# 
  4521     0095                     	;# 
  4522     0096                     	;# 
  4523     0096                     	;# 
  4524     0097                     	;# 
  4525     0098                     	;# 
  4526     0099                     	;# 
  4527     009A                     	;# 
  4528     009B                     	;# 
  4529     009B                     	;# 
  4530     009C                     	;# 
  4531     009D                     	;# 
  4532     009D                     	;# 
  4533     009E                     	;# 
  4534     009F                     	;# 
  4535     010C                     	;# 
  4536     010C                     	;# 
  4537     010D                     	;# 
  4538     010E                     	;# 
  4539     010F                     	;# 
  4540     010F                     	;# 
  4541     0110                     	;# 
  4542     0111                     	;# 
  4543     0112                     	;# 
  4544     0113                     	;# 
  4545     0114                     	;# 
  4546     0115                     	;# 
  4547     0116                     	;# 
  4548     0117                     	;# 
  4549     0118                     	;# 
  4550     0119                     	;# 
  4551     0119                     	;# 
  4552     0119                     	;# 
  4553     011A                     	;# 
  4554     011A                     	;# 
  4555     011A                     	;# 
  4556     011B                     	;# 
  4557     011B                     	;# 
  4558     011B                     	;# 
  4559     011B                     	;# 
  4560     011B                     	;# 
  4561     011C                     	;# 
  4562     011C                     	;# 
  4563     011C                     	;# 
  4564     011D                     	;# 
  4565     011D                     	;# 
  4566     011D                     	;# 
  4567     011E                     	;# 
  4568     011E                     	;# 
  4569     011E                     	;# 
  4570     011F                     	;# 
  4571     011F                     	;# 
  4572     011F                     	;# 
  4573     011F                     	;# 
  4574     011F                     	;# 
  4575     018C                     	;# 
  4576     018D                     	;# 
  4577     018E                     	;# 
  4578     018F                     	;# 
  4579     0190                     	;# 
  4580     0191                     	;# 
  4581     0192                     	;# 
  4582     0196                     	;# 
  4583     0197                     	;# 
  4584     0198                     	;# 
  4585     0199                     	;# 
  4586     019A                     	;# 
  4587     019B                     	;# 
  4588     019C                     	;# 
  4589     020C                     	;# 
  4590     020D                     	;# 
  4591     020E                     	;# 
  4592     020E                     	;# 
  4593     020F                     	;# 
  4594     020F                     	;# 
  4595     0210                     	;# 
  4596     0210                     	;# 
  4597     0211                     	;# 
  4598     0211                     	;# 
  4599     0212                     	;# 
  4600     0213                     	;# 
  4601     0214                     	;# 
  4602     0214                     	;# 
  4603     0215                     	;# 
  4604     0215                     	;# 
  4605     0216                     	;# 
  4606     0216                     	;# 
  4607     0217                     	;# 
  4608     0217                     	;# 
  4609     0218                     	;# 
  4610     0219                     	;# 
  4611     021A                     	;# 
  4612     021A                     	;# 
  4613     021B                     	;# 
  4614     021B                     	;# 
  4615     021C                     	;# 
  4616     021C                     	;# 
  4617     021D                     	;# 
  4618     021D                     	;# 
  4619     021E                     	;# 
  4620     021F                     	;# 
  4621     028C                     	;# 
  4622     028C                     	;# 
  4623     028D                     	;# 
  4624     028D                     	;# 
  4625     028E                     	;# 
  4626     028F                     	;# 
  4627     0290                     	;# 
  4628     0291                     	;# 
  4629     0292                     	;# 
  4630     0292                     	;# 
  4631     0293                     	;# 
  4632     0293                     	;# 
  4633     0294                     	;# 
  4634     0295                     	;# 
  4635     0296                     	;# 
  4636     0297                     	;# 
  4637     0298                     	;# 
  4638     0298                     	;# 
  4639     0299                     	;# 
  4640     0299                     	;# 
  4641     029A                     	;# 
  4642     029B                     	;# 
  4643     029C                     	;# 
  4644     029D                     	;# 
  4645     029F                     	;# 
  4646     030C                     	;# 
  4647     030C                     	;# 
  4648     030D                     	;# 
  4649     030E                     	;# 
  4650     030F                     	;# 
  4651     0310                     	;# 
  4652     0310                     	;# 
  4653     0311                     	;# 
  4654     0312                     	;# 
  4655     0313                     	;# 
  4656     0314                     	;# 
  4657     0314                     	;# 
  4658     0315                     	;# 
  4659     0316                     	;# 
  4660     0317                     	;# 
  4661     0318                     	;# 
  4662     0318                     	;# 
  4663     0319                     	;# 
  4664     031A                     	;# 
  4665     031B                     	;# 
  4666     038C                     	;# 
  4667     038C                     	;# 
  4668     038D                     	;# 
  4669     038E                     	;# 
  4670     0390                     	;# 
  4671     0390                     	;# 
  4672     0391                     	;# 
  4673     0392                     	;# 
  4674     048C                     	;# 
  4675     048C                     	;# 
  4676     048D                     	;# 
  4677     048E                     	;# 
  4678     048F                     	;# 
  4679     048F                     	;# 
  4680     0490                     	;# 
  4681     0491                     	;# 
  4682     0492                     	;# 
  4683     0492                     	;# 
  4684     0493                     	;# 
  4685     0494                     	;# 
  4686     0495                     	;# 
  4687     0495                     	;# 
  4688     0496                     	;# 
  4689     0497                     	;# 
  4690     0498                     	;# 
  4691     0499                     	;# 
  4692     049A                     	;# 
  4693     049B                     	;# 
  4694     049C                     	;# 
  4695     049D                     	;# 
  4696     058C                     	;# 
  4697     058C                     	;# 
  4698     058D                     	;# 
  4699     058E                     	;# 
  4700     058F                     	;# 
  4701     058F                     	;# 
  4702     0590                     	;# 
  4703     0591                     	;# 
  4704     0592                     	;# 
  4705     0593                     	;# 
  4706     059C                     	;# 
  4707     059C                     	;# 
  4708     059D                     	;# 
  4709     059D                     	;# 
  4710     059E                     	;# 
  4711     059F                     	;# 
  4712     060C                     	;# 
  4713     060C                     	;# 
  4714     060D                     	;# 
  4715     060D                     	;# 
  4716     060E                     	;# 
  4717     060F                     	;# 
  4718     0610                     	;# 
  4719     0611                     	;# 
  4720     0612                     	;# 
  4721     0613                     	;# 
  4722     0614                     	;# 
  4723     0616                     	;# 
  4724     0616                     	;# 
  4725     0617                     	;# 
  4726     0617                     	;# 
  4727     0618                     	;# 
  4728     0619                     	;# 
  4729     061A                     	;# 
  4730     061B                     	;# 
  4731     061C                     	;# 
  4732     061D                     	;# 
  4733     061E                     	;# 
  4734     070C                     	;# 
  4735     070D                     	;# 
  4736     070E                     	;# 
  4737     070F                     	;# 
  4738     0710                     	;# 
  4739     0711                     	;# 
  4740     0712                     	;# 
  4741     0713                     	;# 
  4742     0714                     	;# 
  4743     0716                     	;# 
  4744     0717                     	;# 
  4745     0718                     	;# 
  4746     0719                     	;# 
  4747     071A                     	;# 
  4748     071B                     	;# 
  4749     071C                     	;# 
  4750     071D                     	;# 
  4751     071E                     	;# 
  4752     0796                     	;# 
  4753     0797                     	;# 
  4754     0798                     	;# 
  4755     0799                     	;# 
  4756     079A                     	;# 
  4757     079B                     	;# 
  4758     079C                     	;# 
  4759     079D                     	;# 
  4760     080C                     	;# 
  4761     080D                     	;# 
  4762     080E                     	;# 
  4763     080F                     	;# 
  4764     0810                     	;# 
  4765     0811                     	;# 
  4766     0812                     	;# 
  4767     0813                     	;# 
  4768     0814                     	;# 
  4769     081A                     	;# 
  4770     081A                     	;# 
  4771     081B                     	;# 
  4772     081C                     	;# 
  4773     081C                     	;# 
  4774     081D                     	;# 
  4775     081E                     	;# 
  4776     081F                     	;# 
  4777     088C                     	;# 
  4778     088D                     	;# 
  4779     088E                     	;# 
  4780     088F                     	;# 
  4781     0890                     	;# 
  4782     0891                     	;# 
  4783     0892                     	;# 
  4784     0893                     	;# 
  4785     0895                     	;# 
  4786     0896                     	;# 
  4787     0897                     	;# 
  4788     0898                     	;# 
  4789     0899                     	;# 
  4790     089A                     	;# 
  4791     089B                     	;# 
  4792     090C                     	;# 
  4793     090E                     	;# 
  4794     090F                     	;# 
  4795     091F                     	;# 
  4796     098F                     	;# 
  4797     098F                     	;# 
  4798     0990                     	;# 
  4799     0991                     	;# 
  4800     0992                     	;# 
  4801     0993                     	;# 
  4802     0994                     	;# 
  4803     0995                     	;# 
  4804     0996                     	;# 
  4805     0997                     	;# 
  4806     1E0F                     	;# 
  4807     1E10                     	;# 
  4808     1E11                     	;# 
  4809     1E12                     	;# 
  4810     1E13                     	;# 
  4811     1E14                     	;# 
  4812     1E15                     	;# 
  4813     1E16                     	;# 
  4814     1E17                     	;# 
  4815     1E18                     	;# 
  4816     1E19                     	;# 
  4817     1E1A                     	;# 
  4818     1E1B                     	;# 
  4819     1E1C                     	;# 
  4820     1E1D                     	;# 
  4821     1E1E                     	;# 
  4822     1E1F                     	;# 
  4823     1E20                     	;# 
  4824     1E21                     	;# 
  4825     1E22                     	;# 
  4826     1E23                     	;# 
  4827     1E24                     	;# 
  4828     1E25                     	;# 
  4829     1E26                     	;# 
  4830     1E27                     	;# 
  4831     1E28                     	;# 
  4832     1E29                     	;# 
  4833     1E2A                     	;# 
  4834     1E2B                     	;# 
  4835     1E2C                     	;# 
  4836     1E2D                     	;# 
  4837     1E2E                     	;# 
  4838     1E2F                     	;# 
  4839     1E30                     	;# 
  4840     1E31                     	;# 
  4841     1E32                     	;# 
  4842     1E33                     	;# 
  4843     1E34                     	;# 
  4844     1E35                     	;# 
  4845     1E36                     	;# 
  4846     1E37                     	;# 
  4847     1E8F                     	;# 
  4848     1E90                     	;# 
  4849     1E91                     	;# 
  4850     1E92                     	;# 
  4851     1E93                     	;# 
  4852     1E94                     	;# 
  4853     1E95                     	;# 
  4854     1E96                     	;# 
  4855     1E97                     	;# 
  4856     1E9C                     	;# 
  4857     1E9D                     	;# 
  4858     1E9E                     	;# 
  4859     1EA1                     	;# 
  4860     1EA2                     	;# 
  4861     1EA3                     	;# 
  4862     1EA4                     	;# 
  4863     1EA9                     	;# 
  4864     1EAA                     	;# 
  4865     1EB1                     	;# 
  4866     1EB2                     	;# 
  4867     1EB8                     	;# 
  4868     1EB9                     	;# 
  4869     1EBA                     	;# 
  4870     1EBB                     	;# 
  4871     1EBC                     	;# 
  4872     1EBD                     	;# 
  4873     1EBE                     	;# 
  4874     1EC3                     	;# 
  4875     1EC5                     	;# 
  4876     1EC6                     	;# 
  4877     1EC7                     	;# 
  4878     1EC8                     	;# 
  4879     1EC9                     	;# 
  4880     1ECA                     	;# 
  4881     1ECB                     	;# 
  4882     1ECC                     	;# 
  4883     1F10                     	;# 
  4884     1F11                     	;# 
  4885     1F12                     	;# 
  4886     1F14                     	;# 
  4887     1F15                     	;# 
  4888     1F20                     	;# 
  4889     1F21                     	;# 
  4890     1F22                     	;# 
  4891     1F23                     	;# 
  4892     1F24                     	;# 
  4893     1F25                     	;# 
  4894     1F38                     	;# 
  4895     1F39                     	;# 
  4896     1F3A                     	;# 
  4897     1F3B                     	;# 
  4898     1F3C                     	;# 
  4899     1F3D                     	;# 
  4900     1F3E                     	;# 
  4901     1F3F                     	;# 
  4902     1F4E                     	;# 
  4903     1F4F                     	;# 
  4904     1F50                     	;# 
  4905     1F51                     	;# 
  4906     1F52                     	;# 
  4907     1F53                     	;# 
  4908     1F54                     	;# 
  4909     1F55                     	;# 
  4910     1FE4                     	;# 
  4911     1FE5                     	;# 
  4912     1FE6                     	;# 
  4913     1FE7                     	;# 
  4914     1FE8                     	;# 
  4915     1FE8                     	;# 
  4916     1FE9                     	;# 
  4917     1FEA                     	;# 
  4918     1FEB                     	;# 
  4919     1FED                     	;# 
  4920     1FEE                     	;# 
  4921     1FEF                     	;# 
  4922     0000                     	;# 
  4923     0001                     	;# 
  4924     0002                     	;# 
  4925     0003                     	;# 
  4926     0004                     	;# 
  4927     0005                     	;# 
  4928     0006                     	;# 
  4929     0007                     	;# 
  4930     0008                     	;# 
  4931     0009                     	;# 
  4932     000A                     	;# 
  4933     000B                     	;# 
  4934     000C                     	;# 
  4935     000E                     	;# 
  4936     0012                     	;# 
  4937     0014                     	;# 
  4938     0018                     	;# 
  4939     001A                     	;# 
  4940     008C                     	;# 
  4941     008C                     	;# 
  4942     008D                     	;# 
  4943     008E                     	;# 
  4944     008E                     	;# 
  4945     008F                     	;# 
  4946     0090                     	;# 
  4947     0090                     	;# 
  4948     0091                     	;# 
  4949     0092                     	;# 
  4950     0092                     	;# 
  4951     0093                     	;# 
  4952     0094                     	;# 
  4953     0094                     	;# 
  4954     0095                     	;# 
  4955     0096                     	;# 
  4956     0096                     	;# 
  4957     0097                     	;# 
  4958     0098                     	;# 
  4959     0099                     	;# 
  4960     009A                     	;# 
  4961     009B                     	;# 
  4962     009B                     	;# 
  4963     009C                     	;# 
  4964     009D                     	;# 
  4965     009D                     	;# 
  4966     009E                     	;# 
  4967     009F                     	;# 
  4968     010C                     	;# 
  4969     010C                     	;# 
  4970     010D                     	;# 
  4971     010E                     	;# 
  4972     010F                     	;# 
  4973     010F                     	;# 
  4974     0110                     	;# 
  4975     0111                     	;# 
  4976     0112                     	;# 
  4977     0113                     	;# 
  4978     0114                     	;# 
  4979     0115                     	;# 
  4980     0116                     	;# 
  4981     0117                     	;# 
  4982     0118                     	;# 
  4983     0119                     	;# 
  4984     0119                     	;# 
  4985     0119                     	;# 
  4986     011A                     	;# 
  4987     011A                     	;# 
  4988     011A                     	;# 
  4989     011B                     	;# 
  4990     011B                     	;# 
  4991     011B                     	;# 
  4992     011B                     	;# 
  4993     011B                     	;# 
  4994     011C                     	;# 
  4995     011C                     	;# 
  4996     011C                     	;# 
  4997     011D                     	;# 
  4998     011D                     	;# 
  4999     011D                     	;# 
  5000     011E                     	;# 
  5001     011E                     	;# 
  5002     011E                     	;# 
  5003     011F                     	;# 
  5004     011F                     	;# 
  5005     011F                     	;# 
  5006     011F                     	;# 
  5007     011F                     	;# 
  5008     018C                     	;# 
  5009     018D                     	;# 
  5010     018E                     	;# 
  5011     018F                     	;# 
  5012     0190                     	;# 
  5013     0191                     	;# 
  5014     0192                     	;# 
  5015     0196                     	;# 
  5016     0197                     	;# 
  5017     0198                     	;# 
  5018     0199                     	;# 
  5019     019A                     	;# 
  5020     019B                     	;# 
  5021     019C                     	;# 
  5022     020C                     	;# 
  5023     020D                     	;# 
  5024     020E                     	;# 
  5025     020E                     	;# 
  5026     020F                     	;# 
  5027     020F                     	;# 
  5028     0210                     	;# 
  5029     0210                     	;# 
  5030     0211                     	;# 
  5031     0211                     	;# 
  5032     0212                     	;# 
  5033     0213                     	;# 
  5034     0214                     	;# 
  5035     0214                     	;# 
  5036     0215                     	;# 
  5037     0215                     	;# 
  5038     0216                     	;# 
  5039     0216                     	;# 
  5040     0217                     	;# 
  5041     0217                     	;# 
  5042     0218                     	;# 
  5043     0219                     	;# 
  5044     021A                     	;# 
  5045     021A                     	;# 
  5046     021B                     	;# 
  5047     021B                     	;# 
  5048     021C                     	;# 
  5049     021C                     	;# 
  5050     021D                     	;# 
  5051     021D                     	;# 
  5052     021E                     	;# 
  5053     021F                     	;# 
  5054     028C                     	;# 
  5055     028C                     	;# 
  5056     028D                     	;# 
  5057     028D                     	;# 
  5058     028E                     	;# 
  5059     028F                     	;# 
  5060     0290                     	;# 
  5061     0291                     	;# 
  5062     0292                     	;# 
  5063     0292                     	;# 
  5064     0293                     	;# 
  5065     0293                     	;# 
  5066     0294                     	;# 
  5067     0295                     	;# 
  5068     0296                     	;# 
  5069     0297                     	;# 
  5070     0298                     	;# 
  5071     0298                     	;# 
  5072     0299                     	;# 
  5073     0299                     	;# 
  5074     029A                     	;# 
  5075     029B                     	;# 
  5076     029C                     	;# 
  5077     029D                     	;# 
  5078     029F                     	;# 
  5079     030C                     	;# 
  5080     030C                     	;# 
  5081     030D                     	;# 
  5082     030E                     	;# 
  5083     030F                     	;# 
  5084     0310                     	;# 
  5085     0310                     	;# 
  5086     0311                     	;# 
  5087     0312                     	;# 
  5088     0313                     	;# 
  5089     0314                     	;# 
  5090     0314                     	;# 
  5091     0315                     	;# 
  5092     0316                     	;# 
  5093     0317                     	;# 
  5094     0318                     	;# 
  5095     0318                     	;# 
  5096     0319                     	;# 
  5097     031A                     	;# 
  5098     031B                     	;# 
  5099     038C                     	;# 
  5100     038C                     	;# 
  5101     038D                     	;# 
  5102     038E                     	;# 
  5103     0390                     	;# 
  5104     0390                     	;# 
  5105     0391                     	;# 
  5106     0392                     	;# 
  5107     048C                     	;# 
  5108     048C                     	;# 
  5109     048D                     	;# 
  5110     048E                     	;# 
  5111     048F                     	;# 
  5112     048F                     	;# 
  5113     0490                     	;# 
  5114     0491                     	;# 
  5115     0492                     	;# 
  5116     0492                     	;# 
  5117     0493                     	;# 
  5118     0494                     	;# 
  5119     0495                     	;# 
  5120     0495                     	;# 
  5121     0496                     	;# 
  5122     0497                     	;# 
  5123     0498                     	;# 
  5124     0499                     	;# 
  5125     049A                     	;# 
  5126     049B                     	;# 
  5127     049C                     	;# 
  5128     049D                     	;# 
  5129     058C                     	;# 
  5130     058C                     	;# 
  5131     058D                     	;# 
  5132     058E                     	;# 
  5133     058F                     	;# 
  5134     058F                     	;# 
  5135     0590                     	;# 
  5136     0591                     	;# 
  5137     0592                     	;# 
  5138     0593                     	;# 
  5139     059C                     	;# 
  5140     059C                     	;# 
  5141     059D                     	;# 
  5142     059D                     	;# 
  5143     059E                     	;# 
  5144     059F                     	;# 
  5145     060C                     	;# 
  5146     060C                     	;# 
  5147     060D                     	;# 
  5148     060D                     	;# 
  5149     060E                     	;# 
  5150     060F                     	;# 
  5151     0610                     	;# 
  5152     0611                     	;# 
  5153     0612                     	;# 
  5154     0613                     	;# 
  5155     0614                     	;# 
  5156     0616                     	;# 
  5157     0616                     	;# 
  5158     0617                     	;# 
  5159     0617                     	;# 
  5160     0618                     	;# 
  5161     0619                     	;# 
  5162     061A                     	;# 
  5163     061B                     	;# 
  5164     061C                     	;# 
  5165     061D                     	;# 
  5166     061E                     	;# 
  5167     070C                     	;# 
  5168     070D                     	;# 
  5169     070E                     	;# 
  5170     070F                     	;# 
  5171     0710                     	;# 
  5172     0711                     	;# 
  5173     0712                     	;# 
  5174     0713                     	;# 
  5175     0714                     	;# 
  5176     0716                     	;# 
  5177     0717                     	;# 
  5178     0718                     	;# 
  5179     0719                     	;# 
  5180     071A                     	;# 
  5181     071B                     	;# 
  5182     071C                     	;# 
  5183     071D                     	;# 
  5184     071E                     	;# 
  5185     0796                     	;# 
  5186     0797                     	;# 
  5187     0798                     	;# 
  5188     0799                     	;# 
  5189     079A                     	;# 
  5190     079B                     	;# 
  5191     079C                     	;# 
  5192     079D                     	;# 
  5193     080C                     	;# 
  5194     080D                     	;# 
  5195     080E                     	;# 
  5196     080F                     	;# 
  5197     0810                     	;# 
  5198     0811                     	;# 
  5199     0812                     	;# 
  5200     0813                     	;# 
  5201     0814                     	;# 
  5202     081A                     	;# 
  5203     081A                     	;# 
  5204     081B                     	;# 
  5205     081C                     	;# 
  5206     081C                     	;# 
  5207     081D                     	;# 
  5208     081E                     	;# 
  5209     081F                     	;# 
  5210     088C                     	;# 
  5211     088D                     	;# 
  5212     088E                     	;# 
  5213     088F                     	;# 
  5214     0890                     	;# 
  5215     0891                     	;# 
  5216     0892                     	;# 
  5217     0893                     	;# 
  5218     0895                     	;# 
  5219     0896                     	;# 
  5220     0897                     	;# 
  5221     0898                     	;# 
  5222     0899                     	;# 
  5223     089A                     	;# 
  5224     089B                     	;# 
  5225     090C                     	;# 
  5226     090E                     	;# 
  5227     090F                     	;# 
  5228     091F                     	;# 
  5229     098F                     	;# 
  5230     098F                     	;# 
  5231     0990                     	;# 
  5232     0991                     	;# 
  5233     0992                     	;# 
  5234     0993                     	;# 
  5235     0994                     	;# 
  5236     0995                     	;# 
  5237     0996                     	;# 
  5238     0997                     	;# 
  5239     1E0F                     	;# 
  5240     1E10                     	;# 
  5241     1E11                     	;# 
  5242     1E12                     	;# 
  5243     1E13                     	;# 
  5244     1E14                     	;# 
  5245     1E15                     	;# 
  5246     1E16                     	;# 
  5247     1E17                     	;# 
  5248     1E18                     	;# 
  5249     1E19                     	;# 
  5250     1E1A                     	;# 
  5251     1E1B                     	;# 
  5252     1E1C                     	;# 
  5253     1E1D                     	;# 
  5254     1E1E                     	;# 
  5255     1E1F                     	;# 
  5256     1E20                     	;# 
  5257     1E21                     	;# 
  5258     1E22                     	;# 
  5259     1E23                     	;# 
  5260     1E24                     	;# 
  5261     1E25                     	;# 
  5262     1E26                     	;# 
  5263     1E27                     	;# 
  5264     1E28                     	;# 
  5265     1E29                     	;# 
  5266     1E2A                     	;# 
  5267     1E2B                     	;# 
  5268     1E2C                     	;# 
  5269     1E2D                     	;# 
  5270     1E2E                     	;# 
  5271     1E2F                     	;# 
  5272     1E30                     	;# 
  5273     1E31                     	;# 
  5274     1E32                     	;# 
  5275     1E33                     	;# 
  5276     1E34                     	;# 
  5277     1E35                     	;# 
  5278     1E36                     	;# 
  5279     1E37                     	;# 
  5280     1E8F                     	;# 
  5281     1E90                     	;# 
  5282     1E91                     	;# 
  5283     1E92                     	;# 
  5284     1E93                     	;# 
  5285     1E94                     	;# 
  5286     1E95                     	;# 
  5287     1E96                     	;# 
  5288     1E97                     	;# 
  5289     1E9C                     	;# 
  5290     1E9D                     	;# 
  5291     1E9E                     	;# 
  5292     1EA1                     	;# 
  5293     1EA2                     	;# 
  5294     1EA3                     	;# 
  5295     1EA4                     	;# 
  5296     1EA9                     	;# 
  5297     1EAA                     	;# 
  5298     1EB1                     	;# 
  5299     1EB2                     	;# 
  5300     1EB8                     	;# 
  5301     1EB9                     	;# 
  5302     1EBA                     	;# 
  5303     1EBB                     	;# 
  5304     1EBC                     	;# 
  5305     1EBD                     	;# 
  5306     1EBE                     	;# 
  5307     1EC3                     	;# 
  5308     1EC5                     	;# 
  5309     1EC6                     	;# 
  5310     1EC7                     	;# 
  5311     1EC8                     	;# 
  5312     1EC9                     	;# 
  5313     1ECA                     	;# 
  5314     1ECB                     	;# 
  5315     1ECC                     	;# 
  5316     1F10                     	;# 
  5317     1F11                     	;# 
  5318     1F12                     	;# 
  5319     1F14                     	;# 
  5320     1F15                     	;# 
  5321     1F20                     	;# 
  5322     1F21                     	;# 
  5323     1F22                     	;# 
  5324     1F23                     	;# 
  5325     1F24                     	;# 
  5326     1F25                     	;# 
  5327     1F38                     	;# 
  5328     1F39                     	;# 
  5329     1F3A                     	;# 
  5330     1F3B                     	;# 
  5331     1F3C                     	;# 
  5332     1F3D                     	;# 
  5333     1F3E                     	;# 
  5334     1F3F                     	;# 
  5335     1F4E                     	;# 
  5336     1F4F                     	;# 
  5337     1F50                     	;# 
  5338     1F51                     	;# 
  5339     1F52                     	;# 
  5340     1F53                     	;# 
  5341     1F54                     	;# 
  5342     1F55                     	;# 
  5343     1FE4                     	;# 
  5344     1FE5                     	;# 
  5345     1FE6                     	;# 
  5346     1FE7                     	;# 
  5347     1FE8                     	;# 
  5348     1FE8                     	;# 
  5349     1FE9                     	;# 
  5350     1FEA                     	;# 
  5351     1FEB                     	;# 
  5352     1FED                     	;# 
  5353     1FEE                     	;# 
  5354     1FEF                     	;# 
  5355     0000                     	;# 
  5356     0001                     	;# 
  5357     0002                     	;# 
  5358     0003                     	;# 
  5359     0004                     	;# 
  5360     0005                     	;# 
  5361     0006                     	;# 
  5362     0007                     	;# 
  5363     0008                     	;# 
  5364     0009                     	;# 
  5365     000A                     	;# 
  5366     000B                     	;# 
  5367     000C                     	;# 
  5368     000E                     	;# 
  5369     0012                     	;# 
  5370     0014                     	;# 
  5371     0018                     	;# 
  5372     001A                     	;# 
  5373     008C                     	;# 
  5374     008C                     	;# 
  5375     008D                     	;# 
  5376     008E                     	;# 
  5377     008E                     	;# 
  5378     008F                     	;# 
  5379     0090                     	;# 
  5380     0090                     	;# 
  5381     0091                     	;# 
  5382     0092                     	;# 
  5383     0092                     	;# 
  5384     0093                     	;# 
  5385     0094                     	;# 
  5386     0094                     	;# 
  5387     0095                     	;# 
  5388     0096                     	;# 
  5389     0096                     	;# 
  5390     0097                     	;# 
  5391     0098                     	;# 
  5392     0099                     	;# 
  5393     009A                     	;# 
  5394     009B                     	;# 
  5395     009B                     	;# 
  5396     009C                     	;# 
  5397     009D                     	;# 
  5398     009D                     	;# 
  5399     009E                     	;# 
  5400     009F                     	;# 
  5401     010C                     	;# 
  5402     010C                     	;# 
  5403     010D                     	;# 
  5404     010E                     	;# 
  5405     010F                     	;# 
  5406     010F                     	;# 
  5407     0110                     	;# 
  5408     0111                     	;# 
  5409     0112                     	;# 
  5410     0113                     	;# 
  5411     0114                     	;# 
  5412     0115                     	;# 
  5413     0116                     	;# 
  5414     0117                     	;# 
  5415     0118                     	;# 
  5416     0119                     	;# 
  5417     0119                     	;# 
  5418     0119                     	;# 
  5419     011A                     	;# 
  5420     011A                     	;# 
  5421     011A                     	;# 
  5422     011B                     	;# 
  5423     011B                     	;# 
  5424     011B                     	;# 
  5425     011B                     	;# 
  5426     011B                     	;# 
  5427     011C                     	;# 
  5428     011C                     	;# 
  5429     011C                     	;# 
  5430     011D                     	;# 
  5431     011D                     	;# 
  5432     011D                     	;# 
  5433     011E                     	;# 
  5434     011E                     	;# 
  5435     011E                     	;# 
  5436     011F                     	;# 
  5437     011F                     	;# 
  5438     011F                     	;# 
  5439     011F                     	;# 
  5440     011F                     	;# 
  5441     018C                     	;# 
  5442     018D                     	;# 
  5443     018E                     	;# 
  5444     018F                     	;# 
  5445     0190                     	;# 
  5446     0191                     	;# 
  5447     0192                     	;# 
  5448     0196                     	;# 
  5449     0197                     	;# 
  5450     0198                     	;# 
  5451     0199                     	;# 
  5452     019A                     	;# 
  5453     019B                     	;# 
  5454     019C                     	;# 
  5455     020C                     	;# 
  5456     020D                     	;# 
  5457     020E                     	;# 
  5458     020E                     	;# 
  5459     020F                     	;# 
  5460     020F                     	;# 
  5461     0210                     	;# 
  5462     0210                     	;# 
  5463     0211                     	;# 
  5464     0211                     	;# 
  5465     0212                     	;# 
  5466     0213                     	;# 
  5467     0214                     	;# 
  5468     0214                     	;# 
  5469     0215                     	;# 
  5470     0215                     	;# 
  5471     0216                     	;# 
  5472     0216                     	;# 
  5473     0217                     	;# 
  5474     0217                     	;# 
  5475     0218                     	;# 
  5476     0219                     	;# 
  5477     021A                     	;# 
  5478     021A                     	;# 
  5479     021B                     	;# 
  5480     021B                     	;# 
  5481     021C                     	;# 
  5482     021C                     	;# 
  5483     021D                     	;# 
  5484     021D                     	;# 
  5485     021E                     	;# 
  5486     021F                     	;# 
  5487     028C                     	;# 
  5488     028C                     	;# 
  5489     028D                     	;# 
  5490     028D                     	;# 
  5491     028E                     	;# 
  5492     028F                     	;# 
  5493     0290                     	;# 
  5494     0291                     	;# 
  5495     0292                     	;# 
  5496     0292                     	;# 
  5497     0293                     	;# 
  5498     0293                     	;# 
  5499     0294                     	;# 
  5500     0295                     	;# 
  5501     0296                     	;# 
  5502     0297                     	;# 
  5503     0298                     	;# 
  5504     0298                     	;# 
  5505     0299                     	;# 
  5506     0299                     	;# 
  5507     029A                     	;# 
  5508     029B                     	;# 
  5509     029C                     	;# 
  5510     029D                     	;# 
  5511     029F                     	;# 
  5512     030C                     	;# 
  5513     030C                     	;# 
  5514     030D                     	;# 
  5515     030E                     	;# 
  5516     030F                     	;# 
  5517     0310                     	;# 
  5518     0310                     	;# 
  5519     0311                     	;# 
  5520     0312                     	;# 
  5521     0313                     	;# 
  5522     0314                     	;# 
  5523     0314                     	;# 
  5524     0315                     	;# 
  5525     0316                     	;# 
  5526     0317                     	;# 
  5527     0318                     	;# 
  5528     0318                     	;# 
  5529     0319                     	;# 
  5530     031A                     	;# 
  5531     031B                     	;# 
  5532     038C                     	;# 
  5533     038C                     	;# 
  5534     038D                     	;# 
  5535     038E                     	;# 
  5536     0390                     	;# 
  5537     0390                     	;# 
  5538     0391                     	;# 
  5539     0392                     	;# 
  5540     048C                     	;# 
  5541     048C                     	;# 
  5542     048D                     	;# 
  5543     048E                     	;# 
  5544     048F                     	;# 
  5545     048F                     	;# 
  5546     0490                     	;# 
  5547     0491                     	;# 
  5548     0492                     	;# 
  5549     0492                     	;# 
  5550     0493                     	;# 
  5551     0494                     	;# 
  5552     0495                     	;# 
  5553     0495                     	;# 
  5554     0496                     	;# 
  5555     0497                     	;# 
  5556     0498                     	;# 
  5557     0499                     	;# 
  5558     049A                     	;# 
  5559     049B                     	;# 
  5560     049C                     	;# 
  5561     049D                     	;# 
  5562     058C                     	;# 
  5563     058C                     	;# 
  5564     058D                     	;# 
  5565     058E                     	;# 
  5566     058F                     	;# 
  5567     058F                     	;# 
  5568     0590                     	;# 
  5569     0591                     	;# 
  5570     0592                     	;# 
  5571     0593                     	;# 
  5572     059C                     	;# 
  5573     059C                     	;# 
  5574     059D                     	;# 
  5575     059D                     	;# 
  5576     059E                     	;# 
  5577     059F                     	;# 
  5578     060C                     	;# 
  5579     060C                     	;# 
  5580     060D                     	;# 
  5581     060D                     	;# 
  5582     060E                     	;# 
  5583     060F                     	;# 
  5584     0610                     	;# 
  5585     0611                     	;# 
  5586     0612                     	;# 
  5587     0613                     	;# 
  5588     0614                     	;# 
  5589     0616                     	;# 
  5590     0616                     	;# 
  5591     0617                     	;# 
  5592     0617                     	;# 
  5593     0618                     	;# 
  5594     0619                     	;# 
  5595     061A                     	;# 
  5596     061B                     	;# 
  5597     061C                     	;# 
  5598     061D                     	;# 
  5599     061E                     	;# 
  5600     070C                     	;# 
  5601     070D                     	;# 
  5602     070E                     	;# 
  5603     070F                     	;# 
  5604     0710                     	;# 
  5605     0711                     	;# 
  5606     0712                     	;# 
  5607     0713                     	;# 
  5608     0714                     	;# 
  5609     0716                     	;# 
  5610     0717                     	;# 
  5611     0718                     	;# 
  5612     0719                     	;# 
  5613     071A                     	;# 
  5614     071B                     	;# 
  5615     071C                     	;# 
  5616     071D                     	;# 
  5617     071E                     	;# 
  5618     0796                     	;# 
  5619     0797                     	;# 
  5620     0798                     	;# 
  5621     0799                     	;# 
  5622     079A                     	;# 
  5623     079B                     	;# 
  5624     079C                     	;# 
  5625     079D                     	;# 
  5626     080C                     	;# 
  5627     080D                     	;# 
  5628     080E                     	;# 
  5629     080F                     	;# 
  5630     0810                     	;# 
  5631     0811                     	;# 
  5632     0812                     	;# 
  5633     0813                     	;# 
  5634     0814                     	;# 
  5635     081A                     	;# 
  5636     081A                     	;# 
  5637     081B                     	;# 
  5638     081C                     	;# 
  5639     081C                     	;# 
  5640     081D                     	;# 
  5641     081E                     	;# 
  5642     081F                     	;# 
  5643     088C                     	;# 
  5644     088D                     	;# 
  5645     088E                     	;# 
  5646     088F                     	;# 
  5647     0890                     	;# 
  5648     0891                     	;# 
  5649     0892                     	;# 
  5650     0893                     	;# 
  5651     0895                     	;# 
  5652     0896                     	;# 
  5653     0897                     	;# 
  5654     0898                     	;# 
  5655     0899                     	;# 
  5656     089A                     	;# 
  5657     089B                     	;# 
  5658     090C                     	;# 
  5659     090E                     	;# 
  5660     090F                     	;# 
  5661     091F                     	;# 
  5662     098F                     	;# 
  5663     098F                     	;# 
  5664     0990                     	;# 
  5665     0991                     	;# 
  5666     0992                     	;# 
  5667     0993                     	;# 
  5668     0994                     	;# 
  5669     0995                     	;# 
  5670     0996                     	;# 
  5671     0997                     	;# 
  5672     1E0F                     	;# 
  5673     1E10                     	;# 
  5674     1E11                     	;# 
  5675     1E12                     	;# 
  5676     1E13                     	;# 
  5677     1E14                     	;# 
  5678     1E15                     	;# 
  5679     1E16                     	;# 
  5680     1E17                     	;# 
  5681     1E18                     	;# 
  5682     1E19                     	;# 
  5683     1E1A                     	;# 
  5684     1E1B                     	;# 
  5685     1E1C                     	;# 
  5686     1E1D                     	;# 
  5687     1E1E                     	;# 
  5688     1E1F                     	;# 
  5689     1E20                     	;# 
  5690     1E21                     	;# 
  5691     1E22                     	;# 
  5692     1E23                     	;# 
  5693     1E24                     	;# 
  5694     1E25                     	;# 
  5695     1E26                     	;# 
  5696     1E27                     	;# 
  5697     1E28                     	;# 
  5698     1E29                     	;# 
  5699     1E2A                     	;# 
  5700     1E2B                     	;# 
  5701     1E2C                     	;# 
  5702     1E2D                     	;# 
  5703     1E2E                     	;# 
  5704     1E2F                     	;# 
  5705     1E30                     	;# 
  5706     1E31                     	;# 
  5707     1E32                     	;# 
  5708     1E33                     	;# 
  5709     1E34                     	;# 
  5710     1E35                     	;# 
  5711     1E36                     	;# 
  5712     1E37                     	;# 
  5713     1E8F                     	;# 
  5714     1E90                     	;# 
  5715     1E91                     	;# 
  5716     1E92                     	;# 
  5717     1E93                     	;# 
  5718     1E94                     	;# 
  5719     1E95                     	;# 
  5720     1E96                     	;# 
  5721     1E97                     	;# 
  5722     1E9C                     	;# 
  5723     1E9D                     	;# 
  5724     1E9E                     	;# 
  5725     1EA1                     	;# 
  5726     1EA2                     	;# 
  5727     1EA3                     	;# 
  5728     1EA4                     	;# 
  5729     1EA9                     	;# 
  5730     1EAA                     	;# 
  5731     1EB1                     	;# 
  5732     1EB2                     	;# 
  5733     1EB8                     	;# 
  5734     1EB9                     	;# 
  5735     1EBA                     	;# 
  5736     1EBB                     	;# 
  5737     1EBC                     	;# 
  5738     1EBD                     	;# 
  5739     1EBE                     	;# 
  5740     1EC3                     	;# 
  5741     1EC5                     	;# 
  5742     1EC6                     	;# 
  5743     1EC7                     	;# 
  5744     1EC8                     	;# 
  5745     1EC9                     	;# 
  5746     1ECA                     	;# 
  5747     1ECB                     	;# 
  5748     1ECC                     	;# 
  5749     1F10                     	;# 
  5750     1F11                     	;# 
  5751     1F12                     	;# 
  5752     1F14                     	;# 
  5753     1F15                     	;# 
  5754     1F20                     	;# 
  5755     1F21                     	;# 
  5756     1F22                     	;# 
  5757     1F23                     	;# 
  5758     1F24                     	;# 
  5759     1F25                     	;# 
  5760     1F38                     	;# 
  5761     1F39                     	;# 
  5762     1F3A                     	;# 
  5763     1F3B                     	;# 
  5764     1F3C                     	;# 
  5765     1F3D                     	;# 
  5766     1F3E                     	;# 
  5767     1F3F                     	;# 
  5768     1F4E                     	;# 
  5769     1F4F                     	;# 
  5770     1F50                     	;# 
  5771     1F51                     	;# 
  5772     1F52                     	;# 
  5773     1F53                     	;# 
  5774     1F54                     	;# 
  5775     1F55                     	;# 
  5776     1FE4                     	;# 
  5777     1FE5                     	;# 
  5778     1FE6                     	;# 
  5779     1FE7                     	;# 
  5780     1FE8                     	;# 
  5781     1FE8                     	;# 
  5782     1FE9                     	;# 
  5783     1FEA                     	;# 
  5784     1FEB                     	;# 
  5785     1FED                     	;# 
  5786     1FEE                     	;# 
  5787     1FEF                     	;# 
  5788                           
  5789                           	psect	idataBANK1
  5790     07F8                     __pidataBANK1:
  5791                           
  5792                           ;initializer for save_top_adc_point@F10607
  5793     07F8  3401               	retlw	1
  5794     07F9  3406               	retlw	6
  5795     07FA  3400               	retlw	0
  5796     07FB  343E               	retlw	62
  5797     07FC  342E               	retlw	46
  5798     07FD  34E0               	retlw	224
  5799     07FE  3400               	retlw	0
  5800     07FF  3400               	retlw	0
  5801                           
  5802                           	psect	idataBANK3
  5803     1F92                     __pidataBANK3:
  5804                           
  5805                           ;initializer for send_measured_command@F10562
  5806     1F92  3401               	retlw	1
  5807     1F93  3403               	retlw	3
  5808     1F94  3400               	retlw	0
  5809     1F95  3401               	retlw	1
  5810     1F96  3400               	retlw	0
  5811     1F97  3404               	retlw	4
  5812     1F98  3415               	retlw	21
  5813     1F99  34C9               	retlw	201
  5814     1F9A  3400               	retlw	0
  5815     1F9B  3400               	retlw	0
  5816     1F9C  3400               	retlw	0
  5817     1F9D  3400               	retlw	0
  5818     1F9E  3400               	retlw	0
  5819     1F9F  3400               	retlw	0
  5820     1FA0  3400               	retlw	0
  5821     1FA1  3400               	retlw	0
  5822     1FA2  3400               	retlw	0
  5823     1FA3  3400               	retlw	0
  5824     1FA4  3400               	retlw	0
  5825     1FA5  3400               	retlw	0
  5826     1FA6  3400               	retlw	0
  5827     1FA7  3400               	retlw	0
  5828     1FA8  3400               	retlw	0
  5829     1FA9  3400               	retlw	0
  5830     1FAA  3400               	retlw	0
  5831     1FAB  3400               	retlw	0
  5832     1FAC  3400               	retlw	0
  5833     1FAD  3400               	retlw	0
  5834     1FAE  3400               	retlw	0
  5835     1FAF  3400               	retlw	0
  5836     1FB0  3400               	retlw	0
  5837     1FB1  3400               	retlw	0
  5838                           
  5839                           	psect	idataBANK5
  5840     11FE                     __pidataBANK5:
  5841                           
  5842                           ;initializer for set_bottom_calibrate_point@F10591
  5843     11FE  3401               	retlw	1
  5844     11FF  3406               	retlw	6
  5845     1200  3400               	retlw	0
  5846     1201  3438               	retlw	56
  5847     1202  3401               	retlw	1
  5848     1203  34C9               	retlw	201
  5849     1204  34C7               	retlw	199
  5850     1205  3400               	retlw	0
  5851     1206  3400               	retlw	0
  5852     1207  3400               	retlw	0
  5853     1208  3400               	retlw	0
  5854     1209  3400               	retlw	0
  5855     120A  3400               	retlw	0
  5856     120B  3400               	retlw	0
  5857     120C  3400               	retlw	0
  5858     120D  3400               	retlw	0
  5859     120E  3400               	retlw	0
  5860     120F  3400               	retlw	0
  5861     1210  3400               	retlw	0
  5862     1211  3400               	retlw	0
  5863     1212  3400               	retlw	0
  5864     1213  3400               	retlw	0
  5865     1214  3400               	retlw	0
  5866     1215  3400               	retlw	0
  5867     1216  3400               	retlw	0
  5868     1217  3400               	retlw	0
  5869     1218  3400               	retlw	0
  5870     1219  3400               	retlw	0
  5871     121A  3400               	retlw	0
  5872     121B  3400               	retlw	0
  5873     121C  3400               	retlw	0
  5874     121D  3400               	retlw	0
  5875                           
  5876                           ;initializer for set_top_calibrate_point@F10588
  5877     121E  3401               	retlw	1
  5878     121F  3406               	retlw	6
  5879     1220  3400               	retlw	0
  5880     1221  3436               	retlw	54
  5881     1222  3401               	retlw	1
  5882     1223  34A8               	retlw	168
  5883     1224  3404               	retlw	4
  5884     1225  3400               	retlw	0
  5885     1226  3400               	retlw	0
  5886     1227  3400               	retlw	0
  5887     1228  3400               	retlw	0
  5888     1229  3400               	retlw	0
  5889     122A  3400               	retlw	0
  5890     122B  3400               	retlw	0
  5891     122C  3400               	retlw	0
  5892     122D  3400               	retlw	0
  5893     122E  3400               	retlw	0
  5894     122F  3400               	retlw	0
  5895     1230  3400               	retlw	0
  5896     1231  3400               	retlw	0
  5897     1232  3400               	retlw	0
  5898     1233  3400               	retlw	0
  5899     1234  3400               	retlw	0
  5900     1235  3400               	retlw	0
  5901     1236  3400               	retlw	0
  5902     1237  3400               	retlw	0
  5903     1238  3400               	retlw	0
  5904     1239  3400               	retlw	0
  5905     123A  3400               	retlw	0
  5906     123B  3400               	retlw	0
  5907     123C  3400               	retlw	0
  5908     123D  3400               	retlw	0
  5909                           
  5910                           	psect	idataBANK6
  5911     11BE                     __pidataBANK6:
  5912                           
  5913                           ;initializer for save_bottom_adc_point@F10612
  5914     11BE  3401               	retlw	1
  5915     11BF  3406               	retlw	6
  5916     11C0  3400               	retlw	0
  5917     11C1  343F               	retlw	63
  5918     11C2  3400               	retlw	0
  5919     11C3  34FF               	retlw	255
  5920     11C4  3400               	retlw	0
  5921     11C5  3400               	retlw	0
  5922     11C6  3400               	retlw	0
  5923     11C7  3400               	retlw	0
  5924     11C8  3400               	retlw	0
  5925     11C9  3400               	retlw	0
  5926     11CA  3400               	retlw	0
  5927     11CB  3400               	retlw	0
  5928     11CC  3400               	retlw	0
  5929     11CD  3400               	retlw	0
  5930     11CE  3400               	retlw	0
  5931     11CF  3400               	retlw	0
  5932     11D0  3400               	retlw	0
  5933     11D1  3400               	retlw	0
  5934     11D2  3400               	retlw	0
  5935     11D3  3400               	retlw	0
  5936     11D4  3400               	retlw	0
  5937     11D5  3400               	retlw	0
  5938     11D6  3400               	retlw	0
  5939     11D7  3400               	retlw	0
  5940     11D8  3400               	retlw	0
  5941     11D9  3400               	retlw	0
  5942     11DA  3400               	retlw	0
  5943     11DB  3400               	retlw	0
  5944     11DC  3400               	retlw	0
  5945     11DD  3400               	retlw	0
  5946                           
  5947                           ;initializer for measured_adc@F10595
  5948     11DE  3401               	retlw	1
  5949     11DF  3403               	retlw	3
  5950     11E0  3400               	retlw	0
  5951     11E1  3466               	retlw	102
  5952     11E2  3400               	retlw	0
  5953     11E3  3401               	retlw	1
  5954     11E4  3464               	retlw	100
  5955     11E5  3415               	retlw	21
  5956     11E6  3400               	retlw	0
  5957     11E7  3400               	retlw	0
  5958     11E8  3400               	retlw	0
  5959     11E9  3400               	retlw	0
  5960     11EA  3400               	retlw	0
  5961     11EB  3400               	retlw	0
  5962     11EC  3400               	retlw	0
  5963     11ED  3400               	retlw	0
  5964     11EE  3400               	retlw	0
  5965     11EF  3400               	retlw	0
  5966     11F0  3400               	retlw	0
  5967     11F1  3400               	retlw	0
  5968     11F2  3400               	retlw	0
  5969     11F3  3400               	retlw	0
  5970     11F4  3400               	retlw	0
  5971     11F5  3400               	retlw	0
  5972     11F6  3400               	retlw	0
  5973     11F7  3400               	retlw	0
  5974     11F8  3400               	retlw	0
  5975     11F9  3400               	retlw	0
  5976     11FA  3400               	retlw	0
  5977     11FB  3400               	retlw	0
  5978     11FC  3400               	retlw	0
  5979     11FD  3400               	retlw	0
  5980                           
  5981                           	psect	stringtext1
  5982     19FD                     __pstringtext1:
  5983     19FD                     _octpowers:
  5984     19FD  3401               	retlw	1
  5985     19FE  3400               	retlw	0
  5986     19FF  3408               	retlw	8
  5987     1A00  3400               	retlw	0
  5988     1A01  3440               	retlw	64
  5989     1A02  3400               	retlw	0
  5990     1A03  3400               	retlw	0
  5991     1A04  3402               	retlw	2
  5992     1A05  3400               	retlw	0
  5993     1A06  3410               	retlw	16
  5994     1A07  3400               	retlw	0
  5995     1A08  3480               	retlw	128
  5996     1A09                     __end_of_octpowers:
  5997                           
  5998                           	psect	stringtext2
  5999     1A1F                     __pstringtext2:
  6000     1A1F                     _dpowers:
  6001     1A1F  3401               	retlw	1
  6002     1A20  3400               	retlw	0
  6003     1A21  340A               	retlw	10
  6004     1A22  3400               	retlw	0
  6005     1A23  3464               	retlw	100
  6006     1A24  3400               	retlw	0
  6007     1A25  34E8               	retlw	232
  6008     1A26  3403               	retlw	3
  6009     1A27  3410               	retlw	16
  6010     1A28  3427               	retlw	39
  6011     1A29                     __end_of_dpowers:
  6012                           
  6013                           	psect	stringtext3
  6014     1800                     __pstringtext3:
  6015     1800                     _hexpowers:
  6016     1800  3401               	retlw	1
  6017     1801  3400               	retlw	0
  6018     1802  3410               	retlw	16
  6019     1803  3400               	retlw	0
  6020     1804  3400               	retlw	0
  6021     1805  3401               	retlw	1
  6022     1806  3400               	retlw	0
  6023     1807  3410               	retlw	16
  6024     1808                     __end_of_hexpowers:
  6025     001A                     _LATCbits	set	26
  6026     000C                     _PORTAbits	set	12
  6027     0012                     _TRISAbits	set	18
  6028     000B                     _INTCONbits	set	11
  6029     0014                     _TRISC	set	20
  6030     0012                     _TRISA	set	18
  6031     001A                     _LATC	set	26
  6032     0018                     _LATA	set	24
  6033     005F                     _GIE	set	95
  6034     0119                     _RC1REG	set	281
  6035     011A                     _TX1REG	set	282
  6036     011D                     _RC1STA	set	285
  6037     011E                     _TX1STA	set	286
  6038     011C                     _SP1BRGH	set	284
  6039     011B                     _SP1BRGL	set	283
  6040     011F                     _BAUD1CON	set	287
  6041     0190                     _SSP1CON1bits	set	400
  6042     018C                     _SSP1BUF	set	396
  6043     0191                     _SSP1CON2bits	set	401
  6044     018F                     _SSP1STATbits	set	399
  6045     018E                     _SSP1MSK	set	398
  6046     018D                     _SSP1ADD	set	397
  6047     0191                     _SSP1CON2	set	401
  6048     0190                     _SSP1CON1	set	400
  6049     018F                     _SSP1STAT	set	399
  6050     059E                     _T0CON0	set	1438
  6051     059C                     _TMR0L	set	1436
  6052     059D                     _TMR0H	set	1437
  6053     059F                     _T0CON1	set	1439
  6054     0716                     _PIE0bits	set	1814
  6055     070C                     _PIR0bits	set	1804
  6056     0719                     _PIE3bits	set	1817
  6057     070F                     _PIR3bits	set	1807
  6058     079D                     _PMD7	set	1949
  6059     079C                     _PMD6	set	1948
  6060     079B                     _PMD5	set	1947
  6061     079A                     _PMD4	set	1946
  6062     0799                     _PMD3	set	1945
  6063     0798                     _PMD2	set	1944
  6064     0797                     _PMD1	set	1943
  6065     0796                     _PMD0	set	1942
  6066     0892                     _OSCTUNE	set	2194
  6067     0893                     _OSCFRQ	set	2195
  6068     0891                     _OSCEN	set	2193
  6069     088F                     _OSCCON3	set	2191
  6070     088D                     _OSCCON1	set	2189
  6071     1ECB                     _RX1DTPPS	set	7883
  6072     1EC6                     _SSP1DATPPS	set	7878
  6073     1EC5                     _SSP1CLKPPS	set	7877
  6074     1F15                     _RA5PPS	set	7957
  6075     1F38                     _ANSELAbits	set	7992
  6076     1F25                     _RC5PPS	set	7973
  6077     1F21                     _RC1PPS	set	7969
  6078     1F23                     _RC3PPS	set	7971
  6079     1F20                     _RC0PPS	set	7968
  6080     1F52                     _INLVLC	set	8018
  6081     1F3C                     _INLVLA	set	7996
  6082     1F51                     _SLRCONC	set	8017
  6083     1F3B                     _SLRCONA	set	7995
  6084     1F50                     _ODCONC	set	8016
  6085     1F3A                     _ODCONA	set	7994
  6086     1F4F                     _WPUC	set	8015
  6087     1F39                     _WPUA	set	7993
  6088     1F38                     _ANSELA	set	7992
  6089     1F4E                     _ANSELC	set	8014
  6090     1808                     STR_9:
  6091     1808  345B               	retlw	91	;'['
  6092     1809  346C               	retlw	108	;'l'
  6093     180A  3475               	retlw	117	;'u'
  6094     180B  345D               	retlw	93	;']'
  6095     180C  3420               	retlw	32	;' '
  6096     180D  3443               	retlw	67	;'C'
  6097     180E  3461               	retlw	97	;'a'
  6098     180F  346C               	retlw	108	;'l'
  6099     1810  3469               	retlw	105	;'i'
  6100     1811  3462               	retlw	98	;'b'
  6101     1812  3472               	retlw	114	;'r'
  6102     1813  3461               	retlw	97	;'a'
  6103     1814  3474               	retlw	116	;'t'
  6104     1815  3469               	retlw	105	;'i'
  6105     1816  346F               	retlw	111	;'o'
  6106     1817  346E               	retlw	110	;'n'
  6107     1818  3420               	retlw	32	;' '
  6108     1819  3456               	retlw	86	;'V'
  6109     181A  3461               	retlw	97	;'a'
  6110     181B  346C               	retlw	108	;'l'
  6111     181C  3475               	retlw	117	;'u'
  6112     181D  3465               	retlw	101	;'e'
  6113     181E  343A               	retlw	58	;':'
  6114     181F  3420               	retlw	32	;' '
  6115     1820  342D               	retlw	45	;'-'
  6116     1821  342D               	retlw	45	;'-'
  6117     1822  342D               	retlw	45	;'-'
  6118     1823  342D               	retlw	45	;'-'
  6119     1824  3420               	retlw	32	;' '
  6120     1825  340D               	retlw	13
  6121     1826  340A               	retlw	10
  6122     1827  3420               	retlw	32	;' '
  6123     1828  3470               	retlw	112	;'p'
  6124     1829  3448               	retlw	72	;'H'
  6125     182A  345F               	retlw	95	;'_'
  6126     182B  3461               	retlw	97	;'a'
  6127     182C  3464               	retlw	100	;'d'
  6128     182D  3463               	retlw	99	;'c'
  6129     182E  343A               	retlw	58	;':'
  6130     182F  3420               	retlw	32	;' '
  6131     1830  3425               	retlw	37	;'%'
  6132     1831  3475               	retlw	117	;'u'
  6133     1832  3420               	retlw	32	;' '
  6134     1833  340D               	retlw	13
  6135     1834  340A               	retlw	10
  6136     1835  3470               	retlw	112	;'p'
  6137     1836  3448               	retlw	72	;'H'
  6138     1837  345F               	retlw	95	;'_'
  6139     1838  3468               	retlw	104	;'h'
  6140     1839  3469               	retlw	105	;'i'
  6141     183A  3467               	retlw	103	;'g'
  6142     183B  3468               	retlw	104	;'h'
  6143     183C  3474               	retlw	116	;'t'
  6144     183D  345F               	retlw	95	;'_'
  6145     183E  3462               	retlw	98	;'b'
  6146     183F  3479               	retlw	121	;'y'
  6147     1840  3474               	retlw	116	;'t'
  6148     1841  3465               	retlw	101	;'e'
  6149     1842  343A               	retlw	58	;':'
  6150     1843  3420               	retlw	32	;' '
  6151     1844  3425               	retlw	37	;'%'
  6152     1845  3430               	retlw	48	;'0'
  6153     1846  3432               	retlw	50	;'2'
  6154     1847  3458               	retlw	88	;'X'
  6155     1848  3420               	retlw	32	;' '
  6156     1849  340D               	retlw	13
  6157     184A  340A               	retlw	10
  6158     184B  3470               	retlw	112	;'p'
  6159     184C  3448               	retlw	72	;'H'
  6160     184D  345F               	retlw	95	;'_'
  6161     184E  346C               	retlw	108	;'l'
  6162     184F  346F               	retlw	111	;'o'
  6163     1850  3477               	retlw	119	;'w'
  6164     1851  345F               	retlw	95	;'_'
  6165     1852  3462               	retlw	98	;'b'
  6166     1853  3479               	retlw	121	;'y'
  6167     1854  3474               	retlw	116	;'t'
  6168     1855  3465               	retlw	101	;'e'
  6169     1856  343A               	retlw	58	;':'
  6170     1857  3420               	retlw	32	;' '
  6171     1858  3425               	retlw	37	;'%'
  6172     1859  3430               	retlw	48	;'0'
  6173     185A  3432               	retlw	50	;'2'
  6174     185B  3458               	retlw	88	;'X'
  6175     185C  3420               	retlw	32	;' '
  6176     185D  340D               	retlw	13
  6177     185E  340A               	retlw	10
  6178     185F  3400               	retlw	0
  6179                           
  6180                           	psect	stringtext4
  6181     1860                     __pstringtext4:
  6182     1860                     STR_26:
  6183     1860  345B               	retlw	91	;'['
  6184     1861  3452               	retlw	82	;'R'
  6185     1862  3465               	retlw	101	;'e'
  6186     1863  3471               	retlw	113	;'q'
  6187     1864  3475               	retlw	117	;'u'
  6188     1865  3465               	retlw	101	;'e'
  6189     1866  3473               	retlw	115	;'s'
  6190     1867  3474               	retlw	116	;'t'
  6191     1868  345D               	retlw	93	;']'
  6192     1869  3420               	retlw	32	;' '
  6193     186A  3464               	retlw	100	;'d'
  6194     186B  3461               	retlw	97	;'a'
  6195     186C  3474               	retlw	116	;'t'
  6196     186D  3461               	retlw	97	;'a'
  6197     186E  3420               	retlw	32	;' '
  6198     186F  3466               	retlw	102	;'f'
  6199     1870  3472               	retlw	114	;'r'
  6200     1871  346F               	retlw	111	;'o'
  6201     1872  346D               	retlw	109	;'m'
  6202     1873  3420               	retlw	32	;' '
  6203     1874  3470               	retlw	112	;'p'
  6204     1875  3468               	retlw	104	;'h'
  6205     1876  3434               	retlw	52	;'4'
  6206     1877  3438               	retlw	56	;'8'
  6207     1878  3435               	retlw	53	;'5'
  6208     1879  3420               	retlw	32	;' '
  6209     187A  3470               	retlw	112	;'p'
  6210     187B  3472               	retlw	114	;'r'
  6211     187C  346F               	retlw	111	;'o'
  6212     187D  3462               	retlw	98	;'b'
  6213     187E  3465               	retlw	101	;'e'
  6214     187F  3420               	retlw	32	;' '
  6215     1880  342D               	retlw	45	;'-'
  6216     1881  342D               	retlw	45	;'-'
  6217     1882  342D               	retlw	45	;'-'
  6218     1883  3420               	retlw	32	;' '
  6219     1884  3420               	retlw	32	;' '
  6220     1885  340D               	retlw	13
  6221     1886  340A               	retlw	10
  6222     1887  3400               	retlw	0
  6223                           
  6224                           	psect	stringtext5
  6225     1888                     __pstringtext5:
  6226     1888                     STR_6:
  6227     1888  3453               	retlw	83	;'S'
  6228     1889  3454               	retlw	84	;'T'
  6229     188A  3441               	retlw	65	;'A'
  6230     188B  3454               	retlw	84	;'T'
  6231     188C  3445               	retlw	69	;'E'
  6232     188D  345F               	retlw	95	;'_'
  6233     188E  3453               	retlw	83	;'S'
  6234     188F  3441               	retlw	65	;'A'
  6235     1890  3456               	retlw	86	;'V'
  6236     1891  3445               	retlw	69	;'E'
  6237     1892  345F               	retlw	95	;'_'
  6238     1893  3442               	retlw	66	;'B'
  6239     1894  344F               	retlw	79	;'O'
  6240     1895  3454               	retlw	84	;'T'
  6241     1896  3454               	retlw	84	;'T'
  6242     1897  344F               	retlw	79	;'O'
  6243     1898  344D               	retlw	77	;'M'
  6244     1899  345F               	retlw	95	;'_'
  6245     189A  3443               	retlw	67	;'C'
  6246     189B  3441               	retlw	65	;'A'
  6247     189C  344C               	retlw	76	;'L'
  6248     189D  3449               	retlw	73	;'I'
  6249     189E  3442               	retlw	66	;'B'
  6250     189F  3452               	retlw	82	;'R'
  6251     18A0  3441               	retlw	65	;'A'
  6252     18A1  3454               	retlw	84	;'T'
  6253     18A2  3449               	retlw	73	;'I'
  6254     18A3  344F               	retlw	79	;'O'
  6255     18A4  344E               	retlw	78	;'N'
  6256     18A5  345F               	retlw	95	;'_'
  6257     18A6  3450               	retlw	80	;'P'
  6258     18A7  344F               	retlw	79	;'O'
  6259     18A8  3449               	retlw	73	;'I'
  6260     18A9  344E               	retlw	78	;'N'
  6261     18AA  3454               	retlw	84	;'T'
  6262     18AB  340D               	retlw	13
  6263     18AC  340A               	retlw	10
  6264     18AD  3400               	retlw	0
  6265                           
  6266                           	psect	stringtext6
  6267     18AE                     __pstringtext6:
  6268     18AE                     STR_10:
  6269     18AE  345B               	retlw	91	;'['
  6270     18AF  3450               	retlw	80	;'P'
  6271     18B0  3449               	retlw	73	;'I'
  6272     18B1  3443               	retlw	67	;'C'
  6273     18B2  345D               	retlw	93	;']'
  6274     18B3  3420               	retlw	32	;' '
  6275     18B4  3469               	retlw	105	;'i'
  6276     18B5  346E               	retlw	110	;'n'
  6277     18B6  3474               	retlw	116	;'t'
  6278     18B7  346F               	retlw	111	;'o'
  6279     18B8  3420               	retlw	32	;' '
  6280     18B9  3474               	retlw	116	;'t'
  6281     18BA  3468               	retlw	104	;'h'
  6282     18BB  3465               	retlw	101	;'e'
  6283     18BC  3420               	retlw	32	;' '
  6284     18BD  3453               	retlw	83	;'S'
  6285     18BE  3454               	retlw	84	;'T'
  6286     18BF  3441               	retlw	65	;'A'
  6287     18C0  3454               	retlw	84	;'T'
  6288     18C1  3445               	retlw	69	;'E'
  6289     18C2  345F               	retlw	95	;'_'
  6290     18C3  344F               	retlw	79	;'O'
  6291     18C4  3455               	retlw	85	;'U'
  6292     18C5  3454               	retlw	84	;'T'
  6293     18C6  3450               	retlw	80	;'P'
  6294     18C7  3455               	retlw	85	;'U'
  6295     18C8  3454               	retlw	84	;'T'
  6296     18C9  345F               	retlw	95	;'_'
  6297     18CA  3456               	retlw	86	;'V'
  6298     18CB  3441               	retlw	65	;'A'
  6299     18CC  344C               	retlw	76	;'L'
  6300     18CD  3455               	retlw	85	;'U'
  6301     18CE  3445               	retlw	69	;'E'
  6302     18CF  3420               	retlw	32	;' '
  6303     18D0  340D               	retlw	13
  6304     18D1  340A               	retlw	10
  6305     18D2  3400               	retlw	0
  6306                           
  6307                           	psect	stringtext7
  6308     18D3                     __pstringtext7:
  6309     18D3                     STR_11:
  6310     18D3  345B               	retlw	91	;'['
  6311     18D4  3452               	retlw	82	;'R'
  6312     18D5  3478               	retlw	120	;'x'
  6313     18D6  3462               	retlw	98	;'b'
  6314     18D7  3475               	retlw	117	;'u'
  6315     18D8  3466               	retlw	102	;'f'
  6316     18D9  345D               	retlw	93	;']'
  6317     18DA  3420               	retlw	32	;' '
  6318     18DB  3450               	retlw	80	;'P'
  6319     18DC  3448               	retlw	72	;'H'
  6320     18DD  343A               	retlw	58	;':'
  6321     18DE  3420               	retlw	32	;' '
  6322     18DF  3425               	retlw	37	;'%'
  6323     18E0  3475               	retlw	117	;'u'
  6324     18E1  3420               	retlw	32	;' '
  6325     18E2  3428               	retlw	40	;'('
  6326     18E3  3430               	retlw	48	;'0'
  6327     18E4  342E               	retlw	46	;'.'
  6328     18E5  3430               	retlw	48	;'0'
  6329     18E6  3431               	retlw	49	;'1'
  6330     18E7  342A               	retlw	42	;'*'
  6331     18E8  3475               	retlw	117	;'u'
  6332     18E9  346E               	retlw	110	;'n'
  6333     18EA  3469               	retlw	105	;'i'
  6334     18EB  3474               	retlw	116	;'t'
  6335     18EC  3429               	retlw	41	;')'
  6336     18ED  340D               	retlw	13
  6337     18EE  340A               	retlw	10
  6338     18EF  3454               	retlw	84	;'T'
  6339     18F0  3445               	retlw	69	;'E'
  6340     18F1  344D               	retlw	77	;'M'
  6341     18F2  3450               	retlw	80	;'P'
  6342     18F3  343A               	retlw	58	;':'
  6343     18F4  3420               	retlw	32	;' '
  6344     18F5  3425               	retlw	37	;'%'
  6345     18F6  3475               	retlw	117	;'u'
  6346     18F7  3400               	retlw	0
  6347                           
  6348                           	psect	stringtext8
  6349     18F8                     __pstringtext8:
  6350     18F8                     STR_4:
  6351     18F8  3453               	retlw	83	;'S'
  6352     18F9  3454               	retlw	84	;'T'
  6353     18FA  3441               	retlw	65	;'A'
  6354     18FB  3454               	retlw	84	;'T'
  6355     18FC  3445               	retlw	69	;'E'
  6356     18FD  345F               	retlw	95	;'_'
  6357     18FE  3453               	retlw	83	;'S'
  6358     18FF  3441               	retlw	65	;'A'
  6359     1900  3456               	retlw	86	;'V'
  6360     1901  3445               	retlw	69	;'E'
  6361     1902  345F               	retlw	95	;'_'
  6362     1903  3454               	retlw	84	;'T'
  6363     1904  344F               	retlw	79	;'O'
  6364     1905  3450               	retlw	80	;'P'
  6365     1906  345F               	retlw	95	;'_'
  6366     1907  3443               	retlw	67	;'C'
  6367     1908  3441               	retlw	65	;'A'
  6368     1909  344C               	retlw	76	;'L'
  6369     190A  3449               	retlw	73	;'I'
  6370     190B  3442               	retlw	66	;'B'
  6371     190C  3452               	retlw	82	;'R'
  6372     190D  3441               	retlw	65	;'A'
  6373     190E  3454               	retlw	84	;'T'
  6374     190F  3449               	retlw	73	;'I'
  6375     1910  344F               	retlw	79	;'O'
  6376     1911  344E               	retlw	78	;'N'
  6377     1912  345F               	retlw	95	;'_'
  6378     1913  3450               	retlw	80	;'P'
  6379     1914  344F               	retlw	79	;'O'
  6380     1915  3449               	retlw	73	;'I'
  6381     1916  344E               	retlw	78	;'N'
  6382     1917  3454               	retlw	84	;'T'
  6383     1918  340D               	retlw	13
  6384     1919  340A               	retlw	10
  6385     191A  3400               	retlw	0
  6386                           
  6387                           	psect	stringtext9
  6388     191B                     __pstringtext9:
  6389     191B                     STR_29:
  6390     191B  342D               	retlw	45	;'-'
  6391     191C  342D               	retlw	45	;'-'
  6392     191D  342D               	retlw	45	;'-'
  6393     191E  3420               	retlw	32	;' '
  6394     191F  3443               	retlw	67	;'C'
  6395     1920  3461               	retlw	97	;'a'
  6396     1921  346C               	retlw	108	;'l'
  6397     1922  3469               	retlw	105	;'i'
  6398     1923  3462               	retlw	98	;'b'
  6399     1924  3472               	retlw	114	;'r'
  6400     1925  3461               	retlw	97	;'a'
  6401     1926  3474               	retlw	116	;'t'
  6402     1927  3469               	retlw	105	;'i'
  6403     1928  346F               	retlw	111	;'o'
  6404     1929  346E               	retlw	110	;'n'
  6405     192A  342D               	retlw	45	;'-'
  6406     192B  3441               	retlw	65	;'A'
  6407     192C  3444               	retlw	68	;'D'
  6408     192D  3443               	retlw	67	;'C'
  6409     192E  342D               	retlw	45	;'-'
  6410     192F  3452               	retlw	82	;'R'
  6411     1930  3465               	retlw	101	;'e'
  6412     1931  3471               	retlw	113	;'q'
  6413     1932  3475               	retlw	117	;'u'
  6414     1933  3465               	retlw	101	;'e'
  6415     1934  3473               	retlw	115	;'s'
  6416     1935  3474               	retlw	116	;'t'
  6417     1936  3420               	retlw	32	;' '
  6418     1937  340D               	retlw	13
  6419     1938  340A               	retlw	10
  6420     1939  3400               	retlw	0
  6421                           
  6422                           	psect	stringtext10
  6423     193A                     __pstringtext10:
  6424     193A                     STR_31:
  6425     193A  344E               	retlw	78	;'N'
  6426     193B  346F               	retlw	111	;'o'
  6427     193C  3477               	retlw	119	;'w'
  6428     193D  342D               	retlw	45	;'-'
  6429     193E  3450               	retlw	80	;'P'
  6430     193F  3448               	retlw	72	;'H'
  6431     1940  342D               	retlw	45	;'-'
  6432     1941  3441               	retlw	65	;'A'
  6433     1942  3444               	retlw	68	;'D'
  6434     1943  3443               	retlw	67	;'C'
  6435     1944  342D               	retlw	45	;'-'
  6436     1945  3442               	retlw	66	;'B'
  6437     1946  3479               	retlw	121	;'y'
  6438     1947  3474               	retlw	116	;'t'
  6439     1948  3465               	retlw	101	;'e'
  6440     1949  343A               	retlw	58	;':'
  6441     194A  3420               	retlw	32	;' '
  6442     194B  3425               	retlw	37	;'%'
  6443     194C  3430               	retlw	48	;'0'
  6444     194D  3432               	retlw	50	;'2'
  6445     194E  3458               	retlw	88	;'X'
  6446     194F  3420               	retlw	32	;' '
  6447     1950  3425               	retlw	37	;'%'
  6448     1951  3430               	retlw	48	;'0'
  6449     1952  3432               	retlw	50	;'2'
  6450     1953  3458               	retlw	88	;'X'
  6451     1954  340D               	retlw	13
  6452     1955  340A               	retlw	10
  6453     1956  3400               	retlw	0
  6454                           
  6455                           	psect	stringtext11
  6456     1957                     __pstringtext11:
  6457     1957                     STR_8:
  6458     1957  3420               	retlw	32	;' '
  6459     1958  342D               	retlw	45	;'-'
  6460     1959  342D               	retlw	45	;'-'
  6461     195A  342D               	retlw	45	;'-'
  6462     195B  342D               	retlw	45	;'-'
  6463     195C  342D               	retlw	45	;'-'
  6464     195D  3420               	retlw	32	;' '
  6465     195E  3453               	retlw	83	;'S'
  6466     195F  3454               	retlw	84	;'T'
  6467     1960  3441               	retlw	65	;'A'
  6468     1961  3454               	retlw	84	;'T'
  6469     1962  3445               	retlw	69	;'E'
  6470     1963  345F               	retlw	95	;'_'
  6471     1964  344F               	retlw	79	;'O'
  6472     1965  3455               	retlw	85	;'U'
  6473     1966  3454               	retlw	84	;'T'
  6474     1967  3450               	retlw	80	;'P'
  6475     1968  3455               	retlw	85	;'U'
  6476     1969  3454               	retlw	84	;'T'
  6477     196A  345F               	retlw	95	;'_'
  6478     196B  3441               	retlw	65	;'A'
  6479     196C  3444               	retlw	68	;'D'
  6480     196D  3443               	retlw	67	;'C'
  6481     196E  3420               	retlw	32	;' '
  6482     196F  340D               	retlw	13
  6483     1970  340A               	retlw	10
  6484     1971  3400               	retlw	0
  6485                           
  6486                           	psect	stringtext12
  6487     1972                     __pstringtext12:
  6488     1972                     STR_30:
  6489     1972  344E               	retlw	78	;'N'
  6490     1973  346F               	retlw	111	;'o'
  6491     1974  3477               	retlw	119	;'w'
  6492     1975  342D               	retlw	45	;'-'
  6493     1976  3450               	retlw	80	;'P'
  6494     1977  3448               	retlw	72	;'H'
  6495     1978  342D               	retlw	45	;'-'
  6496     1979  3441               	retlw	65	;'A'
  6497     197A  3444               	retlw	68	;'D'
  6498     197B  3443               	retlw	67	;'C'
  6499     197C  342D               	retlw	45	;'-'
  6500     197D  3476               	retlw	118	;'v'
  6501     197E  3461               	retlw	97	;'a'
  6502     197F  346C               	retlw	108	;'l'
  6503     1980  3475               	retlw	117	;'u'
  6504     1981  3465               	retlw	101	;'e'
  6505     1982  343A               	retlw	58	;':'
  6506     1983  3420               	retlw	32	;' '
  6507     1984  3425               	retlw	37	;'%'
  6508     1985  3475               	retlw	117	;'u'
  6509     1986  340D               	retlw	13
  6510     1987  340A               	retlw	10
  6511     1988  3400               	retlw	0
  6512                           
  6513                           	psect	stringtext13
  6514     1989                     __pstringtext13:
  6515     1989                     STR_1:
  6516     1989  3450               	retlw	80	;'P'
  6517     198A  3448               	retlw	72	;'H'
  6518     198B  3420               	retlw	32	;' '
  6519     198C  3450               	retlw	80	;'P'
  6520     198D  3472               	retlw	114	;'r'
  6521     198E  346F               	retlw	111	;'o'
  6522     198F  3462               	retlw	98	;'b'
  6523     1990  3465               	retlw	101	;'e'
  6524     1991  3420               	retlw	32	;' '
  6525     1992  3477               	retlw	119	;'w'
  6526     1993  3469               	retlw	105	;'i'
  6527     1994  3474               	retlw	116	;'t'
  6528     1995  3468               	retlw	104	;'h'
  6529     1996  3420               	retlw	32	;' '
  6530     1997  3452               	retlw	82	;'R'
  6531     1998  3453               	retlw	83	;'S'
  6532     1999  3434               	retlw	52	;'4'
  6533     199A  3438               	retlw	56	;'8'
  6534     199B  3435               	retlw	53	;'5'
  6535     199C  340D               	retlw	13
  6536     199D  340A               	retlw	10
  6537     199E  3400               	retlw	0
  6538                           
  6539                           	psect	stringtext14
  6540     199F                     __pstringtext14:
  6541     199F                     STR_33:
  6542     199F  3430               	retlw	48	;'0'
  6543     19A0  3431               	retlw	49	;'1'
  6544     19A1  3432               	retlw	50	;'2'
  6545     19A2  3433               	retlw	51	;'3'
  6546     19A3  3434               	retlw	52	;'4'
  6547     19A4  3435               	retlw	53	;'5'
  6548     19A5  3436               	retlw	54	;'6'
  6549     19A6  3437               	retlw	55	;'7'
  6550     19A7  3438               	retlw	56	;'8'
  6551     19A8  3439               	retlw	57	;'9'
  6552     19A9  3441               	retlw	65	;'A'
  6553     19AA  3442               	retlw	66	;'B'
  6554     19AB  3443               	retlw	67	;'C'
  6555     19AC  3444               	retlw	68	;'D'
  6556     19AD  3445               	retlw	69	;'E'
  6557     19AE  3446               	retlw	70	;'F'
  6558     19AF  3400               	retlw	0
  6559                           
  6560                           	psect	stringtext15
  6561     19B0                     __pstringtext15:
  6562     19B0                     STR_34:
  6563     19B0  3430               	retlw	48	;'0'
  6564     19B1  3431               	retlw	49	;'1'
  6565     19B2  3432               	retlw	50	;'2'
  6566     19B3  3433               	retlw	51	;'3'
  6567     19B4  3434               	retlw	52	;'4'
  6568     19B5  3435               	retlw	53	;'5'
  6569     19B6  3436               	retlw	54	;'6'
  6570     19B7  3437               	retlw	55	;'7'
  6571     19B8  3438               	retlw	56	;'8'
  6572     19B9  3439               	retlw	57	;'9'
  6573     19BA  3461               	retlw	97	;'a'
  6574     19BB  3462               	retlw	98	;'b'
  6575     19BC  3463               	retlw	99	;'c'
  6576     19BD  3464               	retlw	100	;'d'
  6577     19BE  3465               	retlw	101	;'e'
  6578     19BF  3466               	retlw	102	;'f'
  6579     19C0  3400               	retlw	0
  6580                           
  6581                           	psect	stringtext16
  6582     19C1                     __pstringtext16:
  6583     19C1                     STR_24:
  6584     19C1  3462               	retlw	98	;'b'
  6585     19C2  3431               	retlw	49	;'1'
  6586     19C3  3420               	retlw	32	;' '
  6587     19C4  346C               	retlw	108	;'l'
  6588     19C5  346F               	retlw	111	;'o'
  6589     19C6  346E               	retlw	110	;'n'
  6590     19C7  3467               	retlw	103	;'g'
  6591     19C8  3420               	retlw	32	;' '
  6592     19C9  3470               	retlw	112	;'p'
  6593     19CA  3472               	retlw	114	;'r'
  6594     19CB  3465               	retlw	101	;'e'
  6595     19CC  3473               	retlw	115	;'s'
  6596     19CD  3473               	retlw	115	;'s'
  6597     19CE  3420               	retlw	32	;' '
  6598     19CF  340D               	retlw	13
  6599     19D0  340A               	retlw	10
  6600     19D1  3400               	retlw	0
  6601                           
  6602                           	psect	stringtext17
  6603     19D2                     __pstringtext17:
  6604     19D2                     STR_25:
  6605     19D2  3462               	retlw	98	;'b'
  6606     19D3  3432               	retlw	50	;'2'
  6607     19D4  3420               	retlw	32	;' '
  6608     19D5  346C               	retlw	108	;'l'
  6609     19D6  346F               	retlw	111	;'o'
  6610     19D7  346E               	retlw	110	;'n'
  6611     19D8  3467               	retlw	103	;'g'
  6612     19D9  3420               	retlw	32	;' '
  6613     19DA  3470               	retlw	112	;'p'
  6614     19DB  3472               	retlw	114	;'r'
  6615     19DC  3465               	retlw	101	;'e'
  6616     19DD  3473               	retlw	115	;'s'
  6617     19DE  3473               	retlw	115	;'s'
  6618     19DF  3420               	retlw	32	;' '
  6619     19E0  340D               	retlw	13
  6620     19E1  340A               	retlw	10
  6621     19E2  3400               	retlw	0
  6622                           
  6623                           	psect	stringtext18
  6624     19E3                     __pstringtext18:
  6625     19E3                     STR_22:
  6626     19E3  3462               	retlw	98	;'b'
  6627     19E4  3431               	retlw	49	;'1'
  6628     19E5  3420               	retlw	32	;' '
  6629     19E6  3463               	retlw	99	;'c'
  6630     19E7  346C               	retlw	108	;'l'
  6631     19E8  3469               	retlw	105	;'i'
  6632     19E9  3463               	retlw	99	;'c'
  6633     19EA  346B               	retlw	107	;'k'
  6634     19EB  3465               	retlw	101	;'e'
  6635     19EC  3464               	retlw	100	;'d'
  6636     19ED  340D               	retlw	13
  6637     19EE  340A               	retlw	10
  6638     19EF  3400               	retlw	0
  6639                           
  6640                           	psect	stringtext19
  6641     19F0                     __pstringtext19:
  6642     19F0                     STR_23:
  6643     19F0  3462               	retlw	98	;'b'
  6644     19F1  3432               	retlw	50	;'2'
  6645     19F2  3420               	retlw	32	;' '
  6646     19F3  3463               	retlw	99	;'c'
  6647     19F4  346C               	retlw	108	;'l'
  6648     19F5  3469               	retlw	105	;'i'
  6649     19F6  3463               	retlw	99	;'c'
  6650     19F7  346B               	retlw	107	;'k'
  6651     19F8  3465               	retlw	101	;'e'
  6652     19F9  3464               	retlw	100	;'d'
  6653     19FA  340D               	retlw	13
  6654     19FB  340A               	retlw	10
  6655     19FC  3400               	retlw	0
  6656                           
  6657                           	psect	stringtext20
  6658     1A09                     __pstringtext20:
  6659     1A09                     STR_28:
  6660     1A09  3454               	retlw	84	;'T'
  6661     1A0A  3445               	retlw	69	;'E'
  6662     1A0B  344D               	retlw	77	;'M'
  6663     1A0C  3450               	retlw	80	;'P'
  6664     1A0D  343A               	retlw	58	;':'
  6665     1A0E  3420               	retlw	32	;' '
  6666     1A0F  3425               	retlw	37	;'%'
  6667     1A10  3475               	retlw	117	;'u'
  6668     1A11  340D               	retlw	13
  6669     1A12  340A               	retlw	10
  6670     1A13  3400               	retlw	0
  6671                           
  6672                           	psect	stringtext21
  6673     1A14                     __pstringtext21:
  6674     1A14                     STR_3:
  6675     1A14  3430               	retlw	48	;'0'
  6676     1A15  3441               	retlw	65	;'A'
  6677     1A16  3430               	retlw	48	;'0'
  6678     1A17  3431               	retlw	49	;'1'
  6679     1A18  3438               	retlw	56	;'8'
  6680     1A19  3432               	retlw	50	;'2'
  6681     1A1A  3430               	retlw	48	;'0'
  6682     1A1B  3430               	retlw	48	;'0'
  6683     1A1C  3430               	retlw	48	;'0'
  6684     1A1D  3431               	retlw	49	;'1'
  6685     1A1E  3400               	retlw	0
  6686                           
  6687                           	psect	stringtext22
  6688     1A29                     __pstringtext22:
  6689     1A29                     STR_27:
  6690     1A29  3450               	retlw	80	;'P'
  6691     1A2A  3448               	retlw	72	;'H'
  6692     1A2B  343A               	retlw	58	;':'
  6693     1A2C  3420               	retlw	32	;' '
  6694     1A2D  3425               	retlw	37	;'%'
  6695     1A2E  3475               	retlw	117	;'u'
  6696     1A2F  340D               	retlw	13
  6697     1A30  340A               	retlw	10
  6698     1A31  3400               	retlw	0
  6699                           
  6700                           	psect	stringtext23
  6701     1A32                     __pstringtext23:
  6702     1A32                     STR_2:
  6703     1A32  3473               	retlw	115	;'s'
  6704     1A33  346E               	retlw	110	;'n'
  6705     1A34  343A               	retlw	58	;':'
  6706     1A35  3420               	retlw	32	;' '
  6707     1A36  3425               	retlw	37	;'%'
  6708     1A37  3473               	retlw	115	;'s'
  6709     1A38  340D               	retlw	13
  6710     1A39  340A               	retlw	10
  6711     1A3A  3400               	retlw	0
  6712                           
  6713                           	psect	stringtext24
  6714     1A3B                     __pstringtext24:
  6715     1A3B                     STR_5:
  6716     1A3B  3473               	retlw	115	;'s'
  6717     1A3C  3461               	retlw	97	;'a'
  6718     1A3D  3476               	retlw	118	;'v'
  6719     1A3E  3465               	retlw	101	;'e'
  6720     1A3F  3464               	retlw	100	;'d'
  6721     1A40  340D               	retlw	13
  6722     1A41  340A               	retlw	10
  6723     1A42  3400               	retlw	0
  6724                           
  6725                           	psect	stringtext25
  6726     1A43                     __pstringtext25:
  6727     1A43                     STR_32:
  6728     1A43  3428               	retlw	40	;'('
  6729     1A44  346E               	retlw	110	;'n'
  6730     1A45  3475               	retlw	117	;'u'
  6731     1A46  346C               	retlw	108	;'l'
  6732     1A47  346C               	retlw	108	;'l'
  6733     1A48  3429               	retlw	41	;')'
  6734     1A49  3400               	retlw	0
  6735                           
  6736                           	psect	stringtext26
  6737     1A4A                     __pstringtext26:
  6738     1A4A                     STR_18:
  6739     1A4A  3425               	retlw	37	;'%'
  6740     1A4B  3430               	retlw	48	;'0'
  6741     1A4C  3432               	retlw	50	;'2'
  6742     1A4D  3458               	retlw	88	;'X'
  6743     1A4E  3420               	retlw	32	;' '
  6744     1A4F  3400               	retlw	0
  6745                           
  6746                           	psect	stringtext27
  6747     1A50                     __pstringtext27:
  6748     1A50                     STR_12:
  6749     1A50  3425               	retlw	37	;'%'
  6750     1A51  3430               	retlw	48	;'0'
  6751     1A52  3438               	retlw	56	;'8'
  6752     1A53  3478               	retlw	120	;'x'
  6753     1A54  343A               	retlw	58	;':'
  6754     1A55  3400               	retlw	0
  6755                           
  6756                           	psect	stringtext28
  6757     1A56                     __pstringtext28:
  6758     1A56                     STR_13:
  6759     1A56  3420               	retlw	32	;' '
  6760     1A57  3425               	retlw	37	;'%'
  6761     1A58  3430               	retlw	48	;'0'
  6762     1A59  3432               	retlw	50	;'2'
  6763     1A5A  3478               	retlw	120	;'x'
  6764     1A5B  3400               	retlw	0
  6765                           
  6766                           	psect	stringtext29
  6767     1A5C                     __pstringtext29:
  6768     1A5C                     STR_14:
  6769     1A5C  3420               	retlw	32	;' '
  6770     1A5D  3420               	retlw	32	;' '
  6771     1A5E  3420               	retlw	32	;' '
  6772     1A5F  3400               	retlw	0
  6773                           
  6774                           	psect	stringtext30
  6775     1A60                     __pstringtext30:
  6776     1A60                     STR_16:
  6777     1A60  3425               	retlw	37	;'%'
  6778     1A61  3463               	retlw	99	;'c'
  6779     1A62  3400               	retlw	0
  6780                           
  6781                           	psect	stringtext31
  6782     0000                     __pstringtext31:
  6783     1885                     
  6784                           	psect	cinit
  6785     006B                     start_initialization:	
  6786                           ; #config settings
  6787                           
  6788     006B                     __initialization:
  6789                           
  6790                           ; Initialize objects allocated to BANK1
  6791     006B  30F8               	movlw	low __pidataBANK1
  6792     006C  0084               	movwf	4
  6793     006D  3087               	movlw	(high __pidataBANK1)| (0+128)
  6794     006E  0085               	movwf	5
  6795     006F  30DA               	movlw	low __pdataBANK1
  6796     0070  0086               	movwf	6
  6797     0071  3000               	movlw	high __pdataBANK1
  6798     0072  0087               	movwf	7
  6799     0073  3008               	movlw	8
  6800     0074  319D  25A8  3180   	fcall	init_ram
  6801                           
  6802                           ; Initialize objects allocated to BANK3
  6803     0077  3092               	movlw	low __pidataBANK3
  6804     0078  0084               	movwf	4
  6805     0079  309F               	movlw	(high __pidataBANK3)| (0+128)
  6806     007A  0085               	movwf	5
  6807     007B  30C0               	movlw	low __pdataBANK3
  6808     007C  0086               	movwf	6
  6809     007D  3001               	movlw	high __pdataBANK3
  6810     007E  0087               	movwf	7
  6811     007F  3020               	movlw	32
  6812     0080  319D  25A8  3180   	fcall	init_ram
  6813                           
  6814                           ; Initialize objects allocated to BANK5
  6815     0083  30FE               	movlw	low __pidataBANK5
  6816     0084  0084               	movwf	4
  6817     0085  3091               	movlw	(high __pidataBANK5)| (0+128)
  6818     0086  0085               	movwf	5
  6819     0087  30A0               	movlw	low __pdataBANK5
  6820     0088  0086               	movwf	6
  6821     0089  3002               	movlw	high __pdataBANK5
  6822     008A  0087               	movwf	7
  6823     008B  3040               	movlw	64
  6824     008C  319D  25A8  3180   	fcall	init_ram
  6825                           
  6826                           ; Initialize objects allocated to BANK6
  6827     008F  30BE               	movlw	low __pidataBANK6
  6828     0090  0084               	movwf	4
  6829     0091  3091               	movlw	(high __pidataBANK6)| (0+128)
  6830     0092  0085               	movwf	5
  6831     0093  3020               	movlw	low __pdataBANK6
  6832     0094  0086               	movwf	6
  6833     0095  3003               	movlw	high __pdataBANK6
  6834     0096  0087               	movwf	7
  6835     0097  3040               	movlw	64
  6836     0098  319D  25A8  3180   	fcall	init_ram
  6837                           
  6838                           ; Clear objects allocated to COMMON
  6839     009B  01F8               	clrf	__pbssCOMMON& (0+127)
  6840     009C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  6841     009D  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  6842     009E  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  6843     009F  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  6844     00A0  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  6845                           
  6846                           ; Clear objects allocated to BANK0
  6847     00A1  01EF               	clrf	__pbssBANK0& (0+127)
  6848                           
  6849                           ; Clear objects allocated to BANK1
  6850     00A2  30C4               	movlw	low __pbssBANK1
  6851     00A3  0084               	movwf	4
  6852     00A4  3000               	movlw	high __pbssBANK1
  6853     00A5  0085               	movwf	5
  6854     00A6  3016               	movlw	22
  6855     00A7  319D  25A2  3180   	fcall	clear_ram0
  6856                           
  6857                           ; Clear objects allocated to BANK2
  6858     00AA  3067               	movlw	low __pbssBANK2
  6859     00AB  0084               	movwf	4
  6860     00AC  3001               	movlw	high __pbssBANK2
  6861     00AD  0085               	movwf	5
  6862     00AE  3009               	movlw	9
  6863     00AF  319D  25A2  3180   	fcall	clear_ram0
  6864                           
  6865                           ; Clear objects allocated to BANK3
  6866     00B2  30A0               	movlw	low __pbssBANK3
  6867     00B3  0084               	movwf	4
  6868     00B4  3001               	movlw	high __pbssBANK3
  6869     00B5  0085               	movwf	5
  6870     00B6  3020               	movlw	32
  6871     00B7  319D  25A2  3180   	fcall	clear_ram0
  6872                           
  6873                           ; Clear objects allocated to BANK4
  6874     00BA  3020               	movlw	low __pbssBANK4
  6875     00BB  0084               	movwf	4
  6876     00BC  3002               	movlw	high __pbssBANK4
  6877     00BD  0085               	movwf	5
  6878     00BE  3040               	movlw	64
  6879     00BF  319D  25A2  3180   	fcall	clear_ram0
  6880                           
  6881                           ; Clear objects allocated to BANK7
  6882     00C2  30A0               	movlw	low __pbssBANK7
  6883     00C3  0084               	movwf	4
  6884     00C4  3003               	movlw	high __pbssBANK7
  6885     00C5  0085               	movwf	5
  6886     00C6  3020               	movlw	32
  6887     00C7  319D  25A2  3180   	fcall	clear_ram0
  6888     00CA                     end_of_initialization:	
  6889                           ;End of C runtime variable initialization code
  6890                           
  6891     00CA                     __end_of__initialization:
  6892     00CA  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6893     00CB  0140               	movlb	0
  6894     00CC  318C  2C0F         	ljmp	_main	;jump to C main() function
  6895                           
  6896                           	psect	bssCOMMON
  6897     0078                     __pbssCOMMON:
  6898     0078                     _ticks:
  6899     0078                     	ds	4
  6900     007C                     _currentRegister:
  6901     007C                     	ds	1
  6902     007D                     _rxbuffer_index:
  6903     007D                     	ds	1
  6904                           
  6905                           	psect	bssBANK0
  6906     006F                     __pbssBANK0:
  6907     006F                     _uart_rx_states:
  6908     006F                     	ds	1
  6909                           
  6910                           	psect	bssBANK1
  6911     00C4                     __pbssBANK1:
  6912     00C4                     delay_state@prev_ticks_delay:
  6913     00C4                     	ds	4
  6914     00C8                     main@prev_ticks2:
  6915     00C8                     	ds	4
  6916     00CC                     main@rev_ticks_btn_391:
  6917     00CC                     	ds	4
  6918     00D0                     main@prev_ticks_monitor:
  6919     00D0                     	ds	4
  6920     00D4                     _uart_rx_ticks:
  6921     00D4                     	ds	4
  6922     00D8                     _currentState:
  6923     00D8                     	ds	1
  6924     00D9                     _tmp:
  6925     00D9                     	ds	1
  6926                           
  6927                           	psect	dataBANK1
  6928     00DA                     __pdataBANK1:
  6929     00DA                     save_top_adc_point@F10607:
  6930     00DA                     	ds	8
  6931                           
  6932                           	psect	bssBANK2
  6933     0167                     __pbssBANK2:
  6934     0167                     main@prev_ticks:
  6935     0167                     	ds	4
  6936     016B                     main@prev_ticks_btn:
  6937     016B                     	ds	4
  6938     016F                     _uart_rx_package_event:
  6939     016F                     	ds	1
  6940                           
  6941                           	psect	bssBANK3
  6942     01A0                     __pbssBANK3:
  6943     01A0                     _rxbuffer:
  6944     01A0                     	ds	32
  6945                           
  6946                           	psect	dataBANK3
  6947     01C0                     __pdataBANK3:
  6948     01C0                     send_measured_command@F10562:
  6949     01C0                     	ds	32
  6950                           
  6951                           	psect	bssBANK4
  6952     0220                     __pbssBANK4:
  6953     0220                     _slaveData:
  6954     0220                     	ds	64
  6955                           
  6956                           	psect	dataBANK5
  6957     02A0                     __pdataBANK5:
  6958     02A0                     set_bottom_calibrate_point@F10591:
  6959     02A0                     	ds	32
  6960     02C0                     set_top_calibrate_point@F10588:
  6961     02C0                     	ds	32
  6962                           
  6963                           	psect	dataBANK6
  6964     0320                     __pdataBANK6:
  6965     0320                     save_bottom_adc_point@F10612:
  6966     0320                     	ds	32
  6967     0340                     measured_adc@F10595:
  6968     0340                     	ds	32
  6969                           
  6970                           	psect	bssBANK7
  6971     03A0                     __pbssBANK7:
  6972     03A0                     EUSART1_Read_1@F10504:
  6973     03A0                     	ds	32
  6974                           
  6975                           	psect	inittext
  6976     1DA8                     init_ram:
  6977     1DA8  00FE               	movwf	btemp
  6978     1DA9                     initloop:
  6979     1DA9  0012               	moviw fsr0++
  6980     1DAA  001E               	movwi fsr1++
  6981     1DAB  0BFE               	decfsz	btemp,f
  6982     1DAC  2DA9               	goto	initloop
  6983     1DAD  3400               	retlw	0
  6984                           
  6985                           	psect	clrtext
  6986     1DA2                     clear_ram0:	
  6987                           ;	Called with FSR0 containing the base address, and
  6988                           ;	WREG with the size to clear
  6989                           
  6990     1DA2  0064               	clrwdt	;clear the watchdog before getting into this loop
  6991     1DA3                     clrloop0:
  6992     1DA3  0180               	clrf	0	;clear RAM location pointed to by FSR
  6993     1DA4  3101               	addfsr 0,1
  6994     1DA5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6995     1DA6  2DA3               	goto	clrloop0	;have we reached the end yet?
  6996     1DA7  3400               	retlw	0	;all done for this memory range, return
  6997                           
  6998                           	psect	cstackBANK2
  6999     0120                     __pcstackBANK2:
  7000     0120                     main@b2_clicked_count:
  7001                           
  7002                           ; 1 bytes @ 0x0
  7003     0120                     	ds	1
  7004     0121                     main@b1_clicked_count:
  7005                           
  7006                           ; 1 bytes @ 0x1
  7007     0121                     	ds	1
  7008     0122                     main@now:
  7009                           
  7010                           ; 4 bytes @ 0x2
  7011     0122                     	ds	4
  7012     0126                     main@state:
  7013                           
  7014                           ; 1 bytes @ 0x6
  7015     0126                     	ds	1
  7016     0127                     main@sensor_value:
  7017                           
  7018                           ; 10 bytes @ 0x7
  7019     0127                     	ds	10
  7020     0131                     main@b1:
  7021                           
  7022                           ; 27 bytes @ 0x11
  7023     0131                     	ds	27
  7024     014C                     main@b2:
  7025                           
  7026                           ; 27 bytes @ 0x2C
  7027     014C                     	ds	27
  7028                           
  7029                           	psect	cstackBANK1
  7030     00A0                     __pcstackBANK1:
  7031     00A0                     measured_adc@measured_adc_command:
  7032                           
  7033                           ; 32 bytes @ 0x0
  7034     00A0                     	ds	32
  7035     00C0                     ??_main:
  7036                           
  7037                           ; 1 bytes @ 0x20
  7038     00C0                     	ds	4
  7039                           
  7040                           	psect	cstackCOMMON
  7041     0070                     __pcstackCOMMON:
  7042     0070                     ?_isprint:
  7043     0070                     ?_isdigit:	
  7044                           ; 1 bit 
  7045                           
  7046     0070                     ?_isspace:	
  7047                           ; 1 bit 
  7048                           
  7049     0070                     ?_isalpha:	
  7050                           ; 1 bit 
  7051                           
  7052     0070                     ?_isupper:	
  7053                           ; 1 bit 
  7054                           
  7055     0070                     ?_PMD_Initialize:	
  7056                           ; 1 bit 
  7057                           
  7058     0070                     ?_PIN_MANAGER_Initialize:	
  7059                           ; 1 bytes @ 0x0
  7060                           
  7061     0070                     ?_OSCILLATOR_Initialize:	
  7062                           ; 1 bytes @ 0x0
  7063                           
  7064     0070                     ?_tmr0_init:	
  7065                           ; 1 bytes @ 0x0
  7066                           
  7067     0070                     ?_usart_init:	
  7068                           ; 1 bytes @ 0x0
  7069                           
  7070     0070                     ?_i2c_slave_init:	
  7071                           ; 1 bytes @ 0x0
  7072                           
  7073     0070                     ?_init_button:	
  7074                           ; 1 bytes @ 0x0
  7075                           
  7076     0070                     ?_enable_uart_printf:	
  7077                           ; 1 bytes @ 0x0
  7078                           
  7079     0070                     ?_enable_tx_transmit:	
  7080                           ; 1 bytes @ 0x0
  7081                           
  7082     0070                     ?_measured_adc:	
  7083                           ; 1 bytes @ 0x0
  7084                           
  7085     0070                     ?_get_measured_adc_value:	
  7086                           ; 1 bytes @ 0x0
  7087                           
  7088     0070                     ?_dump_memory_map:	
  7089                           ; 1 bytes @ 0x0
  7090                           
  7091     0070                     ?_get_measured_value:	
  7092                           ; 1 bytes @ 0x0
  7093                           
  7094     0070                     ?_Enable_Global_Interrupt:	
  7095                           ; 1 bytes @ 0x0
  7096                           
  7097     0070                     ?_Disable_Global_Interrupt:	
  7098                           ; 1 bytes @ 0x0
  7099                           
  7100     0070                     ?_set_device_serial_number_to_i2c_slave_memorymap:	
  7101                           ; 1 bytes @ 0x0
  7102                           
  7103     0070                     ?_send_measured_command:	
  7104                           ; 1 bytes @ 0x0
  7105                           
  7106     0070                     ?_toupper:	
  7107                           ; 1 bytes @ 0x0
  7108                           
  7109     0070                     ?_SYSTEM_Initialize:	
  7110                           ; 1 bytes @ 0x0
  7111                           
  7112     0070                     ?_main:	
  7113                           ; 1 bytes @ 0x0
  7114                           
  7115     0070                     ?_i2c_slave_interrupt:	
  7116                           ; 1 bytes @ 0x0
  7117                           
  7118     0070                     ??_i2c_slave_interrupt:	
  7119                           ; 1 bytes @ 0x0
  7120                           
  7121     0070                     ?_LED_flashes_three_times:	
  7122                           ; 1 bytes @ 0x0
  7123                           
  7124     0070                     ?_is_single_click:	
  7125                           ; 1 bytes @ 0x0
  7126                           
  7127     0070                     ?_is_long_press:	
  7128                           ; 1 bytes @ 0x0
  7129                           
  7130     0070                     ?_reset_single_click_flag:	
  7131                           ; 1 bytes @ 0x0
  7132                           
  7133     0070                     ?_reset_long_press_flag:	
  7134                           ; 1 bytes @ 0x0
  7135                           
  7136     0070                     ?_putch:	
  7137                           ; 1 bytes @ 0x0
  7138                           
  7139     0070                     ?_EUSART1_Write:	
  7140                           ; 1 bytes @ 0x0
  7141                           
  7142     0070                     ?_INTERRUPT_InterruptManager:	
  7143                           ; 1 bytes @ 0x0
  7144                           
  7145     0070                     ?i1_get_ticks:	
  7146                           ; 1 bytes @ 0x0
  7147                           
  7148                           
  7149                           ; 4 bytes @ 0x0
  7150     0070                     	ds	1
  7151     0071                     i2c_slave_interrupt@isRead:
  7152                           
  7153                           ; 1 bytes @ 0x1
  7154     0071                     	ds	1
  7155     0072                     i2c_slave_interrupt@isNack:
  7156                           
  7157                           ; 1 bytes @ 0x2
  7158     0072                     	ds	1
  7159     0073                     i2c_slave_interrupt@value:
  7160                           
  7161                           ; 1 bytes @ 0x3
  7162     0073                     	ds	1
  7163     0074                     ??_INTERRUPT_InterruptManager:
  7164     0074                     ??i1_get_ticks:	
  7165                           ; 1 bytes @ 0x4
  7166                           
  7167                           
  7168                           ; 1 bytes @ 0x4
  7169     0074                     	ds	4
  7170                           
  7171                           	psect	cstackBANK0
  7172     0020                     __pcstackBANK0:
  7173     0020                     ??_PMD_Initialize:
  7174     0020                     ??_PIN_MANAGER_Initialize:	
  7175                           ; 1 bytes @ 0x0
  7176                           
  7177     0020                     ??_OSCILLATOR_Initialize:	
  7178                           ; 1 bytes @ 0x0
  7179                           
  7180     0020                     ??_tmr0_init:	
  7181                           ; 1 bytes @ 0x0
  7182                           
  7183     0020                     ??_usart_init:	
  7184                           ; 1 bytes @ 0x0
  7185                           
  7186     0020                     ??_i2c_slave_init:	
  7187                           ; 1 bytes @ 0x0
  7188                           
  7189     0020                     ??_init_button:	
  7190                           ; 1 bytes @ 0x0
  7191                           
  7192     0020                     ??_enable_uart_printf:	
  7193                           ; 1 bytes @ 0x0
  7194                           
  7195     0020                     ??_enable_tx_transmit:	
  7196                           ; 1 bytes @ 0x0
  7197                           
  7198     0020                     ?_dispatch:	
  7199                           ; 1 bytes @ 0x0
  7200                           
  7201     0020                     ??_Enable_Global_Interrupt:	
  7202                           ; 1 bytes @ 0x0
  7203                           
  7204     0020                     ?_i2c_slave_set_register:	
  7205                           ; 1 bytes @ 0x0
  7206                           
  7207     0020                     ??_Disable_Global_Interrupt:	
  7208                           ; 1 bytes @ 0x0
  7209                           
  7210     0020                     ??_isprint:	
  7211                           ; 1 bytes @ 0x0
  7212                           
  7213     0020                     ??_isdigit:	
  7214                           ; 1 bytes @ 0x0
  7215                           
  7216     0020                     ??_isspace:	
  7217                           ; 1 bytes @ 0x0
  7218                           
  7219     0020                     ??_toupper:	
  7220                           ; 1 bytes @ 0x0
  7221                           
  7222     0020                     ??_isupper:	
  7223                           ; 1 bytes @ 0x0
  7224                           
  7225     0020                     ??_SYSTEM_Initialize:	
  7226                           ; 1 bytes @ 0x0
  7227                           
  7228     0020                     ??_LED_flashes_three_times:	
  7229                           ; 1 bytes @ 0x0
  7230                           
  7231     0020                     ?___is_single_click:	
  7232                           ; 1 bytes @ 0x0
  7233                           
  7234     0020                     ?___is_double_click:	
  7235                           ; 1 bytes @ 0x0
  7236                           
  7237     0020                     ?___is_long_press:	
  7238                           ; 1 bytes @ 0x0
  7239                           
  7240     0020                     ??_is_single_click:	
  7241                           ; 1 bytes @ 0x0
  7242                           
  7243     0020                     ??_is_long_press:	
  7244                           ; 1 bytes @ 0x0
  7245                           
  7246     0020                     ??_reset_single_click_flag:	
  7247                           ; 1 bytes @ 0x0
  7248                           
  7249     0020                     ??_reset_long_press_flag:	
  7250                           ; 1 bytes @ 0x0
  7251                           
  7252     0020                     ??_putch:	
  7253                           ; 1 bytes @ 0x0
  7254                           
  7255     0020                     ??_EUSART1_Write:	
  7256                           ; 1 bytes @ 0x0
  7257                           
  7258     0020                     ?___bmul:	
  7259                           ; 1 bytes @ 0x0
  7260                           
  7261     0020                     ?__Umul8_16:	
  7262                           ; 1 bytes @ 0x0
  7263                           
  7264     0020                     ?_crc16_modbus:	
  7265                           ; 2 bytes @ 0x0
  7266                           
  7267     0020                     ?___wmul:	
  7268                           ; 2 bytes @ 0x0
  7269                           
  7270     0020                     ?___lwdiv:	
  7271                           ; 2 bytes @ 0x0
  7272                           
  7273     0020                     ?_calculate_diff:	
  7274                           ; 2 bytes @ 0x0
  7275                           
  7276     0020                     ?_get_ticks_with_lock:	
  7277                           ; 4 bytes @ 0x0
  7278                           
  7279     0020                     ?_get_ticks:	
  7280                           ; 4 bytes @ 0x0
  7281                           
  7282     0020                     ?___lmul:	
  7283                           ; 4 bytes @ 0x0
  7284                           
  7285     0020                     i2c_slave_set_register@value:	
  7286                           ; 4 bytes @ 0x0
  7287                           
  7288     0020                     init_button@b:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291     0020                     is_single_click@b:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294     0020                     is_long_press@b:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297     0020                     reset_single_click_flag@b:	
  7298                           ; 1 bytes @ 0x0
  7299                           
  7300     0020                     reset_long_press_flag@b:	
  7301                           ; 1 bytes @ 0x0
  7302                           
  7303     0020                     putch@data:	
  7304                           ; 1 bytes @ 0x0
  7305                           
  7306     0020                     EUSART1_Write@txData:	
  7307                           ; 1 bytes @ 0x0
  7308                           
  7309     0020                     dispatch@b1:	
  7310                           ; 1 bytes @ 0x0
  7311                           
  7312     0020                     crc16_modbus@len:	
  7313                           ; 1 bytes @ 0x0
  7314                           
  7315     0020                     ___bmul@multiplicand:	
  7316                           ; 1 bytes @ 0x0
  7317                           
  7318     0020                     __Umul8_16@multiplicand:	
  7319                           ; 1 bytes @ 0x0
  7320                           
  7321     0020                     _isdigit$1887:	
  7322                           ; 1 bytes @ 0x0
  7323                           
  7324     0020                     _isprint$1890:	
  7325                           ; 1 bytes @ 0x0
  7326                           
  7327     0020                     _isspace$1924:	
  7328                           ; 1 bytes @ 0x0
  7329                           
  7330     0020                     _isupper$1927:	
  7331                           ; 1 bytes @ 0x0
  7332                           
  7333     0020                     ___wmul@multiplier:	
  7334                           ; 1 bytes @ 0x0
  7335                           
  7336     0020                     ___lwdiv@divisor:	
  7337                           ; 2 bytes @ 0x0
  7338                           
  7339     0020                     calculate_diff@now:	
  7340                           ; 2 bytes @ 0x0
  7341                           
  7342     0020                     ___is_single_click@now:	
  7343                           ; 4 bytes @ 0x0
  7344                           
  7345     0020                     ___is_double_click@now:	
  7346                           ; 4 bytes @ 0x0
  7347                           
  7348     0020                     ___is_long_press@now:	
  7349                           ; 4 bytes @ 0x0
  7350                           
  7351     0020                     ___lmul@multiplier:	
  7352                           ; 4 bytes @ 0x0
  7353                           
  7354                           
  7355                           ; 4 bytes @ 0x0
  7356     0020                     	ds	1
  7357     0021                     ??_i2c_slave_set_register:
  7358     0021                     ?_EUSART1_Write_1:	
  7359                           ; 1 bytes @ 0x1
  7360                           
  7361     0021                     ??___bmul:	
  7362                           ; 1 bytes @ 0x1
  7363                           
  7364     0021                     i2c_slave_init@i:	
  7365                           ; 1 bytes @ 0x1
  7366                           
  7367     0021                     i2c_slave_set_register@registerAddress:	
  7368                           ; 1 bytes @ 0x1
  7369                           
  7370     0021                     EUSART1_Write_1@length:	
  7371                           ; 1 bytes @ 0x1
  7372                           
  7373     0021                     dispatch@b2:	
  7374                           ; 1 bytes @ 0x1
  7375                           
  7376     0021                     isdigit@c:	
  7377                           ; 1 bytes @ 0x1
  7378                           
  7379     0021                     isprint@c:	
  7380                           ; 1 bytes @ 0x1
  7381                           
  7382     0021                     isspace@c:	
  7383                           ; 1 bytes @ 0x1
  7384                           
  7385     0021                     isupper@c:	
  7386                           ; 1 bytes @ 0x1
  7387                           
  7388     0021                     toupper@c:	
  7389                           ; 1 bytes @ 0x1
  7390                           
  7391     0021                     LED_flashes_three_times@i:	
  7392                           ; 1 bytes @ 0x1
  7393                           
  7394                           
  7395                           ; 2 bytes @ 0x1
  7396     0021                     	ds	1
  7397     0022                     ??__Umul8_16:
  7398     0022                     ??_isalpha:	
  7399                           ; 1 bytes @ 0x2
  7400                           
  7401     0022                     ?_i2c_slave_set_register_with_lock:	
  7402                           ; 1 bytes @ 0x2
  7403                           
  7404     0022                     ??_EUSART1_Write_1:	
  7405                           ; 1 bytes @ 0x2
  7406                           
  7407     0022                     ??_crc16_modbus:	
  7408                           ; 1 bytes @ 0x2
  7409                           
  7410     0022                     i2c_slave_set_register_with_lock@value:	
  7411                           ; 1 bytes @ 0x2
  7412                           
  7413     0022                     dispatch@b1_clicked_count_ptr:	
  7414                           ; 1 bytes @ 0x2
  7415                           
  7416     0022                     ___bmul@product:	
  7417                           ; 1 bytes @ 0x2
  7418                           
  7419     0022                     _isalpha$1921:	
  7420                           ; 1 bytes @ 0x2
  7421                           
  7422     0022                     ___wmul@multiplicand:	
  7423                           ; 1 bytes @ 0x2
  7424                           
  7425     0022                     ___lwdiv@dividend:	
  7426                           ; 2 bytes @ 0x2
  7427                           
  7428                           
  7429                           ; 2 bytes @ 0x2
  7430     0022                     	ds	1
  7431     0023                     ??_i2c_slave_set_register_with_lock:
  7432     0023                     i2c_slave_set_register_with_lock@registerAddress:	
  7433                           ; 1 bytes @ 0x3
  7434                           
  7435     0023                     EUSART1_Write_1@i:	
  7436                           ; 1 bytes @ 0x3
  7437                           
  7438     0023                     dispatch@b2_clicked_count_ptr:	
  7439                           ; 1 bytes @ 0x3
  7440                           
  7441     0023                     ___bmul@multiplier:	
  7442                           ; 1 bytes @ 0x3
  7443                           
  7444     0023                     isalpha@c:	
  7445                           ; 1 bytes @ 0x3
  7446                           
  7447                           
  7448                           ; 1 bytes @ 0x3
  7449     0023                     	ds	1
  7450     0024                     ??_get_ticks_with_lock:
  7451     0024                     ??_dispatch:	
  7452                           ; 1 bytes @ 0x4
  7453                           
  7454     0024                     ??_get_ticks:	
  7455                           ; 1 bytes @ 0x4
  7456                           
  7457     0024                     ??___is_single_click:	
  7458                           ; 1 bytes @ 0x4
  7459                           
  7460     0024                     ??___is_double_click:	
  7461                           ; 1 bytes @ 0x4
  7462                           
  7463     0024                     ??___is_long_press:	
  7464                           ; 1 bytes @ 0x4
  7465                           
  7466     0024                     ??___wmul:	
  7467                           ; 1 bytes @ 0x4
  7468                           
  7469     0024                     ??___lwdiv:	
  7470                           ; 1 bytes @ 0x4
  7471                           
  7472     0024                     EUSART1_Write_1@txbuf:	
  7473                           ; 1 bytes @ 0x4
  7474                           
  7475     0024                     dispatch@b1_clicked_count:	
  7476                           ; 1 bytes @ 0x4
  7477                           
  7478     0024                     ___wmul@product:	
  7479                           ; 1 bytes @ 0x4
  7480                           
  7481     0024                     __Umul8_16@product:	
  7482                           ; 2 bytes @ 0x4
  7483                           
  7484     0024                     get_ticks_with_lock@result:	
  7485                           ; 2 bytes @ 0x4
  7486                           
  7487     0024                     calculate_diff@prev_ticks:	
  7488                           ; 4 bytes @ 0x4
  7489                           
  7490     0024                     ___lmul@multiplicand:	
  7491                           ; 4 bytes @ 0x4
  7492                           
  7493                           
  7494                           ; 4 bytes @ 0x4
  7495     0024                     	ds	1
  7496     0025                     ??_send_measured_command:
  7497     0025                     dispatch@b2_clicked_count:	
  7498                           ; 1 bytes @ 0x5
  7499                           
  7500     0025                     crc16_modbus@poly:	
  7501                           ; 1 bytes @ 0x5
  7502                           
  7503     0025                     ___lwdiv@quotient:	
  7504                           ; 2 bytes @ 0x5
  7505                           
  7506                           
  7507                           ; 2 bytes @ 0x5
  7508     0025                     	ds	1
  7509     0026                     dispatch@state:
  7510     0026                     __Umul8_16@word_mpld:	
  7511                           ; 1 bytes @ 0x6
  7512                           
  7513     0026                     send_measured_command@txbuf:	
  7514                           ; 2 bytes @ 0x6
  7515                           
  7516                           
  7517                           ; 32 bytes @ 0x6
  7518     0026                     	ds	1
  7519     0027                     crc16_modbus@data:
  7520     0027                     ___lwdiv@counter:	
  7521                           ; 1 bytes @ 0x7
  7522                           
  7523                           
  7524                           ; 1 bytes @ 0x7
  7525     0027                     	ds	1
  7526     0028                     ??_calculate_diff:
  7527     0028                     ??___lmul:	
  7528                           ; 1 bytes @ 0x8
  7529                           
  7530     0028                     ?___lwmod:	
  7531                           ; 1 bytes @ 0x8
  7532                           
  7533     0028                     __Umul8_16@multiplier:	
  7534                           ; 2 bytes @ 0x8
  7535                           
  7536     0028                     crc16_modbus@i:	
  7537                           ; 1 bytes @ 0x8
  7538                           
  7539     0028                     ___lwmod@divisor:	
  7540                           ; 2 bytes @ 0x8
  7541                           
  7542     0028                     ___lmul@product:	
  7543                           ; 2 bytes @ 0x8
  7544                           
  7545                           
  7546                           ; 4 bytes @ 0x8
  7547     0028                     	ds	1
  7548     0029                     ?___flmul:
  7549     0029                     ___flmul@b:	
  7550                           ; 4 bytes @ 0x9
  7551                           
  7552                           
  7553                           ; 4 bytes @ 0x9
  7554     0029                     	ds	1
  7555     002A                     crc16_modbus@j:
  7556     002A                     ___lwmod@dividend:	
  7557                           ; 2 bytes @ 0xA
  7558                           
  7559                           
  7560                           ; 2 bytes @ 0xA
  7561     002A                     	ds	2
  7562     002C                     ??___lwmod:
  7563     002C                     ?_strtol:	
  7564                           ; 1 bytes @ 0xC
  7565                           
  7566     002C                     ___is_single_click@condition1:	
  7567                           ; 4 bytes @ 0xC
  7568                           
  7569     002C                     ___is_double_click@condition1:	
  7570                           ; 1 bytes @ 0xC
  7571                           
  7572     002C                     ___is_long_press@condition1:	
  7573                           ; 1 bytes @ 0xC
  7574                           
  7575     002C                     strtol@endptr:	
  7576                           ; 1 bytes @ 0xC
  7577                           
  7578     002C                     crc16_modbus@crc:	
  7579                           ; 1 bytes @ 0xC
  7580                           
  7581                           
  7582                           ; 2 bytes @ 0xC
  7583     002C                     	ds	1
  7584     002D                     ___is_single_click@condition2:
  7585     002D                     ___is_double_click@condition2:	
  7586                           ; 1 bytes @ 0xD
  7587                           
  7588     002D                     ___is_long_press@condition2:	
  7589                           ; 1 bytes @ 0xD
  7590                           
  7591     002D                     ___lwmod@counter:	
  7592                           ; 1 bytes @ 0xD
  7593                           
  7594     002D                     strtol@base:	
  7595                           ; 1 bytes @ 0xD
  7596                           
  7597     002D                     ___flmul@a:	
  7598                           ; 2 bytes @ 0xD
  7599                           
  7600                           
  7601                           ; 4 bytes @ 0xD
  7602     002D                     	ds	1
  7603     002E                     ?_calculate_crc_and_fill_array:
  7604     002E                     ?_printf:	
  7605                           ; 1 bytes @ 0xE
  7606                           
  7607     002E                     ___is_single_click@condition3:	
  7608                           ; 2 bytes @ 0xE
  7609                           
  7610     002E                     ___is_double_click@condition3:	
  7611                           ; 1 bytes @ 0xE
  7612                           
  7613     002E                     ___is_long_press@b:	
  7614                           ; 1 bytes @ 0xE
  7615                           
  7616     002E                     calculate_crc_and_fill_array@data_len:	
  7617                           ; 1 bytes @ 0xE
  7618                           
  7619     002E                     printf@f:	
  7620                           ; 1 bytes @ 0xE
  7621                           
  7622                           
  7623                           ; 2 bytes @ 0xE
  7624     002E                     	ds	1
  7625     002F                     ??_calculate_crc_and_fill_array:
  7626     002F                     ___is_single_click@condition4:	
  7627                           ; 1 bytes @ 0xF
  7628                           
  7629     002F                     ___is_double_click@b:	
  7630                           ; 1 bytes @ 0xF
  7631                           
  7632                           
  7633                           ; 1 bytes @ 0xF
  7634     002F                     	ds	1
  7635     0030                     ??_strtol:
  7636     0030                     ___is_single_click@b:	
  7637                           ; 1 bytes @ 0x10
  7638                           
  7639     0030                     calculate_crc_and_fill_array@crc:	
  7640                           ; 1 bytes @ 0x10
  7641                           
  7642     0030                     calculate_diff@diff:	
  7643                           ; 2 bytes @ 0x10
  7644                           
  7645                           
  7646                           ; 4 bytes @ 0x10
  7647     0030                     	ds	1
  7648     0031                     ?_update_mybutton:
  7649     0031                     ??___flmul:	
  7650                           ; 1 bytes @ 0x11
  7651                           
  7652     0031                     update_mybutton@signal:	
  7653                           ; 1 bytes @ 0x11
  7654                           
  7655                           
  7656                           ; 1 bytes @ 0x11
  7657     0031                     	ds	1
  7658     0032                     calculate_crc_and_fill_array@data:
  7659     0032                     update_mybutton@now:	
  7660                           ; 1 bytes @ 0x12
  7661                           
  7662                           
  7663                           ; 4 bytes @ 0x12
  7664     0032                     	ds	1
  7665     0033                     ?_save_top_adc_point:
  7666     0033                     ?_save_bottom_adc_point:	
  7667                           ; 1 bytes @ 0x13
  7668                           
  7669     0033                     save_top_adc_point@sensor_value:	
  7670                           ; 1 bytes @ 0x13
  7671                           
  7672     0033                     save_bottom_adc_point@sensor_value:	
  7673                           ; 1 bytes @ 0x13
  7674                           
  7675                           
  7676                           ; 1 bytes @ 0x13
  7677     0033                     	ds	1
  7678     0034                     ??_save_top_adc_point:
  7679     0034                     ??_save_bottom_adc_point:	
  7680                           ; 1 bytes @ 0x14
  7681                           
  7682     0034                     strtol@sign:	
  7683                           ; 1 bytes @ 0x14
  7684                           
  7685                           
  7686                           ; 1 bytes @ 0x14
  7687     0034                     	ds	1
  7688     0035                     strtol@a:
  7689     0035                     save_top_adc_point@save_top_adc_command:	
  7690                           ; 4 bytes @ 0x15
  7691                           
  7692     0035                     save_bottom_adc_point@save_bottom_adc_command:	
  7693                           ; 8 bytes @ 0x15
  7694                           
  7695                           
  7696                           ; 32 bytes @ 0x15
  7697     0035                     	ds	1
  7698     0036                     ??_update_mybutton:
  7699     0036                     ___flmul@sign:	
  7700                           ; 1 bytes @ 0x16
  7701                           
  7702                           
  7703                           ; 1 bytes @ 0x16
  7704     0036                     	ds	1
  7705     0037                     ___flmul@grs:
  7706                           
  7707                           ; 4 bytes @ 0x17
  7708     0037                     	ds	2
  7709     0039                     strtol@s:
  7710                           
  7711                           ; 1 bytes @ 0x19
  7712     0039                     	ds	1
  7713     003A                     ??_printf:
  7714     003A                     update_mybutton@b:	
  7715                           ; 1 bytes @ 0x1A
  7716                           
  7717     003A                     strtol@c:	
  7718                           ; 1 bytes @ 0x1A
  7719                           
  7720                           
  7721                           ; 1 bytes @ 0x1A
  7722     003A                     	ds	1
  7723     003B                     ??_set_device_serial_number_to_i2c_slave_memorymap:
  7724     003B                     ___flmul@aexp:	
  7725                           ; 1 bytes @ 0x1B
  7726                           
  7727                           
  7728                           ; 1 bytes @ 0x1B
  7729     003B                     	ds	1
  7730     003C                     ___flmul@bexp:
  7731                           
  7732                           ; 1 bytes @ 0x1C
  7733     003C                     	ds	1
  7734     003D                     set_device_serial_number_to_i2c_slave_memorymap@value:
  7735     003D                     save_top_adc_point@states:	
  7736                           ; 1 bytes @ 0x1D
  7737                           
  7738     003D                     ___flmul@prod:	
  7739                           ; 1 bytes @ 0x1D
  7740                           
  7741                           
  7742                           ; 4 bytes @ 0x1D
  7743     003D                     	ds	1
  7744     003E                     _printf$1597:
  7745     003E                     set_device_serial_number_to_i2c_slave_memorymap@buffer:	
  7746                           ; 2 bytes @ 0x1E
  7747                           
  7748                           
  7749                           ; 3 bytes @ 0x1E
  7750     003E                     	ds	2
  7751     0040                     _printf$1598:
  7752                           
  7753                           ; 2 bytes @ 0x20
  7754     0040                     	ds	1
  7755     0041                     set_device_serial_number_to_i2c_slave_memorymap@i:
  7756     0041                     ___flmul@temp:	
  7757                           ; 1 bytes @ 0x21
  7758                           
  7759                           
  7760                           ; 2 bytes @ 0x21
  7761     0041                     	ds	1
  7762     0042                     _printf$1604:
  7763                           
  7764                           ; 2 bytes @ 0x22
  7765     0042                     	ds	1
  7766     0043                     ?___fltol:
  7767     0043                     ___fltol@f1:	
  7768                           ; 4 bytes @ 0x23
  7769                           
  7770                           
  7771                           ; 4 bytes @ 0x23
  7772     0043                     	ds	1
  7773     0044                     printf@idx:
  7774                           
  7775                           ; 1 bytes @ 0x24
  7776     0044                     	ds	1
  7777     0045                     printf@cp:
  7778                           
  7779                           ; 2 bytes @ 0x25
  7780     0045                     	ds	2
  7781     0047                     ??___fltol:
  7782     0047                     printf@len:	
  7783                           ; 1 bytes @ 0x27
  7784                           
  7785                           
  7786                           ; 2 bytes @ 0x27
  7787     0047                     	ds	2
  7788     0049                     printf@ap:
  7789                           
  7790                           ; 1 bytes @ 0x29
  7791     0049                     	ds	1
  7792     004A                     printf@val:
  7793                           
  7794                           ; 2 bytes @ 0x2A
  7795     004A                     	ds	1
  7796     004B                     ___fltol@sign1:
  7797                           
  7798                           ; 1 bytes @ 0x2B
  7799     004B                     	ds	1
  7800     004C                     printf@prec:
  7801     004C                     ___fltol@exp1:	
  7802                           ; 1 bytes @ 0x2C
  7803                           
  7804                           
  7805                           ; 1 bytes @ 0x2C
  7806     004C                     	ds	1
  7807     004D                     printf@width:
  7808                           
  7809                           ; 2 bytes @ 0x2D
  7810     004D                     	ds	2
  7811     004F                     printf@c:
  7812                           
  7813                           ; 1 bytes @ 0x2F
  7814     004F                     	ds	1
  7815     0050                     printf@flag:
  7816                           
  7817                           ; 2 bytes @ 0x30
  7818     0050                     	ds	2
  7819     0052                     ?_monitoring_sync:
  7820     0052                     ?_measurement:	
  7821                           ; 1 bytes @ 0x32
  7822                           
  7823     0052                     ??_measured_adc:	
  7824                           ; 1 bytes @ 0x32
  7825                           
  7826     0052                     ??_get_measured_adc_value:	
  7827                           ; 1 bytes @ 0x32
  7828                           
  7829     0052                     ??_get_measured_value:	
  7830                           ; 1 bytes @ 0x32
  7831                           
  7832     0052                     ?_dump_buffer:	
  7833                           ; 1 bytes @ 0x32
  7834                           
  7835     0052                     measurement@value:	
  7836                           ; 1 bytes @ 0x32
  7837                           
  7838     0052                     dump_buffer@size:	
  7839                           ; 1 bytes @ 0x32
  7840                           
  7841     0052                     monitoring_sync@state:	
  7842                           ; 2 bytes @ 0x32
  7843                           
  7844                           
  7845                           ; 2 bytes @ 0x32
  7846     0052                     	ds	1
  7847     0053                     ??_measurement:
  7848                           
  7849                           ; 1 bytes @ 0x33
  7850     0053                     	ds	1
  7851     0054                     ??_dump_buffer:
  7852     0054                     monitoring_sync@b1:	
  7853                           ; 1 bytes @ 0x34
  7854                           
  7855     0054                     measurement@state:	
  7856                           ; 1 bytes @ 0x34
  7857                           
  7858                           
  7859                           ; 1 bytes @ 0x34
  7860     0054                     	ds	1
  7861     0055                     monitoring_sync@b2:
  7862     0055                     save_bottom_adc_point@states:	
  7863                           ; 1 bytes @ 0x35
  7864                           
  7865                           
  7866                           ; 1 bytes @ 0x35
  7867     0055                     	ds	1
  7868     0056                     monitoring_sync@b1_clicked_count:
  7869                           
  7870                           ; 1 bytes @ 0x36
  7871     0056                     	ds	1
  7872     0057                     monitoring_sync@b2_clicked_count:
  7873                           
  7874                           ; 1 bytes @ 0x37
  7875     0057                     	ds	1
  7876     0058                     ??_monitoring_sync:
  7877     0058                     _dump_buffer$878:	
  7878                           ; 1 bytes @ 0x38
  7879                           
  7880                           
  7881                           ; 2 bytes @ 0x38
  7882     0058                     	ds	2
  7883     005A                     dump_buffer@buffer:
  7884     005A                     get_measured_adc_value@payload:	
  7885                           ; 1 bytes @ 0x3A
  7886                           
  7887                           
  7888                           ; 4 bytes @ 0x3A
  7889     005A                     	ds	1
  7890     005B                     dump_buffer@p:
  7891                           
  7892                           ; 1 bytes @ 0x3B
  7893     005B                     	ds	1
  7894     005C                     dump_buffer@i:
  7895                           
  7896                           ; 2 bytes @ 0x3C
  7897     005C                     	ds	2
  7898     005E                     dump_buffer@j:
  7899     005E                     get_measured_adc_value@ph_adc_value:	
  7900                           ; 2 bytes @ 0x3E
  7901                           
  7902     005E                     get_measured_value@payload:	
  7903                           ; 2 bytes @ 0x3E
  7904                           
  7905                           
  7906                           ; 4 bytes @ 0x3E
  7907     005E                     	ds	2
  7908     0060                     ??_dump_memory_map:
  7909     0060                     get_measured_adc_value@sensor_value:	
  7910                           ; 1 bytes @ 0x40
  7911                           
  7912                           
  7913                           ; 1 bytes @ 0x40
  7914     0060                     	ds	2
  7915     0062                     get_measured_value@payload_temp:
  7916                           
  7917                           ; 4 bytes @ 0x42
  7918     0062                     	ds	4
  7919     0066                     get_measured_value@ph:
  7920                           
  7921                           ; 4 bytes @ 0x46
  7922     0066                     	ds	4
  7923     006A                     get_measured_value@temp:
  7924                           
  7925                           ; 4 bytes @ 0x4A
  7926     006A                     	ds	4
  7927     006E                     get_measured_value@sensor_value:
  7928                           
  7929                           ; 1 bytes @ 0x4E
  7930     006E                     	ds	1
  7931                           
  7932                           	psect	maintext
  7933     0C0F                     __pmaintext:	
  7934 ;;
  7935 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  7936 ;;
  7937 ;; *************** function _main *****************
  7938 ;; Defined at:
  7939 ;;		line 33 in file "main.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  now             4    2[BANK2 ] unsigned long 
  7944 ;;  b2             27   44[BANK2 ] struct mybutton
  7945 ;;  b1             27   17[BANK2 ] struct mybutton
  7946 ;;  sensor_value   10    7[BANK2 ] struct values
  7947 ;;  state           1    6[BANK2 ] enum E10543
  7948 ;;  b1_clicked_c    1    1[BANK2 ] unsigned char 
  7949 ;;  b2_clicked_c    1    0[BANK2 ] unsigned char 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      void 
  7952 ;; Registers used:
  7953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7954 ;; Tracked objects:
  7955 ;;		On entry : B3F/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;      Locals:         0       0       0      71       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Totals:         0       0       4      71       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;Total ram usage:       75 bytes
  7964 ;; Hardware stack levels required when called: 6
  7965 ;; This function calls:
  7966 ;;		_Disable_Global_Interrupt
  7967 ;;		_Enable_Global_Interrupt
  7968 ;;		_SYSTEM_Initialize
  7969 ;;		_calculate_diff
  7970 ;;		_dispatch
  7971 ;;		_dump_memory_map
  7972 ;;		_enable_tx_transmit
  7973 ;;		_enable_uart_printf
  7974 ;;		_get_measured_adc_value
  7975 ;;		_get_measured_value
  7976 ;;		_get_ticks
  7977 ;;		_get_ticks_with_lock
  7978 ;;		_i2c_slave_init
  7979 ;;		_i2c_slave_set_register
  7980 ;;		_init_button
  7981 ;;		_measured_adc
  7982 ;;		_measurement
  7983 ;;		_monitoring_sync
  7984 ;;		_printf
  7985 ;;		_save_bottom_adc_point
  7986 ;;		_save_top_adc_point
  7987 ;;		_set_device_serial_number_to_i2c_slave_memorymap
  7988 ;;		_tmr0_init
  7989 ;;		_update_mybutton
  7990 ;;		_usart_init
  7991 ;; This function is called by:
  7992 ;;		Startup code after reset
  7993 ;; This function uses a non-reentrant model
  7994 ;;
  7995                           
  7996     0C0F                     _main:	
  7997                           ;psect for function _main
  7998                           
  7999     0C0F                     l4695:	
  8000                           ;incstack = 0
  8001                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8002                           
  8003                           
  8004                           ;main.c: 34: SYSTEM_Initialize();
  8005     0C0F  319D  25EE  318C   	fcall	_SYSTEM_Initialize
  8006                           
  8007                           ;main.c: 35: tmr0_init();
  8008     0C12  319E  2639  318C   	fcall	_tmr0_init
  8009                           
  8010                           ;main.c: 36: usart_init();
  8011     0C15  319E  2654  318C   	fcall	_usart_init
  8012     0C18                     l4697:
  8013                           
  8014                           ;main.c: 37: i2c_slave_init();
  8015     0C18  319F  2772  318C   	fcall	_i2c_slave_init
  8016     0C1B                     l4699:
  8017                           
  8018                           ;main.c: 41: MyButton b1;;main.c: 42: MyButton b2;;main.c: 44: init_button(&b1);
  8019     0C1B  3031               	movlw	(low (main@b1| (0+256)))& (0+255)
  8020     0C1C  3193  23F2  318C   	fcall	_init_button
  8021     0C1F                     l4701:
  8022                           
  8023                           ;main.c: 45: init_button(&b2);
  8024     0C1F  304C               	movlw	(low (main@b2| (0+256)))& (0+255)
  8025     0C20  3193  23F2  318C   	fcall	_init_button
  8026     0C23                     l4703:
  8027                           
  8028                           ;main.c: 47: SensorValue sensor_value;;main.c: 50: States state = STATE_MEASURE;
  8029     0C23  3002               	movlw	2
  8030     0C24  0142               	movlb	2	; select bank2
  8031     0C25  00A6               	movwf	main@state^(0+256)
  8032     0C26                     l4705:
  8033                           
  8034                           ;main.c: 52: uint8_t b1_clicked_count = 0;
  8035     0C26  01A1               	clrf	main@b1_clicked_count^(0+256)
  8036     0C27                     l4707:
  8037                           
  8038                           ;main.c: 53: uint8_t b2_clicked_count = 0;
  8039     0C27  01A0               	clrf	main@b2_clicked_count^(0+256)
  8040     0C28                     l4709:
  8041                           
  8042                           ;main.c: 57: enable_uart_printf();
  8043     0C28  319D  259D  318C   	fcall	_enable_uart_printf
  8044     0C2B                     l4711:
  8045                           
  8046                           ;main.c: 58: printf("PH Probe with RS485\r\n");
  8047     0C2B  3089               	movlw	low (STR_1| (0+32768))
  8048     0C2C  0140               	movlb	0	; select bank0
  8049     0C2D  00AE               	movwf	printf@f
  8050     0C2E  3099               	movlw	high (STR_1| (0+32768))
  8051     0C2F  00AF               	movwf	printf@f+1
  8052     0C30  3180  20CE  318C   	fcall	_printf
  8053     0C33                     l4713:
  8054                           
  8055                           ;main.c: 59: printf("sn: %s\r\n", "0A01820001");
  8056     0C33  3032               	movlw	low (STR_2| (0+32768))
  8057     0C34  0140               	movlb	0	; select bank0
  8058     0C35  00AE               	movwf	printf@f
  8059     0C36  309A               	movlw	high (STR_2| (0+32768))
  8060     0C37  00AF               	movwf	printf@f+1
  8061     0C38  3014               	movlw	low (STR_3| (0+32768))
  8062     0C39  00B0               	movwf	low ((?_printf| 0+2))
  8063     0C3A  309A               	movlw	high (STR_3| (0+32768))
  8064     0C3B  00B1               	movwf	(low ((?_printf| 0+2))+1)
  8065     0C3C  3180  20CE  318C   	fcall	_printf
  8066     0C3F                     l4715:
  8067                           
  8068                           ;main.c: 60: _delay((unsigned long)((10)*(1000000/4000.0)));
  8069     0C3F  3004               	movlw	4
  8070     0C40  0141               	movlb	1	; select bank1
  8071     0C41  00C0               	movwf	??_main^(0+128)
  8072     0C42  303D               	movlw	61
  8073     0C43                     u5147:
  8074     0C43  0B89               	decfsz	9,f
  8075     0C44  2C43               	goto	u5147
  8076     0C45  0BC0               	decfsz	??_main^(0+128),f
  8077     0C46  2C43               	goto	u5147
  8078     0C47  3200               	nop2
  8079     0C48                     l4717:
  8080                           
  8081                           ;main.c: 61: enable_tx_transmit();
  8082     0C48  319E  2646  318C   	fcall	_enable_tx_transmit
  8083     0C4B                     l4719:
  8084                           
  8085                           ;main.c: 63: INTCONbits.GIE = 1;
  8086     0C4B  178B               	bsf	11,7	;volatile
  8087     0C4C                     l4721:
  8088                           
  8089                           ;main.c: 64: INTCONbits.PEIE = 1;
  8090     0C4C  170B               	bsf	11,6	;volatile
  8091     0C4D                     l4723:
  8092                           
  8093                           ;main.c: 66: ANSELAbits.ANSA4 = 0;
  8094     0C4D  017E               	movlb	62	; select bank62
  8095     0C4E  1238               	bcf	56,4	;volatile
  8096     0C4F                     l4725:
  8097                           
  8098                           ;main.c: 67: TRISAbits.TRISA4 = 1;
  8099     0C4F  0140               	movlb	0	; select bank0
  8100     0C50  1612               	bsf	18,4	;volatile
  8101     0C51                     l4727:
  8102                           
  8103                           ;main.c: 68: ANSELAbits.ANSA5 = 0;
  8104     0C51  017E               	movlb	62	; select bank62
  8105     0C52  12B8               	bcf	56,5	;volatile
  8106     0C53                     l4729:
  8107                           
  8108                           ;main.c: 69: TRISAbits.TRISA5 = 1;
  8109     0C53  0140               	movlb	0	; select bank0
  8110     0C54  1692               	bsf	18,5	;volatile
  8111     0C55                     l4731:
  8112                           
  8113                           ;main.c: 74: uint32_t now = get_ticks_with_lock();
  8114     0C55  319E  269D  318C   	fcall	_get_ticks_with_lock
  8115     0C58  0140               	movlb	0	; select bank0
  8116     0C59  0823               	movf	?_get_ticks_with_lock+3,w
  8117     0C5A  0142               	movlb	2	; select bank2
  8118     0C5B  00A5               	movwf	(main@now+3)^(0+256)
  8119     0C5C  0140               	movlb	0	; select bank0
  8120     0C5D  0822               	movf	?_get_ticks_with_lock+2,w
  8121     0C5E  0142               	movlb	2	; select bank2
  8122     0C5F  00A4               	movwf	(main@now+2)^(0+256)
  8123     0C60  0140               	movlb	0	; select bank0
  8124     0C61  0821               	movf	?_get_ticks_with_lock+1,w
  8125     0C62  0142               	movlb	2	; select bank2
  8126     0C63  00A3               	movwf	(main@now+1)^(0+256)
  8127     0C64  0140               	movlb	0	; select bank0
  8128     0C65  0820               	movf	?_get_ticks_with_lock,w
  8129     0C66  0142               	movlb	2	; select bank2
  8130     0C67  00A2               	movwf	main@now^(0+256)
  8131     0C68                     l4733:
  8132                           
  8133                           ;main.c: 75: static uint32_t prev_ticks_btn = 0;;main.c: 77: if(calculate_diff(now, prev
      +                          _ticks_btn) >= 20){
  8134     0C68  0825               	movf	(main@now+3)^(0+256),w
  8135     0C69  0140               	movlb	0	; select bank0
  8136     0C6A  00A3               	movwf	calculate_diff@now+3
  8137     0C6B  0142               	movlb	2	; select bank2
  8138     0C6C  0824               	movf	(main@now+2)^(0+256),w
  8139     0C6D  0140               	movlb	0	; select bank0
  8140     0C6E  00A2               	movwf	calculate_diff@now+2
  8141     0C6F  0142               	movlb	2	; select bank2
  8142     0C70  0823               	movf	(main@now+1)^(0+256),w
  8143     0C71  0140               	movlb	0	; select bank0
  8144     0C72  00A1               	movwf	calculate_diff@now+1
  8145     0C73  0142               	movlb	2	; select bank2
  8146     0C74  0822               	movf	main@now^(0+256),w
  8147     0C75  0140               	movlb	0	; select bank0
  8148     0C76  00A0               	movwf	calculate_diff@now
  8149     0C77  0142               	movlb	2	; select bank2
  8150     0C78  086E               	movf	(main@prev_ticks_btn+3)^(0+256),w
  8151     0C79  0140               	movlb	0	; select bank0
  8152     0C7A  00A7               	movwf	calculate_diff@prev_ticks+3
  8153     0C7B  0142               	movlb	2	; select bank2
  8154     0C7C  086D               	movf	(main@prev_ticks_btn+2)^(0+256),w
  8155     0C7D  0140               	movlb	0	; select bank0
  8156     0C7E  00A6               	movwf	calculate_diff@prev_ticks+2
  8157     0C7F  0142               	movlb	2	; select bank2
  8158     0C80  086C               	movf	(main@prev_ticks_btn+1)^(0+256),w
  8159     0C81  0140               	movlb	0	; select bank0
  8160     0C82  00A5               	movwf	calculate_diff@prev_ticks+1
  8161     0C83  0142               	movlb	2	; select bank2
  8162     0C84  086B               	movf	main@prev_ticks_btn^(0+256),w
  8163     0C85  0140               	movlb	0	; select bank0
  8164     0C86  00A4               	movwf	calculate_diff@prev_ticks
  8165     0C87  3192  22D2  318C   	fcall	_calculate_diff
  8166     0C8A  0140               	movlb	0	; select bank0
  8167     0C8B  0823               	movf	?_calculate_diff+3,w
  8168     0C8C  1D03               	btfss	3,2
  8169     0C8D  2C9A               	goto	u4950
  8170     0C8E  0822               	movf	?_calculate_diff+2,w
  8171     0C8F  1D03               	btfss	3,2
  8172     0C90  2C9A               	goto	u4950
  8173     0C91  0821               	movf	?_calculate_diff+1,w
  8174     0C92  1D03               	btfss	3,2
  8175     0C93  2C9A               	goto	u4950
  8176     0C94  3014               	movlw	20
  8177     0C95  0220               	subwf	?_calculate_diff,w
  8178     0C96  1C03               	btfss	3,0
  8179     0C97  2C99               	goto	u4951
  8180     0C98  2C9A               	goto	u4950
  8181     0C99                     u4951:
  8182     0C99  2F8B               	goto	l4893
  8183     0C9A                     u4950:
  8184     0C9A                     l4735:
  8185                           
  8186                           ;main.c: 78: prev_ticks_btn = now;
  8187     0C9A  0142               	movlb	2	; select bank2
  8188     0C9B  0825               	movf	(main@now+3)^(0+256),w
  8189     0C9C  00EE               	movwf	(main@prev_ticks_btn+3)^(0+256)
  8190     0C9D  0824               	movf	(main@now+2)^(0+256),w
  8191     0C9E  00ED               	movwf	(main@prev_ticks_btn+2)^(0+256)
  8192     0C9F  0823               	movf	(main@now+1)^(0+256),w
  8193     0CA0  00EC               	movwf	(main@prev_ticks_btn+1)^(0+256)
  8194     0CA1  0822               	movf	main@now^(0+256),w
  8195     0CA2  00EB               	movwf	main@prev_ticks_btn^(0+256)
  8196     0CA3                     l4737:
  8197                           
  8198                           ;main.c: 79: update_mybutton(&b1, PORTAbits.RA4, get_ticks_with_lock());
  8199     0CA3  3000               	movlw	0
  8200     0CA4  0140               	movlb	0	; select bank0
  8201     0CA5  1A0C               	btfsc	12,4	;volatile
  8202     0CA6  3001               	movlw	1
  8203     0CA7  00B1               	movwf	update_mybutton@signal
  8204     0CA8  319E  269D  318C   	fcall	_get_ticks_with_lock
  8205     0CAB  0140               	movlb	0	; select bank0
  8206     0CAC  0823               	movf	?_get_ticks_with_lock+3,w
  8207     0CAD  00B5               	movwf	update_mybutton@now+3
  8208     0CAE  0822               	movf	?_get_ticks_with_lock+2,w
  8209     0CAF  00B4               	movwf	update_mybutton@now+2
  8210     0CB0  0821               	movf	?_get_ticks_with_lock+1,w
  8211     0CB1  00B3               	movwf	update_mybutton@now+1
  8212     0CB2  0820               	movf	?_get_ticks_with_lock,w
  8213     0CB3  00B2               	movwf	update_mybutton@now
  8214     0CB4  3031               	movlw	(low (main@b1| (0+256)))& (0+255)
  8215     0CB5  3196  264C  318C   	fcall	_update_mybutton
  8216     0CB8                     l4739:
  8217                           
  8218                           ;main.c: 80: update_mybutton(&b2, PORTAbits.RA5, get_ticks_with_lock());
  8219     0CB8  3000               	movlw	0
  8220     0CB9  0140               	movlb	0	; select bank0
  8221     0CBA  1A8C               	btfsc	12,5	;volatile
  8222     0CBB  3001               	movlw	1
  8223     0CBC  00B1               	movwf	update_mybutton@signal
  8224     0CBD  319E  269D  318C   	fcall	_get_ticks_with_lock
  8225     0CC0  0140               	movlb	0	; select bank0
  8226     0CC1  0823               	movf	?_get_ticks_with_lock+3,w
  8227     0CC2  00B5               	movwf	update_mybutton@now+3
  8228     0CC3  0822               	movf	?_get_ticks_with_lock+2,w
  8229     0CC4  00B4               	movwf	update_mybutton@now+2
  8230     0CC5  0821               	movf	?_get_ticks_with_lock+1,w
  8231     0CC6  00B3               	movwf	update_mybutton@now+1
  8232     0CC7  0820               	movf	?_get_ticks_with_lock,w
  8233     0CC8  00B2               	movwf	update_mybutton@now
  8234     0CC9  304C               	movlw	(low (main@b2| (0+256)))& (0+255)
  8235     0CCA  3196  264C  318C   	fcall	_update_mybutton
  8236     0CCD  2F8B               	goto	l4893
  8237     0CCE                     l4743:
  8238                           
  8239                           ;main.c: 91: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  8240     0CCE  3026               	movlw	low main@state
  8241     0CCF  0140               	movlb	0	; select bank0
  8242     0CD0  00D2               	movwf	monitoring_sync@state
  8243     0CD1  3001               	movlw	high main@state
  8244     0CD2  00D3               	movwf	monitoring_sync@state+1
  8245     0CD3  3031               	movlw	(low (main@b1| (0+256)))& (0+255)
  8246     0CD4  00D4               	movwf	monitoring_sync@b1
  8247     0CD5  304C               	movlw	(low (main@b2| (0+256)))& (0+255)
  8248     0CD6  00D5               	movwf	monitoring_sync@b2
  8249     0CD7  3021               	movlw	(low (main@b1_clicked_count| (0+256)))& (0+255)
  8250     0CD8  00D6               	movwf	monitoring_sync@b1_clicked_count
  8251     0CD9  3020               	movlw	(low (main@b2_clicked_count| (0+256)))& (0+255)
  8252     0CDA  00D7               	movwf	monitoring_sync@b2_clicked_count
  8253     0CDB  3194  24DD  318C   	fcall	_monitoring_sync
  8254                           
  8255                           ;main.c: 92: break;
  8256     0CDE  2FA6               	goto	l4895
  8257     0CDF                     l4745:
  8258                           
  8259                           ;main.c: 95: if(calculate_diff(now, prev_ticks) >= 2000){
  8260     0CDF  0825               	movf	(main@now+3)^(0+256),w
  8261     0CE0  0140               	movlb	0	; select bank0
  8262     0CE1  00A3               	movwf	calculate_diff@now+3
  8263     0CE2  0142               	movlb	2	; select bank2
  8264     0CE3  0824               	movf	(main@now+2)^(0+256),w
  8265     0CE4  0140               	movlb	0	; select bank0
  8266     0CE5  00A2               	movwf	calculate_diff@now+2
  8267     0CE6  0142               	movlb	2	; select bank2
  8268     0CE7  0823               	movf	(main@now+1)^(0+256),w
  8269     0CE8  0140               	movlb	0	; select bank0
  8270     0CE9  00A1               	movwf	calculate_diff@now+1
  8271     0CEA  0142               	movlb	2	; select bank2
  8272     0CEB  0822               	movf	main@now^(0+256),w
  8273     0CEC  0140               	movlb	0	; select bank0
  8274     0CED  00A0               	movwf	calculate_diff@now
  8275     0CEE  0142               	movlb	2	; select bank2
  8276     0CEF  086A               	movf	(main@prev_ticks+3)^(0+256),w
  8277     0CF0  0140               	movlb	0	; select bank0
  8278     0CF1  00A7               	movwf	calculate_diff@prev_ticks+3
  8279     0CF2  0142               	movlb	2	; select bank2
  8280     0CF3  0869               	movf	(main@prev_ticks+2)^(0+256),w
  8281     0CF4  0140               	movlb	0	; select bank0
  8282     0CF5  00A6               	movwf	calculate_diff@prev_ticks+2
  8283     0CF6  0142               	movlb	2	; select bank2
  8284     0CF7  0868               	movf	(main@prev_ticks+1)^(0+256),w
  8285     0CF8  0140               	movlb	0	; select bank0
  8286     0CF9  00A5               	movwf	calculate_diff@prev_ticks+1
  8287     0CFA  0142               	movlb	2	; select bank2
  8288     0CFB  0867               	movf	main@prev_ticks^(0+256),w
  8289     0CFC  0140               	movlb	0	; select bank0
  8290     0CFD  00A4               	movwf	calculate_diff@prev_ticks
  8291     0CFE  3192  22D2  318C   	fcall	_calculate_diff
  8292     0D01  0140               	movlb	0	; select bank0
  8293     0D02  0823               	movf	?_calculate_diff+3,w
  8294     0D03  1D03               	btfss	3,2
  8295     0D04  2D10               	goto	u4960
  8296     0D05  0822               	movf	?_calculate_diff+2,w
  8297     0D06  1D03               	btfss	3,2
  8298     0D07  2D10               	goto	u4960
  8299     0D08  30D0               	movlw	208
  8300     0D09  0220               	subwf	?_calculate_diff,w
  8301     0D0A  3007               	movlw	7
  8302     0D0B  3B21               	subwfb	?_calculate_diff+1,w
  8303     0D0C  1C03               	btfss	3,0
  8304     0D0D  2D0F               	goto	u4961
  8305     0D0E  2D10               	goto	u4960
  8306     0D0F                     u4961:
  8307     0D0F  2D2C               	goto	l4755
  8308     0D10                     u4960:
  8309     0D10                     l4747:
  8310                           
  8311                           ;main.c: 96: prev_ticks = now;
  8312     0D10  0142               	movlb	2	; select bank2
  8313     0D11  0825               	movf	(main@now+3)^(0+256),w
  8314     0D12  00EA               	movwf	(main@prev_ticks+3)^(0+256)
  8315     0D13  0824               	movf	(main@now+2)^(0+256),w
  8316     0D14  00E9               	movwf	(main@prev_ticks+2)^(0+256)
  8317     0D15  0823               	movf	(main@now+1)^(0+256),w
  8318     0D16  00E8               	movwf	(main@prev_ticks+1)^(0+256)
  8319     0D17  0822               	movf	main@now^(0+256),w
  8320     0D18  00E7               	movwf	main@prev_ticks^(0+256)
  8321     0D19                     l4749:
  8322                           
  8323                           ;main.c: 97: measurement(&state, &sensor_value);
  8324     0D19  3027               	movlw	(low (main@sensor_value| (0+256)))& (0+255)
  8325     0D1A  0140               	movlb	0	; select bank0
  8326     0D1B  00D2               	movwf	measurement@value
  8327     0D1C  3026               	movlw	(low (main@state| (0+256)))& (0+255)
  8328     0D1D  319F  2733  318C   	fcall	_measurement
  8329     0D20                     l4751:
  8330                           
  8331                           ;main.c: 98: _delay((unsigned long)((100)*(1000000/4000.0)));
  8332     0D20  3021               	movlw	33
  8333     0D21  0141               	movlb	1	; select bank1
  8334     0D22  00C0               	movwf	??_main^(0+128)
  8335     0D23  3076               	movlw	118
  8336     0D24                     u5157:
  8337     0D24  0B89               	decfsz	9,f
  8338     0D25  2D24               	goto	u5157
  8339     0D26  0BC0               	decfsz	??_main^(0+128),f
  8340     0D27  2D24               	goto	u5157
  8341     0D28  0000               	nop
  8342     0D29                     l4753:
  8343                           
  8344                           ;main.c: 99: state = STATE_OUTPUT_VALUE;
  8345     0D29  3006               	movlw	6
  8346     0D2A  0142               	movlb	2	; select bank2
  8347     0D2B  00A6               	movwf	main@state^(0+256)
  8348     0D2C                     l4755:
  8349                           
  8350                           ;main.c: 100: };;main.c: 101: if(calculate_diff(now, prev_ticks_btn) >= 50){
  8351     0D2C  0142               	movlb	2	; select bank2
  8352     0D2D  0825               	movf	(main@now+3)^(0+256),w
  8353     0D2E  0140               	movlb	0	; select bank0
  8354     0D2F  00A3               	movwf	calculate_diff@now+3
  8355     0D30  0142               	movlb	2	; select bank2
  8356     0D31  0824               	movf	(main@now+2)^(0+256),w
  8357     0D32  0140               	movlb	0	; select bank0
  8358     0D33  00A2               	movwf	calculate_diff@now+2
  8359     0D34  0142               	movlb	2	; select bank2
  8360     0D35  0823               	movf	(main@now+1)^(0+256),w
  8361     0D36  0140               	movlb	0	; select bank0
  8362     0D37  00A1               	movwf	calculate_diff@now+1
  8363     0D38  0142               	movlb	2	; select bank2
  8364     0D39  0822               	movf	main@now^(0+256),w
  8365     0D3A  0140               	movlb	0	; select bank0
  8366     0D3B  00A0               	movwf	calculate_diff@now
  8367     0D3C  0141               	movlb	1	; select bank1
  8368     0D3D  084F               	movf	(main@rev_ticks_btn_391+3)^(0+128),w
  8369     0D3E  0140               	movlb	0	; select bank0
  8370     0D3F  00A7               	movwf	calculate_diff@prev_ticks+3
  8371     0D40  0141               	movlb	1	; select bank1
  8372     0D41  084E               	movf	(main@rev_ticks_btn_391+2)^(0+128),w
  8373     0D42  0140               	movlb	0	; select bank0
  8374     0D43  00A6               	movwf	calculate_diff@prev_ticks+2
  8375     0D44  0141               	movlb	1	; select bank1
  8376     0D45  084D               	movf	(main@rev_ticks_btn_391+1)^(0+128),w
  8377     0D46  0140               	movlb	0	; select bank0
  8378     0D47  00A5               	movwf	calculate_diff@prev_ticks+1
  8379     0D48  0141               	movlb	1	; select bank1
  8380     0D49  084C               	movf	main@rev_ticks_btn_391^(0+128),w
  8381     0D4A  0140               	movlb	0	; select bank0
  8382     0D4B  00A4               	movwf	calculate_diff@prev_ticks
  8383     0D4C  3192  22D2  318C   	fcall	_calculate_diff
  8384     0D4F  0140               	movlb	0	; select bank0
  8385     0D50  0823               	movf	?_calculate_diff+3,w
  8386     0D51  1D03               	btfss	3,2
  8387     0D52  2D5F               	goto	u4970
  8388     0D53  0822               	movf	?_calculate_diff+2,w
  8389     0D54  1D03               	btfss	3,2
  8390     0D55  2D5F               	goto	u4970
  8391     0D56  0821               	movf	?_calculate_diff+1,w
  8392     0D57  1D03               	btfss	3,2
  8393     0D58  2D5F               	goto	u4970
  8394     0D59  3032               	movlw	50
  8395     0D5A  0220               	subwf	?_calculate_diff,w
  8396     0D5B  1C03               	btfss	3,0
  8397     0D5C  2D5E               	goto	u4971
  8398     0D5D  2D5F               	goto	u4970
  8399     0D5E                     u4971:
  8400     0D5E  2FA6               	goto	l4895
  8401     0D5F                     u4970:
  8402     0D5F                     l4757:
  8403                           
  8404                           ;main.c: 102: prev_ticks_btn = now;
  8405     0D5F  0142               	movlb	2	; select bank2
  8406     0D60  0825               	movf	(main@now+3)^(0+256),w
  8407     0D61  0141               	movlb	1	; select bank1
  8408     0D62  00CF               	movwf	(main@rev_ticks_btn_391+3)^(0+128)
  8409     0D63  0142               	movlb	2	; select bank2
  8410     0D64  0824               	movf	(main@now+2)^(0+256),w
  8411     0D65  0141               	movlb	1	; select bank1
  8412     0D66  00CE               	movwf	(main@rev_ticks_btn_391+2)^(0+128)
  8413     0D67  0142               	movlb	2	; select bank2
  8414     0D68  0823               	movf	(main@now+1)^(0+256),w
  8415     0D69  0141               	movlb	1	; select bank1
  8416     0D6A  00CD               	movwf	(main@rev_ticks_btn_391+1)^(0+128)
  8417     0D6B  0142               	movlb	2	; select bank2
  8418     0D6C  0822               	movf	main@now^(0+256),w
  8419     0D6D  0141               	movlb	1	; select bank1
  8420     0D6E  00CC               	movwf	main@rev_ticks_btn_391^(0+128)
  8421                           
  8422                           ;main.c: 103: _delay((unsigned long)((10)*(1000000/4000.0)));
  8423     0D6F  3004               	movlw	4
  8424     0D70  0141               	movlb	1	; select bank1
  8425     0D71  00C0               	movwf	??_main^(0+128)
  8426     0D72  303D               	movlw	61
  8427     0D73                     u5167:
  8428     0D73  0B89               	decfsz	9,f
  8429     0D74  2D73               	goto	u5167
  8430     0D75  0BC0               	decfsz	??_main^(0+128),f
  8431     0D76  2D73               	goto	u5167
  8432     0D77  3200               	nop2
  8433     0D78                     l4759:
  8434                           
  8435                           ;main.c: 104: enable_uart_printf();
  8436     0D78  319D  259D  318C   	fcall	_enable_uart_printf
  8437     0D7B                     l4761:
  8438                           
  8439                           ;main.c: 105: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  8440     0D7B  3026               	movlw	low main@state
  8441     0D7C  0140               	movlb	0	; select bank0
  8442     0D7D  00D2               	movwf	monitoring_sync@state
  8443     0D7E  3001               	movlw	high main@state
  8444     0D7F  00D3               	movwf	monitoring_sync@state+1
  8445     0D80  3031               	movlw	(low (main@b1| (0+256)))& (0+255)
  8446     0D81  00D4               	movwf	monitoring_sync@b1
  8447     0D82  304C               	movlw	(low (main@b2| (0+256)))& (0+255)
  8448     0D83  00D5               	movwf	monitoring_sync@b2
  8449     0D84  3021               	movlw	(low (main@b1_clicked_count| (0+256)))& (0+255)
  8450     0D85  00D6               	movwf	monitoring_sync@b1_clicked_count
  8451     0D86  3020               	movlw	(low (main@b2_clicked_count| (0+256)))& (0+255)
  8452     0D87  00D7               	movwf	monitoring_sync@b2_clicked_count
  8453     0D88  3194  24DD  318C   	fcall	_monitoring_sync
  8454     0D8B                     l4763:
  8455                           
  8456                           ;main.c: 106: _delay((unsigned long)((10)*(1000000/4000.0)));
  8457     0D8B  3004               	movlw	4
  8458     0D8C  0141               	movlb	1	; select bank1
  8459     0D8D  00C0               	movwf	??_main^(0+128)
  8460     0D8E  303D               	movlw	61
  8461     0D8F                     u5177:
  8462     0D8F  0B89               	decfsz	9,f
  8463     0D90  2D8F               	goto	u5177
  8464     0D91  0BC0               	decfsz	??_main^(0+128),f
  8465     0D92  2D8F               	goto	u5177
  8466     0D93  3200               	nop2
  8467     0D94                     l4765:
  8468                           
  8469                           ;main.c: 107: enable_tx_transmit();
  8470     0D94  319E  2646  318C   	fcall	_enable_tx_transmit
  8471     0D97  2FA6               	goto	l4895
  8472     0D98                     l4767:
  8473                           
  8474                           ;main.c: 112: b1_clicked_count = 0;
  8475     0D98  01A1               	clrf	main@b1_clicked_count^(0+256)
  8476                           
  8477                           ;main.c: 113: b2_clicked_count = 0;
  8478     0D99  01A0               	clrf	main@b2_clicked_count^(0+256)
  8479     0D9A                     l4769:
  8480                           
  8481                           ;main.c: 114: if(calculate_diff(now, prev_ticks) >= 2000){
  8482     0D9A  0825               	movf	(main@now+3)^(0+256),w
  8483     0D9B  0140               	movlb	0	; select bank0
  8484     0D9C  00A3               	movwf	calculate_diff@now+3
  8485     0D9D  0142               	movlb	2	; select bank2
  8486     0D9E  0824               	movf	(main@now+2)^(0+256),w
  8487     0D9F  0140               	movlb	0	; select bank0
  8488     0DA0  00A2               	movwf	calculate_diff@now+2
  8489     0DA1  0142               	movlb	2	; select bank2
  8490     0DA2  0823               	movf	(main@now+1)^(0+256),w
  8491     0DA3  0140               	movlb	0	; select bank0
  8492     0DA4  00A1               	movwf	calculate_diff@now+1
  8493     0DA5  0142               	movlb	2	; select bank2
  8494     0DA6  0822               	movf	main@now^(0+256),w
  8495     0DA7  0140               	movlb	0	; select bank0
  8496     0DA8  00A0               	movwf	calculate_diff@now
  8497     0DA9  0142               	movlb	2	; select bank2
  8498     0DAA  086A               	movf	(main@prev_ticks+3)^(0+256),w
  8499     0DAB  0140               	movlb	0	; select bank0
  8500     0DAC  00A7               	movwf	calculate_diff@prev_ticks+3
  8501     0DAD  0142               	movlb	2	; select bank2
  8502     0DAE  0869               	movf	(main@prev_ticks+2)^(0+256),w
  8503     0DAF  0140               	movlb	0	; select bank0
  8504     0DB0  00A6               	movwf	calculate_diff@prev_ticks+2
  8505     0DB1  0142               	movlb	2	; select bank2
  8506     0DB2  0868               	movf	(main@prev_ticks+1)^(0+256),w
  8507     0DB3  0140               	movlb	0	; select bank0
  8508     0DB4  00A5               	movwf	calculate_diff@prev_ticks+1
  8509     0DB5  0142               	movlb	2	; select bank2
  8510     0DB6  0867               	movf	main@prev_ticks^(0+256),w
  8511     0DB7  0140               	movlb	0	; select bank0
  8512     0DB8  00A4               	movwf	calculate_diff@prev_ticks
  8513     0DB9  3192  22D2  318C   	fcall	_calculate_diff
  8514     0DBC  0140               	movlb	0	; select bank0
  8515     0DBD  0823               	movf	?_calculate_diff+3,w
  8516     0DBE  1D03               	btfss	3,2
  8517     0DBF  2DCB               	goto	u4980
  8518     0DC0  0822               	movf	?_calculate_diff+2,w
  8519     0DC1  1D03               	btfss	3,2
  8520     0DC2  2DCB               	goto	u4980
  8521     0DC3  30D0               	movlw	208
  8522     0DC4  0220               	subwf	?_calculate_diff,w
  8523     0DC5  3007               	movlw	7
  8524     0DC6  3B21               	subwfb	?_calculate_diff+1,w
  8525     0DC7  1C03               	btfss	3,0
  8526     0DC8  2DCA               	goto	u4981
  8527     0DC9  2DCB               	goto	u4980
  8528     0DCA                     u4981:
  8529     0DCA  2DE3               	goto	l4779
  8530     0DCB                     u4980:
  8531     0DCB                     l4771:
  8532                           
  8533                           ;main.c: 115: prev_ticks = now;
  8534     0DCB  0142               	movlb	2	; select bank2
  8535     0DCC  0825               	movf	(main@now+3)^(0+256),w
  8536     0DCD  00EA               	movwf	(main@prev_ticks+3)^(0+256)
  8537     0DCE  0824               	movf	(main@now+2)^(0+256),w
  8538     0DCF  00E9               	movwf	(main@prev_ticks+2)^(0+256)
  8539     0DD0  0823               	movf	(main@now+1)^(0+256),w
  8540     0DD1  00E8               	movwf	(main@prev_ticks+1)^(0+256)
  8541     0DD2  0822               	movf	main@now^(0+256),w
  8542     0DD3  00E7               	movwf	main@prev_ticks^(0+256)
  8543     0DD4                     l4773:
  8544                           
  8545                           ;main.c: 116: measured_adc();
  8546     0DD4  3190  2043  318C   	fcall	_measured_adc
  8547     0DD7                     l4775:
  8548                           
  8549                           ;main.c: 117: _delay((unsigned long)((100)*(1000000/4000.0)));
  8550     0DD7  3021               	movlw	33
  8551     0DD8  0141               	movlb	1	; select bank1
  8552     0DD9  00C0               	movwf	??_main^(0+128)
  8553     0DDA  3076               	movlw	118
  8554     0DDB                     u5187:
  8555     0DDB  0B89               	decfsz	9,f
  8556     0DDC  2DDB               	goto	u5187
  8557     0DDD  0BC0               	decfsz	??_main^(0+128),f
  8558     0DDE  2DDB               	goto	u5187
  8559     0DDF  0000               	nop
  8560     0DE0                     l4777:
  8561                           
  8562                           ;main.c: 118: state = STATE_OUTPUT_ADC;
  8563     0DE0  3005               	movlw	5
  8564     0DE1  0142               	movlb	2	; select bank2
  8565     0DE2  00A6               	movwf	main@state^(0+256)
  8566     0DE3                     l4779:
  8567                           
  8568                           ;main.c: 119: };;main.c: 120: if(calculate_diff(now, prev_ticks_monitor) >= 50){
  8569     0DE3  0142               	movlb	2	; select bank2
  8570     0DE4  0825               	movf	(main@now+3)^(0+256),w
  8571     0DE5  0140               	movlb	0	; select bank0
  8572     0DE6  00A3               	movwf	calculate_diff@now+3
  8573     0DE7  0142               	movlb	2	; select bank2
  8574     0DE8  0824               	movf	(main@now+2)^(0+256),w
  8575     0DE9  0140               	movlb	0	; select bank0
  8576     0DEA  00A2               	movwf	calculate_diff@now+2
  8577     0DEB  0142               	movlb	2	; select bank2
  8578     0DEC  0823               	movf	(main@now+1)^(0+256),w
  8579     0DED  0140               	movlb	0	; select bank0
  8580     0DEE  00A1               	movwf	calculate_diff@now+1
  8581     0DEF  0142               	movlb	2	; select bank2
  8582     0DF0  0822               	movf	main@now^(0+256),w
  8583     0DF1  0140               	movlb	0	; select bank0
  8584     0DF2  00A0               	movwf	calculate_diff@now
  8585     0DF3  0141               	movlb	1	; select bank1
  8586     0DF4  0853               	movf	(main@prev_ticks_monitor+3)^(0+128),w
  8587     0DF5  0140               	movlb	0	; select bank0
  8588     0DF6  00A7               	movwf	calculate_diff@prev_ticks+3
  8589     0DF7  0141               	movlb	1	; select bank1
  8590     0DF8  0852               	movf	(main@prev_ticks_monitor+2)^(0+128),w
  8591     0DF9  0140               	movlb	0	; select bank0
  8592     0DFA  00A6               	movwf	calculate_diff@prev_ticks+2
  8593     0DFB  0141               	movlb	1	; select bank1
  8594     0DFC  0851               	movf	(main@prev_ticks_monitor+1)^(0+128),w
  8595     0DFD  0140               	movlb	0	; select bank0
  8596     0DFE  00A5               	movwf	calculate_diff@prev_ticks+1
  8597     0DFF  0141               	movlb	1	; select bank1
  8598     0E00  0850               	movf	main@prev_ticks_monitor^(0+128),w
  8599     0E01  0140               	movlb	0	; select bank0
  8600     0E02  00A4               	movwf	calculate_diff@prev_ticks
  8601     0E03  3192  22D2  318C   	fcall	_calculate_diff
  8602     0E06  0140               	movlb	0	; select bank0
  8603     0E07  0823               	movf	?_calculate_diff+3,w
  8604     0E08  1D03               	btfss	3,2
  8605     0E09  2E16               	goto	u4990
  8606     0E0A  0822               	movf	?_calculate_diff+2,w
  8607     0E0B  1D03               	btfss	3,2
  8608     0E0C  2E16               	goto	u4990
  8609     0E0D  0821               	movf	?_calculate_diff+1,w
  8610     0E0E  1D03               	btfss	3,2
  8611     0E0F  2E16               	goto	u4990
  8612     0E10  3032               	movlw	50
  8613     0E11  0220               	subwf	?_calculate_diff,w
  8614     0E12  1C03               	btfss	3,0
  8615     0E13  2E15               	goto	u4991
  8616     0E14  2E16               	goto	u4990
  8617     0E15                     u4991:
  8618     0E15  2FA6               	goto	l4895
  8619     0E16                     u4990:
  8620     0E16                     l4781:
  8621                           
  8622                           ;main.c: 121: prev_ticks_monitor = now;
  8623     0E16  0142               	movlb	2	; select bank2
  8624     0E17  0825               	movf	(main@now+3)^(0+256),w
  8625     0E18  0141               	movlb	1	; select bank1
  8626     0E19  00D3               	movwf	(main@prev_ticks_monitor+3)^(0+128)
  8627     0E1A  0142               	movlb	2	; select bank2
  8628     0E1B  0824               	movf	(main@now+2)^(0+256),w
  8629     0E1C  0141               	movlb	1	; select bank1
  8630     0E1D  00D2               	movwf	(main@prev_ticks_monitor+2)^(0+128)
  8631     0E1E  0142               	movlb	2	; select bank2
  8632     0E1F  0823               	movf	(main@now+1)^(0+256),w
  8633     0E20  0141               	movlb	1	; select bank1
  8634     0E21  00D1               	movwf	(main@prev_ticks_monitor+1)^(0+128)
  8635     0E22  0142               	movlb	2	; select bank2
  8636     0E23  0822               	movf	main@now^(0+256),w
  8637     0E24  0141               	movlb	1	; select bank1
  8638     0E25  00D0               	movwf	main@prev_ticks_monitor^(0+128)
  8639     0E26                     l4783:
  8640                           
  8641                           ;main.c: 123: enable_uart_printf();
  8642     0E26  319D  259D  318C   	fcall	_enable_uart_printf
  8643     0E29                     l4785:
  8644                           
  8645                           ;main.c: 124: monitoring_sync(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  8646     0E29  3026               	movlw	low main@state
  8647     0E2A  0140               	movlb	0	; select bank0
  8648     0E2B  00D2               	movwf	monitoring_sync@state
  8649     0E2C  3001               	movlw	high main@state
  8650     0E2D  00D3               	movwf	monitoring_sync@state+1
  8651     0E2E  3031               	movlw	(low (main@b1| (0+256)))& (0+255)
  8652     0E2F  00D4               	movwf	monitoring_sync@b1
  8653     0E30  304C               	movlw	(low (main@b2| (0+256)))& (0+255)
  8654     0E31  00D5               	movwf	monitoring_sync@b2
  8655     0E32  3021               	movlw	(low (main@b1_clicked_count| (0+256)))& (0+255)
  8656     0E33  00D6               	movwf	monitoring_sync@b1_clicked_count
  8657     0E34  3020               	movlw	(low (main@b2_clicked_count| (0+256)))& (0+255)
  8658     0E35  00D7               	movwf	monitoring_sync@b2_clicked_count
  8659     0E36  3194  24DD  318C   	fcall	_monitoring_sync
  8660     0E39                     l4787:
  8661                           
  8662                           ;main.c: 126: enable_tx_transmit();
  8663     0E39  319E  2646  318C   	fcall	_enable_tx_transmit
  8664     0E3C                     l4789:
  8665                           
  8666                           ;main.c: 127: state = STATE_DISPATCH;
  8667     0E3C  3003               	movlw	3
  8668     0E3D  0142               	movlb	2	; select bank2
  8669     0E3E  00A6               	movwf	main@state^(0+256)
  8670     0E3F  2FA6               	goto	l4895
  8671     0E40                     l4791:
  8672                           
  8673                           ;main.c: 133: dispatch(&state, &b1, &b2, &b1_clicked_count, &b2_clicked_count);
  8674     0E40  3031               	movlw	(low (main@b1| (0+256)))& (0+255)
  8675     0E41  0140               	movlb	0	; select bank0
  8676     0E42  00A0               	movwf	dispatch@b1
  8677     0E43  304C               	movlw	(low (main@b2| (0+256)))& (0+255)
  8678     0E44  00A1               	movwf	dispatch@b2
  8679     0E45  3021               	movlw	(low (main@b1_clicked_count| (0+256)))& (0+255)
  8680     0E46  00A2               	movwf	dispatch@b1_clicked_count_ptr
  8681     0E47  3020               	movlw	(low (main@b2_clicked_count| (0+256)))& (0+255)
  8682     0E48  00A3               	movwf	dispatch@b2_clicked_count_ptr
  8683     0E49  3026               	movlw	(low (main@state| (0+256)))& (0+255)
  8684     0E4A  3192  223E  318C   	fcall	_dispatch
  8685                           
  8686                           ;main.c: 134: break;
  8687     0E4D  2FA6               	goto	l4895
  8688     0E4E                     l4793:
  8689                           
  8690                           ;main.c: 137: enable_uart_printf();
  8691     0E4E  319D  259D  318C   	fcall	_enable_uart_printf
  8692     0E51                     l4795:
  8693                           
  8694                           ;main.c: 138: printf("STATE_SAVE_TOP_CALIBRATION_POINT\r\n");
  8695     0E51  30F8               	movlw	low (STR_4| (0+32768))
  8696     0E52  0140               	movlb	0	; select bank0
  8697     0E53  00AE               	movwf	printf@f
  8698     0E54  3098               	movlw	high (STR_4| (0+32768))
  8699     0E55  00AF               	movwf	printf@f+1
  8700     0E56  3180  20CE  318C   	fcall	_printf
  8701     0E59                     l4797:
  8702                           
  8703                           ;main.c: 139: printf("saved\r\n");
  8704     0E59  303B               	movlw	low (STR_5| (0+32768))
  8705     0E5A  0140               	movlb	0	; select bank0
  8706     0E5B  00AE               	movwf	printf@f
  8707     0E5C  309A               	movlw	high (STR_5| (0+32768))
  8708     0E5D  00AF               	movwf	printf@f+1
  8709     0E5E  3180  20CE  318C   	fcall	_printf
  8710                           
  8711                           ;main.c: 140: enable_tx_transmit();
  8712     0E61  319E  2646  318C   	fcall	_enable_tx_transmit
  8713     0E64                     l4799:
  8714                           
  8715                           ;main.c: 141: save_top_adc_point(&state, &sensor_value);
  8716     0E64  3027               	movlw	(low (main@sensor_value| (0+256)))& (0+255)
  8717     0E65  0140               	movlb	0	; select bank0
  8718     0E66  00B3               	movwf	save_top_adc_point@sensor_value
  8719     0E67  3026               	movlw	(low (main@state| (0+256)))& (0+255)
  8720     0E68  3190  20A7  318C   	fcall	_save_top_adc_point
  8721     0E6B                     l4801:
  8722                           
  8723                           ;main.c: 142: state = STATE_CALIBRATE;
  8724     0E6B  3004               	movlw	4
  8725     0E6C  0142               	movlb	2	; select bank2
  8726     0E6D  00A6               	movwf	main@state^(0+256)
  8727                           
  8728                           ;main.c: 143: break;
  8729     0E6E  2FA6               	goto	l4895
  8730     0E6F                     l4803:
  8731                           
  8732                           ;main.c: 146: enable_uart_printf();
  8733     0E6F  319D  259D  318C   	fcall	_enable_uart_printf
  8734     0E72                     l4805:
  8735                           
  8736                           ;main.c: 147: printf("STATE_SAVE_BOTTOM_CALIBRATION_POINT\r\n");
  8737     0E72  3088               	movlw	low (STR_6| (0+32768))
  8738     0E73  0140               	movlb	0	; select bank0
  8739     0E74  00AE               	movwf	printf@f
  8740     0E75  3098               	movlw	high (STR_6| (0+32768))
  8741     0E76  00AF               	movwf	printf@f+1
  8742     0E77  3180  20CE  318C   	fcall	_printf
  8743     0E7A                     l4807:
  8744                           
  8745                           ;main.c: 148: printf("saved\r\n");
  8746     0E7A  303B               	movlw	low (STR_5| (0+32768))
  8747     0E7B  0140               	movlb	0	; select bank0
  8748     0E7C  00AE               	movwf	printf@f
  8749     0E7D  309A               	movlw	high (STR_5| (0+32768))
  8750     0E7E  00AF               	movwf	printf@f+1
  8751     0E7F  3180  20CE  318C   	fcall	_printf
  8752                           
  8753                           ;main.c: 149: enable_tx_transmit();
  8754     0E82  319E  2646  318C   	fcall	_enable_tx_transmit
  8755     0E85                     l4809:
  8756                           
  8757                           ;main.c: 150: save_bottom_adc_point(&state, &sensor_value);
  8758     0E85  3027               	movlw	(low (main@sensor_value| (0+256)))& (0+255)
  8759     0E86  0140               	movlb	0	; select bank0
  8760     0E87  00B3               	movwf	save_bottom_adc_point@sensor_value
  8761     0E88  3026               	movlw	(low (main@state| (0+256)))& (0+255)
  8762     0E89  3190  2074  318C   	fcall	_save_bottom_adc_point
  8763     0E8C  2E6B               	goto	l4801
  8764     0E8D                     l4813:
  8765                           
  8766                           ;main.c: 155: _delay((unsigned long)((10)*(1000000/4000.0)));
  8767     0E8D  3004               	movlw	4
  8768     0E8E  0141               	movlb	1	; select bank1
  8769     0E8F  00C0               	movwf	??_main^(0+128)
  8770     0E90  303D               	movlw	61
  8771     0E91                     u5197:
  8772     0E91  0B89               	decfsz	9,f
  8773     0E92  2E91               	goto	u5197
  8774     0E93  0BC0               	decfsz	??_main^(0+128),f
  8775     0E94  2E91               	goto	u5197
  8776     0E95  3200               	nop2
  8777     0E96                     l4815:
  8778                           
  8779                           ;main.c: 156: enable_uart_printf();
  8780     0E96  319D  259D  318C   	fcall	_enable_uart_printf
  8781     0E99                     l4817:
  8782                           
  8783                           ;main.c: 157: printf(" ----- STATE_OUTPUT_ADC \r\n");
  8784     0E99  3057               	movlw	low (STR_8| (0+32768))
  8785     0E9A  0140               	movlb	0	; select bank0
  8786     0E9B  00AE               	movwf	printf@f
  8787     0E9C  3099               	movlw	high (STR_8| (0+32768))
  8788     0E9D  00AF               	movwf	printf@f+1
  8789     0E9E  3180  20CE  318C   	fcall	_printf
  8790     0EA1                     l4819:
  8791                           
  8792                           ;main.c: 158: _delay((unsigned long)((10)*(1000000/4000.0)));
  8793     0EA1  3004               	movlw	4
  8794     0EA2  0141               	movlb	1	; select bank1
  8795     0EA3  00C0               	movwf	??_main^(0+128)
  8796     0EA4  303D               	movlw	61
  8797     0EA5                     u5207:
  8798     0EA5  0B89               	decfsz	9,f
  8799     0EA6  2EA5               	goto	u5207
  8800     0EA7  0BC0               	decfsz	??_main^(0+128),f
  8801     0EA8  2EA5               	goto	u5207
  8802     0EA9  3200               	nop2
  8803     0EAA                     l4821:
  8804                           
  8805                           ;main.c: 159: enable_tx_transmit();
  8806     0EAA  319E  2646  318C   	fcall	_enable_tx_transmit
  8807     0EAD                     l4823:
  8808                           
  8809                           ;main.c: 160: if(uart_rx_package_event){
  8810     0EAD  0142               	movlb	2	; select bank2
  8811     0EAE  086F               	movf	_uart_rx_package_event^(0+256),w	;volatile
  8812     0EAF  1903               	btfsc	3,2
  8813     0EB0  2EB2               	goto	u5001
  8814     0EB1  2EB3               	goto	u5000
  8815     0EB2                     u5001:
  8816     0EB2  2E6B               	goto	l4801
  8817     0EB3                     u5000:
  8818     0EB3                     l4825:
  8819                           
  8820                           ;main.c: 161: uart_rx_package_event = 0;
  8821     0EB3  01EF               	clrf	_uart_rx_package_event^(0+256)	;volatile
  8822                           
  8823                           ;main.c: 162: rxbuffer_index = 0;
  8824     0EB4  01FD               	clrf	_rxbuffer_index	;volatile
  8825     0EB5                     l4827:
  8826     0EB5  0140               	movlb	0	; select bank0
  8827     0EB6  111A               	bcf	26,2	;volatile
  8828     0EB7                     l4829:
  8829                           
  8830                           ;main.c: 164: enable_tx_transmit();
  8831     0EB7  319E  2646  318C   	fcall	_enable_tx_transmit
  8832     0EBA                     l4831:
  8833                           
  8834                           ;main.c: 165: get_measured_adc_value(&sensor_value);
  8835     0EBA  3027               	movlw	(low (main@sensor_value| (0+256)))& (0+255)
  8836     0EBB  3194  2463  318C   	fcall	_get_measured_adc_value
  8837     0EBE                     l4833:
  8838     0EBE  0140               	movlb	0	; select bank0
  8839     0EBF  151A               	bsf	26,2	;volatile
  8840     0EC0                     l4835:
  8841                           
  8842                           ;main.c: 169: enable_uart_printf();
  8843     0EC0  319D  259D  318C   	fcall	_enable_uart_printf
  8844     0EC3                     l4837:
  8845                           
  8846                           ;main.c: 170: dump_memory_map();
  8847     0EC3  319D  25F8  318C   	fcall	_dump_memory_map
  8848     0EC6                     l4839:
  8849                           
  8850                           ;main.c: 172: printf("[lu] Calibration Value: ---- \r\n ";main.c: 173: "pH_adc: %u \r\n"
      +                          ;main.c: 174: "pH_hight_byte: %02X \r\n";main.c: 175: "pH_low_byte: %02X \r\n",;main.c: 
      +                          176: get_ticks(),;main.c: 177: sensor_value.ph_adc_value,;main.c: 178: sensor_value.ph_a
      +                          dc_high_byte,;main.c: 179: sensor_value.ph_adc_low_byte;main.c: 180: );
  8851     0EC6  3008               	movlw	low (STR_9| (0+32768))
  8852     0EC7  0140               	movlb	0	; select bank0
  8853     0EC8  00AE               	movwf	printf@f
  8854     0EC9  3098               	movlw	high (STR_9| (0+32768))
  8855     0ECA  00AF               	movwf	printf@f+1
  8856     0ECB  319E  2602  318C   	fcall	_get_ticks
  8857     0ECE  0140               	movlb	0	; select bank0
  8858     0ECF  0823               	movf	?_get_ticks+3,w
  8859     0ED0  00B3               	movwf	?_printf+5
  8860     0ED1  0822               	movf	?_get_ticks+2,w
  8861     0ED2  00B2               	movwf	?_printf+4
  8862     0ED3  0821               	movf	?_get_ticks+1,w
  8863     0ED4  00B1               	movwf	?_printf+3
  8864     0ED5  0820               	movf	?_get_ticks,w
  8865     0ED6  00B0               	movwf	?_printf+2
  8866     0ED7  0142               	movlb	2	; select bank2
  8867     0ED8  082A               	movf	((main@sensor_value+1)^(0+256)+2),w
  8868     0ED9  0140               	movlb	0	; select bank0
  8869     0EDA  00B5               	movwf	?_printf+7
  8870     0EDB  0142               	movlb	2	; select bank2
  8871     0EDC  0829               	movf	(main@sensor_value^(0+256)+2),w
  8872     0EDD  0140               	movlb	0	; select bank0
  8873     0EDE  00B4               	movwf	?_printf+6
  8874     0EDF  0142               	movlb	2	; select bank2
  8875     0EE0  082B               	movf	(main@sensor_value^(0+256)+4),w
  8876     0EE1  0141               	movlb	1	; select bank1
  8877     0EE2  00C0               	movwf	??_main^(0+128)
  8878     0EE3  01C1               	clrf	(??_main^(0+128)+1)
  8879     0EE4  0840               	movf	??_main^(0+128),w
  8880     0EE5  0140               	movlb	0	; select bank0
  8881     0EE6  00B6               	movwf	?_printf+8
  8882     0EE7  0141               	movlb	1	; select bank1
  8883     0EE8  0841               	movf	(??_main+1)^(0+128),w
  8884     0EE9  0140               	movlb	0	; select bank0
  8885     0EEA  00B7               	movwf	?_printf+9
  8886     0EEB  0142               	movlb	2	; select bank2
  8887     0EEC  082C               	movf	(main@sensor_value^(0+256)+5),w
  8888     0EED  0141               	movlb	1	; select bank1
  8889     0EEE  00C2               	movwf	(??_main+2)^(0+128)
  8890     0EEF  01C3               	clrf	((??_main+2)^(0+128)+1)
  8891     0EF0  0842               	movf	(??_main+2)^(0+128),w
  8892     0EF1  0140               	movlb	0	; select bank0
  8893     0EF2  00B8               	movwf	?_printf+10
  8894     0EF3  0141               	movlb	1	; select bank1
  8895     0EF4  0843               	movf	(??_main+3)^(0+128),w
  8896     0EF5  0140               	movlb	0	; select bank0
  8897     0EF6  00B9               	movwf	?_printf+11
  8898     0EF7  3180  20CE  318C   	fcall	_printf
  8899     0EFA                     l4841:
  8900                           
  8901                           ;main.c: 181: _delay((unsigned long)((10)*(1000000/4000.0)));
  8902     0EFA  3004               	movlw	4
  8903     0EFB  0141               	movlb	1	; select bank1
  8904     0EFC  00C0               	movwf	??_main^(0+128)
  8905     0EFD  303D               	movlw	61
  8906     0EFE                     u5217:
  8907     0EFE  0B89               	decfsz	9,f
  8908     0EFF  2EFE               	goto	u5217
  8909     0F00  0BC0               	decfsz	??_main^(0+128),f
  8910     0F01  2EFE               	goto	u5217
  8911     0F02  3200               	nop2
  8912     0F03                     l4843:
  8913                           
  8914                           ;main.c: 182: enable_tx_transmit();
  8915     0F03  319E  2646  318C   	fcall	_enable_tx_transmit
  8916     0F06  2E6B               	goto	l4801
  8917     0F07                     l4847:
  8918                           
  8919                           ;main.c: 188: _delay((unsigned long)((10)*(1000000/4000.0)));
  8920     0F07  3004               	movlw	4
  8921     0F08  0141               	movlb	1	; select bank1
  8922     0F09  00C0               	movwf	??_main^(0+128)
  8923     0F0A  303D               	movlw	61
  8924     0F0B                     u5227:
  8925     0F0B  0B89               	decfsz	9,f
  8926     0F0C  2F0B               	goto	u5227
  8927     0F0D  0BC0               	decfsz	??_main^(0+128),f
  8928     0F0E  2F0B               	goto	u5227
  8929     0F0F  3200               	nop2
  8930     0F10                     l4849:
  8931                           
  8932                           ;main.c: 189: enable_uart_printf();
  8933     0F10  319D  259D  318C   	fcall	_enable_uart_printf
  8934     0F13                     l4851:
  8935                           
  8936                           ;main.c: 190: printf("[PIC] into the STATE_OUTPUT_VALUE \r\n");
  8937     0F13  30AE               	movlw	low (STR_10| (0+32768))
  8938     0F14  0140               	movlb	0	; select bank0
  8939     0F15  00AE               	movwf	printf@f
  8940     0F16  3098               	movlw	high (STR_10| (0+32768))
  8941     0F17  00AF               	movwf	printf@f+1
  8942     0F18  3180  20CE  318C   	fcall	_printf
  8943     0F1B                     l4853:
  8944                           
  8945                           ;main.c: 191: _delay((unsigned long)((10)*(1000000/4000.0)));
  8946     0F1B  3004               	movlw	4
  8947     0F1C  0141               	movlb	1	; select bank1
  8948     0F1D  00C0               	movwf	??_main^(0+128)
  8949     0F1E  303D               	movlw	61
  8950     0F1F                     u5237:
  8951     0F1F  0B89               	decfsz	9,f
  8952     0F20  2F1F               	goto	u5237
  8953     0F21  0BC0               	decfsz	??_main^(0+128),f
  8954     0F22  2F1F               	goto	u5237
  8955     0F23  3200               	nop2
  8956     0F24                     l4855:
  8957                           
  8958                           ;main.c: 192: enable_tx_transmit();
  8959     0F24  319E  2646  318C   	fcall	_enable_tx_transmit
  8960     0F27                     l4857:
  8961                           
  8962                           ;main.c: 193: if(uart_rx_package_event){
  8963     0F27  0142               	movlb	2	; select bank2
  8964     0F28  086F               	movf	_uart_rx_package_event^(0+256),w	;volatile
  8965     0F29  1903               	btfsc	3,2
  8966     0F2A  2F2C               	goto	u5011
  8967     0F2B  2F2D               	goto	u5010
  8968     0F2C                     u5011:
  8969     0F2C  2F87               	goto	l4889
  8970     0F2D                     u5010:
  8971     0F2D                     l4859:
  8972                           
  8973                           ;main.c: 194: uart_rx_package_event = 0;
  8974     0F2D  01EF               	clrf	_uart_rx_package_event^(0+256)	;volatile
  8975                           
  8976                           ;main.c: 195: rxbuffer_index = 0;
  8977     0F2E  01FD               	clrf	_rxbuffer_index	;volatile
  8978     0F2F                     l4861:
  8979     0F2F  0140               	movlb	0	; select bank0
  8980     0F30  111A               	bcf	26,2	;volatile
  8981     0F31                     l4863:
  8982                           
  8983                           ;main.c: 197: get_measured_value(&sensor_value);
  8984     0F31  3027               	movlw	(low (main@sensor_value| (0+256)))& (0+255)
  8985     0F32  3185  25CC  318C   	fcall	_get_measured_value
  8986     0F35                     l4865:
  8987                           
  8988                           ;main.c: 199: Enable_Global_Interrupt();
  8989     0F35  3180  2002  318C   	fcall	_Enable_Global_Interrupt
  8990     0F38                     l4867:
  8991                           
  8992                           ;main.c: 200: i2c_slave_set_register(0x00, (uint8_t)(sensor_value.ph_value >> 8) & 0xFF)
      +                          ;
  8993     0F38  0142               	movlb	2	; select bank2
  8994     0F39  0828               	movf	(main@sensor_value+1)^(0+256),w
  8995     0F3A  0140               	movlb	0	; select bank0
  8996     0F3B  00A0               	movwf	i2c_slave_set_register@value
  8997     0F3C  3000               	movlw	0
  8998     0F3D  319E  260C  318C   	fcall	_i2c_slave_set_register
  8999     0F40                     l4869:
  9000                           
  9001                           ;main.c: 201: i2c_slave_set_register(0x01, (uint8_t)(sensor_value.ph_value >> 0) & 0xFF)
      +                          ;
  9002     0F40  0142               	movlb	2	; select bank2
  9003     0F41  0827               	movf	main@sensor_value^(0+256),w
  9004     0F42  0140               	movlb	0	; select bank0
  9005     0F43  00A0               	movwf	i2c_slave_set_register@value
  9006     0F44  3001               	movlw	1
  9007     0F45  319E  260C  318C   	fcall	_i2c_slave_set_register
  9008     0F48                     l4871:
  9009                           
  9010                           ;main.c: 202: i2c_slave_set_register(0x02, (uint8_t)(sensor_value.temp_value >> 8) & 0xF
      +                          F);
  9011     0F48  0142               	movlb	2	; select bank2
  9012     0F49  082E               	movf	((main@sensor_value+1)^(0+256)+6),w
  9013     0F4A  0140               	movlb	0	; select bank0
  9014     0F4B  00A0               	movwf	i2c_slave_set_register@value
  9015     0F4C  3002               	movlw	2
  9016     0F4D  319E  260C  318C   	fcall	_i2c_slave_set_register
  9017     0F50                     l4873:
  9018                           
  9019                           ;main.c: 203: i2c_slave_set_register(0x03, (uint8_t)(sensor_value.temp_value >> 0) & 0xF
      +                          F);
  9020     0F50  0142               	movlb	2	; select bank2
  9021     0F51  082D               	movf	(main@sensor_value^(0+256)+6),w
  9022     0F52  0140               	movlb	0	; select bank0
  9023     0F53  00A0               	movwf	i2c_slave_set_register@value
  9024     0F54  3003               	movlw	3
  9025     0F55  319E  260C  318C   	fcall	_i2c_slave_set_register
  9026     0F58                     l4875:
  9027                           
  9028                           ;main.c: 204: Disable_Global_Interrupt();
  9029     0F58  319D  259B  318C   	fcall	_Disable_Global_Interrupt
  9030     0F5B                     l4877:
  9031     0F5B  0140               	movlb	0	; select bank0
  9032     0F5C  151A               	bsf	26,2	;volatile
  9033     0F5D                     l4879:
  9034                           
  9035                           ;main.c: 208: enable_uart_printf();
  9036     0F5D  319D  259D  318C   	fcall	_enable_uart_printf
  9037     0F60                     l4881:
  9038                           
  9039                           ;main.c: 209: dump_memory_map();
  9040     0F60  319D  25F8  318C   	fcall	_dump_memory_map
  9041     0F63                     l4883:
  9042                           
  9043                           ;main.c: 210: printf("[Rxbuf] PH: %u (0.01*unit)\r\n";main.c: 211: "TEMP: %u",;main.c: 2
      +                          13: sensor_value.ph_value,;main.c: 214: sensor_value.temp_value;main.c: 215: );
  9044     0F63  30D3               	movlw	low (STR_11| (0+32768))
  9045     0F64  0140               	movlb	0	; select bank0
  9046     0F65  00AE               	movwf	printf@f
  9047     0F66  3098               	movlw	high (STR_11| (0+32768))
  9048     0F67  00AF               	movwf	printf@f+1
  9049     0F68  0142               	movlb	2	; select bank2
  9050     0F69  0828               	movf	(main@sensor_value+1)^(0+256),w
  9051     0F6A  0140               	movlb	0	; select bank0
  9052     0F6B  00B1               	movwf	?_printf+3
  9053     0F6C  0142               	movlb	2	; select bank2
  9054     0F6D  0827               	movf	main@sensor_value^(0+256),w
  9055     0F6E  0140               	movlb	0	; select bank0
  9056     0F6F  00B0               	movwf	?_printf+2
  9057     0F70  0142               	movlb	2	; select bank2
  9058     0F71  082E               	movf	((main@sensor_value+1)^(0+256)+6),w
  9059     0F72  0140               	movlb	0	; select bank0
  9060     0F73  00B3               	movwf	?_printf+5
  9061     0F74  0142               	movlb	2	; select bank2
  9062     0F75  082D               	movf	(main@sensor_value^(0+256)+6),w
  9063     0F76  0140               	movlb	0	; select bank0
  9064     0F77  00B2               	movwf	?_printf+4
  9065     0F78  3180  20CE  318C   	fcall	_printf
  9066     0F7B                     l4885:
  9067                           
  9068                           ;main.c: 216: _delay((unsigned long)((10)*(1000000/4000.0)));
  9069     0F7B  3004               	movlw	4
  9070     0F7C  0141               	movlb	1	; select bank1
  9071     0F7D  00C0               	movwf	??_main^(0+128)
  9072     0F7E  303D               	movlw	61
  9073     0F7F                     u5247:
  9074     0F7F  0B89               	decfsz	9,f
  9075     0F80  2F7F               	goto	u5247
  9076     0F81  0BC0               	decfsz	??_main^(0+128),f
  9077     0F82  2F7F               	goto	u5247
  9078     0F83  3200               	nop2
  9079     0F84                     l4887:
  9080                           
  9081                           ;main.c: 217: enable_tx_transmit();
  9082     0F84  319E  2646  318C   	fcall	_enable_tx_transmit
  9083     0F87                     l4889:
  9084                           
  9085                           ;main.c: 218: };;main.c: 219: state = STATE_MEASURE;
  9086     0F87  3002               	movlw	2
  9087     0F88  0142               	movlb	2	; select bank2
  9088     0F89  00A6               	movwf	main@state^(0+256)
  9089                           
  9090                           ;main.c: 221: break;
  9091     0F8A  2FA6               	goto	l4895
  9092     0F8B                     l4893:
  9093     0F8B  0142               	movlb	2	; select bank2
  9094     0F8C  0826               	movf	main@state^(0+256),w
  9095                           
  9096                           ; Switch size 1, requested type "simple"
  9097                           ; Number of cases is 8, Range of values is 0 to 8
  9098                           ; switch strategies available:
  9099                           ; Name         Instructions Cycles
  9100                           ; direct_byte           24     6 (fixed)
  9101                           ; simple_byte           25    13 (average)
  9102                           ; jumptable            260     6 (fixed)
  9103                           ;	Chosen strategy is simple_byte
  9104     0F8D  3A00               	xorlw	0	; case 0
  9105     0F8E  1903               	skipnz
  9106     0F8F  2CCE               	goto	l4743
  9107     0F90  3A02               	xorlw	2	; case 2
  9108     0F91  1903               	skipnz
  9109     0F92  2CDF               	goto	l4745
  9110     0F93  3A01               	xorlw	1	; case 3
  9111     0F94  1903               	skipnz
  9112     0F95  2E40               	goto	l4791
  9113     0F96  3A07               	xorlw	7	; case 4
  9114     0F97  1903               	skipnz
  9115     0F98  2D98               	goto	l4767
  9116     0F99  3A01               	xorlw	1	; case 5
  9117     0F9A  1903               	skipnz
  9118     0F9B  2E8D               	goto	l4813
  9119     0F9C  3A03               	xorlw	3	; case 6
  9120     0F9D  1903               	skipnz
  9121     0F9E  2F07               	goto	l4847
  9122     0F9F  3A01               	xorlw	1	; case 7
  9123     0FA0  1903               	skipnz
  9124     0FA1  2E4E               	goto	l4793
  9125     0FA2  3A0F               	xorlw	15	; case 8
  9126     0FA3  1903               	skipnz
  9127     0FA4  2E6F               	goto	l4803
  9128     0FA5  2FA6               	goto	l4895
  9129     0FA6                     l4895:
  9130                           
  9131                           ;main.c: 227: now = get_ticks_with_lock();
  9132     0FA6  319E  269D  318C   	fcall	_get_ticks_with_lock
  9133     0FA9  0140               	movlb	0	; select bank0
  9134     0FAA  0823               	movf	?_get_ticks_with_lock+3,w
  9135     0FAB  0142               	movlb	2	; select bank2
  9136     0FAC  00A5               	movwf	(main@now+3)^(0+256)
  9137     0FAD  0140               	movlb	0	; select bank0
  9138     0FAE  0822               	movf	?_get_ticks_with_lock+2,w
  9139     0FAF  0142               	movlb	2	; select bank2
  9140     0FB0  00A4               	movwf	(main@now+2)^(0+256)
  9141     0FB1  0140               	movlb	0	; select bank0
  9142     0FB2  0821               	movf	?_get_ticks_with_lock+1,w
  9143     0FB3  0142               	movlb	2	; select bank2
  9144     0FB4  00A3               	movwf	(main@now+1)^(0+256)
  9145     0FB5  0140               	movlb	0	; select bank0
  9146     0FB6  0820               	movf	?_get_ticks_with_lock,w
  9147     0FB7  0142               	movlb	2	; select bank2
  9148     0FB8  00A2               	movwf	main@now^(0+256)
  9149     0FB9                     l4897:
  9150                           
  9151                           ;main.c: 228: static uint32_t prev_ticks2 = 0;;main.c: 229: if(calculate_diff(now, prev_
      +                          ticks2) >= 2000){
  9152     0FB9  0825               	movf	(main@now+3)^(0+256),w
  9153     0FBA  0140               	movlb	0	; select bank0
  9154     0FBB  00A3               	movwf	calculate_diff@now+3
  9155     0FBC  0142               	movlb	2	; select bank2
  9156     0FBD  0824               	movf	(main@now+2)^(0+256),w
  9157     0FBE  0140               	movlb	0	; select bank0
  9158     0FBF  00A2               	movwf	calculate_diff@now+2
  9159     0FC0  0142               	movlb	2	; select bank2
  9160     0FC1  0823               	movf	(main@now+1)^(0+256),w
  9161     0FC2  0140               	movlb	0	; select bank0
  9162     0FC3  00A1               	movwf	calculate_diff@now+1
  9163     0FC4  0142               	movlb	2	; select bank2
  9164     0FC5  0822               	movf	main@now^(0+256),w
  9165     0FC6  0140               	movlb	0	; select bank0
  9166     0FC7  00A0               	movwf	calculate_diff@now
  9167     0FC8  0141               	movlb	1	; select bank1
  9168     0FC9  084B               	movf	(main@prev_ticks2+3)^(0+128),w
  9169     0FCA  0140               	movlb	0	; select bank0
  9170     0FCB  00A7               	movwf	calculate_diff@prev_ticks+3
  9171     0FCC  0141               	movlb	1	; select bank1
  9172     0FCD  084A               	movf	(main@prev_ticks2+2)^(0+128),w
  9173     0FCE  0140               	movlb	0	; select bank0
  9174     0FCF  00A6               	movwf	calculate_diff@prev_ticks+2
  9175     0FD0  0141               	movlb	1	; select bank1
  9176     0FD1  0849               	movf	(main@prev_ticks2+1)^(0+128),w
  9177     0FD2  0140               	movlb	0	; select bank0
  9178     0FD3  00A5               	movwf	calculate_diff@prev_ticks+1
  9179     0FD4  0141               	movlb	1	; select bank1
  9180     0FD5  0848               	movf	main@prev_ticks2^(0+128),w
  9181     0FD6  0140               	movlb	0	; select bank0
  9182     0FD7  00A4               	movwf	calculate_diff@prev_ticks
  9183     0FD8  3192  22D2  318C   	fcall	_calculate_diff
  9184     0FDB  0140               	movlb	0	; select bank0
  9185     0FDC  0823               	movf	?_calculate_diff+3,w
  9186     0FDD  1D03               	btfss	3,2
  9187     0FDE  2FEA               	goto	u5020
  9188     0FDF  0822               	movf	?_calculate_diff+2,w
  9189     0FE0  1D03               	btfss	3,2
  9190     0FE1  2FEA               	goto	u5020
  9191     0FE2  30D0               	movlw	208
  9192     0FE3  0220               	subwf	?_calculate_diff,w
  9193     0FE4  3007               	movlw	7
  9194     0FE5  3B21               	subwfb	?_calculate_diff+1,w
  9195     0FE6  1C03               	btfss	3,0
  9196     0FE7  2FE9               	goto	u5021
  9197     0FE8  2FEA               	goto	u5020
  9198     0FE9                     u5021:
  9199     0FE9  2C55               	goto	l4731
  9200     0FEA                     u5020:
  9201     0FEA                     l4899:
  9202                           
  9203                           ;main.c: 230: prev_ticks2 = now;
  9204     0FEA  0142               	movlb	2	; select bank2
  9205     0FEB  0825               	movf	(main@now+3)^(0+256),w
  9206     0FEC  0141               	movlb	1	; select bank1
  9207     0FED  00CB               	movwf	(main@prev_ticks2+3)^(0+128)
  9208     0FEE  0142               	movlb	2	; select bank2
  9209     0FEF  0824               	movf	(main@now+2)^(0+256),w
  9210     0FF0  0141               	movlb	1	; select bank1
  9211     0FF1  00CA               	movwf	(main@prev_ticks2+2)^(0+128)
  9212     0FF2  0142               	movlb	2	; select bank2
  9213     0FF3  0823               	movf	(main@now+1)^(0+256),w
  9214     0FF4  0141               	movlb	1	; select bank1
  9215     0FF5  00C9               	movwf	(main@prev_ticks2+1)^(0+128)
  9216     0FF6  0142               	movlb	2	; select bank2
  9217     0FF7  0822               	movf	main@now^(0+256),w
  9218     0FF8  0141               	movlb	1	; select bank1
  9219     0FF9  00C8               	movwf	main@prev_ticks2^(0+128)
  9220     0FFA                     l4901:
  9221                           
  9222                           ;main.c: 231: set_device_serial_number_to_i2c_slave_memorymap();
  9223     0FFA  3191  2180  318C   	fcall	_set_device_serial_number_to_i2c_slave_memorymap
  9224     0FFD  2C55               	goto	l4731
  9225     0FFE  3180  2869         	ljmp	start
  9226     1000                     __end_of_main:
  9227                           
  9228                           	psect	text1
  9229     1E54                     __ptext1:	
  9230 ;; *************** function _usart_init *****************
  9231 ;; Defined at:
  9232 ;;		line 13 in file "uart.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;		None
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;		None
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  1    wreg      void 
  9239 ;; Registers used:
  9240 ;;		wreg, status,2
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;Total ram usage:        0 bytes
  9251 ;; Hardware stack levels used: 1
  9252 ;; Hardware stack levels required when called: 2
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_main
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260     1E54                     _usart_init:	
  9261                           ;psect for function _usart_init
  9262                           
  9263     1E54                     l4357:	
  9264                           ;incstack = 0
  9265                           ; Regs used in _usart_init: [wreg+status,2]
  9266                           
  9267                           
  9268                           ;uart.c: 14: PIE3bits.RC1IE = 0;
  9269     1E54  014E               	movlb	14	; select bank14
  9270     1E55  1299               	bcf	25,5	;volatile
  9271                           
  9272                           ;uart.c: 15: PIE3bits.TX1IE = 0;
  9273     1E56  1219               	bcf	25,4	;volatile
  9274     1E57                     l4359:
  9275                           
  9276                           ;uart.c: 18: BAUD1CON = 0x08;
  9277     1E57  3008               	movlw	8
  9278     1E58  0142               	movlb	2	; select bank2
  9279     1E59  009F               	movwf	31	;volatile
  9280                           
  9281                           ;uart.c: 19: SP1BRGL = 0x19;
  9282     1E5A  3019               	movlw	25
  9283     1E5B  009B               	movwf	27	;volatile
  9284     1E5C                     l4361:
  9285                           
  9286                           ;uart.c: 20: SP1BRGH = 0x00;
  9287     1E5C  019C               	clrf	28	;volatile
  9288     1E5D                     l4363:
  9289                           
  9290                           ;uart.c: 22: TX1STA = 0x24;
  9291     1E5D  3024               	movlw	36
  9292     1E5E  009E               	movwf	30	;volatile
  9293     1E5F                     l4365:
  9294                           
  9295                           ;uart.c: 23: RC1STA = 0x90;
  9296     1E5F  3090               	movlw	144
  9297     1E60  009D               	movwf	29	;volatile
  9298     1E61                     l4367:
  9299                           
  9300                           ;uart.c: 25: PIE3bits.RC1IE = 1;
  9301     1E61  014E               	movlb	14	; select bank14
  9302     1E62  1699               	bsf	25,5	;volatile
  9303     1E63                     l467:
  9304     1E63  0008               	return
  9305     1E64                     __end_of_usart_init:
  9306                           
  9307                           	psect	text2
  9308     164C                     __ptext2:	
  9309 ;; *************** function _update_mybutton *****************
  9310 ;; Defined at:
  9311 ;;		line 100 in file "mybutton.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  b               1    wreg     PTR struct mybutton
  9314 ;;		 -> main@b2(27), main@b1(27), 
  9315 ;;  signal          1   17[BANK0 ] unsigned char 
  9316 ;;  now             4   18[BANK0 ] unsigned long 
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;  b               1   26[BANK0 ] PTR struct mybutton
  9319 ;;		 -> main@b2(27), main@b1(27), 
  9320 ;; Return value:  Size  Location     Type
  9321 ;;                  1    wreg      void 
  9322 ;; Registers used:
  9323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9324 ;; Tracked objects:
  9325 ;;		On entry : 0/0
  9326 ;;		On exit  : 0/0
  9327 ;;		Unchanged: 0/0
  9328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9329 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;Total ram usage:       10 bytes
  9334 ;; Hardware stack levels used: 1
  9335 ;; Hardware stack levels required when called: 3
  9336 ;; This function calls:
  9337 ;;		___is_double_click
  9338 ;;		___is_long_press
  9339 ;;		___is_single_click
  9340 ;; This function is called by:
  9341 ;;		_main
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345     164C                     _update_mybutton:	
  9346                           ;psect for function _update_mybutton
  9347                           
  9348                           
  9349                           ;incstack = 0
  9350                           ; Regs used in _update_mybutton: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9351                           ;update_mybutton@b stored from wreg
  9352     164C  0140               	movlb	0	; select bank0
  9353     164D  00BA               	movwf	update_mybutton@b
  9354     164E                     l4429:
  9355                           
  9356                           ;mybutton.c: 102: b->signals[0] = b->signals[1];
  9357     164E  083A               	movf	update_mybutton@b,w
  9358     164F  0086               	movwf	6
  9359     1650  3001               	movlw	1	; select bank2/3
  9360     1651  0087               	movwf	7
  9361     1652  0A3A               	incf	update_mybutton@b,w
  9362     1653  0084               	movwf	4
  9363     1654  3001               	movlw	1	; select bank2/3
  9364     1655  0085               	movwf	5
  9365     1656  0800               	movf	0,w
  9366     1657  0081               	movwf	1
  9367     1658                     l4431:
  9368                           
  9369                           ;mybutton.c: 103: b->signals[1] = signal;
  9370     1658  0A3A               	incf	update_mybutton@b,w
  9371     1659  0086               	movwf	6
  9372     165A  3001               	movlw	1	; select bank2/3
  9373     165B  0087               	movwf	7
  9374     165C  0831               	movf	update_mybutton@signal,w
  9375     165D  0081               	movwf	1
  9376     165E                     l4433:
  9377                           
  9378                           ;mybutton.c: 105: if( 1 == b->signals[0] && 0 == b->signals[1] ){
  9379     165E  083A               	movf	update_mybutton@b,w
  9380     165F  0086               	movwf	6
  9381     1660  3001               	movlw	1	; select bank2/3
  9382     1661  0087               	movwf	7
  9383     1662  0301               	decf	1,w
  9384     1663  1D03               	btfss	3,2
  9385     1664  2E66               	goto	u4641
  9386     1665  2E67               	goto	u4640
  9387     1666                     u4641:
  9388     1666  2E97               	goto	l387
  9389     1667                     u4640:
  9390     1667                     l4435:
  9391     1667  0A3A               	incf	update_mybutton@b,w
  9392     1668  0086               	movwf	6
  9393     1669  3001               	movlw	1	; select bank2/3
  9394     166A  0087               	movwf	7
  9395     166B  0801               	movf	1,w
  9396     166C  1D03               	btfss	3,2
  9397     166D  2E6F               	goto	u4651
  9398     166E  2E70               	goto	u4650
  9399     166F                     u4651:
  9400     166F  2E97               	goto	l387
  9401     1670                     u4650:
  9402     1670                     l4437:
  9403                           
  9404                           ;mybutton.c: 106: b->falling_ts[0] = b->falling_ts[1];
  9405     1670  083A               	movf	update_mybutton@b,w
  9406     1671  3E06               	addlw	6
  9407     1672  0086               	movwf	6
  9408     1673  3001               	movlw	1	; select bank2/3
  9409     1674  0087               	movwf	7
  9410     1675  3F40               	moviw [0]fsr1
  9411     1676  00B6               	movwf	??_update_mybutton
  9412     1677  3F41               	moviw [1]fsr1
  9413     1678  00B7               	movwf	??_update_mybutton+1
  9414     1679  3F42               	moviw [2]fsr1
  9415     167A  00B8               	movwf	??_update_mybutton+2
  9416     167B  3F43               	moviw [3]fsr1
  9417     167C  00B9               	movwf	??_update_mybutton+3
  9418     167D  083A               	movf	update_mybutton@b,w
  9419     167E  3E02               	addlw	2
  9420     167F  0086               	movwf	6
  9421     1680  3001               	movlw	1	; select bank2/3
  9422     1681  0087               	movwf	7
  9423     1682  0836               	movf	??_update_mybutton,w
  9424     1683  3FC0               	movwi [0]fsr1
  9425     1684  0837               	movf	??_update_mybutton+1,w
  9426     1685  3FC1               	movwi [1]fsr1
  9427     1686  0838               	movf	??_update_mybutton+2,w
  9428     1687  3FC2               	movwi [2]fsr1
  9429     1688  0839               	movf	??_update_mybutton+3,w
  9430     1689  3FC3               	movwi [3]fsr1
  9431                           
  9432                           ;mybutton.c: 107: b->falling_ts[1] = now;
  9433     168A  083A               	movf	update_mybutton@b,w
  9434     168B  3E06               	addlw	6
  9435     168C  0086               	movwf	6
  9436     168D  3001               	movlw	1	; select bank2/3
  9437     168E  0087               	movwf	7
  9438     168F  0832               	movf	update_mybutton@now,w
  9439     1690  3FC0               	movwi [0]fsr1
  9440     1691  0833               	movf	update_mybutton@now+1,w
  9441     1692  3FC1               	movwi [1]fsr1
  9442     1693  0834               	movf	update_mybutton@now+2,w
  9443     1694  3FC2               	movwi [2]fsr1
  9444     1695  0835               	movf	update_mybutton@now+3,w
  9445     1696  3FC3               	movwi [3]fsr1
  9446     1697                     l387:
  9447                           
  9448                           ;mybutton.c: 108: };mybutton.c: 110: if( 0 == b->signals[0] && 1 == b->signals[1] ){
  9449     1697  083A               	movf	update_mybutton@b,w
  9450     1698  0086               	movwf	6
  9451     1699  3001               	movlw	1	; select bank2/3
  9452     169A  0087               	movwf	7
  9453     169B  0801               	movf	1,w
  9454     169C  1D03               	btfss	3,2
  9455     169D  2E9F               	goto	u4661
  9456     169E  2EA0               	goto	u4660
  9457     169F                     u4661:
  9458     169F  2ED0               	goto	l4443
  9459     16A0                     u4660:
  9460     16A0                     l4439:
  9461     16A0  0A3A               	incf	update_mybutton@b,w
  9462     16A1  0086               	movwf	6
  9463     16A2  3001               	movlw	1	; select bank2/3
  9464     16A3  0087               	movwf	7
  9465     16A4  0301               	decf	1,w
  9466     16A5  1D03               	btfss	3,2
  9467     16A6  2EA8               	goto	u4671
  9468     16A7  2EA9               	goto	u4670
  9469     16A8                     u4671:
  9470     16A8  2ED0               	goto	l4443
  9471     16A9                     u4670:
  9472     16A9                     l4441:
  9473                           
  9474                           ;mybutton.c: 111: b->rising_ts[0] = b->rising_ts[1];
  9475     16A9  083A               	movf	update_mybutton@b,w
  9476     16AA  3E0E               	addlw	14
  9477     16AB  0086               	movwf	6
  9478     16AC  3001               	movlw	1	; select bank2/3
  9479     16AD  0087               	movwf	7
  9480     16AE  3F40               	moviw [0]fsr1
  9481     16AF  00B6               	movwf	??_update_mybutton
  9482     16B0  3F41               	moviw [1]fsr1
  9483     16B1  00B7               	movwf	??_update_mybutton+1
  9484     16B2  3F42               	moviw [2]fsr1
  9485     16B3  00B8               	movwf	??_update_mybutton+2
  9486     16B4  3F43               	moviw [3]fsr1
  9487     16B5  00B9               	movwf	??_update_mybutton+3
  9488     16B6  083A               	movf	update_mybutton@b,w
  9489     16B7  3E0A               	addlw	10
  9490     16B8  0086               	movwf	6
  9491     16B9  3001               	movlw	1	; select bank2/3
  9492     16BA  0087               	movwf	7
  9493     16BB  0836               	movf	??_update_mybutton,w
  9494     16BC  3FC0               	movwi [0]fsr1
  9495     16BD  0837               	movf	??_update_mybutton+1,w
  9496     16BE  3FC1               	movwi [1]fsr1
  9497     16BF  0838               	movf	??_update_mybutton+2,w
  9498     16C0  3FC2               	movwi [2]fsr1
  9499     16C1  0839               	movf	??_update_mybutton+3,w
  9500     16C2  3FC3               	movwi [3]fsr1
  9501                           
  9502                           ;mybutton.c: 112: b->rising_ts[1] = now;
  9503     16C3  083A               	movf	update_mybutton@b,w
  9504     16C4  3E0E               	addlw	14
  9505     16C5  0086               	movwf	6
  9506     16C6  3001               	movlw	1	; select bank2/3
  9507     16C7  0087               	movwf	7
  9508     16C8  0832               	movf	update_mybutton@now,w
  9509     16C9  3FC0               	movwi [0]fsr1
  9510     16CA  0833               	movf	update_mybutton@now+1,w
  9511     16CB  3FC1               	movwi [1]fsr1
  9512     16CC  0834               	movf	update_mybutton@now+2,w
  9513     16CD  3FC2               	movwi [2]fsr1
  9514     16CE  0835               	movf	update_mybutton@now+3,w
  9515     16CF  3FC3               	movwi [3]fsr1
  9516     16D0                     l4443:
  9517                           
  9518                           ;mybutton.c: 113: };mybutton.c: 115: if( __is_single_click(b, now) ){
  9519     16D0  0835               	movf	update_mybutton@now+3,w
  9520     16D1  00A3               	movwf	___is_single_click@now+3
  9521     16D2  0834               	movf	update_mybutton@now+2,w
  9522     16D3  00A2               	movwf	___is_single_click@now+2
  9523     16D4  0833               	movf	update_mybutton@now+1,w
  9524     16D5  00A1               	movwf	___is_single_click@now+1
  9525     16D6  0832               	movf	update_mybutton@now,w
  9526     16D7  00A0               	movwf	___is_single_click@now
  9527     16D8  083A               	movf	update_mybutton@b,w
  9528     16D9  3188  20BE  3196   	fcall	___is_single_click
  9529     16DC  3A00               	xorlw	0
  9530     16DD  1903               	skipnz
  9531     16DE  2EE0               	goto	u4681
  9532     16DF  2EE1               	goto	u4680
  9533     16E0                     u4681:
  9534     16E0  2EE9               	goto	l4447
  9535     16E1                     u4680:
  9536     16E1                     l4445:
  9537                           
  9538                           ;mybutton.c: 116: b->single_clicked_flag = 1;
  9539     16E1  0140               	movlb	0	; select bank0
  9540     16E2  083A               	movf	update_mybutton@b,w
  9541     16E3  3E18               	addlw	24
  9542     16E4  0086               	movwf	6
  9543     16E5  3001               	movlw	1	; select bank2/3
  9544     16E6  0087               	movwf	7
  9545     16E7  0181               	clrf	1
  9546     16E8  0A81               	incf	1,f
  9547     16E9                     l4447:
  9548                           
  9549                           ;mybutton.c: 117: };mybutton.c: 119: if( __is_double_click(b, now) ){
  9550     16E9  0140               	movlb	0	; select bank0
  9551     16EA  0835               	movf	update_mybutton@now+3,w
  9552     16EB  00A3               	movwf	___is_double_click@now+3
  9553     16EC  0834               	movf	update_mybutton@now+2,w
  9554     16ED  00A2               	movwf	___is_double_click@now+2
  9555     16EE  0833               	movf	update_mybutton@now+1,w
  9556     16EF  00A1               	movwf	___is_double_click@now+1
  9557     16F0  0832               	movf	update_mybutton@now,w
  9558     16F1  00A0               	movwf	___is_double_click@now
  9559     16F2  083A               	movf	update_mybutton@b,w
  9560     16F3  3197  271E  3196   	fcall	___is_double_click
  9561     16F6  3A00               	xorlw	0
  9562     16F7  1903               	skipnz
  9563     16F8  2EFA               	goto	u4691
  9564     16F9  2EFB               	goto	u4690
  9565     16FA                     u4691:
  9566     16FA  2F03               	goto	l4451
  9567     16FB                     u4690:
  9568     16FB                     l4449:
  9569                           
  9570                           ;mybutton.c: 120: b->double_clicked_flag = 1;
  9571     16FB  0140               	movlb	0	; select bank0
  9572     16FC  083A               	movf	update_mybutton@b,w
  9573     16FD  3E19               	addlw	25
  9574     16FE  0086               	movwf	6
  9575     16FF  3001               	movlw	1	; select bank2/3
  9576     1700  0087               	movwf	7
  9577     1701  0181               	clrf	1
  9578     1702  0A81               	incf	1,f
  9579     1703                     l4451:
  9580                           
  9581                           ;mybutton.c: 121: };mybutton.c: 123: if( __is_long_press(b, now) ){
  9582     1703  0140               	movlb	0	; select bank0
  9583     1704  0835               	movf	update_mybutton@now+3,w
  9584     1705  00A3               	movwf	___is_long_press@now+3
  9585     1706  0834               	movf	update_mybutton@now+2,w
  9586     1707  00A2               	movwf	___is_long_press@now+2
  9587     1708  0833               	movf	update_mybutton@now+1,w
  9588     1709  00A1               	movwf	___is_long_press@now+1
  9589     170A  0832               	movf	update_mybutton@now,w
  9590     170B  00A0               	movwf	___is_long_press@now
  9591     170C  083A               	movf	update_mybutton@b,w
  9592     170D  3188  2016  3196   	fcall	___is_long_press
  9593     1710  3A00               	xorlw	0
  9594     1711  1903               	skipnz
  9595     1712  2F14               	goto	u4701
  9596     1713  2F15               	goto	u4700
  9597     1714                     u4701:
  9598     1714  2F1D               	goto	l392
  9599     1715                     u4700:
  9600     1715                     l4453:
  9601                           
  9602                           ;mybutton.c: 124: b->long_press_flag = 1;
  9603     1715  0140               	movlb	0	; select bank0
  9604     1716  083A               	movf	update_mybutton@b,w
  9605     1717  3E1A               	addlw	26
  9606     1718  0086               	movwf	6
  9607     1719  3001               	movlw	1	; select bank2/3
  9608     171A  0087               	movwf	7
  9609     171B  0181               	clrf	1
  9610     171C  0A81               	incf	1,f
  9611     171D                     l392:
  9612     171D  0008               	return
  9613     171E                     __end_of_update_mybutton:
  9614                           
  9615                           	psect	text3
  9616     08BE                     __ptext3:	
  9617 ;; *************** function ___is_single_click *****************
  9618 ;; Defined at:
  9619 ;;		line 37 in file "mybutton.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  b               1    wreg     PTR struct mybutton
  9622 ;;		 -> main@b2(27), main@b1(27), 
  9623 ;;  now             4    0[BANK0 ] unsigned long 
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;  b               1   16[BANK0 ] PTR struct mybutton
  9626 ;;		 -> main@b2(27), main@b1(27), 
  9627 ;;  condition4      1   15[BANK0 ] unsigned char 
  9628 ;;  condition3      1   14[BANK0 ] unsigned char 
  9629 ;;  condition2      1   13[BANK0 ] unsigned char 
  9630 ;;  condition1      1   12[BANK0 ] unsigned char 
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  1    wreg      unsigned char 
  9633 ;; Registers used:
  9634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9640 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9643 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9644 ;;Total ram usage:       17 bytes
  9645 ;; Hardware stack levels used: 1
  9646 ;; Hardware stack levels required when called: 2
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		_update_mybutton
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654     08BE                     ___is_single_click:	
  9655                           ;psect for function ___is_single_click
  9656                           
  9657                           
  9658                           ;incstack = 0
  9659                           ; Regs used in ___is_single_click: [wreg-fsr1h+status,2+status,0]
  9660                           ;___is_single_click@b stored from wreg
  9661     08BE  0140               	movlb	0	; select bank0
  9662     08BF  00B0               	movwf	___is_single_click@b
  9663     08C0                     l3965:
  9664                           
  9665                           ;mybutton.c: 39: bool condition1 = (b->rising_ts[1] > b->falling_ts[1]);
  9666     08C0  0830               	movf	___is_single_click@b,w
  9667     08C1  3E0E               	addlw	14
  9668     08C2  0086               	movwf	6
  9669     08C3  3001               	movlw	1	; select bank2/3
  9670     08C4  0087               	movwf	7
  9671     08C5  3F40               	moviw [0]fsr1
  9672     08C6  00A4               	movwf	??___is_single_click
  9673     08C7  3F41               	moviw [1]fsr1
  9674     08C8  00A5               	movwf	??___is_single_click+1
  9675     08C9  3F42               	moviw [2]fsr1
  9676     08CA  00A6               	movwf	??___is_single_click+2
  9677     08CB  3F43               	moviw [3]fsr1
  9678     08CC  00A7               	movwf	??___is_single_click+3
  9679     08CD  0830               	movf	___is_single_click@b,w
  9680     08CE  3E06               	addlw	6
  9681     08CF  0086               	movwf	6
  9682     08D0  3001               	movlw	1	; select bank2/3
  9683     08D1  0087               	movwf	7
  9684     08D2  3F40               	moviw [0]fsr1
  9685     08D3  00A8               	movwf	??___is_single_click+4
  9686     08D4  3F41               	moviw [1]fsr1
  9687     08D5  00A9               	movwf	??___is_single_click+5
  9688     08D6  3F42               	moviw [2]fsr1
  9689     08D7  00AA               	movwf	??___is_single_click+6
  9690     08D8  3F43               	moviw [3]fsr1
  9691     08D9  00AB               	movwf	??___is_single_click+7
  9692     08DA  0827               	movf	??___is_single_click+3,w
  9693     08DB  022B               	subwf	??___is_single_click+7,w
  9694     08DC  1D03               	skipz
  9695     08DD  28E8               	goto	u3775
  9696     08DE  0826               	movf	??___is_single_click+2,w
  9697     08DF  022A               	subwf	??___is_single_click+6,w
  9698     08E0  1D03               	skipz
  9699     08E1  28E8               	goto	u3775
  9700     08E2  0825               	movf	??___is_single_click+1,w
  9701     08E3  0229               	subwf	??___is_single_click+5,w
  9702     08E4  1D03               	skipz
  9703     08E5  28E8               	goto	u3775
  9704     08E6  0824               	movf	??___is_single_click,w
  9705     08E7  0228               	subwf	??___is_single_click+4,w
  9706     08E8                     u3775:
  9707     08E8  1C03               	skipc
  9708     08E9  28EB               	goto	u3771
  9709     08EA  28ED               	goto	u3770
  9710     08EB                     u3771:
  9711     08EB  3001               	movlw	1
  9712     08EC  28EE               	goto	u3780
  9713     08ED                     u3770:
  9714     08ED  3000               	movlw	0
  9715     08EE                     u3780:
  9716     08EE  00AC               	movwf	___is_single_click@condition1
  9717                           
  9718                           ;mybutton.c: 40: bool condition2 = (now - b->rising_ts[1] > 200);
  9719     08EF  0830               	movf	___is_single_click@b,w
  9720     08F0  3E0E               	addlw	14
  9721     08F1  0086               	movwf	6
  9722     08F2  3001               	movlw	1	; select bank2/3
  9723     08F3  0087               	movwf	7
  9724     08F4  3F40               	moviw [0]fsr1
  9725     08F5  00A4               	movwf	??___is_single_click
  9726     08F6  3F41               	moviw [1]fsr1
  9727     08F7  00A5               	movwf	??___is_single_click+1
  9728     08F8  3F42               	moviw [2]fsr1
  9729     08F9  00A6               	movwf	??___is_single_click+2
  9730     08FA  3F43               	moviw [3]fsr1
  9731     08FB  00A7               	movwf	??___is_single_click+3
  9732     08FC  0820               	movf	___is_single_click@now,w
  9733     08FD  00A8               	movwf	??___is_single_click+4
  9734     08FE  0821               	movf	___is_single_click@now+1,w
  9735     08FF  00A9               	movwf	??___is_single_click+5
  9736     0900  0822               	movf	___is_single_click@now+2,w
  9737     0901  00AA               	movwf	??___is_single_click+6
  9738     0902  0823               	movf	___is_single_click@now+3,w
  9739     0903  00AB               	movwf	??___is_single_click+7
  9740     0904  0824               	movf	??___is_single_click,w
  9741     0905  02A8               	subwf	??___is_single_click+4,f
  9742     0906  0825               	movf	??___is_single_click+1,w
  9743     0907  3BA9               	subwfb	??___is_single_click+5,f
  9744     0908  0826               	movf	??___is_single_click+2,w
  9745     0909  3BAA               	subwfb	??___is_single_click+6,f
  9746     090A  0827               	movf	??___is_single_click+3,w
  9747     090B  3BAB               	subwfb	??___is_single_click+7,f
  9748     090C  082B               	movf	??___is_single_click+7,w
  9749     090D  1D03               	btfss	3,2
  9750     090E  291A               	goto	u3791
  9751     090F  082A               	movf	??___is_single_click+6,w
  9752     0910  1D03               	btfss	3,2
  9753     0911  291A               	goto	u3791
  9754     0912  0829               	movf	??___is_single_click+5,w
  9755     0913  1D03               	btfss	3,2
  9756     0914  291A               	goto	u3791
  9757     0915  30C9               	movlw	201
  9758     0916  0228               	subwf	??___is_single_click+4,w
  9759     0917  1803               	btfsc	3,0
  9760     0918  291A               	goto	u3791
  9761     0919  291C               	goto	u3790
  9762     091A                     u3791:
  9763     091A  3001               	movlw	1
  9764     091B  291D               	goto	u3800
  9765     091C                     u3790:
  9766     091C  3000               	movlw	0
  9767     091D                     u3800:
  9768     091D  0140               	movlb	0	; select bank0
  9769     091E  00AD               	movwf	___is_single_click@condition2
  9770                           
  9771                           ;mybutton.c: 41: bool condition3 = (b->rising_ts[1] - b->rising_ts[0] > 500);
  9772     091F  0830               	movf	___is_single_click@b,w
  9773     0920  3E0A               	addlw	10
  9774     0921  0086               	movwf	6
  9775     0922  3001               	movlw	1	; select bank2/3
  9776     0923  0087               	movwf	7
  9777     0924  3F40               	moviw [0]fsr1
  9778     0925  00A4               	movwf	??___is_single_click
  9779     0926  3F41               	moviw [1]fsr1
  9780     0927  00A5               	movwf	??___is_single_click+1
  9781     0928  3F42               	moviw [2]fsr1
  9782     0929  00A6               	movwf	??___is_single_click+2
  9783     092A  3F43               	moviw [3]fsr1
  9784     092B  00A7               	movwf	??___is_single_click+3
  9785     092C  0830               	movf	___is_single_click@b,w
  9786     092D  3E0E               	addlw	14
  9787     092E  0086               	movwf	6
  9788     092F  3001               	movlw	1	; select bank2/3
  9789     0930  0087               	movwf	7
  9790     0931  3F40               	moviw [0]fsr1
  9791     0932  00A8               	movwf	??___is_single_click+4
  9792     0933  3F41               	moviw [1]fsr1
  9793     0934  00A9               	movwf	??___is_single_click+5
  9794     0935  3F42               	moviw [2]fsr1
  9795     0936  00AA               	movwf	??___is_single_click+6
  9796     0937  3F43               	moviw [3]fsr1
  9797     0938  00AB               	movwf	??___is_single_click+7
  9798     0939  0824               	movf	??___is_single_click,w
  9799     093A  02A8               	subwf	??___is_single_click+4,f
  9800     093B  0825               	movf	??___is_single_click+1,w
  9801     093C  3BA9               	subwfb	??___is_single_click+5,f
  9802     093D  0826               	movf	??___is_single_click+2,w
  9803     093E  3BAA               	subwfb	??___is_single_click+6,f
  9804     093F  0827               	movf	??___is_single_click+3,w
  9805     0940  3BAB               	subwfb	??___is_single_click+7,f
  9806     0941  082B               	movf	??___is_single_click+7,w
  9807     0942  1D03               	btfss	3,2
  9808     0943  294E               	goto	u3811
  9809     0944  082A               	movf	??___is_single_click+6,w
  9810     0945  1D03               	btfss	3,2
  9811     0946  294E               	goto	u3811
  9812     0947  30F5               	movlw	245
  9813     0948  0228               	subwf	??___is_single_click+4,w
  9814     0949  3001               	movlw	1
  9815     094A  3B29               	subwfb	??___is_single_click+5,w
  9816     094B  1803               	btfsc	3,0
  9817     094C  294E               	goto	u3811
  9818     094D  2950               	goto	u3810
  9819     094E                     u3811:
  9820     094E  3001               	movlw	1
  9821     094F  2951               	goto	u3820
  9822     0950                     u3810:
  9823     0950  3000               	movlw	0
  9824     0951                     u3820:
  9825     0951  0140               	movlb	0	; select bank0
  9826     0952  00AE               	movwf	___is_single_click@condition3
  9827                           
  9828                           ;mybutton.c: 42: bool condition4 = (now - b->falling_ts[1] < 4000);
  9829     0953  0830               	movf	___is_single_click@b,w
  9830     0954  3E06               	addlw	6
  9831     0955  0086               	movwf	6
  9832     0956  3001               	movlw	1	; select bank2/3
  9833     0957  0087               	movwf	7
  9834     0958  3F40               	moviw [0]fsr1
  9835     0959  00A4               	movwf	??___is_single_click
  9836     095A  3F41               	moviw [1]fsr1
  9837     095B  00A5               	movwf	??___is_single_click+1
  9838     095C  3F42               	moviw [2]fsr1
  9839     095D  00A6               	movwf	??___is_single_click+2
  9840     095E  3F43               	moviw [3]fsr1
  9841     095F  00A7               	movwf	??___is_single_click+3
  9842     0960  0820               	movf	___is_single_click@now,w
  9843     0961  00A8               	movwf	??___is_single_click+4
  9844     0962  0821               	movf	___is_single_click@now+1,w
  9845     0963  00A9               	movwf	??___is_single_click+5
  9846     0964  0822               	movf	___is_single_click@now+2,w
  9847     0965  00AA               	movwf	??___is_single_click+6
  9848     0966  0823               	movf	___is_single_click@now+3,w
  9849     0967  00AB               	movwf	??___is_single_click+7
  9850     0968  0824               	movf	??___is_single_click,w
  9851     0969  02A8               	subwf	??___is_single_click+4,f
  9852     096A  0825               	movf	??___is_single_click+1,w
  9853     096B  3BA9               	subwfb	??___is_single_click+5,f
  9854     096C  0826               	movf	??___is_single_click+2,w
  9855     096D  3BAA               	subwfb	??___is_single_click+6,f
  9856     096E  0827               	movf	??___is_single_click+3,w
  9857     096F  3BAB               	subwfb	??___is_single_click+7,f
  9858     0970  082B               	movf	??___is_single_click+7,w
  9859     0971  1D03               	btfss	3,2
  9860     0972  297F               	goto	u3830
  9861     0973  082A               	movf	??___is_single_click+6,w
  9862     0974  1D03               	btfss	3,2
  9863     0975  297F               	goto	u3830
  9864     0976  30A0               	movlw	160
  9865     0977  0228               	subwf	??___is_single_click+4,w
  9866     0978  300F               	movlw	15
  9867     0979  3B29               	subwfb	??___is_single_click+5,w
  9868     097A  1C03               	btfss	3,0
  9869     097B  297D               	goto	u3831
  9870     097C  297F               	goto	u3830
  9871     097D                     u3831:
  9872     097D  3001               	movlw	1
  9873     097E  2980               	goto	u3840
  9874     097F                     u3830:
  9875     097F  3000               	movlw	0
  9876     0980                     u3840:
  9877     0980  0140               	movlb	0	; select bank0
  9878     0981  00AF               	movwf	___is_single_click@condition4
  9879     0982                     l3967:
  9880                           
  9881                           ;mybutton.c: 44: if (condition1 && condition2 && condition3 && condition4){
  9882     0982  082C               	movf	___is_single_click@condition1,w
  9883     0983  1903               	btfsc	3,2
  9884     0984  2986               	goto	u3851
  9885     0985  2987               	goto	u3850
  9886     0986                     u3851:
  9887     0986  29AA               	goto	l3979
  9888     0987                     u3850:
  9889     0987                     l3969:
  9890     0987  082D               	movf	___is_single_click@condition2,w
  9891     0988  1903               	btfsc	3,2
  9892     0989  298B               	goto	u3861
  9893     098A  298C               	goto	u3860
  9894     098B                     u3861:
  9895     098B  29AA               	goto	l3979
  9896     098C                     u3860:
  9897     098C                     l3971:
  9898     098C  082E               	movf	___is_single_click@condition3,w
  9899     098D  1903               	btfsc	3,2
  9900     098E  2990               	goto	u3871
  9901     098F  2991               	goto	u3870
  9902     0990                     u3871:
  9903     0990  29AA               	goto	l3979
  9904     0991                     u3870:
  9905     0991                     l3973:
  9906     0991  082F               	movf	___is_single_click@condition4,w
  9907     0992  1903               	btfsc	3,2
  9908     0993  2995               	goto	u3881
  9909     0994  2996               	goto	u3880
  9910     0995                     u3881:
  9911     0995  29AA               	goto	l3979
  9912     0996                     u3880:
  9913     0996                     l3975:
  9914                           
  9915                           ;mybutton.c: 45: b->single_click_tmps[0] = b->single_click_tmps[1];
  9916     0996  0830               	movf	___is_single_click@b,w
  9917     0997  3E12               	addlw	18
  9918     0998  0086               	movwf	6
  9919     0999  3001               	movlw	1	; select bank2/3
  9920     099A  0087               	movwf	7
  9921     099B  0830               	movf	___is_single_click@b,w
  9922     099C  3E13               	addlw	19
  9923     099D  0084               	movwf	4
  9924     099E  3001               	movlw	1	; select bank2/3
  9925     099F  0085               	movwf	5
  9926     09A0  0800               	movf	0,w
  9927     09A1  0081               	movwf	1
  9928     09A2                     l3977:
  9929                           
  9930                           ;mybutton.c: 46: b->single_click_tmps[1] = 1;
  9931     09A2  0830               	movf	___is_single_click@b,w
  9932     09A3  3E13               	addlw	19
  9933     09A4  0086               	movwf	6
  9934     09A5  3001               	movlw	1	; select bank2/3
  9935     09A6  0087               	movwf	7
  9936     09A7  0181               	clrf	1
  9937     09A8  0A81               	incf	1,f
  9938                           
  9939                           ;mybutton.c: 47: }else{
  9940     09A9  29BC               	goto	l3983
  9941     09AA                     l3979:
  9942                           
  9943                           ;mybutton.c: 48: b->single_click_tmps[0] = b->single_click_tmps[1];
  9944     09AA  0830               	movf	___is_single_click@b,w
  9945     09AB  3E12               	addlw	18
  9946     09AC  0086               	movwf	6
  9947     09AD  3001               	movlw	1	; select bank2/3
  9948     09AE  0087               	movwf	7
  9949     09AF  0830               	movf	___is_single_click@b,w
  9950     09B0  3E13               	addlw	19
  9951     09B1  0084               	movwf	4
  9952     09B2  3001               	movlw	1	; select bank2/3
  9953     09B3  0085               	movwf	5
  9954     09B4  0800               	movf	0,w
  9955     09B5  0081               	movwf	1
  9956     09B6                     l3981:
  9957                           
  9958                           ;mybutton.c: 49: b->single_click_tmps[1] = 0;
  9959     09B6  0830               	movf	___is_single_click@b,w
  9960     09B7  3E13               	addlw	19
  9961     09B8  0086               	movwf	6
  9962     09B9  3001               	movlw	1	; select bank2/3
  9963     09BA  0087               	movwf	7
  9964     09BB  0181               	clrf	1
  9965     09BC                     l3983:
  9966                           
  9967                           ;mybutton.c: 50: };mybutton.c: 52: if(0 == b->single_click_tmps[0] && 1 == b->single_cli
      +                          ck_tmps[1]){
  9968     09BC  0830               	movf	___is_single_click@b,w
  9969     09BD  3E12               	addlw	18
  9970     09BE  0086               	movwf	6
  9971     09BF  3001               	movlw	1	; select bank2/3
  9972     09C0  0087               	movwf	7
  9973     09C1  0801               	movf	1,w
  9974     09C2  1D03               	btfss	3,2
  9975     09C3  29C5               	goto	u3891
  9976     09C4  29C6               	goto	u3890
  9977     09C5                     u3891:
  9978     09C5  29D2               	goto	l3991
  9979     09C6                     u3890:
  9980     09C6                     l3985:
  9981     09C6  0830               	movf	___is_single_click@b,w
  9982     09C7  3E13               	addlw	19
  9983     09C8  0086               	movwf	6
  9984     09C9  3001               	movlw	1	; select bank2/3
  9985     09CA  0087               	movwf	7
  9986     09CB  0301               	decf	1,w
  9987     09CC  1D03               	btfss	3,2
  9988     09CD  29CF               	goto	u3901
  9989     09CE  29D0               	goto	u3900
  9990     09CF                     u3901:
  9991     09CF  29D2               	goto	l3991
  9992     09D0                     u3900:
  9993     09D0                     l3987:
  9994                           
  9995                           ;mybutton.c: 53: return 1;
  9996     09D0  3001               	movlw	1
  9997     09D1  29D3               	goto	l372
  9998     09D2                     l3991:
  9999                           
 10000                           ;mybutton.c: 54: };mybutton.c: 55: return 0;
 10001     09D2  3000               	movlw	0
 10002     09D3                     l372:
 10003     09D3  0008               	return
 10004     09D4                     __end_of___is_single_click:
 10005                           
 10006                           	psect	text4
 10007     0816                     __ptext4:	
 10008 ;; *************** function ___is_long_press *****************
 10009 ;; Defined at:
 10010 ;;		line 80 in file "mybutton.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  b               1    wreg     PTR struct mybutton
 10013 ;;		 -> main@b2(27), main@b1(27), 
 10014 ;;  now             4    0[BANK0 ] unsigned long 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  b               1   14[BANK0 ] PTR struct mybutton
 10017 ;;		 -> main@b2(27), main@b1(27), 
 10018 ;;  condition2      1   13[BANK0 ] unsigned char 
 10019 ;;  condition1      1   12[BANK0 ] unsigned char 
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      unsigned char 
 10022 ;; Registers used:
 10023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10029 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10033 ;;Total ram usage:       15 bytes
 10034 ;; Hardware stack levels used: 1
 10035 ;; Hardware stack levels required when called: 2
 10036 ;; This function calls:
 10037 ;;		Nothing
 10038 ;; This function is called by:
 10039 ;;		_update_mybutton
 10040 ;; This function uses a non-reentrant model
 10041 ;;
 10042                           
 10043     0816                     ___is_long_press:	
 10044                           ;psect for function ___is_long_press
 10045                           
 10046                           
 10047                           ;incstack = 0
 10048                           ; Regs used in ___is_long_press: [wreg-fsr1h+status,2+status,0]
 10049                           ;___is_long_press@b stored from wreg
 10050     0816  0140               	movlb	0	; select bank0
 10051     0817  00AE               	movwf	___is_long_press@b
 10052     0818                     l4023:
 10053                           
 10054                           ;mybutton.c: 81: bool condition1 = (b->falling_ts[1] > b->rising_ts[1]);
 10055     0818  082E               	movf	___is_long_press@b,w
 10056     0819  3E06               	addlw	6
 10057     081A  0086               	movwf	6
 10058     081B  3001               	movlw	1	; select bank2/3
 10059     081C  0087               	movwf	7
 10060     081D  3F40               	moviw [0]fsr1
 10061     081E  00A4               	movwf	??___is_long_press
 10062     081F  3F41               	moviw [1]fsr1
 10063     0820  00A5               	movwf	??___is_long_press+1
 10064     0821  3F42               	moviw [2]fsr1
 10065     0822  00A6               	movwf	??___is_long_press+2
 10066     0823  3F43               	moviw [3]fsr1
 10067     0824  00A7               	movwf	??___is_long_press+3
 10068     0825  082E               	movf	___is_long_press@b,w
 10069     0826  3E0E               	addlw	14
 10070     0827  0086               	movwf	6
 10071     0828  3001               	movlw	1	; select bank2/3
 10072     0829  0087               	movwf	7
 10073     082A  3F40               	moviw [0]fsr1
 10074     082B  00A8               	movwf	??___is_long_press+4
 10075     082C  3F41               	moviw [1]fsr1
 10076     082D  00A9               	movwf	??___is_long_press+5
 10077     082E  3F42               	moviw [2]fsr1
 10078     082F  00AA               	movwf	??___is_long_press+6
 10079     0830  3F43               	moviw [3]fsr1
 10080     0831  00AB               	movwf	??___is_long_press+7
 10081     0832  0827               	movf	??___is_long_press+3,w
 10082     0833  022B               	subwf	??___is_long_press+7,w
 10083     0834  1D03               	skipz
 10084     0835  2840               	goto	u4025
 10085     0836  0826               	movf	??___is_long_press+2,w
 10086     0837  022A               	subwf	??___is_long_press+6,w
 10087     0838  1D03               	skipz
 10088     0839  2840               	goto	u4025
 10089     083A  0825               	movf	??___is_long_press+1,w
 10090     083B  0229               	subwf	??___is_long_press+5,w
 10091     083C  1D03               	skipz
 10092     083D  2840               	goto	u4025
 10093     083E  0824               	movf	??___is_long_press,w
 10094     083F  0228               	subwf	??___is_long_press+4,w
 10095     0840                     u4025:
 10096     0840  1C03               	skipc
 10097     0841  2843               	goto	u4021
 10098     0842  2845               	goto	u4020
 10099     0843                     u4021:
 10100     0843  3001               	movlw	1
 10101     0844  2846               	goto	u4030
 10102     0845                     u4020:
 10103     0845  3000               	movlw	0
 10104     0846                     u4030:
 10105     0846  00AC               	movwf	___is_long_press@condition1
 10106                           
 10107                           ;mybutton.c: 82: bool condition2 = (now - b->falling_ts[1] > 4000);
 10108     0847  082E               	movf	___is_long_press@b,w
 10109     0848  3E06               	addlw	6
 10110     0849  0086               	movwf	6
 10111     084A  3001               	movlw	1	; select bank2/3
 10112     084B  0087               	movwf	7
 10113     084C  3F40               	moviw [0]fsr1
 10114     084D  00A4               	movwf	??___is_long_press
 10115     084E  3F41               	moviw [1]fsr1
 10116     084F  00A5               	movwf	??___is_long_press+1
 10117     0850  3F42               	moviw [2]fsr1
 10118     0851  00A6               	movwf	??___is_long_press+2
 10119     0852  3F43               	moviw [3]fsr1
 10120     0853  00A7               	movwf	??___is_long_press+3
 10121     0854  0820               	movf	___is_long_press@now,w
 10122     0855  00A8               	movwf	??___is_long_press+4
 10123     0856  0821               	movf	___is_long_press@now+1,w
 10124     0857  00A9               	movwf	??___is_long_press+5
 10125     0858  0822               	movf	___is_long_press@now+2,w
 10126     0859  00AA               	movwf	??___is_long_press+6
 10127     085A  0823               	movf	___is_long_press@now+3,w
 10128     085B  00AB               	movwf	??___is_long_press+7
 10129     085C  0824               	movf	??___is_long_press,w
 10130     085D  02A8               	subwf	??___is_long_press+4,f
 10131     085E  0825               	movf	??___is_long_press+1,w
 10132     085F  3BA9               	subwfb	??___is_long_press+5,f
 10133     0860  0826               	movf	??___is_long_press+2,w
 10134     0861  3BAA               	subwfb	??___is_long_press+6,f
 10135     0862  0827               	movf	??___is_long_press+3,w
 10136     0863  3BAB               	subwfb	??___is_long_press+7,f
 10137     0864  082B               	movf	??___is_long_press+7,w
 10138     0865  1D03               	btfss	3,2
 10139     0866  2871               	goto	u4041
 10140     0867  082A               	movf	??___is_long_press+6,w
 10141     0868  1D03               	btfss	3,2
 10142     0869  2871               	goto	u4041
 10143     086A  30A1               	movlw	161
 10144     086B  0228               	subwf	??___is_long_press+4,w
 10145     086C  300F               	movlw	15
 10146     086D  3B29               	subwfb	??___is_long_press+5,w
 10147     086E  1803               	btfsc	3,0
 10148     086F  2871               	goto	u4041
 10149     0870  2873               	goto	u4040
 10150     0871                     u4041:
 10151     0871  3001               	movlw	1
 10152     0872  2874               	goto	u4050
 10153     0873                     u4040:
 10154     0873  3000               	movlw	0
 10155     0874                     u4050:
 10156     0874  0140               	movlb	0	; select bank0
 10157     0875  00AD               	movwf	___is_long_press@condition2
 10158     0876                     l4025:
 10159                           
 10160                           ;mybutton.c: 84: if(condition1 && condition2){
 10161     0876  082C               	movf	___is_long_press@condition1,w
 10162     0877  1903               	btfsc	3,2
 10163     0878  287A               	goto	u4061
 10164     0879  287B               	goto	u4060
 10165     087A                     u4061:
 10166     087A  2894               	goto	l4033
 10167     087B                     u4060:
 10168     087B                     l4027:
 10169     087B  082D               	movf	___is_long_press@condition2,w
 10170     087C  1903               	btfsc	3,2
 10171     087D  287F               	goto	u4071
 10172     087E  2880               	goto	u4070
 10173     087F                     u4071:
 10174     087F  2894               	goto	l4033
 10175     0880                     u4070:
 10176     0880                     l4029:
 10177                           
 10178                           ;mybutton.c: 85: b->long_press_tmps[0] = b->long_press_tmps[1];
 10179     0880  082E               	movf	___is_long_press@b,w
 10180     0881  3E16               	addlw	22
 10181     0882  0086               	movwf	6
 10182     0883  3001               	movlw	1	; select bank2/3
 10183     0884  0087               	movwf	7
 10184     0885  082E               	movf	___is_long_press@b,w
 10185     0886  3E17               	addlw	23
 10186     0887  0084               	movwf	4
 10187     0888  3001               	movlw	1	; select bank2/3
 10188     0889  0085               	movwf	5
 10189     088A  0800               	movf	0,w
 10190     088B  0081               	movwf	1
 10191     088C                     l4031:
 10192                           
 10193                           ;mybutton.c: 86: b->long_press_tmps[1] = 1;
 10194     088C  082E               	movf	___is_long_press@b,w
 10195     088D  3E17               	addlw	23
 10196     088E  0086               	movwf	6
 10197     088F  3001               	movlw	1	; select bank2/3
 10198     0890  0087               	movwf	7
 10199     0891  0181               	clrf	1
 10200     0892  0A81               	incf	1,f
 10201                           
 10202                           ;mybutton.c: 87: }else{
 10203     0893  28A6               	goto	l4037
 10204     0894                     l4033:
 10205                           
 10206                           ;mybutton.c: 88: b->long_press_tmps[0] = b->long_press_tmps[1];
 10207     0894  082E               	movf	___is_long_press@b,w
 10208     0895  3E16               	addlw	22
 10209     0896  0086               	movwf	6
 10210     0897  3001               	movlw	1	; select bank2/3
 10211     0898  0087               	movwf	7
 10212     0899  082E               	movf	___is_long_press@b,w
 10213     089A  3E17               	addlw	23
 10214     089B  0084               	movwf	4
 10215     089C  3001               	movlw	1	; select bank2/3
 10216     089D  0085               	movwf	5
 10217     089E  0800               	movf	0,w
 10218     089F  0081               	movwf	1
 10219     08A0                     l4035:
 10220                           
 10221                           ;mybutton.c: 89: b->long_press_tmps[1] = 0;
 10222     08A0  082E               	movf	___is_long_press@b,w
 10223     08A1  3E17               	addlw	23
 10224     08A2  0086               	movwf	6
 10225     08A3  3001               	movlw	1	; select bank2/3
 10226     08A4  0087               	movwf	7
 10227     08A5  0181               	clrf	1
 10228     08A6                     l4037:
 10229                           
 10230                           ;mybutton.c: 90: };mybutton.c: 92: if(0 == b->long_press_tmps[0] && 1 == b->long_press_t
      +                          mps[1]){
 10231     08A6  082E               	movf	___is_long_press@b,w
 10232     08A7  3E16               	addlw	22
 10233     08A8  0086               	movwf	6
 10234     08A9  3001               	movlw	1	; select bank2/3
 10235     08AA  0087               	movwf	7
 10236     08AB  0801               	movf	1,w
 10237     08AC  1D03               	btfss	3,2
 10238     08AD  28AF               	goto	u4081
 10239     08AE  28B0               	goto	u4080
 10240     08AF                     u4081:
 10241     08AF  28BC               	goto	l4045
 10242     08B0                     u4080:
 10243     08B0                     l4039:
 10244     08B0  082E               	movf	___is_long_press@b,w
 10245     08B1  3E17               	addlw	23
 10246     08B2  0086               	movwf	6
 10247     08B3  3001               	movlw	1	; select bank2/3
 10248     08B4  0087               	movwf	7
 10249     08B5  0301               	decf	1,w
 10250     08B6  1D03               	btfss	3,2
 10251     08B7  28B9               	goto	u4091
 10252     08B8  28BA               	goto	u4090
 10253     08B9                     u4091:
 10254     08B9  28BC               	goto	l4045
 10255     08BA                     u4090:
 10256     08BA                     l4041:
 10257                           
 10258                           ;mybutton.c: 93: return 1;
 10259     08BA  3001               	movlw	1
 10260     08BB  28BD               	goto	l384
 10261     08BC                     l4045:
 10262                           
 10263                           ;mybutton.c: 94: };mybutton.c: 95: return 0;
 10264     08BC  3000               	movlw	0
 10265     08BD                     l384:
 10266     08BD  0008               	return
 10267     08BE                     __end_of___is_long_press:
 10268                           
 10269                           	psect	text5
 10270     171E                     __ptext5:	
 10271 ;; *************** function ___is_double_click *****************
 10272 ;; Defined at:
 10273 ;;		line 59 in file "mybutton.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;  b               1    wreg     PTR struct mybutton
 10276 ;;		 -> main@b2(27), main@b1(27), 
 10277 ;;  now             4    0[BANK0 ] unsigned long 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  b               1   15[BANK0 ] PTR struct mybutton
 10280 ;;		 -> main@b2(27), main@b1(27), 
 10281 ;;  condition3      1   14[BANK0 ] unsigned char 
 10282 ;;  condition2      1   13[BANK0 ] unsigned char 
 10283 ;;  condition1      1   12[BANK0 ] unsigned char 
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      unsigned char 
 10286 ;; Registers used:
 10287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10294 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;Total ram usage:       16 bytes
 10298 ;; Hardware stack levels used: 1
 10299 ;; Hardware stack levels required when called: 2
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_update_mybutton
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307     171E                     ___is_double_click:	
 10308                           ;psect for function ___is_double_click
 10309                           
 10310                           
 10311                           ;incstack = 0
 10312                           ; Regs used in ___is_double_click: [wreg-fsr1h+status,2+status,0]
 10313                           ;___is_double_click@b stored from wreg
 10314     171E  0140               	movlb	0	; select bank0
 10315     171F  00AF               	movwf	___is_double_click@b
 10316     1720                     l3995:
 10317                           
 10318                           ;mybutton.c: 61: bool condition1 = (b->rising_ts[1] > b->falling_ts[1]);
 10319     1720  082F               	movf	___is_double_click@b,w
 10320     1721  3E0E               	addlw	14
 10321     1722  0086               	movwf	6
 10322     1723  3001               	movlw	1	; select bank2/3
 10323     1724  0087               	movwf	7
 10324     1725  3F40               	moviw [0]fsr1
 10325     1726  00A4               	movwf	??___is_double_click
 10326     1727  3F41               	moviw [1]fsr1
 10327     1728  00A5               	movwf	??___is_double_click+1
 10328     1729  3F42               	moviw [2]fsr1
 10329     172A  00A6               	movwf	??___is_double_click+2
 10330     172B  3F43               	moviw [3]fsr1
 10331     172C  00A7               	movwf	??___is_double_click+3
 10332     172D  082F               	movf	___is_double_click@b,w
 10333     172E  3E06               	addlw	6
 10334     172F  0086               	movwf	6
 10335     1730  3001               	movlw	1	; select bank2/3
 10336     1731  0087               	movwf	7
 10337     1732  3F40               	moviw [0]fsr1
 10338     1733  00A8               	movwf	??___is_double_click+4
 10339     1734  3F41               	moviw [1]fsr1
 10340     1735  00A9               	movwf	??___is_double_click+5
 10341     1736  3F42               	moviw [2]fsr1
 10342     1737  00AA               	movwf	??___is_double_click+6
 10343     1738  3F43               	moviw [3]fsr1
 10344     1739  00AB               	movwf	??___is_double_click+7
 10345     173A  0827               	movf	??___is_double_click+3,w
 10346     173B  022B               	subwf	??___is_double_click+7,w
 10347     173C  1D03               	skipz
 10348     173D  2F48               	goto	u3915
 10349     173E  0826               	movf	??___is_double_click+2,w
 10350     173F  022A               	subwf	??___is_double_click+6,w
 10351     1740  1D03               	skipz
 10352     1741  2F48               	goto	u3915
 10353     1742  0825               	movf	??___is_double_click+1,w
 10354     1743  0229               	subwf	??___is_double_click+5,w
 10355     1744  1D03               	skipz
 10356     1745  2F48               	goto	u3915
 10357     1746  0824               	movf	??___is_double_click,w
 10358     1747  0228               	subwf	??___is_double_click+4,w
 10359     1748                     u3915:
 10360     1748  1C03               	skipc
 10361     1749  2F4B               	goto	u3911
 10362     174A  2F4D               	goto	u3910
 10363     174B                     u3911:
 10364     174B  3001               	movlw	1
 10365     174C  2F4E               	goto	u3920
 10366     174D                     u3910:
 10367     174D  3000               	movlw	0
 10368     174E                     u3920:
 10369     174E  00AC               	movwf	___is_double_click@condition1
 10370                           
 10371                           ;mybutton.c: 62: bool condition2 = (now - b->rising_ts[1] > 200);
 10372     174F  082F               	movf	___is_double_click@b,w
 10373     1750  3E0E               	addlw	14
 10374     1751  0086               	movwf	6
 10375     1752  3001               	movlw	1	; select bank2/3
 10376     1753  0087               	movwf	7
 10377     1754  3F40               	moviw [0]fsr1
 10378     1755  00A4               	movwf	??___is_double_click
 10379     1756  3F41               	moviw [1]fsr1
 10380     1757  00A5               	movwf	??___is_double_click+1
 10381     1758  3F42               	moviw [2]fsr1
 10382     1759  00A6               	movwf	??___is_double_click+2
 10383     175A  3F43               	moviw [3]fsr1
 10384     175B  00A7               	movwf	??___is_double_click+3
 10385     175C  0820               	movf	___is_double_click@now,w
 10386     175D  00A8               	movwf	??___is_double_click+4
 10387     175E  0821               	movf	___is_double_click@now+1,w
 10388     175F  00A9               	movwf	??___is_double_click+5
 10389     1760  0822               	movf	___is_double_click@now+2,w
 10390     1761  00AA               	movwf	??___is_double_click+6
 10391     1762  0823               	movf	___is_double_click@now+3,w
 10392     1763  00AB               	movwf	??___is_double_click+7
 10393     1764  0824               	movf	??___is_double_click,w
 10394     1765  02A8               	subwf	??___is_double_click+4,f
 10395     1766  0825               	movf	??___is_double_click+1,w
 10396     1767  3BA9               	subwfb	??___is_double_click+5,f
 10397     1768  0826               	movf	??___is_double_click+2,w
 10398     1769  3BAA               	subwfb	??___is_double_click+6,f
 10399     176A  0827               	movf	??___is_double_click+3,w
 10400     176B  3BAB               	subwfb	??___is_double_click+7,f
 10401     176C  082B               	movf	??___is_double_click+7,w
 10402     176D  1D03               	btfss	3,2
 10403     176E  2F7A               	goto	u3931
 10404     176F  082A               	movf	??___is_double_click+6,w
 10405     1770  1D03               	btfss	3,2
 10406     1771  2F7A               	goto	u3931
 10407     1772  0829               	movf	??___is_double_click+5,w
 10408     1773  1D03               	btfss	3,2
 10409     1774  2F7A               	goto	u3931
 10410     1775  30C9               	movlw	201
 10411     1776  0228               	subwf	??___is_double_click+4,w
 10412     1777  1803               	btfsc	3,0
 10413     1778  2F7A               	goto	u3931
 10414     1779  2F7C               	goto	u3930
 10415     177A                     u3931:
 10416     177A  3001               	movlw	1
 10417     177B  2F7D               	goto	u3940
 10418     177C                     u3930:
 10419     177C  3000               	movlw	0
 10420     177D                     u3940:
 10421     177D  0140               	movlb	0	; select bank0
 10422     177E  00AD               	movwf	___is_double_click@condition2
 10423                           
 10424                           ;mybutton.c: 63: bool condition3 = (b->rising_ts[1] - b->rising_ts[0] < 500);
 10425     177F  082F               	movf	___is_double_click@b,w
 10426     1780  3E0A               	addlw	10
 10427     1781  0086               	movwf	6
 10428     1782  3001               	movlw	1	; select bank2/3
 10429     1783  0087               	movwf	7
 10430     1784  3F40               	moviw [0]fsr1
 10431     1785  00A4               	movwf	??___is_double_click
 10432     1786  3F41               	moviw [1]fsr1
 10433     1787  00A5               	movwf	??___is_double_click+1
 10434     1788  3F42               	moviw [2]fsr1
 10435     1789  00A6               	movwf	??___is_double_click+2
 10436     178A  3F43               	moviw [3]fsr1
 10437     178B  00A7               	movwf	??___is_double_click+3
 10438     178C  082F               	movf	___is_double_click@b,w
 10439     178D  3E0E               	addlw	14
 10440     178E  0086               	movwf	6
 10441     178F  3001               	movlw	1	; select bank2/3
 10442     1790  0087               	movwf	7
 10443     1791  3F40               	moviw [0]fsr1
 10444     1792  00A8               	movwf	??___is_double_click+4
 10445     1793  3F41               	moviw [1]fsr1
 10446     1794  00A9               	movwf	??___is_double_click+5
 10447     1795  3F42               	moviw [2]fsr1
 10448     1796  00AA               	movwf	??___is_double_click+6
 10449     1797  3F43               	moviw [3]fsr1
 10450     1798  00AB               	movwf	??___is_double_click+7
 10451     1799  0824               	movf	??___is_double_click,w
 10452     179A  02A8               	subwf	??___is_double_click+4,f
 10453     179B  0825               	movf	??___is_double_click+1,w
 10454     179C  3BA9               	subwfb	??___is_double_click+5,f
 10455     179D  0826               	movf	??___is_double_click+2,w
 10456     179E  3BAA               	subwfb	??___is_double_click+6,f
 10457     179F  0827               	movf	??___is_double_click+3,w
 10458     17A0  3BAB               	subwfb	??___is_double_click+7,f
 10459     17A1  082B               	movf	??___is_double_click+7,w
 10460     17A2  1D03               	btfss	3,2
 10461     17A3  2FB0               	goto	u3950
 10462     17A4  082A               	movf	??___is_double_click+6,w
 10463     17A5  1D03               	btfss	3,2
 10464     17A6  2FB0               	goto	u3950
 10465     17A7  30F4               	movlw	244
 10466     17A8  0228               	subwf	??___is_double_click+4,w
 10467     17A9  3001               	movlw	1
 10468     17AA  3B29               	subwfb	??___is_double_click+5,w
 10469     17AB  1C03               	btfss	3,0
 10470     17AC  2FAE               	goto	u3951
 10471     17AD  2FB0               	goto	u3950
 10472     17AE                     u3951:
 10473     17AE  3001               	movlw	1
 10474     17AF  2FB1               	goto	u3960
 10475     17B0                     u3950:
 10476     17B0  3000               	movlw	0
 10477     17B1                     u3960:
 10478     17B1  0140               	movlb	0	; select bank0
 10479     17B2  00AE               	movwf	___is_double_click@condition3
 10480     17B3                     l3997:
 10481                           
 10482                           ;mybutton.c: 65: if (condition1 && condition2 && condition3){
 10483     17B3  082C               	movf	___is_double_click@condition1,w
 10484     17B4  1903               	btfsc	3,2
 10485     17B5  2FB7               	goto	u3971
 10486     17B6  2FB8               	goto	u3970
 10487     17B7                     u3971:
 10488     17B7  2FD6               	goto	l4007
 10489     17B8                     u3970:
 10490     17B8                     l3999:
 10491     17B8  082D               	movf	___is_double_click@condition2,w
 10492     17B9  1903               	btfsc	3,2
 10493     17BA  2FBC               	goto	u3981
 10494     17BB  2FBD               	goto	u3980
 10495     17BC                     u3981:
 10496     17BC  2FD6               	goto	l4007
 10497     17BD                     u3980:
 10498     17BD                     l4001:
 10499     17BD  082E               	movf	___is_double_click@condition3,w
 10500     17BE  1903               	btfsc	3,2
 10501     17BF  2FC1               	goto	u3991
 10502     17C0  2FC2               	goto	u3990
 10503     17C1                     u3991:
 10504     17C1  2FD6               	goto	l4007
 10505     17C2                     u3990:
 10506     17C2                     l4003:
 10507                           
 10508                           ;mybutton.c: 66: b->double_click_tmps[0] = b->double_click_tmps[1];
 10509     17C2  082F               	movf	___is_double_click@b,w
 10510     17C3  3E14               	addlw	20
 10511     17C4  0086               	movwf	6
 10512     17C5  3001               	movlw	1	; select bank2/3
 10513     17C6  0087               	movwf	7
 10514     17C7  082F               	movf	___is_double_click@b,w
 10515     17C8  3E15               	addlw	21
 10516     17C9  0084               	movwf	4
 10517     17CA  3001               	movlw	1	; select bank2/3
 10518     17CB  0085               	movwf	5
 10519     17CC  0800               	movf	0,w
 10520     17CD  0081               	movwf	1
 10521     17CE                     l4005:
 10522                           
 10523                           ;mybutton.c: 67: b->double_click_tmps[1] = 1;
 10524     17CE  082F               	movf	___is_double_click@b,w
 10525     17CF  3E15               	addlw	21
 10526     17D0  0086               	movwf	6
 10527     17D1  3001               	movlw	1	; select bank2/3
 10528     17D2  0087               	movwf	7
 10529     17D3  0181               	clrf	1
 10530     17D4  0A81               	incf	1,f
 10531                           
 10532                           ;mybutton.c: 68: }else{
 10533     17D5  2FE8               	goto	l4011
 10534     17D6                     l4007:
 10535                           
 10536                           ;mybutton.c: 69: b->double_click_tmps[0] = b->double_click_tmps[1];
 10537     17D6  082F               	movf	___is_double_click@b,w
 10538     17D7  3E14               	addlw	20
 10539     17D8  0086               	movwf	6
 10540     17D9  3001               	movlw	1	; select bank2/3
 10541     17DA  0087               	movwf	7
 10542     17DB  082F               	movf	___is_double_click@b,w
 10543     17DC  3E15               	addlw	21
 10544     17DD  0084               	movwf	4
 10545     17DE  3001               	movlw	1	; select bank2/3
 10546     17DF  0085               	movwf	5
 10547     17E0  0800               	movf	0,w
 10548     17E1  0081               	movwf	1
 10549     17E2                     l4009:
 10550                           
 10551                           ;mybutton.c: 70: b->double_click_tmps[1] = 0;
 10552     17E2  082F               	movf	___is_double_click@b,w
 10553     17E3  3E15               	addlw	21
 10554     17E4  0086               	movwf	6
 10555     17E5  3001               	movlw	1	; select bank2/3
 10556     17E6  0087               	movwf	7
 10557     17E7  0181               	clrf	1
 10558     17E8                     l4011:
 10559                           
 10560                           ;mybutton.c: 71: };mybutton.c: 73: if(0 == b->double_click_tmps[0] && 1 == b->double_cli
      +                          ck_tmps[1]){
 10561     17E8  082F               	movf	___is_double_click@b,w
 10562     17E9  3E14               	addlw	20
 10563     17EA  0086               	movwf	6
 10564     17EB  3001               	movlw	1	; select bank2/3
 10565     17EC  0087               	movwf	7
 10566     17ED  0801               	movf	1,w
 10567     17EE  1D03               	btfss	3,2
 10568     17EF  2FF1               	goto	u4001
 10569     17F0  2FF2               	goto	u4000
 10570     17F1                     u4001:
 10571     17F1  2FFE               	goto	l4019
 10572     17F2                     u4000:
 10573     17F2                     l4013:
 10574     17F2  082F               	movf	___is_double_click@b,w
 10575     17F3  3E15               	addlw	21
 10576     17F4  0086               	movwf	6
 10577     17F5  3001               	movlw	1	; select bank2/3
 10578     17F6  0087               	movwf	7
 10579     17F7  0301               	decf	1,w
 10580     17F8  1D03               	btfss	3,2
 10581     17F9  2FFB               	goto	u4011
 10582     17FA  2FFC               	goto	u4010
 10583     17FB                     u4011:
 10584     17FB  2FFE               	goto	l4019
 10585     17FC                     u4010:
 10586     17FC                     l4015:
 10587                           
 10588                           ;mybutton.c: 74: return 1;
 10589     17FC  3001               	movlw	1
 10590     17FD  2FFF               	goto	l378
 10591     17FE                     l4019:
 10592                           
 10593                           ;mybutton.c: 75: };mybutton.c: 76: return 0;
 10594     17FE  3000               	movlw	0
 10595     17FF                     l378:
 10596     17FF  0008               	return
 10597     1800                     __end_of___is_double_click:
 10598                           
 10599                           	psect	text6
 10600     1E39                     __ptext6:	
 10601 ;; *************** function _tmr0_init *****************
 10602 ;; Defined at:
 10603 ;;		line 5 in file "tmr0.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;		None
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      void 
 10610 ;; Registers used:
 10611 ;;		wreg, status,2
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;Total ram usage:        0 bytes
 10622 ;; Hardware stack levels used: 1
 10623 ;; Hardware stack levels required when called: 2
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		_main
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631     1E39                     _tmr0_init:	
 10632                           ;psect for function _tmr0_init
 10633                           
 10634     1E39                     l4347:	
 10635                           ;incstack = 0
 10636                           ; Regs used in _tmr0_init: [wreg+status,2]
 10637                           
 10638                           
 10639                           ;tmr0.c: 8: T0CON1 = 0x40;
 10640     1E39  3040               	movlw	64
 10641     1E3A  014B               	movlb	11	; select bank11
 10642     1E3B  009F               	movwf	31	;volatile
 10643                           
 10644                           ;tmr0.c: 11: TMR0H = 0xF3;
 10645     1E3C  30F3               	movlw	243
 10646     1E3D  009D               	movwf	29	;volatile
 10647     1E3E                     l4349:
 10648                           
 10649                           ;tmr0.c: 14: TMR0L = 0x00;
 10650     1E3E  019C               	clrf	28	;volatile
 10651     1E3F                     l4351:
 10652                           
 10653                           ;tmr0.c: 17: PIR0bits.TMR0IF = 0;
 10654     1E3F  014E               	movlb	14	; select bank14
 10655     1E40  128C               	bcf	12,5	;volatile
 10656     1E41                     l4353:
 10657                           
 10658                           ;tmr0.c: 20: PIE0bits.TMR0IE = 1;
 10659     1E41  1696               	bsf	22,5	;volatile
 10660     1E42                     l4355:
 10661                           
 10662                           ;tmr0.c: 23: T0CON0 = 0x80;
 10663     1E42  3080               	movlw	128
 10664     1E43  014B               	movlb	11	; select bank11
 10665     1E44  009E               	movwf	30	;volatile
 10666     1E45                     l293:
 10667     1E45  0008               	return
 10668     1E46                     __end_of_tmr0_init:
 10669                           
 10670                           	psect	text7
 10671     1180                     __ptext7:	
 10672 ;; *************** function _set_device_serial_number_to_i2c_slave_memorymap *****************
 10673 ;; Defined at:
 10674 ;;		line 9 in file "set_device_i2c_sn.c"
 10675 ;; Parameters:    Size  Location     Type
 10676 ;;		None
 10677 ;; Auto vars:     Size  Location     Type
 10678 ;;  buffer          3   30[BANK0 ] unsigned char [3]
 10679 ;;  value           1   29[BANK0 ] unsigned char 
 10680 ;;  i               1   33[BANK0 ] unsigned char 
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  1    wreg      void 
 10683 ;; Registers used:
 10684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10691 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10692 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;Total ram usage:        7 bytes
 10695 ;; Hardware stack levels used: 1
 10696 ;; Hardware stack levels required when called: 5
 10697 ;; This function calls:
 10698 ;;		_i2c_slave_set_register_with_lock
 10699 ;;		_strtol
 10700 ;; This function is called by:
 10701 ;;		_main
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705     1180                     _set_device_serial_number_to_i2c_slave_memorymap:	
 10706                           ;psect for function _set_device_serial_number_to_i2c_slave_memorymap
 10707                           
 10708     1180                     l4623:	
 10709                           ;incstack = 0
 10710                           ; Regs used in _set_device_serial_number_to_i2c_slave_memorymap: [wreg-fsr1h+status,2+st
      +                          atus,0+pclath+cstack]
 10711                           
 10712                           
 10713                           ;set_device_i2c_sn.c: 10: for (uint8_t i = 0; i < 5; i++) {
 10714     1180  0140               	movlb	0	; select bank0
 10715     1181  01C1               	clrf	set_device_serial_number_to_i2c_slave_memorymap@i
 10716     1182                     l4629:
 10717                           
 10718                           ;set_device_i2c_sn.c: 11: char buffer[3];;set_device_i2c_sn.c: 12: buffer[0] = "0A018200
      +                          01"[i * 2];
 10719     1182  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 10720     1183  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 10721     1184  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
 10722     1185  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
 10723     1186  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
 10724     1187  3014               	movlw	low STR_3
 10725     1188  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 10726     1189  0084               	movwf	4
 10727     118A  301A               	movlw	high STR_3
 10728     118B  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
 10729     118C  3880               	iorlw	128
 10730     118D  0085               	movwf	5
 10731     118E  0800               	movf	0,w	;code access
 10732     118F  00BE               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer
 10733                           
 10734                           ;set_device_i2c_sn.c: 13: buffer[1] = "0A01820001"[i * 2 + 1];
 10735     1190  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 10736     1191  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 10737     1192  01BC               	clrf	??_set_device_serial_number_to_i2c_slave_memorymap+1
 10738     1193  35BB               	lslf	??_set_device_serial_number_to_i2c_slave_memorymap,f
 10739     1194  0DBC               	rlf	??_set_device_serial_number_to_i2c_slave_memorymap+1,f
 10740     1195  3015               	movlw	low (STR_3+1)
 10741     1196  073B               	addwf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 10742     1197  0084               	movwf	4
 10743     1198  301A               	movlw	high (STR_3+1)
 10744     1199  3D3C               	addwfc	??_set_device_serial_number_to_i2c_slave_memorymap+1,w
 10745     119A  3880               	iorlw	128
 10746     119B  0085               	movwf	5
 10747     119C  0800               	movf	0,w	;code access
 10748     119D  00BF               	movwf	set_device_serial_number_to_i2c_slave_memorymap@buffer+1
 10749     119E                     l4631:
 10750                           
 10751                           ;set_device_i2c_sn.c: 14: buffer[2] = '\0';
 10752     119E  01C0               	clrf	set_device_serial_number_to_i2c_slave_memorymap@buffer+2
 10753     119F                     l4633:
 10754                           
 10755                           ;set_device_i2c_sn.c: 16: uint8_t value = (uint8_t)strtol(buffer, (0), 16);
 10756     119F  01AC               	clrf	strtol@endptr
 10757     11A0  3010               	movlw	16
 10758     11A1  00AD               	movwf	strtol@base
 10759     11A2  3000               	movlw	0
 10760     11A3  00AE               	movwf	strtol@base+1
 10761     11A4  303E               	movlw	(low (set_device_serial_number_to_i2c_slave_memorymap@buffer| 0))& (0+255)
 10762     11A5  3186  26EE  3191   	fcall	_strtol
 10763     11A8  0140               	movlb	0	; select bank0
 10764     11A9  082C               	movf	?_strtol,w
 10765     11AA  00BD               	movwf	set_device_serial_number_to_i2c_slave_memorymap@value
 10766     11AB                     l4635:
 10767                           
 10768                           ;set_device_i2c_sn.c: 17: i2c_slave_set_register_with_lock(57u + i, value);
 10769     11AB  083D               	movf	set_device_serial_number_to_i2c_slave_memorymap@value,w
 10770     11AC  00A2               	movwf	i2c_slave_set_register_with_lock@value
 10771     11AD  0841               	movf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 10772     11AE  3E39               	addlw	57
 10773     11AF  319E  2616  3191   	fcall	_i2c_slave_set_register_with_lock
 10774     11B2                     l4637:
 10775     11B2  3001               	movlw	1
 10776     11B3  0140               	movlb	0	; select bank0
 10777     11B4  00BB               	movwf	??_set_device_serial_number_to_i2c_slave_memorymap
 10778     11B5  083B               	movf	??_set_device_serial_number_to_i2c_slave_memorymap,w
 10779     11B6  07C1               	addwf	set_device_serial_number_to_i2c_slave_memorymap@i,f
 10780     11B7                     l4639:
 10781     11B7  3005               	movlw	5
 10782     11B8  0241               	subwf	set_device_serial_number_to_i2c_slave_memorymap@i,w
 10783     11B9  1C03               	skipc
 10784     11BA  29BC               	goto	u4901
 10785     11BB  29BD               	goto	u4900
 10786     11BC                     u4901:
 10787     11BC  2982               	goto	l4629
 10788     11BD                     u4900:
 10789     11BD                     l526:
 10790     11BD  0008               	return
 10791     11BE                     __end_of_set_device_serial_number_to_i2c_slave_memorymap:
 10792                           
 10793                           	psect	text8
 10794     06EE                     __ptext8:	
 10795 ;; *************** function _strtol *****************
 10796 ;; Defined at:
 10797 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/strtol.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;  s               1    wreg     PTR const unsigned char 
 10800 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
 10801 ;;  endptr          1   12[BANK0 ] PTR PTR unsigned char 
 10802 ;;		 -> NULL(0), 
 10803 ;;  base            2   13[BANK0 ] int 
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;  s               1   25[BANK0 ] PTR const unsigned char 
 10806 ;;		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(3), 
 10807 ;;  a               4   21[BANK0 ] long 
 10808 ;;  c               1   26[BANK0 ] unsigned char 
 10809 ;;  sign            1   20[BANK0 ] unsigned char 
 10810 ;; Return value:  Size  Location     Type
 10811 ;;                  4   12[BANK0 ] long 
 10812 ;; Registers used:
 10813 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10814 ;; Tracked objects:
 10815 ;;		On entry : 0/0
 10816 ;;		On exit  : 0/0
 10817 ;;		Unchanged: 0/0
 10818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10819 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;Total ram usage:       15 bytes
 10824 ;; Hardware stack levels used: 1
 10825 ;; Hardware stack levels required when called: 4
 10826 ;; This function calls:
 10827 ;;		___lmul
 10828 ;;		_isalpha
 10829 ;;		_isdigit
 10830 ;;		_isspace
 10831 ;;		_toupper
 10832 ;; This function is called by:
 10833 ;;		_set_device_serial_number_to_i2c_slave_memorymap
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837     06EE                     _strtol:	
 10838                           ;psect for function _strtol
 10839                           
 10840                           
 10841                           ;incstack = 0
 10842                           ; Regs used in _strtol: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10843                           ;strtol@s stored from wreg
 10844     06EE  0140               	movlb	0	; select bank0
 10845     06EF  00B9               	movwf	strtol@s
 10846     06F0                     l1461:
 10847     06F0                     l4061:
 10848     06F0  0140               	movlb	0	; select bank0
 10849     06F1  0839               	movf	strtol@s,w
 10850     06F2  0086               	movwf	6
 10851     06F3  0187               	clrf	7
 10852     06F4  0801               	movf	1,w
 10853     06F5  00BA               	movwf	strtol@c
 10854     06F6                     l4063:
 10855     06F6  3001               	movlw	1
 10856     06F7  00B0               	movwf	??_strtol
 10857     06F8  0830               	movf	??_strtol,w
 10858     06F9  07B9               	addwf	strtol@s,f
 10859     06FA                     l4065:
 10860     06FA  083A               	movf	strtol@c,w
 10861     06FB  319E  26C5  3186   	fcall	_isspace
 10862     06FE  1803               	btfsc	3,0
 10863     06FF  2F01               	goto	u4101
 10864     0700  2F03               	goto	u4100
 10865     0701                     u4101:
 10866     0701  0140               	movlb	0	; select bank0
 10867     0702  2EF0               	goto	l1461
 10868     0703                     u4100:
 10869     0703                     l4067:
 10870     0703  3000               	movlw	0
 10871     0704  0140               	movlb	0	; select bank0
 10872     0705  00B8               	movwf	strtol@a+3
 10873     0706  3000               	movlw	0
 10874     0707  00B7               	movwf	strtol@a+2
 10875     0708  3000               	movlw	0
 10876     0709  00B6               	movwf	strtol@a+1
 10877     070A  3000               	movlw	0
 10878     070B  00B5               	movwf	strtol@a
 10879     070C                     l4069:
 10880     070C  01B4               	clrf	strtol@sign
 10881     070D                     l4071:
 10882     070D  302D               	movlw	45
 10883     070E  063A               	xorwf	strtol@c,w
 10884     070F  1D03               	btfss	3,2
 10885     0710  2F12               	goto	u4111
 10886     0711  2F13               	goto	u4110
 10887     0712                     u4111:
 10888     0712  2F1F               	goto	l4079
 10889     0713                     u4110:
 10890     0713                     l4073:
 10891     0713  01B4               	clrf	strtol@sign
 10892     0714  0AB4               	incf	strtol@sign,f
 10893     0715                     l4075:
 10894     0715  0839               	movf	strtol@s,w
 10895     0716  0086               	movwf	6
 10896     0717  0187               	clrf	7
 10897     0718  0801               	movf	1,w
 10898     0719  00BA               	movwf	strtol@c
 10899     071A                     l4077:
 10900     071A  3001               	movlw	1
 10901     071B  00B0               	movwf	??_strtol
 10902     071C  0830               	movf	??_strtol,w
 10903     071D  07B9               	addwf	strtol@s,f
 10904     071E  2F26               	goto	l4085
 10905     071F                     l4079:
 10906     071F  302B               	movlw	43
 10907     0720  063A               	xorwf	strtol@c,w
 10908     0721  1D03               	btfss	3,2
 10909     0722  2F24               	goto	u4121
 10910     0723  2F25               	goto	u4120
 10911     0724                     u4121:
 10912     0724  2F26               	goto	l4085
 10913     0725                     u4120:
 10914     0725  2F15               	goto	l4075
 10915     0726                     l4085:
 10916     0726  3030               	movlw	48
 10917     0727  063A               	xorwf	strtol@c,w
 10918     0728  1D03               	btfss	3,2
 10919     0729  2F2B               	goto	u4131
 10920     072A  2F2C               	goto	u4130
 10921     072B                     u4131:
 10922     072B  2F66               	goto	l4109
 10923     072C                     u4130:
 10924     072C                     l4087:
 10925     072C  0839               	movf	strtol@s,w
 10926     072D  0086               	movwf	6
 10927     072E  0187               	clrf	7
 10928     072F  0801               	movf	1,w
 10929     0730  00BA               	movwf	strtol@c
 10930     0731                     l4089:
 10931     0731  3001               	movlw	1
 10932     0732  00B0               	movwf	??_strtol
 10933     0733  0830               	movf	??_strtol,w
 10934     0734  07B9               	addwf	strtol@s,f
 10935     0735                     l4091:
 10936     0735  082D               	movf	strtol@base,w
 10937     0736  042E               	iorwf	strtol@base+1,w
 10938     0737  1903               	btfsc	3,2
 10939     0738  2F3A               	goto	u4141
 10940     0739  2F3B               	goto	u4140
 10941     073A                     u4141:
 10942     073A  2F42               	goto	l4095
 10943     073B                     u4140:
 10944     073B                     l4093:
 10945     073B  3010               	movlw	16
 10946     073C  062D               	xorwf	strtol@base,w
 10947     073D  042E               	iorwf	strtol@base+1,w
 10948     073E  1D03               	btfss	3,2
 10949     073F  2F41               	goto	u4151
 10950     0740  2F42               	goto	u4150
 10951     0741                     u4151:
 10952     0741  2F5C               	goto	l4105
 10953     0742                     u4150:
 10954     0742                     l4095:
 10955     0742  3078               	movlw	120
 10956     0743  063A               	xorwf	strtol@c,w
 10957     0744  1903               	btfsc	3,2
 10958     0745  2F47               	goto	u4161
 10959     0746  2F48               	goto	u4160
 10960     0747                     u4161:
 10961     0747  2F4E               	goto	l4099
 10962     0748                     u4160:
 10963     0748                     l4097:
 10964     0748  3058               	movlw	88
 10965     0749  063A               	xorwf	strtol@c,w
 10966     074A  1D03               	btfss	3,2
 10967     074B  2F4D               	goto	u4171
 10968     074C  2F4E               	goto	u4170
 10969     074D                     u4171:
 10970     074D  2F5C               	goto	l4105
 10971     074E                     u4170:
 10972     074E                     l4099:
 10973     074E  3010               	movlw	16
 10974     074F  00AD               	movwf	strtol@base
 10975     0750  3000               	movlw	0
 10976     0751  00AE               	movwf	strtol@base+1
 10977     0752                     l4101:
 10978     0752  0839               	movf	strtol@s,w
 10979     0753  0086               	movwf	6
 10980     0754  0187               	clrf	7
 10981     0755  0801               	movf	1,w
 10982     0756  00BA               	movwf	strtol@c
 10983     0757                     l4103:
 10984     0757  3001               	movlw	1
 10985     0758  00B0               	movwf	??_strtol
 10986     0759  0830               	movf	??_strtol,w
 10987     075A  07B9               	addwf	strtol@s,f
 10988     075B  2F66               	goto	l4109
 10989     075C                     l4105:
 10990     075C  082D               	movf	strtol@base,w
 10991     075D  042E               	iorwf	strtol@base+1,w
 10992     075E  1D03               	btfss	3,2
 10993     075F  2F61               	goto	u4181
 10994     0760  2F62               	goto	u4180
 10995     0761                     u4181:
 10996     0761  2F66               	goto	l4109
 10997     0762                     u4180:
 10998     0762                     l4107:
 10999     0762  3008               	movlw	8
 11000     0763  00AD               	movwf	strtol@base
 11001     0764  3000               	movlw	0
 11002     0765  00AE               	movwf	strtol@base+1
 11003     0766                     l4109:
 11004     0766  082D               	movf	strtol@base,w
 11005     0767  042E               	iorwf	strtol@base+1,w
 11006     0768  1D03               	btfss	3,2
 11007     0769  2F6B               	goto	u4191
 11008     076A  2F6C               	goto	u4190
 11009     076B                     u4191:
 11010     076B  2F70               	goto	l4113
 11011     076C                     u4190:
 11012     076C                     l4111:
 11013     076C  300A               	movlw	10
 11014     076D  00AD               	movwf	strtol@base
 11015     076E  3000               	movlw	0
 11016     076F  00AE               	movwf	strtol@base+1
 11017     0770                     l4113:
 11018     0770  083A               	movf	strtol@c,w
 11019     0771  319E  26F8  3186   	fcall	_isalpha
 11020     0774  1C03               	btfss	3,0
 11021     0775  2F77               	goto	u4201
 11022     0776  2F78               	goto	u4200
 11023     0777                     u4201:
 11024     0777  2F81               	goto	l4117
 11025     0778                     u4200:
 11026     0778                     l4115:
 11027     0778  0140               	movlb	0	; select bank0
 11028     0779  083A               	movf	strtol@c,w
 11029     077A  319E  26B1  3186   	fcall	_toupper
 11030     077D  3EC9               	addlw	201
 11031     077E  0140               	movlb	0	; select bank0
 11032     077F  00BA               	movwf	strtol@c
 11033     0780  2F8D               	goto	l4121
 11034     0781                     l4117:
 11035     0781  0140               	movlb	0	; select bank0
 11036     0782  083A               	movf	strtol@c,w
 11037     0783  319E  2677  3186   	fcall	_isdigit
 11038     0786  1C03               	btfss	3,0
 11039     0787  2F89               	goto	u4211
 11040     0788  2F8A               	goto	u4210
 11041     0789                     u4211:
 11042     0789  2FCE               	goto	l4131
 11043     078A                     u4210:
 11044     078A                     l4119:
 11045     078A  3030               	movlw	48
 11046     078B  0140               	movlb	0	; select bank0
 11047     078C  02BA               	subwf	strtol@c,f
 11048     078D                     l4121:
 11049     078D  082E               	movf	strtol@base+1,w
 11050     078E  3A80               	xorlw	128
 11051     078F  3C80               	sublw	128
 11052     0790  1D03               	skipz
 11053     0791  2F94               	goto	u4225
 11054     0792  082D               	movf	strtol@base,w
 11055     0793  023A               	subwf	strtol@c,w
 11056     0794                     u4225:
 11057     0794  1C03               	skipc
 11058     0795  2F97               	goto	u4221
 11059     0796  2F98               	goto	u4220
 11060     0797                     u4221:
 11061     0797  2F99               	goto	l4125
 11062     0798                     u4220:
 11063     0798  2FCE               	goto	l4131
 11064     0799                     l4125:
 11065     0799  0140               	movlb	0	; select bank0
 11066     079A  083A               	movf	strtol@c,w
 11067     079B  00B0               	movwf	??_strtol
 11068     079C  01B1               	clrf	??_strtol+1
 11069     079D  01B2               	clrf	??_strtol+2
 11070     079E  01B3               	clrf	??_strtol+3
 11071     079F  082D               	movf	strtol@base,w
 11072     07A0  00A0               	movwf	___lmul@multiplier
 11073     07A1  082E               	movf	strtol@base+1,w
 11074     07A2  00A1               	movwf	___lmul@multiplier+1
 11075     07A3  0D89               	rlf	9,f
 11076     07A4  3B89               	subwfb	9,f
 11077     07A5  0989               	comf	9,f
 11078     07A6  00A2               	movwf	___lmul@multiplier+2
 11079     07A7  00A3               	movwf	___lmul@multiplier+3
 11080     07A8  0838               	movf	strtol@a+3,w
 11081     07A9  00A7               	movwf	___lmul@multiplicand+3
 11082     07AA  0837               	movf	strtol@a+2,w
 11083     07AB  00A6               	movwf	___lmul@multiplicand+2
 11084     07AC  0836               	movf	strtol@a+1,w
 11085     07AD  00A5               	movwf	___lmul@multiplicand+1
 11086     07AE  0835               	movf	strtol@a,w
 11087     07AF  00A4               	movwf	___lmul@multiplicand
 11088     07B0  3190  20DA  3186   	fcall	___lmul
 11089     07B3  0140               	movlb	0	; select bank0
 11090     07B4  0820               	movf	?___lmul,w
 11091     07B5  07B0               	addwf	??_strtol,f
 11092     07B6  0821               	movf	?___lmul+1,w
 11093     07B7  3DB1               	addwfc	??_strtol+1,f
 11094     07B8  0822               	movf	?___lmul+2,w
 11095     07B9  3DB2               	addwfc	??_strtol+2,f
 11096     07BA  0823               	movf	?___lmul+3,w
 11097     07BB  3DB3               	addwfc	??_strtol+3,f
 11098     07BC  0833               	movf	??_strtol+3,w
 11099     07BD  00B8               	movwf	strtol@a+3
 11100     07BE  0832               	movf	??_strtol+2,w
 11101     07BF  00B7               	movwf	strtol@a+2
 11102     07C0  0831               	movf	??_strtol+1,w
 11103     07C1  00B6               	movwf	strtol@a+1
 11104     07C2  0830               	movf	??_strtol,w
 11105     07C3  00B5               	movwf	strtol@a
 11106     07C4                     l4127:
 11107     07C4  0839               	movf	strtol@s,w
 11108     07C5  0086               	movwf	6
 11109     07C6  0187               	clrf	7
 11110     07C7  0801               	movf	1,w
 11111     07C8  00BA               	movwf	strtol@c
 11112     07C9                     l4129:
 11113     07C9  3001               	movlw	1
 11114     07CA  00B0               	movwf	??_strtol
 11115     07CB  0830               	movf	??_strtol,w
 11116     07CC  07B9               	addwf	strtol@s,f
 11117     07CD  2F70               	goto	l4113
 11118     07CE                     l4131:
 11119     07CE  0140               	movlb	0	; select bank0
 11120     07CF  082C               	movf	strtol@endptr,w
 11121     07D0  1903               	btfsc	3,2
 11122     07D1  2FD3               	goto	u4231
 11123     07D2  2FD4               	goto	u4230
 11124     07D3                     u4231:
 11125     07D3  2FDA               	goto	l4135
 11126     07D4                     u4230:
 11127     07D4                     l4133:
 11128     07D4  082C               	movf	strtol@endptr,w
 11129     07D5  0086               	movwf	6
 11130     07D6  0187               	clrf	7
 11131     07D7  0839               	movf	strtol@s,w
 11132     07D8  3EFF               	addlw	-1
 11133     07D9  0081               	movwf	1
 11134     07DA                     l4135:
 11135     07DA  0834               	movf	strtol@sign,w
 11136     07DB  1903               	btfsc	3,2
 11137     07DC  2FDE               	goto	u4241
 11138     07DD  2FDF               	goto	u4240
 11139     07DE                     u4241:
 11140     07DE  2FEF               	goto	l4141
 11141     07DF                     u4240:
 11142     07DF                     l4137:
 11143     07DF  0935               	comf	strtol@a,w
 11144     07E0  00AC               	movwf	?_strtol
 11145     07E1  0936               	comf	strtol@a+1,w
 11146     07E2  00AD               	movwf	?_strtol+1
 11147     07E3  0937               	comf	strtol@a+2,w
 11148     07E4  00AE               	movwf	?_strtol+2
 11149     07E5  0938               	comf	strtol@a+3,w
 11150     07E6  00AF               	movwf	?_strtol+3
 11151     07E7  0AAC               	incf	?_strtol,f
 11152     07E8  1903               	skipnz
 11153     07E9  0AAD               	incf	?_strtol+1,f
 11154     07EA  1903               	skipnz
 11155     07EB  0AAE               	incf	?_strtol+2,f
 11156     07EC  1903               	skipnz
 11157     07ED  0AAF               	incf	?_strtol+3,f
 11158     07EE  2FF7               	goto	l1484
 11159     07EF                     l4141:
 11160     07EF  0838               	movf	strtol@a+3,w
 11161     07F0  00AF               	movwf	?_strtol+3
 11162     07F1  0837               	movf	strtol@a+2,w
 11163     07F2  00AE               	movwf	?_strtol+2
 11164     07F3  0836               	movf	strtol@a+1,w
 11165     07F4  00AD               	movwf	?_strtol+1
 11166     07F5  0835               	movf	strtol@a,w
 11167     07F6  00AC               	movwf	?_strtol
 11168     07F7                     l1484:
 11169     07F7  0008               	return
 11170     07F8                     __end_of_strtol:
 11171                           
 11172                           	psect	text9
 11173     1EB1                     __ptext9:	
 11174 ;; *************** function _toupper *****************
 11175 ;; Defined at:
 11176 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/toupper.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;  c               1    wreg     unsigned char 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  c               1    1[BANK0 ] unsigned char 
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      unsigned char 
 11183 ;; Registers used:
 11184 ;;		wreg, status,2, status,0
 11185 ;; Tracked objects:
 11186 ;;		On entry : 0/0
 11187 ;;		On exit  : 0/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;Total ram usage:        2 bytes
 11195 ;; Hardware stack levels used: 1
 11196 ;; Hardware stack levels required when called: 2
 11197 ;; This function calls:
 11198 ;;		Nothing
 11199 ;; This function is called by:
 11200 ;;		_strtol
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204     1EB1                     _toupper:	
 11205                           ;psect for function _toupper
 11206                           
 11207                           
 11208                           ;incstack = 0
 11209                           ; Regs used in _toupper: [wreg+status,2+status,0]
 11210                           ;toupper@c stored from wreg
 11211     1EB1  0140               	movlb	0	; select bank0
 11212     1EB2  00A1               	movwf	toupper@c
 11213     1EB3                     l3839:
 11214     1EB3  307B               	movlw	123
 11215     1EB4  0221               	subwf	toupper@c,w
 11216     1EB5  1803               	skipnc
 11217     1EB6  2EB8               	goto	u3681
 11218     1EB7  2EB9               	goto	u3680
 11219     1EB8                     u3681:
 11220     1EB8  2EC3               	goto	l3845
 11221     1EB9                     u3680:
 11222     1EB9                     l3841:
 11223     1EB9  3061               	movlw	97
 11224     1EBA  0221               	subwf	toupper@c,w
 11225     1EBB  1C03               	skipc
 11226     1EBC  2EBE               	goto	u3691
 11227     1EBD  2EBF               	goto	u3690
 11228     1EBE                     u3691:
 11229     1EBE  2EC3               	goto	l3845
 11230     1EBF                     u3690:
 11231     1EBF                     l3843:
 11232     1EBF  30DF               	movlw	223
 11233     1EC0  00A0               	movwf	??_toupper
 11234     1EC1  0820               	movf	??_toupper,w
 11235     1EC2  05A1               	andwf	toupper@c,f
 11236     1EC3                     l3845:
 11237     1EC3  0821               	movf	toupper@c,w
 11238     1EC4                     l1505:
 11239     1EC4  0008               	return
 11240     1EC5                     __end_of_toupper:
 11241                           
 11242                           	psect	text10
 11243     1EC5                     __ptext10:	
 11244 ;; *************** function _isspace *****************
 11245 ;; Defined at:
 11246 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isspace.c"
 11247 ;; Parameters:    Size  Location     Type
 11248 ;;  c               1    wreg     unsigned char 
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;  c               1    1[BANK0 ] unsigned char 
 11251 ;; Return value:  Size  Location     Type
 11252 ;;		None               void
 11253 ;; Registers used:
 11254 ;;		wreg, status,2, status,0
 11255 ;; Tracked objects:
 11256 ;;		On entry : 0/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11264 ;;Total ram usage:        2 bytes
 11265 ;; Hardware stack levels used: 1
 11266 ;; Hardware stack levels required when called: 2
 11267 ;; This function calls:
 11268 ;;		Nothing
 11269 ;; This function is called by:
 11270 ;;		_strtol
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274     1EC5                     _isspace:	
 11275                           ;psect for function _isspace
 11276                           
 11277                           
 11278                           ;incstack = 0
 11279                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11280                           ;isspace@c stored from wreg
 11281     1EC5  0140               	movlb	0	; select bank0
 11282     1EC6  00A1               	movwf	isspace@c
 11283     1EC7                     l3811:
 11284     1EC7  01A0               	clrf	_isspace$1924
 11285     1EC8  0AA0               	incf	_isspace$1924,f
 11286     1EC9                     l3813:
 11287     1EC9  3020               	movlw	32
 11288     1ECA  0621               	xorwf	isspace@c,w
 11289     1ECB  1903               	btfsc	3,2
 11290     1ECC  2ECE               	goto	u3621
 11291     1ECD  2ECF               	goto	u3620
 11292     1ECE                     u3621:
 11293     1ECE  2EDC               	goto	l3821
 11294     1ECF                     u3620:
 11295     1ECF                     l3815:
 11296     1ECF  300E               	movlw	14
 11297     1ED0  0221               	subwf	isspace@c,w
 11298     1ED1  1803               	skipnc
 11299     1ED2  2ED4               	goto	u3631
 11300     1ED3  2ED5               	goto	u3630
 11301     1ED4                     u3631:
 11302     1ED4  2EDB               	goto	l3819
 11303     1ED5                     u3630:
 11304     1ED5                     l3817:
 11305     1ED5  3009               	movlw	9
 11306     1ED6  0221               	subwf	isspace@c,w
 11307     1ED7  1803               	skipnc
 11308     1ED8  2EDA               	goto	u3641
 11309     1ED9  2EDB               	goto	u3640
 11310     1EDA                     u3641:
 11311     1EDA  2EDC               	goto	l3821
 11312     1EDB                     u3640:
 11313     1EDB                     l3819:
 11314     1EDB  01A0               	clrf	_isspace$1924
 11315     1EDC                     l3821:
 11316     1EDC  0C20               	rrf	_isspace$1924,w
 11317     1EDD                     l1496:
 11318     1EDD  0008               	return
 11319     1EDE                     __end_of_isspace:
 11320                           
 11321                           	psect	text11
 11322     1EF8                     __ptext11:	
 11323 ;; *************** function _isalpha *****************
 11324 ;; Defined at:
 11325 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isalpha.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  c               1    wreg     unsigned char 
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;  c               1    3[BANK0 ] unsigned char 
 11330 ;; Return value:  Size  Location     Type
 11331 ;;		None               void
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0, pclath, cstack
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;Total ram usage:        2 bytes
 11344 ;; Hardware stack levels used: 1
 11345 ;; Hardware stack levels required when called: 3
 11346 ;; This function calls:
 11347 ;;		_isupper
 11348 ;; This function is called by:
 11349 ;;		_strtol
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353     1EF8                     _isalpha:	
 11354                           ;psect for function _isalpha
 11355                           
 11356                           
 11357                           ;incstack = 0
 11358                           ; Regs used in _isalpha: [wreg+status,2+status,0+pclath+cstack]
 11359                           ;isalpha@c stored from wreg
 11360     1EF8  0140               	movlb	0	; select bank0
 11361     1EF9  00A3               	movwf	isalpha@c
 11362     1EFA                     l3825:
 11363     1EFA  01A2               	clrf	_isalpha$1921
 11364     1EFB  0AA2               	incf	_isalpha$1921,f
 11365     1EFC                     l3827:
 11366     1EFC  307B               	movlw	123
 11367     1EFD  0223               	subwf	isalpha@c,w
 11368     1EFE  1803               	skipnc
 11369     1EFF  2F01               	goto	u3651
 11370     1F00  2F02               	goto	u3650
 11371     1F01                     u3651:
 11372     1F01  2F08               	goto	l3831
 11373     1F02                     u3650:
 11374     1F02                     l3829:
 11375     1F02  3061               	movlw	97
 11376     1F03  0223               	subwf	isalpha@c,w
 11377     1F04  1803               	skipnc
 11378     1F05  2F07               	goto	u3661
 11379     1F06  2F08               	goto	u3660
 11380     1F07                     u3661:
 11381     1F07  2F12               	goto	l3835
 11382     1F08                     u3660:
 11383     1F08                     l3831:
 11384     1F08  0823               	movf	isalpha@c,w
 11385     1F09  319E  268A  319E   	fcall	_isupper
 11386     1F0C  1803               	btfsc	3,0
 11387     1F0D  2F0F               	goto	u3671
 11388     1F0E  2F10               	goto	u3670
 11389     1F0F                     u3671:
 11390     1F0F  2F12               	goto	l3835
 11391     1F10                     u3670:
 11392     1F10                     l3833:
 11393     1F10  0140               	movlb	0	; select bank0
 11394     1F11  01A2               	clrf	_isalpha$1921
 11395     1F12                     l3835:
 11396     1F12  0140               	movlb	0	; select bank0
 11397     1F13  0C22               	rrf	_isalpha$1921,w
 11398     1F14                     l1491:
 11399     1F14  0008               	return
 11400     1F15                     __end_of_isalpha:
 11401                           
 11402                           	psect	text12
 11403     1E8A                     __ptext12:	
 11404 ;; *************** function _isupper *****************
 11405 ;; Defined at:
 11406 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isupper.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;  c               1    wreg     unsigned char 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;  c               1    1[BANK0 ] unsigned char 
 11411 ;; Return value:  Size  Location     Type
 11412 ;;		None               void
 11413 ;; Registers used:
 11414 ;;		wreg, status,2, status,0
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;Total ram usage:        2 bytes
 11425 ;; Hardware stack levels used: 1
 11426 ;; Hardware stack levels required when called: 2
 11427 ;; This function calls:
 11428 ;;		Nothing
 11429 ;; This function is called by:
 11430 ;;		_isalpha
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434     1E8A                     _isupper:	
 11435                           ;psect for function _isupper
 11436                           
 11437                           
 11438                           ;incstack = 0
 11439                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11440                           ;isupper@c stored from wreg
 11441     1E8A  0140               	movlb	0	; select bank0
 11442     1E8B  00A1               	movwf	isupper@c
 11443     1E8C                     l3405:
 11444     1E8C  01A0               	clrf	_isupper$1927
 11445     1E8D                     l3407:
 11446     1E8D  305B               	movlw	91
 11447     1E8E  0221               	subwf	isupper@c,w
 11448     1E8F  1803               	skipnc
 11449     1E90  2E92               	goto	u2811
 11450     1E91  2E93               	goto	u2810
 11451     1E92                     u2811:
 11452     1E92  2E9B               	goto	l3413
 11453     1E93                     u2810:
 11454     1E93                     l3409:
 11455     1E93  3041               	movlw	65
 11456     1E94  0221               	subwf	isupper@c,w
 11457     1E95  1C03               	skipc
 11458     1E96  2E98               	goto	u2821
 11459     1E97  2E99               	goto	u2820
 11460     1E98                     u2821:
 11461     1E98  2E9B               	goto	l3413
 11462     1E99                     u2820:
 11463     1E99                     l3411:
 11464     1E99  01A0               	clrf	_isupper$1927
 11465     1E9A  0AA0               	incf	_isupper$1927,f
 11466     1E9B                     l3413:
 11467     1E9B  0C20               	rrf	_isupper$1927,w
 11468     1E9C                     l1501:
 11469     1E9C  0008               	return
 11470     1E9D                     __end_of_isupper:
 11471                           
 11472                           	psect	text13
 11473     10DA                     __ptext13:	
 11474 ;; *************** function ___lmul *****************
 11475 ;; Defined at:
 11476 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul32.c"
 11477 ;; Parameters:    Size  Location     Type
 11478 ;;  multiplier      4    0[BANK0 ] unsigned long 
 11479 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  product         4    8[BANK0 ] unsigned long 
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  4    0[BANK0 ] unsigned long 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11491 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11492 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11494 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11495 ;;Total ram usage:       12 bytes
 11496 ;; Hardware stack levels used: 1
 11497 ;; Hardware stack levels required when called: 2
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_strtol
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505     10DA                     ___lmul:	
 11506                           ;psect for function ___lmul
 11507                           
 11508     10DA                     l3783:	
 11509                           ;incstack = 0
 11510                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11511                           
 11512     10DA  3000               	movlw	0
 11513     10DB  0140               	movlb	0	; select bank0
 11514     10DC  00AB               	movwf	___lmul@product+3
 11515     10DD  3000               	movlw	0
 11516     10DE  00AA               	movwf	___lmul@product+2
 11517     10DF  3000               	movlw	0
 11518     10E0  00A9               	movwf	___lmul@product+1
 11519     10E1  3000               	movlw	0
 11520     10E2  00A8               	movwf	___lmul@product
 11521     10E3                     l3785:
 11522     10E3  1C20               	btfss	___lmul@multiplier,0
 11523     10E4  28E6               	goto	u3551
 11524     10E5  28E7               	goto	u3550
 11525     10E6                     u3551:
 11526     10E6  28EF               	goto	l3789
 11527     10E7                     u3550:
 11528     10E7                     l3787:
 11529     10E7  0824               	movf	___lmul@multiplicand,w
 11530     10E8  07A8               	addwf	___lmul@product,f
 11531     10E9  0825               	movf	___lmul@multiplicand+1,w
 11532     10EA  3DA9               	addwfc	___lmul@product+1,f
 11533     10EB  0826               	movf	___lmul@multiplicand+2,w
 11534     10EC  3DAA               	addwfc	___lmul@product+2,f
 11535     10ED  0827               	movf	___lmul@multiplicand+3,w
 11536     10EE  3DAB               	addwfc	___lmul@product+3,f
 11537     10EF                     l3789:
 11538     10EF  3001               	movlw	1
 11539     10F0                     u3565:
 11540     10F0  35A4               	lslf	___lmul@multiplicand,f
 11541     10F1  0DA5               	rlf	___lmul@multiplicand+1,f
 11542     10F2  0DA6               	rlf	___lmul@multiplicand+2,f
 11543     10F3  0DA7               	rlf	___lmul@multiplicand+3,f
 11544     10F4  0B89               	decfsz	9,f
 11545     10F5  28F0               	goto	u3565
 11546     10F6                     l3791:
 11547     10F6  3001               	movlw	1
 11548     10F7                     u3575:
 11549     10F7  36A3               	lsrf	___lmul@multiplier+3,f
 11550     10F8  0CA2               	rrf	___lmul@multiplier+2,f
 11551     10F9  0CA1               	rrf	___lmul@multiplier+1,f
 11552     10FA  0CA0               	rrf	___lmul@multiplier,f
 11553     10FB  0B89               	decfsz	9,f
 11554     10FC  28F7               	goto	u3575
 11555     10FD  0823               	movf	___lmul@multiplier+3,w
 11556     10FE  0422               	iorwf	___lmul@multiplier+2,w
 11557     10FF  0421               	iorwf	___lmul@multiplier+1,w
 11558     1100  0420               	iorwf	___lmul@multiplier,w
 11559     1101  1D03               	skipz
 11560     1102  2904               	goto	u3581
 11561     1103  2905               	goto	u3580
 11562     1104                     u3581:
 11563     1104  28E3               	goto	l3785
 11564     1105                     u3580:
 11565     1105                     l3793:
 11566     1105  082B               	movf	___lmul@product+3,w
 11567     1106  00A3               	movwf	?___lmul+3
 11568     1107  082A               	movf	___lmul@product+2,w
 11569     1108  00A2               	movwf	?___lmul+2
 11570     1109  0829               	movf	___lmul@product+1,w
 11571     110A  00A1               	movwf	?___lmul+1
 11572     110B  0828               	movf	___lmul@product,w
 11573     110C  00A0               	movwf	?___lmul
 11574     110D                     l1006:
 11575     110D  0008               	return
 11576     110E                     __end_of___lmul:
 11577                           
 11578                           	psect	text14
 11579     1E16                     __ptext14:	
 11580 ;; *************** function _i2c_slave_set_register_with_lock *****************
 11581 ;; Defined at:
 11582 ;;		line 41 in file "i2c_slave.c"
 11583 ;; Parameters:    Size  Location     Type
 11584 ;;  registerAddr    1    wreg     unsigned char 
 11585 ;;  value           1    2[BANK0 ] unsigned char 
 11586 ;; Auto vars:     Size  Location     Type
 11587 ;;  registerAddr    1    3[BANK0 ] unsigned char 
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  1    wreg      void 
 11590 ;; Registers used:
 11591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11597 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11601 ;;Total ram usage:        2 bytes
 11602 ;; Hardware stack levels used: 1
 11603 ;; Hardware stack levels required when called: 3
 11604 ;; This function calls:
 11605 ;;		_i2c_slave_set_register
 11606 ;; This function is called by:
 11607 ;;		_set_device_serial_number_to_i2c_slave_memorymap
 11608 ;; This function uses a non-reentrant model
 11609 ;;
 11610                           
 11611     1E16                     _i2c_slave_set_register_with_lock:	
 11612                           ;psect for function _i2c_slave_set_register_with_lock
 11613                           
 11614                           
 11615                           ;incstack = 0
 11616                           ; Regs used in _i2c_slave_set_register_with_lock: [wreg+fsr1l+fsr1h+status,2+status,0+pc
      +                          lath+cstack]
 11617                           ;i2c_slave_set_register_with_lock@registerAddress stored from wreg
 11618     1E16  0140               	movlb	0	; select bank0
 11619     1E17  00A3               	movwf	i2c_slave_set_register_with_lock@registerAddress
 11620     1E18                     l3899:
 11621                           
 11622                           ;i2c_slave.c: 42: GIE = 0;
 11623     1E18  138B               	bcf	11,7	;volatile
 11624     1E19                     l3901:
 11625                           
 11626                           ;i2c_slave.c: 43: i2c_slave_set_register(registerAddress, value);
 11627     1E19  0822               	movf	i2c_slave_set_register_with_lock@value,w
 11628     1E1A  00A0               	movwf	i2c_slave_set_register@value
 11629     1E1B  0823               	movf	i2c_slave_set_register_with_lock@registerAddress,w
 11630     1E1C  319E  260C  319E   	fcall	_i2c_slave_set_register
 11631     1E1F                     l3903:
 11632                           
 11633                           ;i2c_slave.c: 44: GIE = 1;
 11634     1E1F  178B               	bsf	11,7	;volatile
 11635     1E20                     l254:
 11636     1E20  0008               	return
 11637     1E21                     __end_of_i2c_slave_set_register_with_lock:
 11638                           
 11639                           	psect	text15
 11640     1E0C                     __ptext15:	
 11641 ;; *************** function _i2c_slave_set_register *****************
 11642 ;; Defined at:
 11643 ;;		line 32 in file "i2c_slave.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;  registerAddr    1    wreg     unsigned char 
 11646 ;;  value           1    0[BANK0 ] unsigned char 
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;  registerAddr    1    1[BANK0 ] unsigned char 
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  1    wreg      void 
 11651 ;; Registers used:
 11652 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11658 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;Total ram usage:        2 bytes
 11663 ;; Hardware stack levels used: 1
 11664 ;; Hardware stack levels required when called: 2
 11665 ;; This function calls:
 11666 ;;		Nothing
 11667 ;; This function is called by:
 11668 ;;		_main
 11669 ;;		_i2c_slave_set_register_with_lock
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673     1E0C                     _i2c_slave_set_register:	
 11674                           ;psect for function _i2c_slave_set_register
 11675                           
 11676                           
 11677                           ;incstack = 0
 11678                           ; Regs used in _i2c_slave_set_register: [wreg+fsr1l+fsr1h+status,2+status,0]
 11679                           ;i2c_slave_set_register@registerAddress stored from wreg
 11680     1E0C  0140               	movlb	0	; select bank0
 11681     1E0D  00A1               	movwf	i2c_slave_set_register@registerAddress
 11682     1E0E                     l3733:
 11683                           
 11684                           ;i2c_slave.c: 33: slaveData[registerAddress] = value;
 11685     1E0E  0821               	movf	i2c_slave_set_register@registerAddress,w
 11686     1E0F  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 11687     1E10  0086               	movwf	6
 11688     1E11  3002               	movlw	2	; select bank4/5
 11689     1E12  0087               	movwf	7
 11690     1E13  0820               	movf	i2c_slave_set_register@value,w
 11691     1E14  0081               	movwf	1
 11692     1E15                     l248:
 11693     1E15  0008               	return
 11694     1E16                     __end_of_i2c_slave_set_register:
 11695                           
 11696                           	psect	text16
 11697     10A7                     __ptext16:	
 11698 ;; *************** function _save_top_adc_point *****************
 11699 ;; Defined at:
 11700 ;;		line 90 in file "calibration.c"
 11701 ;; Parameters:    Size  Location     Type
 11702 ;;  states          1    wreg     PTR enum E186
 11703 ;;		 -> main@state(1), 
 11704 ;;  sensor_value    1   19[BANK0 ] PTR struct values
 11705 ;;		 -> main@sensor_value(10), 
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;  states          1   29[BANK0 ] PTR enum E186
 11708 ;;		 -> main@state(1), 
 11709 ;;  save_top_adc    8   21[BANK0 ] unsigned char [8]
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  1    wreg      void 
 11712 ;; Registers used:
 11713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : 0/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11719 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11720 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11723 ;;Total ram usage:       11 bytes
 11724 ;; Hardware stack levels used: 1
 11725 ;; Hardware stack levels required when called: 4
 11726 ;; This function calls:
 11727 ;;		_EUSART1_Write_1
 11728 ;;		_calculate_crc_and_fill_array
 11729 ;; This function is called by:
 11730 ;;		_main
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734     10A7                     _save_top_adc_point:	
 11735                           ;psect for function _save_top_adc_point
 11736                           
 11737                           
 11738                           ;incstack = 0
 11739                           ; Regs used in _save_top_adc_point: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11740                           ;save_top_adc_point@states stored from wreg
 11741     10A7  0140               	movlb	0	; select bank0
 11742     10A8  00BD               	movwf	save_top_adc_point@states
 11743     10A9                     l4557:
 11744                           
 11745                           ;calibration.c: 91: char save_top_adc_command[8] = {0x01, 0x06, 0x00, 0x3E, 0x2E, 0xE0, 
      +                          0x00, 0x00};
 11746     10A9  30DA               	movlw	low save_top_adc_point@F10607
 11747     10AA  0086               	movwf	6
 11748     10AB  3000               	movlw	high save_top_adc_point@F10607
 11749     10AC  0087               	movwf	7
 11750     10AD  3035               	movlw	low save_top_adc_point@save_top_adc_command
 11751     10AE  0084               	movwf	4
 11752     10AF  3000               	movlw	high save_top_adc_point@save_top_adc_command
 11753     10B0  0085               	movwf	5
 11754     10B1  3008               	movlw	8
 11755     10B2  00B4               	movwf	??_save_top_adc_point
 11756     10B3                     u4800:
 11757     10B3  0016               	moviw fsr1++
 11758     10B4  001A               	movwi fsr0++
 11759     10B5  0BB4               	decfsz	??_save_top_adc_point,f
 11760     10B6  28B3               	goto	u4800
 11761     10B7                     l4559:
 11762                           
 11763                           ;calibration.c: 92: save_top_adc_command[4] = sensor_value->ph_adc_high_byte;
 11764     10B7  0833               	movf	save_top_adc_point@sensor_value,w
 11765     10B8  0086               	movwf	6
 11766     10B9  3001               	movlw	1	; select bank2/3
 11767     10BA  0087               	movwf	7
 11768     10BB  3001               	movlw	1	; select bank2/3
 11769     10BC  3F44               	moviw [4]fsr1
 11770     10BD  00B9               	movwf	save_top_adc_point@save_top_adc_command+4
 11771     10BE                     l4561:
 11772                           
 11773                           ;calibration.c: 93: save_top_adc_command[5] = sensor_value->ph_adc_low_byte;
 11774     10BE  0833               	movf	save_top_adc_point@sensor_value,w
 11775     10BF  0086               	movwf	6
 11776     10C0  3001               	movlw	1	; select bank2/3
 11777     10C1  0087               	movwf	7
 11778     10C2  3001               	movlw	1	; select bank2/3
 11779     10C3  3F45               	moviw [5]fsr1
 11780     10C4  00BA               	movwf	save_top_adc_point@save_top_adc_command+5
 11781     10C5                     l4563:
 11782                           
 11783                           ;calibration.c: 94: calculate_crc_and_fill_array(save_top_adc_command, 6);
 11784     10C5  3006               	movlw	6
 11785     10C6  00AE               	movwf	calculate_crc_and_fill_array@data_len
 11786     10C7  3035               	movlw	(low (save_top_adc_point@save_top_adc_command| 0))& (0+255)
 11787     10C8  319F  2715  3190   	fcall	_calculate_crc_and_fill_array
 11788     10CB                     l4565:
 11789                           
 11790                           ;calibration.c: 95: EUSART1_Write_1(save_top_adc_command, 8);
 11791     10CB  3008               	movlw	8
 11792     10CC  0140               	movlb	0	; select bank0
 11793     10CD  00A1               	movwf	EUSART1_Write_1@length
 11794     10CE  3035               	movlw	(low (save_top_adc_point@save_top_adc_command| 0))& (0+255)
 11795     10CF  319E  26DE  3190   	fcall	_EUSART1_Write_1
 11796     10D2                     l4567:
 11797                           
 11798                           ;calibration.c: 96: *states = STATE_CALIBRATE;
 11799     10D2  0140               	movlb	0	; select bank0
 11800     10D3  083D               	movf	save_top_adc_point@states,w
 11801     10D4  0086               	movwf	6
 11802     10D5  3001               	movlw	1	; select bank2/3
 11803     10D6  0087               	movwf	7
 11804     10D7  3004               	movlw	4
 11805     10D8  0081               	movwf	1
 11806     10D9                     l682:
 11807     10D9  0008               	return
 11808     10DA                     __end_of_save_top_adc_point:
 11809                           
 11810                           	psect	text17
 11811     1074                     __ptext17:	
 11812 ;; *************** function _save_bottom_adc_point *****************
 11813 ;; Defined at:
 11814 ;;		line 98 in file "calibration.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;  states          1    wreg     PTR enum E186
 11817 ;;		 -> main@state(1), 
 11818 ;;  sensor_value    1   19[BANK0 ] PTR struct values
 11819 ;;		 -> main@sensor_value(10), 
 11820 ;; Auto vars:     Size  Location     Type
 11821 ;;  states          1   53[BANK0 ] PTR enum E186
 11822 ;;		 -> main@state(1), 
 11823 ;;  save_bottom_   32   21[BANK0 ] unsigned char [32]
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      void 
 11826 ;; Registers used:
 11827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11833 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11834 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11836 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11837 ;;Total ram usage:       35 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; Hardware stack levels required when called: 4
 11840 ;; This function calls:
 11841 ;;		_EUSART1_Write_1
 11842 ;;		_calculate_crc_and_fill_array
 11843 ;; This function is called by:
 11844 ;;		_main
 11845 ;; This function uses a non-reentrant model
 11846 ;;
 11847                           
 11848     1074                     _save_bottom_adc_point:	
 11849                           ;psect for function _save_bottom_adc_point
 11850                           
 11851                           
 11852                           ;incstack = 0
 11853                           ; Regs used in _save_bottom_adc_point: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11854                           ;save_bottom_adc_point@states stored from wreg
 11855     1074  0140               	movlb	0	; select bank0
 11856     1075  00D5               	movwf	save_bottom_adc_point@states
 11857     1076                     l4569:
 11858                           
 11859                           ;calibration.c: 99: char save_bottom_adc_command[32] = {0x01, 0x06, 0x00, 0x3F, 0x00, 0x
      +                          FF, 0x00, 0x00};
 11860     1076  3020               	movlw	low save_bottom_adc_point@F10612
 11861     1077  0086               	movwf	6
 11862     1078  3003               	movlw	high save_bottom_adc_point@F10612
 11863     1079  0087               	movwf	7
 11864     107A  3035               	movlw	low save_bottom_adc_point@save_bottom_adc_command
 11865     107B  0084               	movwf	4
 11866     107C  3000               	movlw	high save_bottom_adc_point@save_bottom_adc_command
 11867     107D  0085               	movwf	5
 11868     107E  3020               	movlw	32
 11869     107F  00B4               	movwf	??_save_bottom_adc_point
 11870     1080                     u4810:
 11871     1080  0016               	moviw fsr1++
 11872     1081  001A               	movwi fsr0++
 11873     1082  0BB4               	decfsz	??_save_bottom_adc_point,f
 11874     1083  2880               	goto	u4810
 11875     1084                     l4571:
 11876                           
 11877                           ;calibration.c: 100: save_bottom_adc_command[4] = sensor_value->ph_adc_high_byte;
 11878     1084  0833               	movf	save_bottom_adc_point@sensor_value,w
 11879     1085  0086               	movwf	6
 11880     1086  3001               	movlw	1	; select bank2/3
 11881     1087  0087               	movwf	7
 11882     1088  3001               	movlw	1	; select bank2/3
 11883     1089  3F44               	moviw [4]fsr1
 11884     108A  00B9               	movwf	save_bottom_adc_point@save_bottom_adc_command+4
 11885     108B                     l4573:
 11886                           
 11887                           ;calibration.c: 101: save_bottom_adc_command[5] = sensor_value->ph_adc_low_byte;
 11888     108B  0833               	movf	save_bottom_adc_point@sensor_value,w
 11889     108C  0086               	movwf	6
 11890     108D  3001               	movlw	1	; select bank2/3
 11891     108E  0087               	movwf	7
 11892     108F  3001               	movlw	1	; select bank2/3
 11893     1090  3F45               	moviw [5]fsr1
 11894     1091  00BA               	movwf	save_bottom_adc_point@save_bottom_adc_command+5
 11895     1092                     l4575:
 11896                           
 11897                           ;calibration.c: 103: calculate_crc_and_fill_array(save_bottom_adc_command, 6);
 11898     1092  3006               	movlw	6
 11899     1093  00AE               	movwf	calculate_crc_and_fill_array@data_len
 11900     1094  3035               	movlw	(low (save_bottom_adc_point@save_bottom_adc_command| 0))& (0+255)
 11901     1095  319F  2715  3190   	fcall	_calculate_crc_and_fill_array
 11902     1098                     l4577:
 11903                           
 11904                           ;calibration.c: 104: EUSART1_Write_1(save_bottom_adc_command, 8);
 11905     1098  3008               	movlw	8
 11906     1099  0140               	movlb	0	; select bank0
 11907     109A  00A1               	movwf	EUSART1_Write_1@length
 11908     109B  3035               	movlw	(low (save_bottom_adc_point@save_bottom_adc_command| 0))& (0+255)
 11909     109C  319E  26DE  3190   	fcall	_EUSART1_Write_1
 11910     109F                     l4579:
 11911                           
 11912                           ;calibration.c: 105: *states = STATE_CALIBRATE;
 11913     109F  0140               	movlb	0	; select bank0
 11914     10A0  0855               	movf	save_bottom_adc_point@states,w
 11915     10A1  0086               	movwf	6
 11916     10A2  3001               	movlw	1	; select bank2/3
 11917     10A3  0087               	movwf	7
 11918     10A4  3004               	movlw	4
 11919     10A5  0081               	movwf	1
 11920     10A6                     l687:
 11921     10A6  0008               	return
 11922     10A7                     __end_of_save_bottom_adc_point:
 11923                           
 11924                           	psect	text18
 11925     1F15                     __ptext18:	
 11926 ;; *************** function _calculate_crc_and_fill_array *****************
 11927 ;; Defined at:
 11928 ;;		line 45 in file "calibration.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;  data            1    wreg     PTR unsigned char 
 11931 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(32), save_top_adc_point@save_top_adc_command(8), 
 11932 ;;  data_len        1   14[BANK0 ] unsigned char 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  data            1   18[BANK0 ] PTR unsigned char 
 11935 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(32), save_top_adc_point@save_top_adc_command(8), 
 11936 ;;  crc             2   16[BANK0 ] unsigned int 
 11937 ;; Return value:  Size  Location     Type
 11938 ;;                  1    wreg      void 
 11939 ;; Registers used:
 11940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11941 ;; Tracked objects:
 11942 ;;		On entry : 0/0
 11943 ;;		On exit  : 0/0
 11944 ;;		Unchanged: 0/0
 11945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11946 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11950 ;;Total ram usage:        5 bytes
 11951 ;; Hardware stack levels used: 1
 11952 ;; Hardware stack levels required when called: 3
 11953 ;; This function calls:
 11954 ;;		_crc16_modbus
 11955 ;; This function is called by:
 11956 ;;		_save_top_adc_point
 11957 ;;		_save_bottom_adc_point
 11958 ;; This function uses a non-reentrant model
 11959 ;;
 11960                           
 11961     1F15                     _calculate_crc_and_fill_array:	
 11962                           ;psect for function _calculate_crc_and_fill_array
 11963                           
 11964                           
 11965                           ;incstack = 0
 11966                           ; Regs used in _calculate_crc_and_fill_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 11967                           ;calculate_crc_and_fill_array@data stored from wreg
 11968     1F15  0140               	movlb	0	; select bank0
 11969     1F16  00B2               	movwf	calculate_crc_and_fill_array@data
 11970     1F17                     l4149:
 11971                           
 11972                           ;calibration.c: 46: uint16_t crc = crc16_modbus(data, data_len);
 11973     1F17  082E               	movf	calculate_crc_and_fill_array@data_len,w
 11974     1F18  00A0               	movwf	crc16_modbus@len
 11975     1F19  0832               	movf	calculate_crc_and_fill_array@data,w
 11976     1F1A  3193  2327  319F   	fcall	_crc16_modbus
 11977     1F1D  0140               	movlb	0	; select bank0
 11978     1F1E  0821               	movf	?_crc16_modbus+1,w
 11979     1F1F  00B1               	movwf	calculate_crc_and_fill_array@crc+1
 11980     1F20  0820               	movf	?_crc16_modbus,w
 11981     1F21  00B0               	movwf	calculate_crc_and_fill_array@crc
 11982     1F22                     l4151:
 11983                           
 11984                           ;calibration.c: 47: data[data_len] = crc & 0xFF;
 11985     1F22  082E               	movf	calculate_crc_and_fill_array@data_len,w
 11986     1F23  0732               	addwf	calculate_crc_and_fill_array@data,w
 11987     1F24  00AF               	movwf	??_calculate_crc_and_fill_array
 11988     1F25  082F               	movf	??_calculate_crc_and_fill_array,w
 11989     1F26  0086               	movwf	6
 11990     1F27  0187               	clrf	7
 11991     1F28  0830               	movf	calculate_crc_and_fill_array@crc,w
 11992     1F29  0081               	movwf	1
 11993     1F2A                     l4153:
 11994                           
 11995                           ;calibration.c: 48: data[data_len+1] = (crc >> 8) & 0xFF;
 11996     1F2A  082E               	movf	calculate_crc_and_fill_array@data_len,w
 11997     1F2B  0732               	addwf	calculate_crc_and_fill_array@data,w
 11998     1F2C  00AF               	movwf	??_calculate_crc_and_fill_array
 11999     1F2D  0A2F               	incf	??_calculate_crc_and_fill_array,w
 12000     1F2E  0086               	movwf	6
 12001     1F2F  0187               	clrf	7
 12002     1F30  0831               	movf	calculate_crc_and_fill_array@crc+1,w
 12003     1F31  0081               	movwf	1
 12004     1F32                     l655:
 12005     1F32  0008               	return
 12006     1F33                     __end_of_calculate_crc_and_fill_array:
 12007                           
 12008                           	psect	text19
 12009     1327                     __ptext19:	
 12010 ;; *************** function _crc16_modbus *****************
 12011 ;; Defined at:
 12012 ;;		line 27 in file "calibration.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;  data            1    wreg     PTR unsigned char 
 12015 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(32), save_top_adc_point@save_top_adc_command(8), 
 12016 ;;  len             1    0[BANK0 ] unsigned char 
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;  data            1    7[BANK0 ] PTR unsigned char 
 12019 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(32), save_top_adc_point@save_top_adc_command(8), 
 12020 ;;  j               2   10[BANK0 ] int 
 12021 ;;  i               2    8[BANK0 ] int 
 12022 ;;  crc             2   12[BANK0 ] unsigned int 
 12023 ;;  poly            2    5[BANK0 ] unsigned int 
 12024 ;; Return value:  Size  Location     Type
 12025 ;;                  2    0[BANK0 ] unsigned int 
 12026 ;; Registers used:
 12027 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12033 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;Total ram usage:       14 bytes
 12038 ;; Hardware stack levels used: 1
 12039 ;; Hardware stack levels required when called: 2
 12040 ;; This function calls:
 12041 ;;		Nothing
 12042 ;; This function is called by:
 12043 ;;		_calculate_crc_and_fill_array
 12044 ;; This function uses a non-reentrant model
 12045 ;;
 12046                           
 12047     1327                     _crc16_modbus:	
 12048                           ;psect for function _crc16_modbus
 12049                           
 12050                           
 12051                           ;incstack = 0
 12052                           ; Regs used in _crc16_modbus: [wreg+fsr1l+fsr1h+status,2+status,0]
 12053                           ;crc16_modbus@data stored from wreg
 12054     1327  0140               	movlb	0	; select bank0
 12055     1328  00A7               	movwf	crc16_modbus@data
 12056     1329                     l3755:
 12057                           
 12058                           ;calibration.c: 28: uint16_t crc = 0xFFFF;
 12059     1329  30FF               	movlw	255
 12060     132A  00AC               	movwf	crc16_modbus@crc
 12061     132B  30FF               	movlw	255
 12062     132C  00AD               	movwf	crc16_modbus@crc+1
 12063                           
 12064                           ;calibration.c: 29: uint16_t poly = 0xA001;
 12065     132D  3001               	movlw	1
 12066     132E  00A5               	movwf	crc16_modbus@poly
 12067     132F  30A0               	movlw	160
 12068     1330  00A6               	movwf	crc16_modbus@poly+1
 12069     1331                     l3757:
 12070                           
 12071                           ;calibration.c: 31: for (int i = 0; i < len; i++) {
 12072     1331  01A8               	clrf	crc16_modbus@i
 12073     1332  01A9               	clrf	crc16_modbus@i+1
 12074     1333  2B6E               	goto	l645
 12075     1334                     l3759:
 12076                           
 12077                           ;calibration.c: 32: crc ^= data[i];
 12078     1334  0140               	movlb	0	; select bank0
 12079     1335  0828               	movf	crc16_modbus@i,w
 12080     1336  0727               	addwf	crc16_modbus@data,w
 12081     1337  00A2               	movwf	??_crc16_modbus
 12082     1338  0822               	movf	??_crc16_modbus,w
 12083     1339  0086               	movwf	6
 12084     133A  0187               	clrf	7
 12085     133B  0801               	movf	1,w
 12086     133C  00A3               	movwf	??_crc16_modbus+1
 12087     133D  01A4               	clrf	??_crc16_modbus+2
 12088     133E  0823               	movf	??_crc16_modbus+1,w
 12089     133F  06AC               	xorwf	crc16_modbus@crc,f
 12090     1340  0824               	movf	??_crc16_modbus+2,w
 12091     1341  06AD               	xorwf	crc16_modbus@crc+1,f
 12092     1342                     l3761:
 12093                           
 12094                           ;calibration.c: 33: for (int j = 0; j < 8; j++) {
 12095     1342  01AA               	clrf	crc16_modbus@j
 12096     1343  01AB               	clrf	crc16_modbus@j+1
 12097     1344                     l647:
 12098                           
 12099                           ;calibration.c: 34: if (crc & 0x0001) {
 12100     1344  0140               	movlb	0	; select bank0
 12101     1345  1C2C               	btfss	crc16_modbus@crc,0
 12102     1346  2B48               	goto	u3501
 12103     1347  2B49               	goto	u3500
 12104     1348                     u3501:
 12105     1348  2B53               	goto	l3771
 12106     1349                     u3500:
 12107     1349                     l3767:
 12108                           
 12109                           ;calibration.c: 35: crc >>= 1;
 12110     1349  3001               	movlw	1
 12111     134A                     u3515:
 12112     134A  36AD               	lsrf	crc16_modbus@crc+1,f
 12113     134B  0CAC               	rrf	crc16_modbus@crc,f
 12114     134C  0B89               	decfsz	9,f
 12115     134D  2B4A               	goto	u3515
 12116     134E                     l3769:
 12117                           
 12118                           ;calibration.c: 36: crc ^= poly;
 12119     134E  0825               	movf	crc16_modbus@poly,w
 12120     134F  06AC               	xorwf	crc16_modbus@crc,f
 12121     1350  0826               	movf	crc16_modbus@poly+1,w
 12122     1351  06AD               	xorwf	crc16_modbus@crc+1,f
 12123                           
 12124                           ;calibration.c: 37: } else {
 12125     1352  2B58               	goto	l3773
 12126     1353                     l3771:
 12127                           
 12128                           ;calibration.c: 38: crc >>= 1;
 12129     1353  3001               	movlw	1
 12130     1354                     u3525:
 12131     1354  36AD               	lsrf	crc16_modbus@crc+1,f
 12132     1355  0CAC               	rrf	crc16_modbus@crc,f
 12133     1356  0B89               	decfsz	9,f
 12134     1357  2B54               	goto	u3525
 12135     1358                     l3773:
 12136     1358  3001               	movlw	1
 12137     1359  07AA               	addwf	crc16_modbus@j,f
 12138     135A  3000               	movlw	0
 12139     135B  3DAB               	addwfc	crc16_modbus@j+1,f
 12140     135C                     l3775:
 12141     135C  082B               	movf	crc16_modbus@j+1,w
 12142     135D  3A80               	xorlw	128
 12143     135E  00A2               	movwf	??_crc16_modbus
 12144     135F  3080               	movlw	128
 12145     1360  0222               	subwf	??_crc16_modbus,w
 12146     1361  1D03               	skipz
 12147     1362  2B65               	goto	u3535
 12148     1363  3008               	movlw	8
 12149     1364  022A               	subwf	crc16_modbus@j,w
 12150     1365                     u3535:
 12151     1365  1C03               	skipc
 12152     1366  2B68               	goto	u3531
 12153     1367  2B69               	goto	u3530
 12154     1368                     u3531:
 12155     1368  2B44               	goto	l647
 12156     1369                     u3530:
 12157     1369                     l3777:
 12158     1369  3001               	movlw	1
 12159     136A  0140               	movlb	0	; select bank0
 12160     136B  07A8               	addwf	crc16_modbus@i,f
 12161     136C  3000               	movlw	0
 12162     136D  3DA9               	addwfc	crc16_modbus@i+1,f
 12163     136E                     l645:
 12164     136E  0829               	movf	crc16_modbus@i+1,w
 12165     136F  3A80               	xorlw	128
 12166     1370  00A2               	movwf	??_crc16_modbus
 12167     1371  3080               	movlw	128
 12168     1372  0222               	subwf	??_crc16_modbus,w
 12169     1373  1D03               	skipz
 12170     1374  2B77               	goto	u3545
 12171     1375  0820               	movf	crc16_modbus@len,w
 12172     1376  0228               	subwf	crc16_modbus@i,w
 12173     1377                     u3545:
 12174     1377  1C03               	skipc
 12175     1378  2B7A               	goto	u3541
 12176     1379  2B7B               	goto	u3540
 12177     137A                     u3541:
 12178     137A  2B34               	goto	l3759
 12179     137B                     u3540:
 12180     137B                     l3779:
 12181                           
 12182                           ;calibration.c: 39: };calibration.c: 40: };calibration.c: 41: };calibration.c: 43: retur
      +                          n crc;
 12183     137B  0140               	movlb	0	; select bank0
 12184     137C  082D               	movf	crc16_modbus@crc+1,w
 12185     137D  00A1               	movwf	?_crc16_modbus+1
 12186     137E  082C               	movf	crc16_modbus@crc,w
 12187     137F  00A0               	movwf	?_crc16_modbus
 12188     1380                     l652:
 12189     1380  0008               	return
 12190     1381                     __end_of_crc16_modbus:
 12191                           
 12192                           	psect	text20
 12193     14DD                     __ptext20:	
 12194 ;; *************** function _monitoring_sync *****************
 12195 ;; Defined at:
 12196 ;;		line 14 in file "monitor_sync.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  state           2   50[BANK0 ] PTR enum E10399
 12199 ;;		 -> RAM(8192), main@state(1), 
 12200 ;;  b1              1   52[BANK0 ] PTR struct mybutton
 12201 ;;		 -> main@b1(27), 
 12202 ;;  b2              1   53[BANK0 ] PTR struct mybutton
 12203 ;;		 -> main@b2(27), 
 12204 ;;  b1_clicked_c    1   54[BANK0 ] PTR unsigned char 
 12205 ;;		 -> main@b1_clicked_count(1), 
 12206 ;;  b2_clicked_c    1   55[BANK0 ] PTR unsigned char 
 12207 ;;		 -> main@b2_clicked_count(1), 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;		None
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  1    wreg      void 
 12212 ;; Registers used:
 12213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12219 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;Total ram usage:        6 bytes
 12224 ;; Hardware stack levels used: 1
 12225 ;; Hardware stack levels required when called: 4
 12226 ;; This function calls:
 12227 ;;		_LED_flashes_three_times
 12228 ;;		_is_long_press
 12229 ;;		_is_single_click
 12230 ;;		_printf
 12231 ;;		_reset_long_press_flag
 12232 ;;		_reset_single_click_flag
 12233 ;; This function is called by:
 12234 ;;		_main
 12235 ;; This function uses a non-reentrant model
 12236 ;;
 12237                           
 12238     14DD                     _monitoring_sync:	
 12239                           ;psect for function _monitoring_sync
 12240                           
 12241     14DD                     l4455:	
 12242                           ;incstack = 0
 12243                           ; Regs used in _monitoring_sync: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12244                           
 12245                           
 12246                           ;monitor_sync.c: 17: if( is_single_click(b1)){
 12247     14DD  0140               	movlb	0	; select bank0
 12248     14DE  0854               	movf	monitoring_sync@b1,w
 12249     14DF  319D  25C9  3194   	fcall	_is_single_click
 12250     14E2  3A00               	xorlw	0
 12251     14E3  1903               	skipnz
 12252     14E4  2CE6               	goto	u4711
 12253     14E5  2CE7               	goto	u4710
 12254     14E6                     u4711:
 12255     14E6  2D03               	goto	l4465
 12256     14E7                     u4710:
 12257     14E7                     l4457:
 12258                           
 12259                           ;monitor_sync.c: 18: printf("b1 clicked\r\n");
 12260     14E7  30E3               	movlw	low (STR_22| (0+32768))
 12261     14E8  0140               	movlb	0	; select bank0
 12262     14E9  00AE               	movwf	printf@f
 12263     14EA  3099               	movlw	high (STR_22| (0+32768))
 12264     14EB  00AF               	movwf	printf@f+1
 12265     14EC  3180  20CE  3194   	fcall	_printf
 12266     14EF                     l4459:
 12267                           
 12268                           ;monitor_sync.c: 19: *b1_clicked_count = (*b1_clicked_count) + 1;
 12269     14EF  0140               	movlb	0	; select bank0
 12270     14F0  0856               	movf	monitoring_sync@b1_clicked_count,w
 12271     14F1  0086               	movwf	6
 12272     14F2  3001               	movlw	1	; select bank2/3
 12273     14F3  0087               	movwf	7
 12274     14F4  0856               	movf	monitoring_sync@b1_clicked_count,w
 12275     14F5  0084               	movwf	4
 12276     14F6  3001               	movlw	1	; select bank2/3
 12277     14F7  0085               	movwf	5
 12278     14F8  0800               	movf	0,w
 12279     14F9  3E01               	addlw	1
 12280     14FA  0081               	movwf	1
 12281     14FB                     l4461:
 12282                           
 12283                           ;monitor_sync.c: 20: LED_flashes_three_times();
 12284     14FB  3190  2017  3194   	fcall	_LED_flashes_three_times
 12285     14FE                     l4463:
 12286                           
 12287                           ;monitor_sync.c: 22: reset_single_click_flag(b1);
 12288     14FE  0140               	movlb	0	; select bank0
 12289     14FF  0854               	movf	monitoring_sync@b1,w
 12290     1500  319D  25DB  3194   	fcall	_reset_single_click_flag
 12291     1503                     l4465:
 12292                           
 12293                           ;monitor_sync.c: 24: };;monitor_sync.c: 26: if( is_single_click(b2)){
 12294     1503  0140               	movlb	0	; select bank0
 12295     1504  0855               	movf	monitoring_sync@b2,w
 12296     1505  319D  25C9  3194   	fcall	_is_single_click
 12297     1508  3A00               	xorlw	0
 12298     1509  1903               	skipnz
 12299     150A  2D0C               	goto	u4721
 12300     150B  2D0D               	goto	u4720
 12301     150C                     u4721:
 12302     150C  2D29               	goto	l4475
 12303     150D                     u4720:
 12304     150D                     l4467:
 12305                           
 12306                           ;monitor_sync.c: 27: printf("b2 clicked\r\n");
 12307     150D  30F0               	movlw	low (STR_23| (0+32768))
 12308     150E  0140               	movlb	0	; select bank0
 12309     150F  00AE               	movwf	printf@f
 12310     1510  3099               	movlw	high (STR_23| (0+32768))
 12311     1511  00AF               	movwf	printf@f+1
 12312     1512  3180  20CE  3194   	fcall	_printf
 12313     1515                     l4469:
 12314                           
 12315                           ;monitor_sync.c: 28: *b2_clicked_count = (*b2_clicked_count) + 1;
 12316     1515  0140               	movlb	0	; select bank0
 12317     1516  0857               	movf	monitoring_sync@b2_clicked_count,w
 12318     1517  0086               	movwf	6
 12319     1518  3001               	movlw	1	; select bank2/3
 12320     1519  0087               	movwf	7
 12321     151A  0857               	movf	monitoring_sync@b2_clicked_count,w
 12322     151B  0084               	movwf	4
 12323     151C  3001               	movlw	1	; select bank2/3
 12324     151D  0085               	movwf	5
 12325     151E  0800               	movf	0,w
 12326     151F  3E01               	addlw	1
 12327     1520  0081               	movwf	1
 12328     1521                     l4471:
 12329                           
 12330                           ;monitor_sync.c: 29: LED_flashes_three_times();
 12331     1521  3190  2017  3194   	fcall	_LED_flashes_three_times
 12332     1524                     l4473:
 12333                           
 12334                           ;monitor_sync.c: 31: reset_single_click_flag(b2);
 12335     1524  0140               	movlb	0	; select bank0
 12336     1525  0855               	movf	monitoring_sync@b2,w
 12337     1526  319D  25DB  3194   	fcall	_reset_single_click_flag
 12338     1529                     l4475:
 12339                           
 12340                           ;monitor_sync.c: 33: };;monitor_sync.c: 35: if( is_long_press(b1)){
 12341     1529  0140               	movlb	0	; select bank0
 12342     152A  0854               	movf	monitoring_sync@b1,w
 12343     152B  319D  25C0  3194   	fcall	_is_long_press
 12344     152E  3A00               	xorlw	0
 12345     152F  1903               	skipnz
 12346     1530  2D32               	goto	u4731
 12347     1531  2D33               	goto	u4730
 12348     1532                     u4731:
 12349     1532  2D61               	goto	l4493
 12350     1533                     u4730:
 12351     1533                     l4477:
 12352                           
 12353                           ;monitor_sync.c: 36: printf("b1 long press \r\n");
 12354     1533  30C1               	movlw	low (STR_24| (0+32768))
 12355     1534  0140               	movlb	0	; select bank0
 12356     1535  00AE               	movwf	printf@f
 12357     1536  3099               	movlw	high (STR_24| (0+32768))
 12358     1537  00AF               	movwf	printf@f+1
 12359     1538  3180  20CE  3194   	fcall	_printf
 12360     153B                     l4479:
 12361                           
 12362                           ;monitor_sync.c: 37: *b1_clicked_count = (*b1_clicked_count) + 1;
 12363     153B  0140               	movlb	0	; select bank0
 12364     153C  0856               	movf	monitoring_sync@b1_clicked_count,w
 12365     153D  0086               	movwf	6
 12366     153E  3001               	movlw	1	; select bank2/3
 12367     153F  0087               	movwf	7
 12368     1540  0856               	movf	monitoring_sync@b1_clicked_count,w
 12369     1541  0084               	movwf	4
 12370     1542  3001               	movlw	1	; select bank2/3
 12371     1543  0085               	movwf	5
 12372     1544  0800               	movf	0,w
 12373     1545  3E01               	addlw	1
 12374     1546  0081               	movwf	1
 12375     1547                     l4481:
 12376                           
 12377                           ;monitor_sync.c: 39: LED_flashes_three_times();
 12378     1547  3190  2017  3194   	fcall	_LED_flashes_three_times
 12379     154A                     l4483:
 12380                           
 12381                           ;monitor_sync.c: 40: LED_flashes_three_times();
 12382     154A  3190  2017  3194   	fcall	_LED_flashes_three_times
 12383     154D                     l4485:
 12384                           
 12385                           ;monitor_sync.c: 41: LED_flashes_three_times();
 12386     154D  3190  2017  3194   	fcall	_LED_flashes_three_times
 12387     1550                     l4487:
 12388                           
 12389                           ;monitor_sync.c: 43: reset_long_press_flag(b1);
 12390     1550  0140               	movlb	0	; select bank0
 12391     1551  0854               	movf	monitoring_sync@b1,w
 12392     1552  319D  25D2  3194   	fcall	_reset_long_press_flag
 12393     1555                     l4489:
 12394                           
 12395                           ;monitor_sync.c: 44: *state = STATE_CALIBRATE;
 12396     1555  0140               	movlb	0	; select bank0
 12397     1556  0852               	movf	monitoring_sync@state,w
 12398     1557  0086               	movwf	6
 12399     1558  0853               	movf	monitoring_sync@state+1,w
 12400     1559  0087               	movwf	7
 12401     155A  3004               	movlw	4
 12402     155B  0081               	movwf	1
 12403     155C                     l4491:
 12404                           
 12405                           ;monitor_sync.c: 45: *b1_clicked_count = 0;
 12406     155C  0856               	movf	monitoring_sync@b1_clicked_count,w
 12407     155D  0086               	movwf	6
 12408     155E  3001               	movlw	1	; select bank2/3
 12409     155F  0087               	movwf	7
 12410     1560  0181               	clrf	1
 12411     1561                     l4493:
 12412                           
 12413                           ;monitor_sync.c: 46: };;monitor_sync.c: 47: if( is_long_press(b2)){
 12414     1561  0140               	movlb	0	; select bank0
 12415     1562  0855               	movf	monitoring_sync@b2,w
 12416     1563  319D  25C0  3194   	fcall	_is_long_press
 12417     1566  3A00               	xorlw	0
 12418     1567  1903               	skipnz
 12419     1568  2D6A               	goto	u4741
 12420     1569  2D6B               	goto	u4740
 12421     156A                     u4741:
 12422     156A  2D84               	goto	l551
 12423     156B                     u4740:
 12424     156B                     l4495:
 12425                           
 12426                           ;monitor_sync.c: 48: printf("b2 long press \r\n");
 12427     156B  30D2               	movlw	low (STR_25| (0+32768))
 12428     156C  0140               	movlb	0	; select bank0
 12429     156D  00AE               	movwf	printf@f
 12430     156E  3099               	movlw	high (STR_25| (0+32768))
 12431     156F  00AF               	movwf	printf@f+1
 12432     1570  3180  20CE  3194   	fcall	_printf
 12433     1573                     l4497:
 12434                           
 12435                           ;monitor_sync.c: 49: LED_flashes_three_times();
 12436     1573  3190  2017  3194   	fcall	_LED_flashes_three_times
 12437     1576                     l4499:
 12438                           
 12439                           ;monitor_sync.c: 50: LED_flashes_three_times();
 12440     1576  3190  2017  3194   	fcall	_LED_flashes_three_times
 12441     1579                     l4501:
 12442                           
 12443                           ;monitor_sync.c: 52: reset_long_press_flag(b2);
 12444     1579  0140               	movlb	0	; select bank0
 12445     157A  0855               	movf	monitoring_sync@b2,w
 12446     157B  319D  25D2  3194   	fcall	_reset_long_press_flag
 12447     157E                     l4503:
 12448     157E                     l4505:
 12449                           
 12450                           ;monitor_sync.c: 54: *b1_clicked_count = 0;
 12451     157E  0140               	movlb	0	; select bank0
 12452     157F  0856               	movf	monitoring_sync@b1_clicked_count,w
 12453     1580  0086               	movwf	6
 12454     1581  3001               	movlw	1	; select bank2/3
 12455     1582  0087               	movwf	7
 12456     1583  0181               	clrf	1
 12457     1584                     l551:
 12458     1584  0008               	return
 12459     1585                     __end_of_monitoring_sync:
 12460                           
 12461                           	psect	text21
 12462     1DDB                     __ptext21:	
 12463 ;; *************** function _reset_single_click_flag *****************
 12464 ;; Defined at:
 12465 ;;		line 141 in file "mybutton.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;  b               1    wreg     PTR struct mybutton
 12468 ;;		 -> main@b2(27), main@b1(27), 
 12469 ;; Auto vars:     Size  Location     Type
 12470 ;;  b               1    0[BANK0 ] PTR struct mybutton
 12471 ;;		 -> main@b2(27), main@b1(27), 
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      void 
 12474 ;; Registers used:
 12475 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12485 ;;Total ram usage:        1 bytes
 12486 ;; Hardware stack levels used: 1
 12487 ;; Hardware stack levels required when called: 2
 12488 ;; This function calls:
 12489 ;;		Nothing
 12490 ;; This function is called by:
 12491 ;;		_monitoring_sync
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495     1DDB                     _reset_single_click_flag:	
 12496                           ;psect for function _reset_single_click_flag
 12497                           
 12498                           
 12499                           ;incstack = 0
 12500                           ; Regs used in _reset_single_click_flag: [wreg+fsr1l+fsr1h+status,2+status,0]
 12501                           ;reset_single_click_flag@b stored from wreg
 12502     1DDB  0140               	movlb	0	; select bank0
 12503     1DDC  00A0               	movwf	reset_single_click_flag@b
 12504     1DDD                     l4057:
 12505                           
 12506                           ;mybutton.c: 142: b->single_clicked_flag = 0;
 12507     1DDD  0820               	movf	reset_single_click_flag@b,w
 12508     1DDE  3E18               	addlw	24
 12509     1DDF  0086               	movwf	6
 12510     1DE0  3001               	movlw	1	; select bank2/3
 12511     1DE1  0087               	movwf	7
 12512     1DE2  0181               	clrf	1
 12513     1DE3                     l404:
 12514     1DE3  0008               	return
 12515     1DE4                     __end_of_reset_single_click_flag:
 12516                           
 12517                           	psect	text22
 12518     1DD2                     __ptext22:	
 12519 ;; *************** function _reset_long_press_flag *****************
 12520 ;; Defined at:
 12521 ;;		line 149 in file "mybutton.c"
 12522 ;; Parameters:    Size  Location     Type
 12523 ;;  b               1    wreg     PTR struct mybutton
 12524 ;;		 -> main@b2(27), main@b1(27), 
 12525 ;; Auto vars:     Size  Location     Type
 12526 ;;  b               1    0[BANK0 ] PTR struct mybutton
 12527 ;;		 -> main@b2(27), main@b1(27), 
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  1    wreg      void 
 12530 ;; Registers used:
 12531 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;Total ram usage:        1 bytes
 12542 ;; Hardware stack levels used: 1
 12543 ;; Hardware stack levels required when called: 2
 12544 ;; This function calls:
 12545 ;;		Nothing
 12546 ;; This function is called by:
 12547 ;;		_monitoring_sync
 12548 ;; This function uses a non-reentrant model
 12549 ;;
 12550                           
 12551     1DD2                     _reset_long_press_flag:	
 12552                           ;psect for function _reset_long_press_flag
 12553                           
 12554                           
 12555                           ;incstack = 0
 12556                           ; Regs used in _reset_long_press_flag: [wreg+fsr1l+fsr1h+status,2+status,0]
 12557                           ;reset_long_press_flag@b stored from wreg
 12558     1DD2  0140               	movlb	0	; select bank0
 12559     1DD3  00A0               	movwf	reset_long_press_flag@b
 12560     1DD4                     l4059:
 12561                           
 12562                           ;mybutton.c: 150: b->long_press_flag = 0;
 12563     1DD4  0820               	movf	reset_long_press_flag@b,w
 12564     1DD5  3E1A               	addlw	26
 12565     1DD6  0086               	movwf	6
 12566     1DD7  3001               	movlw	1	; select bank2/3
 12567     1DD8  0087               	movwf	7
 12568     1DD9  0181               	clrf	1
 12569     1DDA                     l410:
 12570     1DDA  0008               	return
 12571     1DDB                     __end_of_reset_long_press_flag:
 12572                           
 12573                           	psect	text23
 12574     1DC9                     __ptext23:	
 12575 ;; *************** function _is_single_click *****************
 12576 ;; Defined at:
 12577 ;;		line 129 in file "mybutton.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;  b               1    wreg     PTR struct mybutton
 12580 ;;		 -> main@b2(27), main@b1(27), 
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;  b               1    0[BANK0 ] PTR struct mybutton
 12583 ;;		 -> main@b2(27), main@b1(27), 
 12584 ;; Return value:  Size  Location     Type
 12585 ;;                  1    wreg      unsigned char 
 12586 ;; Registers used:
 12587 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12588 ;; Tracked objects:
 12589 ;;		On entry : 0/0
 12590 ;;		On exit  : 0/0
 12591 ;;		Unchanged: 0/0
 12592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12596 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12597 ;;Total ram usage:        1 bytes
 12598 ;; Hardware stack levels used: 1
 12599 ;; Hardware stack levels required when called: 2
 12600 ;; This function calls:
 12601 ;;		Nothing
 12602 ;; This function is called by:
 12603 ;;		_monitoring_sync
 12604 ;; This function uses a non-reentrant model
 12605 ;;
 12606                           
 12607     1DC9                     _is_single_click:	
 12608                           ;psect for function _is_single_click
 12609                           
 12610                           
 12611                           ;incstack = 0
 12612                           ; Regs used in _is_single_click: [wreg+fsr1l+fsr1h+status,2+status,0]
 12613                           ;is_single_click@b stored from wreg
 12614     1DC9  0140               	movlb	0	; select bank0
 12615     1DCA  00A0               	movwf	is_single_click@b
 12616     1DCB                     l4049:
 12617                           
 12618                           ;mybutton.c: 130: return b->single_clicked_flag;
 12619     1DCB  0820               	movf	is_single_click@b,w
 12620     1DCC  3E18               	addlw	24
 12621     1DCD  0086               	movwf	6
 12622     1DCE  3001               	movlw	1	; select bank2/3
 12623     1DCF  0087               	movwf	7
 12624     1DD0  0801               	movf	1,w
 12625     1DD1                     l395:
 12626     1DD1  0008               	return
 12627     1DD2                     __end_of_is_single_click:
 12628                           
 12629                           	psect	text24
 12630     1DC0                     __ptext24:	
 12631 ;; *************** function _is_long_press *****************
 12632 ;; Defined at:
 12633 ;;		line 137 in file "mybutton.c"
 12634 ;; Parameters:    Size  Location     Type
 12635 ;;  b               1    wreg     PTR struct mybutton
 12636 ;;		 -> main@b2(27), main@b1(27), 
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;  b               1    0[BANK0 ] PTR struct mybutton
 12639 ;;		 -> main@b2(27), main@b1(27), 
 12640 ;; Return value:  Size  Location     Type
 12641 ;;                  1    wreg      unsigned char 
 12642 ;; Registers used:
 12643 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12644 ;; Tracked objects:
 12645 ;;		On entry : 0/0
 12646 ;;		On exit  : 0/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12652 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12653 ;;Total ram usage:        1 bytes
 12654 ;; Hardware stack levels used: 1
 12655 ;; Hardware stack levels required when called: 2
 12656 ;; This function calls:
 12657 ;;		Nothing
 12658 ;; This function is called by:
 12659 ;;		_monitoring_sync
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663     1DC0                     _is_long_press:	
 12664                           ;psect for function _is_long_press
 12665                           
 12666                           
 12667                           ;incstack = 0
 12668                           ; Regs used in _is_long_press: [wreg+fsr1l+fsr1h+status,2+status,0]
 12669                           ;is_long_press@b stored from wreg
 12670     1DC0  0140               	movlb	0	; select bank0
 12671     1DC1  00A0               	movwf	is_long_press@b
 12672     1DC2                     l4053:
 12673                           
 12674                           ;mybutton.c: 138: return b->long_press_flag;
 12675     1DC2  0820               	movf	is_long_press@b,w
 12676     1DC3  3E1A               	addlw	26
 12677     1DC4  0086               	movwf	6
 12678     1DC5  3001               	movlw	1	; select bank2/3
 12679     1DC6  0087               	movwf	7
 12680     1DC7  0801               	movf	1,w
 12681     1DC8                     l401:
 12682     1DC8  0008               	return
 12683     1DC9                     __end_of_is_long_press:
 12684                           
 12685                           	psect	text25
 12686     1017                     __ptext25:	
 12687 ;; *************** function _LED_flashes_three_times *****************
 12688 ;; Defined at:
 12689 ;;		line 9 in file "led.c"
 12690 ;; Parameters:    Size  Location     Type
 12691 ;;		None
 12692 ;; Auto vars:     Size  Location     Type
 12693 ;;  i               2    1[BANK0 ] int 
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  1    wreg      void 
 12696 ;; Registers used:
 12697 ;;		wreg, status,2
 12698 ;; Tracked objects:
 12699 ;;		On entry : 0/0
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12704 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12705 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12706 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12707 ;;Total ram usage:        3 bytes
 12708 ;; Hardware stack levels used: 1
 12709 ;; Hardware stack levels required when called: 2
 12710 ;; This function calls:
 12711 ;;		Nothing
 12712 ;; This function is called by:
 12713 ;;		_monitoring_sync
 12714 ;; This function uses a non-reentrant model
 12715 ;;
 12716                           
 12717     1017                     _LED_flashes_three_times:	
 12718                           ;psect for function _LED_flashes_three_times
 12719                           
 12720     1017                     l3955:	
 12721                           ;incstack = 0
 12722                           ; Regs used in _LED_flashes_three_times: [wreg+status,2]
 12723                           
 12724                           
 12725                           ;led.c: 10: for (int i = 0; i < 3; i++) {
 12726     1017  0140               	movlb	0	; select bank0
 12727     1018  01A1               	clrf	LED_flashes_three_times@i
 12728     1019  01A2               	clrf	LED_flashes_three_times@i+1
 12729     101A                     l344:	
 12730                           ;led.c: 12: do { LATCbits.LATC2 = 0; } while(0);
 12731                           
 12732     101A  0140               	movlb	0	; select bank0
 12733     101B  111A               	bcf	26,2	;volatile
 12734     101C                     l3961:
 12735                           
 12736                           ;led.c: 13: _delay((unsigned long)((50)*(1000000/4000.0)));
 12737     101C  3011               	movlw	17
 12738     101D  0140               	movlb	0	; select bank0
 12739     101E  00A0               	movwf	??_LED_flashes_three_times
 12740     101F  303A               	movlw	58
 12741     1020                     u5257:
 12742     1020  0B89               	decfsz	9,f
 12743     1021  2820               	goto	u5257
 12744     1022  0BA0               	decfsz	??_LED_flashes_three_times,f
 12745     1023  2820               	goto	u5257
 12746     1024  0000               	nop
 12747     1025                     l3963:
 12748     1025  0140               	movlb	0	; select bank0
 12749     1026  151A               	bsf	26,2	;volatile
 12750     1027                     l347:
 12751                           
 12752                           ;led.c: 16: _delay((unsigned long)((50)*(1000000/4000.0)));
 12753     1027  3011               	movlw	17
 12754     1028  0140               	movlb	0	; select bank0
 12755     1029  00A0               	movwf	??_LED_flashes_three_times
 12756     102A  303A               	movlw	58
 12757     102B                     u5267:
 12758     102B  0B89               	decfsz	9,f
 12759     102C  282B               	goto	u5267
 12760     102D  0BA0               	decfsz	??_LED_flashes_three_times,f
 12761     102E  282B               	goto	u5267
 12762     102F  0000               	nop
 12763     1030  3001               	movlw	1
 12764     1031  0140               	movlb	0	; select bank0
 12765     1032  07A1               	addwf	LED_flashes_three_times@i,f
 12766     1033  3000               	movlw	0
 12767     1034  3DA2               	addwfc	LED_flashes_three_times@i+1,f
 12768     1035  0822               	movf	LED_flashes_three_times@i+1,w
 12769     1036  3A80               	xorlw	128
 12770     1037  00A0               	movwf	??_LED_flashes_three_times
 12771     1038  3080               	movlw	128
 12772     1039  0220               	subwf	??_LED_flashes_three_times,w
 12773     103A  1D03               	skipz
 12774     103B  283E               	goto	u3765
 12775     103C  3003               	movlw	3
 12776     103D  0221               	subwf	LED_flashes_three_times@i,w
 12777     103E                     u3765:
 12778     103E  1C03               	skipc
 12779     103F  2841               	goto	u3761
 12780     1040  2842               	goto	u3760
 12781     1041                     u3761:
 12782     1041  281A               	goto	l344
 12783     1042                     u3760:
 12784     1042                     l348:
 12785     1042  0008               	return
 12786     1043                     __end_of_LED_flashes_three_times:
 12787                           
 12788                           	psect	text26
 12789     1F33                     __ptext26:	
 12790 ;; *************** function _measurement *****************
 12791 ;; Defined at:
 12792 ;;		line 14 in file "measurement.c"
 12793 ;; Parameters:    Size  Location     Type
 12794 ;;  state           1    wreg     PTR enum E10355
 12795 ;;		 -> main@state(1), 
 12796 ;;  value           1   50[BANK0 ] PTR struct values
 12797 ;;		 -> main@sensor_value(10), 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;  state           1   52[BANK0 ] PTR enum E10355
 12800 ;;		 -> main@state(1), 
 12801 ;; Return value:  Size  Location     Type
 12802 ;;                  1    wreg      void 
 12803 ;; Registers used:
 12804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12805 ;; Tracked objects:
 12806 ;;		On entry : 0/0
 12807 ;;		On exit  : 0/0
 12808 ;;		Unchanged: 0/0
 12809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12810 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12813 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12814 ;;Total ram usage:        3 bytes
 12815 ;; Hardware stack levels used: 1
 12816 ;; Hardware stack levels required when called: 5
 12817 ;; This function calls:
 12818 ;;		_enable_tx_transmit
 12819 ;;		_enable_uart_printf
 12820 ;;		_printf
 12821 ;;		_send_measured_command
 12822 ;; This function is called by:
 12823 ;;		_main
 12824 ;; This function uses a non-reentrant model
 12825 ;;
 12826                           
 12827     1F33                     _measurement:	
 12828                           ;psect for function _measurement
 12829                           
 12830     1F33                     l593:	
 12831                           ;incstack = 0
 12832                           ; Regs used in _measurement: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12833                           ;measurement.c: 15: do { LATCbits.LATC2 = 0; } while(0);
 12834                           
 12835     1F33  0140               	movlb	0	; select bank0
 12836     1F34  111A               	bcf	26,2	;volatile
 12837     1F35                     l4507:
 12838                           
 12839                           ;measurement.c: 17: enable_uart_printf();
 12840     1F35  319D  259D  319F   	fcall	_enable_uart_printf
 12841     1F38                     l4509:
 12842                           
 12843                           ;measurement.c: 18: printf("[Request] data from ph485 probe ---  \r\n");
 12844     1F38  3060               	movlw	low (STR_26| (0+32768))
 12845     1F39  0140               	movlb	0	; select bank0
 12846     1F3A  00AE               	movwf	printf@f
 12847     1F3B  3098               	movlw	high (STR_26| (0+32768))
 12848     1F3C  00AF               	movwf	printf@f+1
 12849     1F3D  3180  20CE  319F   	fcall	_printf
 12850     1F40                     l4511:
 12851                           
 12852                           ;measurement.c: 19: _delay((unsigned long)((10)*(1000000/4000.0)));
 12853     1F40  3004               	movlw	4
 12854     1F41  0140               	movlb	0	; select bank0
 12855     1F42  00D3               	movwf	??_measurement
 12856     1F43  303D               	movlw	61
 12857     1F44                     u5277:
 12858     1F44  0B89               	decfsz	9,f
 12859     1F45  2F44               	goto	u5277
 12860     1F46  0BD3               	decfsz	??_measurement,f
 12861     1F47  2F44               	goto	u5277
 12862     1F48  3200               	nop2
 12863     1F49                     l4513:
 12864                           
 12865                           ;measurement.c: 20: enable_tx_transmit();
 12866     1F49  319E  2646  319F   	fcall	_enable_tx_transmit
 12867     1F4C                     l4515:
 12868                           
 12869                           ;measurement.c: 23: send_measured_command();
 12870     1F4C  3188  2000  319F   	fcall	_send_measured_command
 12871     1F4F                     l4517:
 12872     1F4F  0140               	movlb	0	; select bank0
 12873     1F50  151A               	bsf	26,2	;volatile
 12874     1F51                     l597:
 12875     1F51  0008               	return
 12876     1F52                     __end_of_measurement:
 12877                           
 12878                           	psect	text27
 12879     0800                     __ptext27:	
 12880 ;; *************** function _send_measured_command *****************
 12881 ;; Defined at:
 12882 ;;		line 28 in file "measurement.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;		None
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;  txbuf          32    6[BANK0 ] unsigned char [32]
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;Total ram usage:       33 bytes
 12901 ;; Hardware stack levels used: 1
 12902 ;; Hardware stack levels required when called: 4
 12903 ;; This function calls:
 12904 ;;		_EUSART1_Write_1
 12905 ;; This function is called by:
 12906 ;;		_measurement
 12907 ;; This function uses a non-reentrant model
 12908 ;;
 12909                           
 12910     0800                     _send_measured_command:	
 12911                           ;psect for function _send_measured_command
 12912                           
 12913     0800                     l4145:	
 12914                           ;incstack = 0
 12915                           ; Regs used in _send_measured_command: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12916                           
 12917                           
 12918                           ;measurement.c: 29: char txbuf[32] = {0x01, 0x03, 0x00, 0x01, 0x00, 0x04, 0x15, 0xC9};
 12919     0800  30C0               	movlw	low send_measured_command@F10562
 12920     0801  0086               	movwf	6
 12921     0802  3001               	movlw	high send_measured_command@F10562
 12922     0803  0087               	movwf	7
 12923     0804  3026               	movlw	low send_measured_command@txbuf
 12924     0805  0084               	movwf	4
 12925     0806  3000               	movlw	high send_measured_command@txbuf
 12926     0807  0085               	movwf	5
 12927     0808  3020               	movlw	32
 12928     0809  0140               	movlb	0	; select bank0
 12929     080A  00A5               	movwf	??_send_measured_command
 12930     080B                     u4250:
 12931     080B  0016               	moviw fsr1++
 12932     080C  001A               	movwi fsr0++
 12933     080D  0BA5               	decfsz	??_send_measured_command,f
 12934     080E  280B               	goto	u4250
 12935     080F                     l4147:
 12936                           
 12937                           ;measurement.c: 30: EUSART1_Write_1(txbuf, 8);
 12938     080F  3008               	movlw	8
 12939     0810  00A1               	movwf	EUSART1_Write_1@length
 12940     0811  3026               	movlw	(low (send_measured_command@txbuf| 0))& (0+255)
 12941     0812  319E  26DE  3188   	fcall	_EUSART1_Write_1
 12942     0815                     l602:
 12943     0815  0008               	return
 12944     0816                     __end_of_send_measured_command:
 12945                           
 12946                           	psect	text28
 12947     1043                     __ptext28:	
 12948 ;; *************** function _measured_adc *****************
 12949 ;; Defined at:
 12950 ;;		line 63 in file "calibration.c"
 12951 ;; Parameters:    Size  Location     Type
 12952 ;;		None
 12953 ;; Auto vars:     Size  Location     Type
 12954 ;;  measured_adc   32    0[BANK1 ] unsigned char [32]
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  1    wreg      void 
 12957 ;; Registers used:
 12958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12965 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
 12966 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12967 ;;      Totals:         0       1      32       0       0       0       0       0       0       0       0       0       
      +0       0
 12968 ;;Total ram usage:       33 bytes
 12969 ;; Hardware stack levels used: 1
 12970 ;; Hardware stack levels required when called: 4
 12971 ;; This function calls:
 12972 ;;		_EUSART1_Write_1
 12973 ;;		_enable_tx_transmit
 12974 ;;		_enable_uart_printf
 12975 ;;		_printf
 12976 ;; This function is called by:
 12977 ;;		_main
 12978 ;; This function uses a non-reentrant model
 12979 ;;
 12980                           
 12981     1043                     _measured_adc:	
 12982                           ;psect for function _measured_adc
 12983                           
 12984     1043                     l668:	
 12985                           ;incstack = 0
 12986                           ; Regs used in _measured_adc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12987                           ;calibration.c: 64: do { LATCbits.LATC2 = 0; } while(0);
 12988                           
 12989     1043  0140               	movlb	0	; select bank0
 12990     1044  111A               	bcf	26,2	;volatile
 12991     1045                     l4519:
 12992                           
 12993                           ;calibration.c: 66: enable_uart_printf();
 12994     1045  319D  259D  3190   	fcall	_enable_uart_printf
 12995     1048                     l4521:
 12996                           
 12997                           ;calibration.c: 67: printf("--- Calibration-ADC-Request \r\n");
 12998     1048  301B               	movlw	low (STR_29| (0+32768))
 12999     1049  0140               	movlb	0	; select bank0
 13000     104A  00AE               	movwf	printf@f
 13001     104B  3099               	movlw	high (STR_29| (0+32768))
 13002     104C  00AF               	movwf	printf@f+1
 13003     104D  3180  20CE  3190   	fcall	_printf
 13004     1050                     l4523:
 13005                           
 13006                           ;calibration.c: 68: _delay((unsigned long)((10)*(1000000/4000.0)));
 13007     1050  3004               	movlw	4
 13008     1051  0140               	movlb	0	; select bank0
 13009     1052  00D2               	movwf	??_measured_adc
 13010     1053  303D               	movlw	61
 13011     1054                     u5287:
 13012     1054  0B89               	decfsz	9,f
 13013     1055  2854               	goto	u5287
 13014     1056  0BD2               	decfsz	??_measured_adc,f
 13015     1057  2854               	goto	u5287
 13016     1058  3200               	nop2
 13017     1059                     l4525:
 13018                           
 13019                           ;calibration.c: 69: enable_tx_transmit();
 13020     1059  319E  2646  3190   	fcall	_enable_tx_transmit
 13021     105C                     l4527:
 13022                           
 13023                           ;calibration.c: 72: char measured_adc_command[32] = {0x01, 0x03, 0x00, 0x66, 0x00, 0x01,
      +                           0x64, 0x15};
 13024     105C  3040               	movlw	low measured_adc@F10595
 13025     105D  0086               	movwf	6
 13026     105E  3003               	movlw	high measured_adc@F10595
 13027     105F  0087               	movwf	7
 13028     1060  30A0               	movlw	low measured_adc@measured_adc_command
 13029     1061  0084               	movwf	4
 13030     1062  3000               	movlw	high measured_adc@measured_adc_command
 13031     1063  0085               	movwf	5
 13032     1064  3020               	movlw	32
 13033     1065  0140               	movlb	0	; select bank0
 13034     1066  00D2               	movwf	??_measured_adc
 13035     1067                     u4750:
 13036     1067  0016               	moviw fsr1++
 13037     1068  001A               	movwi fsr0++
 13038     1069  0BD2               	decfsz	??_measured_adc,f
 13039     106A  2867               	goto	u4750
 13040     106B                     l4529:
 13041                           
 13042                           ;calibration.c: 73: EUSART1_Write_1(measured_adc_command, 8);
 13043     106B  3008               	movlw	8
 13044     106C  00A1               	movwf	EUSART1_Write_1@length
 13045     106D  30A0               	movlw	(low (measured_adc@measured_adc_command| 0))& (0+255)
 13046     106E  319E  26DE  3190   	fcall	_EUSART1_Write_1
 13047     1071                     l4531:
 13048     1071  0140               	movlb	0	; select bank0
 13049     1072  151A               	bsf	26,2	;volatile
 13050     1073                     l674:
 13051     1073  0008               	return
 13052     1074                     __end_of_measured_adc:
 13053                           
 13054                           	psect	text29
 13055     1D9D                     __ptext29:	
 13056 ;; *************** function _enable_uart_printf *****************
 13057 ;; Defined at:
 13058 ;;		line 119 in file "uart.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;		None
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;		None
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  1    wreg      void 
 13065 ;; Registers used:
 13066 ;;		wreg, status,2
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 0/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13076 ;;Total ram usage:        0 bytes
 13077 ;; Hardware stack levels used: 1
 13078 ;; Hardware stack levels required when called: 2
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		_main
 13083 ;;		_measurement
 13084 ;;		_measured_adc
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088     1D9D                     _enable_uart_printf:	
 13089                           ;psect for function _enable_uart_printf
 13090                           
 13091     1D9D                     l3891:	
 13092                           ;incstack = 0
 13093                           ; Regs used in _enable_uart_printf: [wreg+status,2]
 13094                           
 13095                           
 13096                           ;uart.c: 120: (RC3PPS = 0x00);
 13097     1D9D  017E               	movlb	62	; select bank62
 13098     1D9E  01A3               	clrf	35	;volatile
 13099     1D9F                     l3893:
 13100                           
 13101                           ;uart.c: 121: (RA5PPS = 0x0F);
 13102     1D9F  300F               	movlw	15
 13103     1DA0  0095               	movwf	21	;volatile
 13104     1DA1                     l514:
 13105     1DA1  0008               	return
 13106     1DA2                     __end_of_enable_uart_printf:
 13107                           
 13108                           	psect	text30
 13109     1E46                     __ptext30:	
 13110 ;; *************** function _enable_tx_transmit *****************
 13111 ;; Defined at:
 13112 ;;		line 123 in file "uart.c"
 13113 ;; Parameters:    Size  Location     Type
 13114 ;;		None
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;		None
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  1    wreg      void 
 13119 ;; Registers used:
 13120 ;;		wreg, status,2
 13121 ;; Tracked objects:
 13122 ;;		On entry : 0/0
 13123 ;;		On exit  : 0/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;Total ram usage:        1 bytes
 13131 ;; Hardware stack levels used: 1
 13132 ;; Hardware stack levels required when called: 2
 13133 ;; This function calls:
 13134 ;;		Nothing
 13135 ;; This function is called by:
 13136 ;;		_main
 13137 ;;		_measurement
 13138 ;;		_measured_adc
 13139 ;; This function uses a non-reentrant model
 13140 ;;
 13141                           
 13142     1E46                     _enable_tx_transmit:	
 13143                           ;psect for function _enable_tx_transmit
 13144                           
 13145     1E46                     l3895:	
 13146                           ;incstack = 0
 13147                           ; Regs used in _enable_tx_transmit: [wreg+status,2]
 13148                           
 13149                           
 13150                           ;uart.c: 124: _delay((unsigned long)((10)*(1000000/4000.0)));
 13151     1E46  3004               	movlw	4
 13152     1E47  0140               	movlb	0	; select bank0
 13153     1E48  00A0               	movwf	??_enable_tx_transmit
 13154     1E49  303D               	movlw	61
 13155     1E4A                     u5297:
 13156     1E4A  0B89               	decfsz	9,f
 13157     1E4B  2E4A               	goto	u5297
 13158     1E4C  0BA0               	decfsz	??_enable_tx_transmit,f
 13159     1E4D  2E4A               	goto	u5297
 13160     1E4E  3200               	nop2
 13161                           
 13162                           ;uart.c: 125: (RC3PPS = 0x0F);
 13163     1E4F  300F               	movlw	15
 13164     1E50  017E               	movlb	62	; select bank62
 13165     1E51  00A3               	movwf	35	;volatile
 13166     1E52                     l3897:
 13167                           
 13168                           ;uart.c: 126: (RA5PPS = 0x00);
 13169     1E52  0195               	clrf	21	;volatile
 13170     1E53                     l517:
 13171     1E53  0008               	return
 13172     1E54                     __end_of_enable_tx_transmit:
 13173                           
 13174                           	psect	text31
 13175     1EDE                     __ptext31:	
 13176 ;; *************** function _EUSART1_Write_1 *****************
 13177 ;; Defined at:
 13178 ;;		line 48 in file "uart.c"
 13179 ;; Parameters:    Size  Location     Type
 13180 ;;  txbuf           1    wreg     PTR unsigned char 
 13181 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(32), save_top_adc_point@save_top_adc_command(8), measured_adc@meas
      +ured_adc_command(32), set_bottom_calibrate_point@bottom_slop_point_command(32), 
 13182 ;;		 -> set_top_calibrate_point@top_zero_point_command(32), send_measured_command@txbuf(32), 
 13183 ;;  length          1    1[BANK0 ] unsigned char 
 13184 ;; Auto vars:     Size  Location     Type
 13185 ;;  txbuf           1    4[BANK0 ] PTR unsigned char 
 13186 ;;		 -> save_bottom_adc_point@save_bottom_adc_command(32), save_top_adc_point@save_top_adc_command(8), measured_adc@meas
      +ured_adc_command(32), set_bottom_calibrate_point@bottom_slop_point_command(32), 
 13187 ;;		 -> set_top_calibrate_point@top_zero_point_command(32), send_measured_command@txbuf(32), 
 13188 ;;  i               1    3[BANK0 ] unsigned char 
 13189 ;; Return value:  Size  Location     Type
 13190 ;;                  1    wreg      void 
 13191 ;; Registers used:
 13192 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13193 ;; Tracked objects:
 13194 ;;		On entry : 0/0
 13195 ;;		On exit  : 0/0
 13196 ;;		Unchanged: 0/0
 13197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13201 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13202 ;;Total ram usage:        4 bytes
 13203 ;; Hardware stack levels used: 1
 13204 ;; Hardware stack levels required when called: 3
 13205 ;; This function calls:
 13206 ;;		_EUSART1_Write
 13207 ;; This function is called by:
 13208 ;;		_send_measured_command
 13209 ;;		_measured_adc
 13210 ;;		_save_top_adc_point
 13211 ;;		_save_bottom_adc_point
 13212 ;;		_set_top_calibrate_point
 13213 ;;		_set_bottom_calibrate_point
 13214 ;; This function uses a non-reentrant model
 13215 ;;
 13216                           
 13217     1EDE                     _EUSART1_Write_1:	
 13218                           ;psect for function _EUSART1_Write_1
 13219                           
 13220                           
 13221                           ;incstack = 0
 13222                           ; Regs used in _EUSART1_Write_1: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13223                           ;EUSART1_Write_1@txbuf stored from wreg
 13224     1EDE  0140               	movlb	0	; select bank0
 13225     1EDF  00A4               	movwf	EUSART1_Write_1@txbuf
 13226     1EE0                     l3747:
 13227                           
 13228                           ;uart.c: 49: for(uint8_t i=0; i<length; i++){
 13229     1EE0  01A3               	clrf	EUSART1_Write_1@i
 13230     1EE1  2EF1               	goto	l3753
 13231     1EE2                     l3749:
 13232                           
 13233                           ;uart.c: 50: EUSART1_Write(txbuf[i]);
 13234     1EE2  0823               	movf	EUSART1_Write_1@i,w
 13235     1EE3  0724               	addwf	EUSART1_Write_1@txbuf,w
 13236     1EE4  00A2               	movwf	??_EUSART1_Write_1
 13237     1EE5  0822               	movf	??_EUSART1_Write_1,w
 13238     1EE6  0086               	movwf	6
 13239     1EE7  0187               	clrf	7
 13240     1EE8  0801               	movf	1,w
 13241     1EE9  319E  262D  319E   	fcall	_EUSART1_Write
 13242     1EEC                     l3751:
 13243     1EEC  3001               	movlw	1
 13244     1EED  0140               	movlb	0	; select bank0
 13245     1EEE  00A2               	movwf	??_EUSART1_Write_1
 13246     1EEF  0822               	movf	??_EUSART1_Write_1,w
 13247     1EF0  07A3               	addwf	EUSART1_Write_1@i,f
 13248     1EF1                     l3753:
 13249     1EF1  0821               	movf	EUSART1_Write_1@length,w
 13250     1EF2  0223               	subwf	EUSART1_Write_1@i,w
 13251     1EF3  1C03               	skipc
 13252     1EF4  2EF6               	goto	u3491
 13253     1EF5  2EF7               	goto	u3490
 13254     1EF6                     u3491:
 13255     1EF6  2EE2               	goto	l3749
 13256     1EF7                     u3490:
 13257     1EF7                     l488:
 13258     1EF7  0008               	return
 13259     1EF8                     __end_of_EUSART1_Write_1:
 13260                           
 13261                           	psect	text32
 13262     1E2D                     __ptext32:	
 13263 ;; *************** function _EUSART1_Write *****************
 13264 ;; Defined at:
 13265 ;;		line 35 in file "uart.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;  txData          1    wreg     unsigned char 
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;  txData          1    0[BANK0 ] unsigned char 
 13270 ;; Return value:  Size  Location     Type
 13271 ;;                  1    wreg      void 
 13272 ;; Registers used:
 13273 ;;		wreg
 13274 ;; Tracked objects:
 13275 ;;		On entry : 0/0
 13276 ;;		On exit  : 0/0
 13277 ;;		Unchanged: 0/0
 13278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13283 ;;Total ram usage:        1 bytes
 13284 ;; Hardware stack levels used: 1
 13285 ;; Hardware stack levels required when called: 2
 13286 ;; This function calls:
 13287 ;;		Nothing
 13288 ;; This function is called by:
 13289 ;;		_EUSART1_Write_1
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293     1E2D                     _EUSART1_Write:	
 13294                           ;psect for function _EUSART1_Write
 13295                           
 13296                           
 13297                           ;incstack = 0
 13298                           ; Regs used in _EUSART1_Write: [wreg]
 13299                           ;EUSART1_Write@txData stored from wreg
 13300     1E2D  0140               	movlb	0	; select bank0
 13301     1E2E  00A0               	movwf	EUSART1_Write@txData
 13302     1E2F                     l3313:
 13303     1E2F                     l476:	
 13304                           ;uart.c: 37: while(0 == PIR3bits.TX1IF);
 13305                           
 13306     1E2F  014E               	movlb	14	; select bank14
 13307     1E30  1E0F               	btfss	15,4	;volatile
 13308     1E31  2E33               	goto	u2591
 13309     1E32  2E34               	goto	u2590
 13310     1E33                     u2591:
 13311     1E33  2E2F               	goto	l476
 13312     1E34                     u2590:
 13313     1E34                     l3315:
 13314                           
 13315                           ;uart.c: 38: TX1REG = txData;
 13316     1E34  0140               	movlb	0	; select bank0
 13317     1E35  0820               	movf	EUSART1_Write@txData,w
 13318     1E36  0142               	movlb	2	; select bank2
 13319     1E37  009A               	movwf	26	;volatile
 13320     1E38                     l479:
 13321     1E38  0008               	return
 13322     1E39                     __end_of_EUSART1_Write:
 13323                           
 13324                           	psect	text33
 13325     13F2                     __ptext33:	
 13326 ;; *************** function _init_button *****************
 13327 ;; Defined at:
 13328 ;;		line 12 in file "mybutton.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;  b               1    wreg     PTR struct mybutton
 13331 ;;		 -> main@b2(27), main@b1(27), 
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  b               1    0[BANK0 ] PTR struct mybutton
 13334 ;;		 -> main@b2(27), main@b1(27), 
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      void 
 13337 ;; Registers used:
 13338 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;Total ram usage:        1 bytes
 13349 ;; Hardware stack levels used: 1
 13350 ;; Hardware stack levels required when called: 2
 13351 ;; This function calls:
 13352 ;;		Nothing
 13353 ;; This function is called by:
 13354 ;;		_main
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358     13F2                     _init_button:	
 13359                           ;psect for function _init_button
 13360                           
 13361                           
 13362                           ;incstack = 0
 13363                           ; Regs used in _init_button: [wreg+fsr1l+fsr1h+status,2+status,0]
 13364                           ;init_button@b stored from wreg
 13365     13F2  0140               	movlb	0	; select bank0
 13366     13F3  00A0               	movwf	init_button@b
 13367     13F4                     l4393:
 13368                           
 13369                           ;mybutton.c: 14: b->signals[0] = 1;
 13370     13F4  0820               	movf	init_button@b,w
 13371     13F5  0086               	movwf	6
 13372     13F6  3001               	movlw	1	; select bank2/3
 13373     13F7  0087               	movwf	7
 13374     13F8  0181               	clrf	1
 13375     13F9  0A81               	incf	1,f
 13376                           
 13377                           ;mybutton.c: 15: b->signals[1] = 1;
 13378     13FA  0A20               	incf	init_button@b,w
 13379     13FB  0086               	movwf	6
 13380     13FC  3001               	movlw	1	; select bank2/3
 13381     13FD  0087               	movwf	7
 13382     13FE  0181               	clrf	1
 13383     13FF  0A81               	incf	1,f
 13384     1400                     l4395:
 13385                           
 13386                           ;mybutton.c: 17: b->falling_ts[0] = 1;
 13387     1400  0820               	movf	init_button@b,w
 13388     1401  3E02               	addlw	2
 13389     1402  0086               	movwf	6
 13390     1403  3001               	movlw	1	; select bank2/3
 13391     1404  0087               	movwf	7
 13392     1405  3001               	movlw	1
 13393     1406  3FC0               	movwi [0]fsr1
 13394     1407  3000               	movlw	0
 13395     1408  3FC1               	movwi [1]fsr1
 13396     1409  3FC2               	movwi [2]fsr1
 13397     140A  3FC3               	movwi [3]fsr1
 13398     140B                     l4397:
 13399                           
 13400                           ;mybutton.c: 18: b->falling_ts[1] = 1;
 13401     140B  0820               	movf	init_button@b,w
 13402     140C  3E06               	addlw	6
 13403     140D  0086               	movwf	6
 13404     140E  3001               	movlw	1	; select bank2/3
 13405     140F  0087               	movwf	7
 13406     1410  3001               	movlw	1
 13407     1411  3FC0               	movwi [0]fsr1
 13408     1412  3000               	movlw	0
 13409     1413  3FC1               	movwi [1]fsr1
 13410     1414  3FC2               	movwi [2]fsr1
 13411     1415  3FC3               	movwi [3]fsr1
 13412     1416                     l4399:
 13413                           
 13414                           ;mybutton.c: 19: b->rising_ts[0] = 1;
 13415     1416  0820               	movf	init_button@b,w
 13416     1417  3E0A               	addlw	10
 13417     1418  0086               	movwf	6
 13418     1419  3001               	movlw	1	; select bank2/3
 13419     141A  0087               	movwf	7
 13420     141B  3001               	movlw	1
 13421     141C  3FC0               	movwi [0]fsr1
 13422     141D  3000               	movlw	0
 13423     141E  3FC1               	movwi [1]fsr1
 13424     141F  3FC2               	movwi [2]fsr1
 13425     1420  3FC3               	movwi [3]fsr1
 13426     1421                     l4401:
 13427                           
 13428                           ;mybutton.c: 20: b->rising_ts[1] = 1;
 13429     1421  0820               	movf	init_button@b,w
 13430     1422  3E0E               	addlw	14
 13431     1423  0086               	movwf	6
 13432     1424  3001               	movlw	1	; select bank2/3
 13433     1425  0087               	movwf	7
 13434     1426  3001               	movlw	1
 13435     1427  3FC0               	movwi [0]fsr1
 13436     1428  3000               	movlw	0
 13437     1429  3FC1               	movwi [1]fsr1
 13438     142A  3FC2               	movwi [2]fsr1
 13439     142B  3FC3               	movwi [3]fsr1
 13440     142C                     l4403:
 13441                           
 13442                           ;mybutton.c: 22: b->single_click_tmps[0] = 0;
 13443     142C  0820               	movf	init_button@b,w
 13444     142D  3E12               	addlw	18
 13445     142E  0086               	movwf	6
 13446     142F  3001               	movlw	1	; select bank2/3
 13447     1430  0087               	movwf	7
 13448     1431  0181               	clrf	1
 13449     1432                     l4405:
 13450                           
 13451                           ;mybutton.c: 23: b->single_click_tmps[1] = 0;
 13452     1432  0820               	movf	init_button@b,w
 13453     1433  3E13               	addlw	19
 13454     1434  0086               	movwf	6
 13455     1435  3001               	movlw	1	; select bank2/3
 13456     1436  0087               	movwf	7
 13457     1437  0181               	clrf	1
 13458     1438                     l4407:
 13459                           
 13460                           ;mybutton.c: 24: b->double_click_tmps[0] = 0;
 13461     1438  0820               	movf	init_button@b,w
 13462     1439  3E14               	addlw	20
 13463     143A  0086               	movwf	6
 13464     143B  3001               	movlw	1	; select bank2/3
 13465     143C  0087               	movwf	7
 13466     143D  0181               	clrf	1
 13467     143E                     l4409:
 13468                           
 13469                           ;mybutton.c: 25: b->double_click_tmps[1] = 0;
 13470     143E  0820               	movf	init_button@b,w
 13471     143F  3E15               	addlw	21
 13472     1440  0086               	movwf	6
 13473     1441  3001               	movlw	1	; select bank2/3
 13474     1442  0087               	movwf	7
 13475     1443  0181               	clrf	1
 13476     1444                     l4411:
 13477                           
 13478                           ;mybutton.c: 26: b->long_press_tmps[0] = 0;
 13479     1444  0820               	movf	init_button@b,w
 13480     1445  3E16               	addlw	22
 13481     1446  0086               	movwf	6
 13482     1447  3001               	movlw	1	; select bank2/3
 13483     1448  0087               	movwf	7
 13484     1449  0181               	clrf	1
 13485     144A                     l4413:
 13486                           
 13487                           ;mybutton.c: 27: b->long_press_tmps[1] = 0;
 13488     144A  0820               	movf	init_button@b,w
 13489     144B  3E17               	addlw	23
 13490     144C  0086               	movwf	6
 13491     144D  3001               	movlw	1	; select bank2/3
 13492     144E  0087               	movwf	7
 13493     144F  0181               	clrf	1
 13494     1450                     l4415:
 13495                           
 13496                           ;mybutton.c: 29: b->single_clicked_flag = 0;
 13497     1450  0820               	movf	init_button@b,w
 13498     1451  3E18               	addlw	24
 13499     1452  0086               	movwf	6
 13500     1453  3001               	movlw	1	; select bank2/3
 13501     1454  0087               	movwf	7
 13502     1455  0181               	clrf	1
 13503     1456                     l4417:
 13504                           
 13505                           ;mybutton.c: 30: b->double_clicked_flag = 0;
 13506     1456  0820               	movf	init_button@b,w
 13507     1457  3E19               	addlw	25
 13508     1458  0086               	movwf	6
 13509     1459  3001               	movlw	1	; select bank2/3
 13510     145A  0087               	movwf	7
 13511     145B  0181               	clrf	1
 13512     145C                     l4419:
 13513                           
 13514                           ;mybutton.c: 31: b->long_press_flag = 0;
 13515     145C  0820               	movf	init_button@b,w
 13516     145D  3E1A               	addlw	26
 13517     145E  0086               	movwf	6
 13518     145F  3001               	movlw	1	; select bank2/3
 13519     1460  0087               	movwf	7
 13520     1461  0181               	clrf	1
 13521     1462                     l366:
 13522     1462  0008               	return
 13523     1463                     __end_of_init_button:
 13524                           
 13525                           	psect	text34
 13526     1F72                     __ptext34:	
 13527 ;; *************** function _i2c_slave_init *****************
 13528 ;; Defined at:
 13529 ;;		line 14 in file "i2c_slave.c"
 13530 ;; Parameters:    Size  Location     Type
 13531 ;;		None
 13532 ;; Auto vars:     Size  Location     Type
 13533 ;;  i               1    1[BANK0 ] unsigned char 
 13534 ;; Return value:  Size  Location     Type
 13535 ;;                  1    wreg      void 
 13536 ;; Registers used:
 13537 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13538 ;; Tracked objects:
 13539 ;;		On entry : 0/0
 13540 ;;		On exit  : 0/0
 13541 ;;		Unchanged: 0/0
 13542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13545 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13546 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13547 ;;Total ram usage:        2 bytes
 13548 ;; Hardware stack levels used: 1
 13549 ;; Hardware stack levels required when called: 2
 13550 ;; This function calls:
 13551 ;;		Nothing
 13552 ;; This function is called by:
 13553 ;;		_main
 13554 ;; This function uses a non-reentrant model
 13555 ;;
 13556                           
 13557     1F72                     _i2c_slave_init:	
 13558                           ;psect for function _i2c_slave_init
 13559                           
 13560     1F72                     l4369:	
 13561                           ;incstack = 0
 13562                           ; Regs used in _i2c_slave_init: [wreg+fsr1l+fsr1h+status,2+status,0]
 13563                           
 13564                           
 13565                           ;i2c_slave.c: 15: SSP1STAT = 0x00;
 13566     1F72  0143               	movlb	3	; select bank3
 13567     1F73  018F               	clrf	15	;volatile
 13568     1F74                     l4371:
 13569                           
 13570                           ;i2c_slave.c: 16: SSP1CON1 = 0x36;
 13571     1F74  3036               	movlw	54
 13572     1F75  0090               	movwf	16	;volatile
 13573     1F76                     l4373:
 13574                           
 13575                           ;i2c_slave.c: 17: SSP1CON2 = 0x01;
 13576     1F76  3001               	movlw	1
 13577     1F77  0091               	movwf	17	;volatile
 13578     1F78                     l4375:
 13579                           
 13580                           ;i2c_slave.c: 20: SSP1ADD = 0x68 << 1;
 13581     1F78  30D0               	movlw	208
 13582     1F79  008D               	movwf	13	;volatile
 13583     1F7A                     l4377:
 13584                           
 13585                           ;i2c_slave.c: 21: SSP1MSK = 0xFF;
 13586     1F7A  30FF               	movlw	255
 13587     1F7B  008E               	movwf	14	;volatile
 13588     1F7C                     l4379:
 13589                           
 13590                           ;i2c_slave.c: 23: PIR3bits.SSP1IF = 0;
 13591     1F7C  014E               	movlb	14	; select bank14
 13592     1F7D  100F               	bcf	15,0	;volatile
 13593     1F7E                     l4381:
 13594                           
 13595                           ;i2c_slave.c: 24: PIE3bits.SSP1IE = 1;
 13596     1F7E  1419               	bsf	25,0	;volatile
 13597                           
 13598                           ;i2c_slave.c: 27: for (uint8_t i = 0; i < 64u; i++) {
 13599     1F7F  0140               	movlb	0	; select bank0
 13600     1F80  01A1               	clrf	i2c_slave_init@i
 13601     1F81                     l4387:
 13602                           
 13603                           ;i2c_slave.c: 28: slaveData[i] = 0;
 13604     1F81  0821               	movf	i2c_slave_init@i,w
 13605     1F82  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 13606     1F83  0086               	movwf	6
 13607     1F84  3002               	movlw	2	; select bank4/5
 13608     1F85  0087               	movwf	7
 13609     1F86  0181               	clrf	1
 13610     1F87                     l4389:
 13611     1F87  3001               	movlw	1
 13612     1F88  00A0               	movwf	??_i2c_slave_init
 13613     1F89  0820               	movf	??_i2c_slave_init,w
 13614     1F8A  07A1               	addwf	i2c_slave_init@i,f
 13615     1F8B                     l4391:
 13616     1F8B  3040               	movlw	64
 13617     1F8C  0221               	subwf	i2c_slave_init@i,w
 13618     1F8D  1C03               	skipc
 13619     1F8E  2F90               	goto	u4631
 13620     1F8F  2F91               	goto	u4630
 13621     1F90                     u4631:
 13622     1F90  2F81               	goto	l4387
 13623     1F91                     u4630:
 13624     1F91                     l245:
 13625     1F91  0008               	return
 13626     1F92                     __end_of_i2c_slave_init:
 13627                           
 13628                           	psect	text35
 13629     1E9D                     __ptext35:	
 13630 ;; *************** function _get_ticks_with_lock *****************
 13631 ;; Defined at:
 13632 ;;		line 12 in file "myisr.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;		None
 13635 ;; Auto vars:     Size  Location     Type
 13636 ;;  result          4    4[BANK0 ] unsigned long 
 13637 ;; Return value:  Size  Location     Type
 13638 ;;                  4    0[BANK0 ] unsigned long 
 13639 ;; Registers used:
 13640 ;;		wreg
 13641 ;; Tracked objects:
 13642 ;;		On entry : 0/0
 13643 ;;		On exit  : 0/0
 13644 ;;		Unchanged: 0/0
 13645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13646 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13647 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13649 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13650 ;;Total ram usage:        8 bytes
 13651 ;; Hardware stack levels used: 1
 13652 ;; Hardware stack levels required when called: 2
 13653 ;; This function calls:
 13654 ;;		Nothing
 13655 ;; This function is called by:
 13656 ;;		_main
 13657 ;;		_is_it_time_over
 13658 ;; This function uses a non-reentrant model
 13659 ;;
 13660                           
 13661     1E9D                     _get_ticks_with_lock:	
 13662                           ;psect for function _get_ticks_with_lock
 13663                           
 13664     1E9D                     l4421:	
 13665                           ;incstack = 0
 13666                           ; Regs used in _get_ticks_with_lock: [wreg]
 13667                           
 13668                           
 13669                           ;myisr.c: 13: GIE = 0;
 13670     1E9D  138B               	bcf	11,7	;volatile
 13671     1E9E                     l4423:
 13672                           
 13673                           ;myisr.c: 14: uint32_t result = ticks;
 13674     1E9E  087B               	movf	_ticks+3,w	;volatile
 13675     1E9F  0140               	movlb	0	; select bank0
 13676     1EA0  00A7               	movwf	get_ticks_with_lock@result+3
 13677     1EA1  087A               	movf	_ticks+2,w	;volatile
 13678     1EA2  00A6               	movwf	get_ticks_with_lock@result+2
 13679     1EA3  0879               	movf	_ticks+1,w	;volatile
 13680     1EA4  00A5               	movwf	get_ticks_with_lock@result+1
 13681     1EA5  0878               	movf	_ticks,w	;volatile
 13682     1EA6  00A4               	movwf	get_ticks_with_lock@result
 13683     1EA7                     l4425:
 13684                           
 13685                           ;myisr.c: 15: GIE = 1;
 13686     1EA7  178B               	bsf	11,7	;volatile
 13687                           
 13688                           ;myisr.c: 16: return result;
 13689     1EA8  0827               	movf	get_ticks_with_lock@result+3,w
 13690     1EA9  00A3               	movwf	?_get_ticks_with_lock+3
 13691     1EAA  0826               	movf	get_ticks_with_lock@result+2,w
 13692     1EAB  00A2               	movwf	?_get_ticks_with_lock+2
 13693     1EAC  0825               	movf	get_ticks_with_lock@result+1,w
 13694     1EAD  00A1               	movwf	?_get_ticks_with_lock+1
 13695     1EAE  0824               	movf	get_ticks_with_lock@result,w
 13696     1EAF  00A0               	movwf	?_get_ticks_with_lock
 13697     1EB0                     l324:
 13698     1EB0  0008               	return
 13699     1EB1                     __end_of_get_ticks_with_lock:
 13700                           
 13701                           	psect	text36
 13702     1E02                     __ptext36:	
 13703 ;; *************** function _get_ticks *****************
 13704 ;; Defined at:
 13705 ;;		line 8 in file "myisr.c"
 13706 ;; Parameters:    Size  Location     Type
 13707 ;;		None
 13708 ;; Auto vars:     Size  Location     Type
 13709 ;;		None
 13710 ;; Return value:  Size  Location     Type
 13711 ;;                  4    0[BANK0 ] unsigned long 
 13712 ;; Registers used:
 13713 ;;		wreg
 13714 ;; Tracked objects:
 13715 ;;		On entry : 0/0
 13716 ;;		On exit  : 0/0
 13717 ;;		Unchanged: 0/0
 13718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13722 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13723 ;;Total ram usage:        4 bytes
 13724 ;; Hardware stack levels used: 1
 13725 ;; Hardware stack levels required when called: 2
 13726 ;; This function calls:
 13727 ;;		Nothing
 13728 ;; This function is called by:
 13729 ;;		_main
 13730 ;;		_is_it_time_up
 13731 ;;		_delay_state
 13732 ;; This function uses a non-reentrant model
 13733 ;;
 13734                           
 13735     1E02                     _get_ticks:	
 13736                           ;psect for function _get_ticks
 13737                           
 13738     1E02                     l4597:	
 13739                           ;incstack = 0
 13740                           ; Regs used in _get_ticks: [wreg]
 13741                           
 13742                           
 13743                           ;myisr.c: 9: return ticks;
 13744     1E02  087B               	movf	_ticks+3,w	;volatile
 13745     1E03  0140               	movlb	0	; select bank0
 13746     1E04  00A3               	movwf	?_get_ticks+3
 13747     1E05  087A               	movf	_ticks+2,w	;volatile
 13748     1E06  00A2               	movwf	?_get_ticks+2
 13749     1E07  0879               	movf	_ticks+1,w	;volatile
 13750     1E08  00A1               	movwf	?_get_ticks+1
 13751     1E09  0878               	movf	_ticks,w	;volatile
 13752     1E0A  00A0               	movwf	?_get_ticks
 13753     1E0B                     l321:
 13754     1E0B  0008               	return
 13755     1E0C                     __end_of_get_ticks:
 13756                           
 13757                           	psect	text37
 13758     05CC                     __ptext37:	
 13759 ;; *************** function _get_measured_value *****************
 13760 ;; Defined at:
 13761 ;;		line 33 in file "measurement.c"
 13762 ;; Parameters:    Size  Location     Type
 13763 ;;  sensor_value    1    wreg     PTR struct values
 13764 ;;		 -> main@sensor_value(10), 
 13765 ;; Auto vars:     Size  Location     Type
 13766 ;;  sensor_value    1   78[BANK0 ] PTR struct values
 13767 ;;		 -> main@sensor_value(10), 
 13768 ;;  temp            4   74[BANK0 ] float 
 13769 ;;  ph              4   70[BANK0 ] float 
 13770 ;;  payload_temp    4   66[BANK0 ] unsigned long 
 13771 ;;  payload         4   62[BANK0 ] unsigned long 
 13772 ;; Return value:  Size  Location     Type
 13773 ;;                  1    wreg      void 
 13774 ;; Registers used:
 13775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13776 ;; Tracked objects:
 13777 ;;		On entry : 0/0
 13778 ;;		On exit  : 0/0
 13779 ;;		Unchanged: 0/0
 13780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13782 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13783 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13784 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13785 ;;Total ram usage:       29 bytes
 13786 ;; Hardware stack levels used: 1
 13787 ;; Hardware stack levels required when called: 4
 13788 ;; This function calls:
 13789 ;;		___flmul
 13790 ;;		___fltol
 13791 ;;		_printf
 13792 ;; This function is called by:
 13793 ;;		_main
 13794 ;; This function uses a non-reentrant model
 13795 ;;
 13796                           
 13797     05CC                     _get_measured_value:	
 13798                           ;psect for function _get_measured_value
 13799                           
 13800                           
 13801                           ;incstack = 0
 13802                           ; Regs used in _get_measured_value: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13803                           ;get_measured_value@sensor_value stored from wreg
 13804     05CC  0140               	movlb	0	; select bank0
 13805     05CD  00EE               	movwf	get_measured_value@sensor_value
 13806     05CE                     l4601:
 13807                           
 13808                           ;measurement.c: 34: float ph = 0;
 13809     05CE  3000               	movlw	0
 13810     05CF  00E9               	movwf	get_measured_value@ph+3
 13811     05D0  3000               	movlw	0
 13812     05D1  00E8               	movwf	get_measured_value@ph+2
 13813     05D2  3000               	movlw	0
 13814     05D3  00E7               	movwf	get_measured_value@ph+1
 13815     05D4  3000               	movlw	0
 13816     05D5  00E6               	movwf	get_measured_value@ph
 13817     05D6                     l4603:
 13818                           
 13819                           ;measurement.c: 35: uint32_t payload = ((uint32_t)rxbuffer[5] << 24) |;measurement.c: 36
      +                          : ((uint32_t)rxbuffer[6]) << 16 |;measurement.c: 37: ((uint32_t)rxbuffer[3]) << 8 |;meas
      +                          urement.c: 38: ((uint32_t)rxbuffer[4] << 0);
 13820     05D6  0143               	movlb	3	; select bank3
 13821     05D7  0824               	movf	(_rxbuffer^(0+384)+4),w	;volatile
 13822     05D8  0140               	movlb	0	; select bank0
 13823     05D9  00D2               	movwf	??_get_measured_value
 13824     05DA  01D3               	clrf	??_get_measured_value+1
 13825     05DB  01D4               	clrf	??_get_measured_value+2
 13826     05DC  01D5               	clrf	??_get_measured_value+3
 13827     05DD  0143               	movlb	3	; select bank3
 13828     05DE  0823               	movf	(_rxbuffer^(0+384)+3),w	;volatile
 13829     05DF  0140               	movlb	0	; select bank0
 13830     05E0  00D6               	movwf	??_get_measured_value+4
 13831     05E1  01D7               	clrf	??_get_measured_value+5
 13832     05E2  01D8               	clrf	??_get_measured_value+6
 13833     05E3  01D9               	clrf	??_get_measured_value+7
 13834     05E4  3008               	movlw	8
 13835     05E5                     u4845:
 13836     05E5  35D6               	lslf	??_get_measured_value+4,f
 13837     05E6  0DD7               	rlf	??_get_measured_value+5,f
 13838     05E7  0DD8               	rlf	??_get_measured_value+6,f
 13839     05E8  0DD9               	rlf	??_get_measured_value+7,f
 13840     05E9                     u4840:
 13841     05E9  0B89               	decfsz	9,f
 13842     05EA  2DE5               	goto	u4845
 13843     05EB  0143               	movlb	3	; select bank3
 13844     05EC  0826               	movf	(_rxbuffer^(0+384)+6),w	;volatile
 13845     05ED  0140               	movlb	0	; select bank0
 13846     05EE  00DA               	movwf	??_get_measured_value+8
 13847     05EF  01DB               	clrf	??_get_measured_value+9
 13848     05F0  01DC               	clrf	??_get_measured_value+10
 13849     05F1  01DD               	clrf	??_get_measured_value+11
 13850     05F2  3010               	movlw	16
 13851     05F3                     u4855:
 13852     05F3  35DA               	lslf	??_get_measured_value+8,f
 13853     05F4  0DDB               	rlf	??_get_measured_value+9,f
 13854     05F5  0DDC               	rlf	??_get_measured_value+10,f
 13855     05F6  0DDD               	rlf	??_get_measured_value+11,f
 13856     05F7                     u4850:
 13857     05F7  0B89               	decfsz	9,f
 13858     05F8  2DF3               	goto	u4855
 13859     05F9  0143               	movlb	3	; select bank3
 13860     05FA  0825               	movf	(_rxbuffer^(0+384)+5),w	;volatile
 13861     05FB  0140               	movlb	0	; select bank0
 13862     05FC  04DD               	iorwf	??_get_measured_value+11,f
 13863     05FD  085A               	movf	??_get_measured_value+8,w
 13864     05FE  04D6               	iorwf	??_get_measured_value+4,f
 13865     05FF  085B               	movf	??_get_measured_value+9,w
 13866     0600  04D7               	iorwf	??_get_measured_value+5,f
 13867     0601  085C               	movf	??_get_measured_value+10,w
 13868     0602  04D8               	iorwf	??_get_measured_value+6,f
 13869     0603  085D               	movf	??_get_measured_value+11,w
 13870     0604  04D9               	iorwf	??_get_measured_value+7,f
 13871     0605  0852               	movf	??_get_measured_value,w
 13872     0606  0456               	iorwf	??_get_measured_value+4,w
 13873     0607  00DE               	movwf	get_measured_value@payload
 13874     0608  0853               	movf	??_get_measured_value+1,w
 13875     0609  0457               	iorwf	??_get_measured_value+5,w
 13876     060A  00DF               	movwf	get_measured_value@payload+1
 13877     060B  0854               	movf	??_get_measured_value+2,w
 13878     060C  0458               	iorwf	??_get_measured_value+6,w
 13879     060D  00E0               	movwf	get_measured_value@payload+2
 13880     060E  0855               	movf	??_get_measured_value+3,w
 13881     060F  0459               	iorwf	??_get_measured_value+7,w
 13882     0610  00E1               	movwf	get_measured_value@payload+3
 13883     0611                     l4605:
 13884                           
 13885                           ;measurement.c: 39: __builtin_memcpy(&ph,&payload,sizeof(float));
 13886     0611  3066               	movlw	low (get_measured_value@ph| 0)
 13887     0612  0086               	movwf	6
 13888     0613  0187               	clrf	7
 13889     0614  2E23               	goto	mcp0
 13890     0615                     mcp0b:
 13891     0615  305E               	movlw	low (get_measured_value@payload| 0)
 13892     0616  0084               	movwf	4
 13893     0617  0185               	clrf	5
 13894     0618  3004               	movlw	4
 13895     0619  0140               	movlb	0	; select bank0
 13896     061A  00D2               	movwf	??_get_measured_value
 13897     061B  0852               	movf	??_get_measured_value,w
 13898     061C  1903               	skipnz
 13899     061D  2E24               	goto	mcp0z
 13900     061E                     u486m0:
 13901     061E  0012               	moviw fsr0++
 13902     061F  001E               	movwi fsr1++
 13903     0620  0BD2               	decfsz	??_get_measured_value,f
 13904     0621  2E1E               	goto	u486m0
 13905     0622  2E24               	goto	u486m1
 13906     0623                     mcp0:
 13907     0623  2E15               	goto	mcp0b
 13908     0624                     u486m1:
 13909     0624                     mcp0z:
 13910     0624                     l4607:
 13911                           
 13912                           ;measurement.c: 40: sensor_value->ph_value = (uint16_t)(ph * 100);
 13913     0624  0140               	movlb	0	; select bank0
 13914     0625  0869               	movf	get_measured_value@ph+3,w
 13915     0626  00B0               	movwf	___flmul@a+3
 13916     0627  0868               	movf	get_measured_value@ph+2,w
 13917     0628  00AF               	movwf	___flmul@a+2
 13918     0629  0867               	movf	get_measured_value@ph+1,w
 13919     062A  00AE               	movwf	___flmul@a+1
 13920     062B  0866               	movf	get_measured_value@ph,w
 13921     062C  00AD               	movwf	___flmul@a
 13922     062D  3042               	movlw	66
 13923     062E  00AC               	movwf	___flmul@b+3
 13924     062F  30C8               	movlw	200
 13925     0630  00AB               	movwf	___flmul@b+2
 13926     0631  3000               	movlw	0
 13927     0632  00AA               	movwf	___flmul@b+1
 13928     0633  3000               	movlw	0
 13929     0634  00A9               	movwf	___flmul@b
 13930     0635  3189  21D4  3185   	fcall	___flmul
 13931     0638  0140               	movlb	0	; select bank0
 13932     0639  082C               	movf	?___flmul+3,w
 13933     063A  00C6               	movwf	___fltol@f1+3
 13934     063B  082B               	movf	?___flmul+2,w
 13935     063C  00C5               	movwf	___fltol@f1+2
 13936     063D  082A               	movf	?___flmul+1,w
 13937     063E  00C4               	movwf	___fltol@f1+1
 13938     063F  0829               	movf	?___flmul,w
 13939     0640  00C3               	movwf	___fltol@f1
 13940     0641  3193  2381  3185   	fcall	___fltol
 13941     0644  0140               	movlb	0	; select bank0
 13942     0645  086E               	movf	get_measured_value@sensor_value,w
 13943     0646  0086               	movwf	6
 13944     0647  3001               	movlw	1	; select bank2/3
 13945     0648  0087               	movwf	7
 13946     0649  0843               	movf	?___fltol,w
 13947     064A  3FC0               	movwi [0]fsr1
 13948     064B  0844               	movf	?___fltol+1,w
 13949     064C  3FC1               	movwi [1]fsr1
 13950     064D                     l4609:
 13951                           
 13952                           ;measurement.c: 42: printf("PH: %u\r\n", sensor_value->ph_value);
 13953     064D  3029               	movlw	low (STR_27| (0+32768))
 13954     064E  00AE               	movwf	printf@f
 13955     064F  309A               	movlw	high (STR_27| (0+32768))
 13956     0650  00AF               	movwf	printf@f+1
 13957     0651  086E               	movf	get_measured_value@sensor_value,w
 13958     0652  0086               	movwf	6
 13959     0653  3001               	movlw	1	; select bank2/3
 13960     0654  0087               	movwf	7
 13961     0655  3F40               	moviw [0]fsr1
 13962     0656  00B0               	movwf	?_printf+2
 13963     0657  3F41               	moviw [1]fsr1
 13964     0658  00B1               	movwf	?_printf+3
 13965     0659  3180  20CE  3185   	fcall	_printf
 13966     065C                     l4611:
 13967                           
 13968                           ;measurement.c: 44: float temp = 0;
 13969     065C  3000               	movlw	0
 13970     065D  0140               	movlb	0	; select bank0
 13971     065E  00ED               	movwf	get_measured_value@temp+3
 13972     065F  3000               	movlw	0
 13973     0660  00EC               	movwf	get_measured_value@temp+2
 13974     0661  3000               	movlw	0
 13975     0662  00EB               	movwf	get_measured_value@temp+1
 13976     0663  3000               	movlw	0
 13977     0664  00EA               	movwf	get_measured_value@temp
 13978     0665                     l4613:
 13979                           
 13980                           ;measurement.c: 45: uint32_t payload_temp = ((uint32_t)rxbuffer[9] << 24) |;measurement.
      +                          c: 46: ((uint32_t)rxbuffer[10]) << 16 |;measurement.c: 47: ((uint32_t)rxbuffer[7]) << 8 
      +                          |;measurement.c: 48: ((uint32_t)rxbuffer[8] << 0);
 13981     0665  0143               	movlb	3	; select bank3
 13982     0666  0828               	movf	(_rxbuffer^(0+384)+8),w	;volatile
 13983     0667  0140               	movlb	0	; select bank0
 13984     0668  00D2               	movwf	??_get_measured_value
 13985     0669  01D3               	clrf	??_get_measured_value+1
 13986     066A  01D4               	clrf	??_get_measured_value+2
 13987     066B  01D5               	clrf	??_get_measured_value+3
 13988     066C  0143               	movlb	3	; select bank3
 13989     066D  0827               	movf	(_rxbuffer^(0+384)+7),w	;volatile
 13990     066E  0140               	movlb	0	; select bank0
 13991     066F  00D6               	movwf	??_get_measured_value+4
 13992     0670  01D7               	clrf	??_get_measured_value+5
 13993     0671  01D8               	clrf	??_get_measured_value+6
 13994     0672  01D9               	clrf	??_get_measured_value+7
 13995     0673  3008               	movlw	8
 13996     0674                     u4875:
 13997     0674  35D6               	lslf	??_get_measured_value+4,f
 13998     0675  0DD7               	rlf	??_get_measured_value+5,f
 13999     0676  0DD8               	rlf	??_get_measured_value+6,f
 14000     0677  0DD9               	rlf	??_get_measured_value+7,f
 14001     0678                     u4870:
 14002     0678  0B89               	decfsz	9,f
 14003     0679  2E74               	goto	u4875
 14004     067A  0143               	movlb	3	; select bank3
 14005     067B  082A               	movf	(_rxbuffer^(0+384)+10),w	;volatile
 14006     067C  0140               	movlb	0	; select bank0
 14007     067D  00DA               	movwf	??_get_measured_value+8
 14008     067E  01DB               	clrf	??_get_measured_value+9
 14009     067F  01DC               	clrf	??_get_measured_value+10
 14010     0680  01DD               	clrf	??_get_measured_value+11
 14011     0681  3010               	movlw	16
 14012     0682                     u4885:
 14013     0682  35DA               	lslf	??_get_measured_value+8,f
 14014     0683  0DDB               	rlf	??_get_measured_value+9,f
 14015     0684  0DDC               	rlf	??_get_measured_value+10,f
 14016     0685  0DDD               	rlf	??_get_measured_value+11,f
 14017     0686                     u4880:
 14018     0686  0B89               	decfsz	9,f
 14019     0687  2E82               	goto	u4885
 14020     0688  0143               	movlb	3	; select bank3
 14021     0689  0829               	movf	(_rxbuffer^(0+384)+9),w	;volatile
 14022     068A  0140               	movlb	0	; select bank0
 14023     068B  04DD               	iorwf	??_get_measured_value+11,f
 14024     068C  085A               	movf	??_get_measured_value+8,w
 14025     068D  04D6               	iorwf	??_get_measured_value+4,f
 14026     068E  085B               	movf	??_get_measured_value+9,w
 14027     068F  04D7               	iorwf	??_get_measured_value+5,f
 14028     0690  085C               	movf	??_get_measured_value+10,w
 14029     0691  04D8               	iorwf	??_get_measured_value+6,f
 14030     0692  085D               	movf	??_get_measured_value+11,w
 14031     0693  04D9               	iorwf	??_get_measured_value+7,f
 14032     0694  0852               	movf	??_get_measured_value,w
 14033     0695  0456               	iorwf	??_get_measured_value+4,w
 14034     0696  00E2               	movwf	get_measured_value@payload_temp
 14035     0697  0853               	movf	??_get_measured_value+1,w
 14036     0698  0457               	iorwf	??_get_measured_value+5,w
 14037     0699  00E3               	movwf	get_measured_value@payload_temp+1
 14038     069A  0854               	movf	??_get_measured_value+2,w
 14039     069B  0458               	iorwf	??_get_measured_value+6,w
 14040     069C  00E4               	movwf	get_measured_value@payload_temp+2
 14041     069D  0855               	movf	??_get_measured_value+3,w
 14042     069E  0459               	iorwf	??_get_measured_value+7,w
 14043     069F  00E5               	movwf	get_measured_value@payload_temp+3
 14044     06A0                     l4615:
 14045                           
 14046                           ;measurement.c: 49: __builtin_memcpy(&temp,&payload_temp,sizeof(float));
 14047     06A0  306A               	movlw	low (get_measured_value@temp| 0)
 14048     06A1  0086               	movwf	6
 14049     06A2  0187               	clrf	7
 14050     06A3  2EB2               	goto	mcp1
 14051     06A4                     mcp1b:
 14052     06A4  3062               	movlw	low (get_measured_value@payload_temp| 0)
 14053     06A5  0084               	movwf	4
 14054     06A6  0185               	clrf	5
 14055     06A7  3004               	movlw	4
 14056     06A8  0140               	movlb	0	; select bank0
 14057     06A9  00D2               	movwf	??_get_measured_value
 14058     06AA  0852               	movf	??_get_measured_value,w
 14059     06AB  1903               	skipnz
 14060     06AC  2EB3               	goto	mcp1z
 14061     06AD                     u489m0:
 14062     06AD  0012               	moviw fsr0++
 14063     06AE  001E               	movwi fsr1++
 14064     06AF  0BD2               	decfsz	??_get_measured_value,f
 14065     06B0  2EAD               	goto	u489m0
 14066     06B1  2EB3               	goto	u489m1
 14067     06B2                     mcp1:
 14068     06B2  2EA4               	goto	mcp1b
 14069     06B3                     u489m1:
 14070     06B3                     mcp1z:
 14071     06B3                     l4617:
 14072                           
 14073                           ;measurement.c: 51: sensor_value->temp_value = (uint16_t)(temp * 100);
 14074     06B3  0140               	movlb	0	; select bank0
 14075     06B4  086D               	movf	get_measured_value@temp+3,w
 14076     06B5  00B0               	movwf	___flmul@a+3
 14077     06B6  086C               	movf	get_measured_value@temp+2,w
 14078     06B7  00AF               	movwf	___flmul@a+2
 14079     06B8  086B               	movf	get_measured_value@temp+1,w
 14080     06B9  00AE               	movwf	___flmul@a+1
 14081     06BA  086A               	movf	get_measured_value@temp,w
 14082     06BB  00AD               	movwf	___flmul@a
 14083     06BC  3042               	movlw	66
 14084     06BD  00AC               	movwf	___flmul@b+3
 14085     06BE  30C8               	movlw	200
 14086     06BF  00AB               	movwf	___flmul@b+2
 14087     06C0  3000               	movlw	0
 14088     06C1  00AA               	movwf	___flmul@b+1
 14089     06C2  3000               	movlw	0
 14090     06C3  00A9               	movwf	___flmul@b
 14091     06C4  3189  21D4  3185   	fcall	___flmul
 14092     06C7  0140               	movlb	0	; select bank0
 14093     06C8  082C               	movf	?___flmul+3,w
 14094     06C9  00C6               	movwf	___fltol@f1+3
 14095     06CA  082B               	movf	?___flmul+2,w
 14096     06CB  00C5               	movwf	___fltol@f1+2
 14097     06CC  082A               	movf	?___flmul+1,w
 14098     06CD  00C4               	movwf	___fltol@f1+1
 14099     06CE  0829               	movf	?___flmul,w
 14100     06CF  00C3               	movwf	___fltol@f1
 14101     06D0  3193  2381  3185   	fcall	___fltol
 14102     06D3  0140               	movlb	0	; select bank0
 14103     06D4  086E               	movf	get_measured_value@sensor_value,w
 14104     06D5  3E06               	addlw	6
 14105     06D6  0086               	movwf	6
 14106     06D7  3001               	movlw	1	; select bank2/3
 14107     06D8  0087               	movwf	7
 14108     06D9  0843               	movf	?___fltol,w
 14109     06DA  3FC0               	movwi [0]fsr1
 14110     06DB  0844               	movf	?___fltol+1,w
 14111     06DC  3FC1               	movwi [1]fsr1
 14112                           
 14113                           ;measurement.c: 52: printf("TEMP: %u\r\n", sensor_value->temp_value);
 14114     06DD  3009               	movlw	low (STR_28| (0+32768))
 14115     06DE  00AE               	movwf	printf@f
 14116     06DF  309A               	movlw	high (STR_28| (0+32768))
 14117     06E0  00AF               	movwf	printf@f+1
 14118     06E1  086E               	movf	get_measured_value@sensor_value,w
 14119     06E2  3E06               	addlw	6
 14120     06E3  0086               	movwf	6
 14121     06E4  3001               	movlw	1	; select bank2/3
 14122     06E5  0087               	movwf	7
 14123     06E6  3F40               	moviw [0]fsr1
 14124     06E7  00B0               	movwf	?_printf+2
 14125     06E8  3F41               	moviw [1]fsr1
 14126     06E9  00B1               	movwf	?_printf+3
 14127     06EA  3180  20CE  3185   	fcall	_printf
 14128     06ED                     l605:
 14129     06ED  0008               	return
 14130     06EE                     __end_of_get_measured_value:
 14131                           
 14132                           	psect	text38
 14133     1381                     __ptext38:	
 14134 ;; *************** function ___fltol *****************
 14135 ;; Defined at:
 14136 ;;		line 43 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/fltol.c"
 14137 ;; Parameters:    Size  Location     Type
 14138 ;;  f1              4   35[BANK0 ] void 
 14139 ;; Auto vars:     Size  Location     Type
 14140 ;;  exp1            1   44[BANK0 ] unsigned char 
 14141 ;;  sign1           1   43[BANK0 ] unsigned char 
 14142 ;; Return value:  Size  Location     Type
 14143 ;;                  4   35[BANK0 ] long 
 14144 ;; Registers used:
 14145 ;;		wreg, status,2, status,0
 14146 ;; Tracked objects:
 14147 ;;		On entry : 0/0
 14148 ;;		On exit  : 0/0
 14149 ;;		Unchanged: 0/0
 14150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14151 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14153 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14154 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14155 ;;Total ram usage:       10 bytes
 14156 ;; Hardware stack levels used: 1
 14157 ;; Hardware stack levels required when called: 2
 14158 ;; This function calls:
 14159 ;;		Nothing
 14160 ;; This function is called by:
 14161 ;;		_get_measured_value
 14162 ;; This function uses a non-reentrant model
 14163 ;;
 14164                           
 14165     1381                     ___fltol:	
 14166                           ;psect for function ___fltol
 14167                           
 14168     1381                     l4155:	
 14169                           ;incstack = 0
 14170                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14171                           
 14172     1381  1003               	clrc
 14173     1382  0140               	movlb	0	; select bank0
 14174     1383  0D45               	rlf	___fltol@f1+2,w
 14175     1384  0D46               	rlf	___fltol@f1+3,w
 14176     1385  00CC               	movwf	___fltol@exp1
 14177     1386  084C               	movf	___fltol@exp1,w
 14178     1387  1D03               	btfss	3,2
 14179     1388  2B8A               	goto	u4261
 14180     1389  2B8B               	goto	u4260
 14181     138A                     u4261:
 14182     138A  2B94               	goto	l4161
 14183     138B                     u4260:
 14184     138B                     l4157:
 14185     138B  3000               	movlw	0
 14186     138C  00C6               	movwf	?___fltol+3
 14187     138D  3000               	movlw	0
 14188     138E  00C5               	movwf	?___fltol+2
 14189     138F  3000               	movlw	0
 14190     1390  00C4               	movwf	?___fltol+1
 14191     1391  3000               	movlw	0
 14192     1392  00C3               	movwf	?___fltol
 14193     1393  2BF1               	goto	l1178
 14194     1394                     l4161:
 14195     1394  0843               	movf	___fltol@f1,w
 14196     1395  00C7               	movwf	??___fltol
 14197     1396  0844               	movf	___fltol@f1+1,w
 14198     1397  00C8               	movwf	??___fltol+1
 14199     1398  0845               	movf	___fltol@f1+2,w
 14200     1399  00C9               	movwf	??___fltol+2
 14201     139A  0846               	movf	___fltol@f1+3,w
 14202     139B  00CA               	movwf	??___fltol+3
 14203     139C  301F               	movlw	31
 14204     139D                     u4275:
 14205     139D  36CA               	lsrf	??___fltol+3,f
 14206     139E  0CC9               	rrf	??___fltol+2,f
 14207     139F  0CC8               	rrf	??___fltol+1,f
 14208     13A0  0CC7               	rrf	??___fltol,f
 14209     13A1                     u4270:
 14210     13A1  0B89               	decfsz	9,f
 14211     13A2  2B9D               	goto	u4275
 14212     13A3  0847               	movf	??___fltol,w
 14213     13A4  00CB               	movwf	___fltol@sign1
 14214     13A5                     l4163:
 14215     13A5  17C5               	bsf	___fltol@f1+2,7
 14216     13A6                     l4165:
 14217     13A6  30FF               	movlw	255
 14218     13A7  05C3               	andwf	___fltol@f1,f
 14219     13A8  30FF               	movlw	255
 14220     13A9  05C4               	andwf	___fltol@f1+1,f
 14221     13AA  30FF               	movlw	255
 14222     13AB  05C5               	andwf	___fltol@f1+2,f
 14223     13AC  3000               	movlw	0
 14224     13AD  05C6               	andwf	___fltol@f1+3,f
 14225     13AE                     l4167:
 14226     13AE  3096               	movlw	150
 14227     13AF  02CC               	subwf	___fltol@exp1,f
 14228     13B0                     l4169:
 14229     13B0  1FCC               	btfss	___fltol@exp1,7
 14230     13B1  2BB3               	goto	u4281
 14231     13B2  2BB4               	goto	u4280
 14232     13B3                     u4281:
 14233     13B3  2BCC               	goto	l4179
 14234     13B4                     u4280:
 14235     13B4                     l4171:
 14236     13B4  084C               	movf	___fltol@exp1,w
 14237     13B5  3A80               	xorlw	128
 14238     13B6  3E97               	addlw	151
 14239     13B7  1803               	skipnc
 14240     13B8  2BBA               	goto	u4291
 14241     13B9  2BBB               	goto	u4290
 14242     13BA                     u4291:
 14243     13BA  2BBC               	goto	l4177
 14244     13BB                     u4290:
 14245     13BB  2B8B               	goto	l4157
 14246     13BC                     l4177:
 14247     13BC  3001               	movlw	1
 14248     13BD                     u4305:
 14249     13BD  36C6               	lsrf	___fltol@f1+3,f
 14250     13BE  0CC5               	rrf	___fltol@f1+2,f
 14251     13BF  0CC4               	rrf	___fltol@f1+1,f
 14252     13C0  0CC3               	rrf	___fltol@f1,f
 14253     13C1  0B89               	decfsz	9,f
 14254     13C2  2BBD               	goto	u4305
 14255     13C3  3001               	movlw	1
 14256     13C4  00C7               	movwf	??___fltol
 14257     13C5  0847               	movf	??___fltol,w
 14258     13C6  07CC               	addwf	___fltol@exp1,f
 14259     13C7  1D03               	btfss	3,2
 14260     13C8  2BCA               	goto	u4311
 14261     13C9  2BCB               	goto	u4310
 14262     13CA                     u4311:
 14263     13CA  2BBC               	goto	l4177
 14264     13CB                     u4310:
 14265     13CB  2BE1               	goto	l4187
 14266     13CC                     l4179:
 14267     13CC  3020               	movlw	32
 14268     13CD  024C               	subwf	___fltol@exp1,w
 14269     13CE  1C03               	skipc
 14270     13CF  2BD1               	goto	u4321
 14271     13D0  2BD2               	goto	u4320
 14272     13D1                     u4321:
 14273     13D1  2BDC               	goto	l1185
 14274     13D2                     u4320:
 14275     13D2  2B8B               	goto	l4157
 14276     13D3                     l4185:
 14277     13D3  3001               	movlw	1
 14278     13D4                     u4335:
 14279     13D4  35C3               	lslf	___fltol@f1,f
 14280     13D5  0DC4               	rlf	___fltol@f1+1,f
 14281     13D6  0DC5               	rlf	___fltol@f1+2,f
 14282     13D7  0DC6               	rlf	___fltol@f1+3,f
 14283     13D8  0B89               	decfsz	9,f
 14284     13D9  2BD4               	goto	u4335
 14285     13DA  3001               	movlw	1
 14286     13DB  02CC               	subwf	___fltol@exp1,f
 14287     13DC                     l1185:
 14288     13DC  084C               	movf	___fltol@exp1,w
 14289     13DD  1D03               	btfss	3,2
 14290     13DE  2BE0               	goto	u4341
 14291     13DF  2BE1               	goto	u4340
 14292     13E0                     u4341:
 14293     13E0  2BD3               	goto	l4185
 14294     13E1                     u4340:
 14295     13E1                     l4187:
 14296     13E1  084B               	movf	___fltol@sign1,w
 14297     13E2  1903               	btfsc	3,2
 14298     13E3  2BE5               	goto	u4351
 14299     13E4  2BE6               	goto	u4350
 14300     13E5                     u4351:
 14301     13E5  2BF1               	goto	l1188
 14302     13E6                     u4350:
 14303     13E6                     l4189:
 14304     13E6  09C3               	comf	___fltol@f1,f
 14305     13E7  09C4               	comf	___fltol@f1+1,f
 14306     13E8  09C5               	comf	___fltol@f1+2,f
 14307     13E9  09C6               	comf	___fltol@f1+3,f
 14308     13EA  0AC3               	incf	___fltol@f1,f
 14309     13EB  1903               	skipnz
 14310     13EC  0AC4               	incf	___fltol@f1+1,f
 14311     13ED  1903               	skipnz
 14312     13EE  0AC5               	incf	___fltol@f1+2,f
 14313     13EF  1903               	skipnz
 14314     13F0  0AC6               	incf	___fltol@f1+3,f
 14315     13F1                     l1188:
 14316     13F1                     l1178:
 14317     13F1  0008               	return
 14318     13F2                     __end_of___fltol:
 14319                           
 14320                           	psect	text39
 14321     09D4                     __ptext39:	
 14322 ;; *************** function ___flmul *****************
 14323 ;; Defined at:
 14324 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/sprcmul.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;  b               4    9[BANK0 ] long 
 14327 ;;  a               4   13[BANK0 ] long 
 14328 ;; Auto vars:     Size  Location     Type
 14329 ;;  prod            4   29[BANK0 ] struct .
 14330 ;;  grs             4   23[BANK0 ] unsigned long 
 14331 ;;  temp            2   33[BANK0 ] struct .
 14332 ;;  bexp            1   28[BANK0 ] unsigned char 
 14333 ;;  aexp            1   27[BANK0 ] unsigned char 
 14334 ;;  sign            1   22[BANK0 ] unsigned char 
 14335 ;; Return value:  Size  Location     Type
 14336 ;;                  4    9[BANK0 ] unsigned char 
 14337 ;; Registers used:
 14338 ;;		wreg, status,2, status,0, pclath, cstack
 14339 ;; Tracked objects:
 14340 ;;		On entry : 0/0
 14341 ;;		On exit  : 0/0
 14342 ;;		Unchanged: 0/0
 14343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14344 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14346 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;Total ram usage:       26 bytes
 14349 ;; Hardware stack levels used: 1
 14350 ;; Hardware stack levels required when called: 3
 14351 ;; This function calls:
 14352 ;;		__Umul8_16
 14353 ;; This function is called by:
 14354 ;;		_get_measured_value
 14355 ;; This function uses a non-reentrant model
 14356 ;;
 14357                           
 14358     09D4                     ___flmul:	
 14359                           ;psect for function ___flmul
 14360                           
 14361     09D4                     l4191:	
 14362                           ;incstack = 0
 14363                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14364                           
 14365     09D4  0140               	movlb	0	; select bank0
 14366     09D5  082C               	movf	___flmul@b+3,w
 14367     09D6  3980               	andlw	128
 14368     09D7  00B6               	movwf	___flmul@sign
 14369     09D8                     l4193:
 14370     09D8  352C               	lslf	___flmul@b+3,w
 14371     09D9  00BC               	movwf	___flmul@bexp
 14372     09DA                     l4195:
 14373     09DA  1FAB               	btfss	___flmul@b+2,7
 14374     09DB  29DD               	goto	u4361
 14375     09DC  29DE               	goto	u4360
 14376     09DD                     u4361:
 14377     09DD  29DF               	goto	l4199
 14378     09DE                     u4360:
 14379     09DE                     l4197:
 14380     09DE  143C               	bsf	___flmul@bexp,0
 14381     09DF                     l4199:
 14382     09DF  083C               	movf	___flmul@bexp,w
 14383     09E0  1903               	btfsc	3,2
 14384     09E1  29E3               	goto	u4371
 14385     09E2  29E4               	goto	u4370
 14386     09E3                     u4371:
 14387     09E3  29F3               	goto	l4207
 14388     09E4                     u4370:
 14389     09E4                     l4201:
 14390     09E4  0A3C               	incf	___flmul@bexp,w
 14391     09E5  1D03               	btfss	3,2
 14392     09E6  29E8               	goto	u4381
 14393     09E7  29E9               	goto	u4380
 14394     09E8                     u4381:
 14395     09E8  29F1               	goto	l4205
 14396     09E9                     u4380:
 14397     09E9                     l4203:
 14398     09E9  3000               	movlw	0
 14399     09EA  00AC               	movwf	___flmul@b+3
 14400     09EB  3000               	movlw	0
 14401     09EC  00AB               	movwf	___flmul@b+2
 14402     09ED  3000               	movlw	0
 14403     09EE  00AA               	movwf	___flmul@b+1
 14404     09EF  3000               	movlw	0
 14405     09F0  00A9               	movwf	___flmul@b
 14406     09F1                     l4205:
 14407     09F1  17AB               	bsf	___flmul@b+2,7
 14408     09F2  29FB               	goto	l4209
 14409     09F3                     l4207:
 14410     09F3  3000               	movlw	0
 14411     09F4  00AC               	movwf	___flmul@b+3
 14412     09F5  3000               	movlw	0
 14413     09F6  00AB               	movwf	___flmul@b+2
 14414     09F7  3000               	movlw	0
 14415     09F8  00AA               	movwf	___flmul@b+1
 14416     09F9  3000               	movlw	0
 14417     09FA  00A9               	movwf	___flmul@b
 14418     09FB                     l4209:
 14419     09FB  0830               	movf	___flmul@a+3,w
 14420     09FC  3980               	andlw	128
 14421     09FD  00B1               	movwf	??___flmul
 14422     09FE  0831               	movf	??___flmul,w
 14423     09FF  06B6               	xorwf	___flmul@sign,f
 14424     0A00                     l4211:
 14425     0A00  3530               	lslf	___flmul@a+3,w
 14426     0A01  00BB               	movwf	___flmul@aexp
 14427     0A02                     l4213:
 14428     0A02  1FAF               	btfss	___flmul@a+2,7
 14429     0A03  2A05               	goto	u4391
 14430     0A04  2A06               	goto	u4390
 14431     0A05                     u4391:
 14432     0A05  2A07               	goto	l4217
 14433     0A06                     u4390:
 14434     0A06                     l4215:
 14435     0A06  143B               	bsf	___flmul@aexp,0
 14436     0A07                     l4217:
 14437     0A07  083B               	movf	___flmul@aexp,w
 14438     0A08  1903               	btfsc	3,2
 14439     0A09  2A0B               	goto	u4401
 14440     0A0A  2A0C               	goto	u4400
 14441     0A0B                     u4401:
 14442     0A0B  2A1B               	goto	l4225
 14443     0A0C                     u4400:
 14444     0A0C                     l4219:
 14445     0A0C  0A3B               	incf	___flmul@aexp,w
 14446     0A0D  1D03               	btfss	3,2
 14447     0A0E  2A10               	goto	u4411
 14448     0A0F  2A11               	goto	u4410
 14449     0A10                     u4411:
 14450     0A10  2A19               	goto	l4223
 14451     0A11                     u4410:
 14452     0A11                     l4221:
 14453     0A11  3000               	movlw	0
 14454     0A12  00B0               	movwf	___flmul@a+3
 14455     0A13  3000               	movlw	0
 14456     0A14  00AF               	movwf	___flmul@a+2
 14457     0A15  3000               	movlw	0
 14458     0A16  00AE               	movwf	___flmul@a+1
 14459     0A17  3000               	movlw	0
 14460     0A18  00AD               	movwf	___flmul@a
 14461     0A19                     l4223:
 14462     0A19  17AF               	bsf	___flmul@a+2,7
 14463     0A1A  2A23               	goto	l4227
 14464     0A1B                     l4225:
 14465     0A1B  3000               	movlw	0
 14466     0A1C  00B0               	movwf	___flmul@a+3
 14467     0A1D  3000               	movlw	0
 14468     0A1E  00AF               	movwf	___flmul@a+2
 14469     0A1F  3000               	movlw	0
 14470     0A20  00AE               	movwf	___flmul@a+1
 14471     0A21  3000               	movlw	0
 14472     0A22  00AD               	movwf	___flmul@a
 14473     0A23                     l4227:
 14474     0A23  083B               	movf	___flmul@aexp,w
 14475     0A24  1903               	btfsc	3,2
 14476     0A25  2A27               	goto	u4421
 14477     0A26  2A28               	goto	u4420
 14478     0A27                     u4421:
 14479     0A27  2A2D               	goto	l4231
 14480     0A28                     u4420:
 14481     0A28                     l4229:
 14482     0A28  083C               	movf	___flmul@bexp,w
 14483     0A29  1D03               	btfss	3,2
 14484     0A2A  2A2C               	goto	u4431
 14485     0A2B  2A2D               	goto	u4430
 14486     0A2C                     u4431:
 14487     0A2C  2A36               	goto	l4235
 14488     0A2D                     u4430:
 14489     0A2D                     l4231:
 14490     0A2D  3000               	movlw	0
 14491     0A2E  00AC               	movwf	?___flmul+3
 14492     0A2F  3000               	movlw	0
 14493     0A30  00AB               	movwf	?___flmul+2
 14494     0A31  3000               	movlw	0
 14495     0A32  00AA               	movwf	?___flmul+1
 14496     0A33  3000               	movlw	0
 14497     0A34  00A9               	movwf	?___flmul
 14498     0A35  2C0E               	goto	l1381
 14499     0A36                     l4235:
 14500     0A36  0829               	movf	___flmul@b,w
 14501     0A37  00A0               	movwf	__Umul8_16@multiplicand
 14502     0A38  082F               	movf	___flmul@a+2,w
 14503     0A39  319F  27B2  3189   	fcall	__Umul8_16
 14504     0A3C  0140               	movlb	0	; select bank0
 14505     0A3D  0821               	movf	?__Umul8_16+1,w
 14506     0A3E  00C2               	movwf	___flmul@temp+1
 14507     0A3F  0820               	movf	?__Umul8_16,w
 14508     0A40  00C1               	movwf	___flmul@temp
 14509     0A41                     l4237:
 14510     0A41  0841               	movf	___flmul@temp,w
 14511     0A42  00B1               	movwf	??___flmul
 14512     0A43  01B2               	clrf	??___flmul+1
 14513     0A44  01B3               	clrf	??___flmul+2
 14514     0A45  01B4               	clrf	??___flmul+3
 14515     0A46  0834               	movf	??___flmul+3,w
 14516     0A47  00BA               	movwf	___flmul@grs+3
 14517     0A48  0833               	movf	??___flmul+2,w
 14518     0A49  00B9               	movwf	___flmul@grs+2
 14519     0A4A  0832               	movf	??___flmul+1,w
 14520     0A4B  00B8               	movwf	___flmul@grs+1
 14521     0A4C  0831               	movf	??___flmul,w
 14522     0A4D  00B7               	movwf	___flmul@grs
 14523     0A4E                     l4239:
 14524     0A4E  0842               	movf	___flmul@temp+1,w
 14525     0A4F  00B1               	movwf	??___flmul
 14526     0A50  01B2               	clrf	??___flmul+1
 14527     0A51  01B3               	clrf	??___flmul+2
 14528     0A52  01B4               	clrf	??___flmul+3
 14529     0A53  0834               	movf	??___flmul+3,w
 14530     0A54  00C0               	movwf	___flmul@prod+3
 14531     0A55  0833               	movf	??___flmul+2,w
 14532     0A56  00BF               	movwf	___flmul@prod+2
 14533     0A57  0832               	movf	??___flmul+1,w
 14534     0A58  00BE               	movwf	___flmul@prod+1
 14535     0A59  0831               	movf	??___flmul,w
 14536     0A5A  00BD               	movwf	___flmul@prod
 14537     0A5B  082A               	movf	___flmul@b+1,w
 14538     0A5C  00A0               	movwf	__Umul8_16@multiplicand
 14539     0A5D  082E               	movf	___flmul@a+1,w
 14540     0A5E  319F  27B2  3189   	fcall	__Umul8_16
 14541     0A61  0140               	movlb	0	; select bank0
 14542     0A62  0821               	movf	?__Umul8_16+1,w
 14543     0A63  00C2               	movwf	___flmul@temp+1
 14544     0A64  0820               	movf	?__Umul8_16,w
 14545     0A65  00C1               	movwf	___flmul@temp
 14546     0A66                     l4241:
 14547     0A66  0841               	movf	___flmul@temp,w
 14548     0A67  00B1               	movwf	??___flmul
 14549     0A68  01B2               	clrf	??___flmul+1
 14550     0A69  01B3               	clrf	??___flmul+2
 14551     0A6A  01B4               	clrf	??___flmul+3
 14552     0A6B  0831               	movf	??___flmul,w
 14553     0A6C  07B7               	addwf	___flmul@grs,f
 14554     0A6D  0832               	movf	??___flmul+1,w
 14555     0A6E  3DB8               	addwfc	___flmul@grs+1,f
 14556     0A6F  0833               	movf	??___flmul+2,w
 14557     0A70  3DB9               	addwfc	___flmul@grs+2,f
 14558     0A71  0834               	movf	??___flmul+3,w
 14559     0A72  3DBA               	addwfc	___flmul@grs+3,f
 14560     0A73                     l4243:
 14561     0A73  0842               	movf	___flmul@temp+1,w
 14562     0A74  00B1               	movwf	??___flmul
 14563     0A75  01B2               	clrf	??___flmul+1
 14564     0A76  01B3               	clrf	??___flmul+2
 14565     0A77  01B4               	clrf	??___flmul+3
 14566     0A78  0831               	movf	??___flmul,w
 14567     0A79  07BD               	addwf	___flmul@prod,f
 14568     0A7A  0832               	movf	??___flmul+1,w
 14569     0A7B  3DBE               	addwfc	___flmul@prod+1,f
 14570     0A7C  0833               	movf	??___flmul+2,w
 14571     0A7D  3DBF               	addwfc	___flmul@prod+2,f
 14572     0A7E  0834               	movf	??___flmul+3,w
 14573     0A7F  3DC0               	addwfc	___flmul@prod+3,f
 14574     0A80  082B               	movf	___flmul@b+2,w
 14575     0A81  00A0               	movwf	__Umul8_16@multiplicand
 14576     0A82  082D               	movf	___flmul@a,w
 14577     0A83  319F  27B2  3189   	fcall	__Umul8_16
 14578     0A86  0140               	movlb	0	; select bank0
 14579     0A87  0821               	movf	?__Umul8_16+1,w
 14580     0A88  00C2               	movwf	___flmul@temp+1
 14581     0A89  0820               	movf	?__Umul8_16,w
 14582     0A8A  00C1               	movwf	___flmul@temp
 14583     0A8B                     l4245:
 14584     0A8B  0841               	movf	___flmul@temp,w
 14585     0A8C  00B1               	movwf	??___flmul
 14586     0A8D  01B2               	clrf	??___flmul+1
 14587     0A8E  01B3               	clrf	??___flmul+2
 14588     0A8F  01B4               	clrf	??___flmul+3
 14589     0A90  0831               	movf	??___flmul,w
 14590     0A91  07B7               	addwf	___flmul@grs,f
 14591     0A92  0832               	movf	??___flmul+1,w
 14592     0A93  3DB8               	addwfc	___flmul@grs+1,f
 14593     0A94  0833               	movf	??___flmul+2,w
 14594     0A95  3DB9               	addwfc	___flmul@grs+2,f
 14595     0A96  0834               	movf	??___flmul+3,w
 14596     0A97  3DBA               	addwfc	___flmul@grs+3,f
 14597     0A98                     l4247:
 14598     0A98  0842               	movf	___flmul@temp+1,w
 14599     0A99  00B1               	movwf	??___flmul
 14600     0A9A  01B2               	clrf	??___flmul+1
 14601     0A9B  01B3               	clrf	??___flmul+2
 14602     0A9C  01B4               	clrf	??___flmul+3
 14603     0A9D  0831               	movf	??___flmul,w
 14604     0A9E  07BD               	addwf	___flmul@prod,f
 14605     0A9F  0832               	movf	??___flmul+1,w
 14606     0AA0  3DBE               	addwfc	___flmul@prod+1,f
 14607     0AA1  0833               	movf	??___flmul+2,w
 14608     0AA2  3DBF               	addwfc	___flmul@prod+2,f
 14609     0AA3  0834               	movf	??___flmul+3,w
 14610     0AA4  3DC0               	addwfc	___flmul@prod+3,f
 14611     0AA5                     l4249:
 14612     0AA5  3008               	movlw	8
 14613     0AA6                     u4445:
 14614     0AA6  35B7               	lslf	___flmul@grs,f
 14615     0AA7  0DB8               	rlf	___flmul@grs+1,f
 14616     0AA8  0DB9               	rlf	___flmul@grs+2,f
 14617     0AA9  0DBA               	rlf	___flmul@grs+3,f
 14618     0AAA  0B89               	decfsz	9,f
 14619     0AAB  2AA6               	goto	u4445
 14620     0AAC                     l4251:
 14621     0AAC  082A               	movf	___flmul@b+1,w
 14622     0AAD  00A0               	movwf	__Umul8_16@multiplicand
 14623     0AAE  082D               	movf	___flmul@a,w
 14624     0AAF  319F  27B2  3189   	fcall	__Umul8_16
 14625     0AB2  0140               	movlb	0	; select bank0
 14626     0AB3  0821               	movf	?__Umul8_16+1,w
 14627     0AB4  00C2               	movwf	___flmul@temp+1
 14628     0AB5  0820               	movf	?__Umul8_16,w
 14629     0AB6  00C1               	movwf	___flmul@temp
 14630     0AB7                     l4253:
 14631     0AB7  0841               	movf	___flmul@temp,w
 14632     0AB8  07B7               	addwf	___flmul@grs,f
 14633     0AB9  0842               	movf	___flmul@temp+1,w
 14634     0ABA  3DB8               	addwfc	___flmul@grs+1,f
 14635     0ABB  3000               	movlw	0
 14636     0ABC  3DB9               	addwfc	___flmul@grs+2,f
 14637     0ABD  3DBA               	addwfc	___flmul@grs+3,f
 14638     0ABE                     l4255:
 14639     0ABE  0829               	movf	___flmul@b,w
 14640     0ABF  00A0               	movwf	__Umul8_16@multiplicand
 14641     0AC0  082E               	movf	___flmul@a+1,w
 14642     0AC1  319F  27B2  3189   	fcall	__Umul8_16
 14643     0AC4  0140               	movlb	0	; select bank0
 14644     0AC5  0821               	movf	?__Umul8_16+1,w
 14645     0AC6  00C2               	movwf	___flmul@temp+1
 14646     0AC7  0820               	movf	?__Umul8_16,w
 14647     0AC8  00C1               	movwf	___flmul@temp
 14648     0AC9                     l4257:
 14649     0AC9  0841               	movf	___flmul@temp,w
 14650     0ACA  07B7               	addwf	___flmul@grs,f
 14651     0ACB  0842               	movf	___flmul@temp+1,w
 14652     0ACC  3DB8               	addwfc	___flmul@grs+1,f
 14653     0ACD  3000               	movlw	0
 14654     0ACE  3DB9               	addwfc	___flmul@grs+2,f
 14655     0ACF  3DBA               	addwfc	___flmul@grs+3,f
 14656     0AD0                     l4259:
 14657     0AD0  3008               	movlw	8
 14658     0AD1                     u4455:
 14659     0AD1  35B7               	lslf	___flmul@grs,f
 14660     0AD2  0DB8               	rlf	___flmul@grs+1,f
 14661     0AD3  0DB9               	rlf	___flmul@grs+2,f
 14662     0AD4  0DBA               	rlf	___flmul@grs+3,f
 14663     0AD5  0B89               	decfsz	9,f
 14664     0AD6  2AD1               	goto	u4455
 14665     0AD7  0829               	movf	___flmul@b,w
 14666     0AD8  00A0               	movwf	__Umul8_16@multiplicand
 14667     0AD9  082D               	movf	___flmul@a,w
 14668     0ADA  319F  27B2  3189   	fcall	__Umul8_16
 14669     0ADD  0140               	movlb	0	; select bank0
 14670     0ADE  0821               	movf	?__Umul8_16+1,w
 14671     0ADF  00C2               	movwf	___flmul@temp+1
 14672     0AE0  0820               	movf	?__Umul8_16,w
 14673     0AE1  00C1               	movwf	___flmul@temp
 14674     0AE2                     l4261:
 14675     0AE2  0841               	movf	___flmul@temp,w
 14676     0AE3  07B7               	addwf	___flmul@grs,f
 14677     0AE4  0842               	movf	___flmul@temp+1,w
 14678     0AE5  3DB8               	addwfc	___flmul@grs+1,f
 14679     0AE6  3000               	movlw	0
 14680     0AE7  3DB9               	addwfc	___flmul@grs+2,f
 14681     0AE8  3DBA               	addwfc	___flmul@grs+3,f
 14682     0AE9                     l4263:
 14683     0AE9  082A               	movf	___flmul@b+1,w
 14684     0AEA  00A0               	movwf	__Umul8_16@multiplicand
 14685     0AEB  082F               	movf	___flmul@a+2,w
 14686     0AEC  319F  27B2  3189   	fcall	__Umul8_16
 14687     0AEF  0140               	movlb	0	; select bank0
 14688     0AF0  0821               	movf	?__Umul8_16+1,w
 14689     0AF1  00C2               	movwf	___flmul@temp+1
 14690     0AF2  0820               	movf	?__Umul8_16,w
 14691     0AF3  00C1               	movwf	___flmul@temp
 14692     0AF4  0841               	movf	___flmul@temp,w
 14693     0AF5  07BD               	addwf	___flmul@prod,f
 14694     0AF6  0842               	movf	___flmul@temp+1,w
 14695     0AF7  3DBE               	addwfc	___flmul@prod+1,f
 14696     0AF8  3000               	movlw	0
 14697     0AF9  3DBF               	addwfc	___flmul@prod+2,f
 14698     0AFA  3DC0               	addwfc	___flmul@prod+3,f
 14699     0AFB                     l4265:
 14700     0AFB  082B               	movf	___flmul@b+2,w
 14701     0AFC  00A0               	movwf	__Umul8_16@multiplicand
 14702     0AFD  082E               	movf	___flmul@a+1,w
 14703     0AFE  319F  27B2  3189   	fcall	__Umul8_16
 14704     0B01  0140               	movlb	0	; select bank0
 14705     0B02  0821               	movf	?__Umul8_16+1,w
 14706     0B03  00C2               	movwf	___flmul@temp+1
 14707     0B04  0820               	movf	?__Umul8_16,w
 14708     0B05  00C1               	movwf	___flmul@temp
 14709     0B06                     l4267:
 14710     0B06  0841               	movf	___flmul@temp,w
 14711     0B07  07BD               	addwf	___flmul@prod,f
 14712     0B08  0842               	movf	___flmul@temp+1,w
 14713     0B09  3DBE               	addwfc	___flmul@prod+1,f
 14714     0B0A  3000               	movlw	0
 14715     0B0B  3DBF               	addwfc	___flmul@prod+2,f
 14716     0B0C  3DC0               	addwfc	___flmul@prod+3,f
 14717     0B0D  082B               	movf	___flmul@b+2,w
 14718     0B0E  00A0               	movwf	__Umul8_16@multiplicand
 14719     0B0F  082F               	movf	___flmul@a+2,w
 14720     0B10  319F  27B2  3189   	fcall	__Umul8_16
 14721     0B13  0140               	movlb	0	; select bank0
 14722     0B14  0821               	movf	?__Umul8_16+1,w
 14723     0B15  00C2               	movwf	___flmul@temp+1
 14724     0B16  0820               	movf	?__Umul8_16,w
 14725     0B17  00C1               	movwf	___flmul@temp
 14726     0B18                     l4269:
 14727     0B18  0841               	movf	___flmul@temp,w
 14728     0B19  00B1               	movwf	??___flmul
 14729     0B1A  0842               	movf	___flmul@temp+1,w
 14730     0B1B  00B2               	movwf	??___flmul+1
 14731     0B1C  01B3               	clrf	??___flmul+2
 14732     0B1D  01B4               	clrf	??___flmul+3
 14733     0B1E  3008               	movlw	8
 14734     0B1F                     u4465:
 14735     0B1F  35B1               	lslf	??___flmul,f
 14736     0B20  0DB2               	rlf	??___flmul+1,f
 14737     0B21  0DB3               	rlf	??___flmul+2,f
 14738     0B22  0DB4               	rlf	??___flmul+3,f
 14739     0B23                     u4460:
 14740     0B23  0B89               	decfsz	9,f
 14741     0B24  2B1F               	goto	u4465
 14742     0B25  0831               	movf	??___flmul,w
 14743     0B26  07BD               	addwf	___flmul@prod,f
 14744     0B27  0832               	movf	??___flmul+1,w
 14745     0B28  3DBE               	addwfc	___flmul@prod+1,f
 14746     0B29  0833               	movf	??___flmul+2,w
 14747     0B2A  3DBF               	addwfc	___flmul@prod+2,f
 14748     0B2B  0834               	movf	??___flmul+3,w
 14749     0B2C  3DC0               	addwfc	___flmul@prod+3,f
 14750     0B2D                     l4271:
 14751     0B2D  0837               	movf	___flmul@grs,w
 14752     0B2E  00B1               	movwf	??___flmul
 14753     0B2F  0838               	movf	___flmul@grs+1,w
 14754     0B30  00B2               	movwf	??___flmul+1
 14755     0B31  0839               	movf	___flmul@grs+2,w
 14756     0B32  00B3               	movwf	??___flmul+2
 14757     0B33  083A               	movf	___flmul@grs+3,w
 14758     0B34  00B4               	movwf	??___flmul+3
 14759     0B35  3018               	movlw	24
 14760     0B36                     u4475:
 14761     0B36  36B4               	lsrf	??___flmul+3,f
 14762     0B37  0CB3               	rrf	??___flmul+2,f
 14763     0B38  0CB2               	rrf	??___flmul+1,f
 14764     0B39  0CB1               	rrf	??___flmul,f
 14765     0B3A                     u4470:
 14766     0B3A  0B89               	decfsz	9,f
 14767     0B3B  2B36               	goto	u4475
 14768     0B3C  0831               	movf	??___flmul,w
 14769     0B3D  07BD               	addwf	___flmul@prod,f
 14770     0B3E  0832               	movf	??___flmul+1,w
 14771     0B3F  3DBE               	addwfc	___flmul@prod+1,f
 14772     0B40  0833               	movf	??___flmul+2,w
 14773     0B41  3DBF               	addwfc	___flmul@prod+2,f
 14774     0B42  0834               	movf	??___flmul+3,w
 14775     0B43  3DC0               	addwfc	___flmul@prod+3,f
 14776     0B44                     l4273:
 14777     0B44  3008               	movlw	8
 14778     0B45                     u4485:
 14779     0B45  35B7               	lslf	___flmul@grs,f
 14780     0B46  0DB8               	rlf	___flmul@grs+1,f
 14781     0B47  0DB9               	rlf	___flmul@grs+2,f
 14782     0B48  0DBA               	rlf	___flmul@grs+3,f
 14783     0B49  0B89               	decfsz	9,f
 14784     0B4A  2B45               	goto	u4485
 14785     0B4B                     l4275:
 14786     0B4B  083C               	movf	___flmul@bexp,w
 14787     0B4C  073B               	addwf	___flmul@aexp,w
 14788     0B4D  00B1               	movwf	??___flmul
 14789     0B4E  01B2               	clrf	??___flmul+1
 14790     0B4F  0DB2               	rlf	??___flmul+1,f
 14791     0B50  0831               	movf	??___flmul,w
 14792     0B51  3E82               	addlw	130
 14793     0B52  00C1               	movwf	___flmul@temp
 14794     0B53  30FF               	movlw	255
 14795     0B54  3D32               	addwfc	??___flmul+1,w
 14796     0B55  00C2               	movwf	___flmul@temp+1
 14797     0B56  2B6E               	goto	l4287
 14798     0B57                     l4277:
 14799     0B57  3001               	movlw	1
 14800     0B58                     u4495:
 14801     0B58  35BD               	lslf	___flmul@prod,f
 14802     0B59  0DBE               	rlf	___flmul@prod+1,f
 14803     0B5A  0DBF               	rlf	___flmul@prod+2,f
 14804     0B5B  0DC0               	rlf	___flmul@prod+3,f
 14805     0B5C  0B89               	decfsz	9,f
 14806     0B5D  2B58               	goto	u4495
 14807     0B5E                     l4279:
 14808     0B5E  1FBA               	btfss	___flmul@grs+3,7
 14809     0B5F  2B61               	goto	u4501
 14810     0B60  2B62               	goto	u4500
 14811     0B61                     u4501:
 14812     0B61  2B63               	goto	l4283
 14813     0B62                     u4500:
 14814     0B62                     l4281:
 14815     0B62  143D               	bsf	___flmul@prod,0
 14816     0B63                     l4283:
 14817     0B63  3001               	movlw	1
 14818     0B64                     u4515:
 14819     0B64  35B7               	lslf	___flmul@grs,f
 14820     0B65  0DB8               	rlf	___flmul@grs+1,f
 14821     0B66  0DB9               	rlf	___flmul@grs+2,f
 14822     0B67  0DBA               	rlf	___flmul@grs+3,f
 14823     0B68  0B89               	decfsz	9,f
 14824     0B69  2B64               	goto	u4515
 14825     0B6A                     l4285:
 14826     0B6A  30FF               	movlw	255
 14827     0B6B  07C1               	addwf	___flmul@temp,f
 14828     0B6C  30FF               	movlw	255
 14829     0B6D  3DC2               	addwfc	___flmul@temp+1,f
 14830     0B6E                     l4287:
 14831     0B6E  1FBF               	btfss	___flmul@prod+2,7
 14832     0B6F  2B71               	goto	u4521
 14833     0B70  2B72               	goto	u4520
 14834     0B71                     u4521:
 14835     0B71  2B57               	goto	l4277
 14836     0B72                     u4520:
 14837     0B72                     l4289:
 14838     0B72  01BB               	clrf	___flmul@aexp
 14839     0B73                     l4291:
 14840     0B73  1FBA               	btfss	___flmul@grs+3,7
 14841     0B74  2B76               	goto	u4531
 14842     0B75  2B77               	goto	u4530
 14843     0B76                     u4531:
 14844     0B76  2B93               	goto	l4299
 14845     0B77                     u4530:
 14846     0B77                     l4293:
 14847     0B77  30FF               	movlw	255
 14848     0B78  0537               	andwf	___flmul@grs,w
 14849     0B79  00B1               	movwf	??___flmul
 14850     0B7A  30FF               	movlw	255
 14851     0B7B  0538               	andwf	___flmul@grs+1,w
 14852     0B7C  00B2               	movwf	??___flmul+1
 14853     0B7D  30FF               	movlw	255
 14854     0B7E  0539               	andwf	___flmul@grs+2,w
 14855     0B7F  00B3               	movwf	??___flmul+2
 14856     0B80  307F               	movlw	127
 14857     0B81  053A               	andwf	___flmul@grs+3,w
 14858     0B82  00B4               	movwf	??___flmul+3
 14859     0B83  0834               	movf	??___flmul+3,w
 14860     0B84  0433               	iorwf	??___flmul+2,w
 14861     0B85  0432               	iorwf	??___flmul+1,w
 14862     0B86  0431               	iorwf	??___flmul,w
 14863     0B87  1903               	skipnz
 14864     0B88  2B8A               	goto	u4541
 14865     0B89  2B8B               	goto	u4540
 14866     0B8A                     u4541:
 14867     0B8A  2B8E               	goto	l1387
 14868     0B8B                     u4540:
 14869     0B8B                     l4295:
 14870     0B8B  01BB               	clrf	___flmul@aexp
 14871     0B8C  0ABB               	incf	___flmul@aexp,f
 14872     0B8D  2B93               	goto	l4299
 14873     0B8E                     l1387:
 14874     0B8E  1C3D               	btfss	___flmul@prod,0
 14875     0B8F  2B91               	goto	u4551
 14876     0B90  2B92               	goto	u4550
 14877     0B91                     u4551:
 14878     0B91  2B93               	goto	l4299
 14879     0B92                     u4550:
 14880     0B92  2B8B               	goto	l4295
 14881     0B93                     l4299:
 14882     0B93  083B               	movf	___flmul@aexp,w
 14883     0B94  1903               	btfsc	3,2
 14884     0B95  2B97               	goto	u4561
 14885     0B96  2B98               	goto	u4560
 14886     0B97                     u4561:
 14887     0B97  2BC0               	goto	l4309
 14888     0B98                     u4560:
 14889     0B98                     l4301:
 14890     0B98  3001               	movlw	1
 14891     0B99  07BD               	addwf	___flmul@prod,f
 14892     0B9A  3000               	movlw	0
 14893     0B9B  3DBE               	addwfc	___flmul@prod+1,f
 14894     0B9C  3000               	movlw	0
 14895     0B9D  3DBF               	addwfc	___flmul@prod+2,f
 14896     0B9E  3000               	movlw	0
 14897     0B9F  3DC0               	addwfc	___flmul@prod+3,f
 14898     0BA0                     l4303:
 14899     0BA0  1C40               	btfss	___flmul@prod+3,0
 14900     0BA1  2BA3               	goto	u4571
 14901     0BA2  2BA4               	goto	u4570
 14902     0BA3                     u4571:
 14903     0BA3  2BC0               	goto	l4309
 14904     0BA4                     u4570:
 14905     0BA4                     l4305:
 14906     0BA4  083D               	movf	___flmul@prod,w
 14907     0BA5  00B1               	movwf	??___flmul
 14908     0BA6  083E               	movf	___flmul@prod+1,w
 14909     0BA7  00B2               	movwf	??___flmul+1
 14910     0BA8  083F               	movf	___flmul@prod+2,w
 14911     0BA9  00B3               	movwf	??___flmul+2
 14912     0BAA  0840               	movf	___flmul@prod+3,w
 14913     0BAB  00B4               	movwf	??___flmul+3
 14914     0BAC  3001               	movlw	1
 14915     0BAD  00B5               	movwf	??___flmul+4
 14916     0BAE                     u4585:
 14917     0BAE  37B4               	asrf	??___flmul+3,f
 14918     0BAF  0CB3               	rrf	??___flmul+2,f
 14919     0BB0  0CB2               	rrf	??___flmul+1,f
 14920     0BB1  0CB1               	rrf	??___flmul,f
 14921     0BB2                     u4580:
 14922     0BB2  0BB5               	decfsz	??___flmul+4,f
 14923     0BB3  2BAE               	goto	u4585
 14924     0BB4  0834               	movf	??___flmul+3,w
 14925     0BB5  00C0               	movwf	___flmul@prod+3
 14926     0BB6  0833               	movf	??___flmul+2,w
 14927     0BB7  00BF               	movwf	___flmul@prod+2
 14928     0BB8  0832               	movf	??___flmul+1,w
 14929     0BB9  00BE               	movwf	___flmul@prod+1
 14930     0BBA  0831               	movf	??___flmul,w
 14931     0BBB  00BD               	movwf	___flmul@prod
 14932     0BBC                     l4307:
 14933     0BBC  3001               	movlw	1
 14934     0BBD  07C1               	addwf	___flmul@temp,f
 14935     0BBE  3000               	movlw	0
 14936     0BBF  3DC2               	addwfc	___flmul@temp+1,f
 14937     0BC0                     l4309:
 14938     0BC0  0842               	movf	___flmul@temp+1,w
 14939     0BC1  3A80               	xorlw	128
 14940     0BC2  00B1               	movwf	??___flmul
 14941     0BC3  3080               	movlw	128
 14942     0BC4  0231               	subwf	??___flmul,w
 14943     0BC5  1D03               	skipz
 14944     0BC6  2BC9               	goto	u4595
 14945     0BC7  30FF               	movlw	255
 14946     0BC8  0241               	subwf	___flmul@temp,w
 14947     0BC9                     u4595:
 14948     0BC9  1C03               	skipc
 14949     0BCA  2BCC               	goto	u4591
 14950     0BCB  2BCD               	goto	u4590
 14951     0BCC                     u4591:
 14952     0BCC  2BD7               	goto	l4313
 14953     0BCD                     u4590:
 14954     0BCD                     l4311:
 14955     0BCD  307F               	movlw	127
 14956     0BCE  0140               	movlb	0	; select bank0
 14957     0BCF  00C0               	movwf	___flmul@prod+3
 14958     0BD0  3080               	movlw	128
 14959     0BD1  00BF               	movwf	___flmul@prod+2
 14960     0BD2  3000               	movlw	0
 14961     0BD3  00BE               	movwf	___flmul@prod+1
 14962     0BD4  3000               	movlw	0
 14963     0BD5  00BD               	movwf	___flmul@prod
 14964     0BD6  2C02               	goto	l1393
 14965     0BD7                     l4313:
 14966     0BD7  0140               	movlb	0	; select bank0
 14967     0BD8  0842               	movf	___flmul@temp+1,w
 14968     0BD9  3A80               	xorlw	128
 14969     0BDA  00B1               	movwf	??___flmul
 14970     0BDB  3080               	movlw	128
 14971     0BDC  0231               	subwf	??___flmul,w
 14972     0BDD  1D03               	skipz
 14973     0BDE  2BE1               	goto	u4605
 14974     0BDF  3001               	movlw	1
 14975     0BE0  0241               	subwf	___flmul@temp,w
 14976     0BE1                     u4605:
 14977     0BE1  1803               	skipnc
 14978     0BE2  2BE4               	goto	u4601
 14979     0BE3  2BE5               	goto	u4600
 14980     0BE4                     u4601:
 14981     0BE4  2BF0               	goto	l4319
 14982     0BE5                     u4600:
 14983     0BE5                     l4315:
 14984     0BE5  3000               	movlw	0
 14985     0BE6  0140               	movlb	0	; select bank0
 14986     0BE7  00C0               	movwf	___flmul@prod+3
 14987     0BE8  3000               	movlw	0
 14988     0BE9  00BF               	movwf	___flmul@prod+2
 14989     0BEA  3000               	movlw	0
 14990     0BEB  00BE               	movwf	___flmul@prod+1
 14991     0BEC  3000               	movlw	0
 14992     0BED  00BD               	movwf	___flmul@prod
 14993     0BEE                     l4317:
 14994     0BEE  01B6               	clrf	___flmul@sign
 14995     0BEF  2C02               	goto	l1393
 14996     0BF0                     l4319:
 14997     0BF0  0140               	movlb	0	; select bank0
 14998     0BF1  0841               	movf	___flmul@temp,w
 14999     0BF2  00BC               	movwf	___flmul@bexp
 15000     0BF3  30FF               	movlw	255
 15001     0BF4  05BD               	andwf	___flmul@prod,f
 15002     0BF5  30FF               	movlw	255
 15003     0BF6  05BE               	andwf	___flmul@prod+1,f
 15004     0BF7  307F               	movlw	127
 15005     0BF8  05BF               	andwf	___flmul@prod+2,f
 15006     0BF9  3000               	movlw	0
 15007     0BFA  05C0               	andwf	___flmul@prod+3,f
 15008     0BFB                     l4321:
 15009     0BFB  1C3C               	btfss	___flmul@bexp,0
 15010     0BFC  2BFE               	goto	u4611
 15011     0BFD  2BFF               	goto	u4610
 15012     0BFE                     u4611:
 15013     0BFE  2C00               	goto	l4325
 15014     0BFF                     u4610:
 15015     0BFF                     l4323:
 15016     0BFF  17BF               	bsf	___flmul@prod+2,7
 15017     0C00                     l4325:
 15018     0C00  363C               	lsrf	___flmul@bexp,w
 15019     0C01  00C0               	movwf	___flmul@prod+3
 15020     0C02                     l1393:
 15021     0C02  0836               	movf	___flmul@sign,w
 15022     0C03  00B1               	movwf	??___flmul
 15023     0C04  0831               	movf	??___flmul,w
 15024     0C05  04C0               	iorwf	___flmul@prod+3,f
 15025     0C06                     l4327:
 15026     0C06  0840               	movf	___flmul@prod+3,w
 15027     0C07  00AC               	movwf	?___flmul+3
 15028     0C08  083F               	movf	___flmul@prod+2,w
 15029     0C09  00AB               	movwf	?___flmul+2
 15030     0C0A  083E               	movf	___flmul@prod+1,w
 15031     0C0B  00AA               	movwf	?___flmul+1
 15032     0C0C  083D               	movf	___flmul@prod,w
 15033     0C0D  00A9               	movwf	?___flmul
 15034     0C0E                     l1381:
 15035     0C0E  0008               	return
 15036     0C0F                     __end_of___flmul:
 15037                           
 15038                           	psect	text40
 15039     1FB2                     __ptext40:	
 15040 ;; *************** function __Umul8_16 *****************
 15041 ;; Defined at:
 15042 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8_16.c"
 15043 ;; Parameters:    Size  Location     Type
 15044 ;;  multiplier      1    wreg     unsigned char 
 15045 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;  multiplier      1    8[BANK0 ] unsigned char 
 15048 ;;  word_mpld       2    6[BANK0 ] unsigned int 
 15049 ;;  product         2    4[BANK0 ] unsigned int 
 15050 ;; Return value:  Size  Location     Type
 15051 ;;                  2    0[BANK0 ] unsigned int 
 15052 ;; Registers used:
 15053 ;;		wreg, status,2, status,0
 15054 ;; Tracked objects:
 15055 ;;		On entry : 0/0
 15056 ;;		On exit  : 0/0
 15057 ;;		Unchanged: 0/0
 15058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15059 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15060 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15062 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15063 ;;Total ram usage:        9 bytes
 15064 ;; Hardware stack levels used: 1
 15065 ;; Hardware stack levels required when called: 2
 15066 ;; This function calls:
 15067 ;;		Nothing
 15068 ;; This function is called by:
 15069 ;;		___flmul
 15070 ;; This function uses a non-reentrant model
 15071 ;;
 15072                           
 15073     1FB2                     __Umul8_16:	
 15074                           ;psect for function __Umul8_16
 15075                           
 15076                           
 15077                           ;incstack = 0
 15078                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15079                           ;__Umul8_16@multiplier stored from wreg
 15080     1FB2  0140               	movlb	0	; select bank0
 15081     1FB3  00A8               	movwf	__Umul8_16@multiplier
 15082     1FB4                     l3797:
 15083     1FB4  01A4               	clrf	__Umul8_16@product
 15084     1FB5  01A5               	clrf	__Umul8_16@product+1
 15085     1FB6                     l3799:
 15086     1FB6  0820               	movf	__Umul8_16@multiplicand,w
 15087     1FB7  00A2               	movwf	??__Umul8_16
 15088     1FB8  01A3               	clrf	??__Umul8_16+1
 15089     1FB9  0822               	movf	??__Umul8_16,w
 15090     1FBA  00A6               	movwf	__Umul8_16@word_mpld
 15091     1FBB  0823               	movf	??__Umul8_16+1,w
 15092     1FBC  00A7               	movwf	__Umul8_16@word_mpld+1
 15093     1FBD                     l3801:
 15094     1FBD  1C28               	btfss	__Umul8_16@multiplier,0
 15095     1FBE  2FC0               	goto	u3591
 15096     1FBF  2FC1               	goto	u3590
 15097     1FC0                     u3591:
 15098     1FC0  2FC5               	goto	l1400
 15099     1FC1                     u3590:
 15100     1FC1                     l3803:
 15101     1FC1  0826               	movf	__Umul8_16@word_mpld,w
 15102     1FC2  07A4               	addwf	__Umul8_16@product,f
 15103     1FC3  0827               	movf	__Umul8_16@word_mpld+1,w
 15104     1FC4  3DA5               	addwfc	__Umul8_16@product+1,f
 15105     1FC5                     l1400:
 15106     1FC5  3001               	movlw	1
 15107     1FC6                     u3605:
 15108     1FC6  35A6               	lslf	__Umul8_16@word_mpld,f
 15109     1FC7  0DA7               	rlf	__Umul8_16@word_mpld+1,f
 15110     1FC8  0B89               	decfsz	9,f
 15111     1FC9  2FC6               	goto	u3605
 15112     1FCA  1003               	clrc
 15113     1FCB  0CA8               	rrf	__Umul8_16@multiplier,f
 15114     1FCC                     l3805:
 15115     1FCC  0828               	movf	__Umul8_16@multiplier,w
 15116     1FCD  1D03               	btfss	3,2
 15117     1FCE  2FD0               	goto	u3611
 15118     1FCF  2FD1               	goto	u3610
 15119     1FD0                     u3611:
 15120     1FD0  2FBD               	goto	l3801
 15121     1FD1                     u3610:
 15122     1FD1                     l3807:
 15123     1FD1  0825               	movf	__Umul8_16@product+1,w
 15124     1FD2  00A1               	movwf	?__Umul8_16+1
 15125     1FD3  0824               	movf	__Umul8_16@product,w
 15126     1FD4  00A0               	movwf	?__Umul8_16
 15127     1FD5                     l1402:
 15128     1FD5  0008               	return
 15129     1FD6                     __end_of__Umul8_16:
 15130                           
 15131                           	psect	text41
 15132     1463                     __ptext41:	
 15133 ;; *************** function _get_measured_adc_value *****************
 15134 ;; Defined at:
 15135 ;;		line 78 in file "calibration.c"
 15136 ;; Parameters:    Size  Location     Type
 15137 ;;  sensor_value    1    wreg     PTR struct values
 15138 ;;		 -> main@sensor_value(10), 
 15139 ;; Auto vars:     Size  Location     Type
 15140 ;;  sensor_value    1   64[BANK0 ] PTR struct values
 15141 ;;		 -> main@sensor_value(10), 
 15142 ;;  payload         4   58[BANK0 ] unsigned long 
 15143 ;;  ph_adc_value    2   62[BANK0 ] unsigned int 
 15144 ;; Return value:  Size  Location     Type
 15145 ;;                  1    wreg      void 
 15146 ;; Registers used:
 15147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15148 ;; Tracked objects:
 15149 ;;		On entry : 0/0
 15150 ;;		On exit  : 0/0
 15151 ;;		Unchanged: 0/0
 15152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15154 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15155 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15157 ;;Total ram usage:       15 bytes
 15158 ;; Hardware stack levels used: 1
 15159 ;; Hardware stack levels required when called: 4
 15160 ;; This function calls:
 15161 ;;		_printf
 15162 ;; This function is called by:
 15163 ;;		_main
 15164 ;; This function uses a non-reentrant model
 15165 ;;
 15166                           
 15167     1463                     _get_measured_adc_value:	
 15168                           ;psect for function _get_measured_adc_value
 15169                           
 15170                           
 15171                           ;incstack = 0
 15172                           ; Regs used in _get_measured_adc_value: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15173                           ;get_measured_adc_value@sensor_value stored from wreg
 15174     1463  0140               	movlb	0	; select bank0
 15175     1464  00E0               	movwf	get_measured_adc_value@sensor_value
 15176     1465                     l4581:
 15177                           
 15178                           ;calibration.c: 79: uint16_t ph_adc_value = 0;
 15179     1465  01DE               	clrf	get_measured_adc_value@ph_adc_value
 15180     1466  01DF               	clrf	get_measured_adc_value@ph_adc_value+1
 15181     1467                     l4583:
 15182                           
 15183                           ;calibration.c: 80: sensor_value->ph_adc_high_byte = rxbuffer[3];
 15184     1467  0860               	movf	get_measured_adc_value@sensor_value,w
 15185     1468  3E04               	addlw	4
 15186     1469  0086               	movwf	6
 15187     146A  3001               	movlw	1	; select bank2/3
 15188     146B  0087               	movwf	7
 15189     146C  0143               	movlb	3	; select bank3
 15190     146D  0823               	movf	(_rxbuffer^(0+384)+3),w	;volatile
 15191     146E  0081               	movwf	1
 15192     146F                     l4585:
 15193                           
 15194                           ;calibration.c: 81: sensor_value->ph_adc_low_byte = rxbuffer[4];
 15195     146F  0140               	movlb	0	; select bank0
 15196     1470  0860               	movf	get_measured_adc_value@sensor_value,w
 15197     1471  3E05               	addlw	5
 15198     1472  0086               	movwf	6
 15199     1473  3001               	movlw	1	; select bank2/3
 15200     1474  0087               	movwf	7
 15201     1475  0143               	movlb	3	; select bank3
 15202     1476  0824               	movf	(_rxbuffer^(0+384)+4),w	;volatile
 15203     1477  0081               	movwf	1
 15204     1478                     l4587:
 15205                           
 15206                           ;calibration.c: 82: uint32_t payload = ((uint32_t)rxbuffer[3]) << 8 |;calibration.c: 83:
      +                           ((uint32_t)rxbuffer[4] << 0);
 15207     1478  0824               	movf	(_rxbuffer^(0+384)+4),w	;volatile
 15208     1479  0140               	movlb	0	; select bank0
 15209     147A  00D2               	movwf	??_get_measured_adc_value
 15210     147B  01D3               	clrf	??_get_measured_adc_value+1
 15211     147C  01D4               	clrf	??_get_measured_adc_value+2
 15212     147D  01D5               	clrf	??_get_measured_adc_value+3
 15213     147E  0143               	movlb	3	; select bank3
 15214     147F  0823               	movf	(_rxbuffer^(0+384)+3),w	;volatile
 15215     1480  0140               	movlb	0	; select bank0
 15216     1481  00D6               	movwf	??_get_measured_adc_value+4
 15217     1482  01D7               	clrf	??_get_measured_adc_value+5
 15218     1483  01D8               	clrf	??_get_measured_adc_value+6
 15219     1484  01D9               	clrf	??_get_measured_adc_value+7
 15220     1485  3008               	movlw	8
 15221     1486                     u4825:
 15222     1486  35D6               	lslf	??_get_measured_adc_value+4,f
 15223     1487  0DD7               	rlf	??_get_measured_adc_value+5,f
 15224     1488  0DD8               	rlf	??_get_measured_adc_value+6,f
 15225     1489  0DD9               	rlf	??_get_measured_adc_value+7,f
 15226     148A                     u4820:
 15227     148A  0B89               	decfsz	9,f
 15228     148B  2C86               	goto	u4825
 15229     148C  0852               	movf	??_get_measured_adc_value,w
 15230     148D  0456               	iorwf	??_get_measured_adc_value+4,w
 15231     148E  00DA               	movwf	get_measured_adc_value@payload
 15232     148F  0853               	movf	??_get_measured_adc_value+1,w
 15233     1490  0457               	iorwf	??_get_measured_adc_value+5,w
 15234     1491  00DB               	movwf	get_measured_adc_value@payload+1
 15235     1492  0854               	movf	??_get_measured_adc_value+2,w
 15236     1493  0458               	iorwf	??_get_measured_adc_value+6,w
 15237     1494  00DC               	movwf	get_measured_adc_value@payload+2
 15238     1495  0855               	movf	??_get_measured_adc_value+3,w
 15239     1496  0459               	iorwf	??_get_measured_adc_value+7,w
 15240     1497  00DD               	movwf	get_measured_adc_value@payload+3
 15241     1498                     l4589:
 15242                           
 15243                           ;calibration.c: 84: __builtin_memcpy(&ph_adc_value,&payload,sizeof(uint16_t));
 15244     1498  305E               	movlw	low (get_measured_adc_value@ph_adc_value| 0)
 15245     1499  0086               	movwf	6
 15246     149A  0187               	clrf	7
 15247     149B  2CAA               	goto	mcp2
 15248     149C                     mcp2b:
 15249     149C  305A               	movlw	low (get_measured_adc_value@payload| 0)
 15250     149D  0084               	movwf	4
 15251     149E  0185               	clrf	5
 15252     149F  3002               	movlw	2
 15253     14A0  0140               	movlb	0	; select bank0
 15254     14A1  00D2               	movwf	??_get_measured_adc_value
 15255     14A2  0852               	movf	??_get_measured_adc_value,w
 15256     14A3  1903               	skipnz
 15257     14A4  2CAB               	goto	mcp2z
 15258     14A5                     u483m0:
 15259     14A5  0012               	moviw fsr0++
 15260     14A6  001E               	movwi fsr1++
 15261     14A7  0BD2               	decfsz	??_get_measured_adc_value,f
 15262     14A8  2CA5               	goto	u483m0
 15263     14A9  2CAB               	goto	u483m1
 15264     14AA                     mcp2:
 15265     14AA  2C9C               	goto	mcp2b
 15266     14AB                     u483m1:
 15267     14AB                     mcp2z:
 15268     14AB                     l4591:
 15269                           
 15270                           ;calibration.c: 85: printf("Now-PH-ADC-value: %u\r\n", sensor_value->ph_adc_value);
 15271     14AB  3072               	movlw	low (STR_30| (0+32768))
 15272     14AC  0140               	movlb	0	; select bank0
 15273     14AD  00AE               	movwf	printf@f
 15274     14AE  3099               	movlw	high (STR_30| (0+32768))
 15275     14AF  00AF               	movwf	printf@f+1
 15276     14B0  0860               	movf	get_measured_adc_value@sensor_value,w
 15277     14B1  3E02               	addlw	2
 15278     14B2  0086               	movwf	6
 15279     14B3  3001               	movlw	1	; select bank2/3
 15280     14B4  0087               	movwf	7
 15281     14B5  3F40               	moviw [0]fsr1
 15282     14B6  00B0               	movwf	?_printf+2
 15283     14B7  3F41               	moviw [1]fsr1
 15284     14B8  00B1               	movwf	?_printf+3
 15285     14B9  3180  20CE  3194   	fcall	_printf
 15286     14BC                     l4593:
 15287                           
 15288                           ;calibration.c: 86: printf("Now-PH-ADC-Byte: %02X %02X\r\n", sensor_value->ph_adc_high_b
      +                          yte, sensor_value->ph_adc_low_byte );
 15289     14BC  303A               	movlw	low (STR_31| (0+32768))
 15290     14BD  0140               	movlb	0	; select bank0
 15291     14BE  00AE               	movwf	printf@f
 15292     14BF  3099               	movlw	high (STR_31| (0+32768))
 15293     14C0  00AF               	movwf	printf@f+1
 15294     14C1  0860               	movf	get_measured_adc_value@sensor_value,w
 15295     14C2  3E04               	addlw	4
 15296     14C3  0086               	movwf	6
 15297     14C4  3001               	movlw	1	; select bank2/3
 15298     14C5  0087               	movwf	7
 15299     14C6  0801               	movf	1,w
 15300     14C7  00D2               	movwf	??_get_measured_adc_value
 15301     14C8  01D3               	clrf	??_get_measured_adc_value+1
 15302     14C9  0852               	movf	??_get_measured_adc_value,w
 15303     14CA  00B0               	movwf	?_printf+2
 15304     14CB  0853               	movf	??_get_measured_adc_value+1,w
 15305     14CC  00B1               	movwf	?_printf+3
 15306     14CD  0860               	movf	get_measured_adc_value@sensor_value,w
 15307     14CE  3E05               	addlw	5
 15308     14CF  0086               	movwf	6
 15309     14D0  3001               	movlw	1	; select bank2/3
 15310     14D1  0087               	movwf	7
 15311     14D2  0801               	movf	1,w
 15312     14D3  00D4               	movwf	??_get_measured_adc_value+2
 15313     14D4  01D5               	clrf	??_get_measured_adc_value+3
 15314     14D5  0854               	movf	??_get_measured_adc_value+2,w
 15315     14D6  00B2               	movwf	?_printf+4
 15316     14D7  0855               	movf	??_get_measured_adc_value+3,w
 15317     14D8  00B3               	movwf	?_printf+5
 15318     14D9  3180  20CE  3194   	fcall	_printf
 15319     14DC                     l677:
 15320     14DC  0008               	return
 15321     14DD                     __end_of_get_measured_adc_value:
 15322                           
 15323                           	psect	text42
 15324     1DF8                     __ptext42:	
 15325 ;; *************** function _dump_memory_map *****************
 15326 ;; Defined at:
 15327 ;;		line 121 in file "i2c_slave.c"
 15328 ;; Parameters:    Size  Location     Type
 15329 ;;		None
 15330 ;; Auto vars:     Size  Location     Type
 15331 ;;		None
 15332 ;; Return value:  Size  Location     Type
 15333 ;;                  1    wreg      void 
 15334 ;; Registers used:
 15335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15336 ;; Tracked objects:
 15337 ;;		On entry : 0/0
 15338 ;;		On exit  : 0/0
 15339 ;;		Unchanged: 0/0
 15340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15345 ;;Total ram usage:        0 bytes
 15346 ;; Hardware stack levels used: 1
 15347 ;; Hardware stack levels required when called: 5
 15348 ;; This function calls:
 15349 ;;		_dump_buffer
 15350 ;; This function is called by:
 15351 ;;		_main
 15352 ;; This function uses a non-reentrant model
 15353 ;;
 15354                           
 15355     1DF8                     _dump_memory_map:	
 15356                           ;psect for function _dump_memory_map
 15357                           
 15358     1DF8                     l4595:	
 15359                           ;incstack = 0
 15360                           ; Regs used in _dump_memory_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15361                           
 15362                           
 15363                           ;i2c_slave.c: 122: dump_buffer(slaveData, sizeof(slaveData));
 15364     1DF8  3040               	movlw	64
 15365     1DF9  0140               	movlb	0	; select bank0
 15366     1DFA  00D2               	movwf	dump_buffer@size
 15367     1DFB  3000               	movlw	0
 15368     1DFC  00D3               	movwf	dump_buffer@size+1
 15369     1DFD  3020               	movlw	(low (_slaveData| (0+512)))& (0+255)
 15370     1DFE  3195  2585  319D   	fcall	_dump_buffer
 15371     1E01                     l278:
 15372     1E01  0008               	return
 15373     1E02                     __end_of_dump_memory_map:
 15374                           
 15375                           	psect	text43
 15376     1585                     __ptext43:	
 15377 ;; *************** function _dump_buffer *****************
 15378 ;; Defined at:
 15379 ;;		line 7 in file "my_helpers.c"
 15380 ;; Parameters:    Size  Location     Type
 15381 ;;  buffer          1    wreg     PTR const void 
 15382 ;;		 -> slaveData(64), 
 15383 ;;  size            2   50[BANK0 ] unsigned int 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;  buffer          1   58[BANK0 ] PTR const void 
 15386 ;;		 -> slaveData(64), 
 15387 ;;  j               2   62[BANK0 ] unsigned int 
 15388 ;;  i               2   60[BANK0 ] unsigned int 
 15389 ;;  p               1   59[BANK0 ] PTR const unsigned char 
 15390 ;;		 -> slaveData(64), 
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  1    wreg      void 
 15393 ;; Registers used:
 15394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15395 ;; Tracked objects:
 15396 ;;		On entry : 0/0
 15397 ;;		On exit  : 0/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15402 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15403 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15404 ;;Total ram usage:       14 bytes
 15405 ;; Hardware stack levels used: 1
 15406 ;; Hardware stack levels required when called: 4
 15407 ;; This function calls:
 15408 ;;		_isprint
 15409 ;;		_printf
 15410 ;; This function is called by:
 15411 ;;		_dump_memory_map
 15412 ;; This function uses a non-reentrant model
 15413 ;;
 15414                           
 15415     1585                     _dump_buffer:	
 15416                           ;psect for function _dump_buffer
 15417                           
 15418                           
 15419                           ;incstack = 0
 15420                           ; Regs used in _dump_buffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15421                           ;dump_buffer@buffer stored from wreg
 15422     1585  0140               	movlb	0	; select bank0
 15423     1586  00DA               	movwf	dump_buffer@buffer
 15424     1587                     l3905:
 15425                           
 15426                           ;my_helpers.c: 8: const uint8_t *p = (const uint8_t *)buffer;
 15427     1587  085A               	movf	dump_buffer@buffer,w
 15428     1588  00DB               	movwf	dump_buffer@p
 15429     1589                     l3907:
 15430                           
 15431                           ;my_helpers.c: 9: size_t i, j;;my_helpers.c: 11: for (i = 0; i < size; i += 16) {
 15432     1589  01DC               	clrf	dump_buffer@i
 15433     158A  01DD               	clrf	dump_buffer@i+1
 15434     158B  2E41               	goto	l3953
 15435     158C                     l3909:
 15436                           
 15437                           ;my_helpers.c: 12: printf("%08x:", (unsigned int)i);
 15438     158C  3050               	movlw	low (STR_12| (0+32768))
 15439     158D  00AE               	movwf	printf@f
 15440     158E  309A               	movlw	high (STR_12| (0+32768))
 15441     158F  00AF               	movwf	printf@f+1
 15442     1590  085D               	movf	dump_buffer@i+1,w
 15443     1591  00B1               	movwf	?_printf+3
 15444     1592  085C               	movf	dump_buffer@i,w
 15445     1593  00B0               	movwf	?_printf+2
 15446     1594  3180  20CE  3195   	fcall	_printf
 15447     1597                     l3911:
 15448                           
 15449                           ;my_helpers.c: 13: for (j = 0; j < 16; j++) {
 15450     1597  0140               	movlb	0	; select bank0
 15451     1598  01DE               	clrf	dump_buffer@j
 15452     1599  01DF               	clrf	dump_buffer@j+1
 15453     159A                     l3917:
 15454                           
 15455                           ;my_helpers.c: 14: if (i + j < size) {
 15456     159A  085E               	movf	dump_buffer@j,w
 15457     159B  075C               	addwf	dump_buffer@i,w
 15458     159C  00D4               	movwf	??_dump_buffer
 15459     159D  085F               	movf	dump_buffer@j+1,w
 15460     159E  3D5D               	addwfc	dump_buffer@i+1,w
 15461     159F  00D5               	movwf	??_dump_buffer+1
 15462     15A0  0853               	movf	dump_buffer@size+1,w
 15463     15A1  0255               	subwf	??_dump_buffer+1,w
 15464     15A2  1D03               	skipz
 15465     15A3  2DA6               	goto	u3705
 15466     15A4  0852               	movf	dump_buffer@size,w
 15467     15A5  0254               	subwf	??_dump_buffer,w
 15468     15A6                     u3705:
 15469     15A6  1803               	skipnc
 15470     15A7  2DA9               	goto	u3701
 15471     15A8  2DAA               	goto	u3700
 15472     15A9                     u3701:
 15473     15A9  2DC3               	goto	l3921
 15474     15AA                     u3700:
 15475     15AA                     l3919:
 15476                           
 15477                           ;my_helpers.c: 15: printf(" %02x", p[i + j]);
 15478     15AA  3056               	movlw	low (STR_13| (0+32768))
 15479     15AB  00AE               	movwf	printf@f
 15480     15AC  309A               	movlw	high (STR_13| (0+32768))
 15481     15AD  00AF               	movwf	printf@f+1
 15482     15AE  085C               	movf	dump_buffer@i,w
 15483     15AF  075B               	addwf	dump_buffer@p,w
 15484     15B0  00D4               	movwf	??_dump_buffer
 15485     15B1  085E               	movf	dump_buffer@j,w
 15486     15B2  0754               	addwf	??_dump_buffer,w
 15487     15B3  00D5               	movwf	??_dump_buffer+1
 15488     15B4  0855               	movf	??_dump_buffer+1,w
 15489     15B5  0086               	movwf	6
 15490     15B6  3002               	movlw	2	; select bank4/5
 15491     15B7  0087               	movwf	7
 15492     15B8  0801               	movf	1,w
 15493     15B9  00D6               	movwf	??_dump_buffer+2
 15494     15BA  01D7               	clrf	??_dump_buffer+3
 15495     15BB  0856               	movf	??_dump_buffer+2,w
 15496     15BC  00B0               	movwf	?_printf+2
 15497     15BD  0857               	movf	??_dump_buffer+3,w
 15498     15BE  00B1               	movwf	?_printf+3
 15499     15BF  3180  20CE  3195   	fcall	_printf
 15500                           
 15501                           ;my_helpers.c: 16: } else {
 15502     15C2  2DCA               	goto	l3923
 15503     15C3                     l3921:
 15504                           
 15505                           ;my_helpers.c: 17: printf("   ");
 15506     15C3  305C               	movlw	low (STR_14| (0+32768))
 15507     15C4  00AE               	movwf	printf@f
 15508     15C5  309A               	movlw	high (STR_14| (0+32768))
 15509     15C6  00AF               	movwf	printf@f+1
 15510     15C7  3180  20CE  3195   	fcall	_printf
 15511     15CA                     l3923:
 15512     15CA  3001               	movlw	1
 15513     15CB  0140               	movlb	0	; select bank0
 15514     15CC  07DE               	addwf	dump_buffer@j,f
 15515     15CD  3000               	movlw	0
 15516     15CE  3DDF               	addwfc	dump_buffer@j+1,f
 15517     15CF                     l3925:
 15518     15CF  3000               	movlw	0
 15519     15D0  025F               	subwf	dump_buffer@j+1,w
 15520     15D1  3010               	movlw	16
 15521     15D2  1903               	skipnz
 15522     15D3  025E               	subwf	dump_buffer@j,w
 15523     15D4  1C03               	skipc
 15524     15D5  2DD7               	goto	u3711
 15525     15D6  2DD8               	goto	u3710
 15526     15D7                     u3711:
 15527     15D7  2D9A               	goto	l3917
 15528     15D8                     u3710:
 15529     15D8                     l3927:
 15530                           
 15531                           ;my_helpers.c: 18: };my_helpers.c: 19: };my_helpers.c: 20: printf("  ");
 15532     15D8  305D               	movlw	low ((STR_14+1)| (0+32768))
 15533     15D9  00AE               	movwf	printf@f
 15534     15DA  309A               	movlw	high ((STR_14+1)| (0+32768))
 15535     15DB  00AF               	movwf	printf@f+1
 15536     15DC  3180  20CE  3195   	fcall	_printf
 15537     15DF                     l3929:
 15538                           
 15539                           ;my_helpers.c: 21: for (j = 0; j < 16; j++) {
 15540     15DF  0140               	movlb	0	; select bank0
 15541     15E0  01DE               	clrf	dump_buffer@j
 15542     15E1  01DF               	clrf	dump_buffer@j+1
 15543     15E2                     l3935:
 15544                           
 15545                           ;my_helpers.c: 22: if (i + j < size) {
 15546     15E2  085E               	movf	dump_buffer@j,w
 15547     15E3  075C               	addwf	dump_buffer@i,w
 15548     15E4  00D4               	movwf	??_dump_buffer
 15549     15E5  085F               	movf	dump_buffer@j+1,w
 15550     15E6  3D5D               	addwfc	dump_buffer@i+1,w
 15551     15E7  00D5               	movwf	??_dump_buffer+1
 15552     15E8  0853               	movf	dump_buffer@size+1,w
 15553     15E9  0255               	subwf	??_dump_buffer+1,w
 15554     15EA  1D03               	skipz
 15555     15EB  2DEE               	goto	u3725
 15556     15EC  0852               	movf	dump_buffer@size,w
 15557     15ED  0254               	subwf	??_dump_buffer,w
 15558     15EE                     u3725:
 15559     15EE  1803               	skipnc
 15560     15EF  2DF1               	goto	u3721
 15561     15F0  2DF2               	goto	u3720
 15562     15F1                     u3721:
 15563     15F1  2E27               	goto	l3945
 15564     15F2                     u3720:
 15565     15F2                     l3937:
 15566                           
 15567                           ;my_helpers.c: 23: printf("%c", isprint(p[i + j]) ? p[i + j] : '.');
 15568     15F2  085C               	movf	dump_buffer@i,w
 15569     15F3  075B               	addwf	dump_buffer@p,w
 15570     15F4  00D4               	movwf	??_dump_buffer
 15571     15F5  085E               	movf	dump_buffer@j,w
 15572     15F6  0754               	addwf	??_dump_buffer,w
 15573     15F7  00D5               	movwf	??_dump_buffer+1
 15574     15F8  0855               	movf	??_dump_buffer+1,w
 15575     15F9  0086               	movwf	6
 15576     15FA  3002               	movlw	2	; select bank4/5
 15577     15FB  0087               	movwf	7
 15578     15FC  0801               	movf	1,w
 15579     15FD  319E  2664  3195   	fcall	_isprint
 15580     1600  1803               	btfsc	3,0
 15581     1601  2E03               	goto	u3731
 15582     1602  2E04               	goto	u3730
 15583     1603                     u3731:
 15584     1603  2E0A               	goto	l3941
 15585     1604                     u3730:
 15586     1604                     l3939:
 15587     1604  302E               	movlw	46
 15588     1605  0140               	movlb	0	; select bank0
 15589     1606  00D8               	movwf	_dump_buffer$878
 15590     1607  3000               	movlw	0
 15591     1608  00D9               	movwf	_dump_buffer$878+1
 15592     1609  2E1C               	goto	l3943
 15593     160A                     l3941:
 15594     160A  0140               	movlb	0	; select bank0
 15595     160B  085C               	movf	dump_buffer@i,w
 15596     160C  075B               	addwf	dump_buffer@p,w
 15597     160D  00D4               	movwf	??_dump_buffer
 15598     160E  085E               	movf	dump_buffer@j,w
 15599     160F  0754               	addwf	??_dump_buffer,w
 15600     1610  00D5               	movwf	??_dump_buffer+1
 15601     1611  0855               	movf	??_dump_buffer+1,w
 15602     1612  0086               	movwf	6
 15603     1613  3002               	movlw	2	; select bank4/5
 15604     1614  0087               	movwf	7
 15605     1615  0801               	movf	1,w
 15606     1616  00D6               	movwf	??_dump_buffer+2
 15607     1617  01D7               	clrf	??_dump_buffer+3
 15608     1618  0856               	movf	??_dump_buffer+2,w
 15609     1619  00D8               	movwf	_dump_buffer$878
 15610     161A  0857               	movf	??_dump_buffer+3,w
 15611     161B  00D9               	movwf	_dump_buffer$878+1
 15612     161C                     l3943:
 15613     161C  3060               	movlw	low (STR_16| (0+32768))
 15614     161D  00AE               	movwf	printf@f
 15615     161E  309A               	movlw	high (STR_16| (0+32768))
 15616     161F  00AF               	movwf	printf@f+1
 15617     1620  0859               	movf	_dump_buffer$878+1,w
 15618     1621  00B1               	movwf	?_printf+3
 15619     1622  0858               	movf	_dump_buffer$878,w
 15620     1623  00B0               	movwf	?_printf+2
 15621     1624  3180  20CE  3195   	fcall	_printf
 15622     1627                     l3945:
 15623     1627  3001               	movlw	1
 15624     1628  0140               	movlb	0	; select bank0
 15625     1629  07DE               	addwf	dump_buffer@j,f
 15626     162A  3000               	movlw	0
 15627     162B  3DDF               	addwfc	dump_buffer@j+1,f
 15628     162C                     l3947:
 15629     162C  3000               	movlw	0
 15630     162D  025F               	subwf	dump_buffer@j+1,w
 15631     162E  3010               	movlw	16
 15632     162F  1903               	skipnz
 15633     1630  025E               	subwf	dump_buffer@j,w
 15634     1631  1C03               	skipc
 15635     1632  2E34               	goto	u3741
 15636     1633  2E35               	goto	u3740
 15637     1634                     u3741:
 15638     1634  2DE2               	goto	l3935
 15639     1635                     u3740:
 15640     1635                     l3949:
 15641                           
 15642                           ;my_helpers.c: 24: };my_helpers.c: 25: };my_helpers.c: 26: printf("\r\n");
 15643     1635  3085               	movlw	low ((STR_26+37)| (0+32768))
 15644     1636  00AE               	movwf	printf@f
 15645     1637  3098               	movlw	high ((STR_26+37)| (0+32768))
 15646     1638  00AF               	movwf	printf@f+1
 15647     1639  3180  20CE  3195   	fcall	_printf
 15648     163C                     l3951:
 15649     163C  3010               	movlw	16
 15650     163D  0140               	movlb	0	; select bank0
 15651     163E  07DC               	addwf	dump_buffer@i,f
 15652     163F  3000               	movlw	0
 15653     1640  3DDD               	addwfc	dump_buffer@i+1,f
 15654     1641                     l3953:
 15655     1641  0853               	movf	dump_buffer@size+1,w
 15656     1642  025D               	subwf	dump_buffer@i+1,w
 15657     1643  1D03               	skipz
 15658     1644  2E47               	goto	u3755
 15659     1645  0852               	movf	dump_buffer@size,w
 15660     1646  025C               	subwf	dump_buffer@i,w
 15661     1647                     u3755:
 15662     1647  1C03               	skipc
 15663     1648  2E4A               	goto	u3751
 15664     1649  2E4B               	goto	u3750
 15665     164A                     u3751:
 15666     164A  2D8C               	goto	l3909
 15667     164B                     u3750:
 15668     164B                     l314:
 15669     164B  0008               	return
 15670     164C                     __end_of_dump_buffer:
 15671                           
 15672                           	psect	text44
 15673     00CE                     __ptext44:	
 15674 ;; *************** function _printf *****************
 15675 ;; Defined at:
 15676 ;;		line 477 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/doprnt.c"
 15677 ;; Parameters:    Size  Location     Type
 15678 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 15679 ;;		 -> STR_31(29), STR_30(23), STR_29(31), STR_28(11), 
 15680 ;;		 -> STR_27(9), STR_26(40), STR_25(17), STR_24(17), 
 15681 ;;		 -> STR_23(13), STR_22(13), STR_19(3), STR_18(6), 
 15682 ;;		 -> STR_17(3), STR_16(3), STR_15(3), STR_14(4), 
 15683 ;;		 -> STR_13(6), STR_12(6), STR_11(37), STR_10(37), 
 15684 ;;		 -> STR_9(88), STR_8(27), STR_7(8), STR_6(38), 
 15685 ;;		 -> STR_5(8), STR_4(35), STR_2(9), STR_1(22), 
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;  idx             1   36[BANK0 ] unsigned char 
 15688 ;;  tmpval          4    0        struct .
 15689 ;;  flag            2   48[BANK0 ] unsigned short 
 15690 ;;  width           2   45[BANK0 ] int 
 15691 ;;  val             2   42[BANK0 ] unsigned int 
 15692 ;;  len             2   39[BANK0 ] unsigned int 
 15693 ;;  cp              2   37[BANK0 ] PTR const unsigned char 
 15694 ;;		 -> STR_32(7), printf@c(1), ?_printf(2), slaveData(64), 
 15695 ;;		 -> sensor_value.temp_value(2), sensor_value.ph_value(2), sensor_value.ph_adc_low_byte(1), sensor_value.ph_adc_high_
      +byte(1), 
 15696 ;;		 -> sensor_value.ph_adc_value(2), STR_3(11), 
 15697 ;;  c               1   47[BANK0 ] unsigned char 
 15698 ;;  prec            1   44[BANK0 ] char 
 15699 ;;  ap              1   41[BANK0 ] PTR void [1]
 15700 ;;		 -> ?_printf(2), 
 15701 ;; Return value:  Size  Location     Type
 15702 ;;                  2   14[BANK0 ] int 
 15703 ;; Registers used:
 15704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15705 ;; Tracked objects:
 15706 ;;		On entry : 0/0
 15707 ;;		On exit  : 0/0
 15708 ;;		Unchanged: 0/0
 15709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15710 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15711 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15712 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15713 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15714 ;;Total ram usage:       36 bytes
 15715 ;; Hardware stack levels used: 1
 15716 ;; Hardware stack levels required when called: 3
 15717 ;; This function calls:
 15718 ;;		___bmul
 15719 ;;		___lwdiv
 15720 ;;		___lwmod
 15721 ;;		___wmul
 15722 ;;		_isdigit
 15723 ;;		_putch
 15724 ;; This function is called by:
 15725 ;;		_main
 15726 ;;		_dump_buffer
 15727 ;;		_monitoring_sync
 15728 ;;		_measurement
 15729 ;;		_get_measured_value
 15730 ;;		_measured_adc
 15731 ;;		_get_measured_adc_value
 15732 ;;		_print_buffer
 15733 ;; This function uses a non-reentrant model
 15734 ;;
 15735                           
 15736     00CE                     _printf:	
 15737                           ;psect for function _printf
 15738                           
 15739     00CE                     l3417:	
 15740                           ;incstack = 0
 15741                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15742                           
 15743                           
 15744                           ;doprnt.c: 479: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 540: union {;doprnt.
      +                          c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c
      +                          : 545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;do
      +                          prnt.c: 550: *ap = __va_start();
 15745     00CE  3030               	movlw	(low ((?_printf| 0+2)))& (0+255)
 15746     00CF  0140               	movlb	0	; select bank0
 15747     00D0  00C9               	movwf	printf@ap
 15748                           
 15749                           ;doprnt.c: 553: while((c = *f++)) {
 15750     00D1  2DB8               	goto	l3731
 15751     00D2                     l3419:
 15752                           
 15753                           ;doprnt.c: 555: if(c != '%')
 15754     00D2  3025               	movlw	37
 15755     00D3  064F               	xorwf	printf@c,w
 15756     00D4  1903               	btfsc	3,2
 15757     00D5  28D7               	goto	u2831
 15758     00D6  28D8               	goto	u2830
 15759     00D7                     u2831:
 15760     00D7  28DD               	goto	l3423
 15761     00D8                     u2830:
 15762     00D8                     l3421:
 15763                           
 15764                           ;doprnt.c: 557: {;doprnt.c: 558: (putch(c) );
 15765     00D8  084F               	movf	printf@c,w
 15766     00D9  319E  2621  3180   	fcall	_putch
 15767                           
 15768                           ;doprnt.c: 559: continue;
 15769     00DC  2DB8               	goto	l3731
 15770     00DD                     l3423:
 15771                           
 15772                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 15773     00DD  01CD               	clrf	printf@width
 15774     00DE  01CE               	clrf	printf@width+1
 15775                           
 15776                           ;doprnt.c: 565: flag = 0;
 15777     00DF  01D0               	clrf	printf@flag
 15778     00E0  01D1               	clrf	printf@flag+1
 15779     00E1  28EE               	goto	l3435
 15780     00E2                     l857:	
 15781                           ;doprnt.c: 570: case '-':
 15782                           
 15783                           
 15784                           ;doprnt.c: 571: flag |= 0x08;
 15785     00E2  15D0               	bsf	printf@flag,3
 15786     00E3                     l3425:
 15787                           
 15788                           ;doprnt.c: 572: f++;
 15789     00E3  3001               	movlw	1
 15790     00E4  07AE               	addwf	printf@f,f
 15791     00E5  3000               	movlw	0
 15792     00E6  3DAF               	addwfc	printf@f+1,f
 15793                           
 15794                           ;doprnt.c: 573: continue;
 15795     00E7  28EE               	goto	l3435
 15796     00E8                     l859:	
 15797                           ;doprnt.c: 577: case ' ':
 15798                           
 15799                           
 15800                           ;doprnt.c: 578: flag |= 0x01;
 15801     00E8  1450               	bsf	printf@flag,0
 15802     00E9  28E3               	goto	l3425
 15803     00EA                     l860:	
 15804                           ;doprnt.c: 590: case '#':
 15805                           
 15806                           
 15807                           ;doprnt.c: 591: flag |= 0x800;
 15808     00EA  15D1               	bsf	printf@flag+1,3
 15809     00EB  28E3               	goto	l3425
 15810     00EC                     l861:	
 15811                           ;doprnt.c: 596: case '0':
 15812                           
 15813                           
 15814                           ;doprnt.c: 597: flag |= 0x04;
 15815     00EC  1550               	bsf	printf@flag,2
 15816     00ED  28E3               	goto	l3425
 15817     00EE                     l3435:
 15818     00EE  082E               	movf	printf@f,w
 15819     00EF  0084               	movwf	4
 15820     00F0  082F               	movf	printf@f+1,w
 15821     00F1  0085               	movwf	5
 15822     00F2  0800               	movf	0,w	;code access
 15823                           
 15824                           ; Switch size 1, requested type "simple"
 15825                           ; Number of cases is 4, Range of values is 32 to 48
 15826                           ; switch strategies available:
 15827                           ; Name         Instructions Cycles
 15828                           ; simple_byte           13     7 (average)
 15829                           ; direct_byte           43     9 (fixed)
 15830                           ; jumptable            263     9 (fixed)
 15831                           ;	Chosen strategy is simple_byte
 15832     00F3  3A20               	xorlw	32	; case 32
 15833     00F4  1903               	skipnz
 15834     00F5  28E8               	goto	l859
 15835     00F6  3A03               	xorlw	3	; case 35
 15836     00F7  1903               	skipnz
 15837     00F8  28EA               	goto	l860
 15838     00F9  3A0E               	xorlw	14	; case 45
 15839     00FA  1903               	skipnz
 15840     00FB  28E2               	goto	l857
 15841     00FC  3A1D               	xorlw	29	; case 48
 15842     00FD  1903               	skipnz
 15843     00FE  28EC               	goto	l861
 15844     00FF  2900               	goto	l863
 15845     0100                     l863:
 15846                           
 15847                           ;doprnt.c: 610: if(flag & 0x08)
 15848     0100  1DD0               	btfss	printf@flag,3
 15849     0101  2903               	goto	u2841
 15850     0102  2904               	goto	u2840
 15851     0103                     u2841:
 15852     0103  2908               	goto	l3439
 15853     0104                     u2840:
 15854     0104                     l3437:
 15855                           
 15856                           ;doprnt.c: 611: flag &= ~0x04;
 15857     0104  30FB               	movlw	251
 15858     0105  05D0               	andwf	printf@flag,f
 15859     0106  30FF               	movlw	255
 15860     0107  05D1               	andwf	printf@flag+1,f
 15861     0108                     l3439:
 15862                           
 15863                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 15864     0108  082E               	movf	printf@f,w
 15865     0109  0084               	movwf	4
 15866     010A  082F               	movf	printf@f+1,w
 15867     010B  0085               	movwf	5
 15868     010C  0800               	movf	0,w	;code access
 15869     010D  319E  2677  3180   	fcall	_isdigit
 15870     0110  1C03               	btfss	3,0
 15871     0111  2913               	goto	u2851
 15872     0112  2914               	goto	u2850
 15873     0113                     u2851:
 15874     0113  2948               	goto	l3451
 15875     0114                     u2850:
 15876     0114                     l3441:
 15877                           
 15878                           ;doprnt.c: 615: width = 0;
 15879     0114  0140               	movlb	0	; select bank0
 15880     0115  01CD               	clrf	printf@width
 15881     0116  01CE               	clrf	printf@width+1
 15882     0117                     l3443:
 15883                           
 15884                           ;doprnt.c: 617: width *= 10;
 15885     0117  300A               	movlw	10
 15886     0118  0140               	movlb	0	; select bank0
 15887     0119  00A0               	movwf	___wmul@multiplier
 15888     011A  3000               	movlw	0
 15889     011B  00A1               	movwf	___wmul@multiplier+1
 15890     011C  084E               	movf	printf@width+1,w
 15891     011D  00A3               	movwf	___wmul@multiplicand+1
 15892     011E  084D               	movf	printf@width,w
 15893     011F  00A2               	movwf	___wmul@multiplicand
 15894     0120  319F  2752  3180   	fcall	___wmul
 15895     0123  0140               	movlb	0	; select bank0
 15896     0124  0821               	movf	?___wmul+1,w
 15897     0125  00CE               	movwf	printf@width+1
 15898     0126  0820               	movf	?___wmul,w
 15899     0127  00CD               	movwf	printf@width
 15900     0128                     l3445:
 15901                           
 15902                           ;doprnt.c: 618: width += *f++ - '0';
 15903     0128  082E               	movf	printf@f,w
 15904     0129  0084               	movwf	4
 15905     012A  082F               	movf	printf@f+1,w
 15906     012B  0085               	movwf	5
 15907     012C  0800               	movf	0,w	;code access
 15908     012D  3ED0               	addlw	208
 15909     012E  00BA               	movwf	??_printf
 15910     012F  30FF               	movlw	255
 15911     0130  1803               	skipnc
 15912     0131  3000               	movlw	0
 15913     0132  00BB               	movwf	??_printf+1
 15914     0133  083A               	movf	??_printf,w
 15915     0134  07CD               	addwf	printf@width,f
 15916     0135  083B               	movf	??_printf+1,w
 15917     0136  3DCE               	addwfc	printf@width+1,f
 15918     0137                     l3447:
 15919     0137  3001               	movlw	1
 15920     0138  07AE               	addwf	printf@f,f
 15921     0139  3000               	movlw	0
 15922     013A  3DAF               	addwfc	printf@f+1,f
 15923     013B                     l3449:
 15924                           
 15925                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 15926     013B  082E               	movf	printf@f,w
 15927     013C  0084               	movwf	4
 15928     013D  082F               	movf	printf@f+1,w
 15929     013E  0085               	movwf	5
 15930     013F  0800               	movf	0,w	;code access
 15931     0140  319E  2677  3180   	fcall	_isdigit
 15932     0143  1803               	btfsc	3,0
 15933     0144  2946               	goto	u2861
 15934     0145  2947               	goto	u2860
 15935     0146                     u2861:
 15936     0146  2917               	goto	l3443
 15937     0147                     u2860:
 15938     0147  2962               	goto	l3459
 15939     0148                     l3451:
 15940     0148  0140               	movlb	0	; select bank0
 15941     0149  082E               	movf	printf@f,w
 15942     014A  0084               	movwf	4
 15943     014B  082F               	movf	printf@f+1,w
 15944     014C  0085               	movwf	5
 15945     014D  0012               	moviw fsr0++
 15946     014E  3A2A               	xorlw	42
 15947     014F  1D03               	btfss	3,2
 15948     0150  2952               	goto	u2871
 15949     0151  2953               	goto	u2870
 15950     0152                     u2871:
 15951     0152  2962               	goto	l3459
 15952     0153                     u2870:
 15953     0153                     l3453:
 15954                           
 15955                           ;doprnt.c: 622: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 15956     0153  0849               	movf	printf@ap,w
 15957     0154  0086               	movwf	6
 15958     0155  0187               	clrf	7
 15959     0156  3F40               	moviw [0]fsr1
 15960     0157  00CD               	movwf	printf@width
 15961     0158  3F41               	moviw [1]fsr1
 15962     0159  00CE               	movwf	printf@width+1
 15963     015A                     l3455:
 15964     015A  3002               	movlw	2
 15965     015B  00BA               	movwf	??_printf
 15966     015C  083A               	movf	??_printf,w
 15967     015D  07C9               	addwf	printf@ap,f
 15968     015E                     l3457:
 15969                           
 15970                           ;doprnt.c: 623: f++;
 15971     015E  3001               	movlw	1
 15972     015F  07AE               	addwf	printf@f,f
 15973     0160  3000               	movlw	0
 15974     0161  3DAF               	addwfc	printf@f+1,f
 15975     0162                     l3459:
 15976                           
 15977                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
 15978     0162  0140               	movlb	0	; select bank0
 15979     0163  082E               	movf	printf@f,w
 15980     0164  0084               	movwf	4
 15981     0165  082F               	movf	printf@f+1,w
 15982     0166  0085               	movwf	5
 15983     0167  0012               	moviw fsr0++
 15984     0168  3A2E               	xorlw	46
 15985     0169  1D03               	btfss	3,2
 15986     016A  296C               	goto	u2881
 15987     016B  296D               	goto	u2880
 15988     016C                     u2881:
 15989     016C  29B8               	goto	l3489
 15990     016D                     u2880:
 15991     016D                     l3461:
 15992                           
 15993                           ;doprnt.c: 629: flag |= 0x4000;
 15994     016D  1751               	bsf	printf@flag+1,6
 15995     016E                     l3463:
 15996                           
 15997                           ;doprnt.c: 630: f++;
 15998     016E  3001               	movlw	1
 15999     016F  07AE               	addwf	printf@f,f
 16000     0170  3000               	movlw	0
 16001     0171  3DAF               	addwfc	printf@f+1,f
 16002     0172                     l3465:
 16003                           
 16004                           ;doprnt.c: 632: if(*f == '*') {
 16005     0172  082E               	movf	printf@f,w
 16006     0173  0084               	movwf	4
 16007     0174  082F               	movf	printf@f+1,w
 16008     0175  0085               	movwf	5
 16009     0176  0012               	moviw fsr0++
 16010     0177  3A2A               	xorlw	42
 16011     0178  1D03               	btfss	3,2
 16012     0179  297B               	goto	u2891
 16013     017A  297C               	goto	u2890
 16014     017B                     u2891:
 16015     017B  2993               	goto	l3479
 16016     017C                     u2890:
 16017     017C                     l3467:
 16018                           
 16019                           ;doprnt.c: 633: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 16020     017C  0849               	movf	printf@ap,w
 16021     017D  0086               	movwf	6
 16022     017E  0187               	clrf	7
 16023     017F  0801               	movf	1,w
 16024     0180  00CC               	movwf	printf@prec
 16025     0181                     l3469:
 16026     0181  3002               	movlw	2
 16027     0182  00BA               	movwf	??_printf
 16028     0183  083A               	movf	??_printf,w
 16029     0184  07C9               	addwf	printf@ap,f
 16030     0185                     l3471:
 16031                           
 16032                           ;doprnt.c: 634: if (prec < 0) {
 16033     0185  1FCC               	btfss	printf@prec,7
 16034     0186  2988               	goto	u2901
 16035     0187  2989               	goto	u2900
 16036     0188                     u2901:
 16037     0188  298E               	goto	l3477
 16038     0189                     u2900:
 16039     0189                     l3473:
 16040                           
 16041                           ;doprnt.c: 635: prec = 0;
 16042     0189  01CC               	clrf	printf@prec
 16043     018A                     l3475:
 16044                           
 16045                           ;doprnt.c: 636: flag &= ~0x4000;
 16046     018A  30FF               	movlw	255
 16047     018B  05D0               	andwf	printf@flag,f
 16048     018C  30BF               	movlw	191
 16049     018D  05D1               	andwf	printf@flag+1,f
 16050     018E                     l3477:
 16051                           
 16052                           ;doprnt.c: 640: };doprnt.c: 641: f++;
 16053     018E  3001               	movlw	1
 16054     018F  07AE               	addwf	printf@f,f
 16055     0190  3000               	movlw	0
 16056     0191  3DAF               	addwfc	printf@f+1,f
 16057                           
 16058                           ;doprnt.c: 642: } else
 16059     0192  2A76               	goto	l3547
 16060     0193                     l3479:
 16061                           
 16062                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 16063     0193  01CC               	clrf	printf@prec
 16064                           
 16065                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 16066     0194  29AB               	goto	l3487
 16067     0195                     l3481:
 16068                           
 16069                           ;doprnt.c: 647: prec *= 10;
 16070     0195  0140               	movlb	0	; select bank0
 16071     0196  084C               	movf	printf@prec,w
 16072     0197  00A0               	movwf	___bmul@multiplicand
 16073     0198  300A               	movlw	10
 16074     0199  3190  2001  3180   	fcall	___bmul
 16075     019C  0140               	movlb	0	; select bank0
 16076     019D  00CC               	movwf	printf@prec
 16077     019E                     l3483:
 16078                           
 16079                           ;doprnt.c: 648: prec += *f++ - '0';
 16080     019E  082E               	movf	printf@f,w
 16081     019F  0084               	movwf	4
 16082     01A0  082F               	movf	printf@f+1,w
 16083     01A1  0085               	movwf	5
 16084     01A2  0800               	movf	0,w	;code access
 16085     01A3  3ED0               	addlw	-48
 16086     01A4  00BA               	movwf	??_printf
 16087     01A5  083A               	movf	??_printf,w
 16088     01A6  07CC               	addwf	printf@prec,f
 16089     01A7                     l3485:
 16090     01A7  3001               	movlw	1
 16091     01A8  07AE               	addwf	printf@f,f
 16092     01A9  3000               	movlw	0
 16093     01AA  3DAF               	addwfc	printf@f+1,f
 16094     01AB                     l3487:
 16095     01AB  082E               	movf	printf@f,w
 16096     01AC  0084               	movwf	4
 16097     01AD  082F               	movf	printf@f+1,w
 16098     01AE  0085               	movwf	5
 16099     01AF  0800               	movf	0,w	;code access
 16100     01B0  319E  2677  3180   	fcall	_isdigit
 16101     01B3  1803               	btfsc	3,0
 16102     01B4  29B6               	goto	u2911
 16103     01B5  29B7               	goto	u2910
 16104     01B6                     u2911:
 16105     01B6  2995               	goto	l3481
 16106     01B7                     u2910:
 16107     01B7  2A76               	goto	l3547
 16108     01B8                     l3489:
 16109                           
 16110                           ;doprnt.c: 652: prec = 0;
 16111     01B8  01CC               	clrf	printf@prec
 16112     01B9  2A76               	goto	l3547
 16113     01BA                     l881:	
 16114                           ;doprnt.c: 715: case 'o':
 16115                           
 16116                           
 16117                           ;doprnt.c: 717: flag |= 0x40;
 16118     01BA  1750               	bsf	printf@flag,6
 16119                           
 16120                           ;doprnt.c: 719: break;
 16121     01BB  2AA0               	goto	l3549
 16122     01BC                     l885:	
 16123                           ;doprnt.c: 738: case 'X':
 16124                           
 16125                           
 16126                           ;doprnt.c: 740: flag |= 0x20;
 16127     01BC  16D0               	bsf	printf@flag,5
 16128     01BD                     l886:	
 16129                           ;doprnt.c: 744: case 'x':
 16130                           
 16131                           
 16132                           ;doprnt.c: 747: flag |= 0x80;
 16133     01BD  17D0               	bsf	printf@flag,7
 16134                           
 16135                           ;doprnt.c: 749: break;
 16136     01BE  2AA0               	goto	l3549
 16137     01BF                     l3491:
 16138                           
 16139                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 16140     01BF  0849               	movf	printf@ap,w
 16141     01C0  0086               	movwf	6
 16142     01C1  0187               	clrf	7
 16143     01C2  3F40               	moviw [0]fsr1
 16144     01C3  00C5               	movwf	printf@cp
 16145     01C4  3F41               	moviw [1]fsr1
 16146     01C5  00C6               	movwf	printf@cp+1
 16147     01C6                     l3493:
 16148     01C6  3002               	movlw	2
 16149     01C7  00BA               	movwf	??_printf
 16150     01C8  083A               	movf	??_printf,w
 16151     01C9  07C9               	addwf	printf@ap,f
 16152     01CA                     l3495:
 16153                           
 16154                           ;doprnt.c: 766: if(!cp)
 16155     01CA  0845               	movf	printf@cp,w
 16156     01CB  0446               	iorwf	printf@cp+1,w
 16157     01CC  1D03               	btfss	3,2
 16158     01CD  29CF               	goto	u2921
 16159     01CE  29D0               	goto	u2920
 16160     01CF                     u2921:
 16161     01CF  29D4               	goto	l3499
 16162     01D0                     u2920:
 16163     01D0                     l3497:
 16164                           
 16165                           ;doprnt.c: 767: cp = "(null)";
 16166     01D0  3043               	movlw	low (STR_32| (0+32768))
 16167     01D1  00C5               	movwf	printf@cp
 16168     01D2  309A               	movlw	high (STR_32| (0+32768))
 16169     01D3  00C6               	movwf	printf@cp+1
 16170     01D4                     l3499:
 16171                           
 16172                           ;doprnt.c: 771: len = 0;
 16173     01D4  01C7               	clrf	printf@len
 16174     01D5  01C8               	clrf	printf@len+1
 16175                           
 16176                           ;doprnt.c: 772: while(cp[len])
 16177     01D6  29DB               	goto	l3503
 16178     01D7                     l3501:
 16179                           
 16180                           ;doprnt.c: 773: len++;
 16181     01D7  3001               	movlw	1
 16182     01D8  07C7               	addwf	printf@len,f
 16183     01D9  3000               	movlw	0
 16184     01DA  3DC8               	addwfc	printf@len+1,f
 16185     01DB                     l3503:
 16186     01DB  0845               	movf	printf@cp,w
 16187     01DC  0747               	addwf	printf@len,w
 16188     01DD  0084               	movwf	4
 16189     01DE  0846               	movf	printf@cp+1,w
 16190     01DF  3D48               	addwfc	printf@len+1,w
 16191     01E0  0085               	movwf	5
 16192     01E1  0012               	moviw fsr0++
 16193     01E2  1D03               	btfss	3,2
 16194     01E3  29E5               	goto	u2931
 16195     01E4  29E6               	goto	u2930
 16196     01E5                     u2931:
 16197     01E5  29D7               	goto	l3501
 16198     01E6                     u2930:
 16199     01E6                     l3505:
 16200                           
 16201                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
 16202     01E6  084C               	movf	printf@prec,w
 16203     01E7  1903               	btfsc	3,2
 16204     01E8  29EA               	goto	u2941
 16205     01E9  29EB               	goto	u2940
 16206     01EA                     u2941:
 16207     01EA  2A06               	goto	l893
 16208     01EB                     u2940:
 16209     01EB                     l3507:
 16210     01EB  084C               	movf	printf@prec,w
 16211     01EC  00BA               	movwf	??_printf
 16212     01ED  01BB               	clrf	??_printf+1
 16213     01EE  1BBA               	btfsc	??_printf,7
 16214     01EF  03BB               	decf	??_printf+1,f
 16215     01F0  083B               	movf	??_printf+1,w
 16216     01F1  3A80               	xorlw	128
 16217     01F2  00BC               	movwf	??_printf+2
 16218     01F3  0848               	movf	printf@len+1,w
 16219     01F4  3A80               	xorlw	128
 16220     01F5  023C               	subwf	??_printf+2,w
 16221     01F6  1D03               	skipz
 16222     01F7  29FA               	goto	u2955
 16223     01F8  0847               	movf	printf@len,w
 16224     01F9  023A               	subwf	??_printf,w
 16225     01FA                     u2955:
 16226     01FA  1803               	skipnc
 16227     01FB  29FD               	goto	u2951
 16228     01FC  29FE               	goto	u2950
 16229     01FD                     u2951:
 16230     01FD  2A06               	goto	l893
 16231     01FE                     u2950:
 16232     01FE                     l3509:
 16233                           
 16234                           ;doprnt.c: 780: len = (unsigned char)prec;
 16235     01FE  0140               	movlb	0	; select bank0
 16236     01FF  084C               	movf	printf@prec,w
 16237     0200  00BA               	movwf	??_printf
 16238     0201  01BB               	clrf	??_printf+1
 16239     0202  083A               	movf	??_printf,w
 16240     0203  00C7               	movwf	printf@len
 16241     0204  083B               	movf	??_printf+1,w
 16242     0205  00C8               	movwf	printf@len+1
 16243     0206                     l893:
 16244                           
 16245                           ;doprnt.c: 783: if(((unsigned)width) > len)
 16246     0206  0140               	movlb	0	; select bank0
 16247     0207  084E               	movf	printf@width+1,w
 16248     0208  0248               	subwf	printf@len+1,w
 16249     0209  1D03               	skipz
 16250     020A  2A0D               	goto	u2965
 16251     020B  084D               	movf	printf@width,w
 16252     020C  0247               	subwf	printf@len,w
 16253     020D                     u2965:
 16254     020D  1803               	skipnc
 16255     020E  2A10               	goto	u2961
 16256     020F  2A11               	goto	u2960
 16257     0210                     u2961:
 16258     0210  2A16               	goto	l3513
 16259     0211                     u2960:
 16260     0211                     l3511:
 16261                           
 16262                           ;doprnt.c: 784: width -= len;
 16263     0211  0847               	movf	printf@len,w
 16264     0212  02CD               	subwf	printf@width,f
 16265     0213  0848               	movf	printf@len+1,w
 16266     0214  3BCE               	subwfb	printf@width+1,f
 16267     0215  2A18               	goto	l3515
 16268     0216                     l3513:
 16269                           
 16270                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
 16271     0216  01CD               	clrf	printf@width
 16272     0217  01CE               	clrf	printf@width+1
 16273     0218                     l3515:
 16274                           
 16275                           ;doprnt.c: 788: if(!(flag & 0x08))
 16276     0218  19D0               	btfsc	printf@flag,3
 16277     0219  2A1B               	goto	u2971
 16278     021A  2A1C               	goto	u2970
 16279     021B                     u2971:
 16280     021B  2A3C               	goto	l3527
 16281     021C                     u2970:
 16282     021C  2A21               	goto	l3521
 16283     021D                     l3519:
 16284                           
 16285                           ;doprnt.c: 791: (putch(' ') );
 16286     021D  3020               	movlw	32
 16287     021E  319E  2621  3180   	fcall	_putch
 16288     0221                     l3521:
 16289     0221  30FF               	movlw	255
 16290     0222  0140               	movlb	0	; select bank0
 16291     0223  07CD               	addwf	printf@width,f
 16292     0224  30FF               	movlw	255
 16293     0225  3DCE               	addwfc	printf@width+1,f
 16294     0226  0A4D               	incf	printf@width,w
 16295     0227  1D03               	skipz
 16296     0228  2A2D               	goto	u2981
 16297     0229  0A4E               	incf	printf@width+1,w
 16298     022A  1D03               	btfss	3,2
 16299     022B  2A2D               	goto	u2981
 16300     022C  2A2E               	goto	u2980
 16301     022D                     u2981:
 16302     022D  2A1D               	goto	l3519
 16303     022E                     u2980:
 16304     022E  2A3C               	goto	l3527
 16305     022F                     l3523:
 16306                           
 16307                           ;doprnt.c: 794: (putch(*cp++) );
 16308     022F  0845               	movf	printf@cp,w
 16309     0230  0084               	movwf	4
 16310     0231  0846               	movf	printf@cp+1,w
 16311     0232  0085               	movwf	5
 16312     0233  0800               	movf	0,w	;code access
 16313     0234  319E  2621  3180   	fcall	_putch
 16314     0237                     l3525:
 16315     0237  3001               	movlw	1
 16316     0238  0140               	movlb	0	; select bank0
 16317     0239  07C5               	addwf	printf@cp,f
 16318     023A  3000               	movlw	0
 16319     023B  3DC6               	addwfc	printf@cp+1,f
 16320     023C                     l3527:
 16321     023C  3001               	movlw	1
 16322     023D  02C7               	subwf	printf@len,f
 16323     023E  3000               	movlw	0
 16324     023F  3BC8               	subwfb	printf@len+1,f
 16325     0240  0A47               	incf	printf@len,w
 16326     0241  1D03               	skipz
 16327     0242  2A47               	goto	u2991
 16328     0243  0A48               	incf	printf@len+1,w
 16329     0244  1D03               	btfss	3,2
 16330     0245  2A47               	goto	u2991
 16331     0246  2A48               	goto	u2990
 16332     0247                     u2991:
 16333     0247  2A2F               	goto	l3523
 16334     0248                     u2990:
 16335     0248                     l902:
 16336                           
 16337                           ;doprnt.c: 796: if(flag & 0x08)
 16338     0248  1DD0               	btfss	printf@flag,3
 16339     0249  2A4B               	goto	u3001
 16340     024A  2A4C               	goto	u3000
 16341     024B                     u3001:
 16342     024B  2DB8               	goto	l3731
 16343     024C                     u3000:
 16344     024C  2A51               	goto	l3533
 16345     024D                     l3531:
 16346                           
 16347                           ;doprnt.c: 798: (putch(' ') );
 16348     024D  3020               	movlw	32
 16349     024E  319E  2621  3180   	fcall	_putch
 16350     0251                     l3533:
 16351     0251  30FF               	movlw	255
 16352     0252  0140               	movlb	0	; select bank0
 16353     0253  07CD               	addwf	printf@width,f
 16354     0254  30FF               	movlw	255
 16355     0255  3DCE               	addwfc	printf@width+1,f
 16356     0256  0A4D               	incf	printf@width,w
 16357     0257  1D03               	skipz
 16358     0258  2A5D               	goto	u3011
 16359     0259  0A4E               	incf	printf@width+1,w
 16360     025A  1D03               	btfss	3,2
 16361     025B  2A5D               	goto	u3011
 16362     025C  2A5E               	goto	u3010
 16363     025D                     u3011:
 16364     025D  2A4D               	goto	l3531
 16365     025E                     u3010:
 16366     025E  2DB8               	goto	l3731
 16367     025F                     l3535:
 16368                           
 16369                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
 16370     025F  0849               	movf	printf@ap,w
 16371     0260  0086               	movwf	6
 16372     0261  0187               	clrf	7
 16373     0262  0801               	movf	1,w
 16374     0263  00CF               	movwf	printf@c
 16375     0264                     l3537:
 16376     0264  3002               	movlw	2
 16377     0265  00BA               	movwf	??_printf
 16378     0266  083A               	movf	??_printf,w
 16379     0267  07C9               	addwf	printf@ap,f
 16380     0268                     l3539:
 16381                           
 16382                           ;doprnt.c: 831: cp = (char *)&c;
 16383     0268  304F               	movlw	low printf@c
 16384     0269  00C5               	movwf	printf@cp
 16385     026A  3000               	movlw	high printf@c
 16386     026B  00C6               	movwf	printf@cp+1
 16387     026C                     l3541:
 16388                           
 16389                           ;doprnt.c: 832: len = 1;
 16390     026C  3001               	movlw	1
 16391     026D  00C7               	movwf	printf@len
 16392     026E  3000               	movlw	0
 16393     026F  00C8               	movwf	printf@len+1
 16394                           
 16395                           ;doprnt.c: 833: goto dostring;
 16396     0270  29E6               	goto	l3505
 16397     0271                     l3543:
 16398                           
 16399                           ;doprnt.c: 844: flag |= 0xC0;
 16400     0271  30C0               	movlw	192
 16401     0272  04D0               	iorwf	printf@flag,f
 16402     0273  3000               	movlw	0
 16403     0274  04D1               	iorwf	printf@flag+1,f
 16404                           
 16405                           ;doprnt.c: 845: break;
 16406     0275  2AA0               	goto	l3549
 16407     0276                     l3547:
 16408     0276  0140               	movlb	0	; select bank0
 16409     0277  082F               	movf	printf@f+1,w
 16410     0278  00BB               	movwf	??_printf+1
 16411     0279  082E               	movf	printf@f,w
 16412     027A  00BA               	movwf	??_printf
 16413     027B  0AAE               	incf	printf@f,f
 16414     027C  1903               	skipnz
 16415     027D  0AAF               	incf	printf@f+1,f
 16416     027E  083A               	movf	??_printf,w
 16417     027F  0084               	movwf	4
 16418     0280  083B               	movf	??_printf+1,w
 16419     0281  0085               	movwf	5
 16420     0282  0800               	movf	0,w	;code access
 16421     0283  00CF               	movwf	printf@c
 16422                           
 16423                           ; Switch size 1, requested type "simple"
 16424                           ; Number of cases is 9, Range of values is 0 to 120
 16425                           ; switch strategies available:
 16426                           ; Name         Instructions Cycles
 16427                           ; simple_byte           28    15 (average)
 16428                           ; direct_byte          248     6 (fixed)
 16429                           ; jumptable            260     6 (fixed)
 16430                           ;	Chosen strategy is simple_byte
 16431     0284  3A00               	xorlw	0	; case 0
 16432     0285  1903               	skipnz
 16433     0286  2DCB               	goto	l988
 16434     0287  3A58               	xorlw	88	; case 88
 16435     0288  1903               	skipnz
 16436     0289  29BC               	goto	l885
 16437     028A  3A3B               	xorlw	59	; case 99
 16438     028B  1903               	skipnz
 16439     028C  2A5F               	goto	l3535
 16440     028D  3A07               	xorlw	7	; case 100
 16441     028E  1903               	skipnz
 16442     028F  2AA0               	goto	l3549
 16443     0290  3A0D               	xorlw	13	; case 105
 16444     0291  1903               	skipnz
 16445     0292  2AA0               	goto	l3549
 16446     0293  3A06               	xorlw	6	; case 111
 16447     0294  1903               	skipnz
 16448     0295  29BA               	goto	l881
 16449     0296  3A1C               	xorlw	28	; case 115
 16450     0297  1903               	skipnz
 16451     0298  29BF               	goto	l3491
 16452     0299  3A06               	xorlw	6	; case 117
 16453     029A  1903               	skipnz
 16454     029B  2A71               	goto	l3543
 16455     029C  3A0D               	xorlw	13	; case 120
 16456     029D  1903               	skipnz
 16457     029E  29BD               	goto	l886
 16458     029F  2A68               	goto	l3539
 16459     02A0                     l3549:
 16460                           
 16461                           ;doprnt.c: 1277: if((flag & (0xC0)) == 0x00)
 16462     02A0  30C0               	movlw	192
 16463     02A1  0550               	andwf	printf@flag,w
 16464     02A2  00BA               	movwf	??_printf
 16465     02A3  3000               	movlw	0
 16466     02A4  0551               	andwf	printf@flag+1,w
 16467     02A5  00BB               	movwf	??_printf+1
 16468     02A6  083A               	movf	??_printf,w
 16469     02A7  043B               	iorwf	??_printf+1,w
 16470     02A8  1D03               	btfss	3,2
 16471     02A9  2AAB               	goto	u3021
 16472     02AA  2AAC               	goto	u3020
 16473     02AB                     u3021:
 16474     02AB  2AC5               	goto	l3561
 16475     02AC                     u3020:
 16476     02AC                     l3551:
 16477                           
 16478                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 16479     02AC  0849               	movf	printf@ap,w
 16480     02AD  0086               	movwf	6
 16481     02AE  0187               	clrf	7
 16482     02AF  3F40               	moviw [0]fsr1
 16483     02B0  00CA               	movwf	printf@val
 16484     02B1  3F41               	moviw [1]fsr1
 16485     02B2  00CB               	movwf	printf@val+1
 16486     02B3                     l3553:
 16487     02B3  3002               	movlw	2
 16488     02B4  00BA               	movwf	??_printf
 16489     02B5  083A               	movf	??_printf,w
 16490     02B6  07C9               	addwf	printf@ap,f
 16491     02B7                     l3555:
 16492                           
 16493                           ;doprnt.c: 1287: if((int)val < 0) {
 16494     02B7  1FCB               	btfss	printf@val+1,7
 16495     02B8  2ABA               	goto	u3031
 16496     02B9  2ABB               	goto	u3030
 16497     02BA                     u3031:
 16498     02BA  2AD0               	goto	l3565
 16499     02BB                     u3030:
 16500     02BB                     l3557:
 16501                           
 16502                           ;doprnt.c: 1288: flag |= 0x03;
 16503     02BB  3003               	movlw	3
 16504     02BC  04D0               	iorwf	printf@flag,f
 16505     02BD  3000               	movlw	0
 16506     02BE  04D1               	iorwf	printf@flag+1,f
 16507     02BF                     l3559:
 16508                           
 16509                           ;doprnt.c: 1289: val = -val;
 16510     02BF  09CA               	comf	printf@val,f
 16511     02C0  09CB               	comf	printf@val+1,f
 16512     02C1  0ACA               	incf	printf@val,f
 16513     02C2  1903               	skipnz
 16514     02C3  0ACB               	incf	printf@val+1,f
 16515     02C4  2AD0               	goto	l3565
 16516     02C5                     l3561:
 16517                           
 16518                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
 16519     02C5  0849               	movf	printf@ap,w
 16520     02C6  0086               	movwf	6
 16521     02C7  0187               	clrf	7
 16522     02C8  3F40               	moviw [0]fsr1
 16523     02C9  00CA               	movwf	printf@val
 16524     02CA  3F41               	moviw [1]fsr1
 16525     02CB  00CB               	movwf	printf@val+1
 16526     02CC                     l3563:
 16527     02CC  3002               	movlw	2
 16528     02CD  00BA               	movwf	??_printf
 16529     02CE  083A               	movf	??_printf,w
 16530     02CF  07C9               	addwf	printf@ap,f
 16531     02D0                     l3565:
 16532                           
 16533                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
 16534     02D0  084C               	movf	printf@prec,w
 16535     02D1  1D03               	btfss	3,2
 16536     02D2  2AD4               	goto	u3041
 16537     02D3  2AD5               	goto	u3040
 16538     02D4                     u3041:
 16539     02D4  2B6D               	goto	l3603
 16540     02D5                     u3040:
 16541     02D5                     l3567:
 16542     02D5  084A               	movf	printf@val,w
 16543     02D6  044B               	iorwf	printf@val+1,w
 16544     02D7  1D03               	btfss	3,2
 16545     02D8  2ADA               	goto	u3051
 16546     02D9  2ADB               	goto	u3050
 16547     02DA                     u3051:
 16548     02DA  2B6D               	goto	l3603
 16549     02DB                     u3050:
 16550     02DB                     l3569:
 16551                           
 16552                           ;doprnt.c: 1317: prec++;
 16553     02DB  3001               	movlw	1
 16554     02DC  00BA               	movwf	??_printf
 16555     02DD  083A               	movf	??_printf,w
 16556     02DE  07CC               	addwf	printf@prec,f
 16557     02DF  2B6D               	goto	l3603
 16558     02E0                     l916:
 16559                           
 16560                           ;doprnt.c: 1328: case 0xC0:;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
 16561     02E0  01CF               	clrf	printf@c
 16562     02E1  0ACF               	incf	printf@c,f
 16563     02E2                     l3571:
 16564     02E2  3005               	movlw	5
 16565     02E3  064F               	xorwf	printf@c,w
 16566     02E4  1D03               	btfss	3,2
 16567     02E5  2AE7               	goto	u3061
 16568     02E6  2AE8               	goto	u3060
 16569     02E7                     u3061:
 16570     02E7  2AE9               	goto	l3575
 16571     02E8                     u3060:
 16572     02E8  2B7C               	goto	l3605
 16573     02E9                     l3575:
 16574                           
 16575                           ;doprnt.c: 1332: if(val < dpowers[c])
 16576     02E9  084F               	movf	printf@c,w
 16577     02EA  00BA               	movwf	??_printf
 16578     02EB  01BB               	clrf	??_printf+1
 16579     02EC  35BA               	lslf	??_printf,f
 16580     02ED  0DBB               	rlf	??_printf+1,f
 16581     02EE  301F               	movlw	low _dpowers
 16582     02EF  073A               	addwf	??_printf,w
 16583     02F0  0084               	movwf	4
 16584     02F1  301A               	movlw	high _dpowers
 16585     02F2  3D3B               	addwfc	??_printf+1,w
 16586     02F3  3880               	iorlw	128
 16587     02F4  0085               	movwf	5
 16588     02F5  3F00               	moviw [0]fsr0
 16589     02F6  00BC               	movwf	??_printf+2
 16590     02F7  3F01               	moviw [1]fsr0
 16591     02F8  00BD               	movwf	??_printf+3
 16592     02F9  083D               	movf	??_printf+3,w
 16593     02FA  024B               	subwf	printf@val+1,w
 16594     02FB  1D03               	skipz
 16595     02FC  2AFF               	goto	u3075
 16596     02FD  083C               	movf	??_printf+2,w
 16597     02FE  024A               	subwf	printf@val,w
 16598     02FF                     u3075:
 16599     02FF  1803               	skipnc
 16600     0300  2B02               	goto	u3071
 16601     0301  2B03               	goto	u3070
 16602     0302                     u3071:
 16603     0302  2B04               	goto	l3579
 16604     0303                     u3070:
 16605     0303  2B7C               	goto	l3605
 16606     0304                     l3579:
 16607     0304  3001               	movlw	1
 16608     0305  00BA               	movwf	??_printf
 16609     0306  083A               	movf	??_printf,w
 16610     0307  07CF               	addwf	printf@c,f
 16611     0308  3005               	movlw	5
 16612     0309  064F               	xorwf	printf@c,w
 16613     030A  1D03               	btfss	3,2
 16614     030B  2B0D               	goto	u3081
 16615     030C  2B0E               	goto	u3080
 16616     030D                     u3081:
 16617     030D  2AE9               	goto	l3575
 16618     030E                     u3080:
 16619     030E  2B7C               	goto	l3605
 16620     030F                     l921:	
 16621                           ;doprnt.c: 1340: case 0x80:
 16622                           
 16623                           
 16624                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16625     030F  01CF               	clrf	printf@c
 16626     0310  0ACF               	incf	printf@c,f
 16627     0311                     l3581:
 16628     0311  3004               	movlw	4
 16629     0312  064F               	xorwf	printf@c,w
 16630     0313  1D03               	btfss	3,2
 16631     0314  2B16               	goto	u3091
 16632     0315  2B17               	goto	u3090
 16633     0316                     u3091:
 16634     0316  2B18               	goto	l3585
 16635     0317                     u3090:
 16636     0317  2B7C               	goto	l3605
 16637     0318                     l3585:
 16638                           
 16639                           ;doprnt.c: 1343: if(val < hexpowers[c])
 16640     0318  084F               	movf	printf@c,w
 16641     0319  00BA               	movwf	??_printf
 16642     031A  01BB               	clrf	??_printf+1
 16643     031B  35BA               	lslf	??_printf,f
 16644     031C  0DBB               	rlf	??_printf+1,f
 16645     031D  3000               	movlw	low _hexpowers
 16646     031E  073A               	addwf	??_printf,w
 16647     031F  0084               	movwf	4
 16648     0320  3018               	movlw	high _hexpowers
 16649     0321  3D3B               	addwfc	??_printf+1,w
 16650     0322  3880               	iorlw	128
 16651     0323  0085               	movwf	5
 16652     0324  3F00               	moviw [0]fsr0
 16653     0325  00BC               	movwf	??_printf+2
 16654     0326  3F01               	moviw [1]fsr0
 16655     0327  00BD               	movwf	??_printf+3
 16656     0328  083D               	movf	??_printf+3,w
 16657     0329  024B               	subwf	printf@val+1,w
 16658     032A  1D03               	skipz
 16659     032B  2B2E               	goto	u3105
 16660     032C  083C               	movf	??_printf+2,w
 16661     032D  024A               	subwf	printf@val,w
 16662     032E                     u3105:
 16663     032E  1803               	skipnc
 16664     032F  2B31               	goto	u3101
 16665     0330  2B32               	goto	u3100
 16666     0331                     u3101:
 16667     0331  2B33               	goto	l3589
 16668     0332                     u3100:
 16669     0332  2B7C               	goto	l3605
 16670     0333                     l3589:
 16671     0333  3001               	movlw	1
 16672     0334  00BA               	movwf	??_printf
 16673     0335  083A               	movf	??_printf,w
 16674     0336  07CF               	addwf	printf@c,f
 16675     0337  3004               	movlw	4
 16676     0338  064F               	xorwf	printf@c,w
 16677     0339  1D03               	btfss	3,2
 16678     033A  2B3C               	goto	u3111
 16679     033B  2B3D               	goto	u3110
 16680     033C                     u3111:
 16681     033C  2B18               	goto	l3585
 16682     033D                     u3110:
 16683     033D  2B7C               	goto	l3605
 16684     033E                     l925:	
 16685                           ;doprnt.c: 1352: case 0x40:
 16686                           
 16687                           
 16688                           ;doprnt.c: 1354: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 16689     033E  01CF               	clrf	printf@c
 16690     033F  0ACF               	incf	printf@c,f
 16691     0340                     l3591:
 16692     0340  3006               	movlw	6
 16693     0341  064F               	xorwf	printf@c,w
 16694     0342  1D03               	btfss	3,2
 16695     0343  2B45               	goto	u3121
 16696     0344  2B46               	goto	u3120
 16697     0345                     u3121:
 16698     0345  2B47               	goto	l3595
 16699     0346                     u3120:
 16700     0346  2B7C               	goto	l3605
 16701     0347                     l3595:
 16702                           
 16703                           ;doprnt.c: 1355: if(val < octpowers[c])
 16704     0347  084F               	movf	printf@c,w
 16705     0348  00BA               	movwf	??_printf
 16706     0349  01BB               	clrf	??_printf+1
 16707     034A  35BA               	lslf	??_printf,f
 16708     034B  0DBB               	rlf	??_printf+1,f
 16709     034C  30FD               	movlw	low _octpowers
 16710     034D  073A               	addwf	??_printf,w
 16711     034E  0084               	movwf	4
 16712     034F  3019               	movlw	high _octpowers
 16713     0350  3D3B               	addwfc	??_printf+1,w
 16714     0351  3880               	iorlw	128
 16715     0352  0085               	movwf	5
 16716     0353  3F00               	moviw [0]fsr0
 16717     0354  00BC               	movwf	??_printf+2
 16718     0355  3F01               	moviw [1]fsr0
 16719     0356  00BD               	movwf	??_printf+3
 16720     0357  083D               	movf	??_printf+3,w
 16721     0358  024B               	subwf	printf@val+1,w
 16722     0359  1D03               	skipz
 16723     035A  2B5D               	goto	u3135
 16724     035B  083C               	movf	??_printf+2,w
 16725     035C  024A               	subwf	printf@val,w
 16726     035D                     u3135:
 16727     035D  1803               	skipnc
 16728     035E  2B60               	goto	u3131
 16729     035F  2B61               	goto	u3130
 16730     0360                     u3131:
 16731     0360  2B62               	goto	l3599
 16732     0361                     u3130:
 16733     0361  2B7C               	goto	l3605
 16734     0362                     l3599:
 16735     0362  3001               	movlw	1
 16736     0363  00BA               	movwf	??_printf
 16737     0364  083A               	movf	??_printf,w
 16738     0365  07CF               	addwf	printf@c,f
 16739     0366  3006               	movlw	6
 16740     0367  064F               	xorwf	printf@c,w
 16741     0368  1D03               	btfss	3,2
 16742     0369  2B6B               	goto	u3141
 16743     036A  2B6C               	goto	u3140
 16744     036B                     u3141:
 16745     036B  2B47               	goto	l3595
 16746     036C                     u3140:
 16747     036C  2B7C               	goto	l3605
 16748     036D                     l3603:
 16749     036D  0850               	movf	printf@flag,w
 16750     036E  39C0               	andlw	192
 16751                           
 16752                           ; Switch size 1, requested type "simple"
 16753                           ; Number of cases is 4, Range of values is 0 to 192
 16754                           ; switch strategies available:
 16755                           ; Name         Instructions Cycles
 16756                           ; simple_byte           13     7 (average)
 16757                           ; jumptable            260     6 (fixed)
 16758                           ;	Chosen strategy is simple_byte
 16759     036F  3A00               	xorlw	0	; case 0
 16760     0370  1903               	skipnz
 16761     0371  2AE0               	goto	l916
 16762     0372  3A40               	xorlw	64	; case 64
 16763     0373  1903               	skipnz
 16764     0374  2B3E               	goto	l925
 16765     0375  3AC0               	xorlw	192	; case 128
 16766     0376  1903               	skipnz
 16767     0377  2B0F               	goto	l921
 16768     0378  3A40               	xorlw	64	; case 192
 16769     0379  1903               	skipnz
 16770     037A  2AE0               	goto	l916
 16771     037B  2B7C               	goto	l3605
 16772     037C                     l3605:
 16773                           
 16774                           ;doprnt.c: 1365: if(c < prec)
 16775     037C  084C               	movf	printf@prec,w
 16776     037D  00BA               	movwf	??_printf
 16777     037E  01BB               	clrf	??_printf+1
 16778     037F  1BBA               	btfsc	??_printf,7
 16779     0380  03BB               	decf	??_printf+1,f
 16780     0381  083B               	movf	??_printf+1,w
 16781     0382  3A80               	xorlw	128
 16782     0383  3C80               	sublw	128
 16783     0384  1D03               	skipz
 16784     0385  2B88               	goto	u3155
 16785     0386  083A               	movf	??_printf,w
 16786     0387  024F               	subwf	printf@c,w
 16787     0388                     u3155:
 16788     0388  1803               	skipnc
 16789     0389  2B8B               	goto	u3151
 16790     038A  2B8C               	goto	u3150
 16791     038B                     u3151:
 16792     038B  2B90               	goto	l3609
 16793     038C                     u3150:
 16794     038C                     l3607:
 16795                           
 16796                           ;doprnt.c: 1366: c = (char)prec;
 16797     038C  0140               	movlb	0	; select bank0
 16798     038D  084C               	movf	printf@prec,w
 16799     038E  00CF               	movwf	printf@c
 16800     038F  2BA6               	goto	l3613
 16801     0390                     l3609:
 16802                           
 16803                           ;doprnt.c: 1367: else if(prec < c)
 16804     0390  0140               	movlb	0	; select bank0
 16805     0391  084C               	movf	printf@prec,w
 16806     0392  00BA               	movwf	??_printf
 16807     0393  01BB               	clrf	??_printf+1
 16808     0394  1BBA               	btfsc	??_printf,7
 16809     0395  03BB               	decf	??_printf+1,f
 16810     0396  083B               	movf	??_printf+1,w
 16811     0397  3A80               	xorlw	128
 16812     0398  00BC               	movwf	??_printf+2
 16813     0399  3080               	movlw	128
 16814     039A  023C               	subwf	??_printf+2,w
 16815     039B  1D03               	skipz
 16816     039C  2B9F               	goto	u3165
 16817     039D  084F               	movf	printf@c,w
 16818     039E  023A               	subwf	??_printf,w
 16819     039F                     u3165:
 16820     039F  1803               	skipnc
 16821     03A0  2BA2               	goto	u3161
 16822     03A1  2BA3               	goto	u3160
 16823     03A2                     u3161:
 16824     03A2  2BA6               	goto	l3613
 16825     03A3                     u3160:
 16826     03A3                     l3611:
 16827                           
 16828                           ;doprnt.c: 1368: prec = c;
 16829     03A3  0140               	movlb	0	; select bank0
 16830     03A4  084F               	movf	printf@c,w
 16831     03A5  00CC               	movwf	printf@prec
 16832     03A6                     l3613:
 16833                           
 16834                           ;doprnt.c: 1371: if(width && flag & 0x03)
 16835     03A6  0140               	movlb	0	; select bank0
 16836     03A7  084D               	movf	printf@width,w
 16837     03A8  044E               	iorwf	printf@width+1,w
 16838     03A9  1903               	btfsc	3,2
 16839     03AA  2BAC               	goto	u3171
 16840     03AB  2BAD               	goto	u3170
 16841     03AC                     u3171:
 16842     03AC  2BBD               	goto	l3619
 16843     03AD                     u3170:
 16844     03AD                     l3615:
 16845     03AD  3003               	movlw	3
 16846     03AE  0550               	andwf	printf@flag,w
 16847     03AF  00BA               	movwf	??_printf
 16848     03B0  3000               	movlw	0
 16849     03B1  0551               	andwf	printf@flag+1,w
 16850     03B2  00BB               	movwf	??_printf+1
 16851     03B3  083A               	movf	??_printf,w
 16852     03B4  043B               	iorwf	??_printf+1,w
 16853     03B5  1903               	btfsc	3,2
 16854     03B6  2BB8               	goto	u3181
 16855     03B7  2BB9               	goto	u3180
 16856     03B8                     u3181:
 16857     03B8  2BBD               	goto	l3619
 16858     03B9                     u3180:
 16859     03B9                     l3617:
 16860                           
 16861                           ;doprnt.c: 1372: width--;
 16862     03B9  30FF               	movlw	255
 16863     03BA  07CD               	addwf	printf@width,f
 16864     03BB  30FF               	movlw	255
 16865     03BC  3DCE               	addwfc	printf@width+1,f
 16866     03BD                     l3619:
 16867                           
 16868                           ;doprnt.c: 1374: if(flag & 0x4000) {
 16869     03BD  1F51               	btfss	printf@flag+1,6
 16870     03BE  2BC0               	goto	u3191
 16871     03BF  2BC1               	goto	u3190
 16872     03C0                     u3191:
 16873     03C0  2BE2               	goto	l3627
 16874     03C1                     u3190:
 16875     03C1                     l3621:
 16876                           
 16877                           ;doprnt.c: 1375: if(width > prec)
 16878     03C1  084C               	movf	printf@prec,w
 16879     03C2  00BA               	movwf	??_printf
 16880     03C3  01BB               	clrf	??_printf+1
 16881     03C4  1BBA               	btfsc	??_printf,7
 16882     03C5  03BB               	decf	??_printf+1,f
 16883     03C6  083B               	movf	??_printf+1,w
 16884     03C7  3A80               	xorlw	128
 16885     03C8  00BC               	movwf	??_printf+2
 16886     03C9  084E               	movf	printf@width+1,w
 16887     03CA  3A80               	xorlw	128
 16888     03CB  023C               	subwf	??_printf+2,w
 16889     03CC  1D03               	skipz
 16890     03CD  2BD0               	goto	u3205
 16891     03CE  084D               	movf	printf@width,w
 16892     03CF  023A               	subwf	??_printf,w
 16893     03D0                     u3205:
 16894     03D0  1803               	skipnc
 16895     03D1  2BD3               	goto	u3201
 16896     03D2  2BD4               	goto	u3200
 16897     03D3                     u3201:
 16898     03D3  2BDF               	goto	l3625
 16899     03D4                     u3200:
 16900     03D4                     l3623:
 16901                           
 16902                           ;doprnt.c: 1376: width -= prec;
 16903     03D4  0140               	movlb	0	; select bank0
 16904     03D5  084C               	movf	printf@prec,w
 16905     03D6  00BA               	movwf	??_printf
 16906     03D7  01BB               	clrf	??_printf+1
 16907     03D8  1BBA               	btfsc	??_printf,7
 16908     03D9  03BB               	decf	??_printf+1,f
 16909     03DA  083A               	movf	??_printf,w
 16910     03DB  02CD               	subwf	printf@width,f
 16911     03DC  083B               	movf	??_printf+1,w
 16912     03DD  3BCE               	subwfb	printf@width+1,f
 16913     03DE  2BE2               	goto	l3627
 16914     03DF                     l3625:
 16915                           
 16916                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
 16917     03DF  0140               	movlb	0	; select bank0
 16918     03E0  01CD               	clrf	printf@width
 16919     03E1  01CE               	clrf	printf@width+1
 16920     03E2                     l3627:
 16921                           
 16922                           ;doprnt.c: 1379: };doprnt.c: 1383: if((flag & (;doprnt.c: 1385: 0x04|;doprnt.c: 1387: (0
      +                          xC0)|0x800)) == (0x40|0x800)) {
 16923     03E2  30C4               	movlw	196
 16924     03E3  0550               	andwf	printf@flag,w
 16925     03E4  00BA               	movwf	??_printf
 16926     03E5  3008               	movlw	8
 16927     03E6  0551               	andwf	printf@flag+1,w
 16928     03E7  00BB               	movwf	??_printf+1
 16929     03E8  3040               	movlw	64
 16930     03E9  063A               	xorwf	??_printf,w
 16931     03EA  3008               	movlw	8
 16932     03EB  1903               	skipnz
 16933     03EC  063B               	xorwf	??_printf+1,w
 16934     03ED  1D03               	btfss	3,2
 16935     03EE  2BF0               	goto	u3211
 16936     03EF  2BF1               	goto	u3210
 16937     03F0                     u3211:
 16938     03F0  2BFC               	goto	l3633
 16939     03F1                     u3210:
 16940     03F1                     l3629:
 16941                           
 16942                           ;doprnt.c: 1388: if(width)
 16943     03F1  084D               	movf	printf@width,w
 16944     03F2  044E               	iorwf	printf@width+1,w
 16945     03F3  1903               	btfsc	3,2
 16946     03F4  2BF6               	goto	u3221
 16947     03F5  2BF7               	goto	u3220
 16948     03F6                     u3221:
 16949     03F6  2C21               	goto	l3641
 16950     03F7                     u3220:
 16951     03F7                     l3631:
 16952                           
 16953                           ;doprnt.c: 1389: width--;
 16954     03F7  30FF               	movlw	255
 16955     03F8  07CD               	addwf	printf@width,f
 16956     03F9  30FF               	movlw	255
 16957     03FA  3DCE               	addwfc	printf@width+1,f
 16958     03FB  2C21               	goto	l3641
 16959     03FC                     l3633:
 16960                           
 16961                           ;doprnt.c: 1394: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 16962     03FC  30C0               	movlw	192
 16963     03FD  0550               	andwf	printf@flag,w
 16964     03FE  00BA               	movwf	??_printf
 16965     03FF  3008               	movlw	8
 16966     0400  0551               	andwf	printf@flag+1,w
 16967     0401  00BB               	movwf	??_printf+1
 16968     0402  3080               	movlw	128
 16969     0403  063A               	xorwf	??_printf,w
 16970     0404  3008               	movlw	8
 16971     0405  1903               	skipnz
 16972     0406  063B               	xorwf	??_printf+1,w
 16973     0407  1D03               	btfss	3,2
 16974     0408  2C0A               	goto	u3231
 16975     0409  2C0B               	goto	u3230
 16976     040A                     u3231:
 16977     040A  2C21               	goto	l3641
 16978     040B                     u3230:
 16979     040B                     l3635:
 16980                           
 16981                           ;doprnt.c: 1398: if(width > 2)
 16982     040B  084E               	movf	printf@width+1,w
 16983     040C  3A80               	xorlw	128
 16984     040D  00BA               	movwf	??_printf
 16985     040E  3080               	movlw	128
 16986     040F  023A               	subwf	??_printf,w
 16987     0410  1D03               	skipz
 16988     0411  2C14               	goto	u3245
 16989     0412  3003               	movlw	3
 16990     0413  024D               	subwf	printf@width,w
 16991     0414                     u3245:
 16992     0414  1C03               	skipc
 16993     0415  2C17               	goto	u3241
 16994     0416  2C18               	goto	u3240
 16995     0417                     u3241:
 16996     0417  2C1E               	goto	l3639
 16997     0418                     u3240:
 16998     0418                     l3637:
 16999                           
 17000                           ;doprnt.c: 1399: width -= 2;
 17001     0418  30FE               	movlw	254
 17002     0419  0140               	movlb	0	; select bank0
 17003     041A  07CD               	addwf	printf@width,f
 17004     041B  30FF               	movlw	255
 17005     041C  3DCE               	addwfc	printf@width+1,f
 17006     041D  2C21               	goto	l3641
 17007     041E                     l3639:
 17008                           
 17009                           ;doprnt.c: 1400: else;doprnt.c: 1401: width = 0;
 17010     041E  0140               	movlb	0	; select bank0
 17011     041F  01CD               	clrf	printf@width
 17012     0420  01CE               	clrf	printf@width+1
 17013     0421                     l3641:
 17014                           
 17015                           ;doprnt.c: 1402: };doprnt.c: 1407: if(width > c)
 17016     0421  084E               	movf	printf@width+1,w
 17017     0422  3A80               	xorlw	128
 17018     0423  3C80               	sublw	128
 17019     0424  1D03               	skipz
 17020     0425  2C28               	goto	u3255
 17021     0426  084D               	movf	printf@width,w
 17022     0427  024F               	subwf	printf@c,w
 17023     0428                     u3255:
 17024     0428  1803               	skipnc
 17025     0429  2C2B               	goto	u3251
 17026     042A  2C2C               	goto	u3250
 17027     042B                     u3251:
 17028     042B  2C35               	goto	l3645
 17029     042C                     u3250:
 17030     042C                     l3643:
 17031                           
 17032                           ;doprnt.c: 1408: width -= c;
 17033     042C  0140               	movlb	0	; select bank0
 17034     042D  084F               	movf	printf@c,w
 17035     042E  00BA               	movwf	??_printf
 17036     042F  01BB               	clrf	??_printf+1
 17037     0430  083A               	movf	??_printf,w
 17038     0431  02CD               	subwf	printf@width,f
 17039     0432  083B               	movf	??_printf+1,w
 17040     0433  3BCE               	subwfb	printf@width+1,f
 17041     0434  2C38               	goto	l3647
 17042     0435                     l3645:
 17043                           
 17044                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 17045     0435  0140               	movlb	0	; select bank0
 17046     0436  01CD               	clrf	printf@width
 17047     0437  01CE               	clrf	printf@width+1
 17048     0438                     l3647:
 17049                           
 17050                           ;doprnt.c: 1413: if(flag & 0x04) {
 17051     0438  1D50               	btfss	printf@flag,2
 17052     0439  2C3B               	goto	u3261
 17053     043A  2C3C               	goto	u3260
 17054     043B                     u3261:
 17055     043B  2C92               	goto	l3673
 17056     043C                     u3260:
 17057     043C                     l3649:
 17058                           
 17059                           ;doprnt.c: 1418: if(flag & 0x03)
 17060     043C  3003               	movlw	3
 17061     043D  0550               	andwf	printf@flag,w
 17062     043E  00BA               	movwf	??_printf
 17063     043F  3000               	movlw	0
 17064     0440  0551               	andwf	printf@flag+1,w
 17065     0441  00BB               	movwf	??_printf+1
 17066     0442  083A               	movf	??_printf,w
 17067     0443  043B               	iorwf	??_printf+1,w
 17068     0444  1903               	btfsc	3,2
 17069     0445  2C47               	goto	u3271
 17070     0446  2C48               	goto	u3270
 17071     0447                     u3271:
 17072     0447  2C4D               	goto	l945
 17073     0448                     u3270:
 17074     0448                     l3651:
 17075                           
 17076                           ;doprnt.c: 1419: (putch('-') );
 17077     0448  302D               	movlw	45
 17078     0449  319E  2621  3180   	fcall	_putch
 17079     044C  2C7B               	goto	l3667
 17080     044D                     l945:
 17081                           
 17082                           ;doprnt.c: 1422: else;doprnt.c: 1425: if(flag & 0x01)
 17083     044D  1C50               	btfss	printf@flag,0
 17084     044E  2C50               	goto	u3281
 17085     044F  2C51               	goto	u3280
 17086     0450                     u3281:
 17087     0450  2C56               	goto	l3655
 17088     0451                     u3280:
 17089     0451                     l3653:
 17090                           
 17091                           ;doprnt.c: 1426: (putch(' ') );
 17092     0451  3020               	movlw	32
 17093     0452  319E  2621  3180   	fcall	_putch
 17094     0455  2C7B               	goto	l3667
 17095     0456                     l3655:
 17096                           
 17097                           ;doprnt.c: 1429: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17098     0456  30C0               	movlw	192
 17099     0457  0550               	andwf	printf@flag,w
 17100     0458  00BA               	movwf	??_printf
 17101     0459  3008               	movlw	8
 17102     045A  0551               	andwf	printf@flag+1,w
 17103     045B  00BB               	movwf	??_printf+1
 17104     045C  3080               	movlw	128
 17105     045D  063A               	xorwf	??_printf,w
 17106     045E  3008               	movlw	8
 17107     045F  1903               	skipnz
 17108     0460  063B               	xorwf	??_printf+1,w
 17109     0461  1D03               	btfss	3,2
 17110     0462  2C64               	goto	u3291
 17111     0463  2C65               	goto	u3290
 17112     0464                     u3291:
 17113     0464  2C7B               	goto	l3667
 17114     0465                     u3290:
 17115     0465                     l3657:
 17116                           
 17117                           ;doprnt.c: 1430: (putch('0') );
 17118     0465  3030               	movlw	48
 17119     0466  319E  2621  3180   	fcall	_putch
 17120     0469                     l3659:
 17121                           
 17122                           ;doprnt.c: 1432: (putch(flag & 0x20 ? 'X' : 'x') );
 17123     0469  0140               	movlb	0	; select bank0
 17124     046A  1AD0               	btfsc	printf@flag,5
 17125     046B  2C6D               	goto	u3301
 17126     046C  2C6E               	goto	u3300
 17127     046D                     u3301:
 17128     046D  2C73               	goto	l3663
 17129     046E                     u3300:
 17130     046E                     l3661:
 17131     046E  3078               	movlw	120
 17132     046F  00BE               	movwf	_printf$1597
 17133     0470  3000               	movlw	0
 17134     0471  00BF               	movwf	_printf$1597+1
 17135     0472  2C77               	goto	l3665
 17136     0473                     l3663:
 17137     0473  3058               	movlw	88
 17138     0474  00BE               	movwf	_printf$1597
 17139     0475  3000               	movlw	0
 17140     0476  00BF               	movwf	_printf$1597+1
 17141     0477                     l3665:
 17142     0477  083E               	movf	_printf$1597,w
 17143     0478  319E  2621  3180   	fcall	_putch
 17144     047B                     l3667:
 17145                           
 17146                           ;doprnt.c: 1438: };doprnt.c: 1441: if(width)
 17147     047B  0140               	movlb	0	; select bank0
 17148     047C  084D               	movf	printf@width,w
 17149     047D  044E               	iorwf	printf@width+1,w
 17150     047E  1903               	btfsc	3,2
 17151     047F  2C81               	goto	u3311
 17152     0480  2C82               	goto	u3310
 17153     0481                     u3311:
 17154     0481  2D8E               	goto	l3723
 17155     0482                     u3310:
 17156     0482                     l3669:
 17157                           
 17158                           ;doprnt.c: 1443: (putch('0') );
 17159     0482  3030               	movlw	48
 17160     0483  319E  2621  3180   	fcall	_putch
 17161     0486                     l3671:
 17162                           
 17163                           ;doprnt.c: 1444: while(--width);
 17164     0486  30FF               	movlw	255
 17165     0487  0140               	movlb	0	; select bank0
 17166     0488  07CD               	addwf	printf@width,f
 17167     0489  30FF               	movlw	255
 17168     048A  3DCE               	addwfc	printf@width+1,f
 17169     048B  084D               	movf	printf@width,w
 17170     048C  044E               	iorwf	printf@width+1,w
 17171     048D  1D03               	btfss	3,2
 17172     048E  2C90               	goto	u3321
 17173     048F  2C91               	goto	u3320
 17174     0490                     u3321:
 17175     0490  2C82               	goto	l3669
 17176     0491                     u3320:
 17177     0491  2D8E               	goto	l3723
 17178     0492                     l3673:
 17179                           
 17180                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1452: && !(flag & 0x08);doprnt.c: 
      +                          1454: )
 17181     0492  084D               	movf	printf@width,w
 17182     0493  044E               	iorwf	printf@width+1,w
 17183     0494  1903               	btfsc	3,2
 17184     0495  2C97               	goto	u3331
 17185     0496  2C98               	goto	u3330
 17186     0497                     u3331:
 17187     0497  2CAB               	goto	l3681
 17188     0498                     u3330:
 17189     0498                     l3675:
 17190     0498  19D0               	btfsc	printf@flag,3
 17191     0499  2C9B               	goto	u3341
 17192     049A  2C9C               	goto	u3340
 17193     049B                     u3341:
 17194     049B  2CAB               	goto	l3681
 17195     049C                     u3340:
 17196     049C                     l3677:
 17197                           
 17198                           ;doprnt.c: 1456: (putch(' ') );
 17199     049C  3020               	movlw	32
 17200     049D  319E  2621  3180   	fcall	_putch
 17201     04A0                     l3679:
 17202                           
 17203                           ;doprnt.c: 1457: while(--width);
 17204     04A0  30FF               	movlw	255
 17205     04A1  0140               	movlb	0	; select bank0
 17206     04A2  07CD               	addwf	printf@width,f
 17207     04A3  30FF               	movlw	255
 17208     04A4  3DCE               	addwfc	printf@width+1,f
 17209     04A5  084D               	movf	printf@width,w
 17210     04A6  044E               	iorwf	printf@width+1,w
 17211     04A7  1D03               	btfss	3,2
 17212     04A8  2CAA               	goto	u3351
 17213     04A9  2CAB               	goto	u3350
 17214     04AA                     u3351:
 17215     04AA  2C9C               	goto	l3677
 17216     04AB                     u3350:
 17217     04AB                     l3681:
 17218                           
 17219                           ;doprnt.c: 1464: if(flag & 0x03)
 17220     04AB  3003               	movlw	3
 17221     04AC  0550               	andwf	printf@flag,w
 17222     04AD  00BA               	movwf	??_printf
 17223     04AE  3000               	movlw	0
 17224     04AF  0551               	andwf	printf@flag+1,w
 17225     04B0  00BB               	movwf	??_printf+1
 17226     04B1  083A               	movf	??_printf,w
 17227     04B2  043B               	iorwf	??_printf+1,w
 17228     04B3  1903               	btfsc	3,2
 17229     04B4  2CB6               	goto	u3361
 17230     04B5  2CB7               	goto	u3360
 17231     04B6                     u3361:
 17232     04B6  2CBC               	goto	l961
 17233     04B7                     u3360:
 17234     04B7                     l3683:
 17235                           
 17236                           ;doprnt.c: 1465: (putch('-') );
 17237     04B7  302D               	movlw	45
 17238     04B8  319E  2621  3180   	fcall	_putch
 17239     04BB  2CC4               	goto	l3687
 17240     04BC                     l961:
 17241                           
 17242                           ;doprnt.c: 1469: else if(flag & 0x01)
 17243     04BC  1C50               	btfss	printf@flag,0
 17244     04BD  2CBF               	goto	u3371
 17245     04BE  2CC0               	goto	u3370
 17246     04BF                     u3371:
 17247     04BF  2CC4               	goto	l3687
 17248     04C0                     u3370:
 17249     04C0                     l3685:
 17250                           
 17251                           ;doprnt.c: 1470: (putch(' ') );
 17252     04C0  3020               	movlw	32
 17253     04C1  319E  2621  3180   	fcall	_putch
 17254     04C4                     l3687:
 17255                           
 17256                           ;doprnt.c: 1474: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 17257     04C4  30C0               	movlw	192
 17258     04C5  0140               	movlb	0	; select bank0
 17259     04C6  0550               	andwf	printf@flag,w
 17260     04C7  00BA               	movwf	??_printf
 17261     04C8  3008               	movlw	8
 17262     04C9  0551               	andwf	printf@flag+1,w
 17263     04CA  00BB               	movwf	??_printf+1
 17264     04CB  3040               	movlw	64
 17265     04CC  063A               	xorwf	??_printf,w
 17266     04CD  3008               	movlw	8
 17267     04CE  1903               	skipnz
 17268     04CF  063B               	xorwf	??_printf+1,w
 17269     04D0  1D03               	btfss	3,2
 17270     04D1  2CD3               	goto	u3381
 17271     04D2  2CD4               	goto	u3380
 17272     04D3                     u3381:
 17273     04D3  2CD9               	goto	l3691
 17274     04D4                     u3380:
 17275     04D4                     l3689:
 17276                           
 17277                           ;doprnt.c: 1475: (putch('0') );
 17278     04D4  3030               	movlw	48
 17279     04D5  319E  2621  3180   	fcall	_putch
 17280     04D8  2D8E               	goto	l3723
 17281     04D9                     l3691:
 17282                           
 17283                           ;doprnt.c: 1476: else;doprnt.c: 1480: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17284     04D9  30C0               	movlw	192
 17285     04DA  0550               	andwf	printf@flag,w
 17286     04DB  00BA               	movwf	??_printf
 17287     04DC  3008               	movlw	8
 17288     04DD  0551               	andwf	printf@flag+1,w
 17289     04DE  00BB               	movwf	??_printf+1
 17290     04DF  3080               	movlw	128
 17291     04E0  063A               	xorwf	??_printf,w
 17292     04E1  3008               	movlw	8
 17293     04E2  1903               	skipnz
 17294     04E3  063B               	xorwf	??_printf+1,w
 17295     04E4  1D03               	btfss	3,2
 17296     04E5  2CE7               	goto	u3391
 17297     04E6  2CE8               	goto	u3390
 17298     04E7                     u3391:
 17299     04E7  2CFF               	goto	l957
 17300     04E8                     u3390:
 17301     04E8                     l3693:
 17302                           
 17303                           ;doprnt.c: 1484: (putch('0') );
 17304     04E8  3030               	movlw	48
 17305     04E9  319E  2621  3180   	fcall	_putch
 17306     04EC                     l3695:
 17307                           
 17308                           ;doprnt.c: 1486: (putch(flag & 0x20 ? 'X' : 'x') );
 17309     04EC  0140               	movlb	0	; select bank0
 17310     04ED  1AD0               	btfsc	printf@flag,5
 17311     04EE  2CF0               	goto	u3401
 17312     04EF  2CF1               	goto	u3400
 17313     04F0                     u3401:
 17314     04F0  2CF6               	goto	l3699
 17315     04F1                     u3400:
 17316     04F1                     l3697:
 17317     04F1  3078               	movlw	120
 17318     04F2  00C0               	movwf	_printf$1598
 17319     04F3  3000               	movlw	0
 17320     04F4  00C1               	movwf	_printf$1598+1
 17321     04F5  2CFA               	goto	l3701
 17322     04F6                     l3699:
 17323     04F6  3058               	movlw	88
 17324     04F7  00C0               	movwf	_printf$1598
 17325     04F8  3000               	movlw	0
 17326     04F9  00C1               	movwf	_printf$1598+1
 17327     04FA                     l3701:
 17328     04FA  0840               	movf	_printf$1598,w
 17329     04FB  319E  2621  3180   	fcall	_putch
 17330     04FE  2D8E               	goto	l3723
 17331     04FF                     l957:
 17332                           
 17333                           ;doprnt.c: 1492: };doprnt.c: 1495: };doprnt.c: 1500: while(prec--) {
 17334     04FF  2D8E               	goto	l3723
 17335     0500                     l3703:
 17336                           
 17337                           ;doprnt.c: 1512: case 0xC0:;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 1
      +                          0 + '0';
 17338     0500  300A               	movlw	10
 17339     0501  00A8               	movwf	___lwmod@divisor
 17340     0502  3000               	movlw	0
 17341     0503  00A9               	movwf	___lwmod@divisor+1
 17342     0504  084C               	movf	printf@prec,w
 17343     0505  00BA               	movwf	??_printf
 17344     0506  01BB               	clrf	??_printf+1
 17345     0507  35BA               	lslf	??_printf,f
 17346     0508  0DBB               	rlf	??_printf+1,f
 17347     0509  301F               	movlw	low _dpowers
 17348     050A  073A               	addwf	??_printf,w
 17349     050B  0084               	movwf	4
 17350     050C  301A               	movlw	high _dpowers
 17351     050D  3D3B               	addwfc	??_printf+1,w
 17352     050E  3880               	iorlw	128
 17353     050F  0085               	movwf	5
 17354     0510  3F00               	moviw [0]fsr0
 17355     0511  00A0               	movwf	___lwdiv@divisor
 17356     0512  3F01               	moviw [1]fsr0
 17357     0513  00A1               	movwf	___lwdiv@divisor+1
 17358     0514  084B               	movf	printf@val+1,w
 17359     0515  00A3               	movwf	___lwdiv@dividend+1
 17360     0516  084A               	movf	printf@val,w
 17361     0517  00A2               	movwf	___lwdiv@dividend
 17362     0518  3191  2143  3180   	fcall	___lwdiv
 17363     051B  0140               	movlb	0	; select bank0
 17364     051C  0821               	movf	?___lwdiv+1,w
 17365     051D  00AB               	movwf	___lwmod@dividend+1
 17366     051E  0820               	movf	?___lwdiv,w
 17367     051F  00AA               	movwf	___lwmod@dividend
 17368     0520  3191  210E  3180   	fcall	___lwmod
 17369     0523  0140               	movlb	0	; select bank0
 17370     0524  0828               	movf	?___lwmod,w
 17371     0525  3E30               	addlw	48
 17372     0526  00CF               	movwf	printf@c
 17373                           
 17374                           ;doprnt.c: 1517: break;
 17375     0527  2D8A               	goto	l3721
 17376     0528                     l3705:
 17377                           
 17378                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
 17379     0528  084C               	movf	printf@prec,w
 17380     0529  00BA               	movwf	??_printf
 17381     052A  01BB               	clrf	??_printf+1
 17382     052B  35BA               	lslf	??_printf,f
 17383     052C  0DBB               	rlf	??_printf+1,f
 17384     052D  3000               	movlw	low _hexpowers
 17385     052E  073A               	addwf	??_printf,w
 17386     052F  0084               	movwf	4
 17387     0530  3018               	movlw	high _hexpowers
 17388     0531  3D3B               	addwfc	??_printf+1,w
 17389     0532  3880               	iorlw	128
 17390     0533  0085               	movwf	5
 17391     0534  3F00               	moviw [0]fsr0
 17392     0535  00A0               	movwf	___lwdiv@divisor
 17393     0536  3F01               	moviw [1]fsr0
 17394     0537  00A1               	movwf	___lwdiv@divisor+1
 17395     0538  084B               	movf	printf@val+1,w
 17396     0539  00A3               	movwf	___lwdiv@dividend+1
 17397     053A  084A               	movf	printf@val,w
 17398     053B  00A2               	movwf	___lwdiv@dividend
 17399     053C  3191  2143  3180   	fcall	___lwdiv
 17400     053F  0140               	movlb	0	; select bank0
 17401     0540  0820               	movf	?___lwdiv,w
 17402     0541  390F               	andlw	15
 17403     0542  00C4               	movwf	printf@idx
 17404     0543                     l3707:
 17405                           
 17406                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 17407     0543  1AD0               	btfsc	printf@flag,5
 17408     0544  2D46               	goto	u3411
 17409     0545  2D47               	goto	u3410
 17410     0546                     u3411:
 17411     0546  2D4C               	goto	l3711
 17412     0547                     u3410:
 17413     0547                     l3709:
 17414     0547  30B0               	movlw	low (STR_34| (0+32768))
 17415     0548  00C2               	movwf	_printf$1604
 17416     0549  3099               	movlw	high (STR_34| (0+32768))
 17417     054A  00C3               	movwf	_printf$1604+1
 17418     054B  2D50               	goto	l3713
 17419     054C                     l3711:
 17420     054C  309F               	movlw	low (STR_33| (0+32768))
 17421     054D  00C2               	movwf	_printf$1604
 17422     054E  3099               	movlw	high (STR_33| (0+32768))
 17423     054F  00C3               	movwf	_printf$1604+1
 17424     0550                     l3713:
 17425     0550  0843               	movf	_printf$1604+1,w
 17426     0551  00BB               	movwf	??_printf+1
 17427     0552  0842               	movf	_printf$1604,w
 17428     0553  00BA               	movwf	??_printf
 17429     0554  0844               	movf	printf@idx,w
 17430     0555  073A               	addwf	??_printf,w
 17431     0556  0084               	movwf	4
 17432     0557  083B               	movf	??_printf+1,w
 17433     0558  1803               	skipnc
 17434     0559  0A3B               	incf	??_printf+1,w
 17435     055A  0085               	movwf	5
 17436     055B  0800               	movf	0,w	;code access
 17437     055C  00CF               	movwf	printf@c
 17438                           
 17439                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
 17440     055D  2D8A               	goto	l3721
 17441     055E                     l3715:
 17442                           
 17443                           ;doprnt.c: 1544: c = ((val / octpowers[(unsigned char)prec]) & 07) + '0';
 17444     055E  084C               	movf	printf@prec,w
 17445     055F  00BA               	movwf	??_printf
 17446     0560  01BB               	clrf	??_printf+1
 17447     0561  35BA               	lslf	??_printf,f
 17448     0562  0DBB               	rlf	??_printf+1,f
 17449     0563  30FD               	movlw	low _octpowers
 17450     0564  073A               	addwf	??_printf,w
 17451     0565  0084               	movwf	4
 17452     0566  3019               	movlw	high _octpowers
 17453     0567  3D3B               	addwfc	??_printf+1,w
 17454     0568  3880               	iorlw	128
 17455     0569  0085               	movwf	5
 17456     056A  3F00               	moviw [0]fsr0
 17457     056B  00A0               	movwf	___lwdiv@divisor
 17458     056C  3F01               	moviw [1]fsr0
 17459     056D  00A1               	movwf	___lwdiv@divisor+1
 17460     056E  084B               	movf	printf@val+1,w
 17461     056F  00A3               	movwf	___lwdiv@dividend+1
 17462     0570  084A               	movf	printf@val,w
 17463     0571  00A2               	movwf	___lwdiv@dividend
 17464     0572  3191  2143  3180   	fcall	___lwdiv
 17465     0575  0140               	movlb	0	; select bank0
 17466     0576  0820               	movf	?___lwdiv,w
 17467     0577  3907               	andlw	7
 17468     0578  3E30               	addlw	48
 17469     0579  00CF               	movwf	printf@c
 17470                           
 17471                           ;doprnt.c: 1546: break;
 17472     057A  2D8A               	goto	l3721
 17473     057B                     l3719:
 17474     057B  0850               	movf	printf@flag,w
 17475     057C  39C0               	andlw	192
 17476                           
 17477                           ; Switch size 1, requested type "simple"
 17478                           ; Number of cases is 4, Range of values is 0 to 192
 17479                           ; switch strategies available:
 17480                           ; Name         Instructions Cycles
 17481                           ; simple_byte           13     7 (average)
 17482                           ; jumptable            260     6 (fixed)
 17483                           ;	Chosen strategy is simple_byte
 17484     057D  3A00               	xorlw	0	; case 0
 17485     057E  1903               	skipnz
 17486     057F  2D00               	goto	l3703
 17487     0580  3A40               	xorlw	64	; case 64
 17488     0581  1903               	skipnz
 17489     0582  2D5E               	goto	l3715
 17490     0583  3AC0               	xorlw	192	; case 128
 17491     0584  1903               	skipnz
 17492     0585  2D28               	goto	l3705
 17493     0586  3A40               	xorlw	64	; case 192
 17494     0587  1903               	skipnz
 17495     0588  2D00               	goto	l3703
 17496     0589  2D8A               	goto	l3721
 17497     058A                     l3721:
 17498                           
 17499                           ;doprnt.c: 1550: (putch(c) );
 17500     058A  084F               	movf	printf@c,w
 17501     058B  319E  2621  3180   	fcall	_putch
 17502     058E                     l3723:
 17503     058E  30FF               	movlw	255
 17504     058F  0140               	movlb	0	; select bank0
 17505     0590  00BA               	movwf	??_printf
 17506     0591  083A               	movf	??_printf,w
 17507     0592  07CC               	addwf	printf@prec,f
 17508     0593  0A4C               	incf	printf@prec,w
 17509     0594  1D03               	btfss	3,2
 17510     0595  2D97               	goto	u3421
 17511     0596  2D98               	goto	u3420
 17512     0597                     u3421:
 17513     0597  2D7B               	goto	l3719
 17514     0598                     u3420:
 17515     0598                     l983:
 17516                           
 17517                           ;doprnt.c: 1551: };doprnt.c: 1554: if((flag & 0x08) && width > 0)
 17518     0598  1DD0               	btfss	printf@flag,3
 17519     0599  2D9B               	goto	u3431
 17520     059A  2D9C               	goto	u3430
 17521     059B                     u3431:
 17522     059B  2DB8               	goto	l3731
 17523     059C                     u3430:
 17524     059C                     l3725:
 17525     059C  084E               	movf	printf@width+1,w
 17526     059D  3A80               	xorlw	128
 17527     059E  00BA               	movwf	??_printf
 17528     059F  3080               	movlw	128
 17529     05A0  023A               	subwf	??_printf,w
 17530     05A1  1D03               	skipz
 17531     05A2  2DA5               	goto	u3445
 17532     05A3  3001               	movlw	1
 17533     05A4  024D               	subwf	printf@width,w
 17534     05A5                     u3445:
 17535     05A5  1C03               	skipc
 17536     05A6  2DA8               	goto	u3441
 17537     05A7  2DA9               	goto	u3440
 17538     05A8                     u3441:
 17539     05A8  2DB8               	goto	l3731
 17540     05A9                     u3440:
 17541     05A9                     l3727:
 17542                           
 17543                           ;doprnt.c: 1556: (putch(' ') );
 17544     05A9  3020               	movlw	32
 17545     05AA  319E  2621  3180   	fcall	_putch
 17546     05AD                     l3729:
 17547                           
 17548                           ;doprnt.c: 1557: while(--width);
 17549     05AD  30FF               	movlw	255
 17550     05AE  0140               	movlb	0	; select bank0
 17551     05AF  07CD               	addwf	printf@width,f
 17552     05B0  30FF               	movlw	255
 17553     05B1  3DCE               	addwfc	printf@width+1,f
 17554     05B2  084D               	movf	printf@width,w
 17555     05B3  044E               	iorwf	printf@width+1,w
 17556     05B4  1D03               	btfss	3,2
 17557     05B5  2DB7               	goto	u3451
 17558     05B6  2DB8               	goto	u3450
 17559     05B7                     u3451:
 17560     05B7  2DA9               	goto	l3727
 17561     05B8                     u3450:
 17562     05B8                     l3731:
 17563     05B8  0140               	movlb	0	; select bank0
 17564     05B9  082F               	movf	printf@f+1,w
 17565     05BA  00BB               	movwf	??_printf+1
 17566     05BB  082E               	movf	printf@f,w
 17567     05BC  00BA               	movwf	??_printf
 17568     05BD  0AAE               	incf	printf@f,f
 17569     05BE  1903               	skipnz
 17570     05BF  0AAF               	incf	printf@f+1,f
 17571     05C0  083A               	movf	??_printf,w
 17572     05C1  0084               	movwf	4
 17573     05C2  083B               	movf	??_printf+1,w
 17574     05C3  0085               	movwf	5
 17575     05C4  0800               	movf	0,w	;code access
 17576     05C5  00CF               	movwf	printf@c
 17577     05C6  084F               	movf	printf@c,w
 17578     05C7  1D03               	btfss	3,2
 17579     05C8  2DCA               	goto	u3461
 17580     05C9  2DCB               	goto	u3460
 17581     05CA                     u3461:
 17582     05CA  28D2               	goto	l3419
 17583     05CB                     u3460:
 17584     05CB                     l988:
 17585     05CB  0008               	return
 17586     05CC                     __end_of_printf:
 17587                           
 17588                           	psect	text45
 17589     1E21                     __ptext45:	
 17590 ;; *************** function _putch *****************
 17591 ;; Defined at:
 17592 ;;		line 29 in file "uart.c"
 17593 ;; Parameters:    Size  Location     Type
 17594 ;;  data            1    wreg     unsigned char 
 17595 ;; Auto vars:     Size  Location     Type
 17596 ;;  data            1    0[BANK0 ] unsigned char 
 17597 ;; Return value:  Size  Location     Type
 17598 ;;                  1    wreg      void 
 17599 ;; Registers used:
 17600 ;;		wreg
 17601 ;; Tracked objects:
 17602 ;;		On entry : 0/0
 17603 ;;		On exit  : 0/0
 17604 ;;		Unchanged: 0/0
 17605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17607 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;Total ram usage:        1 bytes
 17611 ;; Hardware stack levels used: 1
 17612 ;; Hardware stack levels required when called: 2
 17613 ;; This function calls:
 17614 ;;		Nothing
 17615 ;; This function is called by:
 17616 ;;		_printf
 17617 ;; This function uses a non-reentrant model
 17618 ;;
 17619                           
 17620     1E21                     _putch:	
 17621                           ;psect for function _putch
 17622                           
 17623                           
 17624                           ;incstack = 0
 17625                           ; Regs used in _putch: [wreg]
 17626                           ;putch@data stored from wreg
 17627     1E21  0140               	movlb	0	; select bank0
 17628     1E22  00A0               	movwf	putch@data
 17629     1E23                     l3309:
 17630     1E23                     l470:	
 17631                           ;uart.c: 31: while(0 == PIR3bits.TX1IF);
 17632                           
 17633     1E23  014E               	movlb	14	; select bank14
 17634     1E24  1E0F               	btfss	15,4	;volatile
 17635     1E25  2E27               	goto	u2581
 17636     1E26  2E28               	goto	u2580
 17637     1E27                     u2581:
 17638     1E27  2E23               	goto	l470
 17639     1E28                     u2580:
 17640     1E28                     l3311:
 17641                           
 17642                           ;uart.c: 32: TX1REG = data;
 17643     1E28  0140               	movlb	0	; select bank0
 17644     1E29  0820               	movf	putch@data,w
 17645     1E2A  0142               	movlb	2	; select bank2
 17646     1E2B  009A               	movwf	26	;volatile
 17647     1E2C                     l473:
 17648     1E2C  0008               	return
 17649     1E2D                     __end_of_putch:
 17650                           
 17651                           	psect	text46
 17652     1E77                     __ptext46:	
 17653 ;; *************** function _isdigit *****************
 17654 ;; Defined at:
 17655 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isdigit.c"
 17656 ;; Parameters:    Size  Location     Type
 17657 ;;  c               1    wreg     unsigned char 
 17658 ;; Auto vars:     Size  Location     Type
 17659 ;;  c               1    1[BANK0 ] unsigned char 
 17660 ;; Return value:  Size  Location     Type
 17661 ;;		None               void
 17662 ;; Registers used:
 17663 ;;		wreg, status,2, status,0
 17664 ;; Tracked objects:
 17665 ;;		On entry : 0/0
 17666 ;;		On exit  : 0/0
 17667 ;;		Unchanged: 0/0
 17668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17672 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17673 ;;Total ram usage:        2 bytes
 17674 ;; Hardware stack levels used: 1
 17675 ;; Hardware stack levels required when called: 2
 17676 ;; This function calls:
 17677 ;;		Nothing
 17678 ;; This function is called by:
 17679 ;;		_printf
 17680 ;;		_strtol
 17681 ;; This function uses a non-reentrant model
 17682 ;;
 17683                           
 17684     1E77                     _isdigit:	
 17685                           ;psect for function _isdigit
 17686                           
 17687                           
 17688                           ;incstack = 0
 17689                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 17690                           ;isdigit@c stored from wreg
 17691     1E77  0140               	movlb	0	; select bank0
 17692     1E78  00A1               	movwf	isdigit@c
 17693     1E79                     l3317:
 17694     1E79  01A0               	clrf	_isdigit$1887
 17695     1E7A                     l3319:
 17696     1E7A  303A               	movlw	58
 17697     1E7B  0221               	subwf	isdigit@c,w
 17698     1E7C  1803               	skipnc
 17699     1E7D  2E7F               	goto	u2601
 17700     1E7E  2E80               	goto	u2600
 17701     1E7F                     u2601:
 17702     1E7F  2E88               	goto	l3325
 17703     1E80                     u2600:
 17704     1E80                     l3321:
 17705     1E80  3030               	movlw	48
 17706     1E81  0221               	subwf	isdigit@c,w
 17707     1E82  1C03               	skipc
 17708     1E83  2E85               	goto	u2611
 17709     1E84  2E86               	goto	u2610
 17710     1E85                     u2611:
 17711     1E85  2E88               	goto	l3325
 17712     1E86                     u2610:
 17713     1E86                     l3323:
 17714     1E86  01A0               	clrf	_isdigit$1887
 17715     1E87  0AA0               	incf	_isdigit$1887,f
 17716     1E88                     l3325:
 17717     1E88  0C20               	rrf	_isdigit$1887,w
 17718     1E89                     l1445:
 17719     1E89  0008               	return
 17720     1E8A                     __end_of_isdigit:
 17721                           
 17722                           	psect	text47
 17723     1F52                     __ptext47:	
 17724 ;; *************** function ___wmul *****************
 17725 ;; Defined at:
 17726 ;;		line 15 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul16.c"
 17727 ;; Parameters:    Size  Location     Type
 17728 ;;  multiplier      2    0[BANK0 ] unsigned int 
 17729 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 17730 ;; Auto vars:     Size  Location     Type
 17731 ;;  product         2    4[BANK0 ] unsigned int 
 17732 ;; Return value:  Size  Location     Type
 17733 ;;                  2    0[BANK0 ] unsigned int 
 17734 ;; Registers used:
 17735 ;;		wreg, status,2, status,0
 17736 ;; Tracked objects:
 17737 ;;		On entry : 0/0
 17738 ;;		On exit  : 0/0
 17739 ;;		Unchanged: 0/0
 17740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17741 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17744 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17745 ;;Total ram usage:        6 bytes
 17746 ;; Hardware stack levels used: 1
 17747 ;; Hardware stack levels required when called: 2
 17748 ;; This function calls:
 17749 ;;		Nothing
 17750 ;; This function is called by:
 17751 ;;		_printf
 17752 ;; This function uses a non-reentrant model
 17753 ;;
 17754                           
 17755     1F52                     ___wmul:	
 17756                           ;psect for function ___wmul
 17757                           
 17758     1F52                     l3329:	
 17759                           ;incstack = 0
 17760                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 17761                           
 17762     1F52  0140               	movlb	0	; select bank0
 17763     1F53  01A4               	clrf	___wmul@product
 17764     1F54  01A5               	clrf	___wmul@product+1
 17765     1F55                     l3331:
 17766     1F55  1C20               	btfss	___wmul@multiplier,0
 17767     1F56  2F58               	goto	u2621
 17768     1F57  2F59               	goto	u2620
 17769     1F58                     u2621:
 17770     1F58  2F5D               	goto	l992
 17771     1F59                     u2620:
 17772     1F59                     l3333:
 17773     1F59  0822               	movf	___wmul@multiplicand,w
 17774     1F5A  07A4               	addwf	___wmul@product,f
 17775     1F5B  0823               	movf	___wmul@multiplicand+1,w
 17776     1F5C  3DA5               	addwfc	___wmul@product+1,f
 17777     1F5D                     l992:
 17778     1F5D  3001               	movlw	1
 17779     1F5E                     u2635:
 17780     1F5E  35A2               	lslf	___wmul@multiplicand,f
 17781     1F5F  0DA3               	rlf	___wmul@multiplicand+1,f
 17782     1F60  0B89               	decfsz	9,f
 17783     1F61  2F5E               	goto	u2635
 17784     1F62                     l3335:
 17785     1F62  3001               	movlw	1
 17786     1F63                     u2645:
 17787     1F63  36A1               	lsrf	___wmul@multiplier+1,f
 17788     1F64  0CA0               	rrf	___wmul@multiplier,f
 17789     1F65  0B89               	decfsz	9,f
 17790     1F66  2F63               	goto	u2645
 17791     1F67                     l3337:
 17792     1F67  0820               	movf	___wmul@multiplier,w
 17793     1F68  0421               	iorwf	___wmul@multiplier+1,w
 17794     1F69  1D03               	btfss	3,2
 17795     1F6A  2F6C               	goto	u2651
 17796     1F6B  2F6D               	goto	u2650
 17797     1F6C                     u2651:
 17798     1F6C  2F55               	goto	l3331
 17799     1F6D                     u2650:
 17800     1F6D                     l3339:
 17801     1F6D  0825               	movf	___wmul@product+1,w
 17802     1F6E  00A1               	movwf	?___wmul+1
 17803     1F6F  0824               	movf	___wmul@product,w
 17804     1F70  00A0               	movwf	?___wmul
 17805     1F71                     l994:
 17806     1F71  0008               	return
 17807     1F72                     __end_of___wmul:
 17808                           
 17809                           	psect	text48
 17810     110E                     __ptext48:	
 17811 ;; *************** function ___lwmod *****************
 17812 ;; Defined at:
 17813 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/lwmod.c"
 17814 ;; Parameters:    Size  Location     Type
 17815 ;;  divisor         2    8[BANK0 ] unsigned int 
 17816 ;;  dividend        2   10[BANK0 ] unsigned int 
 17817 ;; Auto vars:     Size  Location     Type
 17818 ;;  counter         1   13[BANK0 ] unsigned char 
 17819 ;; Return value:  Size  Location     Type
 17820 ;;                  2    8[BANK0 ] unsigned int 
 17821 ;; Registers used:
 17822 ;;		wreg, status,2, status,0
 17823 ;; Tracked objects:
 17824 ;;		On entry : 0/0
 17825 ;;		On exit  : 0/0
 17826 ;;		Unchanged: 0/0
 17827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17828 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17832 ;;Total ram usage:        6 bytes
 17833 ;; Hardware stack levels used: 1
 17834 ;; Hardware stack levels required when called: 2
 17835 ;; This function calls:
 17836 ;;		Nothing
 17837 ;; This function is called by:
 17838 ;;		_printf
 17839 ;; This function uses a non-reentrant model
 17840 ;;
 17841                           
 17842     110E                     ___lwmod:	
 17843                           ;psect for function ___lwmod
 17844                           
 17845     110E                     l3383:	
 17846                           ;incstack = 0
 17847                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 17848                           
 17849     110E  0140               	movlb	0	; select bank0
 17850     110F  0828               	movf	___lwmod@divisor,w
 17851     1110  0429               	iorwf	___lwmod@divisor+1,w
 17852     1111  1903               	btfsc	3,2
 17853     1112  2914               	goto	u2751
 17854     1113  2915               	goto	u2750
 17855     1114                     u2751:
 17856     1114  293E               	goto	l3401
 17857     1115                     u2750:
 17858     1115                     l3385:
 17859     1115  01AD               	clrf	___lwmod@counter
 17860     1116  0AAD               	incf	___lwmod@counter,f
 17861     1117  2921               	goto	l3391
 17862     1118                     l3387:
 17863     1118  3001               	movlw	1
 17864     1119                     u2765:
 17865     1119  35A8               	lslf	___lwmod@divisor,f
 17866     111A  0DA9               	rlf	___lwmod@divisor+1,f
 17867     111B  0B89               	decfsz	9,f
 17868     111C  2919               	goto	u2765
 17869     111D                     l3389:
 17870     111D  3001               	movlw	1
 17871     111E  00AC               	movwf	??___lwmod
 17872     111F  082C               	movf	??___lwmod,w
 17873     1120  07AD               	addwf	___lwmod@counter,f
 17874     1121                     l3391:
 17875     1121  1FA9               	btfss	___lwmod@divisor+1,7
 17876     1122  2924               	goto	u2771
 17877     1123  2925               	goto	u2770
 17878     1124                     u2771:
 17879     1124  2918               	goto	l3387
 17880     1125                     u2770:
 17881     1125                     l3393:
 17882     1125  0829               	movf	___lwmod@divisor+1,w
 17883     1126  022B               	subwf	___lwmod@dividend+1,w
 17884     1127  1D03               	skipz
 17885     1128  292B               	goto	u2785
 17886     1129  0828               	movf	___lwmod@divisor,w
 17887     112A  022A               	subwf	___lwmod@dividend,w
 17888     112B                     u2785:
 17889     112B  1C03               	skipc
 17890     112C  292E               	goto	u2781
 17891     112D  292F               	goto	u2780
 17892     112E                     u2781:
 17893     112E  2933               	goto	l3397
 17894     112F                     u2780:
 17895     112F                     l3395:
 17896     112F  0828               	movf	___lwmod@divisor,w
 17897     1130  02AA               	subwf	___lwmod@dividend,f
 17898     1131  0829               	movf	___lwmod@divisor+1,w
 17899     1132  3BAB               	subwfb	___lwmod@dividend+1,f
 17900     1133                     l3397:
 17901     1133  3001               	movlw	1
 17902     1134                     u2795:
 17903     1134  36A9               	lsrf	___lwmod@divisor+1,f
 17904     1135  0CA8               	rrf	___lwmod@divisor,f
 17905     1136  0B89               	decfsz	9,f
 17906     1137  2934               	goto	u2795
 17907     1138                     l3399:
 17908     1138  3001               	movlw	1
 17909     1139  02AD               	subwf	___lwmod@counter,f
 17910     113A  1D03               	btfss	3,2
 17911     113B  293D               	goto	u2801
 17912     113C  293E               	goto	u2800
 17913     113D                     u2801:
 17914     113D  2925               	goto	l3393
 17915     113E                     u2800:
 17916     113E                     l3401:
 17917     113E  082B               	movf	___lwmod@dividend+1,w
 17918     113F  00A9               	movwf	?___lwmod+1
 17919     1140  082A               	movf	___lwmod@dividend,w
 17920     1141  00A8               	movwf	?___lwmod
 17921     1142                     l1274:
 17922     1142  0008               	return
 17923     1143                     __end_of___lwmod:
 17924                           
 17925                           	psect	text49
 17926     1143                     __ptext49:	
 17927 ;; *************** function ___lwdiv *****************
 17928 ;; Defined at:
 17929 ;;		line 5 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/lwdiv.c"
 17930 ;; Parameters:    Size  Location     Type
 17931 ;;  divisor         2    0[BANK0 ] unsigned int 
 17932 ;;  dividend        2    2[BANK0 ] unsigned int 
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;  quotient        2    5[BANK0 ] unsigned int 
 17935 ;;  counter         1    7[BANK0 ] unsigned char 
 17936 ;; Return value:  Size  Location     Type
 17937 ;;                  2    0[BANK0 ] unsigned int 
 17938 ;; Registers used:
 17939 ;;		wreg, status,2, status,0
 17940 ;; Tracked objects:
 17941 ;;		On entry : 0/0
 17942 ;;		On exit  : 0/0
 17943 ;;		Unchanged: 0/0
 17944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17945 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17946 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17947 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17948 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17949 ;;Total ram usage:        8 bytes
 17950 ;; Hardware stack levels used: 1
 17951 ;; Hardware stack levels required when called: 2
 17952 ;; This function calls:
 17953 ;;		Nothing
 17954 ;; This function is called by:
 17955 ;;		_printf
 17956 ;; This function uses a non-reentrant model
 17957 ;;
 17958                           
 17959     1143                     ___lwdiv:	
 17960                           ;psect for function ___lwdiv
 17961                           
 17962     1143                     l3357:	
 17963                           ;incstack = 0
 17964                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 17965                           
 17966     1143  0140               	movlb	0	; select bank0
 17967     1144  01A5               	clrf	___lwdiv@quotient
 17968     1145  01A6               	clrf	___lwdiv@quotient+1
 17969     1146                     l3359:
 17970     1146  0820               	movf	___lwdiv@divisor,w
 17971     1147  0421               	iorwf	___lwdiv@divisor+1,w
 17972     1148  1903               	btfsc	3,2
 17973     1149  294B               	goto	u2681
 17974     114A  294C               	goto	u2680
 17975     114B                     u2681:
 17976     114B  297B               	goto	l3379
 17977     114C                     u2680:
 17978     114C                     l3361:
 17979     114C  01A7               	clrf	___lwdiv@counter
 17980     114D  0AA7               	incf	___lwdiv@counter,f
 17981     114E  2958               	goto	l3367
 17982     114F                     l3363:
 17983     114F  3001               	movlw	1
 17984     1150                     u2695:
 17985     1150  35A0               	lslf	___lwdiv@divisor,f
 17986     1151  0DA1               	rlf	___lwdiv@divisor+1,f
 17987     1152  0B89               	decfsz	9,f
 17988     1153  2950               	goto	u2695
 17989     1154                     l3365:
 17990     1154  3001               	movlw	1
 17991     1155  00A4               	movwf	??___lwdiv
 17992     1156  0824               	movf	??___lwdiv,w
 17993     1157  07A7               	addwf	___lwdiv@counter,f
 17994     1158                     l3367:
 17995     1158  1FA1               	btfss	___lwdiv@divisor+1,7
 17996     1159  295B               	goto	u2701
 17997     115A  295C               	goto	u2700
 17998     115B                     u2701:
 17999     115B  294F               	goto	l3363
 18000     115C                     u2700:
 18001     115C                     l3369:
 18002     115C  3001               	movlw	1
 18003     115D                     u2715:
 18004     115D  35A5               	lslf	___lwdiv@quotient,f
 18005     115E  0DA6               	rlf	___lwdiv@quotient+1,f
 18006     115F  0B89               	decfsz	9,f
 18007     1160  295D               	goto	u2715
 18008     1161  0821               	movf	___lwdiv@divisor+1,w
 18009     1162  0223               	subwf	___lwdiv@dividend+1,w
 18010     1163  1D03               	skipz
 18011     1164  2967               	goto	u2725
 18012     1165  0820               	movf	___lwdiv@divisor,w
 18013     1166  0222               	subwf	___lwdiv@dividend,w
 18014     1167                     u2725:
 18015     1167  1C03               	skipc
 18016     1168  296A               	goto	u2721
 18017     1169  296B               	goto	u2720
 18018     116A                     u2721:
 18019     116A  2970               	goto	l3375
 18020     116B                     u2720:
 18021     116B                     l3371:
 18022     116B  0820               	movf	___lwdiv@divisor,w
 18023     116C  02A2               	subwf	___lwdiv@dividend,f
 18024     116D  0821               	movf	___lwdiv@divisor+1,w
 18025     116E  3BA3               	subwfb	___lwdiv@dividend+1,f
 18026     116F                     l3373:
 18027     116F  1425               	bsf	___lwdiv@quotient,0
 18028     1170                     l3375:
 18029     1170  3001               	movlw	1
 18030     1171                     u2735:
 18031     1171  36A1               	lsrf	___lwdiv@divisor+1,f
 18032     1172  0CA0               	rrf	___lwdiv@divisor,f
 18033     1173  0B89               	decfsz	9,f
 18034     1174  2971               	goto	u2735
 18035     1175                     l3377:
 18036     1175  3001               	movlw	1
 18037     1176  02A7               	subwf	___lwdiv@counter,f
 18038     1177  1D03               	btfss	3,2
 18039     1178  297A               	goto	u2741
 18040     1179  297B               	goto	u2740
 18041     117A                     u2741:
 18042     117A  295C               	goto	l3369
 18043     117B                     u2740:
 18044     117B                     l3379:
 18045     117B  0826               	movf	___lwdiv@quotient+1,w
 18046     117C  00A1               	movwf	?___lwdiv+1
 18047     117D  0825               	movf	___lwdiv@quotient,w
 18048     117E  00A0               	movwf	?___lwdiv
 18049     117F                     l1264:
 18050     117F  0008               	return
 18051     1180                     __end_of___lwdiv:
 18052                           
 18053                           	psect	text50
 18054     1001                     __ptext50:	
 18055 ;; *************** function ___bmul *****************
 18056 ;; Defined at:
 18057 ;;		line 4 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/Umul8.c"
 18058 ;; Parameters:    Size  Location     Type
 18059 ;;  multiplier      1    wreg     unsigned char 
 18060 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;  multiplier      1    3[BANK0 ] unsigned char 
 18063 ;;  product         1    2[BANK0 ] unsigned char 
 18064 ;; Return value:  Size  Location     Type
 18065 ;;                  1    wreg      unsigned char 
 18066 ;; Registers used:
 18067 ;;		wreg, status,2, status,0
 18068 ;; Tracked objects:
 18069 ;;		On entry : 0/0
 18070 ;;		On exit  : 0/0
 18071 ;;		Unchanged: 0/0
 18072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18073 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18076 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18077 ;;Total ram usage:        4 bytes
 18078 ;; Hardware stack levels used: 1
 18079 ;; Hardware stack levels required when called: 2
 18080 ;; This function calls:
 18081 ;;		Nothing
 18082 ;; This function is called by:
 18083 ;;		_printf
 18084 ;; This function uses a non-reentrant model
 18085 ;;
 18086                           
 18087     1001                     ___bmul:	
 18088                           ;psect for function ___bmul
 18089                           
 18090                           
 18091                           ;incstack = 0
 18092                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 18093                           ;___bmul@multiplier stored from wreg
 18094     1001  0140               	movlb	0	; select bank0
 18095     1002  00A3               	movwf	___bmul@multiplier
 18096     1003                     l3343:
 18097     1003  01A2               	clrf	___bmul@product
 18098     1004                     l3345:
 18099     1004  1C23               	btfss	___bmul@multiplier,0
 18100     1005  2807               	goto	u2661
 18101     1006  2808               	goto	u2660
 18102     1007                     u2661:
 18103     1007  280C               	goto	l3349
 18104     1008                     u2660:
 18105     1008                     l3347:
 18106     1008  0820               	movf	___bmul@multiplicand,w
 18107     1009  00A1               	movwf	??___bmul
 18108     100A  0821               	movf	??___bmul,w
 18109     100B  07A2               	addwf	___bmul@product,f
 18110     100C                     l3349:
 18111     100C  1003               	clrc
 18112     100D  0DA0               	rlf	___bmul@multiplicand,f
 18113     100E                     l3351:
 18114     100E  1003               	clrc
 18115     100F  0CA3               	rrf	___bmul@multiplier,f
 18116     1010  0823               	movf	___bmul@multiplier,w
 18117     1011  1D03               	btfss	3,2
 18118     1012  2814               	goto	u2671
 18119     1013  2815               	goto	u2670
 18120     1014                     u2671:
 18121     1014  2804               	goto	l3345
 18122     1015                     u2670:
 18123     1015                     l3353:
 18124     1015  0822               	movf	___bmul@product,w
 18125     1016                     l1018:
 18126     1016  0008               	return
 18127     1017                     __end_of___bmul:
 18128                           
 18129                           	psect	text51
 18130     1E64                     __ptext51:	
 18131 ;; *************** function _isprint *****************
 18132 ;; Defined at:
 18133 ;;		line 8 in file "/Applications/microchip/xc8/v2.40/pic/sources/c90/common/isprint.c"
 18134 ;; Parameters:    Size  Location     Type
 18135 ;;  c               1    wreg     unsigned char 
 18136 ;; Auto vars:     Size  Location     Type
 18137 ;;  c               1    1[BANK0 ] unsigned char 
 18138 ;; Return value:  Size  Location     Type
 18139 ;;		None               void
 18140 ;; Registers used:
 18141 ;;		wreg, status,2, status,0
 18142 ;; Tracked objects:
 18143 ;;		On entry : 0/0
 18144 ;;		On exit  : 0/0
 18145 ;;		Unchanged: 0/0
 18146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18148 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18150 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18151 ;;Total ram usage:        2 bytes
 18152 ;; Hardware stack levels used: 1
 18153 ;; Hardware stack levels required when called: 2
 18154 ;; This function calls:
 18155 ;;		Nothing
 18156 ;; This function is called by:
 18157 ;;		_dump_buffer
 18158 ;; This function uses a non-reentrant model
 18159 ;;
 18160                           
 18161     1E64                     _isprint:	
 18162                           ;psect for function _isprint
 18163                           
 18164                           
 18165                           ;incstack = 0
 18166                           ; Regs used in _isprint: [wreg+status,2+status,0]
 18167                           ;isprint@c stored from wreg
 18168     1E64  0140               	movlb	0	; select bank0
 18169     1E65  00A1               	movwf	isprint@c
 18170     1E66                     l3735:
 18171     1E66  01A0               	clrf	_isprint$1890
 18172     1E67                     l3737:
 18173     1E67  307F               	movlw	127
 18174     1E68  0221               	subwf	isprint@c,w
 18175     1E69  1803               	skipnc
 18176     1E6A  2E6C               	goto	u3471
 18177     1E6B  2E6D               	goto	u3470
 18178     1E6C                     u3471:
 18179     1E6C  2E75               	goto	l3743
 18180     1E6D                     u3470:
 18181     1E6D                     l3739:
 18182     1E6D  3020               	movlw	32
 18183     1E6E  0221               	subwf	isprint@c,w
 18184     1E6F  1C03               	skipc
 18185     1E70  2E72               	goto	u3481
 18186     1E71  2E73               	goto	u3480
 18187     1E72                     u3481:
 18188     1E72  2E75               	goto	l3743
 18189     1E73                     u3480:
 18190     1E73                     l3741:
 18191     1E73  01A0               	clrf	_isprint$1890
 18192     1E74  0AA0               	incf	_isprint$1890,f
 18193     1E75                     l3743:
 18194     1E75  0C20               	rrf	_isprint$1890,w
 18195     1E76                     l1450:
 18196     1E76  0008               	return
 18197     1E77                     __end_of_isprint:
 18198                           
 18199                           	psect	text52
 18200     123E                     __ptext52:	
 18201 ;; *************** function _dispatch *****************
 18202 ;; Defined at:
 18203 ;;		line 61 in file "monitor_sync.c"
 18204 ;; Parameters:    Size  Location     Type
 18205 ;;  state           1    wreg     PTR enum E10399
 18206 ;;		 -> main@state(1), 
 18207 ;;  b1              1    0[BANK0 ] PTR struct mybutton
 18208 ;;		 -> main@b1(27), 
 18209 ;;  b2              1    1[BANK0 ] PTR struct mybutton
 18210 ;;		 -> main@b2(27), 
 18211 ;;  b1_clicked_c    1    2[BANK0 ] PTR unsigned char 
 18212 ;;		 -> main@b1_clicked_count(1), 
 18213 ;;  b2_clicked_c    1    3[BANK0 ] PTR unsigned char 
 18214 ;;		 -> main@b2_clicked_count(1), 
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;  state           1    6[BANK0 ] PTR enum E10399
 18217 ;;		 -> main@state(1), 
 18218 ;;  b2_clicked_c    1    5[BANK0 ] unsigned char 
 18219 ;;  b1_clicked_c    1    4[BANK0 ] unsigned char 
 18220 ;; Return value:  Size  Location     Type
 18221 ;;                  1    wreg      void 
 18222 ;; Registers used:
 18223 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18224 ;; Tracked objects:
 18225 ;;		On entry : 0/0
 18226 ;;		On exit  : 0/0
 18227 ;;		Unchanged: 0/0
 18228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18230 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18232 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18233 ;;Total ram usage:        7 bytes
 18234 ;; Hardware stack levels used: 1
 18235 ;; Hardware stack levels required when called: 2
 18236 ;; This function calls:
 18237 ;;		Nothing
 18238 ;; This function is called by:
 18239 ;;		_main
 18240 ;; This function uses a non-reentrant model
 18241 ;;
 18242                           
 18243     123E                     _dispatch:	
 18244                           ;psect for function _dispatch
 18245                           
 18246                           
 18247                           ;incstack = 0
 18248                           ; Regs used in _dispatch: [wreg+fsr1l+fsr1h+status,2+status,0]
 18249                           ;dispatch@state stored from wreg
 18250     123E  0140               	movlb	0	; select bank0
 18251     123F  00A6               	movwf	dispatch@state
 18252     1240                     l4533:
 18253                           
 18254                           ;monitor_sync.c: 67: uint8_t b1_clicked_count = *b1_clicked_count_ptr;
 18255     1240  0822               	movf	dispatch@b1_clicked_count_ptr,w
 18256     1241  0086               	movwf	6
 18257     1242  3001               	movlw	1	; select bank2/3
 18258     1243  0087               	movwf	7
 18259     1244  0801               	movf	1,w
 18260     1245  00A4               	movwf	dispatch@b1_clicked_count
 18261                           
 18262                           ;monitor_sync.c: 68: uint8_t b2_clicked_count = *b2_clicked_count_ptr;
 18263     1246  0823               	movf	dispatch@b2_clicked_count_ptr,w
 18264     1247  0086               	movwf	6
 18265     1248  3001               	movlw	1	; select bank2/3
 18266     1249  0087               	movwf	7
 18267     124A  0801               	movf	1,w
 18268     124B  00A5               	movwf	dispatch@b2_clicked_count
 18269     124C                     l4535:
 18270                           
 18271                           ;monitor_sync.c: 76: if( 1 == b1_clicked_count && 0 == b2_clicked_count){
 18272     124C  0324               	decf	dispatch@b1_clicked_count,w
 18273     124D  1D03               	btfss	3,2
 18274     124E  2A50               	goto	u4761
 18275     124F  2A51               	goto	u4760
 18276     1250                     u4761:
 18277     1250  2A62               	goto	l4545
 18278     1251                     u4760:
 18279     1251                     l4537:
 18280     1251  0825               	movf	dispatch@b2_clicked_count,w
 18281     1252  1D03               	btfss	3,2
 18282     1253  2A55               	goto	u4771
 18283     1254  2A56               	goto	u4770
 18284     1255                     u4771:
 18285     1255  2A62               	goto	l4545
 18286     1256                     u4770:
 18287     1256                     l4539:
 18288                           
 18289                           ;monitor_sync.c: 77: *state = STATE_SAVE_TOP_CALIBRATION_POINT;
 18290     1256  0826               	movf	dispatch@state,w
 18291     1257  0086               	movwf	6
 18292     1258  3001               	movlw	1	; select bank2/3
 18293     1259  0087               	movwf	7
 18294     125A  3007               	movlw	7
 18295     125B  0081               	movwf	1
 18296     125C                     l4541:
 18297                           
 18298                           ;monitor_sync.c: 78: *b1_clicked_count_ptr = 0;
 18299     125C  0822               	movf	dispatch@b1_clicked_count_ptr,w
 18300     125D  0086               	movwf	6
 18301     125E  3001               	movlw	1	; select bank2/3
 18302     125F  0087               	movwf	7
 18303     1260  0181               	clrf	1
 18304     1261  2A7E               	goto	l555
 18305     1262                     l4545:
 18306                           
 18307                           ;monitor_sync.c: 80: };monitor_sync.c: 82: if( 0 == b1_clicked_count && 1 == b2_clicked_
      +                          count){
 18308     1262  0824               	movf	dispatch@b1_clicked_count,w
 18309     1263  1D03               	btfss	3,2
 18310     1264  2A66               	goto	u4781
 18311     1265  2A67               	goto	u4780
 18312     1266                     u4781:
 18313     1266  2A78               	goto	l4555
 18314     1267                     u4780:
 18315     1267                     l4547:
 18316     1267  0325               	decf	dispatch@b2_clicked_count,w
 18317     1268  1D03               	btfss	3,2
 18318     1269  2A6B               	goto	u4791
 18319     126A  2A6C               	goto	u4790
 18320     126B                     u4791:
 18321     126B  2A78               	goto	l4555
 18322     126C                     u4790:
 18323     126C                     l4549:
 18324                           
 18325                           ;monitor_sync.c: 83: *state = STATE_SAVE_BOTTOM_CALIBRATION_POINT;
 18326     126C  0826               	movf	dispatch@state,w
 18327     126D  0086               	movwf	6
 18328     126E  3001               	movlw	1	; select bank2/3
 18329     126F  0087               	movwf	7
 18330     1270  3008               	movlw	8
 18331     1271  0081               	movwf	1
 18332     1272                     l4551:
 18333                           
 18334                           ;monitor_sync.c: 84: *b2_clicked_count_ptr = 0;
 18335     1272  0823               	movf	dispatch@b2_clicked_count_ptr,w
 18336     1273  0086               	movwf	6
 18337     1274  3001               	movlw	1	; select bank2/3
 18338     1275  0087               	movwf	7
 18339     1276  0181               	clrf	1
 18340     1277  2A7E               	goto	l555
 18341     1278                     l4555:
 18342                           
 18343                           ;monitor_sync.c: 86: };monitor_sync.c: 87: *state = STATE_CALIBRATE;
 18344     1278  0826               	movf	dispatch@state,w
 18345     1279  0086               	movwf	6
 18346     127A  3001               	movlw	1	; select bank2/3
 18347     127B  0087               	movwf	7
 18348     127C  3004               	movlw	4
 18349     127D  0081               	movwf	1
 18350     127E                     l555:
 18351     127E  0008               	return
 18352     127F                     __end_of_dispatch:
 18353                           
 18354                           	psect	text53
 18355     12D2                     __ptext53:	
 18356 ;; *************** function _calculate_diff *****************
 18357 ;; Defined at:
 18358 ;;		line 19 in file "myisr.c"
 18359 ;; Parameters:    Size  Location     Type
 18360 ;;  now             4    0[BANK0 ] unsigned long 
 18361 ;;  prev_ticks      4    4[BANK0 ] unsigned long 
 18362 ;; Auto vars:     Size  Location     Type
 18363 ;;  diff            4   16[BANK0 ] unsigned long 
 18364 ;; Return value:  Size  Location     Type
 18365 ;;                  4    0[BANK0 ] unsigned long 
 18366 ;; Registers used:
 18367 ;;		wreg, status,2, status,0
 18368 ;; Tracked objects:
 18369 ;;		On entry : 0/0
 18370 ;;		On exit  : 0/0
 18371 ;;		Unchanged: 0/0
 18372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18373 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18374 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18375 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18376 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18377 ;;Total ram usage:       20 bytes
 18378 ;; Hardware stack levels used: 1
 18379 ;; Hardware stack levels required when called: 2
 18380 ;; This function calls:
 18381 ;;		Nothing
 18382 ;; This function is called by:
 18383 ;;		_main
 18384 ;;		_is_time_ups
 18385 ;;		_delay_state
 18386 ;; This function uses a non-reentrant model
 18387 ;;
 18388                           
 18389     12D2                     _calculate_diff:	
 18390                           ;psect for function _calculate_diff
 18391                           
 18392     12D2                     l4337:	
 18393                           ;incstack = 0
 18394                           ; Regs used in _calculate_diff: [wreg+status,2+status,0]
 18395                           
 18396                           
 18397                           ;myisr.c: 20: uint32_t diff;;myisr.c: 21: if (now >= prev_ticks) {
 18398     12D2  0140               	movlb	0	; select bank0
 18399     12D3  0827               	movf	calculate_diff@prev_ticks+3,w
 18400     12D4  0223               	subwf	calculate_diff@now+3,w
 18401     12D5  1D03               	skipz
 18402     12D6  2AE1               	goto	u4625
 18403     12D7  0826               	movf	calculate_diff@prev_ticks+2,w
 18404     12D8  0222               	subwf	calculate_diff@now+2,w
 18405     12D9  1D03               	skipz
 18406     12DA  2AE1               	goto	u4625
 18407     12DB  0825               	movf	calculate_diff@prev_ticks+1,w
 18408     12DC  0221               	subwf	calculate_diff@now+1,w
 18409     12DD  1D03               	skipz
 18410     12DE  2AE1               	goto	u4625
 18411     12DF  0824               	movf	calculate_diff@prev_ticks,w
 18412     12E0  0220               	subwf	calculate_diff@now,w
 18413     12E1                     u4625:
 18414     12E1  1C03               	skipc
 18415     12E2  2AE4               	goto	u4621
 18416     12E3  2AE5               	goto	u4620
 18417     12E4                     u4621:
 18418     12E4  2AFA               	goto	l4341
 18419     12E5                     u4620:
 18420     12E5                     l4339:
 18421                           
 18422                           ;myisr.c: 22: diff = now - prev_ticks;
 18423     12E5  0824               	movf	calculate_diff@prev_ticks,w
 18424     12E6  0220               	subwf	calculate_diff@now,w
 18425     12E7  00A8               	movwf	??_calculate_diff
 18426     12E8  0825               	movf	calculate_diff@prev_ticks+1,w
 18427     12E9  3B21               	subwfb	calculate_diff@now+1,w
 18428     12EA  00A9               	movwf	??_calculate_diff+1
 18429     12EB  0826               	movf	calculate_diff@prev_ticks+2,w
 18430     12EC  3B22               	subwfb	calculate_diff@now+2,w
 18431     12ED  00AA               	movwf	??_calculate_diff+2
 18432     12EE  0827               	movf	calculate_diff@prev_ticks+3,w
 18433     12EF  3B23               	subwfb	calculate_diff@now+3,w
 18434     12F0  00AB               	movwf	??_calculate_diff+3
 18435     12F1  082B               	movf	??_calculate_diff+3,w
 18436     12F2  00B3               	movwf	calculate_diff@diff+3
 18437     12F3  082A               	movf	??_calculate_diff+2,w
 18438     12F4  00B2               	movwf	calculate_diff@diff+2
 18439     12F5  0829               	movf	??_calculate_diff+1,w
 18440     12F6  00B1               	movwf	calculate_diff@diff+1
 18441     12F7  0828               	movf	??_calculate_diff,w
 18442     12F8  00B0               	movwf	calculate_diff@diff
 18443                           
 18444                           ;myisr.c: 23: } else {
 18445     12F9  2B1E               	goto	l4343
 18446     12FA                     l4341:
 18447                           
 18448                           ;myisr.c: 25: diff = ((4294967295UL) - prev_ticks) + now + 1;
 18449     12FA  0820               	movf	calculate_diff@now,w
 18450     12FB  00A8               	movwf	??_calculate_diff
 18451     12FC  0821               	movf	calculate_diff@now+1,w
 18452     12FD  00A9               	movwf	??_calculate_diff+1
 18453     12FE  0822               	movf	calculate_diff@now+2,w
 18454     12FF  00AA               	movwf	??_calculate_diff+2
 18455     1300  0823               	movf	calculate_diff@now+3,w
 18456     1301  00AB               	movwf	??_calculate_diff+3
 18457     1302  0924               	comf	calculate_diff@prev_ticks,w
 18458     1303  00AC               	movwf	??_calculate_diff+4
 18459     1304  0925               	comf	calculate_diff@prev_ticks+1,w
 18460     1305  00AD               	movwf	??_calculate_diff+5
 18461     1306  0926               	comf	calculate_diff@prev_ticks+2,w
 18462     1307  00AE               	movwf	??_calculate_diff+6
 18463     1308  0927               	comf	calculate_diff@prev_ticks+3,w
 18464     1309  00AF               	movwf	??_calculate_diff+7
 18465     130A  082C               	movf	??_calculate_diff+4,w
 18466     130B  07A8               	addwf	??_calculate_diff,f
 18467     130C  082D               	movf	??_calculate_diff+5,w
 18468     130D  3DA9               	addwfc	??_calculate_diff+1,f
 18469     130E  082E               	movf	??_calculate_diff+6,w
 18470     130F  3DAA               	addwfc	??_calculate_diff+2,f
 18471     1310  082F               	movf	??_calculate_diff+7,w
 18472     1311  3DAB               	addwfc	??_calculate_diff+3,f
 18473     1312  3001               	movlw	1
 18474     1313  0728               	addwf	??_calculate_diff,w
 18475     1314  00B0               	movwf	calculate_diff@diff
 18476     1315  3000               	movlw	0
 18477     1316  3D29               	addwfc	??_calculate_diff+1,w
 18478     1317  00B1               	movwf	calculate_diff@diff+1
 18479     1318  3000               	movlw	0
 18480     1319  3D2A               	addwfc	??_calculate_diff+2,w
 18481     131A  00B2               	movwf	calculate_diff@diff+2
 18482     131B  3000               	movlw	0
 18483     131C  3D2B               	addwfc	??_calculate_diff+3,w
 18484     131D  00B3               	movwf	calculate_diff@diff+3
 18485     131E                     l4343:
 18486                           
 18487                           ;myisr.c: 26: };myisr.c: 27: return diff;
 18488     131E  0833               	movf	calculate_diff@diff+3,w
 18489     131F  00A3               	movwf	?_calculate_diff+3
 18490     1320  0832               	movf	calculate_diff@diff+2,w
 18491     1321  00A2               	movwf	?_calculate_diff+2
 18492     1322  0831               	movf	calculate_diff@diff+1,w
 18493     1323  00A1               	movwf	?_calculate_diff+1
 18494     1324  0830               	movf	calculate_diff@diff,w
 18495     1325  00A0               	movwf	?_calculate_diff
 18496     1326                     l329:
 18497     1326  0008               	return
 18498     1327                     __end_of_calculate_diff:
 18499                           
 18500                           	psect	text54
 18501     1DEE                     __ptext54:	
 18502 ;; *************** function _SYSTEM_Initialize *****************
 18503 ;; Defined at:
 18504 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18505 ;; Parameters:    Size  Location     Type
 18506 ;;		None
 18507 ;; Auto vars:     Size  Location     Type
 18508 ;;		None
 18509 ;; Return value:  Size  Location     Type
 18510 ;;                  1    wreg      void 
 18511 ;; Registers used:
 18512 ;;		wreg, status,2, status,0, pclath, cstack
 18513 ;; Tracked objects:
 18514 ;;		On entry : 0/0
 18515 ;;		On exit  : 0/0
 18516 ;;		Unchanged: 0/0
 18517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18522 ;;Total ram usage:        0 bytes
 18523 ;; Hardware stack levels used: 1
 18524 ;; Hardware stack levels required when called: 3
 18525 ;; This function calls:
 18526 ;;		_OSCILLATOR_Initialize
 18527 ;;		_PIN_MANAGER_Initialize
 18528 ;;		_PMD_Initialize
 18529 ;; This function is called by:
 18530 ;;		_main
 18531 ;; This function uses a non-reentrant model
 18532 ;;
 18533                           
 18534     1DEE                     _SYSTEM_Initialize:	
 18535                           ;psect for function _SYSTEM_Initialize
 18536                           
 18537     1DEE                     l4331:	
 18538                           ;incstack = 0
 18539                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18540                           
 18541                           
 18542                           ;mcc.c: 52: PMD_Initialize();
 18543     1DEE  319D  25E4  319D   	fcall	_PMD_Initialize
 18544     1DF1                     l4333:
 18545                           
 18546                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 18547     1DF1  319F  27D6  319D   	fcall	_PIN_MANAGER_Initialize
 18548     1DF4                     l4335:
 18549                           
 18550                           ;mcc.c: 54: OSCILLATOR_Initialize();
 18551     1DF4  319D  25B7  319D   	fcall	_OSCILLATOR_Initialize
 18552     1DF7                     l35:
 18553     1DF7  0008               	return
 18554     1DF8                     __end_of_SYSTEM_Initialize:
 18555                           
 18556                           	psect	text55
 18557     1DE4                     __ptext55:	
 18558 ;; *************** function _PMD_Initialize *****************
 18559 ;; Defined at:
 18560 ;;		line 71 in file "mcc_generated_files/mcc.c"
 18561 ;; Parameters:    Size  Location     Type
 18562 ;;		None
 18563 ;; Auto vars:     Size  Location     Type
 18564 ;;		None
 18565 ;; Return value:  Size  Location     Type
 18566 ;;                  1    wreg      void 
 18567 ;; Registers used:
 18568 ;;		status,2
 18569 ;; Tracked objects:
 18570 ;;		On entry : 0/0
 18571 ;;		On exit  : 0/0
 18572 ;;		Unchanged: 0/0
 18573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18578 ;;Total ram usage:        0 bytes
 18579 ;; Hardware stack levels used: 1
 18580 ;; Hardware stack levels required when called: 2
 18581 ;; This function calls:
 18582 ;;		Nothing
 18583 ;; This function is called by:
 18584 ;;		_SYSTEM_Initialize
 18585 ;; This function uses a non-reentrant model
 18586 ;;
 18587                           
 18588     1DE4                     _PMD_Initialize:	
 18589                           ;psect for function _PMD_Initialize
 18590                           
 18591     1DE4                     l3849:	
 18592                           ;incstack = 0
 18593                           ; Regs used in _PMD_Initialize: [status,2]
 18594                           
 18595                           
 18596                           ;mcc.c: 74: PMD0 = 0x00;
 18597     1DE4  014F               	movlb	15	; select bank15
 18598     1DE5  0196               	clrf	22	;volatile
 18599                           
 18600                           ;mcc.c: 76: PMD1 = 0x00;
 18601     1DE6  0197               	clrf	23	;volatile
 18602                           
 18603                           ;mcc.c: 78: PMD2 = 0x00;
 18604     1DE7  0198               	clrf	24	;volatile
 18605                           
 18606                           ;mcc.c: 80: PMD3 = 0x00;
 18607     1DE8  0199               	clrf	25	;volatile
 18608                           
 18609                           ;mcc.c: 82: PMD4 = 0x00;
 18610     1DE9  019A               	clrf	26	;volatile
 18611                           
 18612                           ;mcc.c: 84: PMD5 = 0x00;
 18613     1DEA  019B               	clrf	27	;volatile
 18614                           
 18615                           ;mcc.c: 86: PMD6 = 0x00;
 18616     1DEB  019C               	clrf	28	;volatile
 18617                           
 18618                           ;mcc.c: 88: PMD7 = 0x00;
 18619     1DEC  019D               	clrf	29	;volatile
 18620     1DED                     l41:
 18621     1DED  0008               	return
 18622     1DEE                     __end_of_PMD_Initialize:
 18623                           
 18624                           	psect	text56
 18625     1FD6                     __ptext56:	
 18626 ;; *************** function _PIN_MANAGER_Initialize *****************
 18627 ;; Defined at:
 18628 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 18629 ;; Parameters:    Size  Location     Type
 18630 ;;		None
 18631 ;; Auto vars:     Size  Location     Type
 18632 ;;		None
 18633 ;; Return value:  Size  Location     Type
 18634 ;;                  1    wreg      void 
 18635 ;; Registers used:
 18636 ;;		wreg, status,2
 18637 ;; Tracked objects:
 18638 ;;		On entry : 0/0
 18639 ;;		On exit  : 0/0
 18640 ;;		Unchanged: 0/0
 18641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18646 ;;Total ram usage:        0 bytes
 18647 ;; Hardware stack levels used: 1
 18648 ;; Hardware stack levels required when called: 2
 18649 ;; This function calls:
 18650 ;;		Nothing
 18651 ;; This function is called by:
 18652 ;;		_SYSTEM_Initialize
 18653 ;; This function uses a non-reentrant model
 18654 ;;
 18655                           
 18656     1FD6                     _PIN_MANAGER_Initialize:	
 18657                           ;psect for function _PIN_MANAGER_Initialize
 18658                           
 18659     1FD6                     l3851:	
 18660                           ;incstack = 0
 18661                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18662                           
 18663                           
 18664                           ;pin_manager.c: 60: LATA = 0x00;
 18665     1FD6  0140               	movlb	0	; select bank0
 18666     1FD7  0198               	clrf	24	;volatile
 18667                           
 18668                           ;pin_manager.c: 61: LATC = 0x00;
 18669     1FD8  019A               	clrf	26	;volatile
 18670     1FD9                     l3853:
 18671                           
 18672                           ;pin_manager.c: 66: TRISA = 0x3F;
 18673     1FD9  303F               	movlw	63
 18674     1FDA  0092               	movwf	18	;volatile
 18675     1FDB                     l3855:
 18676                           
 18677                           ;pin_manager.c: 67: TRISC = 0x13;
 18678     1FDB  3013               	movlw	19
 18679     1FDC  0094               	movwf	20	;volatile
 18680     1FDD                     l3857:
 18681                           
 18682                           ;pin_manager.c: 72: ANSELC = 0x2C;
 18683     1FDD  302C               	movlw	44
 18684     1FDE  017E               	movlb	62	; select bank62
 18685     1FDF  00CE               	movwf	78	;volatile
 18686     1FE0                     l3859:
 18687                           
 18688                           ;pin_manager.c: 73: ANSELA = 0x37;
 18689     1FE0  3037               	movlw	55
 18690     1FE1  00B8               	movwf	56	;volatile
 18691                           
 18692                           ;pin_manager.c: 78: WPUA = 0x00;
 18693     1FE2  01B9               	clrf	57	;volatile
 18694                           
 18695                           ;pin_manager.c: 79: WPUC = 0x00;
 18696     1FE3  01CF               	clrf	79	;volatile
 18697                           
 18698                           ;pin_manager.c: 84: ODCONA = 0x00;
 18699     1FE4  01BA               	clrf	58	;volatile
 18700                           
 18701                           ;pin_manager.c: 85: ODCONC = 0x00;
 18702     1FE5  01D0               	clrf	80	;volatile
 18703     1FE6                     l3861:
 18704                           
 18705                           ;pin_manager.c: 90: SLRCONA = 0x37;
 18706     1FE6  3037               	movlw	55
 18707     1FE7  00BB               	movwf	59	;volatile
 18708     1FE8                     l3863:
 18709                           
 18710                           ;pin_manager.c: 91: SLRCONC = 0x3F;
 18711     1FE8  303F               	movlw	63
 18712     1FE9  00D1               	movwf	81	;volatile
 18713     1FEA                     l3865:
 18714                           
 18715                           ;pin_manager.c: 96: INLVLA = 0x3F;
 18716     1FEA  303F               	movlw	63
 18717     1FEB  00BC               	movwf	60	;volatile
 18718     1FEC                     l3867:
 18719                           
 18720                           ;pin_manager.c: 97: INLVLC = 0x3F;
 18721     1FEC  303F               	movlw	63
 18722     1FED  00D2               	movwf	82	;volatile
 18723     1FEE                     l3869:
 18724                           
 18725                           ;pin_manager.c: 101: RC0PPS = 0x13;
 18726     1FEE  3013               	movlw	19
 18727     1FEF  00A0               	movwf	32	;volatile
 18728     1FF0                     l3871:
 18729                           
 18730                           ;pin_manager.c: 102: SSP1CLKPPS = 0x10;
 18731     1FF0  3010               	movlw	16
 18732     1FF1  017D               	movlb	61	; select bank61
 18733     1FF2  00C5               	movwf	69	;volatile
 18734     1FF3                     l3873:
 18735                           
 18736                           ;pin_manager.c: 103: RC3PPS = 0x0F;
 18737     1FF3  300F               	movlw	15
 18738     1FF4  017E               	movlb	62	; select bank62
 18739     1FF5  00A3               	movwf	35	;volatile
 18740     1FF6                     l3875:
 18741                           
 18742                           ;pin_manager.c: 104: RC1PPS = 0x14;
 18743     1FF6  3014               	movlw	20
 18744     1FF7  00A1               	movwf	33	;volatile
 18745     1FF8                     l3877:
 18746                           
 18747                           ;pin_manager.c: 105: RC5PPS = 0x0F;
 18748     1FF8  300F               	movlw	15
 18749     1FF9  00A5               	movwf	37	;volatile
 18750     1FFA                     l3879:
 18751                           
 18752                           ;pin_manager.c: 106: SSP1DATPPS = 0x11;
 18753     1FFA  3011               	movlw	17
 18754     1FFB  017D               	movlb	61	; select bank61
 18755     1FFC  00C6               	movwf	70	;volatile
 18756     1FFD                     l3881:
 18757                           
 18758                           ;pin_manager.c: 107: RX1DTPPS = 0x14;
 18759     1FFD  3014               	movlw	20
 18760     1FFE  00CB               	movwf	75	;volatile
 18761     1FFF                     l86:
 18762     1FFF  0008               	return
 18763     2000                     __end_of_PIN_MANAGER_Initialize:
 18764                           
 18765                           	psect	text57
 18766     1DB7                     __ptext57:	
 18767 ;; *************** function _OSCILLATOR_Initialize *****************
 18768 ;; Defined at:
 18769 ;;		line 57 in file "mcc_generated_files/mcc.c"
 18770 ;; Parameters:    Size  Location     Type
 18771 ;;		None
 18772 ;; Auto vars:     Size  Location     Type
 18773 ;;		None
 18774 ;; Return value:  Size  Location     Type
 18775 ;;                  1    wreg      void 
 18776 ;; Registers used:
 18777 ;;		wreg, status,2
 18778 ;; Tracked objects:
 18779 ;;		On entry : 0/0
 18780 ;;		On exit  : 0/0
 18781 ;;		Unchanged: 0/0
 18782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18787 ;;Total ram usage:        0 bytes
 18788 ;; Hardware stack levels used: 1
 18789 ;; Hardware stack levels required when called: 2
 18790 ;; This function calls:
 18791 ;;		Nothing
 18792 ;; This function is called by:
 18793 ;;		_SYSTEM_Initialize
 18794 ;; This function uses a non-reentrant model
 18795 ;;
 18796                           
 18797     1DB7                     _OSCILLATOR_Initialize:	
 18798                           ;psect for function _OSCILLATOR_Initialize
 18799                           
 18800     1DB7                     l3883:	
 18801                           ;incstack = 0
 18802                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18803                           
 18804                           
 18805                           ;mcc.c: 60: OSCCON1 = 0x62;
 18806     1DB7  3062               	movlw	98
 18807     1DB8  0151               	movlb	17	; select bank17
 18808     1DB9  008D               	movwf	13	;volatile
 18809     1DBA                     l3885:
 18810                           
 18811                           ;mcc.c: 62: OSCCON3 = 0x00;
 18812     1DBA  018F               	clrf	15	;volatile
 18813     1DBB                     l3887:
 18814                           
 18815                           ;mcc.c: 64: OSCEN = 0x00;
 18816     1DBB  0191               	clrf	17	;volatile
 18817                           
 18818                           ;mcc.c: 66: OSCFRQ = 0x02;
 18819     1DBC  3002               	movlw	2
 18820     1DBD  0093               	movwf	19	;volatile
 18821     1DBE                     l3889:
 18822                           
 18823                           ;mcc.c: 68: OSCTUNE = 0x00;
 18824     1DBE  0192               	clrf	18	;volatile
 18825     1DBF                     l38:
 18826     1DBF  0008               	return
 18827     1DC0                     __end_of_OSCILLATOR_Initialize:
 18828                           
 18829                           	psect	text58
 18830     0002                     __ptext58:	
 18831 ;; *************** function _Enable_Global_Interrupt *****************
 18832 ;; Defined at:
 18833 ;;		line 31 in file "myisr.c"
 18834 ;; Parameters:    Size  Location     Type
 18835 ;;		None
 18836 ;; Auto vars:     Size  Location     Type
 18837 ;;		None
 18838 ;; Return value:  Size  Location     Type
 18839 ;;                  1    wreg      void 
 18840 ;; Registers used:
 18841 ;;		None
 18842 ;; Tracked objects:
 18843 ;;		On entry : 0/0
 18844 ;;		On exit  : 0/0
 18845 ;;		Unchanged: 0/0
 18846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18851 ;;Total ram usage:        0 bytes
 18852 ;; Hardware stack levels used: 1
 18853 ;; Hardware stack levels required when called: 2
 18854 ;; This function calls:
 18855 ;;		Nothing
 18856 ;; This function is called by:
 18857 ;;		_main
 18858 ;; This function uses a non-reentrant model
 18859 ;;
 18860                           
 18861     0002                     _Enable_Global_Interrupt:	
 18862                           ;psect for function _Enable_Global_Interrupt
 18863                           
 18864     0002                     l4619:	
 18865                           ;incstack = 0
 18866                           ; Regs used in _Enable_Global_Interrupt: []
 18867                           
 18868                           
 18869                           ;myisr.c: 32: GIE=0;
 18870     0002  138B               	bcf	11,7	;volatile
 18871     0003                     l332:
 18872     0003  0008               	return
 18873     0004                     __end_of_Enable_Global_Interrupt:
 18874                           
 18875                           	psect	text59
 18876     1D9B                     __ptext59:	
 18877 ;; *************** function _Disable_Global_Interrupt *****************
 18878 ;; Defined at:
 18879 ;;		line 34 in file "myisr.c"
 18880 ;; Parameters:    Size  Location     Type
 18881 ;;		None
 18882 ;; Auto vars:     Size  Location     Type
 18883 ;;		None
 18884 ;; Return value:  Size  Location     Type
 18885 ;;                  1    wreg      void 
 18886 ;; Registers used:
 18887 ;;		None
 18888 ;; Tracked objects:
 18889 ;;		On entry : 0/0
 18890 ;;		On exit  : 0/0
 18891 ;;		Unchanged: 0/0
 18892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18897 ;;Total ram usage:        0 bytes
 18898 ;; Hardware stack levels used: 1
 18899 ;; Hardware stack levels required when called: 2
 18900 ;; This function calls:
 18901 ;;		Nothing
 18902 ;; This function is called by:
 18903 ;;		_main
 18904 ;; This function uses a non-reentrant model
 18905 ;;
 18906                           
 18907     1D9B                     _Disable_Global_Interrupt:	
 18908                           ;psect for function _Disable_Global_Interrupt
 18909                           
 18910     1D9B                     l4621:	
 18911                           ;incstack = 0
 18912                           ; Regs used in _Disable_Global_Interrupt: []
 18913                           
 18914                           
 18915                           ;myisr.c: 35: GIE=1;
 18916     1D9B  178B               	bsf	11,7	;volatile
 18917     1D9C                     l335:
 18918     1D9C  0008               	return
 18919     1D9D                     __end_of_Disable_Global_Interrupt:
 18920                           
 18921                           	psect	intentry
 18922     0004                     __pintentry:	
 18923 ;; *************** function _INTERRUPT_InterruptManager *****************
 18924 ;; Defined at:
 18925 ;;		line 63 in file "uart.c"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;		None
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;		None
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  1    wreg      void 
 18932 ;; Registers used:
 18933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18943 ;;Total ram usage:        4 bytes
 18944 ;; Hardware stack levels used: 1
 18945 ;; Hardware stack levels required when called: 1
 18946 ;; This function calls:
 18947 ;;		_i2c_slave_interrupt
 18948 ;;		i1_get_ticks
 18949 ;; This function is called by:
 18950 ;;		Interrupt level 1
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954     0004                     _INTERRUPT_InterruptManager:
 18955                           
 18956                           ;incstack = 0
 18957     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 18958                           
 18959                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18960     0005  3180               	pagesel	$
 18961     0006                     i1l4935:
 18962                           
 18963                           ;uart.c: 68: if (PIR0bits.TMR0IF) {
 18964     0006  014E               	movlb	14	; select bank14
 18965     0007  1E8C               	btfss	12,5	;volatile
 18966     0008  280A               	goto	u505_21
 18967     0009  280B               	goto	u505_20
 18968     000A                     u505_21:
 18969     000A  283B               	goto	i1l4949
 18970     000B                     u505_20:
 18971     000B                     i1l4937:
 18972                           
 18973                           ;uart.c: 69: PIR0bits.TMR0IF = 0;
 18974     000B  128C               	bcf	12,5	;volatile
 18975     000C                     i1l4939:
 18976                           
 18977                           ;uart.c: 70: ticks++;
 18978     000C  3001               	movlw	1
 18979     000D  07F8               	addwf	_ticks,f	;volatile
 18980     000E  3000               	movlw	0
 18981     000F  3DF9               	addwfc	_ticks+1,f	;volatile
 18982     0010  3000               	movlw	0
 18983     0011  3DFA               	addwfc	_ticks+2,f	;volatile
 18984     0012  3000               	movlw	0
 18985     0013  3DFB               	addwfc	_ticks+3,f	;volatile
 18986     0014                     i1l4941:
 18987                           
 18988                           ;uart.c: 73: if((uart_rx_states == BUSY) &&;uart.c: 74: (ticks - uart_rx_ticks > 100)) {
 18989     0014  0140               	movlb	0	; select bank0
 18990     0015  036F               	decf	_uart_rx_states,w	;volatile
 18991     0016  1D03               	btfss	3,2
 18992     0017  2819               	goto	u506_21
 18993     0018  281A               	goto	u506_20
 18994     0019                     u506_21:
 18995     0019  283B               	goto	i1l4949
 18996     001A                     u506_20:
 18997     001A                     i1l4943:
 18998     001A  0141               	movlb	1	; select bank1
 18999     001B  0854               	movf	_uart_rx_ticks^(0+128),w	;volatile
 19000     001C  0278               	subwf	_ticks,w	;volatile
 19001     001D  00F4               	movwf	??_INTERRUPT_InterruptManager
 19002     001E  0855               	movf	(_uart_rx_ticks+1)^(0+128),w	;volatile
 19003     001F  3B79               	subwfb	_ticks+1,w	;volatile
 19004     0020  00F5               	movwf	??_INTERRUPT_InterruptManager+1
 19005     0021  0856               	movf	(_uart_rx_ticks+2)^(0+128),w	;volatile
 19006     0022  3B7A               	subwfb	_ticks+2,w	;volatile
 19007     0023  00F6               	movwf	??_INTERRUPT_InterruptManager+2
 19008     0024  0857               	movf	(_uart_rx_ticks+3)^(0+128),w	;volatile
 19009     0025  3B7B               	subwfb	_ticks+3,w	;volatile
 19010     0026  00F7               	movwf	??_INTERRUPT_InterruptManager+3
 19011     0027  0877               	movf	??_INTERRUPT_InterruptManager+3,w
 19012     0028  1D03               	btfss	3,2
 19013     0029  2836               	goto	u507_20
 19014     002A  0876               	movf	??_INTERRUPT_InterruptManager+2,w
 19015     002B  1D03               	btfss	3,2
 19016     002C  2836               	goto	u507_20
 19017     002D  0875               	movf	??_INTERRUPT_InterruptManager+1,w
 19018     002E  1D03               	btfss	3,2
 19019     002F  2836               	goto	u507_20
 19020     0030  3065               	movlw	101
 19021     0031  0274               	subwf	??_INTERRUPT_InterruptManager,w
 19022     0032  1C03               	btfss	3,0
 19023     0033  2835               	goto	u507_21
 19024     0034  2836               	goto	u507_20
 19025     0035                     u507_21:
 19026     0035  283B               	goto	i1l4949
 19027     0036                     u507_20:
 19028     0036                     i1l4945:
 19029                           
 19030                           ;uart.c: 75: uart_rx_states = IDLE;
 19031     0036  0140               	movlb	0	; select bank0
 19032     0037  01EF               	clrf	_uart_rx_states	;volatile
 19033     0038                     i1l4947:
 19034                           
 19035                           ;uart.c: 76: uart_rx_package_event = 1;
 19036     0038  3001               	movlw	1
 19037     0039  0142               	movlb	2	; select bank2
 19038     003A  00EF               	movwf	_uart_rx_package_event^(0+256)	;volatile
 19039     003B                     i1l4949:
 19040                           
 19041                           ;uart.c: 79: };uart.c: 82: if (PIR3bits.SSP1IF) {
 19042     003B  014E               	movlb	14	; select bank14
 19043     003C  1C0F               	btfss	15,0	;volatile
 19044     003D  283F               	goto	u508_21
 19045     003E  2840               	goto	u508_20
 19046     003F                     u508_21:
 19047     003F  2844               	goto	i1l4955
 19048     0040                     u508_20:
 19049     0040                     i1l4951:
 19050                           
 19051                           ;uart.c: 83: PIR3bits.SSP1IF = 0;
 19052     0040  100F               	bcf	15,0	;volatile
 19053     0041                     i1l4953:
 19054                           
 19055                           ;uart.c: 84: i2c_slave_interrupt();
 19056     0041  3192  227F  3180   	fcall	_i2c_slave_interrupt
 19057     0044                     i1l4955:
 19058                           
 19059                           ;uart.c: 85: };uart.c: 91: if (PIR3bits.RC1IF){
 19060     0044  014E               	movlb	14	; select bank14
 19061     0045  1E8F               	btfss	15,5	;volatile
 19062     0046  2848               	goto	u509_21
 19063     0047  2849               	goto	u509_20
 19064     0048                     u509_21:
 19065     0048  2867               	goto	i1l505
 19066     0049                     u509_20:
 19067     0049                     i1l4957:
 19068                           
 19069                           ;uart.c: 93: uart_rx_ticks = get_ticks();
 19070     0049  319D  25AE  3180   	fcall	i1_get_ticks
 19071     004C  0873               	movf	?i1_get_ticks+3,w
 19072     004D  0141               	movlb	1	; select bank1
 19073     004E  00D7               	movwf	(_uart_rx_ticks+3)^(0+128)	;volatile
 19074     004F  0872               	movf	?i1_get_ticks+2,w
 19075     0050  00D6               	movwf	(_uart_rx_ticks+2)^(0+128)	;volatile
 19076     0051  0871               	movf	?i1_get_ticks+1,w
 19077     0052  00D5               	movwf	(_uart_rx_ticks+1)^(0+128)	;volatile
 19078     0053  0870               	movf	?i1_get_ticks,w
 19079     0054  00D4               	movwf	_uart_rx_ticks^(0+128)	;volatile
 19080     0055                     i1l4959:
 19081                           
 19082                           ;uart.c: 94: uart_rx_states = BUSY;
 19083     0055  3001               	movlw	1
 19084     0056  0140               	movlb	0	; select bank0
 19085     0057  00EF               	movwf	_uart_rx_states	;volatile
 19086     0058                     i1l4961:
 19087                           
 19088                           ;uart.c: 95: rxbuffer[rxbuffer_index] = RC1REG;
 19089     0058  087D               	movf	_rxbuffer_index,w
 19090     0059  3EA0               	addlw	(low (_rxbuffer| (0+256)))& (0+255)
 19091     005A  0086               	movwf	6
 19092     005B  3001               	movlw	1	; select bank3/4
 19093     005C  0087               	movwf	7
 19094     005D  0142               	movlb	2	; select bank2
 19095     005E  0819               	movf	25,w	;volatile
 19096     005F  0081               	movwf	1
 19097     0060                     i1l4963:
 19098                           
 19099                           ;uart.c: 96: rxbuffer_index++;
 19100     0060  3001               	movlw	1
 19101     0061  00F4               	movwf	??_INTERRUPT_InterruptManager
 19102     0062  0874               	movf	??_INTERRUPT_InterruptManager,w
 19103     0063  07FD               	addwf	_rxbuffer_index,f	;volatile
 19104     0064                     i1l4965:
 19105                           
 19106                           ;uart.c: 97: rxbuffer_index = rxbuffer_index % 32;
 19107     0064  087D               	movf	_rxbuffer_index,w	;volatile
 19108     0065  391F               	andlw	31
 19109     0066  00FD               	movwf	_rxbuffer_index	;volatile
 19110     0067                     i1l505:
 19111     0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 19112     0068  0009               	retfie
 19113     0069                     __end_of_INTERRUPT_InterruptManager:
 19114                           
 19115                           	psect	text61
 19116     1DAE                     __ptext61:	
 19117 ;; *************** function i1_get_ticks *****************
 19118 ;; Defined at:
 19119 ;;		line 8 in file "myisr.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;		None
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;		None
 19124 ;; Return value:  Size  Location     Type
 19125 ;;                  4    0[COMMON] unsigned long 
 19126 ;; Registers used:
 19127 ;;		wreg
 19128 ;; Tracked objects:
 19129 ;;		On entry : 0/0
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19136 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19137 ;;Total ram usage:        4 bytes
 19138 ;; Hardware stack levels used: 1
 19139 ;; This function calls:
 19140 ;;		Nothing
 19141 ;; This function is called by:
 19142 ;;		_INTERRUPT_InterruptManager
 19143 ;; This function uses a non-reentrant model
 19144 ;;
 19145                           
 19146     1DAE                     i1_get_ticks:	
 19147                           ;psect for function i1_get_ticks
 19148                           
 19149     1DAE                     i1l4683:	
 19150                           ;incstack = 0
 19151                           ; Regs used in i1_get_ticks: [wreg]
 19152                           
 19153                           
 19154                           ;myisr.c: 9: return ticks;
 19155     1DAE  087B               	movf	_ticks+3,w	;volatile
 19156     1DAF  00F3               	movwf	?i1_get_ticks+3
 19157     1DB0  087A               	movf	_ticks+2,w	;volatile
 19158     1DB1  00F2               	movwf	?i1_get_ticks+2
 19159     1DB2  0879               	movf	_ticks+1,w	;volatile
 19160     1DB3  00F1               	movwf	?i1_get_ticks+1
 19161     1DB4  0878               	movf	_ticks,w	;volatile
 19162     1DB5  00F0               	movwf	?i1_get_ticks
 19163     1DB6                     i1l321:
 19164     1DB6  0008               	return
 19165     1DB7                     __end_ofi1_get_ticks:
 19166                           
 19167                           	psect	text62
 19168     127F                     __ptext62:	
 19169 ;; *************** function _i2c_slave_interrupt *****************
 19170 ;; Defined at:
 19171 ;;		line 65 in file "i2c_slave.c"
 19172 ;; Parameters:    Size  Location     Type
 19173 ;;		None
 19174 ;; Auto vars:     Size  Location     Type
 19175 ;;  value           1    3[COMMON] unsigned char 
 19176 ;;  isNack          1    2[COMMON] char 
 19177 ;;  isRead          1    1[COMMON] unsigned char 
 19178 ;; Return value:  Size  Location     Type
 19179 ;;                  1    wreg      void 
 19180 ;; Registers used:
 19181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19182 ;; Tracked objects:
 19183 ;;		On entry : 0/0
 19184 ;;		On exit  : 0/0
 19185 ;;		Unchanged: 0/0
 19186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19188 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19191 ;;Total ram usage:        4 bytes
 19192 ;; Hardware stack levels used: 1
 19193 ;; This function calls:
 19194 ;;		Nothing
 19195 ;; This function is called by:
 19196 ;;		_INTERRUPT_InterruptManager
 19197 ;; This function uses a non-reentrant model
 19198 ;;
 19199                           
 19200     127F                     _i2c_slave_interrupt:	
 19201                           ;psect for function _i2c_slave_interrupt
 19202                           
 19203     127F                     i1l4645:	
 19204                           ;incstack = 0
 19205                           ; Regs used in _i2c_slave_interrupt: [wreg-fsr1h+status,2+status,0]
 19206                           
 19207                           
 19208                           ;i2c_slave.c: 68: uint8_t isRead = SSP1STATbits.R_nW;
 19209     127F  3000               	movlw	0
 19210     1280  0143               	movlb	3	; select bank3
 19211     1281  190F               	btfsc	15,2	;volatile
 19212     1282  3001               	movlw	1
 19213     1283  00F1               	movwf	i2c_slave_interrupt@isRead
 19214                           
 19215                           ;i2c_slave.c: 69: int8_t isNack = SSP1CON2bits.ACKSTAT;
 19216     1284  3000               	movlw	0
 19217     1285  1B11               	btfsc	17,6	;volatile
 19218     1286  3001               	movlw	1
 19219     1287  00F2               	movwf	i2c_slave_interrupt@isNack
 19220     1288                     i1l4647:
 19221                           
 19222                           ;i2c_slave.c: 72: if (isNack) {
 19223     1288  0872               	movf	i2c_slave_interrupt@isNack,w
 19224     1289  1903               	btfsc	3,2
 19225     128A  2A8C               	goto	u491_21
 19226     128B  2A8D               	goto	u491_20
 19227     128C                     u491_21:
 19228     128C  2A90               	goto	i1l4653
 19229     128D                     u491_20:
 19230     128D                     i1l4649:
 19231                           
 19232                           ;i2c_slave.c: 73: currentState = 0;
 19233     128D  0141               	movlb	1	; select bank1
 19234     128E  01D8               	clrf	_currentState^(0+128)
 19235     128F  2AD1               	goto	i1l265
 19236     1290                     i1l4653:
 19237                           
 19238                           ;i2c_slave.c: 75: };i2c_slave.c: 78: if (isRead) {
 19239     1290  0871               	movf	i2c_slave_interrupt@isRead,w
 19240     1291  1903               	btfsc	3,2
 19241     1292  2A94               	goto	u492_21
 19242     1293  2A95               	goto	u492_20
 19243     1294                     u492_21:
 19244     1294  2AA8               	goto	i1l4663
 19245     1295                     u492_20:
 19246     1295                     i1l4655:
 19247                           
 19248                           ;i2c_slave.c: 80: SSP1BUF = slaveData[currentRegister];
 19249     1295  087C               	movf	_currentRegister,w
 19250     1296  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 19251     1297  0086               	movwf	6
 19252     1298  3002               	movlw	2	; select bank4/5
 19253     1299  0087               	movwf	7
 19254     129A  0801               	movf	1,w
 19255     129B  008C               	movwf	12	;volatile
 19256     129C                     i1l4657:
 19257                           
 19258                           ;i2c_slave.c: 82: currentRegister++;
 19259     129C  3001               	movlw	1
 19260     129D  00F0               	movwf	??_i2c_slave_interrupt
 19261     129E  0870               	movf	??_i2c_slave_interrupt,w
 19262     129F  07FC               	addwf	_currentRegister,f
 19263     12A0                     i1l4659:
 19264                           
 19265                           ;i2c_slave.c: 84: if (currentRegister >= 64u) {
 19266     12A0  3040               	movlw	64
 19267     12A1  027C               	subwf	_currentRegister,w
 19268     12A2  1C03               	skipc
 19269     12A3  2AA5               	goto	u493_21
 19270     12A4  2AA6               	goto	u493_20
 19271     12A5                     u493_21:
 19272     12A5  2ACF               	goto	i1l268
 19273     12A6                     u493_20:
 19274     12A6                     i1l4661:
 19275                           
 19276                           ;i2c_slave.c: 85: currentRegister = 0;
 19277     12A6  01FC               	clrf	_currentRegister
 19278     12A7  2ACF               	goto	i1l268
 19279     12A8                     i1l4663:
 19280                           
 19281                           ;i2c_slave.c: 90: uint8_t value = SSP1BUF;
 19282     12A8  080C               	movf	12,w	;volatile
 19283     12A9  00F3               	movwf	i2c_slave_interrupt@value
 19284                           
 19285                           ;i2c_slave.c: 92: switch (currentState) {
 19286     12AA  2AC3               	goto	i1l4677
 19287     12AB                     i1l270:	
 19288                           ;i2c_slave.c: 94: case 0:
 19289                           
 19290                           
 19291                           ;i2c_slave.c: 95: currentState = 1;
 19292     12AB  01D8               	clrf	_currentState^(0+128)
 19293     12AC  0AD8               	incf	_currentState^(0+128),f
 19294                           
 19295                           ;i2c_slave.c: 96: break;
 19296     12AD  2ACF               	goto	i1l268
 19297     12AE                     i1l4665:
 19298                           
 19299                           ;i2c_slave.c: 99: currentRegister = value % 64u;
 19300     12AE  0873               	movf	i2c_slave_interrupt@value,w
 19301     12AF  393F               	andlw	63
 19302     12B0  00FC               	movwf	_currentRegister
 19303     12B1                     i1l4667:
 19304                           
 19305                           ;i2c_slave.c: 100: currentState = 2;
 19306     12B1  3002               	movlw	2
 19307     12B2  00D8               	movwf	_currentState^(0+128)
 19308                           
 19309                           ;i2c_slave.c: 101: break;
 19310     12B3  2ACF               	goto	i1l268
 19311     12B4                     i1l4669:
 19312                           
 19313                           ;i2c_slave.c: 105: if (currentRegister < 57) {
 19314     12B4  3039               	movlw	57
 19315     12B5  027C               	subwf	_currentRegister,w
 19316     12B6  1803               	skipnc
 19317     12B7  2AB9               	goto	u494_21
 19318     12B8  2ABA               	goto	u494_20
 19319     12B9                     u494_21:
 19320     12B9  2AC1               	goto	i1l4673
 19321     12BA                     u494_20:
 19322     12BA                     i1l4671:
 19323                           
 19324                           ;i2c_slave.c: 106: slaveData[currentRegister] = value;
 19325     12BA  087C               	movf	_currentRegister,w
 19326     12BB  3E20               	addlw	(low (_slaveData| (0+512)))& (0+255)
 19327     12BC  0086               	movwf	6
 19328     12BD  3002               	movlw	2	; select bank4/5
 19329     12BE  0087               	movwf	7
 19330     12BF  0873               	movf	i2c_slave_interrupt@value,w
 19331     12C0  0081               	movwf	1
 19332     12C1                     i1l4673:
 19333                           
 19334                           ;i2c_slave.c: 107: };i2c_slave.c: 108: currentState = 0;
 19335     12C1  01D8               	clrf	_currentState^(0+128)
 19336                           
 19337                           ;i2c_slave.c: 109: break;
 19338     12C2  2ACF               	goto	i1l268
 19339     12C3                     i1l4677:
 19340     12C3  0141               	movlb	1	; select bank1
 19341     12C4  0858               	movf	_currentState^(0+128),w
 19342                           
 19343                           ; Switch size 1, requested type "simple"
 19344                           ; Number of cases is 3, Range of values is 0 to 2
 19345                           ; switch strategies available:
 19346                           ; Name         Instructions Cycles
 19347                           ; simple_byte           10     6 (average)
 19348                           ; direct_byte           12     6 (fixed)
 19349                           ; jumptable            260     6 (fixed)
 19350                           ;	Chosen strategy is simple_byte
 19351     12C5  3A00               	xorlw	0	; case 0
 19352     12C6  1903               	skipnz
 19353     12C7  2AAB               	goto	i1l270
 19354     12C8  3A01               	xorlw	1	; case 1
 19355     12C9  1903               	skipnz
 19356     12CA  2AAE               	goto	i1l4665
 19357     12CB  3A03               	xorlw	3	; case 2
 19358     12CC  1903               	skipnz
 19359     12CD  2AB4               	goto	i1l4669
 19360     12CE  2ACF               	goto	i1l268
 19361     12CF                     i1l268:
 19362                           
 19363                           ;i2c_slave.c: 114: };i2c_slave.c: 117: SSP1CON1bits.CKP = 1;
 19364     12CF  0143               	movlb	3	; select bank3
 19365     12D0  1610               	bsf	16,4	;volatile
 19366     12D1                     i1l265:
 19367     12D1  0008               	return
 19368     12D2                     __end_of_i2c_slave_interrupt:
 19369     007E                     btemp	set	126	;btemp
 19370     007E                     int$flags	set	126
 19371     007E                     wtemp0	set	126
 19372                           
 19373                           	psect	idloc
 19374                           
 19375                           ;Config register IDLOC0 @ 0x8000
 19376                           ;	unspecified, using default values
 19377     8000                     	org	32768
 19378     8000  3FFF               	dw	16383
 19379                           
 19380                           ;Config register IDLOC1 @ 0x8001
 19381                           ;	unspecified, using default values
 19382     8001                     	org	32769
 19383     8001  3FFF               	dw	16383
 19384                           
 19385                           ;Config register IDLOC2 @ 0x8002
 19386                           ;	unspecified, using default values
 19387     8002                     	org	32770
 19388     8002  3FFF               	dw	16383
 19389                           
 19390                           ;Config register IDLOC3 @ 0x8003
 19391                           ;	unspecified, using default values
 19392     8003                     	org	32771
 19393     8003  3FFF               	dw	16383
 19394                           
 19395                           	psect	config
 19396                           
 19397                           ;Config register CONFIG1 @ 0x8007
 19398                           ;	External Oscillator mode selection bits
 19399                           ;	FEXTOSC = OFF, Oscillator not enabled
 19400                           ;	Power-up default value for COSC bits
 19401                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 19402                           ;	Clock Out Enable bit
 19403                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 19404                           ;	Clock Switch Enable bit
 19405                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
 19406                           ;	Fail-Safe Clock Monitor Enable bit
 19407                           ;	FCMEN = OFF, FSCM timer disabled
 19408     8007                     	org	32775
 19409     8007  17EC               	dw	6124
 19410                           
 19411                           ;Config register CONFIG2 @ 0x8008
 19412                           ;	Master Clear Enable bit
 19413                           ;	MCLRE = OFF, MCLR pin function is port defined function
 19414                           ;	Power-up Timer Enable bit
 19415                           ;	PWRTS = OFF, PWRT disabled
 19416                           ;	Low-Power BOR enable bit
 19417                           ;	LPBOREN = OFF, ULPBOR disabled
 19418                           ;	Brown-out reset enable bits
 19419                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 19420                           ;	Brown-out Reset Voltage Selection
 19421                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
 19422                           ;	Zero-cross detect disable
 19423                           ;	ZCDDIS = OFF, Zero-cross detect circuit is disabled at POR.
 19424                           ;	Peripheral Pin Select one-way control
 19425                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 19426                           ;	Stack Overflow/Underflow Reset Enable bit
 19427                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 19428     8008                     	org	32776
 19429     8008  3FFE               	dw	16382
 19430                           
 19431                           ;Config register CONFIG3 @ 0x8009
 19432                           ;	WDT Period Select bits
 19433                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 19434                           ;	WDT operating mode
 19435                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 19436                           ;	WDT Window Select bits
 19437                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 19438                           ;	WDT input clock selector
 19439                           ;	WDTCCS = SC, Software Control
 19440     8009                     	org	32777
 19441     8009  3F9F               	dw	16287
 19442                           
 19443                           ;Config register CONFIG4 @ 0x800A
 19444                           ;	Boot Block Size Selection bits
 19445                           ;	BBSIZE = BB512, 512 words boot block size
 19446                           ;	Boot Block Enable bit
 19447                           ;	BBEN = OFF, Boot Block disabled
 19448                           ;	SAF Enable bit
 19449                           ;	SAFEN = OFF, SAF disabled
 19450                           ;	Application Block Write Protection bit
 19451                           ;	WRTAPP = OFF, Application Block not write protected
 19452                           ;	Boot Block Write Protection bit
 19453                           ;	WRTB = OFF, Boot Block not write protected
 19454                           ;	Configuration Register Write Protection bit
 19455                           ;	WRTC = OFF, Configuration Register not write protected
 19456                           ;	Data EEPROM write protection bit
 19457                           ;	WRTD = OFF, Data EEPROM NOT write protected
 19458                           ;	Storage Area Flash Write Protection bit
 19459                           ;	WRTSAF = OFF, SAF not write protected
 19460                           ;	Low Voltage Programming Enable bit
 19461                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 19462     800A                     	org	32778
 19463     800A  3FFF               	dw	16383
 19464                           
 19465                           ;Config register CONFIG5 @ 0x800B
 19466                           ;	UserNVM Program memory code protection bit
 19467                           ;	CP = ON, UserNVM code protection enabled
 19468     800B                     	org	32779
 19469     800B  3FFE               	dw	16382

Data Sizes:
    Strings     581
    Constant    30
    Data        168
    BSS         166
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     79      80
    BANK1            80     36      66
    BANK2            80     71      80
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0      32
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 4
		 -> get_measured_adc_value@payload(BANK0[4]), get_measured_value@payload_temp(BANK0[4]), get_measured_value@payload(BANK0[4]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 4
		 -> get_measured_adc_value@ph_adc_value(BANK0[2]), get_measured_value@temp(BANK0[4]), get_measured_value@ph(BANK0[4]), 

    dispatch@b2	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), 

    dispatch@b1	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK2[27]), 

    measurement@value	PTR struct values size(1) Largest target is 10
		 -> main@sensor_value(BANK2[10]), 

    measurement@state	PTR enum E10355 size(1) Largest target is 1
		 -> main@state(BANK2[1]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> set_device_serial_number_to_i2c_slave_memorymap@buffer(BANK0[3]), 

    printf$1604	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_34(CODE[17]), STR_33(CODE[17]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_32(CODE[7]), printf@c(BANK0[1]), ?_printf(BANK0[2]), slaveData(BANK4[64]), 
		 -> sensor_value.temp_value(COMMON[2]), sensor_value.ph_value(COMMON[2]), sensor_value.ph_adc_low_byte(COMMON[1]), sensor_value.ph_adc_high_byte(COMMON[1]), 
		 -> sensor_value.ph_adc_value(COMMON[2]), STR_3(CODE[11]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 88
		 -> STR_31(CODE[29]), STR_30(CODE[23]), STR_29(CODE[31]), STR_28(CODE[11]), 
		 -> STR_27(CODE[9]), STR_26(CODE[40]), STR_25(CODE[17]), STR_24(CODE[17]), 
		 -> STR_23(CODE[13]), STR_22(CODE[13]), STR_19(CODE[3]), STR_18(CODE[6]), 
		 -> STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[4]), 
		 -> STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[37]), STR_10(CODE[37]), 
		 -> STR_9(CODE[88]), STR_8(CODE[27]), STR_7(CODE[8]), STR_6(CODE[38]), 
		 -> STR_5(CODE[8]), STR_4(CODE[35]), STR_2(CODE[9]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    save_bottom_adc_point@states	PTR enum E186 size(1) Largest target is 1
		 -> main@state(BANK2[1]), 

    save_bottom_adc_point@sensor_value	PTR struct values size(1) Largest target is 10
		 -> main@sensor_value(BANK2[10]), 

    save_top_adc_point@states	PTR enum E186 size(1) Largest target is 1
		 -> main@state(BANK2[1]), 

    save_top_adc_point@sensor_value	PTR struct values size(1) Largest target is 10
		 -> main@sensor_value(BANK2[10]), 

    get_measured_adc_value@sensor_value	PTR struct values size(1) Largest target is 10
		 -> main@sensor_value(BANK2[10]), 

    calculate_crc_and_fill_array@data	PTR unsigned char  size(1) Largest target is 32
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[32]), save_top_adc_point@save_top_adc_command(BANK0[8]), 

    crc16_modbus@data	PTR unsigned char  size(1) Largest target is 32
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[32]), save_top_adc_point@save_top_adc_command(BANK0[8]), 

    get_measured_value@sensor_value	PTR struct values size(1) Largest target is 10
		 -> main@sensor_value(BANK2[10]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 8192
		 -> RAM(DATA[8192]), 

    dispatch@state	PTR enum E10399 size(1) Largest target is 1
		 -> main@state(BANK2[1]), 

    dispatch@b2_clicked_count_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@b2_clicked_count(BANK2[1]), 

    dispatch@b1_clicked_count_ptr	PTR unsigned char  size(1) Largest target is 1
		 -> main@b1_clicked_count(BANK2[1]), 

    monitoring_sync@state	PTR enum E10399 size(2) Largest target is 8192
		 -> RAM(DATA[8192]), main@state(BANK2[1]), 

    monitoring_sync@b2_clicked_count	PTR unsigned char  size(1) Largest target is 1
		 -> main@b2_clicked_count(BANK2[1]), 

    monitoring_sync@b2	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), 

    monitoring_sync@b1_clicked_count	PTR unsigned char  size(1) Largest target is 1
		 -> main@b1_clicked_count(BANK2[1]), 

    monitoring_sync@b1	PTR struct mybutton size(1) Largest target is 27
		 -> main@b1(BANK2[27]), 

    EUSART1_Write_1@txbuf	PTR unsigned char  size(1) Largest target is 32
		 -> save_bottom_adc_point@save_bottom_adc_command(BANK0[32]), save_top_adc_point@save_top_adc_command(BANK0[8]), measured_adc@measured_adc_command(BANK1[32]), set_bottom_calibrate_point@bottom_slop_point_command(BANK0[32]), 
		 -> set_top_calibrate_point@top_zero_point_command(BANK0[32]), send_measured_command@txbuf(BANK0[32]), 

    reset_long_press_flag@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    reset_single_click_flag@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    is_long_press@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    is_single_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    update_mybutton@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    __is_long_press@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    __is_double_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    __is_single_click@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    init_button@b	PTR struct mybutton size(1) Largest target is 27
		 -> main@b2(BANK2[27]), main@b1(BANK2[27]), 

    dump_buffer@buffer	PTR const void  size(1) Largest target is 64
		 -> slaveData(BANK4[64]), 

    dump_buffer@p	PTR const unsigned char  size(1) Largest target is 64
		 -> slaveData(BANK4[64]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_i2c_slave_interrupt
    _INTERRUPT_InterruptManager->i1_get_ticks

Critical Paths under _main in BANK0

    _main->_get_measured_value
    _update_mybutton->___is_single_click
    _set_device_serial_number_to_i2c_slave_memorymap->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _i2c_slave_set_register_with_lock->_i2c_slave_set_register
    _save_top_adc_point->_calculate_crc_and_fill_array
    _save_bottom_adc_point->_calculate_crc_and_fill_array
    _calculate_crc_and_fill_array->_crc16_modbus
    _monitoring_sync->_printf
    _measurement->_printf
    _send_measured_command->_EUSART1_Write_1
    _measured_adc->_printf
    _EUSART1_Write_1->_EUSART1_Write
    _get_measured_value->_printf
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _get_measured_adc_value->_printf
    _dump_memory_map->_dump_buffer
    _dump_buffer->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_measured_adc

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                75    75      0   62501
                                             32 BANK1      4     4      0
                                              0 BANK2     71    71      0
           _Disable_Global_Interrupt
            _Enable_Global_Interrupt
                  _SYSTEM_Initialize
                     _calculate_diff
                           _dispatch
                    _dump_memory_map
                 _enable_tx_transmit
                 _enable_uart_printf
             _get_measured_adc_value
                 _get_measured_value
                          _get_ticks
                _get_ticks_with_lock
                     _i2c_slave_init
             _i2c_slave_set_register
                        _init_button
                       _measured_adc
                        _measurement
                    _monitoring_sync
                             _printf
              _save_bottom_adc_point
                 _save_top_adc_point
_set_device_serial_number_to_i2c_sla
                          _tmr0_init
                    _update_mybutton
                         _usart_init
 ---------------------------------------------------------------------------------
 (1) _usart_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _update_mybutton                                     10     5      5    2378
                                             17 BANK0     10     5      5
                  ___is_double_click
                    ___is_long_press
                  ___is_single_click
                _get_ticks_with_lock (ARG)
 ---------------------------------------------------------------------------------
 (2) ___is_single_click                                   17    13      4     553
                                              0 BANK0     17    13      4
 ---------------------------------------------------------------------------------
 (2) ___is_long_press                                     15    11      4     419
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (2) ___is_double_click                                   16    12      4     486
                                              0 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (1) _tmr0_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_device_serial_number_to_i2c_slave_memorymap      7     7      0    2249
                                             27 BANK0      7     7      0
   _i2c_slave_set_register_with_lock
                             _strtol
 ---------------------------------------------------------------------------------
 (2) _strtol                                              15    11      4    1493
                                             12 BANK0     15    11      4
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (3) _toupper                                              2     2      0      67
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isspace                                              2     2      0      90
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isalpha                                              2     2      0     158
                                              2 BANK0      2     2      0
                            _isupper
 ---------------------------------------------------------------------------------
 (4) _isupper                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_slave_set_register_with_lock                     2     1      1     544
                                              2 BANK0      2     1      1
             _i2c_slave_set_register
 ---------------------------------------------------------------------------------
 (3) _i2c_slave_set_register                               2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _save_top_adc_point                                  11    10      1    1752
                                             19 BANK0     11    10      1
                    _EUSART1_Write_1
       _calculate_crc_and_fill_array
 ---------------------------------------------------------------------------------
 (1) _save_bottom_adc_point                               35    34      1    1752
                                             19 BANK0     35    34      1
                    _EUSART1_Write_1
       _calculate_crc_and_fill_array
 ---------------------------------------------------------------------------------
 (2) _calculate_crc_and_fill_array                         5     4      1     712
                                             14 BANK0      5     4      1
                       _crc16_modbus
 ---------------------------------------------------------------------------------
 (3) _crc16_modbus                                        14    12      2     317
                                              0 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 (1) _monitoring_sync                                      6     0      6    7955
                                             50 BANK0      6     0      6
            _LED_flashes_three_times
                      _is_long_press
                    _is_single_click
                             _printf
              _reset_long_press_flag
            _reset_single_click_flag
 ---------------------------------------------------------------------------------
 (2) _reset_single_click_flag                              1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _reset_long_press_flag                                1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _is_single_click                                      1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _is_long_press                                        1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_flashes_three_times                              3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _measurement                                          3     2      1    6958
                                             50 BANK0      3     2      1
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
              _send_measured_command
 ---------------------------------------------------------------------------------
 (2) _send_measured_command                               33    33      0     790
                                              5 BANK0     33    33      0
                    _EUSART1_Write_1
 ---------------------------------------------------------------------------------
 (1) _measured_adc                                        33    33      0    6832
                                             50 BANK0      1     1      0
                                              0 BANK1     32    32      0
                    _EUSART1_Write_1
                 _enable_tx_transmit
                 _enable_uart_printf
                             _printf
 ---------------------------------------------------------------------------------
 (2) _enable_uart_printf                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enable_tx_transmit                                   1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write_1                                      4     3      1     766
                                              1 BANK0      4     3      1
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_button                                          1     1      0     396
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _i2c_slave_init                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_ticks_with_lock                                  8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _get_ticks                                            4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _get_measured_value                                  29    29      0    9249
                                             50 BANK0     29    29      0
                            ___flmul
                            ___fltol
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             35 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                              9 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _get_measured_adc_value                              15    15      0    6231
                                             50 BANK0     15    15      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _dump_memory_map                                      0     0      0    6756
                        _dump_buffer
 ---------------------------------------------------------------------------------
 (2) _dump_buffer                                         14    12      2    6756
                                             50 BANK0     14    12      2
                            _isprint
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              40    28     12    6042
                                             14 BANK0     36    24     12
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                          _get_ticks (ARG)
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _isprint                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _dispatch                                             7     3      4     581
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _calculate_diff                                      20    12      8    1372
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Enable_Global_Interrupt                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Disable_Global_Interrupt                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           4     4      0      91
                                              4 COMMON     4     4      0
                _i2c_slave_interrupt
                        i1_get_ticks
 ---------------------------------------------------------------------------------
 (6) i1_get_ticks                                          4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _i2c_slave_interrupt                                  4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Disable_Global_Interrupt
   _Enable_Global_Interrupt
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _calculate_diff
   _dispatch
   _dump_memory_map
     _dump_buffer
       _isprint
       _printf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _get_ticks (ARG)
         _isdigit (ARG)
         _putch (ARG)
   _enable_tx_transmit
   _enable_uart_printf
   _get_measured_adc_value
     _printf
   _get_measured_value
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
     _printf
   _get_ticks
   _get_ticks_with_lock
   _i2c_slave_init
   _i2c_slave_set_register
   _init_button
   _measured_adc
     _EUSART1_Write_1
       _EUSART1_Write
     _enable_tx_transmit
     _enable_uart_printf
     _printf
   _measurement
     _enable_tx_transmit
     _enable_uart_printf
     _printf
     _send_measured_command
       _EUSART1_Write_1
   _monitoring_sync
     _LED_flashes_three_times
     _is_long_press
     _is_single_click
     _printf
     _reset_long_press_flag
     _reset_single_click_flag
   _printf
   _save_bottom_adc_point
     _EUSART1_Write_1
     _calculate_crc_and_fill_array
       _crc16_modbus
   _save_top_adc_point
     _EUSART1_Write_1
     _calculate_crc_and_fill_array
   _set_device_serial_number_to_i2c_slave_memorymap
     _i2c_slave_set_register_with_lock
       _i2c_slave_set_register
     _strtol
       ___lmul
       _isalpha
         _isupper
       _isdigit
       _isspace
       _toupper
   _tmr0_init
   _update_mybutton
     ___is_double_click
     ___is_long_press
     ___is_single_click
     _get_ticks_with_lock (ARG)
   _usart_init

 _INTERRUPT_InterruptManager (ROOT)
   _i2c_slave_interrupt
   i1_get_ticks

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     210       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     24      42       8       82.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     47      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      40      12       80.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      40      14       80.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      40      16       80.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      40      18       80.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      20      20       40.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     210      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Apr 21 12:52:45 2024

                                         ___bmul@product 0022  
                                                     l41 1DED  
                                                     l35 1DF7  
                                                     l38 1DBF  
                                                     l86 1FFF  
                              ??_Enable_Global_Interrupt 0020  
                                    ___wmul@multiplicand 0022  
                             __end_of_enable_tx_transmit 1E54  
                                    __Umul8_16@word_mpld 0026  
                                                    l321 1E0B  
                                                    l401 1DC8  
                                                    l314 164B  
                                                    l410 1DDA  
                                                    l332 0003  
                                                    l324 1EB0  
                                                    l404 1DE3  
                                                    l245 1F91  
                                                    l254 1E20  
                                                    l335 1D9C  
                                                    l344 101A  
                                                    l248 1E15  
                                                    l329 1326  
                                                    l514 1DA1  
                                                    l602 0815  
                                                    l347 1027  
                                                    l348 1042  
                                                    l372 09D3  
                                                    l605 06ED  
                                                    l517 1E53  
                                                    l293 1E45  
                                                    l470 1E23  
                                                    l278 1E01  
                                                    l366 1462  
                                                    l526 11BD  
                                                    l551 1584  
                                                    l384 08BD  
                                                    l392 171D  
                                                    l473 1E2C  
                          __end_of_send_measured_command 0816  
                                                    l378 17FF  
                                                    l555 127E  
                                                    l395 1DD1  
                                                    l387 1697  
                                                    l467 1E63  
                                                    l476 1E2F  
                                                    l652 1380  
                                                    l645 136E  
                                                    l902 0248  
                                                    l479 1E38  
                                                    l647 1344  
                                                    l655 1F32  
                                                    l488 1EF7  
                                                    l921 030F  
                                                    l593 1F33  
                                                    l674 1073  
                                                    l682 10D9  
                                                    l916 02E0  
                                                    l860 00EA  
                                                    l668 1043  
                                                    l925 033E  
                                                    l861 00EC  
                                                    l677 14DC  
                                                    l597 1F51  
                                                    l863 0100  
                                                    l687 10A6  
                                                    l961 04BC  
                                                    l945 044D  
                                                    l881 01BA  
                                                    l857 00E2  
                                                    l859 00E8  
                                                    l957 04FF  
                                                    l893 0206  
                                                    l885 01BC  
                                                    l886 01BD  
                                                    l983 0598  
                                                    l992 1F5D  
                                                    l994 1F71  
                                                    _GIE 005F  
                                                    l988 05CB  
                                                    mcp0 0623  
                                                    mcp1 06B2  
                                                    mcp2 14AA  
                                                    _tmp 00D9  
                                                    wreg 0009  
                                           ___flmul@aexp 003B  
                                           ___flmul@bexp 003C  
                            save_bottom_adc_point@states 0055  
                                           ___flmul@sign 0036  
                                           ___flmul@temp 0041  
                                           ___flmul@prod 003D  
                                           ___fltol@exp1 004C  
                                                   l1006 110D  
                                                   l1018 1016  
                                                   l1400 1FC5  
                                                   l1402 1FD5  
                                                   l1501 1E9C  
                                                   l1264 117F  
                                                   l1185 13DC  
                                                   l1505 1EC4  
                                                   l4001 17BD  
                                                   l1450 1E76  
                                                   l1274 1142  
                                                   l1178 13F1  
                                                   l4011 17E8  
                                                   l4003 17C2  
                                                   l1188 13F1  
                                                   l1445 1E89  
                                                   l1381 0C0E  
                                                   l4101 0752  
                                                   l1461 06F0  
                                                   l4013 17F2  
                                                   l4005 17CE  
                                                   l3311 1E28  
                                                   l4111 076C  
                                                   l4103 0757  
                                                   l4015 17FC  
                                                   l4007 17D6  
                                                   l4031 088C  
                                                   l4023 0818  
                                                   l3401 113E  
                                                   l3321 1E80  
                                                   l1393 0C02  
                                                   l4201 09E4  
                                                   l3313 1E2F  
                                                   l4121 078D  
                                                   l4113 0770  
                                                   l4105 075C  
                                                   l4009 17E2  
                                                   l4041 08BA  
                                                   l4033 0894  
                                                   l4025 0876  
                                                   l3331 1F55  
                                                   l3323 1E86  
                                                   l1387 0B8E  
                                                   l4211 0A00  
                                                   l4203 09E9  
                                                   l3315 1E34  
                                                   l3411 1E99  
                                                   l1491 1F14  
                                                   l4131 07CE  
                                                   l4115 0778  
                                                   l4107 0762  
                                                   l4019 17FE  
                                                   l4035 08A0  
                                                   l4027 087B  
                                                   l1484 07F7  
                                                   l3333 1F59  
                                                   l3325 1E88  
                                                   l3317 1E79  
                                                   l3309 1E23  
                                                   l3501 01D7  
                                                   l3421 00D8  
                                                   l4301 0B98  
                                                   l4221 0A11  
                                                   l4213 0A02  
                                                   l4205 09F1  
                                                   l4053 1DC2  
                                                   l3413 1E9B  
                                                   l3405 1E8C  
                                                   l4141 07EF  
                                                   l4133 07D4  
                                                   l4125 0799  
                                                   l4117 0781  
                                                   l4109 0766  
                                                   l4061 06F0  
                                                   l4045 08BC  
                                                   l4037 08A6  
                                                   l4029 0880  
                                                   l3351 100E  
                                                   l3343 1003  
                                                   l3335 1F62  
                                                   l3319 1E7A  
                                                   l3511 0211  
                                                   l3503 01DB  
                                                   l3423 00DD  
                                                   l4311 0BCD  
                                                   l4303 0BA0  
                                                   l4231 0A2D  
                                                   l4223 0A19  
                                                   l4215 0A06  
                                                   l4207 09F3  
                                                   l4151 1F22  
                                                   l3407 1E8D  
                                                   l4135 07DA  
                                                   l4127 07C4  
                                                   l4119 078A  
                                                   l4071 070D  
                                                   l4063 06F6  
                                                   l4039 08B0  
                                                   l1496 1EDD  
                                                   l3353 1015  
                                                   l3345 1004  
                                                   l3361 114C  
                                                   l3337 1F67  
                                                   l3329 1F52  
                                                   l3521 0221  
                                                   l3513 0216  
                                                   l3505 01E6  
                                                   l3441 0114  
                                                   l3425 00E3  
                                                   l3417 00CE  
                                                   l4321 0BFB  
                                                   l4313 0BD7  
                                                   l4305 0BA4  
                                                   l4241 0A66  
                                                   l4225 0A1B  
                                                   l4217 0A07  
                                                   l4209 09FB  
                                                   l4161 1394  
                                                   l4401 1421  
                                                   l4145 0800  
                                                   l4049 1DCB  
                                                   l4057 1DDD  
                                                   l4153 1F2A  
                                                   l3409 1E93  
                                                   l4137 07DF  
                                                   l4129 07C9  
                                                   l4073 0713  
                                                   l4065 06FA  
                                                   l4331 1DEE  
                                                   l3347 1008  
                                                   l3371 116B  
                                                   l3363 114F  
                                                   l3339 1F6D  
                                                   l3611 03A3  
                                                   l3603 036D  
                                                   l3531 024D  
                                                   l3523 022F  
                                                   l3515 0218  
                                                   l3507 01EB  
                                                   l3443 0117  
                                                   l3451 0148  
                                                   l3435 00EE  
                                                   l3419 00D2  
                                                   l4323 0BFF  
                                                   l4315 0BE5  
                                                   l4307 0BBC  
                                                   l4251 0AAC  
                                                   l4243 0A73  
                                                   l4235 0A36  
                                                   l4227 0A23  
                                                   l4219 0A0C  
                                                   l4171 13B4  
                                                   l4163 13A5  
                                                   l4155 1381  
                                                   l4411 1444  
                                                   l4403 142C  
                                                   l4147 080F  
                                                   l4059 1DD4  
                                                   l4091 0735  
                                                   l4075 0715  
                                                   l4067 0703  
                                                   l4333 1DF1  
                                                   l4341 12FA  
                                                   l3349 100C  
                                                   l3373 116F  
                                                   l3365 1154  
                                                   l3357 1143  
                                                   l3701 04FA  
                                                   l3621 03C1  
                                                   l3613 03A6  
                                                   l3605 037C  
                                                   l3541 026C  
                                                   l3533 0251  
                                                   l3525 0237  
                                                   l3509 01FE  
                                                   l3461 016D  
                                                   l3453 0153  
                                                   l3445 0128  
                                                   l3437 0104  
                                                   l4325 0C00  
                                                   l4317 0BEE  
                                                   l4309 0BC0  
                                                   l4261 0AE2  
                                                   l4253 0AB7  
                                                   l4245 0A8B  
                                                   l4237 0A41  
                                                   l4229 0A28  
                                                   l4165 13A6  
                                                   l4157 138B  
                                                   l4421 1E9D  
                                                   l4413 144A  
                                                   l4405 1432  
                                                   l4501 1579  
                                                   l4149 1F17  
                                                   l4093 073B  
                                                   l4085 0726  
                                                   l4077 071A  
                                                   l4069 070C  
                                                   l4335 1DF4  
                                                   l4343 131E  
                                                   l3375 1170  
                                                   l3367 1158  
                                                   l3359 1146  
                                                   l3391 1121  
                                                   l3383 110E  
                                                   l3711 054C  
                                                   l3703 0500  
                                                   l3631 03F7  
                                                   l3623 03D4  
                                                   l3615 03AD  
                                                   l3607 038C  
                                                   l3551 02AC  
                                                   l3543 0271  
                                                   l3535 025F  
                                                   l3519 021D  
                                                   l3527 023C  
                                                   l3471 0185  
                                                   l3463 016E  
                                                   l3455 015A  
                                                   l3447 0137  
                                                   l3439 0108  
                                                   l4327 0C06  
                                                   l4319 0BF0  
                                                   l4271 0B2D  
                                                   l4263 0AE9  
                                                   l4255 0ABE  
                                                   l4247 0A98  
                                                   l4239 0A4E  
                                                   l4191 09D4  
                                                   l4167 13AE  
                                                   l4423 1E9E  
                                                   l4415 1450  
                                                   l4407 1438  
                                                   l4511 1F40  
                                                   l4503 157E  
                                                   l4095 0742  
                                                   l4087 072C  
                                                   l4079 071F  
                                                   l4351 1E3F  
                                                   l4431 1658  
                                                   l4337 12D2  
                                                   l3377 1175  
                                                   l3369 115C  
                                                   l3393 1125  
                                                   l3385 1115  
                                                   l3713 0550  
                                                   l3705 0528  
                                                   l3721 058A  
                                                   l3641 0421  
                                                   l3633 03FC  
                                                   l3625 03DF  
                                                   l3617 03B9  
                                                   l3609 0390  
                                                   l3553 02B3  
                                                   l3561 02C5  
                                                   l3537 0264  
                                                   l3481 0195  
                                                   l3473 0189  
                                                   l3465 0172  
                                                   l3457 015E  
                                                   l3449 013B  
                                                   l3801 1FBD  
                                                   l4281 0B62  
                                                   l4273 0B44  
                                                   l4265 0AFB  
                                                   l4257 0AC9  
                                                   l4249 0AA5  
                                                   l4193 09D8  
                                                   l4185 13D3  
                                                   l4177 13BC  
                                                   l4169 13B0  
                                                   l4601 05CE  
                                                   l4425 1EA7  
                                                   l4417 1456  
                                                   l4409 143E  
                                                   l4521 1048  
                                                   l4513 1F49  
                                                   l4505 157E  
                                                   l4097 0748  
                                                   l4089 0731  
                                                   l4353 1E41  
                                                   l4441 16A9  
                                                   l4433 165E  
                                                   l4361 1E5C  
                                                   l4339 12E5  
                                                   l3379 117B  
                                                   l3395 112F  
                                                   l3387 1118  
                                                   l3715 055E  
                                                   l3707 0543  
                                                   l3723 058E  
                                                   l3651 0448  
                                                   l3643 042C  
                                                   l3635 040B  
                                                   l3627 03E2  
                                                   l3619 03BD  
                                                   l3571 02E2  
                                                   l3563 02CC  
                                                   l3555 02B7  
                                                   l3539 0268  
                                                   l3491 01BF  
                                                   l3483 019E  
                                                   l3547 0276  
                                                   l3475 018A  
                                                   l3467 017C  
                                                   l3459 0162  
                                                   l3731 05B8  
                                                   l3803 1FC1  
                                                   l4291 0B73  
                                                   l4283 0B63  
                                                   l4275 0B4B  
                                                   l4267 0B06  
                                                   l4259 0AD0  
                                                   l4195 09DA  
                                                   l4187 13E1  
                                                   l4179 13CC  
                                                   l4611 065C  
                                                   l4603 05D6  
                                                   l4371 1F74  
                                                   l4419 145C  
                                                   l4531 1071  
                                                   l4523 1050  
                                                   l4515 1F4C  
                                                   l4507 1F35  
                                                   l3811 1EC7  
                                                   l4099 074E  
                                                   l4355 1E42  
                                                   l4347 1E39  
                                                   l4451 1703  
                                                   l4443 16D0  
                                                   l4435 1667  
                                                   l4363 1E5D  
                                                   l4621 1D9B  
                                                   l4541 125C  
                                                   l4533 1240  
                                                   l3741 1E73  
                                                   l3397 1133  
                                                   l3389 111D  
                                                   l3725 059C  
                                                   l3709 0547  
                                                   l3661 046E  
                                                   l3653 0451  
                                                   l3645 0435  
                                                   l3637 0418  
                                                   l3629 03F1  
                                                   l3581 0311  
                                                   l3557 02BB  
                                                   l3565 02D0  
                                                   l3493 01C6  
                                                   l3549 02A0  
                                                   l3485 01A7  
                                                   l3477 018E  
                                                   l3469 0181  
                                                   l3805 1FCC  
                                                   l4293 0B77  
                                                   l4285 0B6A  
                                                   l4277 0B57  
                                                   l4269 0B18  
                                                   l4197 09DE  
                                                   l4189 13E6  
                                                   l4613 0665  
                                                   l4605 0611  
                                                   l4381 1F7E  
                                                   l4373 1F76  
                                                   l4525 1059  
                                                   l4517 1F4F  
                                                   l4509 1F38  
                                                   l4461 14FB  
                                                   l3733 1E0E  
                                                   l3901 1E19  
                                                   l3821 1EDC  
                                                   l3813 1EC9  
                                                   l4349 1E3E  
                                                   l4453 1715  
                                                   l4445 16E1  
                                                   l4437 1670  
                                                   l4429 164E  
                                                   l4365 1E5F  
                                                   l4357 1E54  
                                                   l4701 0C1F  
                                                   l4551 1272  
                                                   l4535 124C  
                                                   l3743 1E75  
                                                   l3735 1E66  
                                                   l3399 1138  
                                                   l3727 05A9  
                                                   l3719 057B  
                                                   l3671 0486  
                                                   l3663 0473  
                                                   l3655 0456  
                                                   l3647 0438  
                                                   l3639 041E  
                                                   l3591 0340  
                                                   l3575 02E9  
                                                   l3567 02D5  
                                                   l3559 02BF  
                                                   l3495 01CA  
                                                   l3487 01AB  
                                                   l3479 0193  
                                                   l3911 1597  
                                                   l3807 1FD1  
                                                   l4295 0B8B  
                                                   l4279 0B5E  
                                                   l4287 0B6E  
                                                   l4199 09DF  
                                                   l4615 06A0  
                                                   l4607 0624  
                                                   l4391 1F8B  
                                                   l4375 1F78  
                                                   l3751 1EEC  
                                                   l4527 105C  
                                                   l4519 1045  
                                                   l4471 1521  
                                                   l4463 14FE  
                                                   l4455 14DD  
                                                   l3903 1E1F  
                                                   l3831 1F08  
                                                   l3815 1ECF  
                                                   l4631 119E  
                                                   l4623 1180  
                                                   l4447 16E9  
                                                   l4439 16A0  
                                                   l4367 1E61  
                                                   l4359 1E57  
                                                   l4711 0C2B  
                                                   l4703 0C23  
                                                   l4537 1251  
                                                   l4545 1262  
                                                   l3737 1E67  
                                                   l3729 05AD  
                                                   l3681 04AB  
                                                   l3665 0477  
                                                   l3657 0465  
                                                   l3649 043C  
                                                   l3673 0492  
                                                   l3585 0318  
                                                   l3569 02DB  
                                                   l3497 01D0  
                                                   l3489 01B8  
                                                   l3921 15C3  
                                                   l3905 1587  
                                                   l4289 0B72  
                                                   l4617 06B3  
                                                   l4609 064D  
                                                   l4377 1F7A  
                                                   l4369 1F72  
                                                   l4393 13F4  
                                                   l3753 1EF1  
                                                   l4529 106B  
                                                   l4481 1547  
                                                   l4473 1524  
                                                   l4457 14E7  
                                                   l4465 1503  
                                                   l3761 1342  
                                                   l4561 10BE  
                                                   l3833 1F10  
                                                   l3825 1EFA  
                                                   l3817 1ED5  
                                                   l3841 1EB9  
                                                   l4633 119F  
                                                   l4449 16FB  
                                                   l4801 0E6B  
                                                   l4721 0C4C  
                                                   l4713 0C33  
                                                   l4705 0C26  
                                                   l4619 0002  
                                                   l3851 1FD6  
                                                   l4547 1267  
                                                   l4555 1278  
                                                   l4539 1256  
                                                   l3739 1E6D  
                                                   l3691 04D9  
                                                   l3683 04B7  
                                                   l3675 0498  
                                                   l3659 0469  
                                                   l3667 047B  
                                                   l3595 0347  
                                                   l3579 0304  
                                                   l3499 01D4  
                                                   l3923 15CA  
                                                   l3907 1589  
                                                   l4299 0B93  
                                                   l4387 1F81  
                                                   l4379 1F7C  
                                                   l4395 1400  
                                                   l3747 1EE0  
                                                   l4491 155C  
                                                   l4483 154A  
                                                   l4467 150D  
                                                   l4475 1529  
                                                   l4459 14EF  
                                                   l3771 1353  
                                                   l3755 1329  
                                                   l4571 1084  
                                                   l4563 10C5  
                                                   l3835 1F12  
                                                   l3827 1EFC  
                                                   l3819 1EDB  
                                                   l3843 1EBF  
                                                   l4635 11AB  
                                                   l4803 0E6F  
                                                   l4731 0C55  
                                                   l4723 0C4D  
                                                   l4715 0C3F  
                                                   l4707 0C27  
                                                   l3861 1FE6  
                                                   l3853 1FD9  
                                                   l4549 126C  
                                                   l3693 04E8  
                                                   l3685 04C0  
                                                   l3677 049C  
                                                   l3669 0482  
                                                   l3589 0333  
                                                   l3941 160A  
                                                   l3925 15CF  
                                                   l3917 159A  
                                                   l3909 158C  
                                                   l4581 1465  
                                                   l4389 1F87  
                                                   l4397 140B  
                                                   l3749 1EE2  
                                                   l4485 154D  
                                                   l4477 1533  
                                                   l4493 1561  
                                                   l4469 1515  
                                                   l3773 1358  
                                                   l3757 1331  
                                                   l4573 108B  
                                                   l4565 10CB  
                                                   l4557 10A9  
                                                   l3829 1F02  
                                                   l3845 1EC3  
                                                   l4637 11B2  
                                                   l4629 1182  
                                                   l4901 0FFA  
                                                   l4821 0EAA  
                                                   l4813 0E8D  
                                                   l4805 0E72  
                                                   l4733 0C68  
                                                   l4725 0C4F  
                                                   l4717 0C48  
                                                   l4709 0C28  
                                                   l3871 1FF0  
                                                   l3863 1FE8  
                                                   l3855 1FDB  
                                                   l3695 04EC  
                                                   l3687 04C4  
                                                   l3679 04A0  
                                                   l3599 0362  
                                                   l3951 163C  
                                                   l3943 161C  
                                                   l3935 15E2  
                                                   l3927 15D8  
                                                   l3919 15AA  
                                                   l4591 14AB  
                                                   l4583 1467  
                                                   l4399 1416  
                                                   l4495 156B  
                                                   l4487 1550  
                                                   l4479 153B  
                                                   l3775 135C  
                                                   l3767 1349  
                                                   l3759 1334  
                                                   l4575 1092  
                                                   l4567 10D2  
                                                   l4559 10B7  
                                                   l3791 10F6  
                                                   l3783 10DA  
                                                   l3839 1EB3  
                                                   l4639 11B7  
                                                   l4831 0EBA  
                                                   l4823 0EAD  
                                                   l4815 0E96  
                                                   l4807 0E7A  
                                                   l4751 0D20  
                                                   l4743 0CCE  
                                                   l4735 0C9A  
                                                   l4727 0C51  
                                                   l4719 0C4B  
                                                   l3881 1FFD  
                                                   l3873 1FF3  
                                                   l3865 1FEA  
                                                   l3857 1FDD  
                                                   l3849 1DE4  
                                                   l3697 04F1  
                                                   l3689 04D4  
                                                   l3937 15F2  
                                                   l3945 1627  
                                                   l3929 15DF  
                                                   l3953 1641  
                                                   l4593 14BC  
                                                   l4585 146F  
                                                   l3961 101C  
                                                   l4497 1573  
                                                   l4489 1555  
                                                   l3777 1369  
                                                   l3769 134E  
                                                   l4577 1098  
                                                   l4569 1076  
                                                   l3793 1105  
                                                   l3785 10E3  
                                                   l4841 0EFA  
                                                   l4833 0EBE  
                                                   l4825 0EB3  
                                                   l4817 0E99  
                                                   l4809 0E85  
                                                   l4761 0D7B  
                                                   l4753 0D29  
                                                   l4745 0CDF  
                                                   l4737 0CA3  
                                                   l4729 0C53  
                                                   l3883 1DB7  
                                                   l3875 1FF6  
                                                   l3867 1FEC  
                                                   l3859 1FE0  
                                                   l3699 04F6  
                                                   l3947 162C  
                                                   l3939 1604  
                                                   l4595 1DF8  
                                                   l4587 1478  
                                                   l3891 1D9D  
                                                   l3963 1025  
                                                   l3955 1017  
                                                   l4499 1576  
                                                   l3779 137B  
                                                   l4579 109F  
                                                   l3787 10E7  
                                                   l3971 098C  
                                                   l4851 0F13  
                                                   l4843 0F03  
                                                   l4835 0EC0  
                                                   l4827 0EB5  
                                                   l4819 0EA1  
                                                   l4771 0DCB  
                                                   l4763 0D8B  
                                                   l4747 0D10  
                                                   l4755 0D2C  
                                                   l4739 0CB8  
                                        ?_calculate_diff 0020  
                                                   l3885 1DBA  
                                                   l3877 1FF8  
                                                   l3869 1FEE  
                                                   l3949 1635  
                                                   l4589 1498  
                                                   l3797 1FB4  
                                                   l4597 1E02  
                                                   l3893 1D9F  
                                                   l3789 10EF  
                                                   l3981 09B6  
                                                   l3973 0991  
                                                   l3965 08C0  
                                                   l4861 0F2F  
                                                   l4853 0F1B  
                                                   l4837 0EC3  
                                                   l4829 0EB7  
                                                   l4781 0E16  
                                                   l4773 0DD4  
                                                   l4765 0D94  
                                                   l4757 0D5F  
                                                   l4749 0D19  
                                                   l3887 1DBB  
                                                   l3879 1FFA  
                                                   l3799 1FB6  
                                                   l3895 1E46  
                                                   l3991 09D2  
                                                   l3983 09BC  
                                                   l3975 0996  
                                                   l3967 0982  
                                                   l4871 0F48  
                                                   l4863 0F31  
                                                   l4855 0F24  
                                                   l4847 0F07  
                                                   l4839 0EC6  
                                                   l4791 0E40  
                                                   l4783 0E26  
                                                   l4775 0DD7  
                                                   l4767 0D98  
                                                   l4759 0D78  
                                                   l4695 0C0F  
                                                   l3889 1DBE  
                                                   l3897 1E52  
                                                   l3985 09C6  
                                                   l3977 09A2  
                                                   l3969 0987  
                                                   l4881 0F60  
                                                   l4873 0F50  
                                                   l4865 0F35  
                                                   l4857 0F27  
                                                   l4849 0F10  
                                                   l4793 0E4E  
                                                   l4785 0E29  
                                                   l4777 0DE0  
                                                   l4769 0D9A  
                                                   l4697 0C18  
                                                   l3899 1E18  
                                                   l3995 1720  
                                                   l3987 09D0  
                                                   l3979 09AA  
                                                   l4883 0F63  
                                                   l4875 0F58  
                                                   l4867 0F38  
                                                   l4859 0F2D  
                                                   l4795 0E51  
                                                   l4787 0E39  
                                                   l4779 0DE3  
                                                   l4699 0C1B  
                                                   l3997 17B3  
                                                   l4885 0F7B  
                                                   l4877 0F5B  
                                                   l4869 0F40  
                                                   l4797 0E59  
                                                   l4789 0E3C  
                                                   l4893 0F8B  
                                                   l3999 17B8  
                                                   l4887 0F84  
                                                   l4879 0F5D  
                                                   l4799 0E64  
                                                   l4895 0FA6  
                                                   l4897 0FB9  
                                                   l4889 0F87  
                                                   l4899 0FEA  
                                                   STR_1 1989  
                                                   STR_2 1A32  
                                                   STR_3 1A14  
                                                   STR_4 18F8  
                                                   STR_5 1A3B  
                                                   STR_6 1888  
                                                   STR_7 1A3B  
                                                   STR_8 1957  
                                                   STR_9 1808  
                                                   u3000 024C  
                                                   u3001 024B  
                                                   u3010 025E  
                                                   u3011 025D  
                                                   u3100 0332  
                                                   u3020 02AC  
                                                   u3101 0331  
                                                   u3021 02AB  
                                                   _LATA 0018  
                                                   u3110 033D  
                                                   u3030 02BB  
                                                   u3111 033C  
                                                   u3031 02BA  
                                                   _LATC 001A  
                                                   u3200 03D4  
                                                   u3120 0346  
                                                   u3040 02D5  
                                                   u4000 17F2  
                                                   u3201 03D3  
                                                   u3121 0345  
                                                   u3105 032E  
                                                   u3041 02D4  
                                                   u4001 17F1  
                                                   u3210 03F1  
                                                   u3130 0361  
                                                   u3050 02DB  
                                                   u4010 17FC  
                                                   u3211 03F0  
                                                   u3131 0360  
                                                   u3051 02DA  
                                                   u4011 17FB  
                                                   u3300 046E  
                                                   u3220 03F7  
                                                   u3140 036C  
                                                   u3060 02E8  
                                                   u4100 0703  
                                                   u4020 0845  
                                                   u3301 046D  
                                                   u3221 03F6  
                                                   u3205 03D0  
                                                   u3141 036B  
                                                   u3061 02E7  
                                                   u4101 0701  
                                                   u4021 0843  
                                                   u3310 0482  
                                                   u3230 040B  
                                                   u3150 038C  
                                                   u3070 0303  
                                                   u4110 0713  
                                                   u4030 0846  
                                                   u3311 0481  
                                                   u3231 040A  
                                                   u3151 038B  
                                                   u3135 035D  
                                                   u3071 0302  
                                                   u4111 0712  
                                                   u2600 1E80  
                                                   u3400 04F1  
                                                   u3320 0491  
                                                   u3240 0418  
                                                   u3160 03A3  
                                                   u3080 030E  
                                                   u4200 0778  
                                                   u4120 0725  
                                                   u4040 0873  
                                                   u5000 0EB3  
                                                   u2601 1E7F  
                                                   u3401 04F0  
                                                   u3321 0490  
                                                   u3241 0417  
                                                   u3161 03A2  
                                                   u3081 030D  
                                                   u4201 0777  
                                                   u4121 0724  
                                                   u4041 0871  
                                                   u4025 0840  
                                                   u5001 0EB2  
                                                   u2610 1E86  
                                                   u3410 0547  
                                                   u3330 0498  
                                                   u3250 042C  
                                                   u3170 03AD  
                                                   u3090 0317  
                                                   u4210 078A  
                                                   u4130 072C  
                                                   u4050 0874  
                                                   u5010 0F2D  
                                                   u2611 1E85  
                                                   u3411 0546  
                                                   u3331 0497  
                                                   u3251 042B  
                                                   u3171 03AC  
                                                   u3155 0388  
                                                   u3091 0316  
                                                   u3075 02FF  
                                                   u4211 0789  
                                                   u4131 072B  
                                                   u5011 0F2C  
                                                   u2700 115C  
                                                   u2620 1F59  
                                                   u3420 0598  
                                                   u3340 049C  
                                                   u3260 043C  
                                                   u3180 03B9  
                                                   u3500 1349  
                                                   u4220 0798  
                                                   u4140 073B  
                                                   u4060 087B  
                                                   u5020 0FEA  
                                                   u2701 115B  
                                                   u2621 1F58  
                                                   u3421 0597  
                                                   u3341 049B  
                                                   u3261 043B  
                                                   u3245 0414  
                                                   u3181 03B8  
                                                   u3165 039F  
                                                   u3501 1348  
                                                   u4221 0797  
                                                   u4141 073A  
                                                   u4061 087A  
                                                   u5021 0FE9  
                                                   u3430 059C  
                                                   u3350 04AB  
                                                   u3270 0448  
                                                   u3190 03C1  
                                                   u4310 13CB  
                                                   u4230 07D4  
                                                   u4150 0742  
                                                   u4070 0880  
                                                   u3431 059B  
                                                   u3351 04AA  
                                                   u3271 0447  
                                                   u3255 0428  
                                                   u3191 03C0  
                                                   u4311 13CA  
                                                   u4231 07D3  
                                                   u4151 0741  
                                                   u4071 087F  
                                                   u2720 116B  
                                                   u2800 113E  
                                                   u3440 05A9  
                                                   u3360 04B7  
                                                   u3280 0451  
                                                   u4400 0A0C  
                                                   u4320 13D2  
                                                   u4240 07DF  
                                                   u4160 0748  
                                                   u4080 08B0  
                                                   u2721 116A  
                                                   u2801 113D  
                                                   u3441 05A8  
                                                   u3361 04B6  
                                                   u3281 0450  
                                                   u4401 0A0B  
                                                   u4321 13D1  
                                                   u4305 13BD  
                                                   u4241 07DE  
                                                   u4225 0794  
                                                   u4161 0747  
                                                   u4081 08AF  
                                                   u2650 1F6D  
                                                   u3450 05B8  
                                                   u3370 04C0  
                                                   u3290 0465  
                                                   u3610 1FD1  
                                                   u4410 0A11  
                                                   u4250 080B  
                                                   u3530 1369  
                                                   u2810 1E93  
                                                   u4170 074E  
                                                   u4090 08BA  
                                                   u2715 115D  
                                                   u2651 1F6C  
                                                   u2635 1F5E  
                                                   u3451 05B7  
                                                   u3371 04BF  
                                                   u3291 0464  
                                                   u3611 1FD0  
                                                   u4411 0A10  
                                                   u3531 1368  
                                                   u3515 134A  
                                                   u2811 1E92  
                                                   u4171 074D  
                                                   u4091 08B9  
                                                   u2660 1008  
                                                   u2740 117B  
                                                   u2580 1E28  
                                                   u3460 05CB  
                                                   u3380 04D4  
                                                   u2900 0189  
                                                   u3700 15AA  
                                                   u4500 0B62  
                                                   u4420 0A28  
                                                   u4340 13E1  
                                                   u4260 138B  
                                                   u3540 137B  
                                                   u2820 1E99  
                                                   u3620 1ECF  
                                                   u4180 0762  
                                                   u2661 1007  
                                                   u2741 117A  
                                                   u2725 1167  
                                                   u2645 1F63  
                                                   u2581 1E27  
                                                   u3461 05CA  
                                                   u3445 05A5  
                                                   u3381 04D3  
                                                   u2901 0188  
                                                   u3701 15A9  
                                                   u3605 1FC6  
                                                   u4501 0B61  
                                                   u4421 0A27  
                                                   u4341 13E0  
                                                   u4261 138A  
                                                   u3541 137A  
                                                   u3525 1354  
                                                   u2821 1E98  
                                                   u3621 1ECE  
                                                   u4181 0761  
                                                   u3470 1E6D  
                                                   u2670 1015  
                                                   u2750 1115  
                                                   u3390 04E8  
                                                   u2910 01B7  
                                                   u2830 00D8  
                                                   u3710 15D8  
                                                   u4430 0A2D  
                                                   u4350 13E6  
                                                   u4270 13A1  
                                                   u2590 1E34  
                                                   u3550 10E7  
                                                   u3630 1ED5  
                                                   u4190 076C  
                                                   u3471 1E6C  
                                                   u2671 1014  
                                                   u2735 1171  
                                                   u2751 1114  
                                                   u3391 04E7  
                                                   u2911 01B6  
                                                   u2831 00D7  
                                                   u3711 15D7  
                                                   u4431 0A2C  
                                                   u4351 13E5  
                                                   u4335 13D4  
                                                   u2591 1E33  
                                                   u3535 1365  
                                                   u3551 10E6  
                                                   u3631 1ED4  
                                                   u4191 076B  
                                                   u5207 0EA5  
                                                   u3480 1E73  
                                                   u2680 114C  
                                                   u2920 01D0  
                                                   u2840 0104  
                                                   u3720 15F2  
                                                   u4600 0BE5  
                                                   u4520 0B72  
                                                   u4360 09DE  
                                                   u4280 13B4  
                                                   u3640 1EDB  
                                                   u3800 091D  
                                                   u3481 1E72  
                                                   u2681 114B  
                                                   u2921 01CF  
                                                   u2841 0103  
                                                   u3721 15F1  
                                                   u3705 15A6  
                                                   u4601 0BE4  
                                                   u4521 0B71  
                                                   u4361 09DD  
                                                   u4281 13B3  
                                                   u3545 1377  
                                                   u3641 1EDA  
                                                   u5217 0EFE  
                                                   u2770 1125  
                                                   u2930 01E6  
                                                   u2850 0114  
                                                   u3730 1604  
                                                   u4610 0BFF  
                                                   u4530 0B77  
                                                   u4370 09E4  
                                                   u4290 13BB  
                                                   u3490 1EF7  
                                                   u3650 1F02  
                                                   u3810 0950  
                                                   u2771 1124  
                                                   u2931 01E5  
                                                   u2851 0113  
                                                   u3731 1603  
                                                   u4611 0BFE  
                                                   u4531 0B76  
                                                   u4515 0B64  
                                                   u4371 09E3  
                                                   u4291 13BA  
                                                   u4275 139D  
                                                   u3491 1EF6  
                                                   u3651 1F01  
                                                   u3811 094E  
                                                   u5227 0F0B  
                                                   u5147 0C43  
                                                   u4620 12E5  
                                                   u2780 112F  
                                                   u2940 01EB  
                                                   u2860 0147  
                                                   u3740 1635  
                                                   u4540 0B8B  
                                                   u4460 0B23  
                                                   u4380 09E9  
                                                   u3580 1105  
                                                   u3660 1F08  
                                                   u3900 09D0  
                                                   u3820 0951  
                                                   u4700 1715  
                                                   _PMD0 0796  
                                                   u4621 12E4  
                                                   u2781 112E  
                                                   u2765 1119  
                                                   u2941 01EA  
                                                   u2861 0146  
                                                   u3741 1634  
                                                   u3725 15EE  
                                                   u4605 0BE1  
                                                   u4541 0B8A  
                                                   u4445 0AA6  
                                                   u4381 09E8  
                                                   u3581 1104  
                                                   u3565 10F0  
                                                   u3661 1F07  
                                                   u3901 09CF  
                                                   u4701 1714  
                                                   u5237 0F1F  
                                                   u5157 0D24  
                                                   _PMD1 0797  
                                                   u2950 01FE  
                                                   u2870 0153  
                                                   u3750 164B  
                                                   u3590 1FC1  
                                                   u4550 0B92  
                                                   u4470 0B3A  
                                                   u4390 0A06  
                                                   u4630 1F91  
                                                   u4710 14E7  
                                                   u3670 1F10  
                                                   u3910 174D  
                                                   u3830 097F  
                                                   _PMD2 0798  
                                                   u2695 1150  
                                                   u2951 01FD  
                                                   u2871 0152  
                                                   u3751 164A  
                                                   u3591 1FC0  
                                                   u4551 0B91  
                                                   u4455 0AD1  
                                                   u4391 0A05  
                                                   u4631 1F90  
                                                   u4711 14E6  
                                                   u3575 10F7  
                                                   u3671 1F0F  
                                                   u3911 174B  
                                                   u3831 097D  
                                                   u5247 0F7F  
                                                   u5167 0D73  
                                                   _PMD3 0799  
                                                   u2960 0211  
                                                   u2880 016D  
                                                   u4560 0B98  
                                                   u3760 1042  
                                                   u4720 150D  
                                                   u4800 10B3  
                                                   u3680 1EB9  
                                                   u3920 174E  
                                                   u3840 0980  
                                                   u4640 1667  
                                                   _PMD4 079A  
                                                   u4625 12E1  
                                                   u2785 112B  
                                                   u2961 0210  
                                                   u2881 016C  
                                                   u4561 0B97  
                                                   u4465 0B1F  
                                                   u3761 1041  
                                                   u5257 1020  
                                                   u4721 150C  
                                                   u3681 1EB8  
                                                   u4641 1666  
                                                   u5177 0D8F  
                                                   _PMD5 079B  
                                                   u2970 021C  
                                                   u2890 017C  
                                                   u4570 0BA4  
                                                   u4730 1533  
                                                   u4810 1080  
                                                   u3690 1EBF  
                                                   u3930 177C  
                                                   u3850 0987  
                                                   u3770 08ED  
                                                   u4650 1670  
                                                   _PMD6 079C  
                                                   u2795 1134  
                                                   u2971 021B  
                                                   u2955 01FA  
                                                   u2891 017B  
                                                   u3755 1647  
                                                   u4571 0BA3  
                                                   u4475 0B36  
                                                   u5267 102B  
                                                   u4731 1532  
                                                   u3691 1EBE  
                                                   u3931 177A  
                                                   u3915 1748  
                                                   u3851 0986  
                                                   u3771 08EB  
                                                   u4651 166F  
                                                   u5187 0DDB  
                                                   _PMD7 079D  
                                                   u2980 022E  
                                                   u4820 148A  
                                                   u4580 0BB2  
                                                   u4740 156B  
                                                   u4900 11BD  
                                                   u3940 177D  
                                                   u3860 098C  
                                                   u3780 08EE  
                                                   u4660 16A0  
                                                   u2981 022D  
                                                   u2965 020D  
                                                   u4485 0B45  
                                                   u5277 1F44  
                                                   u3765 103E  
                                                   u4741 156A  
                                                   u4901 11BC  
                                                   u3861 098B  
                                                   u4661 169F  
                                                   u5197 0E91  
                                                   u2990 0248  
                                                   u4590 0BCD  
                                                   u4750 1067  
                                                   u3950 17B0  
                                                   u3870 0991  
                                                   u3790 091C  
                                                   u4670 16A9  
                                                   u2991 0247  
                                                   u4591 0BCC  
                                                   u4495 0B58  
                                                   u5287 1054  
                                                   u3951 17AE  
                                                   u3871 0990  
                                                   u3791 091A  
                                                   u3775 08E8  
                                                   u4671 16A8  
                                                   u4760 1251  
                                                   u4840 05E9  
                                                   u3960 17B1  
                                                   u3880 0996  
                                                   u4680 16E1  
                                                   u4761 1250  
                                                   u4825 1486  
                                                   u4585 0BAE  
                                                   u5297 1E4A  
                                                   u3881 0995  
                                                   u4681 16E0  
                                                   u4770 1256  
                                                   u4850 05F7  
                                                   u3970 17B8  
                                                   u3890 09C6  
                                                   u4690 16FB  
                                                   u4771 1255  
                                                   u4595 0BC9  
                                                   u3971 17B7  
                                                   u3891 09C5  
                                                   u4691 16FA  
                                                   u4780 1267  
                                                   u3980 17BD  
                                                   u4781 1266  
                                                   u4845 05E5  
                                                   u3981 17BC  
                                                   u4790 126C  
                                                   u4870 0678  
                                                   u3990 17C2  
                                                   u4950 0C9A  
                                                   u4791 126B  
                                                   u4855 05F3  
                                                   u3991 17C1  
                                                   u4951 0C99  
                                                   u4880 0686  
                                                   u4960 0D10  
                                                   u4961 0D0F  
                                                   u4970 0D5F  
                                                   u4875 0674  
                                                   u4971 0D5E  
                                                   u4980 0DCB  
                                                   u4885 0682  
                                                   u4981 0DCA  
                                                   u4990 0E16  
                                                   u4991 0E15  
                                                   _WPUA 1F39  
                                                   _WPUC 1F4F  
                                          _EUSART1_Write 1E2D  
                                                   _main 0C0F  
                                                   mcp0b 0615  
                                                   mcp1b 06A4  
                                                   mcp2b 149C  
                                                   mcp0z 0624  
                                                   mcp1z 06B3  
                                                   mcp2z 14AB  
                                                   fsr0h 0005  
                                                   fsr1h 0007  
                                                   indf0 0000  
                                                   fsr0l 0004  
                                                   indf1 0001  
                                                   fsr1l 0006  
                                                   btemp 007E  
                              ??_reset_single_click_flag 0020  
                                                   start 0069  
                                        _update_mybutton 164C  
                                      ___bmul@multiplier 0023  
                                            i1_get_ticks 1DAE  
                                           ?_dump_buffer 0052  
                                           ?_measurement 0052  
                          __end_of_OSCILLATOR_Initialize 1DC0  
                                          ___fltol@sign1 004B  
                                                  ?_main 0070  
                                                  STR_10 18AE  
                                                  STR_11 18D3  
                                                  STR_20 1A14  
                                                  STR_12 1A50  
                                                  STR_21 1A14  
                                                  STR_13 1A56  
                                                  STR_14 1A5C  
                                                  STR_22 19E3  
                                                  STR_30 1972  
                                                  STR_15 1A5D  
                                                  STR_23 19F0  
                                                  STR_31 193A  
                                                  STR_16 1A60  
                                                  STR_32 1A43  
                                                  STR_24 19C1  
                                                  STR_17 1885  
                                                  STR_25 19D2  
                                                  STR_33 199F  
                                                  STR_18 1A4A  
                                                  STR_34 19B0  
                                                  STR_26 1860  
                                                  STR_27 1A29  
                                                  STR_28 1A09  
                                                  STR_29 191B  
                                        __end_of___flmul 0C0F  
                                    ___is_double_click@b 002F  
                                        __end_of___fltol 13F2  
                                           _crc16_modbus 1327  
                                        __end_of___lwdiv 1180  
                         ??_calculate_crc_and_fill_array 002F  
                                                  i1l321 1DB6  
                                                  i1l270 12AB  
                                                  i1l265 12D1  
                                                  i1l505 0067  
                                        __end_of___lwmod 1143  
                                                  i1l268 12CF  
                            send_measured_command@F10562 01C0  
                                                  _OSCEN 0891  
                                                  u483m0 14A5  
                                                  u483m1 14AB  
                                                  _TMR0H 059D  
                                                  _TMR0L 059C  
                                                  u486m0 061E  
                                                  u486m1 0624  
                                                  u489m0 06AD  
                                                  u489m1 06B3  
                                                  _TRISA 0012  
                                           ?_init_button 0070  
                                                  _TRISC 0014  
                                    ___lmul@multiplicand 0024  
                         save_top_adc_point@sensor_value 0033  
                                       ?_monitoring_sync 0052  
                                __end_of_dump_memory_map 1E02  
                                  update_mybutton@signal 0031  
                                        __end_of_dpowers 1A29  
                                        __end_of_isalpha 1F15  
                                        __end_of_isdigit 1E8A  
                                                  _ticks 0078  
                                                  _putch 1E21  
                                     measured_adc@F10595 0340  
                        calculate_crc_and_fill_array@crc 0030  
                                        __end_of_isspace 1EDE  
                                   get_measured_value@ph 0066  
                                         ?_EUSART1_Write 0070  
                                        __end_of_isprint 1E77  
                                        __end_of_isupper 1E9D  
                                   main@b2_clicked_count 0120  
                           ___is_double_click@condition1 002C  
                                      monitoring_sync@b1 0054  
                           ___is_double_click@condition2 002D  
                                      monitoring_sync@b2 0055  
                           ___is_double_click@condition3 002E  
                                                  status 0003  
                                                  wtemp0 007E  
                                        __end_of_toupper 1EC5  
                                        __initialization 006B  
                                      ??_is_single_click 0020  
                                           __end_of_main 1000  
                           ___is_single_click@condition1 002C  
                           ___is_single_click@condition2 002D  
                           ___is_single_click@condition3 002E  
                           ___is_single_click@condition4 002F  
                                      ___is_single_click 08BE  
                                          ?_measured_adc 0070  
                            ?_INTERRUPT_InterruptManager 0070  
                                     ?___is_single_click 0020  
                                                 ??_main 00C0  
                        __end_of_reset_single_click_flag 1DE4  
                              i2c_slave_interrupt@isNack 0072  
                              i2c_slave_interrupt@isRead 0071  
                                         _i2c_slave_init 1F72  
                                    ??___is_single_click 0024  
                                          dispatch@state 0026  
                              get_measured_value@payload 005E  
                        monitoring_sync@b2_clicked_count 0057  
                                                 _ANSELA 1F38  
                                                 ?_putch 0070  
                                                 _ANSELC 1F4E  
                                                 _T0CON0 059E  
                                                 _T0CON1 059F  
                                                 _RC1REG 0119  
                                                 _RC0PPS 1F20  
                                                 _RC1PPS 1F21  
                                                 _RA5PPS 1F15  
                                                 _RC1STA 011D  
                                                 _RC3PPS 1F23  
                                __end_of_update_mybutton 171E  
                                                 _RC5PPS 1F25  
                                                 _ODCONA 1F3A  
                                                 _ODCONC 1F50  
                                                 i1l4661 12A6  
                                                 i1l4653 1290  
                                                 i1l4645 127F  
                                                 i1l4671 12BA  
                                                 i1l4655 1295  
                                                 i1l4663 12A8  
                                                 i1l4647 1288  
                                                 i1l4673 12C1  
                                                 i1l4665 12AE  
                                                 i1l4657 129C  
                                                 i1l4649 128D  
                                                 i1l4667 12B1  
                                                 i1l4659 12A0  
                                                 i1l4683 1DAE  
                                                 i1l4669 12B4  
                                                 i1l4677 12C3  
                                                 i1l4941 0014  
                                                 i1l4951 0040  
                                                 i1l4943 001A  
                                                 i1l4935 0006  
                                                 i1l4961 0058  
                                                 i1l4953 0041  
                                                 i1l4945 0036  
                                                 i1l4937 000B  
                                                 i1l4963 0060  
                                                 i1l4955 0044  
                                                 i1l4947 0038  
                                                 i1l4939 000C  
                                                 i1l4965 0064  
                                                 i1l4957 0049  
                                                 i1l4949 003B  
                                                 i1l4959 0055  
                                                 _INLVLA 1F3C  
                                                 _INLVLC 1F52  
                                                 u505_20 000B  
                                                 u505_21 000A  
                                                 u506_20 001A  
                                                 u506_21 0019  
                                                 u507_20 0036  
                                                 u507_21 0035  
                                                 u508_20 0040  
                                                 u508_21 003F  
                                    _i2c_slave_interrupt 127F  
                                                 u509_20 0049  
                                                 u509_21 0048  
                                                 u491_20 128D  
                                                 u491_21 128C  
                                                 u492_20 1295  
                                                 u492_21 1294  
                                                 _OSCFRQ 0893  
                                                 u493_20 12A6  
                                                 u493_21 12A5  
                                                 u494_20 12BA  
                                                 u494_21 12B9  
                                                 _TX1REG 011A  
                                                 _TX1STA 011E  
                                        _EUSART1_Write_1 1EDE  
                              __end_of___is_single_click 09D4  
                                     _enable_uart_printf 1D9D  
                                       __end_of_dispatch 127F  
                                                 ___bmul 1001  
                                                 ___lmul 10DA  
                                                 ___wmul 1F52  
                                              ??___flmul 0031  
                                              ??___fltol 0047  
                                         ??_measured_adc 0052  
                                              ??___lwdiv 0024  
                           dispatch@b2_clicked_count_ptr 0023  
                                              ??___lwmod 002C  
                                   ?_i2c_slave_interrupt 0070  
   set_device_serial_number_to_i2c_slave_memorymap@value 003D  
                                                 _printf 00CE  
                                    ?_enable_uart_printf 0070  
                                                 main@b1 0131  
                                                 main@b2 014C  
                                        _currentRegister 007C  
                                 __end_of_i2c_slave_init 1F92  
                                                 _strtol 06EE  
                       calculate_crc_and_fill_array@data 0032  
                                     _save_top_adc_point 10A7  
                                         _PMD_Initialize 1DE4  
                                              ??_isalpha 0022  
                                              ??_isdigit 0020  
                                     main@prev_ticks_btn 016B  
                                              ??_isspace 0020  
                                              ??_isprint 0020  
                          __end_of_save_bottom_adc_point 10A7  
                                              ??_isupper 0020  
                            i2c_slave_set_register@value 0020  
                                       ?_dump_memory_map 0070  
                                        ??_EUSART1_Write 0020  
                              ?_Disable_Global_Interrupt 0070  
                                    ?_save_top_adc_point 0033  
                                              ??_toupper 0020  
                                ?_get_measured_adc_value 0070  
                                  ___is_single_click@now 0020  
                                      _SYSTEM_Initialize 1DEE  
                                   ??_enable_uart_printf 0020  
                                __end_of__initialization 00CA  
                                ??_reset_long_press_flag 0020  
                                      ??___is_long_press 0024  
                                     ?_SYSTEM_Initialize 0070  
                                             ___fltol@f1 0043  
                                    ___bmul@multiplicand 0020  
                                         __pcstackCOMMON 0070  
                                           __pidataBANK1 07F8  
                                           __pidataBANK3 1F92  
                                           __pidataBANK5 11FE  
                                           __pidataBANK6 11BE  
                                    ??_SYSTEM_Initialize 0020  
                                   ??_save_top_adc_point 0034  
                             __end_of_get_measured_value 06EE  
                                  ??_i2c_slave_interrupt 0070  
                                          __end_of_putch 1E2D  
                                 __end_of_PMD_Initialize 1DEE  
                                        ?_i2c_slave_init 0070  
                                       ??_calculate_diff 0028  
                         __end_of_get_measured_adc_value 14DD  
                              __end_of_SYSTEM_Initialize 1DF8  
                                                ??_putch 0020  
                                          _is_long_press 1DC0  
                                __end_of_EUSART1_Write_1 1EF8  
                                     _enable_tx_transmit 1E46  
                                             __pbssBANK0 006F  
                                             __pbssBANK1 00C4  
                                             __pbssBANK2 0167  
                                             __pbssBANK3 01A0  
                                             __pbssBANK4 0220  
                                             __pbssBANK7 03A0  
                                       ?_update_mybutton 0031  
                                         _rxbuffer_index 007D  
                                    ?_enable_tx_transmit 0070  
                 save_top_adc_point@save_top_adc_command 0035  
                                      __end_of__Umul8_16 1FD6  
                                             __pmaintext 0C0F  
                                           ?i1_get_ticks 0070  
                                                ?___bmul 0020  
                                _LED_flashes_three_times 1017  
                                                ?___lmul 0020  
                                                ?___wmul 0020  
                                             __pintentry 0004  
                                    _get_ticks_with_lock 1E9D  
                                         ___lmul@product 0028  
                                                ?_printf 002E  
                                        ?_PMD_Initialize 0070  
                                  ___is_double_click@now 0020  
                                                ?_strtol 002C  
                                   ??_enable_tx_transmit 0020  
                                                _SP1BRGH 011C  
                                                _SP1BRGL 011B  
                                  _send_measured_command 0800  
                               ??_i2c_slave_set_register 0021  
                                                _OSCCON1 088D  
                                                _OSCCON3 088F  
                                           dump_buffer@i 005C  
                                           dump_buffer@j 005E  
                                           dump_buffer@p 005B  
                                                _OSCTUNE 0892  
                                                _SSP1ADD 018D  
                                                _SLRCONA 1F3B  
                                                _SLRCONC 1F51  
                                                _SSP1BUF 018C  
                                                _SSP1MSK 018E  
                                         ?_is_long_press 0070  
                                              ?_dispatch 0020  
                                   ?_get_ticks_with_lock 0020  
                                   __end_of_measured_adc 1074  
                                        _is_single_click 1DC9  
                       set_bottom_calibrate_point@F10591 02A0  
                               ?_Enable_Global_Interrupt 0070  
                                      __end_of_get_ticks 1E0C  
                                                ___flmul 09D4  
                                                ___fltol 1381  
                                       update_mybutton@b 003A  
                                                ___lwdiv 1143  
                                                ___lwmod 110E  
                                                __ptext1 1E54  
                                                __ptext2 164C  
                                                __ptext3 08BE  
                                                __ptext4 0816  
                                                __ptext5 171E  
                                                __ptext6 1E39  
                                                __ptext7 1180  
                                                __ptext8 06EE  
                                                __ptext9 1EB1  
  set_device_serial_number_to_i2c_slave_memorymap@buffer 003E  
                                      __end_of_hexpowers 1808  
                               dispatch@b1_clicked_count 0024  
                                                _dpowers 1A1F  
                                  _OSCILLATOR_Initialize 1DB7  
                                                _isalpha 1EF8  
                                                _isdigit 1E77  
                  i2c_slave_set_register@registerAddress 0021  
                               ??_PIN_MANAGER_Initialize 0020  
                                                _isspace 1EC5  
                                                _isprint 1E64  
                                                _isupper 1E8A  
                                  ??_get_ticks_with_lock 0024  
                                                clrloop0 1DA3  
                                                main@now 0122  
                                             ??_dispatch 0024  
                                                _toupper 1EB1  
                               ?_reset_single_click_flag 0070  
                                   end_of_initialization 00CA  
                                      __end_of_octpowers 1A09  
                                           init_button@b 0020  
                                      __end_of_tmr0_init 1E46  
       set_device_serial_number_to_i2c_slave_memorymap@i 0041  
                                       ?_EUSART1_Write_1 0021  
                                 get_measured_value@temp 006A  
                                                init_ram 1DA8  
                                         main@prev_ticks 0167  
                                                initloop 1DA9  
                               calculate_diff@prev_ticks 0024  
                   __end_of_calculate_crc_and_fill_array 1F33  
                           _calculate_crc_and_fill_array 1F15  
                              ??_LED_flashes_three_times 0020  
                                  main@rev_ticks_btn_391 00CC  
                                                printf@c 004F  
                                                printf@f 002E  
                               LED_flashes_three_times@i 0021  
                       __end_of_Disable_Global_Interrupt 1D9D  
                                                strtol@a 0035  
                                                strtol@c 003A  
                                                strtol@s 0039  
                                        crc16_modbus@crc 002C  
                                              _PORTAbits 000C  
                                        crc16_modbus@len 0020  
                                 ?_send_measured_command 0070  
                                __end_of_is_single_click 1DD2  
                                              _TRISAbits 0012  
                                        ??_is_long_press 0020  
                                        ___is_long_press 0816  
                                           strtol@endptr 002C  
                                    EUSART1_Write@txData 0020  
                                            ___flmul@grs 0037  
                                             dispatch@b1 0020  
                                             dispatch@b2 0021  
                        __end_of_Enable_Global_Interrupt 0004  
                                            printf@width 004D  
                                             _usart_init 1E54  
                          __end_of_reset_long_press_flag 1DDB  
                         get_measured_value@payload_temp 0062  
                          ?_calculate_crc_and_fill_array 002E  
                                       ??_i2c_slave_init 0020  
                                         __end_of___bmul 1017  
                                         __end_of___lmul 110E  
                                         __end_of___wmul 1F72  
                                 ?_OSCILLATOR_Initialize 0070  
                                         __end_of_printf 05CC  
                                    ___is_single_click@b 0030  
                                         __end_of_strtol 07F8  
                                    start_initialization 006B  
                                     _get_measured_value 05CC  
                     get_measured_adc_value@ph_adc_value 005E  
                             send_measured_command@txbuf 0026  
                                  _save_bottom_adc_point 1074  
                                  __end_of_EUSART1_Write 1E39  
                                    ?_get_measured_value 0070  
           save_bottom_adc_point@save_bottom_adc_command 0035  
                  i2c_slave_set_register_with_lock@value 0022  
                            __end_of_i2c_slave_interrupt 12D2  
                                 _i2c_slave_set_register 1E0C  
                                               ??___bmul 0021  
                                       ??_PMD_Initialize 0020  
                                               ??___lmul 0028  
                                          ??_dump_buffer 0054  
                                      ??_monitoring_sync 0058  
                                               ??___wmul 0024  
                                          ??_measurement 0053  
                                              __Umul8_16 1FB2  
                                            __pdataBANK1 00DA  
                                            __pdataBANK3 01C0  
                                            __pdataBANK5 02A0  
                                            __pdataBANK6 0320  
                                           _measured_adc 1043  
                                   ??_get_measured_value 0052  
                                __end_of___is_long_press 08BE  
                                               ??_printf 003A  
                                          ?_crc16_modbus 0020  
                                          crc16_modbus@i 0028  
                                          crc16_modbus@j 002A  
                                               ??_strtol 0030  
                                          ??_init_button 0020  
                          get_measured_adc_value@payload 005A  
                               _Disable_Global_Interrupt 1D9B  
                                              ___flmul@a 002D  
                                              ___flmul@b 0029  
                                            __pbssCOMMON 0078  
                                              ___latbits 0002  
                                          __pcstackBANK0 0020  
                                          __pcstackBANK1 00A0  
                                          __pcstackBANK2 0120  
                                       ?_is_single_click 0070  
                                           _isalpha$1921 0022  
                   calculate_crc_and_fill_array@data_len 002E  
                                     update_mybutton@now 0032  
                                           _isdigit$1887 0020  
                         get_measured_value@sensor_value 006E  
                                           _currentState 00D8  
                                            ?_usart_init 0070  
                                       ___lwdiv@dividend 0022  
                                 _PIN_MANAGER_Initialize 1FD6  
                                               ?___flmul 0029  
                                               ?___fltol 0043  
                                             ?__Umul8_16 0020  
                                               ?___lwdiv 0020  
                      save_bottom_adc_point@sensor_value 0033  
                                               ?___lwmod 0028  
                                         ??_crc16_modbus 0022  
                           ??_INTERRUPT_InterruptManager 0074  
                                              _get_ticks 1E02  
                                       is_single_click@b 0020  
                                               _BAUD1CON 011F  
                                    __end_of_dump_buffer 164C  
                                    __end_of_measurement 1F52  
                                               ?_isalpha 0070  
                                               ?_isdigit 0070  
                               dispatch@b2_clicked_count 0025  
                                 main@prev_ticks_monitor 00D0  
                                               ?_isspace 0070  
                                               ?_isprint 0070  
                                               ?_isupper 0070  
                                 ?_save_bottom_adc_point 0033  
                                      dump_buffer@buffer 005A  
                                              _hexpowers 1800  
                                       ___lwdiv@quotient 0025  
                                               ?_toupper 0070  
                                    __end_of_init_button 1463  
                                         ___wmul@product 0024  
                                               _LATCbits 001A  
                                              clear_ram0 1DA2  
                                              _octpowers 19FD  
                                              _tmr0_init 1E39  
                                         _uart_rx_states 006F  
                                               _PIE0bits 0716  
                                        i2c_slave_init@i 0021  
                                               _PIE3bits 0719  
                                               _PIR0bits 070C  
                                               _PIR3bits 070F  
                                              _slaveData 0220  
                                               _RX1DTPPS 1ECB  
                            delay_state@prev_ticks_delay 00C4  
                                               _SSP1CON1 0190  
                                               _SSP1CON2 0191  
                                      ??_dump_memory_map 0060  
                                               _SSP1STAT 018F  
                                ??_send_measured_command 0025  
                                             ?_get_ticks 0020  
                                       ?___is_long_press 0020  
                                      ___wmul@multiplier 0020  
                               ??_get_measured_adc_value 0052  
                                 reset_long_press_flag@b 0020  
                            __end_of_get_ticks_with_lock 1EB1  
                                             printf@flag 0050  
                                             printf@prec 004C  
                                              main@state 0126  
                                           _isspace$1924 0020  
                          set_top_calibrate_point@F10588 02C0  
                                      ___is_double_click 171E  
                                      ___lmul@multiplier 0020  
                                     ?___is_double_click 0020  
                                         is_long_press@b 0020  
                                       main@sensor_value 0127  
                               i2c_slave_interrupt@value 0073  
                                           _isprint$1890 0020  
                                             ?_tmr0_init 0070  
                                    ??___is_double_click 0024  
                                            _dump_buffer 1585  
                                   EUSART1_Read_1@F10504 03A0  
                                ??_OSCILLATOR_Initialize 0020  
                                            ??__Umul8_16 0022  
                                            _measurement 1F33  
                                      ??_update_mybutton 0036  
                                             _ANSELAbits 1F38  
                                           _isupper$1927 0020  
                                            _init_button 13F2  
                              __end_of___is_double_click 1800  
                                        ___lwdiv@divisor 0020  
                                        ___lwdiv@counter 0027  
                                               __ptext10 1EC5  
                                               __ptext11 1EF8  
                                               __ptext20 14DD  
                                               __ptext12 1E8A  
                                               __ptext21 1DDB  
                                               __ptext13 10DA  
                                               __ptext30 1E46  
                                               __ptext22 1DD2  
                                               __ptext14 1E16  
                                               __ptext31 1EDE  
                                               __ptext23 1DC9  
                                               __ptext15 1E0C  
                                               __ptext40 1FB2  
                                               __ptext32 1E2D  
                                               __ptext24 1DC0  
                                               __ptext16 10A7  
                                               __ptext41 1463  
                                               __ptext33 13F2  
                                               __ptext25 1017  
                                               __ptext17 1074  
                                               __ptext50 1001  
                                               __ptext42 1DF8  
                                               __ptext34 1F72  
                                               __ptext26 1F33  
                                               __ptext18 1F15  
                                               __ptext51 1E64  
                                               __ptext43 1585  
                                               __ptext35 1E9D  
                                               __ptext27 0800  
                                               __ptext19 1327  
                                               __ptext52 123E  
                                               __ptext44 00CE  
                                               __ptext36 1E02  
                                               __ptext28 1043  
                                               __ptext61 1DAE  
                                               __ptext53 12D2  
                                               __ptext45 1E21  
                                               __ptext37 05CC  
                                               __ptext29 1D9D  
                                               __ptext62 127F  
                                               __ptext54 1DEE  
                                               __ptext46 1E77  
                                               __ptext38 1381  
                                               __ptext55 1DE4  
                                               __ptext47 1F52  
                                               __ptext39 09D4  
                                               __ptext56 1FD6  
                                               __ptext48 110E  
                                               __ptext57 1DB7  
                                               __ptext49 1143  
                                               __ptext58 0002  
                                               __ptext59 1D9B  
                                           _SSP1CON1bits 0190  
                                           _SSP1CON2bits 0191  
                                  __end_of_is_long_press 1DC9  
                                               _dispatch 123E  
                              get_ticks_with_lock@result 0024  
                                   main@b1_clicked_count 0121  
                               ?_LED_flashes_three_times 0070  
                                        _monitoring_sync 14DD  
                                   __end_of_crc16_modbus 1381  
                               reset_single_click_flag@b 0020  
                                ?_i2c_slave_set_register 0020  
                             ___is_long_press@condition1 002C  
                             ___is_long_press@condition2 002D  
                                          _uart_rx_ticks 00D4  
__end_of_set_device_serial_number_to_i2c_slave_memorymap 11BE  
      ??_set_device_serial_number_to_i2c_slave_memorymap 003B  
       ?_set_device_serial_number_to_i2c_slave_memorymap 0070  
        _set_device_serial_number_to_i2c_slave_memorymap 1180  
                                  _uart_rx_package_event 016F  
                     get_measured_adc_value@sensor_value 0060  
                                          ??i1_get_ticks 0074  
                                  _reset_long_press_flag 1DD2  
                                               int$flags 007E  
                                             strtol@base 002D  
                             ??_Disable_Global_Interrupt 0020  
                           dispatch@b1_clicked_count_ptr 0022  
                                             strtol@sign 0034  
                     __end_of_INTERRUPT_InterruptManager 0069  
                             _INTERRUPT_InterruptManager 0004  
                                              printf@idx 0044  
                                              printf@len 0047  
                                               _rxbuffer 01A0  
                                              printf@val 004A  
                                           _SSP1STATbits 018F  
                       measured_adc@measured_adc_command 00A0  
                                            ??_get_ticks 0024  
        i2c_slave_set_register_with_lock@registerAddress 0023  
                               save_top_adc_point@F10607 00DA  
                                _Enable_Global_Interrupt 0002  
                                              putch@data 0020  
                                             _INTCONbits 000B  
                        monitoring_sync@b1_clicked_count 0056  
                                         __pstringtext10 193A  
                                         __pstringtext11 1957  
                                         __pstringtext20 1A09  
                                         __pstringtext12 1972  
                                         __pstringtext21 1A14  
                                         __pstringtext13 1989  
                                         __pstringtext30 1A60  
                                         __pstringtext22 1A29  
                                         __pstringtext14 199F  
                                         __pstringtext31 0000  
                                         __pstringtext23 1A32  
                                         __pstringtext15 19B0  
                                         __pstringtext24 1A3B  
                                         __pstringtext16 19C1  
                                         __pstringtext25 1A43  
                                         __pstringtext17 19D2  
                                         __pstringtext26 1A4A  
                                         __pstringtext18 19E3  
                                         __pstringtext27 1A50  
                                         __pstringtext19 19F0  
                                         __pstringtext28 1A56  
                                         __pstringtext29 1A5C  
                                               isalpha@c 0023  
                                        main@prev_ticks2 00C8  
                                               isdigit@c 0021  
                             __end_of_enable_uart_printf 1DA2  
                                               intlevel1 0000  
                                        _dump_buffer$878 0058  
                         __end_of_i2c_slave_set_register 1E16  
                                         _calculate_diff 12D2  
                                       ___lwmod@dividend 002A  
                                               isspace@c 0021  
                                ?_PIN_MANAGER_Initialize 0070  
                                               isprint@c 0021  
                                           ??_usart_init 0020  
                                            ??_tmr0_init 0020  
                                               isupper@c 0021  
                                        dump_buffer@size 0052  
                                       measurement@value 0052  
                                       measurement@state 0054  
                                _reset_single_click_flag 1DDB  
                             __end_of_save_top_adc_point 10DA  
                                       EUSART1_Write_1@i 0023  
                                               printf@ap 0049  
                                               printf@cp 0045  
                               save_top_adc_point@states 003D  
                                      ??_EUSART1_Write_1 0022  
                                    __end_ofi1_get_ticks 1DB7  
                                          __pstringtext1 19FD  
                                          __pstringtext2 1A1F  
                                          __pstringtext3 1800  
                                          __pstringtext4 1860  
                                          __pstringtext5 1888  
                                          __pstringtext6 18AE  
                                          __pstringtext7 18D3  
                                          __pstringtext8 18F8  
                                          __pstringtext9 191B  
               __end_of_i2c_slave_set_register_with_lock 1E21  
                     ??_i2c_slave_set_register_with_lock 0023  
                      ?_i2c_slave_set_register_with_lock 0022  
                       _i2c_slave_set_register_with_lock 1E16  
                                            _printf$1604 0042  
                                            _printf$1597 003E  
                                            _printf$1598 0040  
                                 __Umul8_16@multiplicand 0020  
                                   monitoring_sync@state 0052  
                                ??_save_bottom_adc_point 0034  
                                             _SSP1DATPPS 1EC6  
                                             _SSP1CLKPPS 1EC5  
                                        ___lwmod@divisor 0028  
                                        ___lwmod@counter 002D  
                                               toupper@c 0021  
                                     __end_of_usart_init 1E64  
                                __end_of_monitoring_sync 1585  
                        __end_of_LED_flashes_three_times 1043  
                                       crc16_modbus@data 0027  
                                       crc16_modbus@poly 0025  
                                 __end_of_calculate_diff 1327  
                            save_bottom_adc_point@F10612 0320  
                         __end_of_PIN_MANAGER_Initialize 2000  
                                  EUSART1_Write_1@length 0021  
                                        _dump_memory_map 1DF8  
                                 _get_measured_adc_value 1463  
                                   __Umul8_16@multiplier 0028  
                                     calculate_diff@diff 0030  
                                   EUSART1_Write_1@txbuf 0024  
                                      calculate_diff@now 0020  
                                 ?_reset_long_press_flag 0070  
                                      __Umul8_16@product 0024  
                                      ___is_long_press@b 002E  
                                    ___is_long_press@now 0020  
